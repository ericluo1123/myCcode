

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Sat Mar 21 16:49:43 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1516
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,inline,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,inline,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,inline,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,inline,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,inline,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,inline,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	intentry,global,class=CODE,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    60                           	dabs	1,0x7E,2
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0090                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0095                     	;# 
    95  0096                     	;# 
    96  0097                     	;# 
    97  0099                     	;# 
    98  009A                     	;# 
    99  009B                     	;# 
   100  009B                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  0116                     	;# 
   108  0117                     	;# 
   109  011D                     	;# 
   110  018C                     	;# 
   111  018D                     	;# 
   112  018E                     	;# 
   113  0191                     	;# 
   114  0191                     	;# 
   115  0192                     	;# 
   116  0193                     	;# 
   117  0193                     	;# 
   118  0194                     	;# 
   119  0195                     	;# 
   120  0196                     	;# 
   121  0197                     	;# 
   122  0199                     	;# 
   123  019A                     	;# 
   124  019B                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019C                     	;# 
   129  019C                     	;# 
   130  019D                     	;# 
   131  019E                     	;# 
   132  019F                     	;# 
   133  020D                     	;# 
   134  0210                     	;# 
   135  0211                     	;# 
   136  0211                     	;# 
   137  0212                     	;# 
   138  0212                     	;# 
   139  0213                     	;# 
   140  0213                     	;# 
   141  0214                     	;# 
   142  0214                     	;# 
   143  0215                     	;# 
   144  0215                     	;# 
   145  0215                     	;# 
   146  0216                     	;# 
   147  0216                     	;# 
   148  0217                     	;# 
   149  0217                     	;# 
   150  0291                     	;# 
   151  0291                     	;# 
   152  0292                     	;# 
   153  0293                     	;# 
   154  0298                     	;# 
   155  0298                     	;# 
   156  0299                     	;# 
   157  029A                     	;# 
   158  0394                     	;# 
   159  0395                     	;# 
   160  0396                     	;# 
   161  0FE4                     	;# 
   162  0FE5                     	;# 
   163  0FE6                     	;# 
   164  0FE7                     	;# 
   165  0FE8                     	;# 
   166  0FE9                     	;# 
   167  0FEA                     	;# 
   168  0FEB                     	;# 
   169  0FED                     	;# 
   170  0FEE                     	;# 
   171  0FEF                     	;# 
   172  0000                     	;# 
   173  0001                     	;# 
   174  0002                     	;# 
   175  0003                     	;# 
   176  0004                     	;# 
   177  0005                     	;# 
   178  0006                     	;# 
   179  0007                     	;# 
   180  0008                     	;# 
   181  0009                     	;# 
   182  000A                     	;# 
   183  000B                     	;# 
   184  000C                     	;# 
   185  000D                     	;# 
   186  000E                     	;# 
   187  0010                     	;# 
   188  0011                     	;# 
   189  0012                     	;# 
   190  0015                     	;# 
   191  0016                     	;# 
   192  0016                     	;# 
   193  0017                     	;# 
   194  0018                     	;# 
   195  0019                     	;# 
   196  001A                     	;# 
   197  001B                     	;# 
   198  001C                     	;# 
   199  008C                     	;# 
   200  008D                     	;# 
   201  008E                     	;# 
   202  0090                     	;# 
   203  0091                     	;# 
   204  0092                     	;# 
   205  0095                     	;# 
   206  0096                     	;# 
   207  0097                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009B                     	;# 
   212  009C                     	;# 
   213  009D                     	;# 
   214  009E                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  0116                     	;# 
   219  0117                     	;# 
   220  011D                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  018E                     	;# 
   224  0191                     	;# 
   225  0191                     	;# 
   226  0192                     	;# 
   227  0193                     	;# 
   228  0193                     	;# 
   229  0194                     	;# 
   230  0195                     	;# 
   231  0196                     	;# 
   232  0197                     	;# 
   233  0199                     	;# 
   234  019A                     	;# 
   235  019B                     	;# 
   236  019B                     	;# 
   237  019B                     	;# 
   238  019B                     	;# 
   239  019C                     	;# 
   240  019C                     	;# 
   241  019D                     	;# 
   242  019E                     	;# 
   243  019F                     	;# 
   244  020D                     	;# 
   245  0210                     	;# 
   246  0211                     	;# 
   247  0211                     	;# 
   248  0212                     	;# 
   249  0212                     	;# 
   250  0213                     	;# 
   251  0213                     	;# 
   252  0214                     	;# 
   253  0214                     	;# 
   254  0215                     	;# 
   255  0215                     	;# 
   256  0215                     	;# 
   257  0216                     	;# 
   258  0216                     	;# 
   259  0217                     	;# 
   260  0217                     	;# 
   261  0291                     	;# 
   262  0291                     	;# 
   263  0292                     	;# 
   264  0293                     	;# 
   265  0298                     	;# 
   266  0298                     	;# 
   267  0299                     	;# 
   268  029A                     	;# 
   269  0394                     	;# 
   270  0395                     	;# 
   271  0396                     	;# 
   272  0FE4                     	;# 
   273  0FE5                     	;# 
   274  0FE6                     	;# 
   275  0FE7                     	;# 
   276  0FE8                     	;# 
   277  0FE9                     	;# 
   278  0FEA                     	;# 
   279  0FEB                     	;# 
   280  0FED                     	;# 
   281  0FEE                     	;# 
   282  0FEF                     	;# 
   283  0000                     	;# 
   284  0001                     	;# 
   285  0002                     	;# 
   286  0003                     	;# 
   287  0004                     	;# 
   288  0005                     	;# 
   289  0006                     	;# 
   290  0007                     	;# 
   291  0008                     	;# 
   292  0009                     	;# 
   293  000A                     	;# 
   294  000B                     	;# 
   295  000C                     	;# 
   296  000D                     	;# 
   297  000E                     	;# 
   298  0010                     	;# 
   299  0011                     	;# 
   300  0012                     	;# 
   301  0015                     	;# 
   302  0016                     	;# 
   303  0016                     	;# 
   304  0017                     	;# 
   305  0018                     	;# 
   306  0019                     	;# 
   307  001A                     	;# 
   308  001B                     	;# 
   309  001C                     	;# 
   310  008C                     	;# 
   311  008D                     	;# 
   312  008E                     	;# 
   313  0090                     	;# 
   314  0091                     	;# 
   315  0092                     	;# 
   316  0095                     	;# 
   317  0096                     	;# 
   318  0097                     	;# 
   319  0099                     	;# 
   320  009A                     	;# 
   321  009B                     	;# 
   322  009B                     	;# 
   323  009C                     	;# 
   324  009D                     	;# 
   325  009E                     	;# 
   326  010C                     	;# 
   327  010D                     	;# 
   328  010E                     	;# 
   329  0116                     	;# 
   330  0117                     	;# 
   331  011D                     	;# 
   332  018C                     	;# 
   333  018D                     	;# 
   334  018E                     	;# 
   335  0191                     	;# 
   336  0191                     	;# 
   337  0192                     	;# 
   338  0193                     	;# 
   339  0193                     	;# 
   340  0194                     	;# 
   341  0195                     	;# 
   342  0196                     	;# 
   343  0197                     	;# 
   344  0199                     	;# 
   345  019A                     	;# 
   346  019B                     	;# 
   347  019B                     	;# 
   348  019B                     	;# 
   349  019B                     	;# 
   350  019C                     	;# 
   351  019C                     	;# 
   352  019D                     	;# 
   353  019E                     	;# 
   354  019F                     	;# 
   355  020D                     	;# 
   356  0210                     	;# 
   357  0211                     	;# 
   358  0211                     	;# 
   359  0212                     	;# 
   360  0212                     	;# 
   361  0213                     	;# 
   362  0213                     	;# 
   363  0214                     	;# 
   364  0214                     	;# 
   365  0215                     	;# 
   366  0215                     	;# 
   367  0215                     	;# 
   368  0216                     	;# 
   369  0216                     	;# 
   370  0217                     	;# 
   371  0217                     	;# 
   372  0291                     	;# 
   373  0291                     	;# 
   374  0292                     	;# 
   375  0293                     	;# 
   376  0298                     	;# 
   377  0298                     	;# 
   378  0299                     	;# 
   379  029A                     	;# 
   380  0394                     	;# 
   381  0395                     	;# 
   382  0396                     	;# 
   383  0FE4                     	;# 
   384  0FE5                     	;# 
   385  0FE6                     	;# 
   386  0FE7                     	;# 
   387  0FE8                     	;# 
   388  0FE9                     	;# 
   389  0FEA                     	;# 
   390  0FEB                     	;# 
   391  0FED                     	;# 
   392  0FEE                     	;# 
   393  0FEF                     	;# 
   394  0000                     	;# 
   395  0001                     	;# 
   396  0002                     	;# 
   397  0003                     	;# 
   398  0004                     	;# 
   399  0005                     	;# 
   400  0006                     	;# 
   401  0007                     	;# 
   402  0008                     	;# 
   403  0009                     	;# 
   404  000A                     	;# 
   405  000B                     	;# 
   406  000C                     	;# 
   407  000D                     	;# 
   408  000E                     	;# 
   409  0010                     	;# 
   410  0011                     	;# 
   411  0012                     	;# 
   412  0015                     	;# 
   413  0016                     	;# 
   414  0016                     	;# 
   415  0017                     	;# 
   416  0018                     	;# 
   417  0019                     	;# 
   418  001A                     	;# 
   419  001B                     	;# 
   420  001C                     	;# 
   421  008C                     	;# 
   422  008D                     	;# 
   423  008E                     	;# 
   424  0090                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0099                     	;# 
   431  009A                     	;# 
   432  009B                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  010C                     	;# 
   438  010D                     	;# 
   439  010E                     	;# 
   440  0116                     	;# 
   441  0117                     	;# 
   442  011D                     	;# 
   443  018C                     	;# 
   444  018D                     	;# 
   445  018E                     	;# 
   446  0191                     	;# 
   447  0191                     	;# 
   448  0192                     	;# 
   449  0193                     	;# 
   450  0193                     	;# 
   451  0194                     	;# 
   452  0195                     	;# 
   453  0196                     	;# 
   454  0197                     	;# 
   455  0199                     	;# 
   456  019A                     	;# 
   457  019B                     	;# 
   458  019B                     	;# 
   459  019B                     	;# 
   460  019B                     	;# 
   461  019C                     	;# 
   462  019C                     	;# 
   463  019D                     	;# 
   464  019E                     	;# 
   465  019F                     	;# 
   466  020D                     	;# 
   467  0210                     	;# 
   468  0211                     	;# 
   469  0211                     	;# 
   470  0212                     	;# 
   471  0212                     	;# 
   472  0213                     	;# 
   473  0213                     	;# 
   474  0214                     	;# 
   475  0214                     	;# 
   476  0215                     	;# 
   477  0215                     	;# 
   478  0215                     	;# 
   479  0216                     	;# 
   480  0216                     	;# 
   481  0217                     	;# 
   482  0217                     	;# 
   483  0291                     	;# 
   484  0291                     	;# 
   485  0292                     	;# 
   486  0293                     	;# 
   487  0298                     	;# 
   488  0298                     	;# 
   489  0299                     	;# 
   490  029A                     	;# 
   491  0394                     	;# 
   492  0395                     	;# 
   493  0396                     	;# 
   494  0FE4                     	;# 
   495  0FE5                     	;# 
   496  0FE6                     	;# 
   497  0FE7                     	;# 
   498  0FE8                     	;# 
   499  0FE9                     	;# 
   500  0FEA                     	;# 
   501  0FEB                     	;# 
   502  0FED                     	;# 
   503  0FEE                     	;# 
   504  0FEF                     	;# 
   505  0000                     	;# 
   506  0001                     	;# 
   507  0002                     	;# 
   508  0003                     	;# 
   509  0004                     	;# 
   510  0005                     	;# 
   511  0006                     	;# 
   512  0007                     	;# 
   513  0008                     	;# 
   514  0009                     	;# 
   515  000A                     	;# 
   516  000B                     	;# 
   517  000C                     	;# 
   518  000D                     	;# 
   519  000E                     	;# 
   520  0010                     	;# 
   521  0011                     	;# 
   522  0012                     	;# 
   523  0015                     	;# 
   524  0016                     	;# 
   525  0016                     	;# 
   526  0017                     	;# 
   527  0018                     	;# 
   528  0019                     	;# 
   529  001A                     	;# 
   530  001B                     	;# 
   531  001C                     	;# 
   532  008C                     	;# 
   533  008D                     	;# 
   534  008E                     	;# 
   535  0090                     	;# 
   536  0091                     	;# 
   537  0092                     	;# 
   538  0095                     	;# 
   539  0096                     	;# 
   540  0097                     	;# 
   541  0099                     	;# 
   542  009A                     	;# 
   543  009B                     	;# 
   544  009B                     	;# 
   545  009C                     	;# 
   546  009D                     	;# 
   547  009E                     	;# 
   548  010C                     	;# 
   549  010D                     	;# 
   550  010E                     	;# 
   551  0116                     	;# 
   552  0117                     	;# 
   553  011D                     	;# 
   554  018C                     	;# 
   555  018D                     	;# 
   556  018E                     	;# 
   557  0191                     	;# 
   558  0191                     	;# 
   559  0192                     	;# 
   560  0193                     	;# 
   561  0193                     	;# 
   562  0194                     	;# 
   563  0195                     	;# 
   564  0196                     	;# 
   565  0197                     	;# 
   566  0199                     	;# 
   567  019A                     	;# 
   568  019B                     	;# 
   569  019B                     	;# 
   570  019B                     	;# 
   571  019B                     	;# 
   572  019C                     	;# 
   573  019C                     	;# 
   574  019D                     	;# 
   575  019E                     	;# 
   576  019F                     	;# 
   577  020D                     	;# 
   578  0210                     	;# 
   579  0211                     	;# 
   580  0211                     	;# 
   581  0212                     	;# 
   582  0212                     	;# 
   583  0213                     	;# 
   584  0213                     	;# 
   585  0214                     	;# 
   586  0214                     	;# 
   587  0215                     	;# 
   588  0215                     	;# 
   589  0215                     	;# 
   590  0216                     	;# 
   591  0216                     	;# 
   592  0217                     	;# 
   593  0217                     	;# 
   594  0291                     	;# 
   595  0291                     	;# 
   596  0292                     	;# 
   597  0293                     	;# 
   598  0298                     	;# 
   599  0298                     	;# 
   600  0299                     	;# 
   601  029A                     	;# 
   602  0394                     	;# 
   603  0395                     	;# 
   604  0396                     	;# 
   605  0FE4                     	;# 
   606  0FE5                     	;# 
   607  0FE6                     	;# 
   608  0FE7                     	;# 
   609  0FE8                     	;# 
   610  0FE9                     	;# 
   611  0FEA                     	;# 
   612  0FEB                     	;# 
   613  0FED                     	;# 
   614  0FEE                     	;# 
   615  0FEF                     	;# 
   616  0000                     	;# 
   617  0001                     	;# 
   618  0002                     	;# 
   619  0003                     	;# 
   620  0004                     	;# 
   621  0005                     	;# 
   622  0006                     	;# 
   623  0007                     	;# 
   624  0008                     	;# 
   625  0009                     	;# 
   626  000A                     	;# 
   627  000B                     	;# 
   628  000C                     	;# 
   629  000D                     	;# 
   630  000E                     	;# 
   631  0010                     	;# 
   632  0011                     	;# 
   633  0012                     	;# 
   634  0015                     	;# 
   635  0016                     	;# 
   636  0016                     	;# 
   637  0017                     	;# 
   638  0018                     	;# 
   639  0019                     	;# 
   640  001A                     	;# 
   641  001B                     	;# 
   642  001C                     	;# 
   643  008C                     	;# 
   644  008D                     	;# 
   645  008E                     	;# 
   646  0090                     	;# 
   647  0091                     	;# 
   648  0092                     	;# 
   649  0095                     	;# 
   650  0096                     	;# 
   651  0097                     	;# 
   652  0099                     	;# 
   653  009A                     	;# 
   654  009B                     	;# 
   655  009B                     	;# 
   656  009C                     	;# 
   657  009D                     	;# 
   658  009E                     	;# 
   659  010C                     	;# 
   660  010D                     	;# 
   661  010E                     	;# 
   662  0116                     	;# 
   663  0117                     	;# 
   664  011D                     	;# 
   665  018C                     	;# 
   666  018D                     	;# 
   667  018E                     	;# 
   668  0191                     	;# 
   669  0191                     	;# 
   670  0192                     	;# 
   671  0193                     	;# 
   672  0193                     	;# 
   673  0194                     	;# 
   674  0195                     	;# 
   675  0196                     	;# 
   676  0197                     	;# 
   677  0199                     	;# 
   678  019A                     	;# 
   679  019B                     	;# 
   680  019B                     	;# 
   681  019B                     	;# 
   682  019B                     	;# 
   683  019C                     	;# 
   684  019C                     	;# 
   685  019D                     	;# 
   686  019E                     	;# 
   687  019F                     	;# 
   688  020D                     	;# 
   689  0210                     	;# 
   690  0211                     	;# 
   691  0211                     	;# 
   692  0212                     	;# 
   693  0212                     	;# 
   694  0213                     	;# 
   695  0213                     	;# 
   696  0214                     	;# 
   697  0214                     	;# 
   698  0215                     	;# 
   699  0215                     	;# 
   700  0215                     	;# 
   701  0216                     	;# 
   702  0216                     	;# 
   703  0217                     	;# 
   704  0217                     	;# 
   705  0291                     	;# 
   706  0291                     	;# 
   707  0292                     	;# 
   708  0293                     	;# 
   709  0298                     	;# 
   710  0298                     	;# 
   711  0299                     	;# 
   712  029A                     	;# 
   713  0394                     	;# 
   714  0395                     	;# 
   715  0396                     	;# 
   716  0FE4                     	;# 
   717  0FE5                     	;# 
   718  0FE6                     	;# 
   719  0FE7                     	;# 
   720  0FE8                     	;# 
   721  0FE9                     	;# 
   722  0FEA                     	;# 
   723  0FEB                     	;# 
   724  0FED                     	;# 
   725  0FEE                     	;# 
   726  0FEF                     	;# 
   727  0000                     	;# 
   728  0001                     	;# 
   729  0002                     	;# 
   730  0003                     	;# 
   731  0004                     	;# 
   732  0005                     	;# 
   733  0006                     	;# 
   734  0007                     	;# 
   735  0008                     	;# 
   736  0009                     	;# 
   737  000A                     	;# 
   738  000B                     	;# 
   739  000C                     	;# 
   740  000D                     	;# 
   741  000E                     	;# 
   742  0010                     	;# 
   743  0011                     	;# 
   744  0012                     	;# 
   745  0015                     	;# 
   746  0016                     	;# 
   747  0016                     	;# 
   748  0017                     	;# 
   749  0018                     	;# 
   750  0019                     	;# 
   751  001A                     	;# 
   752  001B                     	;# 
   753  001C                     	;# 
   754  008C                     	;# 
   755  008D                     	;# 
   756  008E                     	;# 
   757  0090                     	;# 
   758  0091                     	;# 
   759  0092                     	;# 
   760  0095                     	;# 
   761  0096                     	;# 
   762  0097                     	;# 
   763  0099                     	;# 
   764  009A                     	;# 
   765  009B                     	;# 
   766  009B                     	;# 
   767  009C                     	;# 
   768  009D                     	;# 
   769  009E                     	;# 
   770  010C                     	;# 
   771  010D                     	;# 
   772  010E                     	;# 
   773  0116                     	;# 
   774  0117                     	;# 
   775  011D                     	;# 
   776  018C                     	;# 
   777  018D                     	;# 
   778  018E                     	;# 
   779  0191                     	;# 
   780  0191                     	;# 
   781  0192                     	;# 
   782  0193                     	;# 
   783  0193                     	;# 
   784  0194                     	;# 
   785  0195                     	;# 
   786  0196                     	;# 
   787  0197                     	;# 
   788  0199                     	;# 
   789  019A                     	;# 
   790  019B                     	;# 
   791  019B                     	;# 
   792  019B                     	;# 
   793  019B                     	;# 
   794  019C                     	;# 
   795  019C                     	;# 
   796  019D                     	;# 
   797  019E                     	;# 
   798  019F                     	;# 
   799  020D                     	;# 
   800  0210                     	;# 
   801  0211                     	;# 
   802  0211                     	;# 
   803  0212                     	;# 
   804  0212                     	;# 
   805  0213                     	;# 
   806  0213                     	;# 
   807  0214                     	;# 
   808  0214                     	;# 
   809  0215                     	;# 
   810  0215                     	;# 
   811  0215                     	;# 
   812  0216                     	;# 
   813  0216                     	;# 
   814  0217                     	;# 
   815  0217                     	;# 
   816  0291                     	;# 
   817  0291                     	;# 
   818  0292                     	;# 
   819  0293                     	;# 
   820  0298                     	;# 
   821  0298                     	;# 
   822  0299                     	;# 
   823  029A                     	;# 
   824  0394                     	;# 
   825  0395                     	;# 
   826  0396                     	;# 
   827  0FE4                     	;# 
   828  0FE5                     	;# 
   829  0FE6                     	;# 
   830  0FE7                     	;# 
   831  0FE8                     	;# 
   832  0FE9                     	;# 
   833  0FEA                     	;# 
   834  0FEB                     	;# 
   835  0FED                     	;# 
   836  0FEE                     	;# 
   837  0FEF                     	;# 
   838  0000                     	;# 
   839  0001                     	;# 
   840  0002                     	;# 
   841  0003                     	;# 
   842  0004                     	;# 
   843  0005                     	;# 
   844  0006                     	;# 
   845  0007                     	;# 
   846  0008                     	;# 
   847  0009                     	;# 
   848  000A                     	;# 
   849  000B                     	;# 
   850  000C                     	;# 
   851  000D                     	;# 
   852  000E                     	;# 
   853  0010                     	;# 
   854  0011                     	;# 
   855  0012                     	;# 
   856  0015                     	;# 
   857  0016                     	;# 
   858  0016                     	;# 
   859  0017                     	;# 
   860  0018                     	;# 
   861  0019                     	;# 
   862  001A                     	;# 
   863  001B                     	;# 
   864  001C                     	;# 
   865  008C                     	;# 
   866  008D                     	;# 
   867  008E                     	;# 
   868  0090                     	;# 
   869  0091                     	;# 
   870  0092                     	;# 
   871  0095                     	;# 
   872  0096                     	;# 
   873  0097                     	;# 
   874  0099                     	;# 
   875  009A                     	;# 
   876  009B                     	;# 
   877  009B                     	;# 
   878  009C                     	;# 
   879  009D                     	;# 
   880  009E                     	;# 
   881  010C                     	;# 
   882  010D                     	;# 
   883  010E                     	;# 
   884  0116                     	;# 
   885  0117                     	;# 
   886  011D                     	;# 
   887  018C                     	;# 
   888  018D                     	;# 
   889  018E                     	;# 
   890  0191                     	;# 
   891  0191                     	;# 
   892  0192                     	;# 
   893  0193                     	;# 
   894  0193                     	;# 
   895  0194                     	;# 
   896  0195                     	;# 
   897  0196                     	;# 
   898  0197                     	;# 
   899  0199                     	;# 
   900  019A                     	;# 
   901  019B                     	;# 
   902  019B                     	;# 
   903  019B                     	;# 
   904  019B                     	;# 
   905  019C                     	;# 
   906  019C                     	;# 
   907  019D                     	;# 
   908  019E                     	;# 
   909  019F                     	;# 
   910  020D                     	;# 
   911  0210                     	;# 
   912  0211                     	;# 
   913  0211                     	;# 
   914  0212                     	;# 
   915  0212                     	;# 
   916  0213                     	;# 
   917  0213                     	;# 
   918  0214                     	;# 
   919  0214                     	;# 
   920  0215                     	;# 
   921  0215                     	;# 
   922  0215                     	;# 
   923  0216                     	;# 
   924  0216                     	;# 
   925  0217                     	;# 
   926  0217                     	;# 
   927  0291                     	;# 
   928  0291                     	;# 
   929  0292                     	;# 
   930  0293                     	;# 
   931  0298                     	;# 
   932  0298                     	;# 
   933  0299                     	;# 
   934  029A                     	;# 
   935  0394                     	;# 
   936  0395                     	;# 
   937  0396                     	;# 
   938  0FE4                     	;# 
   939  0FE5                     	;# 
   940  0FE6                     	;# 
   941  0FE7                     	;# 
   942  0FE8                     	;# 
   943  0FE9                     	;# 
   944  0FEA                     	;# 
   945  0FEB                     	;# 
   946  0FED                     	;# 
   947  0FEE                     	;# 
   948  0FEF                     	;# 
   949  0000                     	;# 
   950  0001                     	;# 
   951  0002                     	;# 
   952  0003                     	;# 
   953  0004                     	;# 
   954  0005                     	;# 
   955  0006                     	;# 
   956  0007                     	;# 
   957  0008                     	;# 
   958  0009                     	;# 
   959  000A                     	;# 
   960  000B                     	;# 
   961  000C                     	;# 
   962  000D                     	;# 
   963  000E                     	;# 
   964  0010                     	;# 
   965  0011                     	;# 
   966  0012                     	;# 
   967  0015                     	;# 
   968  0016                     	;# 
   969  0016                     	;# 
   970  0017                     	;# 
   971  0018                     	;# 
   972  0019                     	;# 
   973  001A                     	;# 
   974  001B                     	;# 
   975  001C                     	;# 
   976  008C                     	;# 
   977  008D                     	;# 
   978  008E                     	;# 
   979  0090                     	;# 
   980  0091                     	;# 
   981  0092                     	;# 
   982  0095                     	;# 
   983  0096                     	;# 
   984  0097                     	;# 
   985  0099                     	;# 
   986  009A                     	;# 
   987  009B                     	;# 
   988  009B                     	;# 
   989  009C                     	;# 
   990  009D                     	;# 
   991  009E                     	;# 
   992  010C                     	;# 
   993  010D                     	;# 
   994  010E                     	;# 
   995  0116                     	;# 
   996  0117                     	;# 
   997  011D                     	;# 
   998  018C                     	;# 
   999  018D                     	;# 
  1000  018E                     	;# 
  1001  0191                     	;# 
  1002  0191                     	;# 
  1003  0192                     	;# 
  1004  0193                     	;# 
  1005  0193                     	;# 
  1006  0194                     	;# 
  1007  0195                     	;# 
  1008  0196                     	;# 
  1009  0197                     	;# 
  1010  0199                     	;# 
  1011  019A                     	;# 
  1012  019B                     	;# 
  1013  019B                     	;# 
  1014  019B                     	;# 
  1015  019B                     	;# 
  1016  019C                     	;# 
  1017  019C                     	;# 
  1018  019D                     	;# 
  1019  019E                     	;# 
  1020  019F                     	;# 
  1021  020D                     	;# 
  1022  0210                     	;# 
  1023  0211                     	;# 
  1024  0211                     	;# 
  1025  0212                     	;# 
  1026  0212                     	;# 
  1027  0213                     	;# 
  1028  0213                     	;# 
  1029  0214                     	;# 
  1030  0214                     	;# 
  1031  0215                     	;# 
  1032  0215                     	;# 
  1033  0215                     	;# 
  1034  0216                     	;# 
  1035  0216                     	;# 
  1036  0217                     	;# 
  1037  0217                     	;# 
  1038  0291                     	;# 
  1039  0291                     	;# 
  1040  0292                     	;# 
  1041  0293                     	;# 
  1042  0298                     	;# 
  1043  0298                     	;# 
  1044  0299                     	;# 
  1045  029A                     	;# 
  1046  0394                     	;# 
  1047  0395                     	;# 
  1048  0396                     	;# 
  1049  0FE4                     	;# 
  1050  0FE5                     	;# 
  1051  0FE6                     	;# 
  1052  0FE7                     	;# 
  1053  0FE8                     	;# 
  1054  0FE9                     	;# 
  1055  0FEA                     	;# 
  1056  0FEB                     	;# 
  1057  0FED                     	;# 
  1058  0FEE                     	;# 
  1059  0FEF                     	;# 
  1060  0000                     	;# 
  1061  0001                     	;# 
  1062  0002                     	;# 
  1063  0003                     	;# 
  1064  0004                     	;# 
  1065  0005                     	;# 
  1066  0006                     	;# 
  1067  0007                     	;# 
  1068  0008                     	;# 
  1069  0009                     	;# 
  1070  000A                     	;# 
  1071  000B                     	;# 
  1072  000C                     	;# 
  1073  000D                     	;# 
  1074  000E                     	;# 
  1075  0010                     	;# 
  1076  0011                     	;# 
  1077  0012                     	;# 
  1078  0015                     	;# 
  1079  0016                     	;# 
  1080  0016                     	;# 
  1081  0017                     	;# 
  1082  0018                     	;# 
  1083  0019                     	;# 
  1084  001A                     	;# 
  1085  001B                     	;# 
  1086  001C                     	;# 
  1087  008C                     	;# 
  1088  008D                     	;# 
  1089  008E                     	;# 
  1090  0090                     	;# 
  1091  0091                     	;# 
  1092  0092                     	;# 
  1093  0095                     	;# 
  1094  0096                     	;# 
  1095  0097                     	;# 
  1096  0099                     	;# 
  1097  009A                     	;# 
  1098  009B                     	;# 
  1099  009B                     	;# 
  1100  009C                     	;# 
  1101  009D                     	;# 
  1102  009E                     	;# 
  1103  010C                     	;# 
  1104  010D                     	;# 
  1105  010E                     	;# 
  1106  0116                     	;# 
  1107  0117                     	;# 
  1108  011D                     	;# 
  1109  018C                     	;# 
  1110  018D                     	;# 
  1111  018E                     	;# 
  1112  0191                     	;# 
  1113  0191                     	;# 
  1114  0192                     	;# 
  1115  0193                     	;# 
  1116  0193                     	;# 
  1117  0194                     	;# 
  1118  0195                     	;# 
  1119  0196                     	;# 
  1120  0197                     	;# 
  1121  0199                     	;# 
  1122  019A                     	;# 
  1123  019B                     	;# 
  1124  019B                     	;# 
  1125  019B                     	;# 
  1126  019B                     	;# 
  1127  019C                     	;# 
  1128  019C                     	;# 
  1129  019D                     	;# 
  1130  019E                     	;# 
  1131  019F                     	;# 
  1132  020D                     	;# 
  1133  0210                     	;# 
  1134  0211                     	;# 
  1135  0211                     	;# 
  1136  0212                     	;# 
  1137  0212                     	;# 
  1138  0213                     	;# 
  1139  0213                     	;# 
  1140  0214                     	;# 
  1141  0214                     	;# 
  1142  0215                     	;# 
  1143  0215                     	;# 
  1144  0215                     	;# 
  1145  0216                     	;# 
  1146  0216                     	;# 
  1147  0217                     	;# 
  1148  0217                     	;# 
  1149  0291                     	;# 
  1150  0291                     	;# 
  1151  0292                     	;# 
  1152  0293                     	;# 
  1153  0298                     	;# 
  1154  0298                     	;# 
  1155  0299                     	;# 
  1156  029A                     	;# 
  1157  0394                     	;# 
  1158  0395                     	;# 
  1159  0396                     	;# 
  1160  0FE4                     	;# 
  1161  0FE5                     	;# 
  1162  0FE6                     	;# 
  1163  0FE7                     	;# 
  1164  0FE8                     	;# 
  1165  0FE9                     	;# 
  1166  0FEA                     	;# 
  1167  0FEB                     	;# 
  1168  0FED                     	;# 
  1169  0FEE                     	;# 
  1170  0FEF                     	;# 
  1171  0000                     	;# 
  1172  0001                     	;# 
  1173  0002                     	;# 
  1174  0003                     	;# 
  1175  0004                     	;# 
  1176  0005                     	;# 
  1177  0006                     	;# 
  1178  0007                     	;# 
  1179  0008                     	;# 
  1180  0009                     	;# 
  1181  000A                     	;# 
  1182  000B                     	;# 
  1183  000C                     	;# 
  1184  000D                     	;# 
  1185  000E                     	;# 
  1186  0010                     	;# 
  1187  0011                     	;# 
  1188  0012                     	;# 
  1189  0015                     	;# 
  1190  0016                     	;# 
  1191  0016                     	;# 
  1192  0017                     	;# 
  1193  0018                     	;# 
  1194  0019                     	;# 
  1195  001A                     	;# 
  1196  001B                     	;# 
  1197  001C                     	;# 
  1198  008C                     	;# 
  1199  008D                     	;# 
  1200  008E                     	;# 
  1201  0090                     	;# 
  1202  0091                     	;# 
  1203  0092                     	;# 
  1204  0095                     	;# 
  1205  0096                     	;# 
  1206  0097                     	;# 
  1207  0099                     	;# 
  1208  009A                     	;# 
  1209  009B                     	;# 
  1210  009B                     	;# 
  1211  009C                     	;# 
  1212  009D                     	;# 
  1213  009E                     	;# 
  1214  010C                     	;# 
  1215  010D                     	;# 
  1216  010E                     	;# 
  1217  0116                     	;# 
  1218  0117                     	;# 
  1219  011D                     	;# 
  1220  018C                     	;# 
  1221  018D                     	;# 
  1222  018E                     	;# 
  1223  0191                     	;# 
  1224  0191                     	;# 
  1225  0192                     	;# 
  1226  0193                     	;# 
  1227  0193                     	;# 
  1228  0194                     	;# 
  1229  0195                     	;# 
  1230  0196                     	;# 
  1231  0197                     	;# 
  1232  0199                     	;# 
  1233  019A                     	;# 
  1234  019B                     	;# 
  1235  019B                     	;# 
  1236  019B                     	;# 
  1237  019B                     	;# 
  1238  019C                     	;# 
  1239  019C                     	;# 
  1240  019D                     	;# 
  1241  019E                     	;# 
  1242  019F                     	;# 
  1243  020D                     	;# 
  1244  0210                     	;# 
  1245  0211                     	;# 
  1246  0211                     	;# 
  1247  0212                     	;# 
  1248  0212                     	;# 
  1249  0213                     	;# 
  1250  0213                     	;# 
  1251  0214                     	;# 
  1252  0214                     	;# 
  1253  0215                     	;# 
  1254  0215                     	;# 
  1255  0215                     	;# 
  1256  0216                     	;# 
  1257  0216                     	;# 
  1258  0217                     	;# 
  1259  0217                     	;# 
  1260  0291                     	;# 
  1261  0291                     	;# 
  1262  0292                     	;# 
  1263  0293                     	;# 
  1264  0298                     	;# 
  1265  0298                     	;# 
  1266  0299                     	;# 
  1267  029A                     	;# 
  1268  0394                     	;# 
  1269  0395                     	;# 
  1270  0396                     	;# 
  1271  0FE4                     	;# 
  1272  0FE5                     	;# 
  1273  0FE6                     	;# 
  1274  0FE7                     	;# 
  1275  0FE8                     	;# 
  1276  0FE9                     	;# 
  1277  0FEA                     	;# 
  1278  0FEB                     	;# 
  1279  0FED                     	;# 
  1280  0FEE                     	;# 
  1281  0FEF                     	;# 
  1282  0000                     	;# 
  1283  0001                     	;# 
  1284  0002                     	;# 
  1285  0003                     	;# 
  1286  0004                     	;# 
  1287  0005                     	;# 
  1288  0006                     	;# 
  1289  0007                     	;# 
  1290  0008                     	;# 
  1291  0009                     	;# 
  1292  000A                     	;# 
  1293  000B                     	;# 
  1294  000C                     	;# 
  1295  000D                     	;# 
  1296  000E                     	;# 
  1297  0010                     	;# 
  1298  0011                     	;# 
  1299  0012                     	;# 
  1300  0015                     	;# 
  1301  0016                     	;# 
  1302  0016                     	;# 
  1303  0017                     	;# 
  1304  0018                     	;# 
  1305  0019                     	;# 
  1306  001A                     	;# 
  1307  001B                     	;# 
  1308  001C                     	;# 
  1309  008C                     	;# 
  1310  008D                     	;# 
  1311  008E                     	;# 
  1312  0090                     	;# 
  1313  0091                     	;# 
  1314  0092                     	;# 
  1315  0095                     	;# 
  1316  0096                     	;# 
  1317  0097                     	;# 
  1318  0099                     	;# 
  1319  009A                     	;# 
  1320  009B                     	;# 
  1321  009B                     	;# 
  1322  009C                     	;# 
  1323  009D                     	;# 
  1324  009E                     	;# 
  1325  010C                     	;# 
  1326  010D                     	;# 
  1327  010E                     	;# 
  1328  0116                     	;# 
  1329  0117                     	;# 
  1330  011D                     	;# 
  1331  018C                     	;# 
  1332  018D                     	;# 
  1333  018E                     	;# 
  1334  0191                     	;# 
  1335  0191                     	;# 
  1336  0192                     	;# 
  1337  0193                     	;# 
  1338  0193                     	;# 
  1339  0194                     	;# 
  1340  0195                     	;# 
  1341  0196                     	;# 
  1342  0197                     	;# 
  1343  0199                     	;# 
  1344  019A                     	;# 
  1345  019B                     	;# 
  1346  019B                     	;# 
  1347  019B                     	;# 
  1348  019B                     	;# 
  1349  019C                     	;# 
  1350  019C                     	;# 
  1351  019D                     	;# 
  1352  019E                     	;# 
  1353  019F                     	;# 
  1354  020D                     	;# 
  1355  0210                     	;# 
  1356  0211                     	;# 
  1357  0211                     	;# 
  1358  0212                     	;# 
  1359  0212                     	;# 
  1360  0213                     	;# 
  1361  0213                     	;# 
  1362  0214                     	;# 
  1363  0214                     	;# 
  1364  0215                     	;# 
  1365  0215                     	;# 
  1366  0215                     	;# 
  1367  0216                     	;# 
  1368  0216                     	;# 
  1369  0217                     	;# 
  1370  0217                     	;# 
  1371  0291                     	;# 
  1372  0291                     	;# 
  1373  0292                     	;# 
  1374  0293                     	;# 
  1375  0298                     	;# 
  1376  0298                     	;# 
  1377  0299                     	;# 
  1378  029A                     	;# 
  1379  0394                     	;# 
  1380  0395                     	;# 
  1381  0396                     	;# 
  1382  0FE4                     	;# 
  1383  0FE5                     	;# 
  1384  0FE6                     	;# 
  1385  0FE7                     	;# 
  1386  0FE8                     	;# 
  1387  0FE9                     	;# 
  1388  0FEA                     	;# 
  1389  0FEB                     	;# 
  1390  0FED                     	;# 
  1391  0FEE                     	;# 
  1392  0FEF                     	;# 
  1393  0000                     	;# 
  1394  0001                     	;# 
  1395  0002                     	;# 
  1396  0003                     	;# 
  1397  0004                     	;# 
  1398  0005                     	;# 
  1399  0006                     	;# 
  1400  0007                     	;# 
  1401  0008                     	;# 
  1402  0009                     	;# 
  1403  000A                     	;# 
  1404  000B                     	;# 
  1405  000C                     	;# 
  1406  000D                     	;# 
  1407  000E                     	;# 
  1408  0010                     	;# 
  1409  0011                     	;# 
  1410  0012                     	;# 
  1411  0015                     	;# 
  1412  0016                     	;# 
  1413  0016                     	;# 
  1414  0017                     	;# 
  1415  0018                     	;# 
  1416  0019                     	;# 
  1417  001A                     	;# 
  1418  001B                     	;# 
  1419  001C                     	;# 
  1420  008C                     	;# 
  1421  008D                     	;# 
  1422  008E                     	;# 
  1423  0090                     	;# 
  1424  0091                     	;# 
  1425  0092                     	;# 
  1426  0095                     	;# 
  1427  0096                     	;# 
  1428  0097                     	;# 
  1429  0099                     	;# 
  1430  009A                     	;# 
  1431  009B                     	;# 
  1432  009B                     	;# 
  1433  009C                     	;# 
  1434  009D                     	;# 
  1435  009E                     	;# 
  1436  010C                     	;# 
  1437  010D                     	;# 
  1438  010E                     	;# 
  1439  0116                     	;# 
  1440  0117                     	;# 
  1441  011D                     	;# 
  1442  018C                     	;# 
  1443  018D                     	;# 
  1444  018E                     	;# 
  1445  0191                     	;# 
  1446  0191                     	;# 
  1447  0192                     	;# 
  1448  0193                     	;# 
  1449  0193                     	;# 
  1450  0194                     	;# 
  1451  0195                     	;# 
  1452  0196                     	;# 
  1453  0197                     	;# 
  1454  0199                     	;# 
  1455  019A                     	;# 
  1456  019B                     	;# 
  1457  019B                     	;# 
  1458  019B                     	;# 
  1459  019B                     	;# 
  1460  019C                     	;# 
  1461  019C                     	;# 
  1462  019D                     	;# 
  1463  019E                     	;# 
  1464  019F                     	;# 
  1465  020D                     	;# 
  1466  0210                     	;# 
  1467  0211                     	;# 
  1468  0211                     	;# 
  1469  0212                     	;# 
  1470  0212                     	;# 
  1471  0213                     	;# 
  1472  0213                     	;# 
  1473  0214                     	;# 
  1474  0214                     	;# 
  1475  0215                     	;# 
  1476  0215                     	;# 
  1477  0215                     	;# 
  1478  0216                     	;# 
  1479  0216                     	;# 
  1480  0217                     	;# 
  1481  0217                     	;# 
  1482  0291                     	;# 
  1483  0291                     	;# 
  1484  0292                     	;# 
  1485  0293                     	;# 
  1486  0298                     	;# 
  1487  0298                     	;# 
  1488  0299                     	;# 
  1489  029A                     	;# 
  1490  0394                     	;# 
  1491  0395                     	;# 
  1492  0396                     	;# 
  1493  0FE4                     	;# 
  1494  0FE5                     	;# 
  1495  0FE6                     	;# 
  1496  0FE7                     	;# 
  1497  0FE8                     	;# 
  1498  0FE9                     	;# 
  1499  0FEA                     	;# 
  1500  0FEB                     	;# 
  1501  0FED                     	;# 
  1502  0FEE                     	;# 
  1503  0FEF                     	;# 
  1504  0000                     	;# 
  1505  0001                     	;# 
  1506  0002                     	;# 
  1507  0003                     	;# 
  1508  0004                     	;# 
  1509  0005                     	;# 
  1510  0006                     	;# 
  1511  0007                     	;# 
  1512  0008                     	;# 
  1513  0009                     	;# 
  1514  000A                     	;# 
  1515  000B                     	;# 
  1516  000C                     	;# 
  1517  000D                     	;# 
  1518  000E                     	;# 
  1519  0010                     	;# 
  1520  0011                     	;# 
  1521  0012                     	;# 
  1522  0015                     	;# 
  1523  0016                     	;# 
  1524  0016                     	;# 
  1525  0017                     	;# 
  1526  0018                     	;# 
  1527  0019                     	;# 
  1528  001A                     	;# 
  1529  001B                     	;# 
  1530  001C                     	;# 
  1531  008C                     	;# 
  1532  008D                     	;# 
  1533  008E                     	;# 
  1534  0090                     	;# 
  1535  0091                     	;# 
  1536  0092                     	;# 
  1537  0095                     	;# 
  1538  0096                     	;# 
  1539  0097                     	;# 
  1540  0099                     	;# 
  1541  009A                     	;# 
  1542  009B                     	;# 
  1543  009B                     	;# 
  1544  009C                     	;# 
  1545  009D                     	;# 
  1546  009E                     	;# 
  1547  010C                     	;# 
  1548  010D                     	;# 
  1549  010E                     	;# 
  1550  0116                     	;# 
  1551  0117                     	;# 
  1552  011D                     	;# 
  1553  018C                     	;# 
  1554  018D                     	;# 
  1555  018E                     	;# 
  1556  0191                     	;# 
  1557  0191                     	;# 
  1558  0192                     	;# 
  1559  0193                     	;# 
  1560  0193                     	;# 
  1561  0194                     	;# 
  1562  0195                     	;# 
  1563  0196                     	;# 
  1564  0197                     	;# 
  1565  0199                     	;# 
  1566  019A                     	;# 
  1567  019B                     	;# 
  1568  019B                     	;# 
  1569  019B                     	;# 
  1570  019B                     	;# 
  1571  019C                     	;# 
  1572  019C                     	;# 
  1573  019D                     	;# 
  1574  019E                     	;# 
  1575  019F                     	;# 
  1576  020D                     	;# 
  1577  0210                     	;# 
  1578  0211                     	;# 
  1579  0211                     	;# 
  1580  0212                     	;# 
  1581  0212                     	;# 
  1582  0213                     	;# 
  1583  0213                     	;# 
  1584  0214                     	;# 
  1585  0214                     	;# 
  1586  0215                     	;# 
  1587  0215                     	;# 
  1588  0215                     	;# 
  1589  0216                     	;# 
  1590  0216                     	;# 
  1591  0217                     	;# 
  1592  0217                     	;# 
  1593  0291                     	;# 
  1594  0291                     	;# 
  1595  0292                     	;# 
  1596  0293                     	;# 
  1597  0298                     	;# 
  1598  0298                     	;# 
  1599  0299                     	;# 
  1600  029A                     	;# 
  1601  0394                     	;# 
  1602  0395                     	;# 
  1603  0396                     	;# 
  1604  0FE4                     	;# 
  1605  0FE5                     	;# 
  1606  0FE6                     	;# 
  1607  0FE7                     	;# 
  1608  0FE8                     	;# 
  1609  0FE9                     	;# 
  1610  0FEA                     	;# 
  1611  0FEB                     	;# 
  1612  0FED                     	;# 
  1613  0FEE                     	;# 
  1614  0FEF                     	;# 
  1615  0000                     	;# 
  1616  0001                     	;# 
  1617  0002                     	;# 
  1618  0003                     	;# 
  1619  0004                     	;# 
  1620  0005                     	;# 
  1621  0006                     	;# 
  1622  0007                     	;# 
  1623  0008                     	;# 
  1624  0009                     	;# 
  1625  000A                     	;# 
  1626  000B                     	;# 
  1627  000C                     	;# 
  1628  000D                     	;# 
  1629  000E                     	;# 
  1630  0010                     	;# 
  1631  0011                     	;# 
  1632  0012                     	;# 
  1633  0015                     	;# 
  1634  0016                     	;# 
  1635  0016                     	;# 
  1636  0017                     	;# 
  1637  0018                     	;# 
  1638  0019                     	;# 
  1639  001A                     	;# 
  1640  001B                     	;# 
  1641  001C                     	;# 
  1642  008C                     	;# 
  1643  008D                     	;# 
  1644  008E                     	;# 
  1645  0090                     	;# 
  1646  0091                     	;# 
  1647  0092                     	;# 
  1648  0095                     	;# 
  1649  0096                     	;# 
  1650  0097                     	;# 
  1651  0099                     	;# 
  1652  009A                     	;# 
  1653  009B                     	;# 
  1654  009B                     	;# 
  1655  009C                     	;# 
  1656  009D                     	;# 
  1657  009E                     	;# 
  1658  010C                     	;# 
  1659  010D                     	;# 
  1660  010E                     	;# 
  1661  0116                     	;# 
  1662  0117                     	;# 
  1663  011D                     	;# 
  1664  018C                     	;# 
  1665  018D                     	;# 
  1666  018E                     	;# 
  1667  0191                     	;# 
  1668  0191                     	;# 
  1669  0192                     	;# 
  1670  0193                     	;# 
  1671  0193                     	;# 
  1672  0194                     	;# 
  1673  0195                     	;# 
  1674  0196                     	;# 
  1675  0197                     	;# 
  1676  0199                     	;# 
  1677  019A                     	;# 
  1678  019B                     	;# 
  1679  019B                     	;# 
  1680  019B                     	;# 
  1681  019B                     	;# 
  1682  019C                     	;# 
  1683  019C                     	;# 
  1684  019D                     	;# 
  1685  019E                     	;# 
  1686  019F                     	;# 
  1687  020D                     	;# 
  1688  0210                     	;# 
  1689  0211                     	;# 
  1690  0211                     	;# 
  1691  0212                     	;# 
  1692  0212                     	;# 
  1693  0213                     	;# 
  1694  0213                     	;# 
  1695  0214                     	;# 
  1696  0214                     	;# 
  1697  0215                     	;# 
  1698  0215                     	;# 
  1699  0215                     	;# 
  1700  0216                     	;# 
  1701  0216                     	;# 
  1702  0217                     	;# 
  1703  0217                     	;# 
  1704  0291                     	;# 
  1705  0291                     	;# 
  1706  0292                     	;# 
  1707  0293                     	;# 
  1708  0298                     	;# 
  1709  0298                     	;# 
  1710  0299                     	;# 
  1711  029A                     	;# 
  1712  0394                     	;# 
  1713  0395                     	;# 
  1714  0396                     	;# 
  1715  0FE4                     	;# 
  1716  0FE5                     	;# 
  1717  0FE6                     	;# 
  1718  0FE7                     	;# 
  1719  0FE8                     	;# 
  1720  0FE9                     	;# 
  1721  0FEA                     	;# 
  1722  0FEB                     	;# 
  1723  0FED                     	;# 
  1724  0FEE                     	;# 
  1725  0FEF                     	;# 
  1726  0000                     	;# 
  1727  0001                     	;# 
  1728  0002                     	;# 
  1729  0003                     	;# 
  1730  0004                     	;# 
  1731  0005                     	;# 
  1732  0006                     	;# 
  1733  0007                     	;# 
  1734  0008                     	;# 
  1735  0009                     	;# 
  1736  000A                     	;# 
  1737  000B                     	;# 
  1738  000C                     	;# 
  1739  000D                     	;# 
  1740  000E                     	;# 
  1741  0010                     	;# 
  1742  0011                     	;# 
  1743  0012                     	;# 
  1744  0015                     	;# 
  1745  0016                     	;# 
  1746  0016                     	;# 
  1747  0017                     	;# 
  1748  0018                     	;# 
  1749  0019                     	;# 
  1750  001A                     	;# 
  1751  001B                     	;# 
  1752  001C                     	;# 
  1753  008C                     	;# 
  1754  008D                     	;# 
  1755  008E                     	;# 
  1756  0090                     	;# 
  1757  0091                     	;# 
  1758  0092                     	;# 
  1759  0095                     	;# 
  1760  0096                     	;# 
  1761  0097                     	;# 
  1762  0099                     	;# 
  1763  009A                     	;# 
  1764  009B                     	;# 
  1765  009B                     	;# 
  1766  009C                     	;# 
  1767  009D                     	;# 
  1768  009E                     	;# 
  1769  010C                     	;# 
  1770  010D                     	;# 
  1771  010E                     	;# 
  1772  0116                     	;# 
  1773  0117                     	;# 
  1774  011D                     	;# 
  1775  018C                     	;# 
  1776  018D                     	;# 
  1777  018E                     	;# 
  1778  0191                     	;# 
  1779  0191                     	;# 
  1780  0192                     	;# 
  1781  0193                     	;# 
  1782  0193                     	;# 
  1783  0194                     	;# 
  1784  0195                     	;# 
  1785  0196                     	;# 
  1786  0197                     	;# 
  1787  0199                     	;# 
  1788  019A                     	;# 
  1789  019B                     	;# 
  1790  019B                     	;# 
  1791  019B                     	;# 
  1792  019B                     	;# 
  1793  019C                     	;# 
  1794  019C                     	;# 
  1795  019D                     	;# 
  1796  019E                     	;# 
  1797  019F                     	;# 
  1798  020D                     	;# 
  1799  0210                     	;# 
  1800  0211                     	;# 
  1801  0211                     	;# 
  1802  0212                     	;# 
  1803  0212                     	;# 
  1804  0213                     	;# 
  1805  0213                     	;# 
  1806  0214                     	;# 
  1807  0214                     	;# 
  1808  0215                     	;# 
  1809  0215                     	;# 
  1810  0215                     	;# 
  1811  0216                     	;# 
  1812  0216                     	;# 
  1813  0217                     	;# 
  1814  0217                     	;# 
  1815  0291                     	;# 
  1816  0291                     	;# 
  1817  0292                     	;# 
  1818  0293                     	;# 
  1819  0298                     	;# 
  1820  0298                     	;# 
  1821  0299                     	;# 
  1822  029A                     	;# 
  1823  0394                     	;# 
  1824  0395                     	;# 
  1825  0396                     	;# 
  1826  0FE4                     	;# 
  1827  0FE5                     	;# 
  1828  0FE6                     	;# 
  1829  0FE7                     	;# 
  1830  0FE8                     	;# 
  1831  0FE9                     	;# 
  1832  0FEA                     	;# 
  1833  0FEB                     	;# 
  1834  0FED                     	;# 
  1835  0FEE                     	;# 
  1836  0FEF                     	;# 
  1837  0000                     	;# 
  1838  0001                     	;# 
  1839  0002                     	;# 
  1840  0003                     	;# 
  1841  0004                     	;# 
  1842  0005                     	;# 
  1843  0006                     	;# 
  1844  0007                     	;# 
  1845  0008                     	;# 
  1846  0009                     	;# 
  1847  000A                     	;# 
  1848  000B                     	;# 
  1849  000C                     	;# 
  1850  000D                     	;# 
  1851  000E                     	;# 
  1852  0010                     	;# 
  1853  0011                     	;# 
  1854  0012                     	;# 
  1855  0015                     	;# 
  1856  0016                     	;# 
  1857  0016                     	;# 
  1858  0017                     	;# 
  1859  0018                     	;# 
  1860  0019                     	;# 
  1861  001A                     	;# 
  1862  001B                     	;# 
  1863  001C                     	;# 
  1864  008C                     	;# 
  1865  008D                     	;# 
  1866  008E                     	;# 
  1867  0090                     	;# 
  1868  0091                     	;# 
  1869  0092                     	;# 
  1870  0095                     	;# 
  1871  0096                     	;# 
  1872  0097                     	;# 
  1873  0099                     	;# 
  1874  009A                     	;# 
  1875  009B                     	;# 
  1876  009B                     	;# 
  1877  009C                     	;# 
  1878  009D                     	;# 
  1879  009E                     	;# 
  1880  010C                     	;# 
  1881  010D                     	;# 
  1882  010E                     	;# 
  1883  0116                     	;# 
  1884  0117                     	;# 
  1885  011D                     	;# 
  1886  018C                     	;# 
  1887  018D                     	;# 
  1888  018E                     	;# 
  1889  0191                     	;# 
  1890  0191                     	;# 
  1891  0192                     	;# 
  1892  0193                     	;# 
  1893  0193                     	;# 
  1894  0194                     	;# 
  1895  0195                     	;# 
  1896  0196                     	;# 
  1897  0197                     	;# 
  1898  0199                     	;# 
  1899  019A                     	;# 
  1900  019B                     	;# 
  1901  019B                     	;# 
  1902  019B                     	;# 
  1903  019B                     	;# 
  1904  019C                     	;# 
  1905  019C                     	;# 
  1906  019D                     	;# 
  1907  019E                     	;# 
  1908  019F                     	;# 
  1909  020D                     	;# 
  1910  0210                     	;# 
  1911  0211                     	;# 
  1912  0211                     	;# 
  1913  0212                     	;# 
  1914  0212                     	;# 
  1915  0213                     	;# 
  1916  0213                     	;# 
  1917  0214                     	;# 
  1918  0214                     	;# 
  1919  0215                     	;# 
  1920  0215                     	;# 
  1921  0215                     	;# 
  1922  0216                     	;# 
  1923  0216                     	;# 
  1924  0217                     	;# 
  1925  0217                     	;# 
  1926  0291                     	;# 
  1927  0291                     	;# 
  1928  0292                     	;# 
  1929  0293                     	;# 
  1930  0298                     	;# 
  1931  0298                     	;# 
  1932  0299                     	;# 
  1933  029A                     	;# 
  1934  0394                     	;# 
  1935  0395                     	;# 
  1936  0396                     	;# 
  1937  0FE4                     	;# 
  1938  0FE5                     	;# 
  1939  0FE6                     	;# 
  1940  0FE7                     	;# 
  1941  0FE8                     	;# 
  1942  0FE9                     	;# 
  1943  0FEA                     	;# 
  1944  0FEB                     	;# 
  1945  0FED                     	;# 
  1946  0FEE                     	;# 
  1947  0FEF                     	;# 
  1948  0000                     	;# 
  1949  0001                     	;# 
  1950  0002                     	;# 
  1951  0003                     	;# 
  1952  0004                     	;# 
  1953  0005                     	;# 
  1954  0006                     	;# 
  1955  0007                     	;# 
  1956  0008                     	;# 
  1957  0009                     	;# 
  1958  000A                     	;# 
  1959  000B                     	;# 
  1960  000C                     	;# 
  1961  000D                     	;# 
  1962  000E                     	;# 
  1963  0010                     	;# 
  1964  0011                     	;# 
  1965  0012                     	;# 
  1966  0015                     	;# 
  1967  0016                     	;# 
  1968  0016                     	;# 
  1969  0017                     	;# 
  1970  0018                     	;# 
  1971  0019                     	;# 
  1972  001A                     	;# 
  1973  001B                     	;# 
  1974  001C                     	;# 
  1975  008C                     	;# 
  1976  008D                     	;# 
  1977  008E                     	;# 
  1978  0090                     	;# 
  1979  0091                     	;# 
  1980  0092                     	;# 
  1981  0095                     	;# 
  1982  0096                     	;# 
  1983  0097                     	;# 
  1984  0099                     	;# 
  1985  009A                     	;# 
  1986  009B                     	;# 
  1987  009B                     	;# 
  1988  009C                     	;# 
  1989  009D                     	;# 
  1990  009E                     	;# 
  1991  010C                     	;# 
  1992  010D                     	;# 
  1993  010E                     	;# 
  1994  0116                     	;# 
  1995  0117                     	;# 
  1996  011D                     	;# 
  1997  018C                     	;# 
  1998  018D                     	;# 
  1999  018E                     	;# 
  2000  0191                     	;# 
  2001  0191                     	;# 
  2002  0192                     	;# 
  2003  0193                     	;# 
  2004  0193                     	;# 
  2005  0194                     	;# 
  2006  0195                     	;# 
  2007  0196                     	;# 
  2008  0197                     	;# 
  2009  0199                     	;# 
  2010  019A                     	;# 
  2011  019B                     	;# 
  2012  019B                     	;# 
  2013  019B                     	;# 
  2014  019B                     	;# 
  2015  019C                     	;# 
  2016  019C                     	;# 
  2017  019D                     	;# 
  2018  019E                     	;# 
  2019  019F                     	;# 
  2020  020D                     	;# 
  2021  0210                     	;# 
  2022  0211                     	;# 
  2023  0211                     	;# 
  2024  0212                     	;# 
  2025  0212                     	;# 
  2026  0213                     	;# 
  2027  0213                     	;# 
  2028  0214                     	;# 
  2029  0214                     	;# 
  2030  0215                     	;# 
  2031  0215                     	;# 
  2032  0215                     	;# 
  2033  0216                     	;# 
  2034  0216                     	;# 
  2035  0217                     	;# 
  2036  0217                     	;# 
  2037  0291                     	;# 
  2038  0291                     	;# 
  2039  0292                     	;# 
  2040  0293                     	;# 
  2041  0298                     	;# 
  2042  0298                     	;# 
  2043  0299                     	;# 
  2044  029A                     	;# 
  2045  0394                     	;# 
  2046  0395                     	;# 
  2047  0396                     	;# 
  2048  0FE4                     	;# 
  2049  0FE5                     	;# 
  2050  0FE6                     	;# 
  2051  0FE7                     	;# 
  2052  0FE8                     	;# 
  2053  0FE9                     	;# 
  2054  0FEA                     	;# 
  2055  0FEB                     	;# 
  2056  0FED                     	;# 
  2057  0FEE                     	;# 
  2058  0FEF                     	;# 
  2059                           
  2060                           	psect	idataBANK1
  2061  0529                     __pidataBANK1:	
  2062                           
  2063                           ;initializer for __product
  2064  0529  3463               	retlw	99
  2065  052A  3402               	retlw	2
  2066  052B  3400               	retlw	0
  2067  052C  3400               	retlw	0
  2068  052D  3400               	retlw	0
  2069  052E  3400               	retlw	0
  2070  052F  3400               	retlw	0
  2071  0530  3400               	retlw	0
  2072  0531  3400               	retlw	0
  2073  0532  3400               	retlw	0
  2074  0533  3400               	retlw	0
  2075  0534  3400               	retlw	0
  2076  0535  34FF               	retlw	255
  2077  0536  34FF               	retlw	255
  2078  0537  34FF               	retlw	255
  2079  0538  3400               	retlw	0
  2080  0539  3400               	retlw	0
  2081  053A  3400               	retlw	0
  2082  053B  3400               	retlw	0
  2083  053C  3400               	retlw	0
  2084  053D  3400               	retlw	0
  2085  053E  3400               	retlw	0
  2086  053F  3400               	retlw	0
  2087  0540  3400               	retlw	0
  2088  0541  3400               	retlw	0
  2089  0542  3400               	retlw	0
  2090  0543  3400               	retlw	0
  2091  0544  3400               	retlw	0
  2092  0545  3400               	retlw	0
  2093  0546  3400               	retlw	0
  2094  0547  3400               	retlw	0
  2095  0548  3400               	retlw	0
  2096                           
  2097                           	psect	stringtext
  2098  0200                     __pstringtext:	
  2099  0200                     _CC2500_registers_address:	
  2100  0200  3403               	retlw	3
  2101  0201  3416               	retlw	22
  2102  0202  3417               	retlw	23
  2103  0203  341E               	retlw	30
  2104  0204  341F               	retlw	31
  2105  0205  3420               	retlw	32
  2106  0206  342A               	retlw	42
  2107  0207  342B               	retlw	43
  2108  0208  340B               	retlw	11
  2109  0209  340C               	retlw	12
  2110  020A  340D               	retlw	13
  2111  020B  340E               	retlw	14
  2112  020C  340F               	retlw	15
  2113  020D  3410               	retlw	16
  2114  020E  3411               	retlw	17
  2115  020F  3412               	retlw	18
  2116  0210  3413               	retlw	19
  2117  0211  3414               	retlw	20
  2118  0212  340A               	retlw	10
  2119  0213  3415               	retlw	21
  2120  0214  3421               	retlw	33
  2121  0215  3422               	retlw	34
  2122  0216  3418               	retlw	24
  2123  0217  3419               	retlw	25
  2124  0218  341A               	retlw	26
  2125  0219  341B               	retlw	27
  2126  021A  341C               	retlw	28
  2127  021B  341D               	retlw	29
  2128  021C  3423               	retlw	35
  2129  021D  3424               	retlw	36
  2130  021E  3425               	retlw	37
  2131  021F  3426               	retlw	38
  2132  0220  3429               	retlw	41
  2133  0221  342C               	retlw	44
  2134  0222  342D               	retlw	45
  2135  0223  342E               	retlw	46
  2136  0224  3400               	retlw	0
  2137  0225  3401               	retlw	1
  2138  0226  3402               	retlw	2
  2139  0227  3407               	retlw	7
  2140  0228  3408               	retlw	8
  2141  0229  3409               	retlw	9
  2142  022A  3406               	retlw	6
  2143  022B  3404               	retlw	4
  2144  022C  3405               	retlw	5
  2145  022D  3427               	retlw	39
  2146  022E  3428               	retlw	40
  2147  022F                     __end_of_CC2500_registers_address:	
  2148  022F                     _CC2500_rfSettings:	
  2149  022F  3407               	retlw	7
  2150  0230  3407               	retlw	7
  2151  0231  3430               	retlw	48
  2152  0232  3487               	retlw	135
  2153  0233  346B               	retlw	107
  2154  0234  34F8               	retlw	248
  2155  0235  347F               	retlw	127
  2156  0236  343F               	retlw	63
  2157  0237  3409               	retlw	9
  2158  0238  3400               	retlw	0
  2159  0239  345C               	retlw	92
  2160  023A  34A7               	retlw	167
  2161  023B  3462               	retlw	98
  2162  023C  3486               	retlw	134
  2163  023D  3483               	retlw	131
  2164  023E  3403               	retlw	3
  2165  023F  3422               	retlw	34
  2166  0240  34F8               	retlw	248
  2167  0241  3400               	retlw	0
  2168  0242  3444               	retlw	68
  2169  0243  34B6               	retlw	182
  2170  0244  3410               	retlw	16
  2171  0245  3418               	retlw	24
  2172  0246  341D               	retlw	29
  2173  0247  341C               	retlw	28
  2174  0248  34C7               	retlw	199
  2175  0249  3400               	retlw	0
  2176  024A  34B2               	retlw	178
  2177  024B  34EA               	retlw	234
  2178  024C  340A               	retlw	10
  2179  024D  3400               	retlw	0
  2180  024E  3411               	retlw	17
  2181  024F  3459               	retlw	89
  2182  0250  3488               	retlw	136
  2183  0251  3431               	retlw	49
  2184  0252  340B               	retlw	11
  2185  0253  342F               	retlw	47
  2186  0254  342E               	retlw	46
  2187  0255  3406               	retlw	6
  2188  0256  3404               	retlw	4
  2189  0257  3405               	retlw	5
  2190  0258  3400               	retlw	0
  2191  0259  3430               	retlw	48
  2192  025A  34D3               	retlw	211
  2193  025B  3491               	retlw	145
  2194  025C  3441               	retlw	65
  2195  025D  3400               	retlw	0
  2196  025E                     __end_of_CC2500_rfSettings:	
  2197  025E                     _CC2500_patable_vaule:	
  2198  025E  34FE               	retlw	254
  2199  025F  34FE               	retlw	254
  2200  0260  34FE               	retlw	254
  2201  0261  34FE               	retlw	254
  2202  0262  34FE               	retlw	254
  2203  0263  34FE               	retlw	254
  2204  0264  34FE               	retlw	254
  2205  0265  34FE               	retlw	254
  2206  0266                     __end_of_CC2500_patable_vaule:	
  2207                           
  2208                           	psect	nvCOMMON
  2209  007C                     __pnvCOMMON:	
  2210  007C                     _product:	
  2211  007C                     	ds	1
  2212                           
  2213                           	psect	nvBANK0
  2214  0056                     __pnvBANK0:	
  2215  0056                     _Tx_Length:	
  2216  0056                     	ds	1
  2217  000C                     _PORTA	set	12
  2218  000D                     _PORTB	set	13
  2219  000E                     _PORTC	set	14
  2220  0018                     _T1CON	set	24
  2221  0017                     _TMR1H	set	23
  2222  0016                     _TMR1L	set	22
  2223  005F                     _GIE	set	95
  2224  005E                     _PEIE	set	94
  2225  0060                     _RA0	set	96
  2226  0061                     _RA1	set	97
  2227  0062                     _RA2	set	98
  2228  0068                     _RB0	set	104
  2229  0070                     _RC0	set	112
  2230  0071                     _RC1	set	113
  2231  0073                     _RC3	set	115
  2232  0074                     _RC4	set	116
  2233  0075                     _RC5	set	117
  2234  0088                     _TMR1IF	set	136
  2235  0099                     _OSCCON	set	153
  2236  008C                     _TRISA	set	140
  2237  008D                     _TRISB	set	141
  2238  008E                     _TRISC	set	142
  2239  0488                     _TMR1IE	set	1160
  2240  010C                     _LATA	set	268
  2241  010D                     _LATB	set	269
  2242  010E                     _LATC	set	270
  2243  018C                     _ANSELA	set	396
  2244  018D                     _ANSELB	set	397
  2245  018E                     _ANSELC	set	398
  2246  020D                     _WPUB	set	525
  2247                           
  2248                           ; #config settings
  2249  0000                     
  2250                           	psect	cinit
  2251  0018                     start_initialization:	
  2252  0018                     __initialization:	
  2253                           
  2254                           ; Clear objects allocated to BITCOMMON
  2255  0018  01FB               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  2256                           
  2257                           ; Clear objects allocated to BANK0
  2258  0019  3020               	movlw	low __pbssBANK0
  2259  001A  0084               	movwf	4
  2260  001B  3000               	movlw	high __pbssBANK0
  2261  001C  0085               	movwf	5
  2262  001D  3030               	movlw	48
  2263  001E  3186  26AE  3180   	fcall	clear_ram0
  2264                           
  2265                           ; Clear objects allocated to BANK1
  2266  0021  30C0               	movlw	low __pbssBANK1
  2267  0022  0084               	movwf	4
  2268  0023  3000               	movlw	high __pbssBANK1
  2269  0024  0085               	movwf	5
  2270  0025  301E               	movlw	30
  2271  0026  3186  26AE  3180   	fcall	clear_ram0
  2272                           
  2273                           ; Initialize objects allocated to BANK1
  2274  0029  3029               	movlw	low __pidataBANK1
  2275  002A  0084               	movwf	4
  2276  002B  3085               	movlw	(high __pidataBANK1)| (0+128)
  2277  002C  0085               	movwf	5
  2278  002D  30A0               	movlw	low __pdataBANK1
  2279  002E  0086               	movwf	6
  2280  002F  3000               	movlw	high __pdataBANK1
  2281  0030  0087               	movwf	7
  2282  0031  3020               	movlw	32
  2283  0032  3186  26B4         	fcall	init_ram
  2284  0034                     end_of_initialization:	
  2285                           ;End of C runtime variable initialization code
  2286                           
  2287  0034                     __end_of__initialization:	
  2288  0034  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  2289  0035  0020               	movlb	0
  2290  0036  3185  2D06         	ljmp	_main	;jump to C main() function
  2291                           
  2292                           	psect	bitbssCOMMON
  2293  03D8                     __pbitbssCOMMON:	
  2294  03D8                     _Receive_OK:	
  2295  03D8                     	ds	1
  2296  03D9                     _Transceive_OK:	
  2297  03D9                     	ds	1
  2298                           
  2299                           	psect	bssBANK0
  2300  0020                     __pbssBANK0:	
  2301  0020                     _RF1:	
  2302  0020                     	ds	15
  2303  002F                     _myMain:	
  2304  002F                     	ds	13
  2305  003C                     _u1:	
  2306  003C                     	ds	5
  2307  0041                     _Timer1:	
  2308  0041                     	ds	3
  2309  0044                     _RF_Count:	
  2310  0044                     	ds	2
  2311  0046                     _CRC:	
  2312  0046                     	ds	1
  2313  0047                     _Cmd:	
  2314  0047                     	ds	1
  2315  0048                     _Light:	
  2316  0048                     	ds	1
  2317  0049                     _RSSI:	
  2318  0049                     	ds	1
  2319  004A                     _Rx_Length:	
  2320  004A                     	ds	1
  2321  004B                     _SPI0Buffer:	
  2322  004B                     	ds	1
  2323  004C                     _SwDetect:	
  2324  004C                     	ds	1
  2325  004D                     _r_address:	
  2326  004D                     	ds	1
  2327  004E                     _r_data:	
  2328  004E                     	ds	1
  2329  004F                     _s_data:	
  2330  004F                     	ds	1
  2331                           
  2332                           	psect	bssBANK1
  2333  00C0                     __pbssBANK1:	
  2334  00C0                     _RF_Data:	
  2335  00C0                     	ds	30
  2336                           
  2337                           	psect	dataBANK1
  2338  00A0                     __pdataBANK1:	
  2339  00A0                     __product:	
  2340  00A0                     	ds	32
  2341                           
  2342                           	psect	clrtext
  2343  06AE                     clear_ram0:	
  2344                           ;	Called with FSR0 containing the base address, and
  2345                           ;	WREG with the size to clear
  2346                           
  2347  06AE  0064               	clrwdt	;clear the watchdog before getting into this loop
  2348  06AF                     clrloop0:	
  2349  06AF  0180               	clrf	0	;clear RAM location pointed to by FSR
  2350  06B0  3101               	addfsr 0,1
  2351  06B1  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2352  06B2  2EAF               	goto	clrloop0	;have we reached the end yet?
  2353  06B3  3400               	retlw	0	;all done for this memory range, return
  2354                           
  2355                           	psect	inittext
  2356  06B4                     init_ram:	
  2357  06B4  00FE               	movwf	126
  2358  06B5                     initloop:	
  2359  06B5  0012               	moviw fsr0++
  2360  06B6  001E               	movwi fsr1++
  2361  06B7  0BFE               	decfsz	126,f
  2362  06B8  2EB5               	goto	initloop
  2363  06B9  3400               	retlw	0
  2364                           
  2365                           	psect	cstackCOMMON
  2366  0070                     __pcstackCOMMON:	
  2367  0070                     ?_CC2500_WriteCommand:	
  2368  0070                     ?_RF_Timeout_Counter:	
  2369                           ; 0 bytes @ 0x0
  2370                           
  2371  0070                     ?_setRF_TimeoutCleared:	
  2372                           ; 0 bytes @ 0x0
  2373                           
  2374  0070                     ?_CC2500_WriteByte:	
  2375                           ; 0 bytes @ 0x0
  2376                           
  2377  0070                     ?_CC2500_PowerRST:	
  2378                           ; 0 bytes @ 0x0
  2379                           
  2380  0070                     ?_CC2500_InitSetREG:	
  2381                           ; 0 bytes @ 0x0
  2382                           
  2383  0070                     ?_CC2500_InitPATable:	
  2384                           ; 0 bytes @ 0x0
  2385                           
  2386  0070                     ?_CC2500_ClearTXFIFO:	
  2387                           ; 0 bytes @ 0x0
  2388                           
  2389  0070                     ?_CC2500_ClearRXFIFO:	
  2390                           ; 0 bytes @ 0x0
  2391                           
  2392  0070                     ?_CC2500_FrequencyCabr:	
  2393                           ; 0 bytes @ 0x0
  2394                           
  2395  0070                     ?_CC2500_SIDLEMode:	
  2396                           ; 0 bytes @ 0x0
  2397                           
  2398  0070                     ?_Fosc_Set:	
  2399                           ; 0 bytes @ 0x0
  2400                           
  2401  0070                     ?_IO_Set:	
  2402                           ; 0 bytes @ 0x0
  2403                           
  2404  0070                     ?_TMR1_Set:	
  2405                           ; 0 bytes @ 0x0
  2406                           
  2407  0070                     ?_TMR1_ISR:	
  2408                           ; 0 bytes @ 0x0
  2409                           
  2410  0070                     ??_TMR1_ISR:	
  2411                           ; 0 bytes @ 0x0
  2412                           
  2413  0070                     ?_myMain_Initialization:	
  2414                           ; 0 bytes @ 0x0
  2415                           
  2416  0070                     ?_RF_Initialization:	
  2417                           ; 0 bytes @ 0x0
  2418                           
  2419  0070                     ?_myUARTtoRF_Initialization:	
  2420                           ; 0 bytes @ 0x0
  2421                           
  2422  0070                     ?_my_MainTimer:	
  2423                           ; 0 bytes @ 0x0
  2424                           
  2425  0070                     ?_RF_Main:	
  2426                           ; 0 bytes @ 0x0
  2427                           
  2428  0070                     ?_myUARTtoRF_Main:	
  2429                           ; 0 bytes @ 0x0
  2430                           
  2431  0070                     ?_Exception_Main:	
  2432                           ; 0 bytes @ 0x0
  2433                           
  2434  0070                     ?_setRF_Initialization:	
  2435                           ; 0 bytes @ 0x0
  2436                           
  2437  0070                     ?_setRF_Main:	
  2438                           ; 0 bytes @ 0x0
  2439                           
  2440  0070                     ?_RF_RxDisable:	
  2441                           ; 0 bytes @ 0x0
  2442                           
  2443  0070                     ?_getRxData:	
  2444                           ; 0 bytes @ 0x0
  2445                           
  2446  0070                     ?_setLog_Code:	
  2447                           ; 0 bytes @ 0x0
  2448                           
  2449  0070                     ?_setControl_Lights_Table:	
  2450                           ; 0 bytes @ 0x0
  2451                           
  2452  0070                     ?_CC2500_TxData:	
  2453                           ; 0 bytes @ 0x0
  2454                           
  2455  0070                     ?_CC2500_PowerOnInitial:	
  2456                           ; 0 bytes @ 0x0
  2457                           
  2458  0070                     ?_Mcu_Initialization:	
  2459                           ; 0 bytes @ 0x0
  2460                           
  2461  0070                     ?_ISR:	
  2462                           ; 0 bytes @ 0x0
  2463                           
  2464  0070                     ??_ISR:	
  2465                           ; 0 bytes @ 0x0
  2466                           
  2467  0070                     ?_setTxData:	
  2468                           ; 0 bytes @ 0x0
  2469                           
  2470  0070                     ?_getMain_All_LightsStatus:	
  2471                           ; 0 bytes @ 0x0
  2472                           
  2473  0070                     ?_getMain_All_Error_Status:	
  2474                           ; 1 bytes @ 0x0
  2475                           
  2476  0070                     getMain_All_Error_Status@command:	
  2477                           ; 1 bytes @ 0x0
  2478                           
  2479                           
  2480                           ; 1 bytes @ 0x0
  2481  0070                     	ds	1
  2482  0071                     ??_RF_Timeout_Counter:	
  2483  0071                     ??_setRF_TimeoutCleared:	
  2484                           ; 0 bytes @ 0x1
  2485                           
  2486  0071                     ??_CC2500_WriteByte:	
  2487                           ; 0 bytes @ 0x1
  2488                           
  2489  0071                     ?_DelayTime_1us:	
  2490                           ; 0 bytes @ 0x1
  2491                           
  2492  0071                     ??_Fosc_Set:	
  2493                           ; 0 bytes @ 0x1
  2494                           
  2495  0071                     ??_IO_Set:	
  2496                           ; 0 bytes @ 0x1
  2497                           
  2498  0071                     ??_TMR1_Set:	
  2499                           ; 0 bytes @ 0x1
  2500                           
  2501  0071                     ??_myMain_Initialization:	
  2502                           ; 0 bytes @ 0x1
  2503                           
  2504  0071                     ??_myUARTtoRF_Initialization:	
  2505                           ; 0 bytes @ 0x1
  2506                           
  2507  0071                     ??_my_MainTimer:	
  2508                           ; 0 bytes @ 0x1
  2509                           
  2510  0071                     ??_setRF_Initialization:	
  2511                           ; 0 bytes @ 0x1
  2512                           
  2513  0071                     ??_Mcu_Initialization:	
  2514                           ; 0 bytes @ 0x1
  2515                           
  2516  0071                     ??_getMain_All_LightsStatus:	
  2517                           ; 0 bytes @ 0x1
  2518                           
  2519  0071                     ??_getMain_All_Error_Status:	
  2520                           ; 0 bytes @ 0x1
  2521                           
  2522  0071                     ?_setProductData:	
  2523                           ; 0 bytes @ 0x1
  2524                           
  2525  0071                     ?_setCmd_Status:	
  2526                           ; 0 bytes @ 0x1
  2527                           
  2528  0071                     ??_setTxData:	
  2529                           ; 0 bytes @ 0x1
  2530                           
  2531  0071                     ?___awdiv:	
  2532                           ; 0 bytes @ 0x1
  2533                           
  2534  0071                     ?___lwdiv:	
  2535                           ; 2 bytes @ 0x1
  2536                           
  2537  0071                     getMain_All_LightsStatus@status:	
  2538                           ; 2 bytes @ 0x1
  2539                           
  2540  0071                     getMain_All_Error_Status@status:	
  2541                           ; 1 bytes @ 0x1
  2542                           
  2543  0071                     setProductData@value:	
  2544                           ; 1 bytes @ 0x1
  2545                           
  2546  0071                     setCmd_Status@cmd:	
  2547                           ; 1 bytes @ 0x1
  2548                           
  2549  0071                     DelayTime_1us@count:	
  2550                           ; 1 bytes @ 0x1
  2551                           
  2552  0071                     ___awdiv@divisor:	
  2553                           ; 2 bytes @ 0x1
  2554                           
  2555  0071                     ___lwdiv@divisor:	
  2556                           ; 2 bytes @ 0x1
  2557                           
  2558                           
  2559                           ; 2 bytes @ 0x1
  2560  0071                     	ds	1
  2561  0072                     ??_RF_Initialization:	
  2562  0072                     ??_Exception_Main:	
  2563                           ; 0 bytes @ 0x2
  2564                           
  2565  0072                     ??_setProductData:	
  2566                           ; 0 bytes @ 0x2
  2567                           
  2568  0072                     ??_setCmd_Status:	
  2569                           ; 0 bytes @ 0x2
  2570                           
  2571  0072                     CC2500_WriteByte@loop_a:	
  2572                           ; 0 bytes @ 0x2
  2573                           
  2574                           
  2575                           ; 1 bytes @ 0x2
  2576  0072                     	ds	1
  2577  0073                     ??_CC2500_WriteCommand:	
  2578  0073                     ??_DelayTime_1us:	
  2579                           ; 0 bytes @ 0x3
  2580                           
  2581  0073                     ?_CC2500_WriteREG:	
  2582                           ; 0 bytes @ 0x3
  2583                           
  2584  0073                     CC2500_WriteREG@value:	
  2585                           ; 0 bytes @ 0x3
  2586                           
  2587  0073                     Exception_Main@lights:	
  2588                           ; 1 bytes @ 0x3
  2589                           
  2590  0073                     setProductData@address:	
  2591                           ; 1 bytes @ 0x3
  2592                           
  2593  0073                     setCmd_Status@number:	
  2594                           ; 1 bytes @ 0x3
  2595                           
  2596  0073                     DelayTime_1us@i:	
  2597                           ; 1 bytes @ 0x3
  2598                           
  2599  0073                     ___awdiv@dividend:	
  2600                           ; 2 bytes @ 0x3
  2601                           
  2602  0073                     ___lwdiv@dividend:	
  2603                           ; 2 bytes @ 0x3
  2604                           
  2605                           
  2606                           ; 2 bytes @ 0x3
  2607  0073                     	ds	1
  2608  0074                     ??_CC2500_WriteREG:	
  2609  0074                     ??_setLog_Code:	
  2610                           ; 0 bytes @ 0x4
  2611                           
  2612  0074                     ??_setControl_Lights_Table:	
  2613                           ; 0 bytes @ 0x4
  2614                           
  2615  0074                     CC2500_WriteCommand@command:	
  2616                           ; 0 bytes @ 0x4
  2617                           
  2618  0074                     Exception_Main@count:	
  2619                           ; 1 bytes @ 0x4
  2620                           
  2621                           
  2622                           ; 1 bytes @ 0x4
  2623  0074                     	ds	1
  2624  0075                     ??_CC2500_ClearTXFIFO:	
  2625  0075                     ??_CC2500_ClearRXFIFO:	
  2626                           ; 0 bytes @ 0x5
  2627                           
  2628  0075                     ??_CC2500_SIDLEMode:	
  2629                           ; 0 bytes @ 0x5
  2630                           
  2631  0075                     ??_RF_RxDisable:	
  2632                           ; 0 bytes @ 0x5
  2633                           
  2634  0075                     ??_getRxData:	
  2635                           ; 0 bytes @ 0x5
  2636                           
  2637  0075                     ??_CC2500_TxData:	
  2638                           ; 0 bytes @ 0x5
  2639                           
  2640  0075                     ??___awdiv:	
  2641                           ; 0 bytes @ 0x5
  2642                           
  2643  0075                     ??___lwdiv:	
  2644                           ; 0 bytes @ 0x5
  2645                           
  2646  0075                     CC2500_WriteREG@w_addr:	
  2647                           ; 0 bytes @ 0x5
  2648                           
  2649  0075                     Exception_Main@status:	
  2650                           ; 1 bytes @ 0x5
  2651                           
  2652  0075                     DelayTime_1us@j:	
  2653                           ; 1 bytes @ 0x5
  2654                           
  2655                           
  2656                           ; 2 bytes @ 0x5
  2657  0075                     	ds	1
  2658  0076                     ??_CC2500_InitSetREG:	
  2659  0076                     ??_CC2500_InitPATable:	
  2660                           ; 0 bytes @ 0x6
  2661                           
  2662  0076                     CC2500_TxData@loop_e:	
  2663                           ; 0 bytes @ 0x6
  2664                           
  2665  0076                     Exception_Main@error:	
  2666                           ; 1 bytes @ 0x6
  2667                           
  2668  0076                     getRxData@error:	
  2669                           ; 1 bytes @ 0x6
  2670                           
  2671  0076                     ___awdiv@counter:	
  2672                           ; 1 bytes @ 0x6
  2673                           
  2674  0076                     ___lwdiv@quotient:	
  2675                           ; 1 bytes @ 0x6
  2676                           
  2677                           
  2678                           ; 2 bytes @ 0x6
  2679  0076                     	ds	1
  2680  0077                     ??_CC2500_PowerRST:	
  2681  0077                     ??_CC2500_FrequencyCabr:	
  2682                           ; 0 bytes @ 0x7
  2683                           
  2684  0077                     CC2500_InitSetREG@temp1:	
  2685                           ; 0 bytes @ 0x7
  2686                           
  2687  0077                     CC2500_InitPATable@temp:	
  2688                           ; 1 bytes @ 0x7
  2689                           
  2690  0077                     ___awdiv@sign:	
  2691                           ; 1 bytes @ 0x7
  2692                           
  2693                           
  2694                           ; 1 bytes @ 0x7
  2695  0077                     	ds	1
  2696  0078                     CC2500_InitSetREG@temp2:	
  2697  0078                     CC2500_InitPATable@loop_d:	
  2698                           ; 1 bytes @ 0x8
  2699                           
  2700  0078                     ___lwdiv@counter:	
  2701                           ; 1 bytes @ 0x8
  2702                           
  2703  0078                     ___awdiv@quotient:	
  2704                           ; 1 bytes @ 0x8
  2705                           
  2706                           
  2707                           ; 2 bytes @ 0x8
  2708  0078                     	ds	1
  2709  0079                     CC2500_InitSetREG@loop_c:	
  2710                           
  2711                           ; 1 bytes @ 0x9
  2712  0079                     	ds	1
  2713  007A                     ??_myUARTtoRF_Main:	
  2714  007A                     ??_setRF_Main:	
  2715                           ; 0 bytes @ 0xA
  2716                           
  2717  007A                     ??_uartC_timer_strat:	
  2718                           ; 0 bytes @ 0xA
  2719                           
  2720  007A                     ??_CC2500_PowerOnInitial:	
  2721                           ; 0 bytes @ 0xA
  2722                           
  2723  007A                     setRF_Main@error:	
  2724                           ; 0 bytes @ 0xA
  2725                           
  2726                           
  2727                           ; 1 bytes @ 0xA
  2728  007A                     	ds	1
  2729  007B                     ??_RF_Main:	
  2730  007B                     ??_main:	
  2731                           ; 0 bytes @ 0xB
  2732                           
  2733                           
  2734                           	psect	cstackBANK0
  2735  0050                     __pcstackBANK0:	
  2736                           ; 0 bytes @ 0xB
  2737                           
  2738  0050                     ?_uartC_timer_strat:	
  2739  0050                     uartC_timer_strat@time_ms:	
  2740                           ; 0 bytes @ 0x0
  2741                           
  2742                           
  2743                           ; 2 bytes @ 0x0
  2744  0050                     	ds	2
  2745  0052                     ?_main:	
  2746  0052                     main@argc:	
  2747                           ; 2 bytes @ 0x2
  2748                           
  2749                           
  2750                           ; 2 bytes @ 0x2
  2751  0052                     	ds	2
  2752  0054                     main@argv:	
  2753                           
  2754                           ; 2 bytes @ 0x4
  2755  0054                     	ds	2
  2756                           
  2757                           	psect	maintext
  2758  0506                     __pmaintext:	
  2759 ;;
  2760 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2761 ;;
  2762 ;; *************** function _main *****************
  2763 ;; Defined at:
  2764 ;;		line 7 in file "../src/Main_B1.c"
  2765 ;; Parameters:    Size  Location     Type
  2766 ;;  argc            2    2[BANK0 ] int 
  2767 ;;  argv            2    4[BANK0 ] PTR PTR unsigned char 
  2768 ;; Auto vars:     Size  Location     Type
  2769 ;;		None
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  2    2[BANK0 ] int 
  2772 ;; Registers used:
  2773 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2774 ;; Tracked objects:
  2775 ;;		On entry : 17F/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2779 ;;      Params:         0       4       0       0       0       0       0       0
  2780 ;;      Locals:         0       0       0       0       0       0       0       0
  2781 ;;      Temps:          0       0       0       0       0       0       0       0
  2782 ;;      Totals:         0       4       0       0       0       0       0       0
  2783 ;;Total ram usage:        4 bytes
  2784 ;; Hardware stack levels required when called:    8
  2785 ;; This function calls:
  2786 ;;		_CC2500_PowerOnInitial
  2787 ;;		_Exception_Main
  2788 ;;		_Mcu_Initialization
  2789 ;;		_RF_Initialization
  2790 ;;		_RF_Main
  2791 ;;		_myMain_Initialization
  2792 ;;		_myUARTtoRF_Initialization
  2793 ;;		_myUARTtoRF_Main
  2794 ;;		_my_MainTimer
  2795 ;; This function is called by:
  2796 ;;		Startup code after reset
  2797 ;; This function uses a non-reentrant model
  2798 ;;
  2799                           
  2800                           
  2801                           ;psect for function _main
  2802  0506                     _main:	
  2803                           
  2804                           ;Main_B1.c: 8: myMain_Initialization();
  2805                           
  2806                           ;incstack = 0
  2807                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2808  0506  3186  2666  3185   	fcall	_myMain_Initialization
  2809                           
  2810                           ;Main_B1.c: 9: Mcu_Initialization();
  2811  0509  3186  269E  3185   	fcall	_Mcu_Initialization
  2812                           
  2813                           ;Main_B1.c: 10: ;;
  2814                           ;Main_B1.c: 11: ;;
  2815                           ;Main_B1.c: 12: ;;
  2816                           ;Main_B1.c: 14: ;;
  2817                           ;Main_B1.c: 15: ;;
  2818                           ;Main_B1.c: 16: ;;
  2819                           ;Main_B1.c: 17: ;;
  2820                           ;Main_B1.c: 18: ;;
  2821                           ;Main_B1.c: 20: ;;
  2822                           ;Main_B1.c: 21: ;;
  2823                           ;Main_B1.c: 22: ;;
  2824                           ;Main_B1.c: 23: ;;
  2825                           ;Main_B1.c: 24: ;;
  2826                           ;Main_B1.c: 25: RF_Initialization();
  2827  050C  3186  26D4  3185   	fcall	_RF_Initialization
  2828                           
  2829                           ;Main_B1.c: 26: CC2500_PowerOnInitial();
  2830  050F  3186  2619  3185   	fcall	_CC2500_PowerOnInitial
  2831                           
  2832                           ;Main_B1.c: 27: ;;
  2833                           ;Main_B1.c: 28: myUARTtoRF_Initialization();
  2834  0512  3186  26A7  3185   	fcall	_myUARTtoRF_Initialization
  2835  0515                     l615:	
  2836                           ;Main_B1.c: 30: while (1) {
  2837                           
  2838                           
  2839                           ;Main_B1.c: 57: }
  2840                           ;Main_B1.c: 93: if (Timer1.Timeout == 1) {
  2841  0515  0020               	movlb	0	; select bank0
  2842  0516  1C41               	btfss	_Timer1,0
  2843  0517  2D15               	goto	l615
  2844                           
  2845                           ;Main_B1.c: 94: Timer1.Timeout = 0;
  2846  0518  1041               	bcf	_Timer1,0
  2847                           
  2848                           ;Main_B1.c: 96: my_MainTimer();
  2849  0519  3184  2437  3185   	fcall	_my_MainTimer
  2850                           
  2851                           ;Main_B1.c: 97: ;;
  2852                           ;Main_B1.c: 98: ;;
  2853                           ;Main_B1.c: 99: ;;
  2854                           ;Main_B1.c: 100: if (myMain.PowerON == 1) {
  2855  051C  0020               	movlb	0	; select bank0
  2856  051D  1C2F               	btfss	_myMain,0
  2857  051E  2D15               	goto	l615
  2858                           
  2859                           ;Main_B1.c: 101: ;;
  2860                           ;Main_B1.c: 103: ;;
  2861                           ;Main_B1.c: 104: ;;
  2862                           ;Main_B1.c: 106: ;;
  2863                           ;Main_B1.c: 107: ;;
  2864                           ;Main_B1.c: 108: ;;
  2865                           ;Main_B1.c: 109: ;;
  2866                           ;Main_B1.c: 111: ;;
  2867                           ;Main_B1.c: 112: ;;
  2868                           ;Main_B1.c: 113: ;;
  2869                           ;Main_B1.c: 114: ;;
  2870                           ;Main_B1.c: 115: ;;
  2871                           ;Main_B1.c: 117: RF_Main();
  2872  051F  3186  26CE  3185   	fcall	_RF_Main
  2873                           
  2874                           ;Main_B1.c: 118: ;;
  2875                           ;Main_B1.c: 119: ;;
  2876                           ;Main_B1.c: 120: myUARTtoRF_Main();
  2877  0522  3184  2491  3185   	fcall	_myUARTtoRF_Main
  2878                           
  2879                           ;Main_B1.c: 121: Exception_Main();
  2880  0525  3185  25ED  3185   	fcall	_Exception_Main
  2881  0528  2D15               	goto	l615
  2882  0529                     __end_of_main:	
  2883                           ;Main_B1.c: 128: }
  2884                           ;Main_B1.c: 129: }
  2885                           ;Main_B1.c: 163: }
  2886                           ;Main_B1.c: 164: return (0);
  2887                           ;	Return value of _main is never used
  2888                           
  2889                           
  2890                           	psect	text1
  2891  0437                     __ptext1:	
  2892 ;; *************** function _my_MainTimer *****************
  2893 ;; Defined at:
  2894 ;;		line 185 in file "../src/Main_B1.c"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;		None
  2897 ;; Auto vars:     Size  Location     Type
  2898 ;;		None
  2899 ;; Return value:  Size  Location     Type
  2900 ;;		None               void
  2901 ;; Registers used:
  2902 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2903 ;; Tracked objects:
  2904 ;;		On entry : 0/0
  2905 ;;		On exit  : 0/0
  2906 ;;		Unchanged: 0/0
  2907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2908 ;;      Params:         0       0       0       0       0       0       0       0
  2909 ;;      Locals:         0       0       0       0       0       0       0       0
  2910 ;;      Temps:          1       0       0       0       0       0       0       0
  2911 ;;      Totals:         1       0       0       0       0       0       0       0
  2912 ;;Total ram usage:        1 bytes
  2913 ;; Hardware stack levels used:    1
  2914 ;; Hardware stack levels required when called:    2
  2915 ;; This function calls:
  2916 ;;		Nothing
  2917 ;; This function is called by:
  2918 ;;		_main
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           
  2922                           
  2923                           ;psect for function _my_MainTimer
  2924  0437                     _my_MainTimer:	
  2925                           
  2926                           ;Main_B1.c: 187: if (myMain.PowerON == 0) {
  2927                           
  2928                           ;incstack = 0
  2929                           ; Regs used in _my_MainTimer: [wreg+fsr1l+fsr1h+status,2+status,0]
  2930  0437  0020               	movlb	0	; select bank0
  2931  0438  182F               	btfsc	_myMain,0
  2932  0439  2C46               	goto	l3003
  2933                           
  2934                           ;Main_B1.c: 188: myMain.PowerCount++;
  2935  043A  3001               	movlw	1
  2936  043B  00F1               	movwf	??_my_MainTimer
  2937  043C  0871               	movf	??_my_MainTimer,w
  2938  043D  07B0               	addwf	_myMain+1,f
  2939                           
  2940                           ;Main_B1.c: 189: if (myMain.PowerCount == (1500 / 20)) {
  2941  043E  0830               	movf	_myMain+1,w
  2942  043F  3A4B               	xorlw	75
  2943  0440  1D03               	skipz
  2944  0441  0008               	return
  2945                           
  2946                           ;Main_B1.c: 190: myMain.PowerCount = 0;
  2947  0442  01B0               	clrf	_myMain+1
  2948                           
  2949                           ;Main_B1.c: 191: myMain.PowerON = 1;
  2950  0443  142F               	bsf	_myMain,0
  2951                           
  2952                           ;Main_B1.c: 196: ;;
  2953                           ;Main_B1.c: 197: myMain.SelfTest = 1;
  2954  0444  162F               	bsf	_myMain,4
  2955                           
  2956                           ;Main_B1.c: 206: }
  2957                           ;Main_B1.c: 207: } else {
  2958  0445  0008               	return
  2959  0446                     l3003:	
  2960                           
  2961                           ;Main_B1.c: 208: myMain.PowerCount++;
  2962  0446  3001               	movlw	1
  2963  0447  00F1               	movwf	??_my_MainTimer
  2964  0448  0871               	movf	??_my_MainTimer,w
  2965  0449  07B0               	addwf	_myMain+1,f
  2966                           
  2967                           ;Main_B1.c: 209: if (myMain.PowerCount == (1000 / 20)) {
  2968  044A  0830               	movf	_myMain+1,w
  2969  044B  3A32               	xorlw	50
  2970  044C  1903               	btfsc	3,2
  2971                           
  2972                           ;Main_B1.c: 210: myMain.PowerCount = 0;
  2973  044D  01B0               	clrf	_myMain+1
  2974                           
  2975                           ;Main_B1.c: 226: }
  2976                           ;Main_B1.c: 228: myMain.Count1++;
  2977  044E  3001               	movlw	1
  2978  044F  07B3               	addwf	_myMain+4,f
  2979  0450  3000               	movlw	0
  2980  0451  3DB4               	addwfc	_myMain+5,f
  2981                           
  2982                           ;Main_B1.c: 229: if (myMain.Count1 == (1000 / 20)) {
  2983  0452  3004               	movlw	4
  2984  0453  3E2F               	addlw	_myMain& (0+255)
  2985  0454  0086               	movwf	6
  2986  0455  0187               	clrf	7
  2987  0456  3F40               	moviw [0]fsr1
  2988  0457  3A32               	xorlw	50
  2989  0458  1D03               	skipz
  2990  0459  2C5C               	goto	u1915
  2991  045A  3F41               	moviw [1]fsr1
  2992  045B  3A00               	xorlw	0
  2993  045C                     u1915:	
  2994  045C  1D03               	skipz
  2995  045D  0008               	return
  2996                           
  2997                           ;Main_B1.c: 230: myMain.Count1 = 0;
  2998  045E  01B3               	clrf	_myMain+4
  2999  045F  01B4               	clrf	_myMain+5
  3000                           
  3001                           ;Main_B1.c: 242: if (myMain.Flag) {
  3002  0460  1CAF               	btfss	_myMain,1
  3003  0461  2C64               	goto	l631
  3004                           
  3005                           ;Main_B1.c: 243: myMain.Flag = 0;
  3006  0462  10AF               	bcf	_myMain,1
  3007                           
  3008                           ;Main_B1.c: 252: } else {
  3009  0463  0008               	return
  3010  0464                     l631:	
  3011                           
  3012                           ;Main_B1.c: 253: myMain.Flag = 1;
  3013  0464  14AF               	bsf	_myMain,1
  3014  0465  0008               	return
  3015  0466                     __end_of_my_MainTimer:	
  3016                           
  3017                           	psect	text2
  3018  0491                     __ptext2:	
  3019 ;; *************** function _myUARTtoRF_Main *****************
  3020 ;; Defined at:
  3021 ;;		line 15 in file "../src/myUARTtoRF.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;		None
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;		None
  3026 ;; Return value:  Size  Location     Type
  3027 ;;		None               void
  3028 ;; Registers used:
  3029 ;;		wreg, status,2, status,0, pclath, cstack
  3030 ;; Tracked objects:
  3031 ;;		On entry : 0/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3035 ;;      Params:         0       0       0       0       0       0       0       0
  3036 ;;      Locals:         0       0       0       0       0       0       0       0
  3037 ;;      Temps:          0       0       0       0       0       0       0       0
  3038 ;;      Totals:         0       0       0       0       0       0       0       0
  3039 ;;Total ram usage:        0 bytes
  3040 ;; Hardware stack levels used:    1
  3041 ;; Hardware stack levels required when called:    4
  3042 ;; This function calls:
  3043 ;;		_uartC_timer_strat
  3044 ;; This function is called by:
  3045 ;;		_main
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049                           
  3050                           ;psect for function _myUARTtoRF_Main
  3051  0491                     _myUARTtoRF_Main:	
  3052                           
  3053                           ;myUARTtoRF.c: 16: uartC_timer_strat(u1.time_value);
  3054                           
  3055                           ;incstack = 0
  3056                           ; Regs used in _myUARTtoRF_Main: [wreg+status,2+status,0+pclath+cstack]
  3057  0491  0020               	movlb	0	; select bank0
  3058  0492  0840               	movf	_u1+4,w
  3059  0493  01D1               	clrf	uartC_timer_strat@time_ms+1
  3060  0494  07D1               	addwf	uartC_timer_strat@time_ms+1,f
  3061  0495  083F               	movf	_u1+3,w
  3062  0496  01D0               	clrf	uartC_timer_strat@time_ms
  3063  0497  07D0               	addwf	uartC_timer_strat@time_ms,f
  3064  0498  3184  2466  3184   	fcall	_uartC_timer_strat
  3065                           
  3066                           ;myUARTtoRF.c: 18: if (RB0 == 0) {
  3067  049B  0020               	movlb	0	; select bank0
  3068  049C  180D               	btfsc	13,0	;volatile
  3069  049D  2CA9               	goto	l1250
  3070                           
  3071                           ;myUARTtoRF.c: 19: if (u1.Switch_Status == 0) {
  3072  049E  193C               	btfsc	_u1,2
  3073  049F  2CB3               	goto	l3249
  3074                           
  3075                           ;myUARTtoRF.c: 20: u1.Switch_Status = 1;
  3076  04A0  153C               	bsf	_u1,2
  3077                           
  3078                           ;myUARTtoRF.c: 21: u1.Timer_Enable = 1;
  3079  04A1  143C               	bsf	_u1,0
  3080                           
  3081                           ;myUARTtoRF.c: 22: u1.time_value = 100;
  3082  04A2  3064               	movlw	100
  3083  04A3  00BF               	movwf	_u1+3
  3084  04A4  3000               	movlw	0
  3085  04A5  00C0               	movwf	_u1+4
  3086                           
  3087                           ;myUARTtoRF.c: 23: u1.time = 0;
  3088  04A6  01BD               	clrf	_u1+1
  3089  04A7  01BE               	clrf	_u1+2
  3090                           
  3091                           ;myUARTtoRF.c: 24: }
  3092                           ;myUARTtoRF.c: 25: } else {
  3093  04A8  2CB3               	goto	l3249
  3094  04A9                     l1250:	
  3095                           
  3096                           ;myUARTtoRF.c: 26: if (u1.Switch_Status == 1) {
  3097  04A9  1D3C               	btfss	_u1,2
  3098  04AA  2CB3               	goto	l3249
  3099                           
  3100                           ;myUARTtoRF.c: 27: u1.Timer_Enable = 1;
  3101  04AB  143C               	bsf	_u1,0
  3102                           
  3103                           ;myUARTtoRF.c: 28: u1.time_value = 100;
  3104  04AC  3064               	movlw	100
  3105  04AD  00BF               	movwf	_u1+3
  3106  04AE  3000               	movlw	0
  3107  04AF  00C0               	movwf	_u1+4
  3108                           
  3109                           ;myUARTtoRF.c: 29: u1.time = 0;
  3110  04B0  01BD               	clrf	_u1+1
  3111  04B1  01BE               	clrf	_u1+2
  3112                           
  3113                           ;myUARTtoRF.c: 30: u1.Switch_Status = 0;
  3114  04B2  113C               	bcf	_u1,2
  3115  04B3                     l3249:	
  3116                           
  3117                           ;myUARTtoRF.c: 31: }
  3118                           ;myUARTtoRF.c: 32: }
  3119                           ;myUARTtoRF.c: 34: if (u1.Switch_Enable_1 == 1) {
  3120  04B3  1CBC               	btfss	_u1,1
  3121  04B4  0008               	return
  3122                           
  3123                           ;myUARTtoRF.c: 35: u1.Switch_Enable_1 = 0;
  3124  04B5  10BC               	bcf	_u1,1
  3125                           
  3126                           ;myUARTtoRF.c: 36: RA1 = RA1 == 1 ? 0 : 1;
  3127  04B6  3002               	movlw	2
  3128  04B7  068C               	xorwf	12,f
  3129  04B8  0008               	return
  3130  04B9                     __end_of_myUARTtoRF_Main:	
  3131                           
  3132                           	psect	text3
  3133  0466                     __ptext3:	
  3134 ;; *************** function _uartC_timer_strat *****************
  3135 ;; Defined at:
  3136 ;;		line 40 in file "../src/myUARTtoRF.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;  time_ms         2    0[BANK0 ] int 
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;		None
  3141 ;; Return value:  Size  Location     Type
  3142 ;;		None               void
  3143 ;; Registers used:
  3144 ;;		wreg, status,2, status,0, pclath, cstack
  3145 ;; Tracked objects:
  3146 ;;		On entry : 0/0
  3147 ;;		On exit  : 0/0
  3148 ;;		Unchanged: 0/0
  3149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3150 ;;      Params:         0       2       0       0       0       0       0       0
  3151 ;;      Locals:         0       0       0       0       0       0       0       0
  3152 ;;      Temps:          0       0       0       0       0       0       0       0
  3153 ;;      Totals:         0       2       0       0       0       0       0       0
  3154 ;;Total ram usage:        2 bytes
  3155 ;; Hardware stack levels used:    1
  3156 ;; Hardware stack levels required when called:    3
  3157 ;; This function calls:
  3158 ;;		___awdiv
  3159 ;; This function is called by:
  3160 ;;		_myUARTtoRF_Main
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           
  3165                           ;psect for function _uartC_timer_strat
  3166  0466                     _uartC_timer_strat:	
  3167                           
  3168                           ;myUARTtoRF.c: 42: if (u1.Timer_Enable == 1) {
  3169                           
  3170                           ;incstack = 0
  3171                           ; Regs used in _uartC_timer_strat: [wreg+status,2+status,0+pclath+cstack]
  3172  0466  0020               	movlb	0	; select bank0
  3173  0467  1C3C               	btfss	_u1,0
  3174  0468  0008               	return
  3175                           
  3176                           ;myUARTtoRF.c: 43: u1.time++;
  3177  0469  3001               	movlw	1
  3178  046A  07BD               	addwf	_u1+1,f
  3179  046B  3000               	movlw	0
  3180  046C  3DBE               	addwfc	_u1+2,f
  3181                           
  3182                           ;myUARTtoRF.c: 44: if (u1.time == time_ms / 20) {
  3183  046D  3014               	movlw	20
  3184  046E  00F1               	movwf	___awdiv@divisor
  3185  046F  3000               	movlw	0
  3186  0470  00F2               	movwf	___awdiv@divisor+1
  3187  0471  0851               	movf	uartC_timer_strat@time_ms+1,w
  3188  0472  01F4               	clrf	___awdiv@dividend+1
  3189  0473  07F4               	addwf	___awdiv@dividend+1,f
  3190  0474  0850               	movf	uartC_timer_strat@time_ms,w
  3191  0475  01F3               	clrf	___awdiv@dividend
  3192  0476  07F3               	addwf	___awdiv@dividend,f
  3193  0477  3183  2324  3184   	fcall	___awdiv
  3194  047A  0020               	movlb	0	; select bank0
  3195  047B  083E               	movf	_u1+2,w
  3196  047C  0672               	xorwf	?___awdiv+1,w
  3197  047D  1D03               	skipz
  3198  047E  2C81               	goto	u2165
  3199  047F  083D               	movf	_u1+1,w
  3200  0480  0671               	xorwf	?___awdiv,w
  3201  0481                     u2165:	
  3202  0481  1D03               	skipz
  3203  0482  0008               	return
  3204                           
  3205                           ;myUARTtoRF.c: 45: u1.time = 0;
  3206  0483  01BD               	clrf	_u1+1
  3207  0484  01BE               	clrf	_u1+2
  3208                           
  3209                           ;myUARTtoRF.c: 46: u1.Timer_Enable = 0;
  3210  0485  103C               	bcf	_u1,0
  3211                           
  3212                           ;myUARTtoRF.c: 47: u1.Switch_Enable_1 = u1.Switch_Status == 1 ? 0 : 1;
  3213  0486  1003               	clrc
  3214  0487  1D3C               	btfss	_u1,2
  3215  0488  1403               	setc
  3216  0489  1C03               	btfss	3,0
  3217  048A  2C8E               	goto	u2170
  3218  048B  0020               	movlb	0	; select bank0
  3219  048C  14BC               	bsf	_u1,1
  3220  048D  0008               	return
  3221  048E                     u2170:	
  3222  048E  0020               	movlb	0	; select bank0
  3223  048F  10BC               	bcf	_u1,1
  3224  0490  0008               	return
  3225  0491                     __end_of_uartC_timer_strat:	
  3226                           
  3227                           	psect	text4
  3228  0324                     __ptext4:	
  3229 ;; *************** function ___awdiv *****************
  3230 ;; Defined at:
  3231 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;  divisor         2    1[COMMON] int 
  3234 ;;  dividend        2    3[COMMON] int 
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;  quotient        2    8[COMMON] int 
  3237 ;;  sign            1    7[COMMON] unsigned char 
  3238 ;;  counter         1    6[COMMON] unsigned char 
  3239 ;; Return value:  Size  Location     Type
  3240 ;;                  2    1[COMMON] int 
  3241 ;; Registers used:
  3242 ;;		wreg, status,2, status,0
  3243 ;; Tracked objects:
  3244 ;;		On entry : 0/0
  3245 ;;		On exit  : 0/0
  3246 ;;		Unchanged: 0/0
  3247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3248 ;;      Params:         4       0       0       0       0       0       0       0
  3249 ;;      Locals:         4       0       0       0       0       0       0       0
  3250 ;;      Temps:          1       0       0       0       0       0       0       0
  3251 ;;      Totals:         9       0       0       0       0       0       0       0
  3252 ;;Total ram usage:        9 bytes
  3253 ;; Hardware stack levels used:    1
  3254 ;; Hardware stack levels required when called:    2
  3255 ;; This function calls:
  3256 ;;		Nothing
  3257 ;; This function is called by:
  3258 ;;		_uartC_timer_strat
  3259 ;; This function uses a non-reentrant model
  3260 ;;
  3261                           
  3262                           
  3263                           ;psect for function ___awdiv
  3264  0324                     ___awdiv:	
  3265                           
  3266                           ;incstack = 0
  3267                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3268  0324  01F7               	clrf	___awdiv@sign
  3269  0325  1FF2               	btfss	___awdiv@divisor+1,7
  3270  0326  2B2E               	goto	l2781
  3271  0327  09F1               	comf	___awdiv@divisor,f
  3272  0328  09F2               	comf	___awdiv@divisor+1,f
  3273  0329  0AF1               	incf	___awdiv@divisor,f
  3274  032A  1903               	skipnz
  3275  032B  0AF2               	incf	___awdiv@divisor+1,f
  3276  032C  01F7               	clrf	___awdiv@sign
  3277  032D  0AF7               	incf	___awdiv@sign,f
  3278  032E                     l2781:	
  3279  032E  1FF4               	btfss	___awdiv@dividend+1,7
  3280  032F  2B39               	goto	l2787
  3281  0330  09F3               	comf	___awdiv@dividend,f
  3282  0331  09F4               	comf	___awdiv@dividend+1,f
  3283  0332  0AF3               	incf	___awdiv@dividend,f
  3284  0333  1903               	skipnz
  3285  0334  0AF4               	incf	___awdiv@dividend+1,f
  3286  0335  3001               	movlw	1
  3287  0336  00F5               	movwf	??___awdiv
  3288  0337  0875               	movf	??___awdiv,w
  3289  0338  06F7               	xorwf	___awdiv@sign,f
  3290  0339                     l2787:	
  3291  0339  01F8               	clrf	___awdiv@quotient
  3292  033A  01F9               	clrf	___awdiv@quotient+1
  3293  033B  0872               	movf	___awdiv@divisor+1,w
  3294  033C  0471               	iorwf	___awdiv@divisor,w
  3295  033D  1903               	skipnz
  3296  033E  2B68               	goto	l2809
  3297  033F  01F6               	clrf	___awdiv@counter
  3298  0340  0AF6               	incf	___awdiv@counter,f
  3299  0341                     l2797:	
  3300  0341  1BF2               	btfsc	___awdiv@divisor+1,7
  3301  0342  2B4D               	goto	l2799
  3302  0343  3001               	movlw	1
  3303  0344                     u1545:	
  3304  0344  35F1               	lslf	___awdiv@divisor,f
  3305  0345  0DF2               	rlf	___awdiv@divisor+1,f
  3306  0346  0B89               	decfsz	9,f
  3307  0347  2B44               	goto	u1545
  3308  0348  3001               	movlw	1
  3309  0349  00F5               	movwf	??___awdiv
  3310  034A  0875               	movf	??___awdiv,w
  3311  034B  07F6               	addwf	___awdiv@counter,f
  3312  034C  2B41               	goto	l2797
  3313  034D                     l2799:	
  3314  034D  3001               	movlw	1
  3315  034E                     u1565:	
  3316  034E  35F8               	lslf	___awdiv@quotient,f
  3317  034F  0DF9               	rlf	___awdiv@quotient+1,f
  3318  0350  0B89               	decfsz	9,f
  3319  0351  2B4E               	goto	u1565
  3320  0352  0872               	movf	___awdiv@divisor+1,w
  3321  0353  0274               	subwf	___awdiv@dividend+1,w
  3322  0354  1D03               	skipz
  3323  0355  2B58               	goto	u1575
  3324  0356  0871               	movf	___awdiv@divisor,w
  3325  0357  0273               	subwf	___awdiv@dividend,w
  3326  0358                     u1575:	
  3327  0358  1C03               	skipc
  3328  0359  2B5F               	goto	l2805
  3329  035A  0871               	movf	___awdiv@divisor,w
  3330  035B  02F3               	subwf	___awdiv@dividend,f
  3331  035C  0872               	movf	___awdiv@divisor+1,w
  3332  035D  3BF4               	subwfb	___awdiv@dividend+1,f
  3333  035E  1478               	bsf	___awdiv@quotient,0
  3334  035F                     l2805:	
  3335  035F  3001               	movlw	1
  3336  0360                     u1585:	
  3337  0360  36F2               	lsrf	___awdiv@divisor+1,f
  3338  0361  0CF1               	rrf	___awdiv@divisor,f
  3339  0362  0B89               	decfsz	9,f
  3340  0363  2B60               	goto	u1585
  3341  0364  3001               	movlw	1
  3342  0365  02F6               	subwf	___awdiv@counter,f
  3343  0366  1D03               	btfss	3,2
  3344  0367  2B4D               	goto	l2799
  3345  0368                     l2809:	
  3346  0368  0877               	movf	___awdiv@sign,w
  3347  0369  1903               	btfsc	3,2
  3348  036A  2B70               	goto	l2813
  3349  036B  09F8               	comf	___awdiv@quotient,f
  3350  036C  09F9               	comf	___awdiv@quotient+1,f
  3351  036D  0AF8               	incf	___awdiv@quotient,f
  3352  036E  1903               	skipnz
  3353  036F  0AF9               	incf	___awdiv@quotient+1,f
  3354  0370                     l2813:	
  3355  0370  0879               	movf	___awdiv@quotient+1,w
  3356  0371  01F2               	clrf	?___awdiv+1
  3357  0372  07F2               	addwf	?___awdiv+1,f
  3358  0373  0878               	movf	___awdiv@quotient,w
  3359  0374  01F1               	clrf	?___awdiv
  3360  0375  07F1               	addwf	?___awdiv,f
  3361  0376  0008               	return
  3362  0377                     __end_of___awdiv:	
  3363                           
  3364                           	psect	text5
  3365  06A7                     __ptext5:	
  3366 ;; *************** function _myUARTtoRF_Initialization *****************
  3367 ;; Defined at:
  3368 ;;		line 7 in file "../src/myUARTtoRF.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;		None
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;		None
  3373 ;; Return value:  Size  Location     Type
  3374 ;;		None               void
  3375 ;; Registers used:
  3376 ;;		status,2
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3382 ;;      Params:         0       0       0       0       0       0       0       0
  3383 ;;      Locals:         0       0       0       0       0       0       0       0
  3384 ;;      Temps:          0       0       0       0       0       0       0       0
  3385 ;;      Totals:         0       0       0       0       0       0       0       0
  3386 ;;Total ram usage:        0 bytes
  3387 ;; Hardware stack levels used:    1
  3388 ;; Hardware stack levels required when called:    2
  3389 ;; This function calls:
  3390 ;;		Nothing
  3391 ;; This function is called by:
  3392 ;;		_main
  3393 ;; This function uses a non-reentrant model
  3394 ;;
  3395                           
  3396                           
  3397                           ;psect for function _myUARTtoRF_Initialization
  3398  06A7                     _myUARTtoRF_Initialization:	
  3399                           
  3400                           ;myUARTtoRF.c: 8: u1.time_value = 0;
  3401                           
  3402                           ;incstack = 0
  3403                           ; Regs used in _myUARTtoRF_Initialization: [status,2]
  3404  06A7  0020               	movlb	0	; select bank0
  3405  06A8  01BF               	clrf	_u1+3
  3406  06A9  01C0               	clrf	_u1+4
  3407                           
  3408                           ;myUARTtoRF.c: 9: RA0 = 0;
  3409  06AA  100C               	bcf	12,0	;volatile
  3410                           
  3411                           ;myUARTtoRF.c: 10: RA1 = 1;
  3412  06AB  148C               	bsf	12,1	;volatile
  3413                           
  3414                           ;myUARTtoRF.c: 11: RA2 = 1;
  3415  06AC  150C               	bsf	12,2	;volatile
  3416  06AD  0008               	return
  3417  06AE                     __end_of_myUARTtoRF_Initialization:	
  3418                           
  3419                           	psect	text6
  3420  0666                     __ptext6:	
  3421 ;; *************** function _myMain_Initialization *****************
  3422 ;; Defined at:
  3423 ;;		line 170 in file "../src/Main_B1.c"
  3424 ;; Parameters:    Size  Location     Type
  3425 ;;		None
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;		None
  3428 ;; Return value:  Size  Location     Type
  3429 ;;		None               void
  3430 ;; Registers used:
  3431 ;;		wreg, fsr1l, fsr1h
  3432 ;; Tracked objects:
  3433 ;;		On entry : 0/0
  3434 ;;		On exit  : 0/0
  3435 ;;		Unchanged: 0/0
  3436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3437 ;;      Params:         0       0       0       0       0       0       0       0
  3438 ;;      Locals:         0       0       0       0       0       0       0       0
  3439 ;;      Temps:          1       0       0       0       0       0       0       0
  3440 ;;      Totals:         1       0       0       0       0       0       0       0
  3441 ;;Total ram usage:        1 bytes
  3442 ;; Hardware stack levels used:    1
  3443 ;; Hardware stack levels required when called:    2
  3444 ;; This function calls:
  3445 ;;		Nothing
  3446 ;; This function is called by:
  3447 ;;		_main
  3448 ;; This function uses a non-reentrant model
  3449 ;;
  3450                           
  3451                           
  3452                           ;psect for function _myMain_Initialization
  3453  0666                     _myMain_Initialization:	
  3454                           
  3455                           ;Main_B1.c: 173: product = &_product;
  3456                           
  3457                           ;incstack = 0
  3458                           ; Regs used in _myMain_Initialization: [wregfsr1]
  3459  0666  30A0               	movlw	__product& (0+255)
  3460  0667  00F1               	movwf	??_myMain_Initialization
  3461  0668  0871               	movf	??_myMain_Initialization,w
  3462  0669  00FC               	movwf	_product
  3463                           
  3464                           ;Main_B1.c: 174: product->Data[20] = 0xaa;
  3465  066A  30AA               	movlw	170
  3466  066B  00F1               	movwf	??_myMain_Initialization
  3467  066C  087C               	movf	_product,w
  3468  066D  3E14               	addlw	20
  3469  066E  0086               	movwf	6
  3470  066F  0187               	clrf	7
  3471  0670  0871               	movf	??_myMain_Initialization,w
  3472  0671  0081               	movwf	1
  3473  0672  0008               	return
  3474  0673                     __end_of_myMain_Initialization:	
  3475                           
  3476                           	psect	text7
  3477  06CE                     __ptext7:	
  3478 ;; *************** function _RF_Main *****************
  3479 ;; Defined at:
  3480 ;;		line 26 in file "../src/RF_Control_B1.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;		None
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;		None
  3485 ;; Return value:  Size  Location     Type
  3486 ;;		None               void
  3487 ;; Registers used:
  3488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3489 ;; Tracked objects:
  3490 ;;		On entry : 0/0
  3491 ;;		On exit  : 0/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3494 ;;      Params:         0       0       0       0       0       0       0       0
  3495 ;;      Locals:         0       0       0       0       0       0       0       0
  3496 ;;      Temps:          0       0       0       0       0       0       0       0
  3497 ;;      Totals:         0       0       0       0       0       0       0       0
  3498 ;;Total ram usage:        0 bytes
  3499 ;; Hardware stack levels used:    1
  3500 ;; Hardware stack levels required when called:    7
  3501 ;; This function calls:
  3502 ;;		_setRF_Main
  3503 ;; This function is called by:
  3504 ;;		_main
  3505 ;; This function uses a non-reentrant model
  3506 ;;
  3507                           
  3508                           
  3509                           ;psect for function _RF_Main
  3510  06CE                     _RF_Main:	
  3511                           
  3512                           ;RF_Control_B1.c: 28: setRF_Main();
  3513                           
  3514                           ;incstack = 0
  3515                           ; Regs used in _RF_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3516  06CE  3180  2038         	fcall	_setRF_Main
  3517  06D0  0008               	return
  3518  06D1                     __end_of_RF_Main:	
  3519                           
  3520                           	psect	text8
  3521  0038                     __ptext8:	
  3522 ;; *************** function _setRF_Main *****************
  3523 ;; Defined at:
  3524 ;;		line 53 in file "../src/RF_Control_B1.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;		None
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;  error           1   10[COMMON] unsigned char 
  3529 ;; Return value:  Size  Location     Type
  3530 ;;		None               void
  3531 ;; Registers used:
  3532 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3538 ;;      Params:         0       0       0       0       0       0       0       0
  3539 ;;      Locals:         1       0       0       0       0       0       0       0
  3540 ;;      Temps:          0       0       0       0       0       0       0       0
  3541 ;;      Totals:         1       0       0       0       0       0       0       0
  3542 ;;Total ram usage:        1 bytes
  3543 ;; Hardware stack levels used:    1
  3544 ;; Hardware stack levels required when called:    6
  3545 ;; This function calls:
  3546 ;;		_CC2500_PowerOnInitial
  3547 ;;		_CC2500_TxData
  3548 ;;		_CC2500_WriteCommand
  3549 ;;		_RF_RxDisable
  3550 ;;		___lwdiv
  3551 ;;		_getRxData
  3552 ;; This function is called by:
  3553 ;;		_RF_Main
  3554 ;; This function uses a non-reentrant model
  3555 ;;
  3556                           
  3557                           
  3558                           ;psect for function _setRF_Main
  3559  0038                     _setRF_Main:	
  3560                           
  3561                           ;RF_Control_B1.c: 54: char error = 0;
  3562                           
  3563                           ;incstack = 0
  3564                           ; Regs used in _setRF_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3565  0038  01FA               	clrf	setRF_Main@error
  3566                           
  3567                           ;RF_Control_B1.c: 56: if (0 == 0) {
  3568  0039  0020               	movlb	0	; select bank0
  3569  003A  1C20               	btfss	_RF1,0
  3570  003B  28C9               	goto	l942
  3571                           
  3572                           ;RF_Control_B1.c: 61: RF1.Key = 0;
  3573  003C  13A0               	bcf	_RF1,7
  3574                           
  3575                           ;RF_Control_B1.c: 64: if (RF1.Key == 0 || RF1.Learn == 1) {
  3576  003D  1FA0               	btfss	_RF1,7
  3577  003E  2841               	goto	l946
  3578  003F  1F20               	btfss	_RF1,6
  3579  0040  28AA               	goto	l2909
  3580  0041                     l946:	
  3581                           
  3582                           ;RF_Control_B1.c: 66: if (RF1.TransceiveGO == 1) {
  3583  0041  1D20               	btfss	_RF1,2
  3584  0042  2882               	goto	l947
  3585                           
  3586                           ;RF_Control_B1.c: 67: if (RF1.Learn == 0) {
  3587  0043  1B20               	btfsc	_RF1,6
  3588  0044  287D               	goto	l2891
  3589                           
  3590                           ;RF_Control_B1.c: 68: RF1.Count++;
  3591  0045  3001               	movlw	1
  3592  0046  07A3               	addwf	_RF1+3,f
  3593  0047  3000               	movlw	0
  3594  0048  3DA4               	addwfc	_RF1+4,f
  3595                           
  3596                           ;RF_Control_B1.c: 69: if (RF1.Count >= (RF1.RunTime / 20)) {
  3597  0049  3014               	movlw	20
  3598  004A  00F1               	movwf	___lwdiv@divisor
  3599  004B  3000               	movlw	0
  3600  004C  00F2               	movwf	___lwdiv@divisor+1
  3601  004D  0829               	movf	_RF1+9,w
  3602  004E  01F4               	clrf	___lwdiv@dividend+1
  3603  004F  07F4               	addwf	___lwdiv@dividend+1,f
  3604  0050  0828               	movf	_RF1+8,w
  3605  0051  01F3               	clrf	___lwdiv@dividend
  3606  0052  07F3               	addwf	___lwdiv@dividend,f
  3607  0053  3184  2401  3180   	fcall	___lwdiv
  3608  0056  0872               	movf	?___lwdiv+1,w
  3609  0057  0020               	movlb	0	; select bank0
  3610  0058  0224               	subwf	_RF1+4,w
  3611  0059  1D03               	skipz
  3612  005A  285D               	goto	u1735
  3613  005B  0871               	movf	?___lwdiv,w
  3614  005C  0223               	subwf	_RF1+3,w
  3615  005D                     u1735:	
  3616  005D  1C03               	skipc
  3617  005E  28AA               	goto	l2909
  3618                           
  3619                           ;RF_Control_B1.c: 70: RF1.Count = (RF1.RunTime / 20);
  3620  005F  3014               	movlw	20
  3621  0060  00F1               	movwf	___lwdiv@divisor
  3622  0061  3000               	movlw	0
  3623  0062  00F2               	movwf	___lwdiv@divisor+1
  3624  0063  0829               	movf	_RF1+9,w
  3625  0064  01F4               	clrf	___lwdiv@dividend+1
  3626  0065  07F4               	addwf	___lwdiv@dividend+1,f
  3627  0066  0828               	movf	_RF1+8,w
  3628  0067  01F3               	clrf	___lwdiv@dividend
  3629  0068  07F3               	addwf	___lwdiv@dividend,f
  3630  0069  3184  2401  3180   	fcall	___lwdiv
  3631  006C  0872               	movf	?___lwdiv+1,w
  3632  006D  0020               	movlb	0	; select bank0
  3633  006E  01A4               	clrf	_RF1+4
  3634  006F  07A4               	addwf	_RF1+4,f
  3635  0070  0871               	movf	?___lwdiv,w
  3636  0071  01A3               	clrf	_RF1+3
  3637  0072  07A3               	addwf	_RF1+3,f
  3638                           
  3639                           ;RF_Control_B1.c: 72: RF1.TransceiveGO = 0;
  3640  0073  1120               	bcf	_RF1,2
  3641                           
  3642                           ;RF_Control_B1.c: 73: RF1.CorrectionCounter = 0;
  3643  0074  01AB               	clrf	_RF1+11
  3644  0075  01AC               	clrf	_RF1+12
  3645                           
  3646                           ;RF_Control_B1.c: 74: RF_RxDisable();
  3647  0076  3186  2657  3180   	fcall	_RF_RxDisable
  3648                           
  3649                           ;RF_Control_B1.c: 75: CC2500_TxData();
  3650  0079  3182  2266  3180   	fcall	_CC2500_TxData
  3651                           
  3652                           ;RF_Control_B1.c: 77: }
  3653                           ;RF_Control_B1.c: 78: } else {
  3654  007C  28AA               	goto	l2909
  3655  007D                     l2891:	
  3656                           
  3657                           ;RF_Control_B1.c: 79: RF1.Count = 0;
  3658  007D  0020               	movlb	0	; select bank0
  3659  007E  01A3               	clrf	_RF1+3
  3660  007F  01A4               	clrf	_RF1+4
  3661                           
  3662                           ;RF_Control_B1.c: 80: RF1.TransceiveGO = 0;
  3663  0080  1120               	bcf	_RF1,2
  3664                           
  3665                           ;RF_Control_B1.c: 81: }
  3666                           ;RF_Control_B1.c: 82: } else {
  3667  0081  28AA               	goto	l2909
  3668  0082                     l947:	
  3669                           
  3670                           ;RF_Control_B1.c: 83: if (RF1.RxStatus == 1) {
  3671  0082  1DA0               	btfss	_RF1,3
  3672  0083  288D               	goto	l2903
  3673                           
  3674                           ;RF_Control_B1.c: 87: if (RF1.ReceiveGO == 1) {
  3675  0084  1CA0               	btfss	_RF1,1
  3676  0085  28AA               	goto	l2909
  3677                           
  3678                           ;RF_Control_B1.c: 88: RF1.ReceiveGO = 0;
  3679  0086  10A0               	bcf	_RF1,1
  3680                           
  3681                           ;RF_Control_B1.c: 89: RF1.CorrectionCounter = 0;
  3682  0087  01AB               	clrf	_RF1+11
  3683  0088  01AC               	clrf	_RF1+12
  3684                           
  3685                           ;RF_Control_B1.c: 97: getRxData();
  3686  0089  3182  22C8  3180   	fcall	_getRxData
  3687                           
  3688                           ;RF_Control_B1.c: 100: }
  3689                           ;RF_Control_B1.c: 101: } else {
  3690  008C  28AA               	goto	l2909
  3691  008D                     l2903:	
  3692                           
  3693                           ;RF_Control_B1.c: 102: RF1.Count++;
  3694  008D  3001               	movlw	1
  3695  008E  0020               	movlb	0	; select bank0
  3696  008F  07A3               	addwf	_RF1+3,f
  3697  0090  3000               	movlw	0
  3698  0091  3DA4               	addwfc	_RF1+4,f
  3699                           
  3700                           ;RF_Control_B1.c: 103: if (RF1.Count >= (RF1.RunTime / 20)) {
  3701  0092  3014               	movlw	20
  3702  0093  00F1               	movwf	___lwdiv@divisor
  3703  0094  3000               	movlw	0
  3704  0095  00F2               	movwf	___lwdiv@divisor+1
  3705  0096  0829               	movf	_RF1+9,w
  3706  0097  01F4               	clrf	___lwdiv@dividend+1
  3707  0098  07F4               	addwf	___lwdiv@dividend+1,f
  3708  0099  0828               	movf	_RF1+8,w
  3709  009A  01F3               	clrf	___lwdiv@dividend
  3710  009B  07F3               	addwf	___lwdiv@dividend,f
  3711  009C  3184  2401  3180   	fcall	___lwdiv
  3712  009F  0872               	movf	?___lwdiv+1,w
  3713  00A0  0020               	movlb	0	; select bank0
  3714  00A1  0224               	subwf	_RF1+4,w
  3715  00A2  1D03               	skipz
  3716  00A3  28A6               	goto	u1765
  3717  00A4  0871               	movf	?___lwdiv,w
  3718  00A5  0223               	subwf	_RF1+3,w
  3719  00A6                     u1765:	
  3720  00A6  1C03               	skipc
  3721  00A7  28AA               	goto	l2909
  3722                           
  3723                           ;RF_Control_B1.c: 104: RF1.Count = 0;
  3724  00A8  01A3               	clrf	_RF1+3
  3725  00A9  01A4               	clrf	_RF1+4
  3726  00AA                     l2909:	
  3727                           
  3728                           ;RF_Control_B1.c: 111: }
  3729                           ;RF_Control_B1.c: 112: }
  3730                           ;RF_Control_B1.c: 113: }
  3731                           ;RF_Control_B1.c: 114: }
  3732                           ;RF_Control_B1.c: 115: }
  3733                           ;RF_Control_B1.c: 117: RF1.CorrectionCounter++;
  3734  00AA  3001               	movlw	1
  3735  00AB  0020               	movlb	0	; select bank0
  3736  00AC  07AB               	addwf	_RF1+11,f
  3737  00AD  3000               	movlw	0
  3738  00AE  3DAC               	addwfc	_RF1+12,f
  3739                           
  3740                           ;RF_Control_B1.c: 118: if (RF1.CorrectionCounter > (60000 / 20)) {
  3741  00AF  300B               	movlw	11
  3742  00B0  022C               	subwf	_RF1+12,w
  3743  00B1  30B9               	movlw	185
  3744  00B2  1903               	skipnz
  3745  00B3  022B               	subwf	_RF1+11,w
  3746  00B4  1C03               	skipc
  3747  00B5  28C2               	goto	l2923
  3748                           
  3749                           ;RF_Control_B1.c: 119: RF1.CorrectionCounter = 0;
  3750  00B6  01AB               	clrf	_RF1+11
  3751  00B7  01AC               	clrf	_RF1+12
  3752                           
  3753                           ;RF_Control_B1.c: 121: RF1.RxStatus = 0;
  3754  00B8  11A0               	bcf	_RF1,3
  3755                           
  3756                           ;RF_Control_B1.c: 122: RF1.ReceiveGO = 0;
  3757  00B9  10A0               	bcf	_RF1,1
  3758                           
  3759                           ;RF_Control_B1.c: 123: CC2500_WriteCommand(0x36);
  3760  00BA  3036               	movlw	54
  3761  00BB  3185  25BD  3180   	fcall	_CC2500_WriteCommand
  3762                           
  3763                           ;RF_Control_B1.c: 124: CC2500_WriteCommand(0x3A);
  3764  00BE  303A               	movlw	58
  3765  00BF  3185  25BD  3180   	fcall	_CC2500_WriteCommand
  3766  00C2                     l2923:	
  3767                           
  3768                           ;RF_Control_B1.c: 125: }
  3769                           ;RF_Control_B1.c: 127: if (RF1.Timeout == 1) {
  3770  00C2  0020               	movlb	0	; select bank0
  3771  00C3  1F21               	btfss	_RF1+1,6
  3772  00C4  0008               	return
  3773                           
  3774                           ;RF_Control_B1.c: 128: RF1.Timeout = 0;
  3775  00C5  1321               	bcf	_RF1+1,6
  3776                           
  3777                           ;RF_Control_B1.c: 129: CC2500_PowerOnInitial();
  3778  00C6  3186  2619         	fcall	_CC2500_PowerOnInitial
  3779                           
  3780                           ;RF_Control_B1.c: 130: }
  3781                           ;RF_Control_B1.c: 132: } else {
  3782  00C8  0008               	return
  3783  00C9                     l942:	
  3784                           
  3785                           ;RF_Control_B1.c: 133: if (myMain.PowerON == 1) {
  3786  00C9  1C2F               	btfss	_myMain,0
  3787  00CA  0008               	return
  3788                           
  3789                           ;RF_Control_B1.c: 134: RF1.Enable = 1;
  3790  00CB  1420               	bsf	_RF1,0
  3791  00CC  0008               	return
  3792  00CD                     __end_of_setRF_Main:	
  3793                           
  3794                           	psect	text9
  3795  02C8                     __ptext9:	
  3796 ;; *************** function _getRxData *****************
  3797 ;; Defined at:
  3798 ;;		line 227 in file "../src/RF_Control_B1.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;		None
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;  error           1    6[COMMON] unsigned char 
  3803 ;; Return value:  Size  Location     Type
  3804 ;;		None               void
  3805 ;; Registers used:
  3806 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3807 ;; Tracked objects:
  3808 ;;		On entry : 0/0
  3809 ;;		On exit  : 0/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3812 ;;      Params:         0       0       0       0       0       0       0       0
  3813 ;;      Locals:         1       0       0       0       0       0       0       0
  3814 ;;      Temps:          1       0       0       0       0       0       0       0
  3815 ;;      Totals:         2       0       0       0       0       0       0       0
  3816 ;;Total ram usage:        2 bytes
  3817 ;; Hardware stack levels used:    1
  3818 ;; Hardware stack levels required when called:    4
  3819 ;; This function calls:
  3820 ;;		_getMain_All_Error_Status
  3821 ;;		_setControl_Lights_Table
  3822 ;;		_setLog_Code
  3823 ;;		_setTxData
  3824 ;; This function is called by:
  3825 ;;		_setRF_Main
  3826 ;; This function uses a non-reentrant model
  3827 ;;
  3828                           
  3829                           
  3830                           ;psect for function _getRxData
  3831  02C8                     _getRxData:	
  3832                           
  3833                           ;RF_Control_B1.c: 229: if (RF_Data[0] == 0xaa && RF_Data[1] == 0x01) {
  3834                           
  3835                           ;incstack = 0
  3836                           ; Regs used in _getRxData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3837  02C8  0021               	movlb	1	; select bank1
  3838  02C9  0840               	movf	_RF_Data^(0+128),w
  3839  02CA  3AAA               	xorlw	170
  3840  02CB  1D03               	skipz
  3841  02CC  2ADF               	goto	l2745
  3842  02CD  0841               	movf	(_RF_Data^(0+128)+1),w
  3843  02CE  3A01               	xorlw	1
  3844  02CF  1D03               	skipz
  3845  02D0  2ADF               	goto	l2745
  3846                           
  3847                           ;RF_Control_B1.c: 230: product->Data[2] = 0x55;
  3848  02D1  3055               	movlw	85
  3849  02D2  00F5               	movwf	??_getRxData
  3850  02D3  087C               	movf	_product,w
  3851  02D4  3E02               	addlw	2
  3852  02D5  0086               	movwf	6
  3853  02D6  0187               	clrf	7
  3854  02D7  0875               	movf	??_getRxData,w
  3855  02D8  0081               	movwf	1
  3856                           
  3857                           ;RF_Control_B1.c: 231: setTxData();
  3858  02D9  3180  20CD         	fcall	_setTxData
  3859                           
  3860                           ;RF_Control_B1.c: 233: RA1 = RA1 == 1 ? 0 : 1;
  3861  02DB  3002               	movlw	2
  3862  02DC  0020               	movlb	0	; select bank0
  3863  02DD  068C               	xorwf	12,f
  3864                           
  3865                           ;RF_Control_B1.c: 235: } else {
  3866  02DE  0008               	return
  3867  02DF                     l2745:	
  3868                           
  3869                           ;RF_Control_B1.c: 236: char error = getMain_All_Error_Status(0);
  3870  02DF  3000               	movlw	0
  3871  02E0  3186  26D7  3182   	fcall	_getMain_All_Error_Status
  3872  02E3  00F5               	movwf	??_getRxData
  3873  02E4  0875               	movf	??_getRxData,w
  3874  02E5  00F6               	movwf	getRxData@error
  3875                           
  3876                           ;RF_Control_B1.c: 237: if (error == 0) {
  3877  02E6  08F6               	movf	getRxData@error,f
  3878  02E7  1D03               	skipz
  3879  02E8  2B22               	goto	l985
  3880                           
  3881                           ;RF_Control_B1.c: 238: if (RF1.Learn == 1) {
  3882  02E9  0020               	movlb	0	; select bank0
  3883  02EA  1F20               	btfss	_RF1,6
  3884  02EB  2AF7               	goto	l2757
  3885                           
  3886                           ;RF_Control_B1.c: 240: if (RF_Data[0] == 0x00 && RF_Data[1] == 0x64) {
  3887  02EC  0021               	movlb	1	; select bank1
  3888  02ED  08C0               	movf	_RF_Data^(0+128),f
  3889  02EE  1D03               	skipz
  3890  02EF  0008               	return
  3891  02F0  0841               	movf	(_RF_Data^(0+128)+1),w
  3892  02F1  3A64               	xorlw	100
  3893  02F2  1D03               	skipz
  3894  02F3  0008               	return
  3895                           
  3896                           ;RF_Control_B1.c: 241: setLog_Code();
  3897  02F4  3185  2569         	fcall	_setLog_Code
  3898                           
  3899                           ;RF_Control_B1.c: 242: }
  3900                           ;RF_Control_B1.c: 243: } else {
  3901  02F6  0008               	return
  3902  02F7                     l2757:	
  3903                           
  3904                           ;RF_Control_B1.c: 244: if (RF_Data[20] == 0xaa || RF_Data[20] == 0x0a) {
  3905  02F7  0021               	movlb	1	; select bank1
  3906  02F8  0854               	movf	(_RF_Data^(0+128)+20),w
  3907  02F9  3AAA               	xorlw	170
  3908  02FA  1903               	skipnz
  3909  02FB  2B00               	goto	l2761
  3910  02FC  0854               	movf	(_RF_Data^(0+128)+20),w
  3911  02FD  3A0A               	xorlw	10
  3912  02FE  1D03               	skipz
  3913  02FF  0008               	return
  3914  0300                     l2761:	
  3915                           
  3916                           ;RF_Control_B1.c: 246: if (RF_Data[0] == 0x00 && RF_Data[1] == 0x02) {
  3917  0300  08C0               	movf	_RF_Data^(0+128),f
  3918  0301  1D03               	skipz
  3919  0302  0008               	return
  3920  0303  0841               	movf	(_RF_Data^(0+128)+1),w
  3921  0304  3A02               	xorlw	2
  3922  0305  1D03               	skipz
  3923  0306  0008               	return
  3924                           
  3925                           ;RF_Control_B1.c: 248: if (RF_Data[12] == product->Data[12] && RF_Data[13] == product->D
      +                          ata[13] && RF_Data[14] == product->Data[14]) {
  3926  0307  087C               	movf	_product,w
  3927  0308  3E0C               	addlw	12
  3928  0309  0086               	movwf	6
  3929  030A  0187               	clrf	7
  3930  030B  084C               	movf	(_RF_Data^(0+128)+12),w
  3931  030C  0601               	xorwf	1,w
  3932  030D  1D03               	skipz
  3933  030E  0008               	return
  3934  030F  087C               	movf	_product,w
  3935  0310  3E0D               	addlw	13
  3936  0311  0086               	movwf	6
  3937  0312  0187               	clrf	7
  3938  0313  084D               	movf	(_RF_Data^(0+128)+13),w
  3939  0314  0601               	xorwf	1,w
  3940  0315  1D03               	skipz
  3941  0316  0008               	return
  3942  0317  087C               	movf	_product,w
  3943  0318  3E0E               	addlw	14
  3944  0319  0086               	movwf	6
  3945  031A  0187               	clrf	7
  3946  031B  084E               	movf	(_RF_Data^(0+128)+14),w
  3947  031C  0601               	xorwf	1,w
  3948  031D  1D03               	skipz
  3949  031E  0008               	return
  3950                           
  3951                           ;RF_Control_B1.c: 249: setControl_Lights_Table();
  3952  031F  3183  2377         	fcall	_setControl_Lights_Table
  3953                           
  3954                           ;RF_Control_B1.c: 250: }
  3955                           ;RF_Control_B1.c: 253: }
  3956                           ;RF_Control_B1.c: 264: }
  3957                           ;RF_Control_B1.c: 265: }
  3958                           ;RF_Control_B1.c: 266: } else {
  3959  0321  0008               	return
  3960  0322                     l985:	
  3961                           
  3962                           ;RF_Control_B1.c: 267: __nop();
  3963  0322  0000               	nop
  3964  0323  0008               	return
  3965  0324                     __end_of_getRxData:	
  3966                           
  3967                           	psect	text10
  3968  0569                     __ptext10:	
  3969 ;; *************** function _setLog_Code *****************
  3970 ;; Defined at:
  3971 ;;		line 273 in file "../src/RF_Control_B1.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;		None
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;		None
  3976 ;; Return value:  Size  Location     Type
  3977 ;;		None               void
  3978 ;; Registers used:
  3979 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/0
  3982 ;;		On exit  : 0/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3985 ;;      Params:         0       0       0       0       0       0       0       0
  3986 ;;      Locals:         0       0       0       0       0       0       0       0
  3987 ;;      Temps:          1       0       0       0       0       0       0       0
  3988 ;;      Totals:         1       0       0       0       0       0       0       0
  3989 ;;Total ram usage:        1 bytes
  3990 ;; Hardware stack levels used:    1
  3991 ;; Hardware stack levels required when called:    3
  3992 ;; This function calls:
  3993 ;;		_setProductData
  3994 ;; This function is called by:
  3995 ;;		_getRxData
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998                           
  3999                           
  4000                           ;psect for function _setLog_Code
  4001  0569                     _setLog_Code:	
  4002                           
  4003                           ;RF_Control_B1.c: 274: RF1.Learn = 0;
  4004                           
  4005                           ;incstack = 0
  4006                           ; Regs used in _setLog_Code: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4007  0569  0020               	movlb	0	; select bank0
  4008  056A  1320               	bcf	_RF1,6
  4009                           
  4010                           ;RF_Control_B1.c: 275: setProductData(12, RF_Data[12]);
  4011  056B  0021               	movlb	1	; select bank1
  4012  056C  084C               	movf	(_RF_Data^(0+128)+12),w
  4013  056D  00F4               	movwf	??_setLog_Code
  4014  056E  0874               	movf	??_setLog_Code,w
  4015  056F  00F1               	movwf	setProductData@value
  4016  0570  300C               	movlw	12
  4017  0571  3186  268A  3185   	fcall	_setProductData
  4018                           
  4019                           ;RF_Control_B1.c: 276: setProductData(13, RF_Data[13]);
  4020  0574  0021               	movlb	1	; select bank1
  4021  0575  084D               	movf	(_RF_Data^(0+128)+13),w
  4022  0576  00F4               	movwf	??_setLog_Code
  4023  0577  0874               	movf	??_setLog_Code,w
  4024  0578  00F1               	movwf	setProductData@value
  4025  0579  300D               	movlw	13
  4026  057A  3186  268A  3185   	fcall	_setProductData
  4027                           
  4028                           ;RF_Control_B1.c: 277: setProductData(14, RF_Data[14]);
  4029  057D  0021               	movlb	1	; select bank1
  4030  057E  084E               	movf	(_RF_Data^(0+128)+14),w
  4031  057F  00F4               	movwf	??_setLog_Code
  4032  0580  0874               	movf	??_setLog_Code,w
  4033  0581  00F1               	movwf	setProductData@value
  4034  0582  300E               	movlw	14
  4035  0583  3186  268A         	fcall	_setProductData
  4036  0585  0008               	return
  4037  0586                     __end_of_setLog_Code:	
  4038                           ;RF_Control_B1.c: 280: ;;
  4039                           
  4040                           
  4041                           	psect	text11
  4042  0377                     __ptext11:	
  4043 ;; *************** function _setControl_Lights_Table *****************
  4044 ;; Defined at:
  4045 ;;		line 286 in file "../src/RF_Control_B1.c"
  4046 ;; Parameters:    Size  Location     Type
  4047 ;;		None
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;		None
  4050 ;; Return value:  Size  Location     Type
  4051 ;;		None               void
  4052 ;; Registers used:
  4053 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4054 ;; Tracked objects:
  4055 ;;		On entry : 0/0
  4056 ;;		On exit  : 0/0
  4057 ;;		Unchanged: 0/0
  4058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4059 ;;      Params:         0       0       0       0       0       0       0       0
  4060 ;;      Locals:         0       0       0       0       0       0       0       0
  4061 ;;      Temps:          0       0       0       0       0       0       0       0
  4062 ;;      Totals:         0       0       0       0       0       0       0       0
  4063 ;;Total ram usage:        0 bytes
  4064 ;; Hardware stack levels used:    1
  4065 ;; Hardware stack levels required when called:    3
  4066 ;; This function calls:
  4067 ;;		_getMain_All_LightsStatus
  4068 ;;		_setCmd_Status
  4069 ;;		_setProductData
  4070 ;;		_setTxData
  4071 ;; This function is called by:
  4072 ;;		_getRxData
  4073 ;; This function uses a non-reentrant model
  4074 ;;
  4075                           
  4076                           
  4077                           ;psect for function _setControl_Lights_Table
  4078  0377                     _setControl_Lights_Table:	
  4079                           
  4080                           ;RF_Control_B1.c: 288: switch (RF_Data[15]) {
  4081                           
  4082                           ;incstack = 0
  4083                           ; Regs used in _setControl_Lights_Table: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4084  0377  2BB6               	goto	l2669
  4085  0378                     l2659:	
  4086                           ;RF_Control_B1.c: 290: case 0x00:
  4087                           
  4088                           
  4089                           ;RF_Control_B1.c: 291: if (getMain_All_LightsStatus() == 1) {
  4090  0378  3186  26D1  3183   	fcall	_getMain_All_LightsStatus
  4091  037B  3A01               	xorlw	1
  4092  037C  1D03               	skipz
  4093  037D  2B84               	goto	l2663
  4094                           
  4095                           ;RF_Control_B1.c: 312: setCmd_Status(1, 1);
  4096  037E  01F1               	clrf	setCmd_Status@cmd
  4097  037F  0AF1               	incf	setCmd_Status@cmd,f
  4098  0380  3001               	movlw	1
  4099  0381  3186  2604         	fcall	_setCmd_Status
  4100                           
  4101                           ;RF_Control_B1.c: 313: } else {
  4102  0383  0008               	return
  4103  0384                     l2663:	
  4104                           
  4105                           ;RF_Control_B1.c: 314: setProductData(9, 0);
  4106  0384  01F1               	clrf	setProductData@value
  4107  0385  3009               	movlw	9
  4108  0386  3186  268A  3183   	fcall	_setProductData
  4109                           
  4110                           ;RF_Control_B1.c: 315: setProductData(11, 0);
  4111  0389  01F1               	clrf	setProductData@value
  4112  038A  300B               	movlw	11
  4113  038B  3186  268A  3183   	fcall	_setProductData
  4114                           
  4115                           ;RF_Control_B1.c: 316: setProductData(15, 0);
  4116  038E  01F1               	clrf	setProductData@value
  4117  038F  300F               	movlw	15
  4118  0390  3186  268A  3183   	fcall	_setProductData
  4119                           
  4120                           ;RF_Control_B1.c: 317: setProductData(17, 0);
  4121  0393  01F1               	clrf	setProductData@value
  4122  0394  3011               	movlw	17
  4123  0395  3186  268A  3183   	fcall	_setProductData
  4124                           
  4125                           ;RF_Control_B1.c: 318: setTxData();
  4126  0398  3180  20CD         	fcall	_setTxData
  4127                           
  4128                           ;RF_Control_B1.c: 319: }
  4129                           ;RF_Control_B1.c: 320: break;
  4130  039A  0008               	return
  4131  039B                     l2665:	
  4132                           ;RF_Control_B1.c: 322: case 0x20:
  4133                           
  4134                           
  4135                           ;RF_Control_B1.c: 323: setProductData(9, 0);
  4136  039B  01F1               	clrf	setProductData@value
  4137  039C  3009               	movlw	9
  4138  039D  3186  268A  3183   	fcall	_setProductData
  4139                           
  4140                           ;RF_Control_B1.c: 324: setProductData(11, 0);
  4141  03A0  01F1               	clrf	setProductData@value
  4142  03A1  300B               	movlw	11
  4143  03A2  3186  268A  3183   	fcall	_setProductData
  4144                           
  4145                           ;RF_Control_B1.c: 325: setProductData(15, product->Data[15]);
  4146  03A5  087C               	movf	_product,w
  4147  03A6  0086               	movwf	6
  4148  03A7  0187               	clrf	7
  4149  03A8  3F4F               	moviw [15]fsr1
  4150  03A9  00F1               	movwf	setProductData@value
  4151  03AA  300F               	movlw	15
  4152  03AB  3186  268A  3183   	fcall	_setProductData
  4153                           
  4154                           ;RF_Control_B1.c: 326: setProductData(17, 0);
  4155  03AE  01F1               	clrf	setProductData@value
  4156  03AF  3011               	movlw	17
  4157  03B0  3186  268A  3183   	fcall	_setProductData
  4158                           
  4159                           ;RF_Control_B1.c: 327: setTxData();
  4160  03B3  3180  20CD         	fcall	_setTxData
  4161                           
  4162                           ;RF_Control_B1.c: 376: }
  4163                           
  4164                           ;RF_Control_B1.c: 328: break;
  4165  03B5  0008               	return
  4166  03B6                     l2669:	
  4167  03B6  0021               	movlb	1	; select bank1
  4168  03B7  084F               	movf	(_RF_Data^(0+128)+15),w
  4169                           
  4170                           ; Switch size 1, requested type "space"
  4171                           ; Number of cases is 2, Range of values is 0 to 32
  4172                           ; switch strategies available:
  4173                           ; Name         Instructions Cycles
  4174                           ; simple_byte            7     4 (average)
  4175                           ; direct_byte           72     6 (fixed)
  4176                           ; jumptable            260     6 (fixed)
  4177                           ;	Chosen strategy is simple_byte
  4178  03B8  3A00               	xorlw	0	; case 0
  4179  03B9  1903               	skipnz
  4180  03BA  2B78               	goto	l2659
  4181  03BB  3A20               	xorlw	32	; case 32
  4182  03BC  1903               	skipnz
  4183  03BD  2B9B               	goto	l2665
  4184  03BE  2BBF               	goto	l1008
  4185  03BF                     l1008:	
  4186  03BF  0008               	return
  4187  03C0                     __end_of_setControl_Lights_Table:	
  4188                           
  4189                           	psect	text12
  4190  00CD                     __ptext12:	
  4191 ;; *************** function _setTxData *****************
  4192 ;; Defined at:
  4193 ;;		line 183 in file "../src/RF_Control_B1.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;		None
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;  i               1    0        unsigned char 
  4198 ;; Return value:  Size  Location     Type
  4199 ;;		None               void
  4200 ;; Registers used:
  4201 ;;		wreg, fsr1l, fsr1h, status,2
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/0
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4207 ;;      Params:         0       0       0       0       0       0       0       0
  4208 ;;      Locals:         0       0       0       0       0       0       0       0
  4209 ;;      Temps:          1       0       0       0       0       0       0       0
  4210 ;;      Totals:         1       0       0       0       0       0       0       0
  4211 ;;Total ram usage:        1 bytes
  4212 ;; Hardware stack levels used:    1
  4213 ;; Hardware stack levels required when called:    2
  4214 ;; This function calls:
  4215 ;;		Nothing
  4216 ;; This function is called by:
  4217 ;;		_getRxData
  4218 ;;		_setControl_Lights_Table
  4219 ;;		_setRFSW_Control
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223                           
  4224                           ;psect for function _setTxData
  4225  00CD                     _setTxData:	
  4226                           
  4227                           ;RF_Control_B1.c: 184: char i;
  4228                           ;RF_Control_B1.c: 185: if (RF1.Enable == 1) {
  4229                           
  4230                           ;incstack = 0
  4231                           ; Regs used in _setTxData: [wreg+fsr1l+fsr1h+status,2]
  4232  00CD  0020               	movlb	0	; select bank0
  4233  00CE  1C20               	btfss	_RF1,0
  4234  00CF  0008               	return
  4235                           
  4236                           ;RF_Control_B1.c: 187: RF1.TransceiveGO = 1;
  4237  00D0  1520               	bsf	_RF1,2
  4238                           
  4239                           ;RF_Control_B1.c: 188: RF1.Count = 0;
  4240  00D1  01A3               	clrf	_RF1+3
  4241  00D2  01A4               	clrf	_RF1+4
  4242                           
  4243                           ;RF_Control_B1.c: 197: RF_Data[0] = 0xAA;
  4244  00D3  30AA               	movlw	170
  4245  00D4  00F1               	movwf	??_setTxData
  4246  00D5  0871               	movf	??_setTxData,w
  4247  00D6  0021               	movlb	1	; select bank1
  4248  00D7  00C0               	movwf	_RF_Data^(0+128)
  4249                           
  4250                           ;RF_Control_B1.c: 198: RF_Data[1] = 0x01;
  4251  00D8  01C1               	clrf	(_RF_Data^(0+128)+1)
  4252  00D9  0AC1               	incf	(_RF_Data^(0+128)+1),f
  4253                           
  4254                           ;RF_Control_B1.c: 203: RF_Data[2] = product->Data[2];
  4255  00DA  087C               	movf	_product,w
  4256  00DB  0086               	movwf	6
  4257  00DC  0187               	clrf	7
  4258  00DD  3F42               	moviw [2]fsr1
  4259  00DE  00C2               	movwf	(_RF_Data^(0+128)+2)
  4260                           
  4261                           ;RF_Control_B1.c: 204: RF_Data[3] = product->Data[3];
  4262  00DF  087C               	movf	_product,w
  4263  00E0  0086               	movwf	6
  4264  00E1  0187               	clrf	7
  4265  00E2  3F43               	moviw [3]fsr1
  4266  00E3  00C3               	movwf	(_RF_Data^(0+128)+3)
  4267                           
  4268                           ;RF_Control_B1.c: 205: RF_Data[4] = product->Data[4];
  4269  00E4  087C               	movf	_product,w
  4270  00E5  0086               	movwf	6
  4271  00E6  0187               	clrf	7
  4272  00E7  3F44               	moviw [4]fsr1
  4273  00E8  00C4               	movwf	(_RF_Data^(0+128)+4)
  4274                           
  4275                           ;RF_Control_B1.c: 206: RF_Data[5] = product->Data[5];
  4276  00E9  087C               	movf	_product,w
  4277  00EA  0086               	movwf	6
  4278  00EB  0187               	clrf	7
  4279  00EC  3F45               	moviw [5]fsr1
  4280  00ED  00C5               	movwf	(_RF_Data^(0+128)+5)
  4281                           
  4282                           ;RF_Control_B1.c: 207: RF_Data[6] = product->Data[6];
  4283  00EE  087C               	movf	_product,w
  4284  00EF  0086               	movwf	6
  4285  00F0  0187               	clrf	7
  4286  00F1  3F46               	moviw [6]fsr1
  4287  00F2  00C6               	movwf	(_RF_Data^(0+128)+6)
  4288                           
  4289                           ;RF_Control_B1.c: 208: RF_Data[7] = product->Data[7];
  4290  00F3  087C               	movf	_product,w
  4291  00F4  0086               	movwf	6
  4292  00F5  0187               	clrf	7
  4293  00F6  3F47               	moviw [7]fsr1
  4294  00F7  00C7               	movwf	(_RF_Data^(0+128)+7)
  4295                           
  4296                           ;RF_Control_B1.c: 209: RF_Data[8] = product->Data[8];
  4297  00F8  087C               	movf	_product,w
  4298  00F9  0086               	movwf	6
  4299  00FA  0187               	clrf	7
  4300  00FB  3F48               	moviw [8]fsr1
  4301  00FC  00C8               	movwf	(_RF_Data^(0+128)+8)
  4302                           
  4303                           ;RF_Control_B1.c: 210: RF_Data[9] = product->Data[9];
  4304  00FD  087C               	movf	_product,w
  4305  00FE  0086               	movwf	6
  4306  00FF  0187               	clrf	7
  4307  0100  3F49               	moviw [9]fsr1
  4308  0101  00C9               	movwf	(_RF_Data^(0+128)+9)
  4309                           
  4310                           ;RF_Control_B1.c: 211: RF_Data[10] = product->Data[10];
  4311  0102  087C               	movf	_product,w
  4312  0103  0086               	movwf	6
  4313  0104  0187               	clrf	7
  4314  0105  3F4A               	moviw [10]fsr1
  4315  0106  00CA               	movwf	(_RF_Data^(0+128)+10)
  4316                           
  4317                           ;RF_Control_B1.c: 212: RF_Data[11] = product->Data[11];
  4318  0107  087C               	movf	_product,w
  4319  0108  0086               	movwf	6
  4320  0109  0187               	clrf	7
  4321  010A  3F4B               	moviw [11]fsr1
  4322  010B  00CB               	movwf	(_RF_Data^(0+128)+11)
  4323                           
  4324                           ;RF_Control_B1.c: 213: RF_Data[12] = product->Data[12];
  4325  010C  087C               	movf	_product,w
  4326  010D  0086               	movwf	6
  4327  010E  0187               	clrf	7
  4328  010F  3F4C               	moviw [12]fsr1
  4329  0110  00CC               	movwf	(_RF_Data^(0+128)+12)
  4330                           
  4331                           ;RF_Control_B1.c: 214: RF_Data[13] = product->Data[13];
  4332  0111  087C               	movf	_product,w
  4333  0112  0086               	movwf	6
  4334  0113  0187               	clrf	7
  4335  0114  3F4D               	moviw [13]fsr1
  4336  0115  00CD               	movwf	(_RF_Data^(0+128)+13)
  4337                           
  4338                           ;RF_Control_B1.c: 215: RF_Data[14] = product->Data[14];
  4339  0116  087C               	movf	_product,w
  4340  0117  0086               	movwf	6
  4341  0118  0187               	clrf	7
  4342  0119  3F4E               	moviw [14]fsr1
  4343  011A  00CE               	movwf	(_RF_Data^(0+128)+14)
  4344                           
  4345                           ;RF_Control_B1.c: 216: RF_Data[15] = product->Data[15];
  4346  011B  087C               	movf	_product,w
  4347  011C  0086               	movwf	6
  4348  011D  0187               	clrf	7
  4349  011E  3F4F               	moviw [15]fsr1
  4350  011F  00CF               	movwf	(_RF_Data^(0+128)+15)
  4351                           
  4352                           ;RF_Control_B1.c: 217: RF_Data[16] = product->Data[16];
  4353  0120  087C               	movf	_product,w
  4354  0121  0086               	movwf	6
  4355  0122  0187               	clrf	7
  4356  0123  3F50               	moviw [16]fsr1
  4357  0124  00D0               	movwf	(_RF_Data^(0+128)+16)
  4358                           
  4359                           ;RF_Control_B1.c: 218: RF_Data[17] = product->Data[17];
  4360  0125  087C               	movf	_product,w
  4361  0126  0086               	movwf	6
  4362  0127  0187               	clrf	7
  4363  0128  3F51               	moviw [17]fsr1
  4364  0129  00D1               	movwf	(_RF_Data^(0+128)+17)
  4365                           
  4366                           ;RF_Control_B1.c: 219: RF_Data[18] = product->Data[18];
  4367  012A  087C               	movf	_product,w
  4368  012B  0086               	movwf	6
  4369  012C  0187               	clrf	7
  4370  012D  3F52               	moviw [18]fsr1
  4371  012E  00D2               	movwf	(_RF_Data^(0+128)+18)
  4372                           
  4373                           ;RF_Control_B1.c: 220: RF_Data[19] = product->Data[19];
  4374  012F  087C               	movf	_product,w
  4375  0130  0086               	movwf	6
  4376  0131  0187               	clrf	7
  4377  0132  3F53               	moviw [19]fsr1
  4378  0133  00D3               	movwf	(_RF_Data^(0+128)+19)
  4379                           
  4380                           ;RF_Control_B1.c: 221: RF_Data[20] = 0xaa;
  4381  0134  30AA               	movlw	170
  4382  0135  00F1               	movwf	??_setTxData
  4383  0136  0871               	movf	??_setTxData,w
  4384  0137  00D4               	movwf	(_RF_Data^(0+128)+20)
  4385  0138  0008               	return
  4386  0139                     __end_of_setTxData:	
  4387                           
  4388                           	psect	text13
  4389  068A                     __ptext13:	
  4390 ;; *************** function _setProductData *****************
  4391 ;; Defined at:
  4392 ;;		line 645 in file "../src/Main_B1.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;  address         1    wreg     unsigned char 
  4395 ;;  value           1    1[COMMON] unsigned char 
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;  address         1    3[COMMON] unsigned char 
  4398 ;; Return value:  Size  Location     Type
  4399 ;;		None               void
  4400 ;; Registers used:
  4401 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4402 ;; Tracked objects:
  4403 ;;		On entry : 0/0
  4404 ;;		On exit  : 0/0
  4405 ;;		Unchanged: 0/0
  4406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4407 ;;      Params:         1       0       0       0       0       0       0       0
  4408 ;;      Locals:         1       0       0       0       0       0       0       0
  4409 ;;      Temps:          1       0       0       0       0       0       0       0
  4410 ;;      Totals:         3       0       0       0       0       0       0       0
  4411 ;;Total ram usage:        3 bytes
  4412 ;; Hardware stack levels used:    1
  4413 ;; Hardware stack levels required when called:    2
  4414 ;; This function calls:
  4415 ;;		Nothing
  4416 ;; This function is called by:
  4417 ;;		_setLog_Code
  4418 ;;		_setControl_Lights_Table
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421                           
  4422                           
  4423                           ;psect for function _setProductData
  4424  068A                     _setProductData:	
  4425                           
  4426                           ;incstack = 0
  4427                           ; Regs used in _setProductData: [wreg+fsr1l+fsr1h+status,2+status,0]
  4428                           ;setProductData@address stored from wreg
  4429  068A  00F3               	movwf	setProductData@address
  4430                           
  4431                           ;Main_B1.c: 646: _product.Data[address] = value;
  4432  068B  0871               	movf	setProductData@value,w
  4433  068C  00F2               	movwf	??_setProductData
  4434  068D  0873               	movf	setProductData@address,w
  4435  068E  3EA0               	addlw	__product& (0+255)
  4436  068F  0086               	movwf	6
  4437  0690  0187               	clrf	7
  4438  0691  0872               	movf	??_setProductData,w
  4439  0692  0081               	movwf	1
  4440  0693  0008               	return
  4441  0694                     __end_of_setProductData:	
  4442                           
  4443                           	psect	text14
  4444  0604                     __ptext14:	
  4445 ;; *************** function _setCmd_Status *****************
  4446 ;; Defined at:
  4447 ;;		line 651 in file "../src/Main_B1.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;  number          1    wreg     unsigned char 
  4450 ;;  cmd             1    1[COMMON] unsigned char 
  4451 ;; Auto vars:     Size  Location     Type
  4452 ;;  number          1    3[COMMON] unsigned char 
  4453 ;; Return value:  Size  Location     Type
  4454 ;;		None               void
  4455 ;; Registers used:
  4456 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4457 ;; Tracked objects:
  4458 ;;		On entry : 0/0
  4459 ;;		On exit  : 0/0
  4460 ;;		Unchanged: 0/0
  4461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4462 ;;      Params:         1       0       0       0       0       0       0       0
  4463 ;;      Locals:         1       0       0       0       0       0       0       0
  4464 ;;      Temps:          1       0       0       0       0       0       0       0
  4465 ;;      Totals:         3       0       0       0       0       0       0       0
  4466 ;;Total ram usage:        3 bytes
  4467 ;; Hardware stack levels used:    1
  4468 ;; Hardware stack levels required when called:    2
  4469 ;; This function calls:
  4470 ;;		Nothing
  4471 ;; This function is called by:
  4472 ;;		_setControl_Lights_Table
  4473 ;; This function uses a non-reentrant model
  4474 ;;
  4475                           
  4476                           
  4477                           ;psect for function _setCmd_Status
  4478  0604                     _setCmd_Status:	
  4479                           
  4480                           ;incstack = 0
  4481                           ; Regs used in _setCmd_Status: [wreg-fsr0h+status,2+status,0]
  4482                           ;setCmd_Status@number stored from wreg
  4483  0604  00F3               	movwf	setCmd_Status@number
  4484                           
  4485                           ;Main_B1.c: 652: switch (number) {
  4486  0605  2E13               	goto	l2523
  4487  0606                     l2519:	
  4488                           ;Main_B1.c: 653: case 1:
  4489                           
  4490                           
  4491                           ;Main_B1.c: 654: Cmd.all_off = cmd == 1 ? 1 : 0;
  4492  0606  0871               	movf	setCmd_Status@cmd,w
  4493  0607  3A01               	xorlw	1
  4494  0608  3000               	movlw	0
  4495  0609  1903               	skipnz
  4496  060A  3001               	movlw	1
  4497  060B  00F2               	movwf	??_setCmd_Status
  4498  060C  0020               	movlb	0	; select bank0
  4499  060D  0847               	movf	_Cmd,w
  4500  060E  0672               	xorwf	??_setCmd_Status,w
  4501  060F  39FE               	andlw	-2
  4502  0610  0672               	xorwf	??_setCmd_Status,w
  4503  0611  00C7               	movwf	_Cmd
  4504                           
  4505                           ;Main_B1.c: 656: }
  4506                           
  4507                           ;Main_B1.c: 655: break;
  4508  0612  0008               	return
  4509  0613                     l2523:	
  4510  0613  0873               	movf	setCmd_Status@number,w
  4511                           
  4512                           ; Switch size 1, requested type "space"
  4513                           ; Number of cases is 1, Range of values is 1 to 1
  4514                           ; switch strategies available:
  4515                           ; Name         Instructions Cycles
  4516                           ; simple_byte            4     3 (average)
  4517                           ; direct_byte           11     9 (fixed)
  4518                           ; jumptable            263     9 (fixed)
  4519                           ;	Chosen strategy is simple_byte
  4520  0614  3A01               	xorlw	1	; case 1
  4521  0615  1903               	skipnz
  4522  0616  2E06               	goto	l2519
  4523  0617  2E18               	goto	l668
  4524  0618                     l668:	
  4525  0618  0008               	return
  4526  0619                     __end_of_setCmd_Status:	
  4527                           
  4528                           	psect	text15
  4529  06D1                     __ptext15:	
  4530 ;; *************** function _getMain_All_LightsStatus *****************
  4531 ;; Defined at:
  4532 ;;		line 373 in file "../src/Main_B1.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;		None
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;  status          1    1[COMMON] unsigned char 
  4537 ;; Return value:  Size  Location     Type
  4538 ;;                  1    wreg      unsigned char 
  4539 ;; Registers used:
  4540 ;;		wreg, status,2
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4546 ;;      Params:         0       0       0       0       0       0       0       0
  4547 ;;      Locals:         1       0       0       0       0       0       0       0
  4548 ;;      Temps:          0       0       0       0       0       0       0       0
  4549 ;;      Totals:         1       0       0       0       0       0       0       0
  4550 ;;Total ram usage:        1 bytes
  4551 ;; Hardware stack levels used:    1
  4552 ;; Hardware stack levels required when called:    2
  4553 ;; This function calls:
  4554 ;;		Nothing
  4555 ;; This function is called by:
  4556 ;;		_setControl_Lights_Table
  4557 ;; This function uses a non-reentrant model
  4558 ;;
  4559                           
  4560                           
  4561                           ;psect for function _getMain_All_LightsStatus
  4562  06D1                     _getMain_All_LightsStatus:	
  4563                           
  4564                           ;Main_B1.c: 374: char status = 0;
  4565                           
  4566                           ;incstack = 0
  4567                           ; Regs used in _getMain_All_LightsStatus: [wreg+status,2]
  4568  06D1  01F1               	clrf	getMain_All_LightsStatus@status
  4569                           
  4570                           ;Main_B1.c: 420: return status;
  4571  06D2  0871               	movf	getMain_All_LightsStatus@status,w
  4572  06D3  0008               	return
  4573  06D4                     __end_of_getMain_All_LightsStatus:	
  4574                           
  4575                           	psect	text16
  4576  0401                     __ptext16:	
  4577 ;; *************** function ___lwdiv *****************
  4578 ;; Defined at:
  4579 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;  divisor         2    1[COMMON] unsigned int 
  4582 ;;  dividend        2    3[COMMON] unsigned int 
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;  quotient        2    6[COMMON] unsigned int 
  4585 ;;  counter         1    8[COMMON] unsigned char 
  4586 ;; Return value:  Size  Location     Type
  4587 ;;                  2    1[COMMON] unsigned int 
  4588 ;; Registers used:
  4589 ;;		wreg, status,2, status,0
  4590 ;; Tracked objects:
  4591 ;;		On entry : 0/0
  4592 ;;		On exit  : 0/0
  4593 ;;		Unchanged: 0/0
  4594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4595 ;;      Params:         4       0       0       0       0       0       0       0
  4596 ;;      Locals:         3       0       0       0       0       0       0       0
  4597 ;;      Temps:          1       0       0       0       0       0       0       0
  4598 ;;      Totals:         8       0       0       0       0       0       0       0
  4599 ;;Total ram usage:        8 bytes
  4600 ;; Hardware stack levels used:    1
  4601 ;; Hardware stack levels required when called:    2
  4602 ;; This function calls:
  4603 ;;		Nothing
  4604 ;; This function is called by:
  4605 ;;		_setRF_Main
  4606 ;; This function uses a non-reentrant model
  4607 ;;
  4608                           
  4609                           
  4610                           ;psect for function ___lwdiv
  4611  0401                     ___lwdiv:	
  4612                           
  4613                           ;incstack = 0
  4614                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4615  0401  01F6               	clrf	___lwdiv@quotient
  4616  0402  01F7               	clrf	___lwdiv@quotient+1
  4617  0403  0872               	movf	___lwdiv@divisor+1,w
  4618  0404  0471               	iorwf	___lwdiv@divisor,w
  4619  0405  1903               	skipnz
  4620  0406  2C30               	goto	l2839
  4621  0407  01F8               	clrf	___lwdiv@counter
  4622  0408  0AF8               	incf	___lwdiv@counter,f
  4623  0409                     l2827:	
  4624  0409  1BF2               	btfsc	___lwdiv@divisor+1,7
  4625  040A  2C15               	goto	l2829
  4626  040B  3001               	movlw	1
  4627  040C                     u1625:	
  4628  040C  35F1               	lslf	___lwdiv@divisor,f
  4629  040D  0DF2               	rlf	___lwdiv@divisor+1,f
  4630  040E  0B89               	decfsz	9,f
  4631  040F  2C0C               	goto	u1625
  4632  0410  3001               	movlw	1
  4633  0411  00F5               	movwf	??___lwdiv
  4634  0412  0875               	movf	??___lwdiv,w
  4635  0413  07F8               	addwf	___lwdiv@counter,f
  4636  0414  2C09               	goto	l2827
  4637  0415                     l2829:	
  4638  0415  3001               	movlw	1
  4639  0416                     u1645:	
  4640  0416  35F6               	lslf	___lwdiv@quotient,f
  4641  0417  0DF7               	rlf	___lwdiv@quotient+1,f
  4642  0418  0B89               	decfsz	9,f
  4643  0419  2C16               	goto	u1645
  4644  041A  0872               	movf	___lwdiv@divisor+1,w
  4645  041B  0274               	subwf	___lwdiv@dividend+1,w
  4646  041C  1D03               	skipz
  4647  041D  2C20               	goto	u1655
  4648  041E  0871               	movf	___lwdiv@divisor,w
  4649  041F  0273               	subwf	___lwdiv@dividend,w
  4650  0420                     u1655:	
  4651  0420  1C03               	skipc
  4652  0421  2C27               	goto	l2835
  4653  0422  0871               	movf	___lwdiv@divisor,w
  4654  0423  02F3               	subwf	___lwdiv@dividend,f
  4655  0424  0872               	movf	___lwdiv@divisor+1,w
  4656  0425  3BF4               	subwfb	___lwdiv@dividend+1,f
  4657  0426  1476               	bsf	___lwdiv@quotient,0
  4658  0427                     l2835:	
  4659  0427  3001               	movlw	1
  4660  0428                     u1665:	
  4661  0428  36F2               	lsrf	___lwdiv@divisor+1,f
  4662  0429  0CF1               	rrf	___lwdiv@divisor,f
  4663  042A  0B89               	decfsz	9,f
  4664  042B  2C28               	goto	u1665
  4665  042C  3001               	movlw	1
  4666  042D  02F8               	subwf	___lwdiv@counter,f
  4667  042E  1D03               	btfss	3,2
  4668  042F  2C15               	goto	l2829
  4669  0430                     l2839:	
  4670  0430  0877               	movf	___lwdiv@quotient+1,w
  4671  0431  01F2               	clrf	?___lwdiv+1
  4672  0432  07F2               	addwf	?___lwdiv+1,f
  4673  0433  0876               	movf	___lwdiv@quotient,w
  4674  0434  01F1               	clrf	?___lwdiv
  4675  0435  07F1               	addwf	?___lwdiv,f
  4676  0436  0008               	return
  4677  0437                     __end_of___lwdiv:	
  4678                           
  4679                           	psect	text17
  4680  0657                     __ptext17:	
  4681 ;; *************** function _RF_RxDisable *****************
  4682 ;; Defined at:
  4683 ;;		line 154 in file "../src/RF_Control_B1.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;		None
  4686 ;; Auto vars:     Size  Location     Type
  4687 ;;		None
  4688 ;; Return value:  Size  Location     Type
  4689 ;;		None               void
  4690 ;; Registers used:
  4691 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4692 ;; Tracked objects:
  4693 ;;		On entry : 0/0
  4694 ;;		On exit  : 0/0
  4695 ;;		Unchanged: 0/0
  4696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4697 ;;      Params:         0       0       0       0       0       0       0       0
  4698 ;;      Locals:         0       0       0       0       0       0       0       0
  4699 ;;      Temps:          0       0       0       0       0       0       0       0
  4700 ;;      Totals:         0       0       0       0       0       0       0       0
  4701 ;;Total ram usage:        0 bytes
  4702 ;; Hardware stack levels used:    1
  4703 ;; Hardware stack levels required when called:    4
  4704 ;; This function calls:
  4705 ;;		_CC2500_WriteCommand
  4706 ;; This function is called by:
  4707 ;;		_setRF_Main
  4708 ;; This function uses a non-reentrant model
  4709 ;;
  4710                           
  4711                           
  4712                           ;psect for function _RF_RxDisable
  4713  0657                     _RF_RxDisable:	
  4714                           
  4715                           ;RF_Control_B1.c: 155: if (RF1.ReceiveGO == 1 || RF1.RxStatus == 1) {
  4716                           
  4717                           ;incstack = 0
  4718                           ; Regs used in _RF_RxDisable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4719  0657  0020               	movlb	0	; select bank0
  4720  0658  18A0               	btfsc	_RF1,1
  4721  0659  2E5C               	goto	l972
  4722  065A  1DA0               	btfss	_RF1,3
  4723  065B  0008               	return
  4724  065C                     l972:	
  4725                           
  4726                           ;RF_Control_B1.c: 156: RF1.RxStatus = 0;
  4727  065C  11A0               	bcf	_RF1,3
  4728                           
  4729                           ;RF_Control_B1.c: 157: RF1.ReceiveGO = 0;
  4730  065D  10A0               	bcf	_RF1,1
  4731                           
  4732                           ;RF_Control_B1.c: 158: CC2500_WriteCommand(0x36);
  4733  065E  3036               	movlw	54
  4734  065F  3185  25BD  3186   	fcall	_CC2500_WriteCommand
  4735                           
  4736                           ;RF_Control_B1.c: 159: CC2500_WriteCommand(0x3A);
  4737  0662  303A               	movlw	58
  4738  0663  3185  25BD         	fcall	_CC2500_WriteCommand
  4739  0665  0008               	return
  4740  0666                     __end_of_RF_RxDisable:	
  4741                           
  4742                           	psect	text18
  4743  0266                     __ptext18:	
  4744 ;; *************** function _CC2500_TxData *****************
  4745 ;; Defined at:
  4746 ;;		line 32 in file "../src/CC2500_B1.c"
  4747 ;; Parameters:    Size  Location     Type
  4748 ;;		None
  4749 ;; Auto vars:     Size  Location     Type
  4750 ;;  loop_e          1    6[COMMON] unsigned char 
  4751 ;; Return value:  Size  Location     Type
  4752 ;;		None               void
  4753 ;; Registers used:
  4754 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4755 ;; Tracked objects:
  4756 ;;		On entry : 0/0
  4757 ;;		On exit  : 0/0
  4758 ;;		Unchanged: 0/0
  4759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4760 ;;      Params:         0       0       0       0       0       0       0       0
  4761 ;;      Locals:         1       0       0       0       0       0       0       0
  4762 ;;      Temps:          1       0       0       0       0       0       0       0
  4763 ;;      Totals:         2       0       0       0       0       0       0       0
  4764 ;;Total ram usage:        2 bytes
  4765 ;; Hardware stack levels used:    1
  4766 ;; Hardware stack levels required when called:    4
  4767 ;; This function calls:
  4768 ;;		_CC2500_WriteByte
  4769 ;;		_CC2500_WriteCommand
  4770 ;;		_RF_Timeout_Counter
  4771 ;;		_setRF_TimeoutCleared
  4772 ;; This function is called by:
  4773 ;;		_setRF_Main
  4774 ;; This function uses a non-reentrant model
  4775 ;;
  4776                           
  4777                           
  4778                           ;psect for function _CC2500_TxData
  4779  0266                     _CC2500_TxData:	
  4780                           
  4781                           ;CC2500_B1.c: 33: unsigned char loop_e;
  4782                           ;CC2500_B1.c: 35: CC2500_WriteCommand(0x36);
  4783                           
  4784                           ;incstack = 0
  4785                           ; Regs used in _CC2500_TxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4786  0266  3036               	movlw	54
  4787  0267  3185  25BD  3182   	fcall	_CC2500_WriteCommand
  4788                           
  4789                           ;CC2500_B1.c: 36: CC2500_WriteCommand(0x3B);
  4790  026A  303B               	movlw	59
  4791  026B  3185  25BD  3182   	fcall	_CC2500_WriteCommand
  4792                           
  4793                           ;CC2500_B1.c: 38: RC0 = 0;
  4794  026E  0020               	movlb	0	; select bank0
  4795  026F  100E               	bcf	14,0	;volatile
  4796                           
  4797                           ;CC2500_B1.c: 39: SPI0Buffer = 0x3F + 0x40;
  4798  0270  307F               	movlw	127
  4799  0271  00F5               	movwf	??_CC2500_TxData
  4800  0272  0875               	movf	??_CC2500_TxData,w
  4801  0273  00CB               	movwf	_SPI0Buffer
  4802                           
  4803                           ;CC2500_B1.c: 40: while (RC5 == 1 && RF1.Timeout == 0) {
  4804  0274  2A78               	goto	l2679
  4805  0275                     l2677:	
  4806                           
  4807                           ;CC2500_B1.c: 41: RF_Timeout_Counter();
  4808  0275  3186  262E  3182   	fcall	_RF_Timeout_Counter
  4809  0278                     l2679:	
  4810  0278  0020               	movlb	0	; select bank0
  4811  0279  1E8E               	btfss	14,5	;volatile
  4812  027A  2A7D               	goto	l2683
  4813  027B  1F21               	btfss	_RF1+1,6
  4814  027C  2A75               	goto	l2677
  4815  027D                     l2683:	
  4816                           
  4817                           ;CC2500_B1.c: 42: };
  4818                           ;CC2500_B1.c: 43: setRF_TimeoutCleared();
  4819  027D  3186  26C6  3182   	fcall	_setRF_TimeoutCleared
  4820                           
  4821                           ;CC2500_B1.c: 45: CC2500_WriteByte();
  4822  0280  3186  2643  3182   	fcall	_CC2500_WriteByte
  4823                           
  4824                           ;CC2500_B1.c: 46: SPI0Buffer = Tx_Length;
  4825  0283  0020               	movlb	0	; select bank0
  4826  0284  0856               	movf	_Tx_Length,w
  4827  0285  00F5               	movwf	??_CC2500_TxData
  4828  0286  0875               	movf	??_CC2500_TxData,w
  4829  0287  00CB               	movwf	_SPI0Buffer
  4830                           
  4831                           ;CC2500_B1.c: 47: CC2500_WriteByte();
  4832  0288  3186  2643  3182   	fcall	_CC2500_WriteByte
  4833                           
  4834                           ;CC2500_B1.c: 48: for (loop_e = 0; loop_e < Tx_Length; loop_e++) {
  4835  028B  01F6               	clrf	CC2500_TxData@loop_e
  4836  028C                     l2697:	
  4837  028C  0020               	movlb	0	; select bank0
  4838  028D  0856               	movf	_Tx_Length,w
  4839  028E  0276               	subwf	CC2500_TxData@loop_e,w
  4840  028F  1803               	btfsc	3,0
  4841  0290  2AA2               	goto	l142
  4842                           
  4843                           ;CC2500_B1.c: 49: SPI0Buffer = RF_Data[loop_e];
  4844  0291  0876               	movf	CC2500_TxData@loop_e,w
  4845  0292  3EC0               	addlw	_RF_Data& (0+255)
  4846  0293  0086               	movwf	6
  4847  0294  0187               	clrf	7
  4848  0295  0801               	movf	1,w
  4849  0296  00F5               	movwf	??_CC2500_TxData
  4850  0297  0875               	movf	??_CC2500_TxData,w
  4851  0298  0020               	movlb	0	; select bank0
  4852  0299  00CB               	movwf	_SPI0Buffer
  4853                           
  4854                           ;CC2500_B1.c: 50: CC2500_WriteByte();
  4855  029A  3186  2643  3182   	fcall	_CC2500_WriteByte
  4856  029D  3001               	movlw	1
  4857  029E  00F5               	movwf	??_CC2500_TxData
  4858  029F  0875               	movf	??_CC2500_TxData,w
  4859  02A0  07F6               	addwf	CC2500_TxData@loop_e,f
  4860  02A1  2A8C               	goto	l2697
  4861  02A2                     l142:	
  4862                           
  4863                           ;CC2500_B1.c: 51: }
  4864                           ;CC2500_B1.c: 52: RC0 = 1;
  4865  02A2  140E               	bsf	14,0	;volatile
  4866                           
  4867                           ;CC2500_B1.c: 53: CC2500_WriteCommand(0x35);
  4868  02A3  3035               	movlw	53
  4869  02A4  3185  25BD  3182   	fcall	_CC2500_WriteCommand
  4870                           
  4871                           ;CC2500_B1.c: 54: while (RC1 == 0 && RF1.Timeout == 0) {
  4872  02A7  2AAB               	goto	l2703
  4873  02A8                     l2701:	
  4874                           
  4875                           ;CC2500_B1.c: 55: RF_Timeout_Counter();
  4876  02A8  3186  262E  3182   	fcall	_RF_Timeout_Counter
  4877  02AB                     l2703:	
  4878  02AB  0020               	movlb	0	; select bank0
  4879  02AC  188E               	btfsc	14,1	;volatile
  4880  02AD  2AB0               	goto	l2707
  4881  02AE  1F21               	btfss	_RF1+1,6
  4882  02AF  2AA8               	goto	l2701
  4883  02B0                     l2707:	
  4884                           
  4885                           ;CC2500_B1.c: 56: };
  4886                           ;CC2500_B1.c: 57: setRF_TimeoutCleared();
  4887  02B0  3186  26C6  3182   	fcall	_setRF_TimeoutCleared
  4888                           
  4889                           ;CC2500_B1.c: 59: while (RC1 == 1 && RF1.Timeout == 0) {
  4890  02B3  2AB7               	goto	l2711
  4891  02B4                     l2709:	
  4892                           
  4893                           ;CC2500_B1.c: 60: RF_Timeout_Counter();
  4894  02B4  3186  262E  3182   	fcall	_RF_Timeout_Counter
  4895  02B7                     l2711:	
  4896  02B7  0020               	movlb	0	; select bank0
  4897  02B8  1C8E               	btfss	14,1	;volatile
  4898  02B9  2ABC               	goto	l2715
  4899  02BA  1F21               	btfss	_RF1+1,6
  4900  02BB  2AB4               	goto	l2709
  4901  02BC                     l2715:	
  4902                           
  4903                           ;CC2500_B1.c: 61: };
  4904                           ;CC2500_B1.c: 62: setRF_TimeoutCleared();
  4905  02BC  3186  26C6  3182   	fcall	_setRF_TimeoutCleared
  4906                           
  4907                           ;CC2500_B1.c: 64: CC2500_WriteCommand(0x36);
  4908  02BF  3036               	movlw	54
  4909  02C0  3185  25BD  3182   	fcall	_CC2500_WriteCommand
  4910                           
  4911                           ;CC2500_B1.c: 65: CC2500_WriteCommand(0x3B);
  4912  02C3  303B               	movlw	59
  4913  02C4  3185  25BD         	fcall	_CC2500_WriteCommand
  4914                           
  4915                           ;CC2500_B1.c: 67: Transceive_OK = 1;
  4916  02C6  14FB               	bsf	_Transceive_OK/(0+8),_Transceive_OK& (0+7)
  4917  02C7  0008               	return
  4918  02C8                     __end_of_CC2500_TxData:	
  4919                           
  4920                           	psect	text19
  4921  0619                     __ptext19:	
  4922 ;; *************** function _CC2500_PowerOnInitial *****************
  4923 ;; Defined at:
  4924 ;;		line 126 in file "../src/CC2500_B1.c"
  4925 ;; Parameters:    Size  Location     Type
  4926 ;;		None
  4927 ;; Auto vars:     Size  Location     Type
  4928 ;;		None
  4929 ;; Return value:  Size  Location     Type
  4930 ;;		None               void
  4931 ;; Registers used:
  4932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4933 ;; Tracked objects:
  4934 ;;		On entry : 0/0
  4935 ;;		On exit  : 0/0
  4936 ;;		Unchanged: 0/0
  4937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4938 ;;      Params:         0       0       0       0       0       0       0       0
  4939 ;;      Locals:         0       0       0       0       0       0       0       0
  4940 ;;      Temps:          0       0       0       0       0       0       0       0
  4941 ;;      Totals:         0       0       0       0       0       0       0       0
  4942 ;;Total ram usage:        0 bytes
  4943 ;; Hardware stack levels used:    1
  4944 ;; Hardware stack levels required when called:    5
  4945 ;; This function calls:
  4946 ;;		_CC2500_ClearRXFIFO
  4947 ;;		_CC2500_ClearTXFIFO
  4948 ;;		_CC2500_FrequencyCabr
  4949 ;;		_CC2500_InitPATable
  4950 ;;		_CC2500_InitSetREG
  4951 ;;		_CC2500_PowerRST
  4952 ;;		_CC2500_SIDLEMode
  4953 ;; This function is called by:
  4954 ;;		_main
  4955 ;;		_setRF_Main
  4956 ;; This function uses a non-reentrant model
  4957 ;;
  4958                           
  4959                           
  4960                           ;psect for function _CC2500_PowerOnInitial
  4961  0619                     _CC2500_PowerOnInitial:	
  4962                           
  4963                           ;CC2500_B1.c: 127: CC2500_PowerRST();
  4964                           
  4965                           ;incstack = 0
  4966                           ; Regs used in _CC2500_PowerOnInitial: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4967  0619  3183  23C0  3186   	fcall	_CC2500_PowerRST
  4968                           
  4969                           ;CC2500_B1.c: 128: CC2500_InitSetREG();
  4970  061C  3184  24B9  3186   	fcall	_CC2500_InitSetREG
  4971                           
  4972                           ;CC2500_B1.c: 129: CC2500_InitPATable();
  4973  061F  3185  2586  3186   	fcall	_CC2500_InitPATable
  4974                           
  4975                           ;CC2500_B1.c: 130: CC2500_ClearTXFIFO();
  4976  0622  3186  26BE  3186   	fcall	_CC2500_ClearTXFIFO
  4977                           
  4978                           ;CC2500_B1.c: 131: CC2500_ClearRXFIFO();
  4979  0625  3186  26C2  3186   	fcall	_CC2500_ClearRXFIFO
  4980                           
  4981                           ;CC2500_B1.c: 132: CC2500_FrequencyCabr();
  4982  0628  3186  267F  3186   	fcall	_CC2500_FrequencyCabr
  4983                           
  4984                           ;CC2500_B1.c: 133: CC2500_SIDLEMode();
  4985  062B  3186  26BA         	fcall	_CC2500_SIDLEMode
  4986  062D  0008               	return
  4987  062E                     __end_of_CC2500_PowerOnInitial:	
  4988                           
  4989                           	psect	text20
  4990  06BA                     __ptext20:	
  4991 ;; *************** function _CC2500_SIDLEMode *****************
  4992 ;; Defined at:
  4993 ;;		line 216 in file "../src/CC2500_B1.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;		None
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;		None
  4998 ;; Return value:  Size  Location     Type
  4999 ;;		None               void
  5000 ;; Registers used:
  5001 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5007 ;;      Params:         0       0       0       0       0       0       0       0
  5008 ;;      Locals:         0       0       0       0       0       0       0       0
  5009 ;;      Temps:          0       0       0       0       0       0       0       0
  5010 ;;      Totals:         0       0       0       0       0       0       0       0
  5011 ;;Total ram usage:        0 bytes
  5012 ;; Hardware stack levels used:    1
  5013 ;; Hardware stack levels required when called:    4
  5014 ;; This function calls:
  5015 ;;		_CC2500_WriteCommand
  5016 ;; This function is called by:
  5017 ;;		_CC2500_PowerOnInitial
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021                           
  5022                           ;psect for function _CC2500_SIDLEMode
  5023  06BA                     _CC2500_SIDLEMode:	
  5024                           
  5025                           ;CC2500_B1.c: 217: CC2500_WriteCommand(0x36);
  5026                           
  5027                           ;incstack = 0
  5028                           ; Regs used in _CC2500_SIDLEMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5029  06BA  3036               	movlw	54
  5030  06BB  3185  25BD         	fcall	_CC2500_WriteCommand
  5031  06BD  0008               	return
  5032  06BE                     __end_of_CC2500_SIDLEMode:	
  5033                           
  5034                           	psect	text21
  5035  03C0                     __ptext21:	
  5036 ;; *************** function _CC2500_PowerRST *****************
  5037 ;; Defined at:
  5038 ;;		line 139 in file "../src/CC2500_B1.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;		None
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;		None
  5043 ;; Return value:  Size  Location     Type
  5044 ;;		None               void
  5045 ;; Registers used:
  5046 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5052 ;;      Params:         0       0       0       0       0       0       0       0
  5053 ;;      Locals:         0       0       0       0       0       0       0       0
  5054 ;;      Temps:          1       0       0       0       0       0       0       0
  5055 ;;      Totals:         1       0       0       0       0       0       0       0
  5056 ;;Total ram usage:        1 bytes
  5057 ;; Hardware stack levels used:    1
  5058 ;; Hardware stack levels required when called:    3
  5059 ;; This function calls:
  5060 ;;		_CC2500_WriteByte
  5061 ;;		_DelayTime_1us
  5062 ;;		_RF_Timeout_Counter
  5063 ;;		_setRF_TimeoutCleared
  5064 ;; This function is called by:
  5065 ;;		_CC2500_PowerOnInitial
  5066 ;; This function uses a non-reentrant model
  5067 ;;
  5068                           
  5069                           
  5070                           ;psect for function _CC2500_PowerRST
  5071  03C0                     _CC2500_PowerRST:	
  5072                           
  5073                           ;CC2500_B1.c: 140: RC3 = 0;
  5074                           
  5075                           ;incstack = 0
  5076                           ; Regs used in _CC2500_PowerRST: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5077  03C0  0020               	movlb	0	; select bank0
  5078  03C1  118E               	bcf	14,3	;volatile
  5079                           
  5080                           ;CC2500_B1.c: 141: RC4 = 0;
  5081  03C2  120E               	bcf	14,4	;volatile
  5082                           
  5083                           ;CC2500_B1.c: 142: RC0 = 1;
  5084  03C3  140E               	bsf	14,0	;volatile
  5085                           
  5086                           ;CC2500_B1.c: 143: DelayTime_1us(10);
  5087  03C4  300A               	movlw	10
  5088  03C5  00F1               	movwf	DelayTime_1us@count
  5089  03C6  3000               	movlw	0
  5090  03C7  00F2               	movwf	DelayTime_1us@count+1
  5091  03C8  3184  24E1  3183   	fcall	_DelayTime_1us
  5092                           
  5093                           ;CC2500_B1.c: 144: RC0 = 0;
  5094  03CB  0020               	movlb	0	; select bank0
  5095  03CC  100E               	bcf	14,0	;volatile
  5096                           
  5097                           ;CC2500_B1.c: 145: DelayTime_1us(10);
  5098  03CD  300A               	movlw	10
  5099  03CE  00F1               	movwf	DelayTime_1us@count
  5100  03CF  3000               	movlw	0
  5101  03D0  00F2               	movwf	DelayTime_1us@count+1
  5102  03D1  3184  24E1  3183   	fcall	_DelayTime_1us
  5103                           
  5104                           ;CC2500_B1.c: 146: RC0 = 1;
  5105  03D4  0020               	movlb	0	; select bank0
  5106  03D5  140E               	bsf	14,0	;volatile
  5107                           
  5108                           ;CC2500_B1.c: 147: DelayTime_1us(40);
  5109  03D6  3028               	movlw	40
  5110  03D7  00F1               	movwf	DelayTime_1us@count
  5111  03D8  3000               	movlw	0
  5112  03D9  00F2               	movwf	DelayTime_1us@count+1
  5113  03DA  3184  24E1  3183   	fcall	_DelayTime_1us
  5114                           
  5115                           ;CC2500_B1.c: 148: RC0 = 0;
  5116  03DD  0020               	movlb	0	; select bank0
  5117  03DE  100E               	bcf	14,0	;volatile
  5118                           
  5119                           ;CC2500_B1.c: 149: SPI0Buffer = 0x30;
  5120  03DF  3030               	movlw	48
  5121  03E0  00F7               	movwf	??_CC2500_PowerRST
  5122  03E1  0877               	movf	??_CC2500_PowerRST,w
  5123  03E2  00CB               	movwf	_SPI0Buffer
  5124                           
  5125                           ;CC2500_B1.c: 150: while (RC5 == 1 && RF1.Timeout == 0) {
  5126  03E3  2BE7               	goto	l2587
  5127  03E4                     l2585:	
  5128                           
  5129                           ;CC2500_B1.c: 151: RF_Timeout_Counter();
  5130  03E4  3186  262E  3183   	fcall	_RF_Timeout_Counter
  5131  03E7                     l2587:	
  5132  03E7  0020               	movlb	0	; select bank0
  5133  03E8  1E8E               	btfss	14,5	;volatile
  5134  03E9  2BEC               	goto	l2591
  5135  03EA  1F21               	btfss	_RF1+1,6
  5136  03EB  2BE4               	goto	l2585
  5137  03EC                     l2591:	
  5138                           
  5139                           ;CC2500_B1.c: 152: };
  5140                           ;CC2500_B1.c: 153: setRF_TimeoutCleared();
  5141  03EC  3186  26C6  3183   	fcall	_setRF_TimeoutCleared
  5142                           
  5143                           ;CC2500_B1.c: 154: CC2500_WriteByte();
  5144  03EF  3186  2643  3183   	fcall	_CC2500_WriteByte
  5145                           
  5146                           ;CC2500_B1.c: 155: while (RC5 == 1 && RF1.Timeout == 0) {
  5147  03F2  2BF6               	goto	l2597
  5148  03F3                     l2595:	
  5149                           
  5150                           ;CC2500_B1.c: 156: RF_Timeout_Counter();
  5151  03F3  3186  262E  3183   	fcall	_RF_Timeout_Counter
  5152  03F6                     l2597:	
  5153  03F6  0020               	movlb	0	; select bank0
  5154  03F7  1E8E               	btfss	14,5	;volatile
  5155  03F8  2BFB               	goto	l2601
  5156  03F9  1F21               	btfss	_RF1+1,6
  5157  03FA  2BF3               	goto	l2595
  5158  03FB                     l2601:	
  5159                           
  5160                           ;CC2500_B1.c: 157: };
  5161                           ;CC2500_B1.c: 158: setRF_TimeoutCleared();
  5162  03FB  3186  26C6         	fcall	_setRF_TimeoutCleared
  5163                           
  5164                           ;CC2500_B1.c: 159: RC4 = 0;
  5165  03FD  0020               	movlb	0	; select bank0
  5166  03FE  120E               	bcf	14,4	;volatile
  5167                           
  5168                           ;CC2500_B1.c: 160: RC0 = 1;
  5169  03FF  140E               	bsf	14,0	;volatile
  5170  0400  0008               	return
  5171  0401                     __end_of_CC2500_PowerRST:	
  5172                           
  5173                           	psect	text22
  5174  04B9                     __ptext22:	
  5175 ;; *************** function _CC2500_InitSetREG *****************
  5176 ;; Defined at:
  5177 ;;		line 166 in file "../src/CC2500_B1.c"
  5178 ;; Parameters:    Size  Location     Type
  5179 ;;		None
  5180 ;; Auto vars:     Size  Location     Type
  5181 ;;  loop_c          1    9[COMMON] unsigned char 
  5182 ;;  temp2           1    8[COMMON] unsigned char 
  5183 ;;  temp1           1    7[COMMON] unsigned char 
  5184 ;; Return value:  Size  Location     Type
  5185 ;;		None               void
  5186 ;; Registers used:
  5187 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5188 ;; Tracked objects:
  5189 ;;		On entry : 0/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5193 ;;      Params:         0       0       0       0       0       0       0       0
  5194 ;;      Locals:         3       0       0       0       0       0       0       0
  5195 ;;      Temps:          1       0       0       0       0       0       0       0
  5196 ;;      Totals:         4       0       0       0       0       0       0       0
  5197 ;;Total ram usage:        4 bytes
  5198 ;; Hardware stack levels used:    1
  5199 ;; Hardware stack levels required when called:    4
  5200 ;; This function calls:
  5201 ;;		_CC2500_WriteREG
  5202 ;; This function is called by:
  5203 ;;		_CC2500_PowerOnInitial
  5204 ;; This function uses a non-reentrant model
  5205 ;;
  5206                           
  5207                           
  5208                           ;psect for function _CC2500_InitSetREG
  5209  04B9                     _CC2500_InitSetREG:	
  5210                           
  5211                           ;CC2500_B1.c: 167: unsigned char loop_c;
  5212                           ;CC2500_B1.c: 168: unsigned char temp1, temp2;
  5213                           ;CC2500_B1.c: 170: for (loop_c = 0; loop_c < 47; loop_c++) {
  5214                           
  5215                           ;incstack = 0
  5216                           ; Regs used in _CC2500_InitSetREG: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5217  04B9  01F9               	clrf	CC2500_InitSetREG@loop_c
  5218  04BA                     L1:	
  5219  04BA  302F               	movlw	47
  5220  04BB  0279               	subwf	CC2500_InitSetREG@loop_c,w
  5221  04BC  1803               	btfsc	3,0
  5222  04BD  0008               	return
  5223                           
  5224                           ;CC2500_B1.c: 171: temp1 = CC2500_registers_address[loop_c];
  5225  04BE  0879               	movf	CC2500_InitSetREG@loop_c,w
  5226  04BF  3E00               	addlw	low (_CC2500_registers_address| (0+32768))
  5227  04C0  0084               	movwf	4
  5228  04C1  3082               	movlw	high (_CC2500_registers_address| (0+32768))
  5229  04C2  1803               	skipnc
  5230  04C3  3E01               	addlw	1
  5231  04C4  0085               	movwf	5
  5232  04C5  0800               	movf	0,w	;code access
  5233  04C6  00F6               	movwf	??_CC2500_InitSetREG
  5234  04C7  0876               	movf	??_CC2500_InitSetREG,w
  5235  04C8  00F7               	movwf	CC2500_InitSetREG@temp1
  5236                           
  5237                           ;CC2500_B1.c: 172: temp2 = CC2500_rfSettings[loop_c];
  5238  04C9  0879               	movf	CC2500_InitSetREG@loop_c,w
  5239  04CA  3E2F               	addlw	low (_CC2500_rfSettings| (0+32768))
  5240  04CB  0084               	movwf	4
  5241  04CC  3082               	movlw	high (_CC2500_rfSettings| (0+32768))
  5242  04CD  1803               	skipnc
  5243  04CE  3E01               	addlw	1
  5244  04CF  0085               	movwf	5
  5245  04D0  0800               	movf	0,w	;code access
  5246  04D1  00F6               	movwf	??_CC2500_InitSetREG
  5247  04D2  0876               	movf	??_CC2500_InitSetREG,w
  5248  04D3  00F8               	movwf	CC2500_InitSetREG@temp2
  5249                           
  5250                           ;CC2500_B1.c: 174: CC2500_WriteREG(temp1, temp2);
  5251  04D4  0878               	movf	CC2500_InitSetREG@temp2,w
  5252  04D5  00F6               	movwf	??_CC2500_InitSetREG
  5253  04D6  0876               	movf	??_CC2500_InitSetREG,w
  5254  04D7  00F3               	movwf	CC2500_WriteREG@value
  5255  04D8  0877               	movf	CC2500_InitSetREG@temp1,w
  5256  04D9  3185  2549  3184   	fcall	_CC2500_WriteREG
  5257  04DC  3001               	movlw	1
  5258  04DD  00F6               	movwf	??_CC2500_InitSetREG
  5259  04DE  0876               	movf	??_CC2500_InitSetREG,w
  5260  04DF  07F9               	addwf	CC2500_InitSetREG@loop_c,f
  5261  04E0  2CBA               	goto	L1
  5262  04E1                     __end_of_CC2500_InitSetREG:	
  5263                           
  5264                           	psect	text23
  5265  0586                     __ptext23:	
  5266 ;; *************** function _CC2500_InitPATable *****************
  5267 ;; Defined at:
  5268 ;;		line 181 in file "../src/CC2500_B1.c"
  5269 ;; Parameters:    Size  Location     Type
  5270 ;;		None
  5271 ;; Auto vars:     Size  Location     Type
  5272 ;;  loop_d          1    8[COMMON] unsigned char 
  5273 ;;  temp            1    7[COMMON] unsigned char 
  5274 ;; Return value:  Size  Location     Type
  5275 ;;		None               void
  5276 ;; Registers used:
  5277 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5278 ;; Tracked objects:
  5279 ;;		On entry : 0/0
  5280 ;;		On exit  : 0/0
  5281 ;;		Unchanged: 0/0
  5282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5283 ;;      Params:         0       0       0       0       0       0       0       0
  5284 ;;      Locals:         2       0       0       0       0       0       0       0
  5285 ;;      Temps:          1       0       0       0       0       0       0       0
  5286 ;;      Totals:         3       0       0       0       0       0       0       0
  5287 ;;Total ram usage:        3 bytes
  5288 ;; Hardware stack levels used:    1
  5289 ;; Hardware stack levels required when called:    4
  5290 ;; This function calls:
  5291 ;;		_CC2500_WriteREG
  5292 ;; This function is called by:
  5293 ;;		_CC2500_PowerOnInitial
  5294 ;; This function uses a non-reentrant model
  5295 ;;
  5296                           
  5297                           
  5298                           ;psect for function _CC2500_InitPATable
  5299  0586                     _CC2500_InitPATable:	
  5300                           
  5301                           ;CC2500_B1.c: 182: unsigned char loop_d;
  5302                           ;CC2500_B1.c: 183: unsigned char temp;
  5303                           ;CC2500_B1.c: 185: for (loop_d = 0; loop_d < 8; loop_d++) {
  5304                           
  5305                           ;incstack = 0
  5306                           ; Regs used in _CC2500_InitPATable: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5307  0586  01F8               	clrf	CC2500_InitPATable@loop_d
  5308  0587                     L2:	
  5309  0587  3008               	movlw	8
  5310  0588  0278               	subwf	CC2500_InitPATable@loop_d,w
  5311  0589  1803               	btfsc	3,0
  5312  058A  0008               	return
  5313                           
  5314                           ;CC2500_B1.c: 186: temp = CC2500_patable_vaule[loop_d];
  5315  058B  0878               	movf	CC2500_InitPATable@loop_d,w
  5316  058C  3E5E               	addlw	low (_CC2500_patable_vaule| (0+32768))
  5317  058D  0084               	movwf	4
  5318  058E  3082               	movlw	high (_CC2500_patable_vaule| (0+32768))
  5319  058F  1803               	skipnc
  5320  0590  3E01               	addlw	1
  5321  0591  0085               	movwf	5
  5322  0592  0800               	movf	0,w	;code access
  5323  0593  00F6               	movwf	??_CC2500_InitPATable
  5324  0594  0876               	movf	??_CC2500_InitPATable,w
  5325  0595  00F7               	movwf	CC2500_InitPATable@temp
  5326                           
  5327                           ;CC2500_B1.c: 187: CC2500_WriteREG(0x3E, temp);
  5328  0596  0877               	movf	CC2500_InitPATable@temp,w
  5329  0597  00F6               	movwf	??_CC2500_InitPATable
  5330  0598  0876               	movf	??_CC2500_InitPATable,w
  5331  0599  00F3               	movwf	CC2500_WriteREG@value
  5332  059A  303E               	movlw	62
  5333  059B  3185  2549  3185   	fcall	_CC2500_WriteREG
  5334  059E  3001               	movlw	1
  5335  059F  00F6               	movwf	??_CC2500_InitPATable
  5336  05A0  0876               	movf	??_CC2500_InitPATable,w
  5337  05A1  07F8               	addwf	CC2500_InitPATable@loop_d,f
  5338  05A2  2D87               	goto	L2
  5339  05A3                     __end_of_CC2500_InitPATable:	
  5340                           
  5341                           	psect	text24
  5342  0549                     __ptext24:	
  5343 ;; *************** function _CC2500_WriteREG *****************
  5344 ;; Defined at:
  5345 ;;		line 258 in file "../src/CC2500_B1.c"
  5346 ;; Parameters:    Size  Location     Type
  5347 ;;  w_addr          1    wreg     unsigned char 
  5348 ;;  value           1    3[COMMON] unsigned char 
  5349 ;; Auto vars:     Size  Location     Type
  5350 ;;  w_addr          1    5[COMMON] unsigned char 
  5351 ;; Return value:  Size  Location     Type
  5352 ;;		None               void
  5353 ;; Registers used:
  5354 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5355 ;; Tracked objects:
  5356 ;;		On entry : 0/0
  5357 ;;		On exit  : 0/0
  5358 ;;		Unchanged: 0/0
  5359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5360 ;;      Params:         1       0       0       0       0       0       0       0
  5361 ;;      Locals:         1       0       0       0       0       0       0       0
  5362 ;;      Temps:          1       0       0       0       0       0       0       0
  5363 ;;      Totals:         3       0       0       0       0       0       0       0
  5364 ;;Total ram usage:        3 bytes
  5365 ;; Hardware stack levels used:    1
  5366 ;; Hardware stack levels required when called:    3
  5367 ;; This function calls:
  5368 ;;		_CC2500_WriteByte
  5369 ;;		_RF_Timeout_Counter
  5370 ;;		_setRF_TimeoutCleared
  5371 ;; This function is called by:
  5372 ;;		_CC2500_InitSetREG
  5373 ;;		_CC2500_InitPATable
  5374 ;; This function uses a non-reentrant model
  5375 ;;
  5376                           
  5377                           
  5378                           ;psect for function _CC2500_WriteREG
  5379  0549                     _CC2500_WriteREG:	
  5380                           
  5381                           ;incstack = 0
  5382                           ; Regs used in _CC2500_WriteREG: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5383                           ;CC2500_WriteREG@w_addr stored from wreg
  5384  0549  00F5               	movwf	CC2500_WriteREG@w_addr
  5385                           
  5386                           ;CC2500_B1.c: 259: RC0 = 0;
  5387  054A  0020               	movlb	0	; select bank0
  5388  054B  100E               	bcf	14,0	;volatile
  5389                           
  5390                           ;CC2500_B1.c: 260: SPI0Buffer = w_addr;
  5391  054C  0875               	movf	CC2500_WriteREG@w_addr,w
  5392  054D  00F4               	movwf	??_CC2500_WriteREG
  5393  054E  0874               	movf	??_CC2500_WriteREG,w
  5394  054F  00CB               	movwf	_SPI0Buffer
  5395                           
  5396                           ;CC2500_B1.c: 261: while (RC5 == 1 && RF1.Timeout == 0) {
  5397  0550  2D54               	goto	l2497
  5398  0551                     l2495:	
  5399                           
  5400                           ;CC2500_B1.c: 262: RF_Timeout_Counter();
  5401  0551  3186  262E  3185   	fcall	_RF_Timeout_Counter
  5402  0554                     l2497:	
  5403  0554  0020               	movlb	0	; select bank0
  5404  0555  1E8E               	btfss	14,5	;volatile
  5405  0556  2D59               	goto	l2501
  5406  0557  1F21               	btfss	_RF1+1,6
  5407  0558  2D51               	goto	l2495
  5408  0559                     l2501:	
  5409                           
  5410                           ;CC2500_B1.c: 263: };
  5411                           ;CC2500_B1.c: 264: setRF_TimeoutCleared();
  5412  0559  3186  26C6  3185   	fcall	_setRF_TimeoutCleared
  5413                           
  5414                           ;CC2500_B1.c: 266: CC2500_WriteByte();
  5415  055C  3186  2643  3185   	fcall	_CC2500_WriteByte
  5416                           
  5417                           ;CC2500_B1.c: 267: SPI0Buffer = value;
  5418  055F  0873               	movf	CC2500_WriteREG@value,w
  5419  0560  00F4               	movwf	??_CC2500_WriteREG
  5420  0561  0874               	movf	??_CC2500_WriteREG,w
  5421  0562  0020               	movlb	0	; select bank0
  5422  0563  00CB               	movwf	_SPI0Buffer
  5423                           
  5424                           ;CC2500_B1.c: 268: CC2500_WriteByte();
  5425  0564  3186  2643         	fcall	_CC2500_WriteByte
  5426                           
  5427                           ;CC2500_B1.c: 269: RC0 = 1;
  5428  0566  0020               	movlb	0	; select bank0
  5429  0567  140E               	bsf	14,0	;volatile
  5430  0568  0008               	return
  5431  0569                     __end_of_CC2500_WriteREG:	
  5432                           
  5433                           	psect	text25
  5434  067F                     __ptext25:	
  5435 ;; *************** function _CC2500_FrequencyCabr *****************
  5436 ;; Defined at:
  5437 ;;		line 208 in file "../src/CC2500_B1.c"
  5438 ;; Parameters:    Size  Location     Type
  5439 ;;		None
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;		None
  5442 ;; Return value:  Size  Location     Type
  5443 ;;		None               void
  5444 ;; Registers used:
  5445 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5446 ;; Tracked objects:
  5447 ;;		On entry : 0/0
  5448 ;;		On exit  : 0/0
  5449 ;;		Unchanged: 0/0
  5450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5451 ;;      Params:         0       0       0       0       0       0       0       0
  5452 ;;      Locals:         0       0       0       0       0       0       0       0
  5453 ;;      Temps:          0       0       0       0       0       0       0       0
  5454 ;;      Totals:         0       0       0       0       0       0       0       0
  5455 ;;Total ram usage:        0 bytes
  5456 ;; Hardware stack levels used:    1
  5457 ;; Hardware stack levels required when called:    4
  5458 ;; This function calls:
  5459 ;;		_CC2500_WriteCommand
  5460 ;;		_DelayTime_1us
  5461 ;; This function is called by:
  5462 ;;		_CC2500_PowerOnInitial
  5463 ;; This function uses a non-reentrant model
  5464 ;;
  5465                           
  5466                           
  5467                           ;psect for function _CC2500_FrequencyCabr
  5468  067F                     _CC2500_FrequencyCabr:	
  5469                           
  5470                           ;CC2500_B1.c: 209: CC2500_WriteCommand(0x33);
  5471                           
  5472                           ;incstack = 0
  5473                           ; Regs used in _CC2500_FrequencyCabr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5474  067F  3033               	movlw	51
  5475  0680  3185  25BD  3186   	fcall	_CC2500_WriteCommand
  5476                           
  5477                           ;CC2500_B1.c: 210: DelayTime_1us(1000);
  5478  0683  30E8               	movlw	232
  5479  0684  00F1               	movwf	DelayTime_1us@count
  5480  0685  3003               	movlw	3
  5481  0686  00F2               	movwf	DelayTime_1us@count+1
  5482  0687  3184  24E1         	fcall	_DelayTime_1us
  5483  0689  0008               	return
  5484  068A                     __end_of_CC2500_FrequencyCabr:	
  5485                           
  5486                           	psect	text26
  5487  04E1                     __ptext26:	
  5488 ;; *************** function _DelayTime_1us *****************
  5489 ;; Defined at:
  5490 ;;		line 327 in file "../src/CC2500_B1.c"
  5491 ;; Parameters:    Size  Location     Type
  5492 ;;  count           2    1[COMMON] int 
  5493 ;; Auto vars:     Size  Location     Type
  5494 ;;  j               2    5[COMMON] unsigned int 
  5495 ;;  i               2    3[COMMON] unsigned int 
  5496 ;; Return value:  Size  Location     Type
  5497 ;;		None               void
  5498 ;; Registers used:
  5499 ;;		wreg, status,2
  5500 ;; Tracked objects:
  5501 ;;		On entry : 0/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5505 ;;      Params:         2       0       0       0       0       0       0       0
  5506 ;;      Locals:         4       0       0       0       0       0       0       0
  5507 ;;      Temps:          0       0       0       0       0       0       0       0
  5508 ;;      Totals:         6       0       0       0       0       0       0       0
  5509 ;;Total ram usage:        6 bytes
  5510 ;; Hardware stack levels used:    1
  5511 ;; Hardware stack levels required when called:    2
  5512 ;; This function calls:
  5513 ;;		Nothing
  5514 ;; This function is called by:
  5515 ;;		_CC2500_PowerRST
  5516 ;;		_CC2500_FrequencyCabr
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           
  5520                           
  5521                           ;psect for function _DelayTime_1us
  5522  04E1                     _DelayTime_1us:	
  5523                           
  5524                           ;CC2500_B1.c: 328: unsigned int i, j;
  5525                           ;CC2500_B1.c: 329: for (i = 1; i < count; i++)
  5526                           
  5527                           ;incstack = 0
  5528                           ; Regs used in _DelayTime_1us: [wreg+status,2]
  5529  04E1  3001               	movlw	1
  5530  04E2  00F3               	movwf	DelayTime_1us@i
  5531  04E3  3000               	movlw	0
  5532  04E4  00F4               	movwf	DelayTime_1us@i+1
  5533  04E5                     l254:	
  5534  04E5  0872               	movf	DelayTime_1us@count+1,w
  5535  04E6  0274               	subwf	DelayTime_1us@i+1,w
  5536  04E7  1D03               	skipz
  5537  04E8  2CEB               	goto	u1165
  5538  04E9  0871               	movf	DelayTime_1us@count,w
  5539  04EA  0273               	subwf	DelayTime_1us@i,w
  5540  04EB                     u1165:	
  5541  04EB  1803               	btfsc	3,0
  5542  04EC  0008               	return
  5543                           
  5544                           ;CC2500_B1.c: 330: for (j = 0; j <= 1; j++);
  5545  04ED  01F5               	clrf	DelayTime_1us@j
  5546  04EE  01F6               	clrf	DelayTime_1us@j+1
  5547  04EF  3000               	movlw	0
  5548  04F0  0276               	subwf	DelayTime_1us@j+1,w
  5549  04F1  3002               	movlw	2
  5550  04F2  1903               	skipnz
  5551  04F3  0275               	subwf	DelayTime_1us@j,w
  5552  04F4  1803               	btfsc	3,0
  5553  04F5  2D01               	goto	l2489
  5554  04F6                     l2487:	
  5555  04F6  3001               	movlw	1
  5556  04F7  07F5               	addwf	DelayTime_1us@j,f
  5557  04F8  3000               	movlw	0
  5558  04F9  3DF6               	addwfc	DelayTime_1us@j+1,f
  5559  04FA  3000               	movlw	0
  5560  04FB  0276               	subwf	DelayTime_1us@j+1,w
  5561  04FC  3002               	movlw	2
  5562  04FD  1903               	skipnz
  5563  04FE  0275               	subwf	DelayTime_1us@j,w
  5564  04FF  1C03               	skipc
  5565  0500  2CF6               	goto	l2487
  5566  0501                     l2489:	
  5567  0501  3001               	movlw	1
  5568  0502  07F3               	addwf	DelayTime_1us@i,f
  5569  0503  3000               	movlw	0
  5570  0504  3DF4               	addwfc	DelayTime_1us@i+1,f
  5571  0505  2CE5               	goto	l254
  5572  0506                     __end_of_DelayTime_1us:	
  5573                           
  5574                           	psect	text27
  5575  06BE                     __ptext27:	
  5576 ;; *************** function _CC2500_ClearTXFIFO *****************
  5577 ;; Defined at:
  5578 ;;		line 194 in file "../src/CC2500_B1.c"
  5579 ;; Parameters:    Size  Location     Type
  5580 ;;		None
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;		None
  5583 ;; Return value:  Size  Location     Type
  5584 ;;		None               void
  5585 ;; Registers used:
  5586 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/0
  5589 ;;		On exit  : 0/0
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5592 ;;      Params:         0       0       0       0       0       0       0       0
  5593 ;;      Locals:         0       0       0       0       0       0       0       0
  5594 ;;      Temps:          0       0       0       0       0       0       0       0
  5595 ;;      Totals:         0       0       0       0       0       0       0       0
  5596 ;;Total ram usage:        0 bytes
  5597 ;; Hardware stack levels used:    1
  5598 ;; Hardware stack levels required when called:    4
  5599 ;; This function calls:
  5600 ;;		_CC2500_WriteCommand
  5601 ;; This function is called by:
  5602 ;;		_CC2500_PowerOnInitial
  5603 ;; This function uses a non-reentrant model
  5604 ;;
  5605                           
  5606                           
  5607                           ;psect for function _CC2500_ClearTXFIFO
  5608  06BE                     _CC2500_ClearTXFIFO:	
  5609                           
  5610                           ;CC2500_B1.c: 195: CC2500_WriteCommand(0x3B);
  5611                           
  5612                           ;incstack = 0
  5613                           ; Regs used in _CC2500_ClearTXFIFO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5614  06BE  303B               	movlw	59
  5615  06BF  3185  25BD         	fcall	_CC2500_WriteCommand
  5616  06C1  0008               	return
  5617  06C2                     __end_of_CC2500_ClearTXFIFO:	
  5618                           
  5619                           	psect	text28
  5620  06C2                     __ptext28:	
  5621 ;; *************** function _CC2500_ClearRXFIFO *****************
  5622 ;; Defined at:
  5623 ;;		line 201 in file "../src/CC2500_B1.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;		None
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;		None
  5628 ;; Return value:  Size  Location     Type
  5629 ;;		None               void
  5630 ;; Registers used:
  5631 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5632 ;; Tracked objects:
  5633 ;;		On entry : 0/0
  5634 ;;		On exit  : 0/0
  5635 ;;		Unchanged: 0/0
  5636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5637 ;;      Params:         0       0       0       0       0       0       0       0
  5638 ;;      Locals:         0       0       0       0       0       0       0       0
  5639 ;;      Temps:          0       0       0       0       0       0       0       0
  5640 ;;      Totals:         0       0       0       0       0       0       0       0
  5641 ;;Total ram usage:        0 bytes
  5642 ;; Hardware stack levels used:    1
  5643 ;; Hardware stack levels required when called:    4
  5644 ;; This function calls:
  5645 ;;		_CC2500_WriteCommand
  5646 ;; This function is called by:
  5647 ;;		_CC2500_PowerOnInitial
  5648 ;; This function uses a non-reentrant model
  5649 ;;
  5650                           
  5651                           
  5652                           ;psect for function _CC2500_ClearRXFIFO
  5653  06C2                     _CC2500_ClearRXFIFO:	
  5654                           
  5655                           ;CC2500_B1.c: 202: CC2500_WriteCommand(0x3A);
  5656                           
  5657                           ;incstack = 0
  5658                           ; Regs used in _CC2500_ClearRXFIFO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5659  06C2  303A               	movlw	58
  5660  06C3  3185  25BD         	fcall	_CC2500_WriteCommand
  5661  06C5  0008               	return
  5662  06C6                     __end_of_CC2500_ClearRXFIFO:	
  5663                           
  5664                           	psect	text29
  5665  05BD                     __ptext29:	
  5666 ;; *************** function _CC2500_WriteCommand *****************
  5667 ;; Defined at:
  5668 ;;		line 292 in file "../src/CC2500_B1.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;  command         1    wreg     unsigned char 
  5671 ;; Auto vars:     Size  Location     Type
  5672 ;;  command         1    4[COMMON] unsigned char 
  5673 ;; Return value:  Size  Location     Type
  5674 ;;		None               void
  5675 ;; Registers used:
  5676 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5677 ;; Tracked objects:
  5678 ;;		On entry : 0/0
  5679 ;;		On exit  : 0/0
  5680 ;;		Unchanged: 0/0
  5681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5682 ;;      Params:         0       0       0       0       0       0       0       0
  5683 ;;      Locals:         1       0       0       0       0       0       0       0
  5684 ;;      Temps:          1       0       0       0       0       0       0       0
  5685 ;;      Totals:         2       0       0       0       0       0       0       0
  5686 ;;Total ram usage:        2 bytes
  5687 ;; Hardware stack levels used:    1
  5688 ;; Hardware stack levels required when called:    3
  5689 ;; This function calls:
  5690 ;;		_CC2500_WriteByte
  5691 ;;		_RF_Timeout_Counter
  5692 ;;		_setRF_TimeoutCleared
  5693 ;; This function is called by:
  5694 ;;		_CC2500_TxData
  5695 ;;		_CC2500_ClearTXFIFO
  5696 ;;		_CC2500_ClearRXFIFO
  5697 ;;		_CC2500_FrequencyCabr
  5698 ;;		_CC2500_SIDLEMode
  5699 ;;		_setRF_Main
  5700 ;;		_RF_RxDisable
  5701 ;;		_CC2500_RxData
  5702 ;; This function uses a non-reentrant model
  5703 ;;
  5704                           
  5705                           
  5706                           ;psect for function _CC2500_WriteCommand
  5707  05BD                     _CC2500_WriteCommand:	
  5708                           
  5709                           ;incstack = 0
  5710                           ; Regs used in _CC2500_WriteCommand: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5711                           ;CC2500_WriteCommand@command stored from wreg
  5712  05BD  00F4               	movwf	CC2500_WriteCommand@command
  5713                           
  5714                           ;CC2500_B1.c: 293: RC0 = 0;
  5715  05BE  0020               	movlb	0	; select bank0
  5716  05BF  100E               	bcf	14,0	;volatile
  5717                           
  5718                           ;CC2500_B1.c: 294: SPI0Buffer = command;
  5719  05C0  0874               	movf	CC2500_WriteCommand@command,w
  5720  05C1  00F3               	movwf	??_CC2500_WriteCommand
  5721  05C2  0873               	movf	??_CC2500_WriteCommand,w
  5722  05C3  00CB               	movwf	_SPI0Buffer
  5723                           
  5724                           ;CC2500_B1.c: 296: while (RC5 == 1 && RF1.Timeout == 0) {
  5725  05C4  2DC8               	goto	l2469
  5726  05C5                     l2467:	
  5727                           
  5728                           ;CC2500_B1.c: 297: RF_Timeout_Counter();
  5729  05C5  3186  262E  3185   	fcall	_RF_Timeout_Counter
  5730  05C8                     l2469:	
  5731  05C8  0020               	movlb	0	; select bank0
  5732  05C9  1E8E               	btfss	14,5	;volatile
  5733  05CA  2DCD               	goto	l2473
  5734  05CB  1F21               	btfss	_RF1+1,6
  5735  05CC  2DC5               	goto	l2467
  5736  05CD                     l2473:	
  5737                           
  5738                           ;CC2500_B1.c: 298: };
  5739                           ;CC2500_B1.c: 299: setRF_TimeoutCleared();
  5740  05CD  3186  26C6  3185   	fcall	_setRF_TimeoutCleared
  5741                           
  5742                           ;CC2500_B1.c: 301: CC2500_WriteByte();
  5743  05D0  3186  2643         	fcall	_CC2500_WriteByte
  5744                           
  5745                           ;CC2500_B1.c: 302: RC0 = 1;
  5746  05D2  0020               	movlb	0	; select bank0
  5747  05D3  140E               	bsf	14,0	;volatile
  5748  05D4  0008               	return
  5749  05D5                     __end_of_CC2500_WriteCommand:	
  5750                           
  5751                           	psect	text30
  5752  06C6                     __ptext30:	
  5753 ;; *************** function _setRF_TimeoutCleared *****************
  5754 ;; Defined at:
  5755 ;;		line 149 in file "../src/RF_Control_B1.c"
  5756 ;; Parameters:    Size  Location     Type
  5757 ;;		None
  5758 ;; Auto vars:     Size  Location     Type
  5759 ;;		None
  5760 ;; Return value:  Size  Location     Type
  5761 ;;		None               void
  5762 ;; Registers used:
  5763 ;;		status,2
  5764 ;; Tracked objects:
  5765 ;;		On entry : 0/0
  5766 ;;		On exit  : 0/0
  5767 ;;		Unchanged: 0/0
  5768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5769 ;;      Params:         0       0       0       0       0       0       0       0
  5770 ;;      Locals:         0       0       0       0       0       0       0       0
  5771 ;;      Temps:          0       0       0       0       0       0       0       0
  5772 ;;      Totals:         0       0       0       0       0       0       0       0
  5773 ;;Total ram usage:        0 bytes
  5774 ;; Hardware stack levels used:    1
  5775 ;; Hardware stack levels required when called:    2
  5776 ;; This function calls:
  5777 ;;		Nothing
  5778 ;; This function is called by:
  5779 ;;		_CC2500_TxData
  5780 ;;		_CC2500_PowerRST
  5781 ;;		_CC2500_WriteREG
  5782 ;;		_CC2500_WriteCommand
  5783 ;;		_CC2500_RxData
  5784 ;;		_CC2500_ReadREG
  5785 ;;		_CC2500_ReadStatus
  5786 ;; This function uses a non-reentrant model
  5787 ;;
  5788                           
  5789                           
  5790                           ;psect for function _setRF_TimeoutCleared
  5791  06C6                     _setRF_TimeoutCleared:	
  5792                           
  5793                           ;RF_Control_B1.c: 150: RF1.TimeoutCount = 0;
  5794                           
  5795                           ;incstack = 0
  5796                           ; Regs used in _setRF_TimeoutCleared: [status,2]
  5797  06C6  0020               	movlb	0	; select bank0
  5798  06C7  01AD               	clrf	_RF1+13
  5799  06C8  01AE               	clrf	_RF1+14
  5800  06C9  0008               	return
  5801  06CA                     __end_of_setRF_TimeoutCleared:	
  5802                           
  5803                           	psect	text31
  5804  062E                     __ptext31:	
  5805 ;; *************** function _RF_Timeout_Counter *****************
  5806 ;; Defined at:
  5807 ;;		line 141 in file "../src/RF_Control_B1.c"
  5808 ;; Parameters:    Size  Location     Type
  5809 ;;		None
  5810 ;; Auto vars:     Size  Location     Type
  5811 ;;		None
  5812 ;; Return value:  Size  Location     Type
  5813 ;;		None               void
  5814 ;; Registers used:
  5815 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5816 ;; Tracked objects:
  5817 ;;		On entry : 0/0
  5818 ;;		On exit  : 0/0
  5819 ;;		Unchanged: 0/0
  5820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5821 ;;      Params:         0       0       0       0       0       0       0       0
  5822 ;;      Locals:         0       0       0       0       0       0       0       0
  5823 ;;      Temps:          0       0       0       0       0       0       0       0
  5824 ;;      Totals:         0       0       0       0       0       0       0       0
  5825 ;;Total ram usage:        0 bytes
  5826 ;; Hardware stack levels used:    1
  5827 ;; Hardware stack levels required when called:    2
  5828 ;; This function calls:
  5829 ;;		Nothing
  5830 ;; This function is called by:
  5831 ;;		_CC2500_TxData
  5832 ;;		_CC2500_PowerRST
  5833 ;;		_CC2500_WriteREG
  5834 ;;		_CC2500_WriteCommand
  5835 ;;		_CC2500_RxData
  5836 ;;		_CC2500_ReadREG
  5837 ;;		_CC2500_ReadStatus
  5838 ;; This function uses a non-reentrant model
  5839 ;;
  5840                           
  5841                           
  5842                           ;psect for function _RF_Timeout_Counter
  5843  062E                     _RF_Timeout_Counter:	
  5844                           
  5845                           ;RF_Control_B1.c: 142: RF1.TimeoutCount++;
  5846                           
  5847                           ;incstack = 0
  5848                           ; Regs used in _RF_Timeout_Counter: [wreg+fsr1l+fsr1h+status,2+status,0]
  5849  062E  3001               	movlw	1
  5850  062F  0020               	movlb	0	; select bank0
  5851  0630  07AD               	addwf	_RF1+13,f
  5852  0631  3000               	movlw	0
  5853  0632  3DAE               	addwfc	_RF1+14,f
  5854                           
  5855                           ;RF_Control_B1.c: 143: if (RF1.TimeoutCount == 25000) {
  5856  0633  300D               	movlw	13
  5857  0634  3E20               	addlw	_RF1& (0+255)
  5858  0635  0086               	movwf	6
  5859  0636  0187               	clrf	7
  5860  0637  3F40               	moviw [0]fsr1
  5861  0638  3AA8               	xorlw	168
  5862  0639  1D03               	skipz
  5863  063A  2E3D               	goto	u1085
  5864  063B  3F41               	moviw [1]fsr1
  5865  063C  3A61               	xorlw	97
  5866  063D                     u1085:	
  5867  063D  1D03               	skipz
  5868  063E  0008               	return
  5869                           
  5870                           ;RF_Control_B1.c: 144: RF1.TimeoutCount = 0;
  5871  063F  01AD               	clrf	_RF1+13
  5872  0640  01AE               	clrf	_RF1+14
  5873                           
  5874                           ;RF_Control_B1.c: 145: RF1.Timeout = 1;
  5875  0641  1721               	bsf	_RF1+1,6
  5876  0642  0008               	return
  5877  0643                     __end_of_RF_Timeout_Counter:	
  5878                           
  5879                           	psect	text32
  5880  0643                     __ptext32:	
  5881 ;; *************** function _CC2500_WriteByte *****************
  5882 ;; Defined at:
  5883 ;;		line 226 in file "../src/CC2500_B1.c"
  5884 ;; Parameters:    Size  Location     Type
  5885 ;;		None
  5886 ;; Auto vars:     Size  Location     Type
  5887 ;;  loop_a          1    2[COMMON] unsigned char 
  5888 ;; Return value:  Size  Location     Type
  5889 ;;		None               void
  5890 ;; Registers used:
  5891 ;;		wreg, status,2, status,0
  5892 ;; Tracked objects:
  5893 ;;		On entry : 0/0
  5894 ;;		On exit  : 0/0
  5895 ;;		Unchanged: 0/0
  5896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5897 ;;      Params:         0       0       0       0       0       0       0       0
  5898 ;;      Locals:         1       0       0       0       0       0       0       0
  5899 ;;      Temps:          1       0       0       0       0       0       0       0
  5900 ;;      Totals:         2       0       0       0       0       0       0       0
  5901 ;;Total ram usage:        2 bytes
  5902 ;; Hardware stack levels used:    1
  5903 ;; Hardware stack levels required when called:    2
  5904 ;; This function calls:
  5905 ;;		Nothing
  5906 ;; This function is called by:
  5907 ;;		_CC2500_TxData
  5908 ;;		_CC2500_PowerRST
  5909 ;;		_CC2500_WriteREG
  5910 ;;		_CC2500_WriteCommand
  5911 ;;		_CC2500_RxData
  5912 ;;		_CC2500_ReadREG
  5913 ;;		_CC2500_ReadStatus
  5914 ;; This function uses a non-reentrant model
  5915 ;;
  5916                           
  5917                           
  5918                           ;psect for function _CC2500_WriteByte
  5919  0643                     _CC2500_WriteByte:	
  5920                           
  5921                           ;CC2500_B1.c: 227: unsigned char loop_a;
  5922                           ;CC2500_B1.c: 228: for (loop_a = 0; loop_a < 8; loop_a++) {
  5923                           
  5924                           ;incstack = 0
  5925                           ; Regs used in _CC2500_WriteByte: [wreg+status,2+status,0]
  5926  0643  01F2               	clrf	CC2500_WriteByte@loop_a
  5927  0644                     L3:	
  5928  0644  3008               	movlw	8
  5929  0645  0272               	subwf	CC2500_WriteByte@loop_a,w
  5930  0646  1803               	btfsc	3,0
  5931  0647  0008               	return
  5932                           
  5933                           ;CC2500_B1.c: 229: if (SPI0Buffer & 0x80)
  5934  0648  0020               	movlb	0	; select bank0
  5935  0649  1FCB               	btfss	_SPI0Buffer,7
  5936  064A  2E4D               	goto	l210
  5937                           
  5938                           ;CC2500_B1.c: 230: RC4 = 1;
  5939  064B  160E               	bsf	14,4	;volatile
  5940  064C  2E4E               	goto	l211
  5941  064D                     l210:	
  5942                           
  5943                           ;CC2500_B1.c: 231: else
  5944                           ;CC2500_B1.c: 232: RC4 = 0;
  5945  064D  120E               	bcf	14,4	;volatile
  5946  064E                     l211:	
  5947                           
  5948                           ;CC2500_B1.c: 233: RC3 = 1;
  5949  064E  158E               	bsf	14,3	;volatile
  5950                           
  5951                           ;CC2500_B1.c: 234: SPI0Buffer <<= 1;
  5952  064F  1003               	clrc
  5953  0650  0DCB               	rlf	_SPI0Buffer,f
  5954                           
  5955                           ;CC2500_B1.c: 235: RC3 = 0;
  5956  0651  118E               	bcf	14,3	;volatile
  5957  0652  3001               	movlw	1
  5958  0653  00F1               	movwf	??_CC2500_WriteByte
  5959  0654  0871               	movf	??_CC2500_WriteByte,w
  5960  0655  07F2               	addwf	CC2500_WriteByte@loop_a,f
  5961  0656  2E44               	goto	L3
  5962  0657                     __end_of_CC2500_WriteByte:	
  5963                           
  5964                           	psect	text33
  5965  06D4                     __ptext33:	
  5966 ;; *************** function _RF_Initialization *****************
  5967 ;; Defined at:
  5968 ;;		line 9 in file "../src/RF_Control_B1.c"
  5969 ;; Parameters:    Size  Location     Type
  5970 ;;		None
  5971 ;; Auto vars:     Size  Location     Type
  5972 ;;		None
  5973 ;; Return value:  Size  Location     Type
  5974 ;;		None               void
  5975 ;; Registers used:
  5976 ;;		wreg, status,2, status,0, pclath, cstack
  5977 ;; Tracked objects:
  5978 ;;		On entry : 0/0
  5979 ;;		On exit  : 0/0
  5980 ;;		Unchanged: 0/0
  5981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5982 ;;      Params:         0       0       0       0       0       0       0       0
  5983 ;;      Locals:         0       0       0       0       0       0       0       0
  5984 ;;      Temps:          0       0       0       0       0       0       0       0
  5985 ;;      Totals:         0       0       0       0       0       0       0       0
  5986 ;;Total ram usage:        0 bytes
  5987 ;; Hardware stack levels used:    1
  5988 ;; Hardware stack levels required when called:    3
  5989 ;; This function calls:
  5990 ;;		_setRF_Initialization
  5991 ;; This function is called by:
  5992 ;;		_main
  5993 ;; This function uses a non-reentrant model
  5994 ;;
  5995                           
  5996                           
  5997                           ;psect for function _RF_Initialization
  5998  06D4                     _RF_Initialization:	
  5999                           
  6000                           ;RF_Control_B1.c: 11: setRF_Initialization();
  6001                           
  6002                           ;incstack = 0
  6003                           ; Regs used in _RF_Initialization: [wreg+status,2+status,0+pclath+cstack]
  6004  06D4  3186  2694         	fcall	_setRF_Initialization
  6005  06D6  0008               	return
  6006  06D7                     __end_of_RF_Initialization:	
  6007                           
  6008                           	psect	text34
  6009  0694                     __ptext34:	
  6010 ;; *************** function _setRF_Initialization *****************
  6011 ;; Defined at:
  6012 ;;		line 17 in file "../src/RF_Control_B1.c"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;		None
  6015 ;; Auto vars:     Size  Location     Type
  6016 ;;		None
  6017 ;; Return value:  Size  Location     Type
  6018 ;;		None               void
  6019 ;; Registers used:
  6020 ;;		wreg
  6021 ;; Tracked objects:
  6022 ;;		On entry : 0/0
  6023 ;;		On exit  : 0/0
  6024 ;;		Unchanged: 0/0
  6025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6026 ;;      Params:         0       0       0       0       0       0       0       0
  6027 ;;      Locals:         0       0       0       0       0       0       0       0
  6028 ;;      Temps:          1       0       0       0       0       0       0       0
  6029 ;;      Totals:         1       0       0       0       0       0       0       0
  6030 ;;Total ram usage:        1 bytes
  6031 ;; Hardware stack levels used:    1
  6032 ;; Hardware stack levels required when called:    2
  6033 ;; This function calls:
  6034 ;;		Nothing
  6035 ;; This function is called by:
  6036 ;;		_RF_Initialization
  6037 ;; This function uses a non-reentrant model
  6038 ;;
  6039                           
  6040                           
  6041                           ;psect for function _setRF_Initialization
  6042  0694                     _setRF_Initialization:	
  6043                           
  6044                           ;RF_Control_B1.c: 19: Tx_Length = 21;
  6045                           
  6046                           ;incstack = 0
  6047                           ; Regs used in _setRF_Initialization: [wreg]
  6048  0694  3015               	movlw	21
  6049  0695  00F1               	movwf	??_setRF_Initialization
  6050  0696  0871               	movf	??_setRF_Initialization,w
  6051  0697  0020               	movlb	0	; select bank0
  6052  0698  00D6               	movwf	_Tx_Length
  6053                           
  6054                           ;RF_Control_B1.c: 20: RF1.RunTime = 200;
  6055  0699  30C8               	movlw	200
  6056  069A  00A8               	movwf	_RF1+8
  6057  069B  3000               	movlw	0
  6058  069C  00A9               	movwf	_RF1+9
  6059  069D  0008               	return
  6060  069E                     __end_of_setRF_Initialization:	
  6061                           
  6062                           	psect	text35
  6063  069E                     __ptext35:	
  6064 ;; *************** function _Mcu_Initialization *****************
  6065 ;; Defined at:
  6066 ;;		line 30 in file "../src/MCU_B1.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;		None
  6069 ;; Auto vars:     Size  Location     Type
  6070 ;;		None
  6071 ;; Return value:  Size  Location     Type
  6072 ;;		None               void
  6073 ;; Registers used:
  6074 ;;		wreg, status,2, status,0, pclath, cstack
  6075 ;; Tracked objects:
  6076 ;;		On entry : 0/0
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6080 ;;      Params:         0       0       0       0       0       0       0       0
  6081 ;;      Locals:         0       0       0       0       0       0       0       0
  6082 ;;      Temps:          0       0       0       0       0       0       0       0
  6083 ;;      Totals:         0       0       0       0       0       0       0       0
  6084 ;;Total ram usage:        0 bytes
  6085 ;; Hardware stack levels used:    1
  6086 ;; Hardware stack levels required when called:    3
  6087 ;; This function calls:
  6088 ;;		_Fosc_Set
  6089 ;;		_IO_Set
  6090 ;;		_TMR1_Set
  6091 ;; This function is called by:
  6092 ;;		_main
  6093 ;; This function uses a non-reentrant model
  6094 ;;
  6095                           
  6096                           
  6097                           ;psect for function _Mcu_Initialization
  6098  069E                     _Mcu_Initialization:	
  6099                           
  6100                           ;MCU_B1.c: 32: Fosc_Set();
  6101                           
  6102                           ;incstack = 0
  6103                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  6104  069E  3186  26CA  3186   	fcall	_Fosc_Set
  6105                           
  6106                           ;MCU_B1.c: 34: IO_Set();
  6107  06A1  3185  25D5  3186   	fcall	_IO_Set
  6108                           
  6109                           ;MCU_B1.c: 36: ;;
  6110                           ;MCU_B1.c: 38: TMR1_Set();
  6111  06A4  3186  2673         	fcall	_TMR1_Set
  6112  06A6  0008               	return
  6113  06A7                     __end_of_Mcu_Initialization:	
  6114                           
  6115                           	psect	text36
  6116  0673                     __ptext36:	
  6117 ;; *************** function _TMR1_Set *****************
  6118 ;; Defined at:
  6119 ;;		line 226 in file "../src/MCU_B1.c"
  6120 ;; Parameters:    Size  Location     Type
  6121 ;;		None
  6122 ;; Auto vars:     Size  Location     Type
  6123 ;;		None
  6124 ;; Return value:  Size  Location     Type
  6125 ;;		None               void
  6126 ;; Registers used:
  6127 ;;		wreg
  6128 ;; Tracked objects:
  6129 ;;		On entry : 0/0
  6130 ;;		On exit  : 0/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6133 ;;      Params:         0       0       0       0       0       0       0       0
  6134 ;;      Locals:         0       0       0       0       0       0       0       0
  6135 ;;      Temps:          0       0       0       0       0       0       0       0
  6136 ;;      Totals:         0       0       0       0       0       0       0       0
  6137 ;;Total ram usage:        0 bytes
  6138 ;; Hardware stack levels used:    1
  6139 ;; Hardware stack levels required when called:    2
  6140 ;; This function calls:
  6141 ;;		Nothing
  6142 ;; This function is called by:
  6143 ;;		_Mcu_Initialization
  6144 ;; This function uses a non-reentrant model
  6145 ;;
  6146                           
  6147                           
  6148                           ;psect for function _TMR1_Set
  6149  0673                     _TMR1_Set:	
  6150                           
  6151                           ;MCU_B1.c: 227: T1CON = (0x40 | 0x00 | 0x01);
  6152                           
  6153                           ;incstack = 0
  6154                           ; Regs used in _TMR1_Set: [wreg]
  6155  0673  3041               	movlw	65
  6156  0674  0020               	movlb	0	; select bank0
  6157  0675  0098               	movwf	24	;volatile
  6158                           
  6159                           ;MCU_B1.c: 228: TMR1H = (int)((65536-1480)/256);
  6160  0676  30FA               	movlw	250
  6161  0677  0097               	movwf	23	;volatile
  6162                           
  6163                           ;MCU_B1.c: 229: TMR1L = (int)((65536-1480)%256);
  6164  0678  3038               	movlw	56
  6165  0679  0096               	movwf	22	;volatile
  6166                           
  6167                           ;MCU_B1.c: 230: TMR1IE = 1;
  6168  067A  0021               	movlb	1	; select bank1
  6169  067B  1411               	bsf	17,0	;volatile
  6170                           
  6171                           ;MCU_B1.c: 231: PEIE = 1;
  6172  067C  170B               	bsf	11,6	;volatile
  6173                           
  6174                           ;MCU_B1.c: 232: GIE = 1;
  6175  067D  178B               	bsf	11,7	;volatile
  6176  067E  0008               	return
  6177  067F                     __end_of_TMR1_Set:	
  6178                           
  6179                           	psect	text37
  6180  05D5                     __ptext37:	
  6181 ;; *************** function _IO_Set *****************
  6182 ;; Defined at:
  6183 ;;		line 60 in file "../src/MCU_B1.c"
  6184 ;; Parameters:    Size  Location     Type
  6185 ;;		None
  6186 ;; Auto vars:     Size  Location     Type
  6187 ;;		None
  6188 ;; Return value:  Size  Location     Type
  6189 ;;		None               void
  6190 ;; Registers used:
  6191 ;;		wreg, status,2
  6192 ;; Tracked objects:
  6193 ;;		On entry : 0/0
  6194 ;;		On exit  : 0/0
  6195 ;;		Unchanged: 0/0
  6196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6197 ;;      Params:         0       0       0       0       0       0       0       0
  6198 ;;      Locals:         0       0       0       0       0       0       0       0
  6199 ;;      Temps:          0       0       0       0       0       0       0       0
  6200 ;;      Totals:         0       0       0       0       0       0       0       0
  6201 ;;Total ram usage:        0 bytes
  6202 ;; Hardware stack levels used:    1
  6203 ;; Hardware stack levels required when called:    2
  6204 ;; This function calls:
  6205 ;;		Nothing
  6206 ;; This function is called by:
  6207 ;;		_Mcu_Initialization
  6208 ;; This function uses a non-reentrant model
  6209 ;;
  6210                           
  6211                           
  6212                           ;psect for function _IO_Set
  6213  05D5                     _IO_Set:	
  6214                           
  6215                           ;MCU_B1.c: 75: TRISA = 0b00000000;;
  6216                           
  6217                           ;incstack = 0
  6218                           ; Regs used in _IO_Set: [wreg+status,2]
  6219  05D5  0021               	movlb	1	; select bank1
  6220  05D6  018C               	clrf	12	;volatile
  6221                           
  6222                           ;MCU_B1.c: 76: TRISB = 0b00000001;;
  6223  05D7  3001               	movlw	1
  6224  05D8  008D               	movwf	13	;volatile
  6225                           
  6226                           ;MCU_B1.c: 77: TRISC = 0b11100110;;
  6227  05D9  30E6               	movlw	230
  6228  05DA  008E               	movwf	14	;volatile
  6229                           
  6230                           ;MCU_B1.c: 78: LATA = 0b00000000;;
  6231  05DB  0022               	movlb	2	; select bank2
  6232  05DC  018C               	clrf	12	;volatile
  6233                           
  6234                           ;MCU_B1.c: 79: LATB = 0b00000000;;
  6235  05DD  018D               	clrf	13	;volatile
  6236                           
  6237                           ;MCU_B1.c: 80: LATC = 0b00000000;;
  6238  05DE  018E               	clrf	14	;volatile
  6239                           
  6240                           ;MCU_B1.c: 81: ANSELA = 0b00000000;;
  6241  05DF  0023               	movlb	3	; select bank3
  6242  05E0  018C               	clrf	12	;volatile
  6243                           
  6244                           ;MCU_B1.c: 82: ANSELB = 0b00000000;;
  6245  05E1  018D               	clrf	13	;volatile
  6246                           
  6247                           ;MCU_B1.c: 83: ANSELC = 0b00000000;;
  6248  05E2  018E               	clrf	14	;volatile
  6249                           
  6250                           ;MCU_B1.c: 84: PORTA = 0b00000000;;
  6251  05E3  0020               	movlb	0	; select bank0
  6252  05E4  018C               	clrf	12	;volatile
  6253                           
  6254                           ;MCU_B1.c: 85: PORTB = 0b00000001;;
  6255  05E5  3001               	movlw	1
  6256  05E6  008D               	movwf	13	;volatile
  6257                           
  6258                           ;MCU_B1.c: 86: PORTC = 0b11100110;;
  6259  05E7  30E6               	movlw	230
  6260  05E8  008E               	movwf	14	;volatile
  6261                           
  6262                           ;MCU_B1.c: 88: WPUB = 0b00000001;;
  6263  05E9  3001               	movlw	1
  6264  05EA  0024               	movlb	4	; select bank4
  6265  05EB  008D               	movwf	13	;volatile
  6266  05EC  0008               	return
  6267  05ED                     __end_of_IO_Set:	
  6268                           
  6269                           	psect	text38
  6270  06CA                     __ptext38:	
  6271 ;; *************** function _Fosc_Set *****************
  6272 ;; Defined at:
  6273 ;;		line 56 in file "../src/MCU_B1.c"
  6274 ;; Parameters:    Size  Location     Type
  6275 ;;		None
  6276 ;; Auto vars:     Size  Location     Type
  6277 ;;		None
  6278 ;; Return value:  Size  Location     Type
  6279 ;;		None               void
  6280 ;; Registers used:
  6281 ;;		wreg
  6282 ;; Tracked objects:
  6283 ;;		On entry : 0/0
  6284 ;;		On exit  : 0/0
  6285 ;;		Unchanged: 0/0
  6286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6287 ;;      Params:         0       0       0       0       0       0       0       0
  6288 ;;      Locals:         0       0       0       0       0       0       0       0
  6289 ;;      Temps:          0       0       0       0       0       0       0       0
  6290 ;;      Totals:         0       0       0       0       0       0       0       0
  6291 ;;Total ram usage:        0 bytes
  6292 ;; Hardware stack levels used:    1
  6293 ;; Hardware stack levels required when called:    2
  6294 ;; This function calls:
  6295 ;;		Nothing
  6296 ;; This function is called by:
  6297 ;;		_Mcu_Initialization
  6298 ;; This function uses a non-reentrant model
  6299 ;;
  6300                           
  6301                           
  6302                           ;psect for function _Fosc_Set
  6303  06CA                     _Fosc_Set:	
  6304                           
  6305                           ;MCU_B1.c: 57: OSCCON = 0x78;
  6306                           
  6307                           ;incstack = 0
  6308                           ; Regs used in _Fosc_Set: [wreg]
  6309  06CA  3078               	movlw	120
  6310  06CB  0021               	movlb	1	; select bank1
  6311  06CC  0099               	movwf	25	;volatile
  6312  06CD  0008               	return
  6313  06CE                     __end_of_Fosc_Set:	
  6314                           
  6315                           	psect	text39
  6316  05ED                     __ptext39:	
  6317 ;; *************** function _Exception_Main *****************
  6318 ;; Defined at:
  6319 ;;		line 499 in file "../src/Main_B1.c"
  6320 ;; Parameters:    Size  Location     Type
  6321 ;;		None
  6322 ;; Auto vars:     Size  Location     Type
  6323 ;;  error           1    6[COMMON] unsigned char 
  6324 ;;  status          1    5[COMMON] unsigned char 
  6325 ;;  count           1    4[COMMON] unsigned char 
  6326 ;;  lights          1    3[COMMON] unsigned char 
  6327 ;; Return value:  Size  Location     Type
  6328 ;;		None               void
  6329 ;; Registers used:
  6330 ;;		wreg, status,2, status,0, pclath, cstack
  6331 ;; Tracked objects:
  6332 ;;		On entry : 0/0
  6333 ;;		On exit  : 0/0
  6334 ;;		Unchanged: 0/0
  6335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6336 ;;      Params:         0       0       0       0       0       0       0       0
  6337 ;;      Locals:         4       0       0       0       0       0       0       0
  6338 ;;      Temps:          1       0       0       0       0       0       0       0
  6339 ;;      Totals:         5       0       0       0       0       0       0       0
  6340 ;;Total ram usage:        5 bytes
  6341 ;; Hardware stack levels used:    1
  6342 ;; Hardware stack levels required when called:    3
  6343 ;; This function calls:
  6344 ;;		_getMain_All_Error_Status
  6345 ;; This function is called by:
  6346 ;;		_main
  6347 ;; This function uses a non-reentrant model
  6348 ;;
  6349                           
  6350                           
  6351                           ;psect for function _Exception_Main
  6352  05ED                     _Exception_Main:	
  6353                           
  6354                           ;Main_B1.c: 500: char error = getMain_All_Error_Status(0);
  6355                           
  6356                           ;incstack = 0
  6357                           ; Regs used in _Exception_Main: [wreg+status,2+status,0+pclath+cstack]
  6358  05ED  3000               	movlw	0
  6359  05EE  3186  26D7  3185   	fcall	_getMain_All_Error_Status
  6360  05F1  00F2               	movwf	??_Exception_Main
  6361  05F2  0872               	movf	??_Exception_Main,w
  6362  05F3  00F6               	movwf	Exception_Main@error
  6363                           
  6364                           ;Main_B1.c: 501: char lights = 0, count = 0;
  6365  05F4  01F3               	clrf	Exception_Main@lights
  6366  05F5  01F4               	clrf	Exception_Main@count
  6367                           
  6368                           ;Main_B1.c: 502: char status = 0;
  6369  05F6  01F5               	clrf	Exception_Main@status
  6370                           
  6371                           ;Main_B1.c: 504: if (myMain.Error_Run == 1) {
  6372  05F7  0020               	movlb	0	; select bank0
  6373  05F8  1DB9               	btfss	_myMain+10,3
  6374  05F9  2DFF               	goto	l3061
  6375                           
  6376                           ;Main_B1.c: 505: if (error == 0) {
  6377  05FA  08F6               	movf	Exception_Main@error,f
  6378  05FB  1D03               	skipz
  6379  05FC  0008               	return
  6380                           
  6381                           ;Main_B1.c: 506: myMain.Error_Run = 0;
  6382  05FD  11B9               	bcf	_myMain+10,3
  6383                           
  6384                           ;Main_B1.c: 522: }
  6385                           ;Main_B1.c: 523: } else {
  6386                           
  6387                           ;Main_B1.c: 511: ;;
  6388  05FE  0008               	return
  6389  05FF                     l3061:	
  6390                           
  6391                           ;Main_B1.c: 524: if (error != 0) {
  6392  05FF  0876               	movf	Exception_Main@error,w
  6393  0600  1903               	btfsc	3,2
  6394  0601  0008               	return
  6395                           
  6396                           ;Main_B1.c: 525: myMain.Error_Run = 1;
  6397  0602  15B9               	bsf	_myMain+10,3
  6398                           
  6399                           ;Main_B1.c: 529: ;;
  6400  0603  0008               	return
  6401  0604                     __end_of_Exception_Main:	
  6402                           
  6403                           	psect	text40
  6404  06D7                     __ptext40:	
  6405 ;; *************** function _getMain_All_Error_Status *****************
  6406 ;; Defined at:
  6407 ;;		line 424 in file "../src/Main_B1.c"
  6408 ;; Parameters:    Size  Location     Type
  6409 ;;  command         1    wreg     unsigned char 
  6410 ;; Auto vars:     Size  Location     Type
  6411 ;;  command         1    0[COMMON] unsigned char 
  6412 ;;  status          1    1[COMMON] unsigned char 
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  1    wreg      unsigned char 
  6415 ;; Registers used:
  6416 ;;		wreg, status,2
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/0
  6419 ;;		On exit  : 0/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6422 ;;      Params:         0       0       0       0       0       0       0       0
  6423 ;;      Locals:         1       0       0       0       0       0       0       0
  6424 ;;      Temps:          0       0       0       0       0       0       0       0
  6425 ;;      Totals:         1       0       0       0       0       0       0       0
  6426 ;;Total ram usage:        1 bytes
  6427 ;; Hardware stack levels used:    1
  6428 ;; Hardware stack levels required when called:    2
  6429 ;; This function calls:
  6430 ;;		Nothing
  6431 ;; This function is called by:
  6432 ;;		_Exception_Main
  6433 ;;		_getRxData
  6434 ;; This function uses a non-reentrant model
  6435 ;;
  6436                           
  6437                           
  6438                           ;psect for function _getMain_All_Error_Status
  6439  06D7                     _getMain_All_Error_Status:	
  6440                           
  6441                           ;Main_B1.c: 425: char status = 0;
  6442                           
  6443                           ;incstack = 0
  6444                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2]
  6445  06D7  01F1               	clrf	getMain_All_Error_Status@status
  6446                           
  6447                           ;Main_B1.c: 455: return status;
  6448  06D8  0871               	movf	getMain_All_Error_Status@status,w
  6449  06D9  0008               	return
  6450  06DA                     __end_of_getMain_All_Error_Status:	
  6451                           
  6452                           	psect	intentry
  6453  0004                     __pintentry:	
  6454 ;; *************** function _ISR *****************
  6455 ;; Defined at:
  6456 ;;		line 116 in file "../src/MCU_B1.c"
  6457 ;; Parameters:    Size  Location     Type
  6458 ;;		None
  6459 ;; Auto vars:     Size  Location     Type
  6460 ;;		None
  6461 ;; Return value:  Size  Location     Type
  6462 ;;		None               void
  6463 ;; Registers used:
  6464 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6465 ;; Tracked objects:
  6466 ;;		On entry : 0/0
  6467 ;;		On exit  : 0/0
  6468 ;;		Unchanged: 0/0
  6469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6470 ;;      Params:         0       0       0       0       0       0       0       0
  6471 ;;      Locals:         0       0       0       0       0       0       0       0
  6472 ;;      Temps:          1       0       0       0       0       0       0       0
  6473 ;;      Totals:         1       0       0       0       0       0       0       0
  6474 ;;Total ram usage:        1 bytes
  6475 ;; Hardware stack levels used:    1
  6476 ;; Hardware stack levels required when called:    1
  6477 ;; This function calls:
  6478 ;;		_TMR1_ISR
  6479 ;; This function is called by:
  6480 ;;		Interrupt level 1
  6481 ;; This function uses a non-reentrant model
  6482 ;;
  6483                           
  6484  0004                     _ISR:	
  6485                           
  6486                           ;incstack = 0
  6487                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6488  0004  147E               	bsf	126,0	;set compiler interrupt flag
  6489  0005  3180               	pagesel	$
  6490  0006  0020               	movlb	0	; select bank0
  6491  0007  087F               	movf	127,w
  6492  0008  00F0               	movwf	??_ISR
  6493                           
  6494                           ;MCU_B1.c: 125: if (TMR1IE == 1 && TMR1IF == 1) {
  6495  0009  0021               	movlb	1	; select bank1
  6496  000A  1C11               	btfss	17,0	;volatile
  6497  000B  2811               	goto	i1l542
  6498  000C  0020               	movlb	0	; select bank0
  6499  000D  1C11               	btfss	17,0	;volatile
  6500  000E  2811               	goto	i1l542
  6501                           
  6502                           ;MCU_B1.c: 126: TMR1_ISR();
  6503  000F  3185  25A3         	fcall	_TMR1_ISR
  6504  0011                     i1l542:	
  6505                           ;MCU_B1.c: 127: }
  6506                           ;MCU_B1.c: 148: return;
  6507                           
  6508  0011  0870               	movf	??_ISR,w
  6509  0012  0020               	movlb	0	; select bank0
  6510  0013  00FF               	movwf	127
  6511  0014  107E               	bcf	126,0	;clear compiler interrupt flag
  6512  0015  0009               	retfie
  6513  0016                     __end_of_ISR:	
  6514                           
  6515                           	psect	text42
  6516  05A3                     __ptext42:	
  6517 ;; *************** function _TMR1_ISR *****************
  6518 ;; Defined at:
  6519 ;;		line 236 in file "../src/MCU_B1.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;		None
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;		None
  6524 ;; Return value:  Size  Location     Type
  6525 ;;		None               void
  6526 ;; Registers used:
  6527 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6533 ;;      Params:         0       0       0       0       0       0       0       0
  6534 ;;      Locals:         0       0       0       0       0       0       0       0
  6535 ;;      Temps:          0       0       0       0       0       0       0       0
  6536 ;;      Totals:         0       0       0       0       0       0       0       0
  6537 ;;Total ram usage:        0 bytes
  6538 ;; Hardware stack levels used:    1
  6539 ;; This function calls:
  6540 ;;		Nothing
  6541 ;; This function is called by:
  6542 ;;		_ISR
  6543 ;; This function uses a non-reentrant model
  6544 ;;
  6545                           
  6546                           
  6547                           ;psect for function _TMR1_ISR
  6548  05A3                     _TMR1_ISR:	
  6549                           
  6550                           ;MCU_B1.c: 268: Timer1.Count++;
  6551                           
  6552                           ;incstack = 0
  6553                           ; Regs used in _TMR1_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  6554  05A3  3001               	movlw	1
  6555  05A4  0020               	movlb	0	; select bank0
  6556  05A5  07C2               	addwf	_Timer1+1,f
  6557  05A6  3000               	movlw	0
  6558  05A7  3DC3               	addwfc	_Timer1+2,f
  6559                           
  6560                           ;MCU_B1.c: 269: if (Timer1.Count == (int)(20*10)) {
  6561  05A8  3001               	movlw	1
  6562  05A9  3E41               	addlw	_Timer1& (0+255)
  6563  05AA  0086               	movwf	6
  6564  05AB  0187               	clrf	7
  6565  05AC  3F40               	moviw [0]fsr1
  6566  05AD  3AC8               	xorlw	200
  6567  05AE  1D03               	skipz
  6568  05AF  2DB2               	goto	u187_25
  6569  05B0  3F41               	moviw [1]fsr1
  6570  05B1  3A00               	xorlw	0
  6571  05B2                     u187_25:	
  6572  05B2  1D03               	skipz
  6573  05B3  2DB7               	goto	i1l2971
  6574                           
  6575                           ;MCU_B1.c: 270: Timer1.Count = 0;
  6576  05B4  01C2               	clrf	_Timer1+1
  6577  05B5  01C3               	clrf	_Timer1+2
  6578                           
  6579                           ;MCU_B1.c: 271: Timer1.Timeout = 1;
  6580  05B6  1441               	bsf	_Timer1,0
  6581  05B7                     i1l2971:	
  6582                           
  6583                           ;MCU_B1.c: 272: }
  6584                           ;MCU_B1.c: 274: TMR1H = (int)((65536-1480)/256);
  6585  05B7  30FA               	movlw	250
  6586  05B8  0097               	movwf	23	;volatile
  6587                           
  6588                           ;MCU_B1.c: 275: TMR1L = (int)((65536-1480)%256);
  6589  05B9  3038               	movlw	56
  6590  05BA  0096               	movwf	22	;volatile
  6591                           
  6592                           ;MCU_B1.c: 276: TMR1IF = 0;
  6593  05BB  1011               	bcf	17,0	;volatile
  6594  05BC  0008               	return
  6595  05BD                     __end_of_TMR1_ISR:	
  6596  007E                     btemp	set	126	;btemp
  6597  007E                     pic14e$flags	set	126
  6598  007E                     wtemp	set	126
  6599  007E                     wtemp0	set	126
  6600  0080                     wtemp1	set	128
  6601  0082                     wtemp2	set	130
  6602  0084                     wtemp3	set	132
  6603  0086                     wtemp4	set	134
  6604  0088                     wtemp5	set	136
  6605  007F                     wtemp6	set	127
  6606  007E                     ttemp	set	126
  6607  007E                     ttemp0	set	126
  6608  0081                     ttemp1	set	129
  6609  0084                     ttemp2	set	132
  6610  0087                     ttemp3	set	135
  6611  007F                     ttemp4	set	127
  6612  007E                     ltemp	set	126
  6613  007E                     ltemp0	set	126
  6614  0082                     ltemp1	set	130
  6615  0086                     ltemp2	set	134
  6616  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    102
    Data        32
    BSS         78
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80      6      55
    BANK1            80      0      62
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), _product(BANK1[32]), 


Critical Paths under _main in COMMON

    _uartC_timer_strat->___awdiv
    _RF_Main->_setRF_Main
    _getRxData->_setLog_Code
    _setLog_Code->_setProductData
    _setControl_Lights_Table->_setCmd_Status
    _setControl_Lights_Table->_setProductData
    _RF_RxDisable->_CC2500_WriteCommand
    _CC2500_TxData->_CC2500_WriteCommand
    _CC2500_PowerOnInitial->_CC2500_InitSetREG
    _CC2500_SIDLEMode->_CC2500_WriteCommand
    _CC2500_PowerRST->_DelayTime_1us
    _CC2500_InitSetREG->_CC2500_WriteREG
    _CC2500_InitPATable->_CC2500_WriteREG
    _CC2500_WriteREG->_CC2500_WriteByte
    _CC2500_FrequencyCabr->_DelayTime_1us
    _CC2500_ClearTXFIFO->_CC2500_WriteCommand
    _CC2500_ClearRXFIFO->_CC2500_WriteCommand
    _CC2500_WriteCommand->_CC2500_WriteByte
    _RF_Initialization->_setRF_Initialization
    _Exception_Main->_getMain_All_Error_Status

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _myUARTtoRF_Main->_uartC_timer_strat

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4    6477
                                              2 BANK0      4     0      4
              _CC2500_PowerOnInitial
                     _Exception_Main
                 _Mcu_Initialization
                  _RF_Initialization
                            _RF_Main
              _myMain_Initialization
          _myUARTtoRF_Initialization
                    _myUARTtoRF_Main
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _myUARTtoRF_Main                                      0     0      0     536
                  _uartC_timer_strat
 ---------------------------------------------------------------------------------
 (2) _uartC_timer_strat                                    2     0      2     536
                                              0 BANK0      2     0      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     428
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _myUARTtoRF_Initialization                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _RF_Main                                              0     0      0    4193
                         _setRF_Main
 ---------------------------------------------------------------------------------
 (2) _setRF_Main                                           1     1      0    4193
                                             10 COMMON     1     1      0
              _CC2500_PowerOnInitial
                      _CC2500_TxData
                _CC2500_WriteCommand
                       _RF_RxDisable
                            ___lwdiv
                          _getRxData
 ---------------------------------------------------------------------------------
 (3) _getRxData                                            2     2      0    1673
                                              5 COMMON     2     2      0
           _getMain_All_Error_Status
            _setControl_Lights_Table
                        _setLog_Code
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setLog_Code                                          1     1      0     748
                                              4 COMMON     1     1      0
                     _setProductData
 ---------------------------------------------------------------------------------
 (4) _setControl_Lights_Table                              0     0      0     879
           _getMain_All_LightsStatus
                      _setCmd_Status
                     _setProductData
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setTxData                                            2     2      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _setProductData                                       3     2      1     748
                                              1 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (5) _setCmd_Status                                        3     2      1     108
                                              1 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (5) _getMain_All_LightsStatus                             1     1      0      23
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     546
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) _RF_RxDisable                                         0     0      0      68
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (3) _CC2500_TxData                                        2     2      0     160
                                              5 COMMON     2     2      0
                   _CC2500_WriteByte
                _CC2500_WriteCommand
                 _RF_Timeout_Counter
               _setRF_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _CC2500_PowerOnInitial                                0     0      0    1677
                 _CC2500_ClearRXFIFO
                 _CC2500_ClearTXFIFO
               _CC2500_FrequencyCabr
                 _CC2500_InitPATable
                  _CC2500_InitSetREG
                    _CC2500_PowerRST
                   _CC2500_SIDLEMode
 ---------------------------------------------------------------------------------
 (4) _CC2500_SIDLEMode                                     0     0      0      68
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (4) _CC2500_PowerRST                                      1     1      0     394
                                              7 COMMON     1     1      0
                   _CC2500_WriteByte
                      _DelayTime_1us
                 _RF_Timeout_Counter
               _setRF_TimeoutCleared
 ---------------------------------------------------------------------------------
 (4) _CC2500_InitSetREG                                    4     4      0     354
                                              6 COMMON     4     4      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (4) _CC2500_InitPATable                                   3     3      0     309
                                              6 COMMON     3     3      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (5) _CC2500_WriteREG                                      3     2      1     218
                                              3 COMMON     3     2      1
                   _CC2500_WriteByte
                 _RF_Timeout_Counter
               _setRF_TimeoutCleared
 ---------------------------------------------------------------------------------
 (4) _CC2500_FrequencyCabr                                 0     0      0     416
                _CC2500_WriteCommand
                      _DelayTime_1us
 ---------------------------------------------------------------------------------
 (5) _DelayTime_1us                                        6     4      2     348
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (4) _CC2500_ClearTXFIFO                                   0     0      0      68
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (4) _CC2500_ClearRXFIFO                                   0     0      0      68
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (4) _CC2500_WriteCommand                                  2     2      0      68
                                              3 COMMON     2     2      0
                   _CC2500_WriteByte
                 _RF_Timeout_Counter
               _setRF_TimeoutCleared
 ---------------------------------------------------------------------------------
 (5) _setRF_TimeoutCleared                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _RF_Timeout_Counter                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _CC2500_WriteByte                                     2     2      0      46
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _RF_Initialization                                    0     0      0       0
               _setRF_Initialization
 ---------------------------------------------------------------------------------
 (2) _setRF_Initialization                                 1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                           _Fosc_Set
                             _IO_Set
                           _TMR1_Set
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Exception_Main                                       5     5      0      71
                                              2 COMMON     5     5      0
           _getMain_All_Error_Status
 ---------------------------------------------------------------------------------
 (4) _getMain_All_Error_Status                             2     2      0      23
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  1     1      0       0
                                              0 COMMON     1     1      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CC2500_PowerOnInitial
     _CC2500_ClearRXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
     _CC2500_ClearTXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
     _CC2500_FrequencyCabr
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
       _DelayTime_1us
     _CC2500_InitPATable
       _CC2500_WriteREG
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
     _CC2500_InitSetREG
       _CC2500_WriteREG
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
     _CC2500_PowerRST
       _CC2500_WriteByte
       _DelayTime_1us
       _RF_Timeout_Counter
       _setRF_TimeoutCleared
     _CC2500_SIDLEMode
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
   _Exception_Main
     _getMain_All_Error_Status
   _Mcu_Initialization
     _Fosc_Set
     _IO_Set
     _TMR1_Set
   _RF_Initialization
     _setRF_Initialization
   _RF_Main
     _setRF_Main
       _CC2500_PowerOnInitial
         _CC2500_ClearRXFIFO
           _CC2500_WriteCommand
             _CC2500_WriteByte
             _RF_Timeout_Counter
             _setRF_TimeoutCleared
         _CC2500_ClearTXFIFO
           _CC2500_WriteCommand
             _CC2500_WriteByte
             _RF_Timeout_Counter
             _setRF_TimeoutCleared
         _CC2500_FrequencyCabr
           _CC2500_WriteCommand
             _CC2500_WriteByte
             _RF_Timeout_Counter
             _setRF_TimeoutCleared
           _DelayTime_1us
         _CC2500_InitPATable
           _CC2500_WriteREG
             _CC2500_WriteByte
             _RF_Timeout_Counter
             _setRF_TimeoutCleared
         _CC2500_InitSetREG
           _CC2500_WriteREG
             _CC2500_WriteByte
             _RF_Timeout_Counter
             _setRF_TimeoutCleared
         _CC2500_PowerRST
           _CC2500_WriteByte
           _DelayTime_1us
           _RF_Timeout_Counter
           _setRF_TimeoutCleared
         _CC2500_SIDLEMode
           _CC2500_WriteCommand
             _CC2500_WriteByte
             _RF_Timeout_Counter
             _setRF_TimeoutCleared
       _CC2500_TxData
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
           _RF_Timeout_Counter
           _setRF_TimeoutCleared
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
       _RF_RxDisable
         _CC2500_WriteCommand
           _CC2500_WriteByte
           _RF_Timeout_Counter
           _setRF_TimeoutCleared
       ___lwdiv
       _getRxData
         _getMain_All_Error_Status
         _setControl_Lights_Table
           _getMain_All_LightsStatus
           _setCmd_Status
           _setProductData
           _setTxData
         _setLog_Code
           _setProductData
         _setTxData
   _myMain_Initialization
   _myUARTtoRF_Initialization
   _myUARTtoRF_Main
     _uartC_timer_strat
       ___awdiv
   _my_MainTimer

 _ISR (ROOT)
   _TMR1_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      82       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      6      37       6       68.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      3E       8       77.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      82      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Sat Mar 21 16:49:43 2015

                        __CFG_CP$ON 0000               __end_of_setCmd_Status 0619  
           __end_of_CC2500_WriteREG 0569                        ___awdiv@sign 0077  
                                _u1 003C                                 l210 064D  
                               l211 064E                                 l142 02A2  
                               l254 04E5                                 l631 0464  
                               l615 0515                                 l668 0618  
                               l942 00C9                                 l946 0041  
                               l947 0082                                 l972 065C  
                               l985 0322                                 _GIE 005F  
                               _CRC 0046                                 _RA0 0060  
                               _RA1 0061                                 _RB0 0068  
                               _RA2 0062                                 _RC0 0070  
                               _RC1 0071                                 _RC3 0073  
                               _RC4 0074                                 _RC5 0075  
                               _RF1 0020                                 _ISR 0004  
                               _Cmd 0047            __end_of_CC2500_WriteByte 0657  
                               wreg 0009                                ?_ISR 0070  
                              l1008 03BF                                l1250 04A9  
                              l3003 0446                                l3061 05FF  
                              l2501 0559                                l2601 03FB  
                              l2523 0613                                l2701 02A8  
                              l2711 02B7                                l2703 02AB  
                              l2519 0606                                l2473 05CD  
                              l3249 04B3                                l2467 05C5  
                              l2715 02BC                                l2707 02B0  
                              l2469 05C8                                l2709 02B4  
                              l2813 0370                                l2805 035F  
                              l2487 04F6                                l2495 0551  
                              l2591 03EC                                l2663 0384  
                              l2903 008D                                l2489 0501  
                              l2497 0554                                l2585 03E4  
                              l2665 039B                                l2761 0300  
                              l2745 02DF                                l2809 0368  
                              l2595 03F3                                l2587 03E7  
                              l2683 027D                                l2835 0427  
                              l2827 0409                                l2659 0378  
                              l2923 00C2                                l2597 03F6  
                              l2677 0275                                l2829 0415  
                              l2669 03B6                                l2757 02F7  
                              l2909 00AA                                l2781 032E  
                              l2679 0278                                l2839 0430  
                              l2697 028C                                l2891 007D  
                              l2787 0339                                l2797 0341  
                              l2799 034D               _myMain_Initialization 0666  
                              u1085 063D                                u1165 04EB  
                              _LATA 010C                                _LATB 010D  
                              _LATC 010E                                u2170 048E  
                              u2165 0481                                u1625 040C  
                              u1545 0344                                u1645 0416  
                              u1565 034E                                u1655 0420  
                              u1735 005D                                u1575 0358  
                              u1665 0428                                u1585 0360  
                              u1915 045C                                u1765 00A6  
                              _PEIE 005E                                _RSSI 0049  
                              _WPUB 020D                                _main 0506  
                   __end_of_RF_Main 06D1                                fsr0h 0005  
                              fsr1h 0007                                fsr0l 0004  
                              indf0 0000                                indf1 0001  
                              fsr1l 0006                                btemp 007E  
        ?_myUARTtoRF_Initialization 0070                                ltemp 007E  
     __size_of_setRF_Initialization 000A                                start 0016  
                              ttemp 007E                                wtemp 007E  
                             ??_ISR 0070                   ??_myUARTtoRF_Main 007A  
                             ?_main 0052                     __end_of___awdiv 0377  
                     __CFG_WDTE$OFF 0000                     ___awdiv@divisor 0071  
                             _T1CON 0018                     __end_of___lwdiv 0437  
                             i1l542 0011                     ___awdiv@counter 0076  
     __size_of_CC2500_FrequencyCabr 000B                               _TMR1H 0017  
                             _TMR1L 0016                               _PORTA 000C  
                             _PORTB 000D                               _PORTC 000E  
                             _TRISA 008C                               _TRISB 008D  
                             _TRISC 008E                       __CFG_WRT$BOOT 0000  
                             _Light 0048                    __end_of_TMR1_ISR 05BD  
           __size_of_setProductData 000A        __size_of_CC2500_WriteCommand 0018  
                  __end_of_TMR1_Set 067F         __size_of_CC2500_ClearRXFIFO 0004  
       __size_of_CC2500_ClearTXFIFO 0004                      __pbitbssCOMMON 03D8  
                    __CFG_BOREN$OFF 0000                               ltemp0 007E  
                             ltemp1 0082                               ltemp2 0086  
                             ltemp3 0080                               ttemp0 007E  
                             ttemp1 0081                               ttemp2 0084  
                             ttemp3 0087                               ttemp4 007F  
                             status 0003                               wtemp0 007E  
                             wtemp1 0080                               wtemp2 0082  
                             wtemp3 0084                               wtemp4 0086  
                             wtemp5 0088                               wtemp6 007F  
                 ?_CC2500_SIDLEMode 0070          __size_of_RF_Initialization 0003  
                ??_CC2500_SIDLEMode 0075                     __initialization 0018  
                  ?_CC2500_PowerRST 0070                        __end_of_main 0529  
                  __end_of_Fosc_Set 06CE      getMain_All_LightsStatus@status 0071  
                    _Exception_Main 05ED                    ?_CC2500_WriteREG 0073  
                            ??_main 007B                        ?_setLog_Code 0070  
           _setControl_Lights_Table 0377                          _Receive_OK 03D8  
          _getMain_All_LightsStatus 06D1                  _RF_Timeout_Counter 062E  
            ?_myMain_Initialization 0070                           ??_RF_Main 007B  
                  ___awdiv@dividend 0073                              _ANSELA 018C  
                            _ANSELB 018D                              _ANSELC 018E  
          _getMain_All_Error_Status 06D7                              i1l2971 05B7  
                            u187_25 05B2                 ?_RF_Timeout_Counter 0070  
                            _OSCCON 0099                              _TMR1IE 0488  
                            _TMR1IF 0088                              _IO_Set 05D5  
                DelayTime_1us@count 0071      __size_of_CC2500_PowerOnInitial 0015  
     __end_of_CC2500_PowerOnInitial 062E       __size_of_setRF_TimeoutCleared 0004  
        __end_of_Mcu_Initialization 06A7                              _Timer1 0041  
            __end_of_Exception_Main 0604                Exception_Main@lights 0073  
                         ??___awdiv 0075                           ??___lwdiv 0075  
                            _r_data 004E                Exception_Main@status 0075  
                            _s_data 004F                              _myMain 002F  
              ??_RF_Timeout_Counter 0071                    ___awdiv@quotient 0078  
                 _uartC_timer_strat 0466                  ?_uartC_timer_strat 0050  
       __size_of_CC2500_InitPATable 001D                 CC2500_TxData@loop_e 0076  
  __end_of_CC2500_registers_address 022F             __end_of__initialization 0034  
               ??_uartC_timer_strat 007A                       ?_my_MainTimer 0070  
                    __pcstackCOMMON 0070                     ?_Exception_Main 0070  
                      __pidataBANK1 0529                           ?_TMR1_ISR 0070  
                         ?_TMR1_Set 0070           ??_setControl_Lights_Table 0074  
         __end_of_uartC_timer_strat 0491                  __size_of_getRxData 005C  
                 ?_CC2500_WriteByte 0070                      _setProductData 068A  
                ??_CC2500_WriteByte 0071                          __pbssBANK0 0020  
                        __pbssBANK1 00C0                           ?_Fosc_Set 0070  
                           ?_IO_Set 0070                      ??_my_MainTimer 0071  
                   __CFG_VCAPEN$OFF 0000                     _myUARTtoRF_Main 0491  
                        __pnvCOMMON 007C                      DelayTime_1us@i 0073  
                    DelayTime_1us@j 0075         ??_myUARTtoRF_Initialization 0071  
                        __pmaintext 0506                 _CC2500_WriteCommand 05BD  
                        ??_TMR1_ISR 0070                          ??_TMR1_Set 0071  
                        __pintentry 0004                  __size_of_setTxData 006C  
            __size_of_DelayTime_1us 0025        __end_of_setRF_Initialization 069E  
            __end_of_setProductData 0694                __size_of_setLog_Code 001D  
              ?_CC2500_WriteCommand 0070              __size_of_CC2500_TxData 0062  
                           _RF_Data 00C0                             _RF_Main 06CE  
   __end_of_setControl_Lights_Table 03C0                     setRF_Main@error 007A  
            __size_of_setCmd_Status 0015                          ??_Fosc_Set 0071  
      __end_of_CC2500_FrequencyCabr 068A                     __size_of_IO_Set 0018  
               setCmd_Status@number 0073                   __end_of_getRxData 0324  
          _CC2500_registers_address 0200                 setProductData@value 0071  
                           ___awdiv 0324                             ___lwdiv 0401  
        ??_getMain_All_LightsStatus 0071                             __ptext1 0437  
                           __ptext2 0491                             __ptext3 0466  
                           __ptext4 0324                             __ptext5 06A7  
                           __ptext6 0666                             __ptext7 06CE  
                           __ptext8 0038                             __ptext9 02C8  
         __size_of_CC2500_SIDLEMode 0004           _myUARTtoRF_Initialization 06A7  
                      __size_of_ISR 0012          ??_getMain_All_Error_Status 0071  
        __size_of_uartC_timer_strat 002B                     ?_setProductData 0071  
                        _setRF_Main 0038             ??_myMain_Initialization 0071  
             ??_CC2500_WriteCommand 0073          __end_of_CC2500_ClearRXFIFO 06C6  
        __end_of_CC2500_ClearTXFIFO 06C2                             _product 007C  
           __end_of_myUARTtoRF_Main 04B9                             clrloop0 06AF  
              end_of_initialization 0034                   _CC2500_InitSetREG 04B9  
                     _DelayTime_1us 04E1                   __end_of_setTxData 0139  
                           init_ram 06B4                  ?_CC2500_InitSetREG 0070  
                           initloop 06B5            uartC_timer_strat@time_ms 0050  
                     _CC2500_TxData 0266                 ??_CC2500_InitSetREG 0076  
                      __pstringtext 0200                       _setCmd_Status 0604  
           CC2500_InitSetREG@loop_c 0079                  _Mcu_Initialization 069E  
          __size_of_CC2500_PowerRST 0041        __end_of_setRF_TimeoutCleared 06CA  
              __end_of_my_MainTimer 0466                    __CFG_FOSC$INTOSC 0000  
          __size_of_CC2500_WriteREG 0020           __end_of_CC2500_InitSetREG 04E1  
               ?_Mcu_Initialization 0070                      ?_DelayTime_1us 0071  
                     ?_RF_RxDisable 0070     getMain_All_Error_Status@command 0070  
                  ??_Exception_Main 0072                      __end_of_IO_Set 05ED  
              _setRF_Initialization 0694                      ?_CC2500_TxData 0070  
             _CC2500_PowerOnInitial 0619                ??_Mcu_Initialization 0071  
                    ?_setCmd_Status 0071         __size_of_RF_Timeout_Counter 0015  
                 __size_of_TMR1_ISR 001A                   __size_of_TMR1_Set 000C  
              _CC2500_FrequencyCabr 067F                         ?_setRF_Main 0070  
               start_initialization 0018                         __end_of_ISR 0016  
        __end_of_CC2500_InitPATable 05A3                    ?_myUARTtoRF_Main 0070  
                    ??_RF_RxDisable 0075                            ??_IO_Set 0071  
             ?_setRF_Initialization 0070                   __size_of_Fosc_Set 0004  
         __size_of_CC2500_WriteByte 0014                           _Rx_Length 004A  
             setProductData@address 0073                 Exception_Main@count 0074  
               Exception_Main@error 0076    __end_of_getMain_All_LightsStatus 06D4  
                         _Tx_Length 0056                         __pdataBANK1 00A0  
  __end_of_getMain_All_Error_Status 06DA                    _CC2500_SIDLEMode 06BA  
             ?_CC2500_FrequencyCabr 0070                           ___latbits 0002  
                     __pcstackBANK0 0050                     ??_DelayTime_1us 0073  
        __size_of_CC2500_InitSetREG 0028                   ??_CC2500_PowerRST 0077  
                          ?_RF_Main 0070  __size_of_myUARTtoRF_Initialization 0007  
                 ??_CC2500_WriteREG 0074               CC2500_WriteREG@w_addr 0075  
                   ??_CC2500_TxData 0075                           __pnvBANK0 0056  
                    getRxData@error 0076                _setRF_TimeoutCleared 06C6  
            ?_CC2500_PowerOnInitial 0070                 __size_of_setRF_Main 0095  
                  ___lwdiv@dividend 0073                     ??_setCmd_Status 0072  
          ?_setControl_Lights_Table 0070                            ?___awdiv 0071  
                         _getRxData 02C8               __size_of_my_MainTimer 002F  
                          ?___lwdiv 0071                    ??_setProductData 0072  
                     ??_setLog_Code 0074              CC2500_WriteByte@loop_a 0072  
                         _r_address 004D      __size_of_myMain_Initialization 000D  
      __end_of_CC2500_patable_vaule 0266       __end_of_myMain_Initialization 0673  
                  ___lwdiv@quotient 0076              ??_setRF_Initialization 0071  
 __end_of_myUARTtoRF_Initialization 06AE                   _CC2500_rfSettings 022F  
                         clear_ram0 06AE            CC2500_InitPATable@loop_d 0078  
             ?_setRF_TimeoutCleared 0070                        _my_MainTimer 0437  
                         _setTxData 00CD                  _CC2500_ClearRXFIFO 06C2  
                _CC2500_ClearTXFIFO 06BE                          ?_getRxData 0070  
                          _TMR1_ISR 05A3              CC2500_InitSetREG@temp1 0077  
            CC2500_InitSetREG@temp2 0078                            _TMR1_Set 0673  
               ?_CC2500_ClearRXFIFO 0070                 ?_CC2500_ClearTXFIFO 0070  
                          _RF_Count 0044                __end_of_RF_RxDisable 0666  
       __end_of_CC2500_WriteCommand 05D5              ??_CC2500_FrequencyCabr 0077  
    getMain_All_Error_Status@status 0071                 __end_of_setLog_Code 0586  
 __size_of_getMain_All_LightsStatus 0003                ??_CC2500_ClearRXFIFO 0075  
         ?_getMain_All_LightsStatus 0070                ??_CC2500_ClearTXFIFO 0075  
         __end_of_CC2500_rfSettings 025E                    __size_of_RF_Main 0003  
                          _Fosc_Set 06CA   __size_of_getMain_All_Error_Status 0003  
         ?_getMain_All_Error_Status 0070                          ?_setTxData 0070  
                  _CC2500_WriteByte 0643                            _SwDetect 004C  
                  setCmd_Status@cmd 0071                    __size_of___awdiv 0053  
                  __size_of___lwdiv 0036                        ??_setRF_Main 007A  
              CC2500_WriteREG@value 0073                     ___lwdiv@divisor 0071  
                   ___lwdiv@counter 0078                            __ptext10 0569  
                          __ptext11 0377                            __ptext20 06BA  
                          __ptext12 00CD                            __ptext21 03C0  
                          __ptext13 068A                            __ptext30 06C6  
                          __ptext22 04B9                            __ptext14 0604  
                          __ptext31 062E                            __ptext23 0586  
                          __ptext15 06D1                            __ptext40 06D7  
                          __ptext32 0643                            __ptext24 0549  
                          __ptext16 0401                            __ptext33 06D4  
                          __ptext25 067F                            __ptext17 0657  
                          __ptext42 05A3                            __ptext34 0694  
                          __ptext26 04E1                            __ptext18 0266  
                          __ptext35 069E                            __ptext27 06BE  
                          __ptext19 0619                            __ptext36 0673  
                          __ptext28 06C2                            __ptext37 05D5  
                          __ptext29 05BD                            __ptext38 06CA  
                          __ptext39 05ED                            __product 00A0  
            ??_setRF_TimeoutCleared 0071                       __size_of_main 0023  
          __end_of_CC2500_SIDLEMode 06BE          CC2500_WriteCommand@command 0074  
                _CC2500_InitPATable 0586                  __end_of_setRF_Main 00CD  
       __size_of_Mcu_Initialization 0009                _CC2500_patable_vaule 025E  
                       ??_getRxData 0075          __end_of_RF_Timeout_Counter 0643  
                          main@argc 0052                            main@argv 0054  
               ?_CC2500_InitPATable 0070                     _CC2500_PowerRST 03C0  
                       _setLog_Code 0569                     _CC2500_WriteREG 0549  
                     _Transceive_OK 03D9                         pic14e$flags 007E  
                          intlevel1 0000                ??_CC2500_InitPATable 0076  
           ??_CC2500_PowerOnInitial 007A                         ??_setTxData 0071  
          __size_of_myUARTtoRF_Main 0028              CC2500_InitPATable@temp 0077  
             __size_of_RF_RxDisable 000F                   _RF_Initialization 06D4  
                ?_RF_Initialization 0070                          _SPI0Buffer 004B  
           __size_of_Exception_Main 0017                 ??_RF_Initialization 0072  
  __size_of_setControl_Lights_Table 0049               __end_of_DelayTime_1us 0506  
                      _RF_RxDisable 0657           __end_of_RF_Initialization 06D7  
             __end_of_CC2500_TxData 02C8             __end_of_CC2500_PowerRST 0401  
