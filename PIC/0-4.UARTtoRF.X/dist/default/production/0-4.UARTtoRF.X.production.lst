

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Dec 03 16:29:24 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1516
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,inline,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,inline,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,inline,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,inline,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    57                           	psect	intentry,global,class=CODE,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    61                           	dabs	1,0x7E,2
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0095                     	;# 
    96  0096                     	;# 
    97  0097                     	;# 
    98  0099                     	;# 
    99  009A                     	;# 
   100  009B                     	;# 
   101  009B                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  010C                     	;# 
   106  010D                     	;# 
   107  010E                     	;# 
   108  0116                     	;# 
   109  0117                     	;# 
   110  011D                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113  018E                     	;# 
   114  0191                     	;# 
   115  0191                     	;# 
   116  0192                     	;# 
   117  0193                     	;# 
   118  0193                     	;# 
   119  0194                     	;# 
   120  0195                     	;# 
   121  0196                     	;# 
   122  0197                     	;# 
   123  0199                     	;# 
   124  019A                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019B                     	;# 
   129  019C                     	;# 
   130  019C                     	;# 
   131  019D                     	;# 
   132  019E                     	;# 
   133  019F                     	;# 
   134  020D                     	;# 
   135  0210                     	;# 
   136  0211                     	;# 
   137  0211                     	;# 
   138  0212                     	;# 
   139  0212                     	;# 
   140  0213                     	;# 
   141  0213                     	;# 
   142  0214                     	;# 
   143  0214                     	;# 
   144  0215                     	;# 
   145  0215                     	;# 
   146  0215                     	;# 
   147  0216                     	;# 
   148  0216                     	;# 
   149  0217                     	;# 
   150  0217                     	;# 
   151  0291                     	;# 
   152  0291                     	;# 
   153  0292                     	;# 
   154  0293                     	;# 
   155  0298                     	;# 
   156  0298                     	;# 
   157  0299                     	;# 
   158  029A                     	;# 
   159  0394                     	;# 
   160  0395                     	;# 
   161  0396                     	;# 
   162  0FE4                     	;# 
   163  0FE5                     	;# 
   164  0FE6                     	;# 
   165  0FE7                     	;# 
   166  0FE8                     	;# 
   167  0FE9                     	;# 
   168  0FEA                     	;# 
   169  0FEB                     	;# 
   170  0FED                     	;# 
   171  0FEE                     	;# 
   172  0FEF                     	;# 
   173  0000                     	;# 
   174  0001                     	;# 
   175  0002                     	;# 
   176  0003                     	;# 
   177  0004                     	;# 
   178  0005                     	;# 
   179  0006                     	;# 
   180  0007                     	;# 
   181  0008                     	;# 
   182  0009                     	;# 
   183  000A                     	;# 
   184  000B                     	;# 
   185  000C                     	;# 
   186  000D                     	;# 
   187  000E                     	;# 
   188  0010                     	;# 
   189  0011                     	;# 
   190  0012                     	;# 
   191  0015                     	;# 
   192  0016                     	;# 
   193  0016                     	;# 
   194  0017                     	;# 
   195  0018                     	;# 
   196  0019                     	;# 
   197  001A                     	;# 
   198  001B                     	;# 
   199  001C                     	;# 
   200  008C                     	;# 
   201  008D                     	;# 
   202  008E                     	;# 
   203  0090                     	;# 
   204  0091                     	;# 
   205  0092                     	;# 
   206  0095                     	;# 
   207  0096                     	;# 
   208  0097                     	;# 
   209  0099                     	;# 
   210  009A                     	;# 
   211  009B                     	;# 
   212  009B                     	;# 
   213  009C                     	;# 
   214  009D                     	;# 
   215  009E                     	;# 
   216  010C                     	;# 
   217  010D                     	;# 
   218  010E                     	;# 
   219  0116                     	;# 
   220  0117                     	;# 
   221  011D                     	;# 
   222  018C                     	;# 
   223  018D                     	;# 
   224  018E                     	;# 
   225  0191                     	;# 
   226  0191                     	;# 
   227  0192                     	;# 
   228  0193                     	;# 
   229  0193                     	;# 
   230  0194                     	;# 
   231  0195                     	;# 
   232  0196                     	;# 
   233  0197                     	;# 
   234  0199                     	;# 
   235  019A                     	;# 
   236  019B                     	;# 
   237  019B                     	;# 
   238  019B                     	;# 
   239  019B                     	;# 
   240  019C                     	;# 
   241  019C                     	;# 
   242  019D                     	;# 
   243  019E                     	;# 
   244  019F                     	;# 
   245  020D                     	;# 
   246  0210                     	;# 
   247  0211                     	;# 
   248  0211                     	;# 
   249  0212                     	;# 
   250  0212                     	;# 
   251  0213                     	;# 
   252  0213                     	;# 
   253  0214                     	;# 
   254  0214                     	;# 
   255  0215                     	;# 
   256  0215                     	;# 
   257  0215                     	;# 
   258  0216                     	;# 
   259  0216                     	;# 
   260  0217                     	;# 
   261  0217                     	;# 
   262  0291                     	;# 
   263  0291                     	;# 
   264  0292                     	;# 
   265  0293                     	;# 
   266  0298                     	;# 
   267  0298                     	;# 
   268  0299                     	;# 
   269  029A                     	;# 
   270  0394                     	;# 
   271  0395                     	;# 
   272  0396                     	;# 
   273  0FE4                     	;# 
   274  0FE5                     	;# 
   275  0FE6                     	;# 
   276  0FE7                     	;# 
   277  0FE8                     	;# 
   278  0FE9                     	;# 
   279  0FEA                     	;# 
   280  0FEB                     	;# 
   281  0FED                     	;# 
   282  0FEE                     	;# 
   283  0FEF                     	;# 
   284  0000                     	;# 
   285  0001                     	;# 
   286  0002                     	;# 
   287  0003                     	;# 
   288  0004                     	;# 
   289  0005                     	;# 
   290  0006                     	;# 
   291  0007                     	;# 
   292  0008                     	;# 
   293  0009                     	;# 
   294  000A                     	;# 
   295  000B                     	;# 
   296  000C                     	;# 
   297  000D                     	;# 
   298  000E                     	;# 
   299  0010                     	;# 
   300  0011                     	;# 
   301  0012                     	;# 
   302  0015                     	;# 
   303  0016                     	;# 
   304  0016                     	;# 
   305  0017                     	;# 
   306  0018                     	;# 
   307  0019                     	;# 
   308  001A                     	;# 
   309  001B                     	;# 
   310  001C                     	;# 
   311  008C                     	;# 
   312  008D                     	;# 
   313  008E                     	;# 
   314  0090                     	;# 
   315  0091                     	;# 
   316  0092                     	;# 
   317  0095                     	;# 
   318  0096                     	;# 
   319  0097                     	;# 
   320  0099                     	;# 
   321  009A                     	;# 
   322  009B                     	;# 
   323  009B                     	;# 
   324  009C                     	;# 
   325  009D                     	;# 
   326  009E                     	;# 
   327  010C                     	;# 
   328  010D                     	;# 
   329  010E                     	;# 
   330  0116                     	;# 
   331  0117                     	;# 
   332  011D                     	;# 
   333  018C                     	;# 
   334  018D                     	;# 
   335  018E                     	;# 
   336  0191                     	;# 
   337  0191                     	;# 
   338  0192                     	;# 
   339  0193                     	;# 
   340  0193                     	;# 
   341  0194                     	;# 
   342  0195                     	;# 
   343  0196                     	;# 
   344  0197                     	;# 
   345  0199                     	;# 
   346  019A                     	;# 
   347  019B                     	;# 
   348  019B                     	;# 
   349  019B                     	;# 
   350  019B                     	;# 
   351  019C                     	;# 
   352  019C                     	;# 
   353  019D                     	;# 
   354  019E                     	;# 
   355  019F                     	;# 
   356  020D                     	;# 
   357  0210                     	;# 
   358  0211                     	;# 
   359  0211                     	;# 
   360  0212                     	;# 
   361  0212                     	;# 
   362  0213                     	;# 
   363  0213                     	;# 
   364  0214                     	;# 
   365  0214                     	;# 
   366  0215                     	;# 
   367  0215                     	;# 
   368  0215                     	;# 
   369  0216                     	;# 
   370  0216                     	;# 
   371  0217                     	;# 
   372  0217                     	;# 
   373  0291                     	;# 
   374  0291                     	;# 
   375  0292                     	;# 
   376  0293                     	;# 
   377  0298                     	;# 
   378  0298                     	;# 
   379  0299                     	;# 
   380  029A                     	;# 
   381  0394                     	;# 
   382  0395                     	;# 
   383  0396                     	;# 
   384  0FE4                     	;# 
   385  0FE5                     	;# 
   386  0FE6                     	;# 
   387  0FE7                     	;# 
   388  0FE8                     	;# 
   389  0FE9                     	;# 
   390  0FEA                     	;# 
   391  0FEB                     	;# 
   392  0FED                     	;# 
   393  0FEE                     	;# 
   394  0FEF                     	;# 
   395  0000                     	;# 
   396  0001                     	;# 
   397  0002                     	;# 
   398  0003                     	;# 
   399  0004                     	;# 
   400  0005                     	;# 
   401  0006                     	;# 
   402  0007                     	;# 
   403  0008                     	;# 
   404  0009                     	;# 
   405  000A                     	;# 
   406  000B                     	;# 
   407  000C                     	;# 
   408  000D                     	;# 
   409  000E                     	;# 
   410  0010                     	;# 
   411  0011                     	;# 
   412  0012                     	;# 
   413  0015                     	;# 
   414  0016                     	;# 
   415  0016                     	;# 
   416  0017                     	;# 
   417  0018                     	;# 
   418  0019                     	;# 
   419  001A                     	;# 
   420  001B                     	;# 
   421  001C                     	;# 
   422  008C                     	;# 
   423  008D                     	;# 
   424  008E                     	;# 
   425  0090                     	;# 
   426  0091                     	;# 
   427  0092                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0097                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  010C                     	;# 
   439  010D                     	;# 
   440  010E                     	;# 
   441  0116                     	;# 
   442  0117                     	;# 
   443  011D                     	;# 
   444  018C                     	;# 
   445  018D                     	;# 
   446  018E                     	;# 
   447  0191                     	;# 
   448  0191                     	;# 
   449  0192                     	;# 
   450  0193                     	;# 
   451  0193                     	;# 
   452  0194                     	;# 
   453  0195                     	;# 
   454  0196                     	;# 
   455  0197                     	;# 
   456  0199                     	;# 
   457  019A                     	;# 
   458  019B                     	;# 
   459  019B                     	;# 
   460  019B                     	;# 
   461  019B                     	;# 
   462  019C                     	;# 
   463  019C                     	;# 
   464  019D                     	;# 
   465  019E                     	;# 
   466  019F                     	;# 
   467  020D                     	;# 
   468  0210                     	;# 
   469  0211                     	;# 
   470  0211                     	;# 
   471  0212                     	;# 
   472  0212                     	;# 
   473  0213                     	;# 
   474  0213                     	;# 
   475  0214                     	;# 
   476  0214                     	;# 
   477  0215                     	;# 
   478  0215                     	;# 
   479  0215                     	;# 
   480  0216                     	;# 
   481  0216                     	;# 
   482  0217                     	;# 
   483  0217                     	;# 
   484  0291                     	;# 
   485  0291                     	;# 
   486  0292                     	;# 
   487  0293                     	;# 
   488  0298                     	;# 
   489  0298                     	;# 
   490  0299                     	;# 
   491  029A                     	;# 
   492  0394                     	;# 
   493  0395                     	;# 
   494  0396                     	;# 
   495  0FE4                     	;# 
   496  0FE5                     	;# 
   497  0FE6                     	;# 
   498  0FE7                     	;# 
   499  0FE8                     	;# 
   500  0FE9                     	;# 
   501  0FEA                     	;# 
   502  0FEB                     	;# 
   503  0FED                     	;# 
   504  0FEE                     	;# 
   505  0FEF                     	;# 
   506  0000                     	;# 
   507  0001                     	;# 
   508  0002                     	;# 
   509  0003                     	;# 
   510  0004                     	;# 
   511  0005                     	;# 
   512  0006                     	;# 
   513  0007                     	;# 
   514  0008                     	;# 
   515  0009                     	;# 
   516  000A                     	;# 
   517  000B                     	;# 
   518  000C                     	;# 
   519  000D                     	;# 
   520  000E                     	;# 
   521  0010                     	;# 
   522  0011                     	;# 
   523  0012                     	;# 
   524  0015                     	;# 
   525  0016                     	;# 
   526  0016                     	;# 
   527  0017                     	;# 
   528  0018                     	;# 
   529  0019                     	;# 
   530  001A                     	;# 
   531  001B                     	;# 
   532  001C                     	;# 
   533  008C                     	;# 
   534  008D                     	;# 
   535  008E                     	;# 
   536  0090                     	;# 
   537  0091                     	;# 
   538  0092                     	;# 
   539  0095                     	;# 
   540  0096                     	;# 
   541  0097                     	;# 
   542  0099                     	;# 
   543  009A                     	;# 
   544  009B                     	;# 
   545  009B                     	;# 
   546  009C                     	;# 
   547  009D                     	;# 
   548  009E                     	;# 
   549  010C                     	;# 
   550  010D                     	;# 
   551  010E                     	;# 
   552  0116                     	;# 
   553  0117                     	;# 
   554  011D                     	;# 
   555  018C                     	;# 
   556  018D                     	;# 
   557  018E                     	;# 
   558  0191                     	;# 
   559  0191                     	;# 
   560  0192                     	;# 
   561  0193                     	;# 
   562  0193                     	;# 
   563  0194                     	;# 
   564  0195                     	;# 
   565  0196                     	;# 
   566  0197                     	;# 
   567  0199                     	;# 
   568  019A                     	;# 
   569  019B                     	;# 
   570  019B                     	;# 
   571  019B                     	;# 
   572  019B                     	;# 
   573  019C                     	;# 
   574  019C                     	;# 
   575  019D                     	;# 
   576  019E                     	;# 
   577  019F                     	;# 
   578  020D                     	;# 
   579  0210                     	;# 
   580  0211                     	;# 
   581  0211                     	;# 
   582  0212                     	;# 
   583  0212                     	;# 
   584  0213                     	;# 
   585  0213                     	;# 
   586  0214                     	;# 
   587  0214                     	;# 
   588  0215                     	;# 
   589  0215                     	;# 
   590  0215                     	;# 
   591  0216                     	;# 
   592  0216                     	;# 
   593  0217                     	;# 
   594  0217                     	;# 
   595  0291                     	;# 
   596  0291                     	;# 
   597  0292                     	;# 
   598  0293                     	;# 
   599  0298                     	;# 
   600  0298                     	;# 
   601  0299                     	;# 
   602  029A                     	;# 
   603  0394                     	;# 
   604  0395                     	;# 
   605  0396                     	;# 
   606  0FE4                     	;# 
   607  0FE5                     	;# 
   608  0FE6                     	;# 
   609  0FE7                     	;# 
   610  0FE8                     	;# 
   611  0FE9                     	;# 
   612  0FEA                     	;# 
   613  0FEB                     	;# 
   614  0FED                     	;# 
   615  0FEE                     	;# 
   616  0FEF                     	;# 
   617  0000                     	;# 
   618  0001                     	;# 
   619  0002                     	;# 
   620  0003                     	;# 
   621  0004                     	;# 
   622  0005                     	;# 
   623  0006                     	;# 
   624  0007                     	;# 
   625  0008                     	;# 
   626  0009                     	;# 
   627  000A                     	;# 
   628  000B                     	;# 
   629  000C                     	;# 
   630  000D                     	;# 
   631  000E                     	;# 
   632  0010                     	;# 
   633  0011                     	;# 
   634  0012                     	;# 
   635  0015                     	;# 
   636  0016                     	;# 
   637  0016                     	;# 
   638  0017                     	;# 
   639  0018                     	;# 
   640  0019                     	;# 
   641  001A                     	;# 
   642  001B                     	;# 
   643  001C                     	;# 
   644  008C                     	;# 
   645  008D                     	;# 
   646  008E                     	;# 
   647  0090                     	;# 
   648  0091                     	;# 
   649  0092                     	;# 
   650  0095                     	;# 
   651  0096                     	;# 
   652  0097                     	;# 
   653  0099                     	;# 
   654  009A                     	;# 
   655  009B                     	;# 
   656  009B                     	;# 
   657  009C                     	;# 
   658  009D                     	;# 
   659  009E                     	;# 
   660  010C                     	;# 
   661  010D                     	;# 
   662  010E                     	;# 
   663  0116                     	;# 
   664  0117                     	;# 
   665  011D                     	;# 
   666  018C                     	;# 
   667  018D                     	;# 
   668  018E                     	;# 
   669  0191                     	;# 
   670  0191                     	;# 
   671  0192                     	;# 
   672  0193                     	;# 
   673  0193                     	;# 
   674  0194                     	;# 
   675  0195                     	;# 
   676  0196                     	;# 
   677  0197                     	;# 
   678  0199                     	;# 
   679  019A                     	;# 
   680  019B                     	;# 
   681  019B                     	;# 
   682  019B                     	;# 
   683  019B                     	;# 
   684  019C                     	;# 
   685  019C                     	;# 
   686  019D                     	;# 
   687  019E                     	;# 
   688  019F                     	;# 
   689  020D                     	;# 
   690  0210                     	;# 
   691  0211                     	;# 
   692  0211                     	;# 
   693  0212                     	;# 
   694  0212                     	;# 
   695  0213                     	;# 
   696  0213                     	;# 
   697  0214                     	;# 
   698  0214                     	;# 
   699  0215                     	;# 
   700  0215                     	;# 
   701  0215                     	;# 
   702  0216                     	;# 
   703  0216                     	;# 
   704  0217                     	;# 
   705  0217                     	;# 
   706  0291                     	;# 
   707  0291                     	;# 
   708  0292                     	;# 
   709  0293                     	;# 
   710  0298                     	;# 
   711  0298                     	;# 
   712  0299                     	;# 
   713  029A                     	;# 
   714  0394                     	;# 
   715  0395                     	;# 
   716  0396                     	;# 
   717  0FE4                     	;# 
   718  0FE5                     	;# 
   719  0FE6                     	;# 
   720  0FE7                     	;# 
   721  0FE8                     	;# 
   722  0FE9                     	;# 
   723  0FEA                     	;# 
   724  0FEB                     	;# 
   725  0FED                     	;# 
   726  0FEE                     	;# 
   727  0FEF                     	;# 
   728  0000                     	;# 
   729  0001                     	;# 
   730  0002                     	;# 
   731  0003                     	;# 
   732  0004                     	;# 
   733  0005                     	;# 
   734  0006                     	;# 
   735  0007                     	;# 
   736  0008                     	;# 
   737  0009                     	;# 
   738  000A                     	;# 
   739  000B                     	;# 
   740  000C                     	;# 
   741  000D                     	;# 
   742  000E                     	;# 
   743  0010                     	;# 
   744  0011                     	;# 
   745  0012                     	;# 
   746  0015                     	;# 
   747  0016                     	;# 
   748  0016                     	;# 
   749  0017                     	;# 
   750  0018                     	;# 
   751  0019                     	;# 
   752  001A                     	;# 
   753  001B                     	;# 
   754  001C                     	;# 
   755  008C                     	;# 
   756  008D                     	;# 
   757  008E                     	;# 
   758  0090                     	;# 
   759  0091                     	;# 
   760  0092                     	;# 
   761  0095                     	;# 
   762  0096                     	;# 
   763  0097                     	;# 
   764  0099                     	;# 
   765  009A                     	;# 
   766  009B                     	;# 
   767  009B                     	;# 
   768  009C                     	;# 
   769  009D                     	;# 
   770  009E                     	;# 
   771  010C                     	;# 
   772  010D                     	;# 
   773  010E                     	;# 
   774  0116                     	;# 
   775  0117                     	;# 
   776  011D                     	;# 
   777  018C                     	;# 
   778  018D                     	;# 
   779  018E                     	;# 
   780  0191                     	;# 
   781  0191                     	;# 
   782  0192                     	;# 
   783  0193                     	;# 
   784  0193                     	;# 
   785  0194                     	;# 
   786  0195                     	;# 
   787  0196                     	;# 
   788  0197                     	;# 
   789  0199                     	;# 
   790  019A                     	;# 
   791  019B                     	;# 
   792  019B                     	;# 
   793  019B                     	;# 
   794  019B                     	;# 
   795  019C                     	;# 
   796  019C                     	;# 
   797  019D                     	;# 
   798  019E                     	;# 
   799  019F                     	;# 
   800  020D                     	;# 
   801  0210                     	;# 
   802  0211                     	;# 
   803  0211                     	;# 
   804  0212                     	;# 
   805  0212                     	;# 
   806  0213                     	;# 
   807  0213                     	;# 
   808  0214                     	;# 
   809  0214                     	;# 
   810  0215                     	;# 
   811  0215                     	;# 
   812  0215                     	;# 
   813  0216                     	;# 
   814  0216                     	;# 
   815  0217                     	;# 
   816  0217                     	;# 
   817  0291                     	;# 
   818  0291                     	;# 
   819  0292                     	;# 
   820  0293                     	;# 
   821  0298                     	;# 
   822  0298                     	;# 
   823  0299                     	;# 
   824  029A                     	;# 
   825  0394                     	;# 
   826  0395                     	;# 
   827  0396                     	;# 
   828  0FE4                     	;# 
   829  0FE5                     	;# 
   830  0FE6                     	;# 
   831  0FE7                     	;# 
   832  0FE8                     	;# 
   833  0FE9                     	;# 
   834  0FEA                     	;# 
   835  0FEB                     	;# 
   836  0FED                     	;# 
   837  0FEE                     	;# 
   838  0FEF                     	;# 
   839  0000                     	;# 
   840  0001                     	;# 
   841  0002                     	;# 
   842  0003                     	;# 
   843  0004                     	;# 
   844  0005                     	;# 
   845  0006                     	;# 
   846  0007                     	;# 
   847  0008                     	;# 
   848  0009                     	;# 
   849  000A                     	;# 
   850  000B                     	;# 
   851  000C                     	;# 
   852  000D                     	;# 
   853  000E                     	;# 
   854  0010                     	;# 
   855  0011                     	;# 
   856  0012                     	;# 
   857  0015                     	;# 
   858  0016                     	;# 
   859  0016                     	;# 
   860  0017                     	;# 
   861  0018                     	;# 
   862  0019                     	;# 
   863  001A                     	;# 
   864  001B                     	;# 
   865  001C                     	;# 
   866  008C                     	;# 
   867  008D                     	;# 
   868  008E                     	;# 
   869  0090                     	;# 
   870  0091                     	;# 
   871  0092                     	;# 
   872  0095                     	;# 
   873  0096                     	;# 
   874  0097                     	;# 
   875  0099                     	;# 
   876  009A                     	;# 
   877  009B                     	;# 
   878  009B                     	;# 
   879  009C                     	;# 
   880  009D                     	;# 
   881  009E                     	;# 
   882  010C                     	;# 
   883  010D                     	;# 
   884  010E                     	;# 
   885  0116                     	;# 
   886  0117                     	;# 
   887  011D                     	;# 
   888  018C                     	;# 
   889  018D                     	;# 
   890  018E                     	;# 
   891  0191                     	;# 
   892  0191                     	;# 
   893  0192                     	;# 
   894  0193                     	;# 
   895  0193                     	;# 
   896  0194                     	;# 
   897  0195                     	;# 
   898  0196                     	;# 
   899  0197                     	;# 
   900  0199                     	;# 
   901  019A                     	;# 
   902  019B                     	;# 
   903  019B                     	;# 
   904  019B                     	;# 
   905  019B                     	;# 
   906  019C                     	;# 
   907  019C                     	;# 
   908  019D                     	;# 
   909  019E                     	;# 
   910  019F                     	;# 
   911  020D                     	;# 
   912  0210                     	;# 
   913  0211                     	;# 
   914  0211                     	;# 
   915  0212                     	;# 
   916  0212                     	;# 
   917  0213                     	;# 
   918  0213                     	;# 
   919  0214                     	;# 
   920  0214                     	;# 
   921  0215                     	;# 
   922  0215                     	;# 
   923  0215                     	;# 
   924  0216                     	;# 
   925  0216                     	;# 
   926  0217                     	;# 
   927  0217                     	;# 
   928  0291                     	;# 
   929  0291                     	;# 
   930  0292                     	;# 
   931  0293                     	;# 
   932  0298                     	;# 
   933  0298                     	;# 
   934  0299                     	;# 
   935  029A                     	;# 
   936  0394                     	;# 
   937  0395                     	;# 
   938  0396                     	;# 
   939  0FE4                     	;# 
   940  0FE5                     	;# 
   941  0FE6                     	;# 
   942  0FE7                     	;# 
   943  0FE8                     	;# 
   944  0FE9                     	;# 
   945  0FEA                     	;# 
   946  0FEB                     	;# 
   947  0FED                     	;# 
   948  0FEE                     	;# 
   949  0FEF                     	;# 
   950  0000                     	;# 
   951  0001                     	;# 
   952  0002                     	;# 
   953  0003                     	;# 
   954  0004                     	;# 
   955  0005                     	;# 
   956  0006                     	;# 
   957  0007                     	;# 
   958  0008                     	;# 
   959  0009                     	;# 
   960  000A                     	;# 
   961  000B                     	;# 
   962  000C                     	;# 
   963  000D                     	;# 
   964  000E                     	;# 
   965  0010                     	;# 
   966  0011                     	;# 
   967  0012                     	;# 
   968  0015                     	;# 
   969  0016                     	;# 
   970  0016                     	;# 
   971  0017                     	;# 
   972  0018                     	;# 
   973  0019                     	;# 
   974  001A                     	;# 
   975  001B                     	;# 
   976  001C                     	;# 
   977  008C                     	;# 
   978  008D                     	;# 
   979  008E                     	;# 
   980  0090                     	;# 
   981  0091                     	;# 
   982  0092                     	;# 
   983  0095                     	;# 
   984  0096                     	;# 
   985  0097                     	;# 
   986  0099                     	;# 
   987  009A                     	;# 
   988  009B                     	;# 
   989  009B                     	;# 
   990  009C                     	;# 
   991  009D                     	;# 
   992  009E                     	;# 
   993  010C                     	;# 
   994  010D                     	;# 
   995  010E                     	;# 
   996  0116                     	;# 
   997  0117                     	;# 
   998  011D                     	;# 
   999  018C                     	;# 
  1000  018D                     	;# 
  1001  018E                     	;# 
  1002  0191                     	;# 
  1003  0191                     	;# 
  1004  0192                     	;# 
  1005  0193                     	;# 
  1006  0193                     	;# 
  1007  0194                     	;# 
  1008  0195                     	;# 
  1009  0196                     	;# 
  1010  0197                     	;# 
  1011  0199                     	;# 
  1012  019A                     	;# 
  1013  019B                     	;# 
  1014  019B                     	;# 
  1015  019B                     	;# 
  1016  019B                     	;# 
  1017  019C                     	;# 
  1018  019C                     	;# 
  1019  019D                     	;# 
  1020  019E                     	;# 
  1021  019F                     	;# 
  1022  020D                     	;# 
  1023  0210                     	;# 
  1024  0211                     	;# 
  1025  0211                     	;# 
  1026  0212                     	;# 
  1027  0212                     	;# 
  1028  0213                     	;# 
  1029  0213                     	;# 
  1030  0214                     	;# 
  1031  0214                     	;# 
  1032  0215                     	;# 
  1033  0215                     	;# 
  1034  0215                     	;# 
  1035  0216                     	;# 
  1036  0216                     	;# 
  1037  0217                     	;# 
  1038  0217                     	;# 
  1039  0291                     	;# 
  1040  0291                     	;# 
  1041  0292                     	;# 
  1042  0293                     	;# 
  1043  0298                     	;# 
  1044  0298                     	;# 
  1045  0299                     	;# 
  1046  029A                     	;# 
  1047  0394                     	;# 
  1048  0395                     	;# 
  1049  0396                     	;# 
  1050  0FE4                     	;# 
  1051  0FE5                     	;# 
  1052  0FE6                     	;# 
  1053  0FE7                     	;# 
  1054  0FE8                     	;# 
  1055  0FE9                     	;# 
  1056  0FEA                     	;# 
  1057  0FEB                     	;# 
  1058  0FED                     	;# 
  1059  0FEE                     	;# 
  1060  0FEF                     	;# 
  1061  0000                     	;# 
  1062  0001                     	;# 
  1063  0002                     	;# 
  1064  0003                     	;# 
  1065  0004                     	;# 
  1066  0005                     	;# 
  1067  0006                     	;# 
  1068  0007                     	;# 
  1069  0008                     	;# 
  1070  0009                     	;# 
  1071  000A                     	;# 
  1072  000B                     	;# 
  1073  000C                     	;# 
  1074  000D                     	;# 
  1075  000E                     	;# 
  1076  0010                     	;# 
  1077  0011                     	;# 
  1078  0012                     	;# 
  1079  0015                     	;# 
  1080  0016                     	;# 
  1081  0016                     	;# 
  1082  0017                     	;# 
  1083  0018                     	;# 
  1084  0019                     	;# 
  1085  001A                     	;# 
  1086  001B                     	;# 
  1087  001C                     	;# 
  1088  008C                     	;# 
  1089  008D                     	;# 
  1090  008E                     	;# 
  1091  0090                     	;# 
  1092  0091                     	;# 
  1093  0092                     	;# 
  1094  0095                     	;# 
  1095  0096                     	;# 
  1096  0097                     	;# 
  1097  0099                     	;# 
  1098  009A                     	;# 
  1099  009B                     	;# 
  1100  009B                     	;# 
  1101  009C                     	;# 
  1102  009D                     	;# 
  1103  009E                     	;# 
  1104  010C                     	;# 
  1105  010D                     	;# 
  1106  010E                     	;# 
  1107  0116                     	;# 
  1108  0117                     	;# 
  1109  011D                     	;# 
  1110  018C                     	;# 
  1111  018D                     	;# 
  1112  018E                     	;# 
  1113  0191                     	;# 
  1114  0191                     	;# 
  1115  0192                     	;# 
  1116  0193                     	;# 
  1117  0193                     	;# 
  1118  0194                     	;# 
  1119  0195                     	;# 
  1120  0196                     	;# 
  1121  0197                     	;# 
  1122  0199                     	;# 
  1123  019A                     	;# 
  1124  019B                     	;# 
  1125  019B                     	;# 
  1126  019B                     	;# 
  1127  019B                     	;# 
  1128  019C                     	;# 
  1129  019C                     	;# 
  1130  019D                     	;# 
  1131  019E                     	;# 
  1132  019F                     	;# 
  1133  020D                     	;# 
  1134  0210                     	;# 
  1135  0211                     	;# 
  1136  0211                     	;# 
  1137  0212                     	;# 
  1138  0212                     	;# 
  1139  0213                     	;# 
  1140  0213                     	;# 
  1141  0214                     	;# 
  1142  0214                     	;# 
  1143  0215                     	;# 
  1144  0215                     	;# 
  1145  0215                     	;# 
  1146  0216                     	;# 
  1147  0216                     	;# 
  1148  0217                     	;# 
  1149  0217                     	;# 
  1150  0291                     	;# 
  1151  0291                     	;# 
  1152  0292                     	;# 
  1153  0293                     	;# 
  1154  0298                     	;# 
  1155  0298                     	;# 
  1156  0299                     	;# 
  1157  029A                     	;# 
  1158  0394                     	;# 
  1159  0395                     	;# 
  1160  0396                     	;# 
  1161  0FE4                     	;# 
  1162  0FE5                     	;# 
  1163  0FE6                     	;# 
  1164  0FE7                     	;# 
  1165  0FE8                     	;# 
  1166  0FE9                     	;# 
  1167  0FEA                     	;# 
  1168  0FEB                     	;# 
  1169  0FED                     	;# 
  1170  0FEE                     	;# 
  1171  0FEF                     	;# 
  1172  0000                     	;# 
  1173  0001                     	;# 
  1174  0002                     	;# 
  1175  0003                     	;# 
  1176  0004                     	;# 
  1177  0005                     	;# 
  1178  0006                     	;# 
  1179  0007                     	;# 
  1180  0008                     	;# 
  1181  0009                     	;# 
  1182  000A                     	;# 
  1183  000B                     	;# 
  1184  000C                     	;# 
  1185  000D                     	;# 
  1186  000E                     	;# 
  1187  0010                     	;# 
  1188  0011                     	;# 
  1189  0012                     	;# 
  1190  0015                     	;# 
  1191  0016                     	;# 
  1192  0016                     	;# 
  1193  0017                     	;# 
  1194  0018                     	;# 
  1195  0019                     	;# 
  1196  001A                     	;# 
  1197  001B                     	;# 
  1198  001C                     	;# 
  1199  008C                     	;# 
  1200  008D                     	;# 
  1201  008E                     	;# 
  1202  0090                     	;# 
  1203  0091                     	;# 
  1204  0092                     	;# 
  1205  0095                     	;# 
  1206  0096                     	;# 
  1207  0097                     	;# 
  1208  0099                     	;# 
  1209  009A                     	;# 
  1210  009B                     	;# 
  1211  009B                     	;# 
  1212  009C                     	;# 
  1213  009D                     	;# 
  1214  009E                     	;# 
  1215  010C                     	;# 
  1216  010D                     	;# 
  1217  010E                     	;# 
  1218  0116                     	;# 
  1219  0117                     	;# 
  1220  011D                     	;# 
  1221  018C                     	;# 
  1222  018D                     	;# 
  1223  018E                     	;# 
  1224  0191                     	;# 
  1225  0191                     	;# 
  1226  0192                     	;# 
  1227  0193                     	;# 
  1228  0193                     	;# 
  1229  0194                     	;# 
  1230  0195                     	;# 
  1231  0196                     	;# 
  1232  0197                     	;# 
  1233  0199                     	;# 
  1234  019A                     	;# 
  1235  019B                     	;# 
  1236  019B                     	;# 
  1237  019B                     	;# 
  1238  019B                     	;# 
  1239  019C                     	;# 
  1240  019C                     	;# 
  1241  019D                     	;# 
  1242  019E                     	;# 
  1243  019F                     	;# 
  1244  020D                     	;# 
  1245  0210                     	;# 
  1246  0211                     	;# 
  1247  0211                     	;# 
  1248  0212                     	;# 
  1249  0212                     	;# 
  1250  0213                     	;# 
  1251  0213                     	;# 
  1252  0214                     	;# 
  1253  0214                     	;# 
  1254  0215                     	;# 
  1255  0215                     	;# 
  1256  0215                     	;# 
  1257  0216                     	;# 
  1258  0216                     	;# 
  1259  0217                     	;# 
  1260  0217                     	;# 
  1261  0291                     	;# 
  1262  0291                     	;# 
  1263  0292                     	;# 
  1264  0293                     	;# 
  1265  0298                     	;# 
  1266  0298                     	;# 
  1267  0299                     	;# 
  1268  029A                     	;# 
  1269  0394                     	;# 
  1270  0395                     	;# 
  1271  0396                     	;# 
  1272  0FE4                     	;# 
  1273  0FE5                     	;# 
  1274  0FE6                     	;# 
  1275  0FE7                     	;# 
  1276  0FE8                     	;# 
  1277  0FE9                     	;# 
  1278  0FEA                     	;# 
  1279  0FEB                     	;# 
  1280  0FED                     	;# 
  1281  0FEE                     	;# 
  1282  0FEF                     	;# 
  1283  0000                     	;# 
  1284  0001                     	;# 
  1285  0002                     	;# 
  1286  0003                     	;# 
  1287  0004                     	;# 
  1288  0005                     	;# 
  1289  0006                     	;# 
  1290  0007                     	;# 
  1291  0008                     	;# 
  1292  0009                     	;# 
  1293  000A                     	;# 
  1294  000B                     	;# 
  1295  000C                     	;# 
  1296  000D                     	;# 
  1297  000E                     	;# 
  1298  0010                     	;# 
  1299  0011                     	;# 
  1300  0012                     	;# 
  1301  0015                     	;# 
  1302  0016                     	;# 
  1303  0016                     	;# 
  1304  0017                     	;# 
  1305  0018                     	;# 
  1306  0019                     	;# 
  1307  001A                     	;# 
  1308  001B                     	;# 
  1309  001C                     	;# 
  1310  008C                     	;# 
  1311  008D                     	;# 
  1312  008E                     	;# 
  1313  0090                     	;# 
  1314  0091                     	;# 
  1315  0092                     	;# 
  1316  0095                     	;# 
  1317  0096                     	;# 
  1318  0097                     	;# 
  1319  0099                     	;# 
  1320  009A                     	;# 
  1321  009B                     	;# 
  1322  009B                     	;# 
  1323  009C                     	;# 
  1324  009D                     	;# 
  1325  009E                     	;# 
  1326  010C                     	;# 
  1327  010D                     	;# 
  1328  010E                     	;# 
  1329  0116                     	;# 
  1330  0117                     	;# 
  1331  011D                     	;# 
  1332  018C                     	;# 
  1333  018D                     	;# 
  1334  018E                     	;# 
  1335  0191                     	;# 
  1336  0191                     	;# 
  1337  0192                     	;# 
  1338  0193                     	;# 
  1339  0193                     	;# 
  1340  0194                     	;# 
  1341  0195                     	;# 
  1342  0196                     	;# 
  1343  0197                     	;# 
  1344  0199                     	;# 
  1345  019A                     	;# 
  1346  019B                     	;# 
  1347  019B                     	;# 
  1348  019B                     	;# 
  1349  019B                     	;# 
  1350  019C                     	;# 
  1351  019C                     	;# 
  1352  019D                     	;# 
  1353  019E                     	;# 
  1354  019F                     	;# 
  1355  020D                     	;# 
  1356  0210                     	;# 
  1357  0211                     	;# 
  1358  0211                     	;# 
  1359  0212                     	;# 
  1360  0212                     	;# 
  1361  0213                     	;# 
  1362  0213                     	;# 
  1363  0214                     	;# 
  1364  0214                     	;# 
  1365  0215                     	;# 
  1366  0215                     	;# 
  1367  0215                     	;# 
  1368  0216                     	;# 
  1369  0216                     	;# 
  1370  0217                     	;# 
  1371  0217                     	;# 
  1372  0291                     	;# 
  1373  0291                     	;# 
  1374  0292                     	;# 
  1375  0293                     	;# 
  1376  0298                     	;# 
  1377  0298                     	;# 
  1378  0299                     	;# 
  1379  029A                     	;# 
  1380  0394                     	;# 
  1381  0395                     	;# 
  1382  0396                     	;# 
  1383  0FE4                     	;# 
  1384  0FE5                     	;# 
  1385  0FE6                     	;# 
  1386  0FE7                     	;# 
  1387  0FE8                     	;# 
  1388  0FE9                     	;# 
  1389  0FEA                     	;# 
  1390  0FEB                     	;# 
  1391  0FED                     	;# 
  1392  0FEE                     	;# 
  1393  0FEF                     	;# 
  1394  0000                     	;# 
  1395  0001                     	;# 
  1396  0002                     	;# 
  1397  0003                     	;# 
  1398  0004                     	;# 
  1399  0005                     	;# 
  1400  0006                     	;# 
  1401  0007                     	;# 
  1402  0008                     	;# 
  1403  0009                     	;# 
  1404  000A                     	;# 
  1405  000B                     	;# 
  1406  000C                     	;# 
  1407  000D                     	;# 
  1408  000E                     	;# 
  1409  0010                     	;# 
  1410  0011                     	;# 
  1411  0012                     	;# 
  1412  0015                     	;# 
  1413  0016                     	;# 
  1414  0016                     	;# 
  1415  0017                     	;# 
  1416  0018                     	;# 
  1417  0019                     	;# 
  1418  001A                     	;# 
  1419  001B                     	;# 
  1420  001C                     	;# 
  1421  008C                     	;# 
  1422  008D                     	;# 
  1423  008E                     	;# 
  1424  0090                     	;# 
  1425  0091                     	;# 
  1426  0092                     	;# 
  1427  0095                     	;# 
  1428  0096                     	;# 
  1429  0097                     	;# 
  1430  0099                     	;# 
  1431  009A                     	;# 
  1432  009B                     	;# 
  1433  009B                     	;# 
  1434  009C                     	;# 
  1435  009D                     	;# 
  1436  009E                     	;# 
  1437  010C                     	;# 
  1438  010D                     	;# 
  1439  010E                     	;# 
  1440  0116                     	;# 
  1441  0117                     	;# 
  1442  011D                     	;# 
  1443  018C                     	;# 
  1444  018D                     	;# 
  1445  018E                     	;# 
  1446  0191                     	;# 
  1447  0191                     	;# 
  1448  0192                     	;# 
  1449  0193                     	;# 
  1450  0193                     	;# 
  1451  0194                     	;# 
  1452  0195                     	;# 
  1453  0196                     	;# 
  1454  0197                     	;# 
  1455  0199                     	;# 
  1456  019A                     	;# 
  1457  019B                     	;# 
  1458  019B                     	;# 
  1459  019B                     	;# 
  1460  019B                     	;# 
  1461  019C                     	;# 
  1462  019C                     	;# 
  1463  019D                     	;# 
  1464  019E                     	;# 
  1465  019F                     	;# 
  1466  020D                     	;# 
  1467  0210                     	;# 
  1468  0211                     	;# 
  1469  0211                     	;# 
  1470  0212                     	;# 
  1471  0212                     	;# 
  1472  0213                     	;# 
  1473  0213                     	;# 
  1474  0214                     	;# 
  1475  0214                     	;# 
  1476  0215                     	;# 
  1477  0215                     	;# 
  1478  0215                     	;# 
  1479  0216                     	;# 
  1480  0216                     	;# 
  1481  0217                     	;# 
  1482  0217                     	;# 
  1483  0291                     	;# 
  1484  0291                     	;# 
  1485  0292                     	;# 
  1486  0293                     	;# 
  1487  0298                     	;# 
  1488  0298                     	;# 
  1489  0299                     	;# 
  1490  029A                     	;# 
  1491  0394                     	;# 
  1492  0395                     	;# 
  1493  0396                     	;# 
  1494  0FE4                     	;# 
  1495  0FE5                     	;# 
  1496  0FE6                     	;# 
  1497  0FE7                     	;# 
  1498  0FE8                     	;# 
  1499  0FE9                     	;# 
  1500  0FEA                     	;# 
  1501  0FEB                     	;# 
  1502  0FED                     	;# 
  1503  0FEE                     	;# 
  1504  0FEF                     	;# 
  1505  0000                     	;# 
  1506  0001                     	;# 
  1507  0002                     	;# 
  1508  0003                     	;# 
  1509  0004                     	;# 
  1510  0005                     	;# 
  1511  0006                     	;# 
  1512  0007                     	;# 
  1513  0008                     	;# 
  1514  0009                     	;# 
  1515  000A                     	;# 
  1516  000B                     	;# 
  1517  000C                     	;# 
  1518  000D                     	;# 
  1519  000E                     	;# 
  1520  0010                     	;# 
  1521  0011                     	;# 
  1522  0012                     	;# 
  1523  0015                     	;# 
  1524  0016                     	;# 
  1525  0016                     	;# 
  1526  0017                     	;# 
  1527  0018                     	;# 
  1528  0019                     	;# 
  1529  001A                     	;# 
  1530  001B                     	;# 
  1531  001C                     	;# 
  1532  008C                     	;# 
  1533  008D                     	;# 
  1534  008E                     	;# 
  1535  0090                     	;# 
  1536  0091                     	;# 
  1537  0092                     	;# 
  1538  0095                     	;# 
  1539  0096                     	;# 
  1540  0097                     	;# 
  1541  0099                     	;# 
  1542  009A                     	;# 
  1543  009B                     	;# 
  1544  009B                     	;# 
  1545  009C                     	;# 
  1546  009D                     	;# 
  1547  009E                     	;# 
  1548  010C                     	;# 
  1549  010D                     	;# 
  1550  010E                     	;# 
  1551  0116                     	;# 
  1552  0117                     	;# 
  1553  011D                     	;# 
  1554  018C                     	;# 
  1555  018D                     	;# 
  1556  018E                     	;# 
  1557  0191                     	;# 
  1558  0191                     	;# 
  1559  0192                     	;# 
  1560  0193                     	;# 
  1561  0193                     	;# 
  1562  0194                     	;# 
  1563  0195                     	;# 
  1564  0196                     	;# 
  1565  0197                     	;# 
  1566  0199                     	;# 
  1567  019A                     	;# 
  1568  019B                     	;# 
  1569  019B                     	;# 
  1570  019B                     	;# 
  1571  019B                     	;# 
  1572  019C                     	;# 
  1573  019C                     	;# 
  1574  019D                     	;# 
  1575  019E                     	;# 
  1576  019F                     	;# 
  1577  020D                     	;# 
  1578  0210                     	;# 
  1579  0211                     	;# 
  1580  0211                     	;# 
  1581  0212                     	;# 
  1582  0212                     	;# 
  1583  0213                     	;# 
  1584  0213                     	;# 
  1585  0214                     	;# 
  1586  0214                     	;# 
  1587  0215                     	;# 
  1588  0215                     	;# 
  1589  0215                     	;# 
  1590  0216                     	;# 
  1591  0216                     	;# 
  1592  0217                     	;# 
  1593  0217                     	;# 
  1594  0291                     	;# 
  1595  0291                     	;# 
  1596  0292                     	;# 
  1597  0293                     	;# 
  1598  0298                     	;# 
  1599  0298                     	;# 
  1600  0299                     	;# 
  1601  029A                     	;# 
  1602  0394                     	;# 
  1603  0395                     	;# 
  1604  0396                     	;# 
  1605  0FE4                     	;# 
  1606  0FE5                     	;# 
  1607  0FE6                     	;# 
  1608  0FE7                     	;# 
  1609  0FE8                     	;# 
  1610  0FE9                     	;# 
  1611  0FEA                     	;# 
  1612  0FEB                     	;# 
  1613  0FED                     	;# 
  1614  0FEE                     	;# 
  1615  0FEF                     	;# 
  1616  0000                     	;# 
  1617  0001                     	;# 
  1618  0002                     	;# 
  1619  0003                     	;# 
  1620  0004                     	;# 
  1621  0005                     	;# 
  1622  0006                     	;# 
  1623  0007                     	;# 
  1624  0008                     	;# 
  1625  0009                     	;# 
  1626  000A                     	;# 
  1627  000B                     	;# 
  1628  000C                     	;# 
  1629  000D                     	;# 
  1630  000E                     	;# 
  1631  0010                     	;# 
  1632  0011                     	;# 
  1633  0012                     	;# 
  1634  0015                     	;# 
  1635  0016                     	;# 
  1636  0016                     	;# 
  1637  0017                     	;# 
  1638  0018                     	;# 
  1639  0019                     	;# 
  1640  001A                     	;# 
  1641  001B                     	;# 
  1642  001C                     	;# 
  1643  008C                     	;# 
  1644  008D                     	;# 
  1645  008E                     	;# 
  1646  0090                     	;# 
  1647  0091                     	;# 
  1648  0092                     	;# 
  1649  0095                     	;# 
  1650  0096                     	;# 
  1651  0097                     	;# 
  1652  0099                     	;# 
  1653  009A                     	;# 
  1654  009B                     	;# 
  1655  009B                     	;# 
  1656  009C                     	;# 
  1657  009D                     	;# 
  1658  009E                     	;# 
  1659  010C                     	;# 
  1660  010D                     	;# 
  1661  010E                     	;# 
  1662  0116                     	;# 
  1663  0117                     	;# 
  1664  011D                     	;# 
  1665  018C                     	;# 
  1666  018D                     	;# 
  1667  018E                     	;# 
  1668  0191                     	;# 
  1669  0191                     	;# 
  1670  0192                     	;# 
  1671  0193                     	;# 
  1672  0193                     	;# 
  1673  0194                     	;# 
  1674  0195                     	;# 
  1675  0196                     	;# 
  1676  0197                     	;# 
  1677  0199                     	;# 
  1678  019A                     	;# 
  1679  019B                     	;# 
  1680  019B                     	;# 
  1681  019B                     	;# 
  1682  019B                     	;# 
  1683  019C                     	;# 
  1684  019C                     	;# 
  1685  019D                     	;# 
  1686  019E                     	;# 
  1687  019F                     	;# 
  1688  020D                     	;# 
  1689  0210                     	;# 
  1690  0211                     	;# 
  1691  0211                     	;# 
  1692  0212                     	;# 
  1693  0212                     	;# 
  1694  0213                     	;# 
  1695  0213                     	;# 
  1696  0214                     	;# 
  1697  0214                     	;# 
  1698  0215                     	;# 
  1699  0215                     	;# 
  1700  0215                     	;# 
  1701  0216                     	;# 
  1702  0216                     	;# 
  1703  0217                     	;# 
  1704  0217                     	;# 
  1705  0291                     	;# 
  1706  0291                     	;# 
  1707  0292                     	;# 
  1708  0293                     	;# 
  1709  0298                     	;# 
  1710  0298                     	;# 
  1711  0299                     	;# 
  1712  029A                     	;# 
  1713  0394                     	;# 
  1714  0395                     	;# 
  1715  0396                     	;# 
  1716  0FE4                     	;# 
  1717  0FE5                     	;# 
  1718  0FE6                     	;# 
  1719  0FE7                     	;# 
  1720  0FE8                     	;# 
  1721  0FE9                     	;# 
  1722  0FEA                     	;# 
  1723  0FEB                     	;# 
  1724  0FED                     	;# 
  1725  0FEE                     	;# 
  1726  0FEF                     	;# 
  1727  0000                     	;# 
  1728  0001                     	;# 
  1729  0002                     	;# 
  1730  0003                     	;# 
  1731  0004                     	;# 
  1732  0005                     	;# 
  1733  0006                     	;# 
  1734  0007                     	;# 
  1735  0008                     	;# 
  1736  0009                     	;# 
  1737  000A                     	;# 
  1738  000B                     	;# 
  1739  000C                     	;# 
  1740  000D                     	;# 
  1741  000E                     	;# 
  1742  0010                     	;# 
  1743  0011                     	;# 
  1744  0012                     	;# 
  1745  0015                     	;# 
  1746  0016                     	;# 
  1747  0016                     	;# 
  1748  0017                     	;# 
  1749  0018                     	;# 
  1750  0019                     	;# 
  1751  001A                     	;# 
  1752  001B                     	;# 
  1753  001C                     	;# 
  1754  008C                     	;# 
  1755  008D                     	;# 
  1756  008E                     	;# 
  1757  0090                     	;# 
  1758  0091                     	;# 
  1759  0092                     	;# 
  1760  0095                     	;# 
  1761  0096                     	;# 
  1762  0097                     	;# 
  1763  0099                     	;# 
  1764  009A                     	;# 
  1765  009B                     	;# 
  1766  009B                     	;# 
  1767  009C                     	;# 
  1768  009D                     	;# 
  1769  009E                     	;# 
  1770  010C                     	;# 
  1771  010D                     	;# 
  1772  010E                     	;# 
  1773  0116                     	;# 
  1774  0117                     	;# 
  1775  011D                     	;# 
  1776  018C                     	;# 
  1777  018D                     	;# 
  1778  018E                     	;# 
  1779  0191                     	;# 
  1780  0191                     	;# 
  1781  0192                     	;# 
  1782  0193                     	;# 
  1783  0193                     	;# 
  1784  0194                     	;# 
  1785  0195                     	;# 
  1786  0196                     	;# 
  1787  0197                     	;# 
  1788  0199                     	;# 
  1789  019A                     	;# 
  1790  019B                     	;# 
  1791  019B                     	;# 
  1792  019B                     	;# 
  1793  019B                     	;# 
  1794  019C                     	;# 
  1795  019C                     	;# 
  1796  019D                     	;# 
  1797  019E                     	;# 
  1798  019F                     	;# 
  1799  020D                     	;# 
  1800  0210                     	;# 
  1801  0211                     	;# 
  1802  0211                     	;# 
  1803  0212                     	;# 
  1804  0212                     	;# 
  1805  0213                     	;# 
  1806  0213                     	;# 
  1807  0214                     	;# 
  1808  0214                     	;# 
  1809  0215                     	;# 
  1810  0215                     	;# 
  1811  0215                     	;# 
  1812  0216                     	;# 
  1813  0216                     	;# 
  1814  0217                     	;# 
  1815  0217                     	;# 
  1816  0291                     	;# 
  1817  0291                     	;# 
  1818  0292                     	;# 
  1819  0293                     	;# 
  1820  0298                     	;# 
  1821  0298                     	;# 
  1822  0299                     	;# 
  1823  029A                     	;# 
  1824  0394                     	;# 
  1825  0395                     	;# 
  1826  0396                     	;# 
  1827  0FE4                     	;# 
  1828  0FE5                     	;# 
  1829  0FE6                     	;# 
  1830  0FE7                     	;# 
  1831  0FE8                     	;# 
  1832  0FE9                     	;# 
  1833  0FEA                     	;# 
  1834  0FEB                     	;# 
  1835  0FED                     	;# 
  1836  0FEE                     	;# 
  1837  0FEF                     	;# 
  1838  0000                     	;# 
  1839  0001                     	;# 
  1840  0002                     	;# 
  1841  0003                     	;# 
  1842  0004                     	;# 
  1843  0005                     	;# 
  1844  0006                     	;# 
  1845  0007                     	;# 
  1846  0008                     	;# 
  1847  0009                     	;# 
  1848  000A                     	;# 
  1849  000B                     	;# 
  1850  000C                     	;# 
  1851  000D                     	;# 
  1852  000E                     	;# 
  1853  0010                     	;# 
  1854  0011                     	;# 
  1855  0012                     	;# 
  1856  0015                     	;# 
  1857  0016                     	;# 
  1858  0016                     	;# 
  1859  0017                     	;# 
  1860  0018                     	;# 
  1861  0019                     	;# 
  1862  001A                     	;# 
  1863  001B                     	;# 
  1864  001C                     	;# 
  1865  008C                     	;# 
  1866  008D                     	;# 
  1867  008E                     	;# 
  1868  0090                     	;# 
  1869  0091                     	;# 
  1870  0092                     	;# 
  1871  0095                     	;# 
  1872  0096                     	;# 
  1873  0097                     	;# 
  1874  0099                     	;# 
  1875  009A                     	;# 
  1876  009B                     	;# 
  1877  009B                     	;# 
  1878  009C                     	;# 
  1879  009D                     	;# 
  1880  009E                     	;# 
  1881  010C                     	;# 
  1882  010D                     	;# 
  1883  010E                     	;# 
  1884  0116                     	;# 
  1885  0117                     	;# 
  1886  011D                     	;# 
  1887  018C                     	;# 
  1888  018D                     	;# 
  1889  018E                     	;# 
  1890  0191                     	;# 
  1891  0191                     	;# 
  1892  0192                     	;# 
  1893  0193                     	;# 
  1894  0193                     	;# 
  1895  0194                     	;# 
  1896  0195                     	;# 
  1897  0196                     	;# 
  1898  0197                     	;# 
  1899  0199                     	;# 
  1900  019A                     	;# 
  1901  019B                     	;# 
  1902  019B                     	;# 
  1903  019B                     	;# 
  1904  019B                     	;# 
  1905  019C                     	;# 
  1906  019C                     	;# 
  1907  019D                     	;# 
  1908  019E                     	;# 
  1909  019F                     	;# 
  1910  020D                     	;# 
  1911  0210                     	;# 
  1912  0211                     	;# 
  1913  0211                     	;# 
  1914  0212                     	;# 
  1915  0212                     	;# 
  1916  0213                     	;# 
  1917  0213                     	;# 
  1918  0214                     	;# 
  1919  0214                     	;# 
  1920  0215                     	;# 
  1921  0215                     	;# 
  1922  0215                     	;# 
  1923  0216                     	;# 
  1924  0216                     	;# 
  1925  0217                     	;# 
  1926  0217                     	;# 
  1927  0291                     	;# 
  1928  0291                     	;# 
  1929  0292                     	;# 
  1930  0293                     	;# 
  1931  0298                     	;# 
  1932  0298                     	;# 
  1933  0299                     	;# 
  1934  029A                     	;# 
  1935  0394                     	;# 
  1936  0395                     	;# 
  1937  0396                     	;# 
  1938  0FE4                     	;# 
  1939  0FE5                     	;# 
  1940  0FE6                     	;# 
  1941  0FE7                     	;# 
  1942  0FE8                     	;# 
  1943  0FE9                     	;# 
  1944  0FEA                     	;# 
  1945  0FEB                     	;# 
  1946  0FED                     	;# 
  1947  0FEE                     	;# 
  1948  0FEF                     	;# 
  1949  0000                     	;# 
  1950  0001                     	;# 
  1951  0002                     	;# 
  1952  0003                     	;# 
  1953  0004                     	;# 
  1954  0005                     	;# 
  1955  0006                     	;# 
  1956  0007                     	;# 
  1957  0008                     	;# 
  1958  0009                     	;# 
  1959  000A                     	;# 
  1960  000B                     	;# 
  1961  000C                     	;# 
  1962  000D                     	;# 
  1963  000E                     	;# 
  1964  0010                     	;# 
  1965  0011                     	;# 
  1966  0012                     	;# 
  1967  0015                     	;# 
  1968  0016                     	;# 
  1969  0016                     	;# 
  1970  0017                     	;# 
  1971  0018                     	;# 
  1972  0019                     	;# 
  1973  001A                     	;# 
  1974  001B                     	;# 
  1975  001C                     	;# 
  1976  008C                     	;# 
  1977  008D                     	;# 
  1978  008E                     	;# 
  1979  0090                     	;# 
  1980  0091                     	;# 
  1981  0092                     	;# 
  1982  0095                     	;# 
  1983  0096                     	;# 
  1984  0097                     	;# 
  1985  0099                     	;# 
  1986  009A                     	;# 
  1987  009B                     	;# 
  1988  009B                     	;# 
  1989  009C                     	;# 
  1990  009D                     	;# 
  1991  009E                     	;# 
  1992  010C                     	;# 
  1993  010D                     	;# 
  1994  010E                     	;# 
  1995  0116                     	;# 
  1996  0117                     	;# 
  1997  011D                     	;# 
  1998  018C                     	;# 
  1999  018D                     	;# 
  2000  018E                     	;# 
  2001  0191                     	;# 
  2002  0191                     	;# 
  2003  0192                     	;# 
  2004  0193                     	;# 
  2005  0193                     	;# 
  2006  0194                     	;# 
  2007  0195                     	;# 
  2008  0196                     	;# 
  2009  0197                     	;# 
  2010  0199                     	;# 
  2011  019A                     	;# 
  2012  019B                     	;# 
  2013  019B                     	;# 
  2014  019B                     	;# 
  2015  019B                     	;# 
  2016  019C                     	;# 
  2017  019C                     	;# 
  2018  019D                     	;# 
  2019  019E                     	;# 
  2020  019F                     	;# 
  2021  020D                     	;# 
  2022  0210                     	;# 
  2023  0211                     	;# 
  2024  0211                     	;# 
  2025  0212                     	;# 
  2026  0212                     	;# 
  2027  0213                     	;# 
  2028  0213                     	;# 
  2029  0214                     	;# 
  2030  0214                     	;# 
  2031  0215                     	;# 
  2032  0215                     	;# 
  2033  0215                     	;# 
  2034  0216                     	;# 
  2035  0216                     	;# 
  2036  0217                     	;# 
  2037  0217                     	;# 
  2038  0291                     	;# 
  2039  0291                     	;# 
  2040  0292                     	;# 
  2041  0293                     	;# 
  2042  0298                     	;# 
  2043  0298                     	;# 
  2044  0299                     	;# 
  2045  029A                     	;# 
  2046  0394                     	;# 
  2047  0395                     	;# 
  2048  0396                     	;# 
  2049  0FE4                     	;# 
  2050  0FE5                     	;# 
  2051  0FE6                     	;# 
  2052  0FE7                     	;# 
  2053  0FE8                     	;# 
  2054  0FE9                     	;# 
  2055  0FEA                     	;# 
  2056  0FEB                     	;# 
  2057  0FED                     	;# 
  2058  0FEE                     	;# 
  2059  0FEF                     	;# 
  2060                           
  2061                           	psect	idataBANK1
  2062  0480                     __pidataBANK1:	
  2063                           
  2064                           ;initializer for __product
  2065  0480  3463               	retlw	99
  2066  0481  3402               	retlw	2
  2067  0482  3400               	retlw	0
  2068  0483  3400               	retlw	0
  2069  0484  3400               	retlw	0
  2070  0485  3400               	retlw	0
  2071  0486  3400               	retlw	0
  2072  0487  3400               	retlw	0
  2073  0488  3400               	retlw	0
  2074  0489  3400               	retlw	0
  2075  048A  3400               	retlw	0
  2076  048B  3400               	retlw	0
  2077  048C  34FF               	retlw	255
  2078  048D  34FF               	retlw	255
  2079  048E  34FF               	retlw	255
  2080  048F  3400               	retlw	0
  2081  0490  3400               	retlw	0
  2082  0491  3400               	retlw	0
  2083  0492  3400               	retlw	0
  2084  0493  3400               	retlw	0
  2085  0494  3400               	retlw	0
  2086  0495  3400               	retlw	0
  2087  0496  3400               	retlw	0
  2088  0497  3400               	retlw	0
  2089  0498  3400               	retlw	0
  2090  0499  3400               	retlw	0
  2091  049A  3400               	retlw	0
  2092  049B  3400               	retlw	0
  2093  049C  3400               	retlw	0
  2094  049D  3400               	retlw	0
  2095  049E  3400               	retlw	0
  2096  049F  3400               	retlw	0
  2097                           
  2098                           	psect	stringtext
  2099  0200                     __pstringtext:	
  2100  0200                     _CC2500_registers_address:	
  2101  0200  3403               	retlw	3
  2102  0201  3416               	retlw	22
  2103  0202  3417               	retlw	23
  2104  0203  341E               	retlw	30
  2105  0204  341F               	retlw	31
  2106  0205  3420               	retlw	32
  2107  0206  342A               	retlw	42
  2108  0207  342B               	retlw	43
  2109  0208  340B               	retlw	11
  2110  0209  340C               	retlw	12
  2111  020A  340D               	retlw	13
  2112  020B  340E               	retlw	14
  2113  020C  340F               	retlw	15
  2114  020D  3410               	retlw	16
  2115  020E  3411               	retlw	17
  2116  020F  3412               	retlw	18
  2117  0210  3413               	retlw	19
  2118  0211  3414               	retlw	20
  2119  0212  340A               	retlw	10
  2120  0213  3415               	retlw	21
  2121  0214  3421               	retlw	33
  2122  0215  3422               	retlw	34
  2123  0216  3418               	retlw	24
  2124  0217  3419               	retlw	25
  2125  0218  341A               	retlw	26
  2126  0219  341B               	retlw	27
  2127  021A  341C               	retlw	28
  2128  021B  341D               	retlw	29
  2129  021C  3423               	retlw	35
  2130  021D  3424               	retlw	36
  2131  021E  3425               	retlw	37
  2132  021F  3426               	retlw	38
  2133  0220  3429               	retlw	41
  2134  0221  342C               	retlw	44
  2135  0222  342D               	retlw	45
  2136  0223  342E               	retlw	46
  2137  0224  3400               	retlw	0
  2138  0225  3401               	retlw	1
  2139  0226  3402               	retlw	2
  2140  0227  3407               	retlw	7
  2141  0228  3408               	retlw	8
  2142  0229  3409               	retlw	9
  2143  022A  3406               	retlw	6
  2144  022B  3404               	retlw	4
  2145  022C  3405               	retlw	5
  2146  022D  3427               	retlw	39
  2147  022E  3428               	retlw	40
  2148  022F                     __end_of_CC2500_registers_address:	
  2149  022F                     _CC2500_rfSettings:	
  2150  022F  3407               	retlw	7
  2151  0230  3407               	retlw	7
  2152  0231  3430               	retlw	48
  2153  0232  3487               	retlw	135
  2154  0233  346B               	retlw	107
  2155  0234  34F8               	retlw	248
  2156  0235  347F               	retlw	127
  2157  0236  343F               	retlw	63
  2158  0237  3409               	retlw	9
  2159  0238  3400               	retlw	0
  2160  0239  345C               	retlw	92
  2161  023A  34A7               	retlw	167
  2162  023B  3462               	retlw	98
  2163  023C  3486               	retlw	134
  2164  023D  3483               	retlw	131
  2165  023E  3403               	retlw	3
  2166  023F  3422               	retlw	34
  2167  0240  34F8               	retlw	248
  2168  0241  3400               	retlw	0
  2169  0242  3444               	retlw	68
  2170  0243  34B6               	retlw	182
  2171  0244  3410               	retlw	16
  2172  0245  3418               	retlw	24
  2173  0246  341D               	retlw	29
  2174  0247  341C               	retlw	28
  2175  0248  34C7               	retlw	199
  2176  0249  3400               	retlw	0
  2177  024A  34B2               	retlw	178
  2178  024B  34EA               	retlw	234
  2179  024C  340A               	retlw	10
  2180  024D  3400               	retlw	0
  2181  024E  3411               	retlw	17
  2182  024F  3459               	retlw	89
  2183  0250  3488               	retlw	136
  2184  0251  3431               	retlw	49
  2185  0252  340B               	retlw	11
  2186  0253  342F               	retlw	47
  2187  0254  342E               	retlw	46
  2188  0255  3406               	retlw	6
  2189  0256  3404               	retlw	4
  2190  0257  3405               	retlw	5
  2191  0258  3400               	retlw	0
  2192  0259  3430               	retlw	48
  2193  025A  34D3               	retlw	211
  2194  025B  3491               	retlw	145
  2195  025C  3441               	retlw	65
  2196  025D  3400               	retlw	0
  2197  025E                     __end_of_CC2500_rfSettings:	
  2198  025E                     _CC2500_patable_vaule:	
  2199  025E  34FE               	retlw	254
  2200  025F  34FE               	retlw	254
  2201  0260  34FE               	retlw	254
  2202  0261  34FE               	retlw	254
  2203  0262  34FE               	retlw	254
  2204  0263  34FE               	retlw	254
  2205  0264  34FE               	retlw	254
  2206  0265  34FE               	retlw	254
  2207  0266                     __end_of_CC2500_patable_vaule:	
  2208                           
  2209                           	psect	nvCOMMON
  2210  0079                     __pnvCOMMON:	
  2211  0079                     _product:	
  2212  0079                     	ds	1
  2213                           
  2214                           	psect	nvBANK0
  2215  005E                     __pnvBANK0:	
  2216  005E                     _Tx_Length:	
  2217  005E                     	ds	1
  2218  000C                     _PORTA	set	12
  2219  000D                     _PORTB	set	13
  2220  000E                     _PORTC	set	14
  2221  0018                     _T1CON	set	24
  2222  0017                     _TMR1H	set	23
  2223  0016                     _TMR1L	set	22
  2224  005F                     _GIE	set	95
  2225  005E                     _PEIE	set	94
  2226  0060                     _RA0	set	96
  2227  0061                     _RA1	set	97
  2228  0062                     _RA2	set	98
  2229  0070                     _RC0	set	112
  2230  0071                     _RC1	set	113
  2231  0073                     _RC3	set	115
  2232  0074                     _RC4	set	116
  2233  0075                     _RC5	set	117
  2234  008D                     _RCIF	set	141
  2235  0088                     _TMR1IF	set	136
  2236  008C                     _TXIF	set	140
  2237  0099                     _OSCCON	set	153
  2238  008C                     _TRISA	set	140
  2239  008D                     _TRISB	set	141
  2240  008E                     _TRISC	set	142
  2241  048D                     _RCIE	set	1165
  2242  0488                     _TMR1IE	set	1160
  2243  0476                     _TRISC6	set	1142
  2244  0477                     _TRISC7	set	1143
  2245  048C                     _TXIE	set	1164
  2246  010C                     _LATA	set	268
  2247  010D                     _LATB	set	269
  2248  010E                     _LATC	set	270
  2249  018C                     _ANSELA	set	396
  2250  018D                     _ANSELB	set	397
  2251  018E                     _ANSELC	set	398
  2252  0199                     _RCREG	set	409
  2253  019D                     _RCSTA	set	413
  2254  019B                     _SPBRG	set	411
  2255  019C                     _SPBRGH	set	412
  2256  019A                     _TXREG	set	410
  2257  019E                     _TXSTA	set	414
  2258  0CFB                     _BRG16	set	3323
  2259  0CEE                     _RX9	set	3310
  2260  0CF6                     _TX9	set	3318
  2261                           
  2262                           ; #config settings
  2263  0000                     
  2264                           	psect	cinit
  2265  0015                     start_initialization:	
  2266  0015                     __initialization:	
  2267                           
  2268                           ; Clear objects allocated to BITCOMMON
  2269  0015  01F6               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  2270                           
  2271                           ; Clear objects allocated to COMMON
  2272  0016  01F7               	clrf	__pbssCOMMON& (0+127)
  2273  0017  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  2274                           
  2275                           ; Clear objects allocated to BANK0
  2276  0018  3020               	movlw	low __pbssBANK0
  2277  0019  0084               	movwf	4
  2278  001A  3000               	movlw	high __pbssBANK0
  2279  001B  0085               	movwf	5
  2280  001C  3032               	movlw	50
  2281  001D  3186  2612  3180   	fcall	clear_ram0
  2282                           
  2283                           ; Clear objects allocated to BANK1
  2284  0020  30C0               	movlw	low __pbssBANK1
  2285  0021  0084               	movwf	4
  2286  0022  3000               	movlw	high __pbssBANK1
  2287  0023  0085               	movwf	5
  2288  0024  301E               	movlw	30
  2289  0025  3186  2612  3180   	fcall	clear_ram0
  2290                           
  2291                           ; Initialize objects allocated to BANK1
  2292  0028  3080               	movlw	low __pidataBANK1
  2293  0029  0084               	movwf	4
  2294  002A  3084               	movlw	(high __pidataBANK1)| (0+128)
  2295  002B  0085               	movwf	5
  2296  002C  30A0               	movlw	low __pdataBANK1
  2297  002D  0086               	movwf	6
  2298  002E  3000               	movlw	high __pdataBANK1
  2299  002F  0087               	movwf	7
  2300  0030  3020               	movlw	32
  2301  0031  3186  2618         	fcall	init_ram
  2302  0033                     end_of_initialization:	
  2303                           ;End of C runtime variable initialization code
  2304                           
  2305  0033                     __end_of__initialization:	
  2306  0033  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  2307  0034  0020               	movlb	0
  2308  0035  3184  2C5D         	ljmp	_main	;jump to C main() function
  2309                           
  2310                           	psect	bitbssCOMMON
  2311  03B0                     __pbitbssCOMMON:	
  2312  03B0                     _Receive_OK:	
  2313  03B0                     	ds	1
  2314  03B1                     _Transceive_OK:	
  2315  03B1                     	ds	1
  2316                           
  2317                           	psect	bssCOMMON
  2318  0077                     __pbssCOMMON:	
  2319  0077                     _SPI0Buffer:	
  2320  0077                     	ds	1
  2321  0078                     _s_data:	
  2322  0078                     	ds	1
  2323                           
  2324                           	psect	bssBANK0
  2325  0020                     __pbssBANK0:	
  2326  0020                     _myMain:	
  2327  0020                     	ds	15
  2328  002F                     _RF1:	
  2329  002F                     	ds	12
  2330  003B                     _Timer1:	
  2331  003B                     	ds	3
  2332  003E                     _RF_Count:	
  2333  003E                     	ds	2
  2334  0040                     _CRC:	
  2335  0040                     	ds	1
  2336  0041                     _RSSI:	
  2337  0041                     	ds	1
  2338  0042                     _Rx_Length:	
  2339  0042                     	ds	1
  2340  0043                     _SwDetect:	
  2341  0043                     	ds	1
  2342  0044                     _r_address:	
  2343  0044                     	ds	1
  2344  0045                     _r_data:	
  2345  0045                     	ds	1
  2346  0046                     _UART:	
  2347  0046                     	ds	12
  2348                           
  2349                           	psect	bssBANK1
  2350  00C0                     __pbssBANK1:	
  2351  00C0                     _RF_Data:	
  2352  00C0                     	ds	30
  2353                           
  2354                           	psect	dataBANK1
  2355  00A0                     __pdataBANK1:	
  2356  00A0                     __product:	
  2357  00A0                     	ds	32
  2358                           
  2359                           	psect	clrtext
  2360  0612                     clear_ram0:	
  2361                           ;	Called with FSR0 containing the base address, and
  2362                           ;	WREG with the size to clear
  2363                           
  2364  0612  0064               	clrwdt	;clear the watchdog before getting into this loop
  2365  0613                     clrloop0:	
  2366  0613  0180               	clrf	0	;clear RAM location pointed to by FSR
  2367  0614  3101               	addfsr 0,1
  2368  0615  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2369  0616  2E13               	goto	clrloop0	;have we reached the end yet?
  2370  0617  3400               	retlw	0	;all done for this memory range, return
  2371                           
  2372                           	psect	inittext
  2373  0618                     init_ram:	
  2374  0618  00FE               	movwf	126
  2375  0619                     initloop:	
  2376  0619  0012               	moviw fsr0++
  2377  061A  001E               	movwi fsr1++
  2378  061B  0BFE               	decfsz	126,f
  2379  061C  2E19               	goto	initloop
  2380  061D  3400               	retlw	0
  2381                           
  2382                           	psect	cstackCOMMON
  2383  0070                     __pcstackCOMMON:	
  2384  0070                     ?_Timeout_Counter:	
  2385  0070                     ?_set_TimeoutCleared:	
  2386                           ; 0 bytes @ 0x0
  2387                           
  2388  0070                     ?_CC2500_WriteByte:	
  2389                           ; 0 bytes @ 0x0
  2390                           
  2391  0070                     ?_CC2500_WriteCommand:	
  2392                           ; 0 bytes @ 0x0
  2393                           
  2394  0070                     ?_CC2500_PowerRST:	
  2395                           ; 0 bytes @ 0x0
  2396                           
  2397  0070                     ?_CC2500_InitSetREG:	
  2398                           ; 0 bytes @ 0x0
  2399                           
  2400  0070                     ?_CC2500_InitPATable:	
  2401                           ; 0 bytes @ 0x0
  2402                           
  2403  0070                     ?_CC2500_ClearTXFIFO:	
  2404                           ; 0 bytes @ 0x0
  2405                           
  2406  0070                     ?_CC2500_ClearRXFIFO:	
  2407                           ; 0 bytes @ 0x0
  2408                           
  2409  0070                     ?_CC2500_FrequencyCabr:	
  2410                           ; 0 bytes @ 0x0
  2411                           
  2412  0070                     ?_CC2500_SIDLEMode:	
  2413                           ; 0 bytes @ 0x0
  2414                           
  2415  0070                     ?_Fosc_Set:	
  2416                           ; 0 bytes @ 0x0
  2417                           
  2418  0070                     ?_IO_Set:	
  2419                           ; 0 bytes @ 0x0
  2420                           
  2421  0070                     ?_TMR1_Set:	
  2422                           ; 0 bytes @ 0x0
  2423                           
  2424  0070                     ?_UART_Set:	
  2425                           ; 0 bytes @ 0x0
  2426                           
  2427  0070                     ?_TMR1_ISR:	
  2428                           ; 0 bytes @ 0x0
  2429                           
  2430  0070                     ??_TMR1_ISR:	
  2431                           ; 0 bytes @ 0x0
  2432                           
  2433  0070                     ?_UART_ISR:	
  2434                           ; 0 bytes @ 0x0
  2435                           
  2436  0070                     ??_UART_ISR:	
  2437                           ; 0 bytes @ 0x0
  2438                           
  2439  0070                     ??_getch:	
  2440                           ; 0 bytes @ 0x0
  2441                           
  2442  0070                     ?_UART_Receive:	
  2443                           ; 0 bytes @ 0x0
  2444                           
  2445  0070                     ?_UART_Transmit:	
  2446                           ; 0 bytes @ 0x0
  2447                           
  2448  0070                     ?_putch:	
  2449                           ; 0 bytes @ 0x0
  2450                           
  2451  0070                     ?_setTxData:	
  2452                           ; 0 bytes @ 0x0
  2453                           
  2454  0070                     ?_myMain_Initialization:	
  2455                           ; 0 bytes @ 0x0
  2456                           
  2457  0070                     ?_RF_Initialization:	
  2458                           ; 0 bytes @ 0x0
  2459                           
  2460  0070                     ?_myUARTtoRF_Initialization:	
  2461                           ; 0 bytes @ 0x0
  2462                           
  2463  0070                     ?_my_MainTimer:	
  2464                           ; 0 bytes @ 0x0
  2465                           
  2466  0070                     ?_RF_Main:	
  2467                           ; 0 bytes @ 0x0
  2468                           
  2469  0070                     ?_myUARTtoRF_Main:	
  2470                           ; 0 bytes @ 0x0
  2471                           
  2472  0070                     ?_setRF_Initialization:	
  2473                           ; 0 bytes @ 0x0
  2474                           
  2475  0070                     ?_setRF_Main:	
  2476                           ; 0 bytes @ 0x0
  2477                           
  2478  0070                     ?_RF_RxDisable:	
  2479                           ; 0 bytes @ 0x0
  2480                           
  2481  0070                     ?_getRxData:	
  2482                           ; 0 bytes @ 0x0
  2483                           
  2484  0070                     ?_setLog_Code:	
  2485                           ; 0 bytes @ 0x0
  2486                           
  2487  0070                     ?_setControl_Lights_Table:	
  2488                           ; 0 bytes @ 0x0
  2489                           
  2490  0070                     ?_CC2500_TxData:	
  2491                           ; 0 bytes @ 0x0
  2492                           
  2493  0070                     ?_CC2500_PowerOnInitial:	
  2494                           ; 0 bytes @ 0x0
  2495                           
  2496  0070                     ?_Mcu_Initialization:	
  2497                           ; 0 bytes @ 0x0
  2498                           
  2499  0070                     ?_ISR:	
  2500                           ; 0 bytes @ 0x0
  2501                           
  2502  0070                     ?_UART_Main:	
  2503                           ; 0 bytes @ 0x0
  2504                           
  2505  0070                     ?_getch:	
  2506                           ; 0 bytes @ 0x0
  2507                           
  2508  0070                     ?_getMain_All_Error_Status:	
  2509                           ; 1 bytes @ 0x0
  2510                           
  2511  0070                     getMain_All_Error_Status@command:	
  2512                           ; 1 bytes @ 0x0
  2513                           
  2514                           
  2515                           ; 1 bytes @ 0x0
  2516  0070                     	ds	1
  2517  0071                     UART_ISR@i:	
  2518                           
  2519                           ; 2 bytes @ 0x1
  2520  0071                     	ds	2
  2521  0073                     ??_ISR:	
  2522                           
  2523                           ; 0 bytes @ 0x3
  2524  0073                     	ds	1
  2525  0074                     ??_Timeout_Counter:	
  2526  0074                     ??_set_TimeoutCleared:	
  2527                           ; 0 bytes @ 0x4
  2528                           
  2529  0074                     ??_CC2500_WriteByte:	
  2530                           ; 0 bytes @ 0x4
  2531                           
  2532  0074                     ?_DelayTime_1us:	
  2533                           ; 0 bytes @ 0x4
  2534                           
  2535  0074                     ??_Fosc_Set:	
  2536                           ; 0 bytes @ 0x4
  2537                           
  2538  0074                     ??_IO_Set:	
  2539                           ; 0 bytes @ 0x4
  2540                           
  2541  0074                     ??_TMR1_Set:	
  2542                           ; 0 bytes @ 0x4
  2543                           
  2544  0074                     ??_UART_Set:	
  2545                           ; 0 bytes @ 0x4
  2546                           
  2547  0074                     ??_putch:	
  2548                           ; 0 bytes @ 0x4
  2549                           
  2550  0074                     ??_setTxData:	
  2551                           ; 0 bytes @ 0x4
  2552                           
  2553  0074                     ??_myMain_Initialization:	
  2554                           ; 0 bytes @ 0x4
  2555                           
  2556  0074                     ??_myUARTtoRF_Initialization:	
  2557                           ; 0 bytes @ 0x4
  2558                           
  2559  0074                     ??_my_MainTimer:	
  2560                           ; 0 bytes @ 0x4
  2561                           
  2562  0074                     ??_myUARTtoRF_Main:	
  2563                           ; 0 bytes @ 0x4
  2564                           
  2565  0074                     ??_setRF_Initialization:	
  2566                           ; 0 bytes @ 0x4
  2567                           
  2568  0074                     ??_setLog_Code:	
  2569                           ; 0 bytes @ 0x4
  2570                           
  2571  0074                     ??_Mcu_Initialization:	
  2572                           ; 0 bytes @ 0x4
  2573                           
  2574  0074                     ??_getMain_All_Error_Status:	
  2575                           ; 0 bytes @ 0x4
  2576                           
  2577  0074                     putch@byte:	
  2578                           ; 0 bytes @ 0x4
  2579                           
  2580  0074                     getMain_All_Error_Status@status:	
  2581                           ; 1 bytes @ 0x4
  2582                           
  2583  0074                     DelayTime_1us@count:	
  2584                           ; 1 bytes @ 0x4
  2585                           
  2586                           
  2587                           ; 2 bytes @ 0x4
  2588  0074                     	ds	1
  2589  0075                     ??_UART_Receive:	
  2590  0075                     ??_UART_Transmit:	
  2591                           ; 0 bytes @ 0x5
  2592                           
  2593  0075                     ??_RF_Initialization:	
  2594                           ; 0 bytes @ 0x5
  2595                           
  2596  0075                     ??_getRxData:	
  2597                           ; 0 bytes @ 0x5
  2598                           
  2599  0075                     ??_setControl_Lights_Table:	
  2600                           ; 0 bytes @ 0x5
  2601                           
  2602  0075                     CC2500_WriteByte@loop_a:	
  2603                           ; 0 bytes @ 0x5
  2604                           
  2605                           
  2606                           ; 1 bytes @ 0x5
  2607  0075                     	ds	1
  2608  0076                     ??_CC2500_ClearTXFIFO:	
  2609  0076                     ??_CC2500_ClearRXFIFO:	
  2610                           ; 0 bytes @ 0x6
  2611                           
  2612  0076                     ??_CC2500_FrequencyCabr:	
  2613                           ; 0 bytes @ 0x6
  2614                           
  2615  0076                     ??_CC2500_SIDLEMode:	
  2616                           ; 0 bytes @ 0x6
  2617                           
  2618  0076                     ??_DelayTime_1us:	
  2619                           ; 0 bytes @ 0x6
  2620                           
  2621  0076                     ??_RF_Main:	
  2622                           ; 0 bytes @ 0x6
  2623                           
  2624  0076                     ??_RF_RxDisable:	
  2625                           ; 0 bytes @ 0x6
  2626                           
  2627  0076                     ??_CC2500_PowerOnInitial:	
  2628                           ; 0 bytes @ 0x6
  2629                           
  2630  0076                     ??_UART_Main:	
  2631                           ; 0 bytes @ 0x6
  2632                           
  2633  0076                     ??_main:	
  2634                           ; 0 bytes @ 0x6
  2635                           
  2636                           
  2637                           	psect	cstackBANK0
  2638  0052                     __pcstackBANK0:	
  2639                           ; 0 bytes @ 0x6
  2640                           
  2641  0052                     ??_CC2500_WriteCommand:	
  2642  0052                     ?_CC2500_WriteREG:	
  2643                           ; 0 bytes @ 0x0
  2644                           
  2645  0052                     CC2500_WriteREG@value:	
  2646                           ; 0 bytes @ 0x0
  2647                           
  2648  0052                     getRxData@error:	
  2649                           ; 1 bytes @ 0x0
  2650                           
  2651  0052                     DelayTime_1us@i:	
  2652                           ; 1 bytes @ 0x0
  2653                           
  2654  0052                     UART_Transmit@i:	
  2655                           ; 2 bytes @ 0x0
  2656                           
  2657                           
  2658                           ; 2 bytes @ 0x0
  2659  0052                     	ds	1
  2660  0053                     ??_CC2500_WriteREG:	
  2661  0053                     CC2500_WriteCommand@command:	
  2662                           ; 0 bytes @ 0x1
  2663                           
  2664                           
  2665                           ; 1 bytes @ 0x1
  2666  0053                     	ds	1
  2667  0054                     ??_CC2500_TxData:	
  2668  0054                     CC2500_WriteREG@w_addr:	
  2669                           ; 0 bytes @ 0x2
  2670                           
  2671  0054                     DelayTime_1us@j:	
  2672                           ; 1 bytes @ 0x2
  2673                           
  2674                           
  2675                           ; 2 bytes @ 0x2
  2676  0054                     	ds	1
  2677  0055                     ??_CC2500_InitSetREG:	
  2678  0055                     ??_CC2500_InitPATable:	
  2679                           ; 0 bytes @ 0x3
  2680                           
  2681  0055                     CC2500_TxData@loop_e:	
  2682                           ; 0 bytes @ 0x3
  2683                           
  2684                           
  2685                           ; 1 bytes @ 0x3
  2686  0055                     	ds	1
  2687  0056                     ??_CC2500_PowerRST:	
  2688  0056                     ??_setRF_Main:	
  2689                           ; 0 bytes @ 0x4
  2690                           
  2691  0056                     CC2500_InitSetREG@temp1:	
  2692                           ; 0 bytes @ 0x4
  2693                           
  2694  0056                     CC2500_InitPATable@temp:	
  2695                           ; 1 bytes @ 0x4
  2696                           
  2697                           
  2698                           ; 1 bytes @ 0x4
  2699  0056                     	ds	1
  2700  0057                     CC2500_InitSetREG@temp2:	
  2701  0057                     CC2500_InitPATable@loop_d:	
  2702                           ; 1 bytes @ 0x5
  2703                           
  2704  0057                     setRF_Main@loop_f:	
  2705                           ; 1 bytes @ 0x5
  2706                           
  2707                           
  2708                           ; 1 bytes @ 0x5
  2709  0057                     	ds	1
  2710  0058                     CC2500_InitSetREG@loop_c:	
  2711  0058                     setRF_Main@Receive_OK:	
  2712                           ; 1 bytes @ 0x6
  2713                           
  2714                           
  2715                           ; 1 bytes @ 0x6
  2716  0058                     	ds	1
  2717  0059                     setRF_Main@error:	
  2718                           
  2719                           ; 1 bytes @ 0x7
  2720  0059                     	ds	1
  2721  005A                     ?_main:	
  2722  005A                     main@argc:	
  2723                           ; 2 bytes @ 0x8
  2724                           
  2725                           
  2726                           ; 2 bytes @ 0x8
  2727  005A                     	ds	2
  2728  005C                     main@argv:	
  2729                           
  2730                           ; 2 bytes @ 0xA
  2731  005C                     	ds	2
  2732                           
  2733                           	psect	maintext
  2734  045D                     __pmaintext:	
  2735 ;;
  2736 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2737 ;;
  2738 ;; *************** function _main *****************
  2739 ;; Defined at:
  2740 ;;		line 7 in file "../src/Main_B1.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;  argc            2    8[BANK0 ] int 
  2743 ;;  argv            2   10[BANK0 ] PTR PTR unsigned char 
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;		None
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  2    8[BANK0 ] int 
  2748 ;; Registers used:
  2749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2750 ;; Tracked objects:
  2751 ;;		On entry : 17F/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2755 ;;      Params:         0       4       0       0       0       0       0       0
  2756 ;;      Locals:         0       0       0       0       0       0       0       0
  2757 ;;      Temps:          0       0       0       0       0       0       0       0
  2758 ;;      Totals:         0       4       0       0       0       0       0       0
  2759 ;;Total ram usage:        4 bytes
  2760 ;; Hardware stack levels required when called:    8
  2761 ;; This function calls:
  2762 ;;		_CC2500_PowerOnInitial
  2763 ;;		_Mcu_Initialization
  2764 ;;		_RF_Initialization
  2765 ;;		_RF_Main
  2766 ;;		_UART_Main
  2767 ;;		_myMain_Initialization
  2768 ;;		_myUARTtoRF_Initialization
  2769 ;;		_myUARTtoRF_Main
  2770 ;;		_my_MainTimer
  2771 ;; This function is called by:
  2772 ;;		Startup code after reset
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776                           
  2777                           ;psect for function _main
  2778  045D                     _main:	
  2779                           
  2780                           ;Main_B1.c: 8: myMain_Initialization();
  2781                           
  2782                           ;incstack = 0
  2783                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2784  045D  3185  25C3  3184   	fcall	_myMain_Initialization
  2785                           
  2786                           ;Main_B1.c: 9: Mcu_Initialization();
  2787  0460  3185  25DD  3184   	fcall	_Mcu_Initialization
  2788                           
  2789                           ;Main_B1.c: 10: ;;
  2790                           ;Main_B1.c: 11: ;;
  2791                           ;Main_B1.c: 12: ;;
  2792                           ;Main_B1.c: 14: ;;
  2793                           ;Main_B1.c: 15: ;;
  2794                           ;Main_B1.c: 16: ;;
  2795                           ;Main_B1.c: 17: ;;
  2796                           ;Main_B1.c: 18: ;;
  2797                           ;Main_B1.c: 20: ;;
  2798                           ;Main_B1.c: 21: ;;
  2799                           ;Main_B1.c: 22: ;;
  2800                           ;Main_B1.c: 23: ;;
  2801                           ;Main_B1.c: 24: ;;
  2802                           ;Main_B1.c: 25: RF_Initialization();
  2803  0463  3186  2644  3184   	fcall	_RF_Initialization
  2804                           
  2805                           ;Main_B1.c: 26: CC2500_PowerOnInitial();
  2806  0466  3185  254E  3184   	fcall	_CC2500_PowerOnInitial
  2807                           
  2808                           ;Main_B1.c: 27: ;;
  2809                           ;Main_B1.c: 28: myUARTtoRF_Initialization();
  2810  0469  3186  2624  3184   	fcall	_myUARTtoRF_Initialization
  2811  046C                     l674:	
  2812                           ;Main_B1.c: 30: while (1) {
  2813                           
  2814                           
  2815                           ;Main_B1.c: 57: }
  2816                           ;Main_B1.c: 93: if (Timer1.Timeout == 1) {
  2817  046C  0020               	movlb	0	; select bank0
  2818  046D  1C3B               	btfss	_Timer1,0
  2819  046E  2C6C               	goto	l674
  2820                           
  2821                           ;Main_B1.c: 94: Timer1.Timeout = 0;
  2822  046F  103B               	bcf	_Timer1,0
  2823                           
  2824                           ;Main_B1.c: 95: my_MainTimer();
  2825  0470  3182  22C0  3184   	fcall	_my_MainTimer
  2826                           
  2827                           ;Main_B1.c: 96: ;;
  2828                           ;Main_B1.c: 97: ;;
  2829                           ;Main_B1.c: 98: UART_Main();
  2830  0473  3185  25D0  3184   	fcall	_UART_Main
  2831                           
  2832                           ;Main_B1.c: 99: if (myMain.PowerON == 1) {
  2833  0476  0020               	movlb	0	; select bank0
  2834  0477  1C20               	btfss	_myMain,0
  2835  0478  2C6C               	goto	l674
  2836                           
  2837                           ;Main_B1.c: 100: ;;
  2838                           ;Main_B1.c: 102: ;;
  2839                           ;Main_B1.c: 103: ;;
  2840                           ;Main_B1.c: 105: ;;
  2841                           ;Main_B1.c: 106: ;;
  2842                           ;Main_B1.c: 107: ;;
  2843                           ;Main_B1.c: 108: ;;
  2844                           ;Main_B1.c: 110: ;;
  2845                           ;Main_B1.c: 111: ;;
  2846                           ;Main_B1.c: 112: ;;
  2847                           ;Main_B1.c: 113: ;;
  2848                           ;Main_B1.c: 114: ;;
  2849                           ;Main_B1.c: 116: RF_Main();
  2850  0479  3186  263E  3184   	fcall	_RF_Main
  2851                           
  2852                           ;Main_B1.c: 117: ;;
  2853                           ;Main_B1.c: 118: ;;
  2854                           ;Main_B1.c: 119: myUARTtoRF_Main();
  2855  047C  3186  2647  3184   	fcall	_myUARTtoRF_Main
  2856  047F  2C6C               	goto	l674
  2857  0480                     __end_of_main:	
  2858                           ;Main_B1.c: 126: }
  2859                           ;Main_B1.c: 127: }
  2860                           ;Main_B1.c: 161: }
  2861                           ;Main_B1.c: 162: return (0);
  2862                           ;	Return value of _main is never used
  2863                           
  2864                           
  2865                           	psect	text1
  2866  02C0                     __ptext1:	
  2867 ;; *************** function _my_MainTimer *****************
  2868 ;; Defined at:
  2869 ;;		line 181 in file "../src/Main_B1.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;		None
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;		None
  2874 ;; Return value:  Size  Location     Type
  2875 ;;		None               void
  2876 ;; Registers used:
  2877 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2883 ;;      Params:         0       0       0       0       0       0       0       0
  2884 ;;      Locals:         0       0       0       0       0       0       0       0
  2885 ;;      Temps:          0       0       0       0       0       0       0       0
  2886 ;;      Totals:         0       0       0       0       0       0       0       0
  2887 ;;Total ram usage:        0 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; Hardware stack levels required when called:    3
  2890 ;; This function calls:
  2891 ;;		Nothing
  2892 ;; This function is called by:
  2893 ;;		_main
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           
  2898                           ;psect for function _my_MainTimer
  2899  02C0                     _my_MainTimer:	
  2900                           
  2901                           ;Main_B1.c: 183: if (myMain.PowerON == 0) {
  2902                           
  2903                           ;incstack = 0
  2904                           ; Regs used in _my_MainTimer: [wreg+fsr1l+fsr1h+status,2+status,0]
  2905  02C0  0020               	movlb	0	; select bank0
  2906  02C1  1820               	btfsc	_myMain,0
  2907  02C2  2AD8               	goto	l3063
  2908                           
  2909                           ;Main_B1.c: 184: myMain.PowerCount++;
  2910  02C3  3001               	movlw	1
  2911  02C4  07A1               	addwf	_myMain+1,f
  2912  02C5  3000               	movlw	0
  2913  02C6  3DA2               	addwfc	_myMain+2,f
  2914                           
  2915                           ;Main_B1.c: 185: if (myMain.PowerCount == 150)
  2916  02C7  3001               	movlw	1
  2917  02C8  3E20               	addlw	_myMain& (0+255)
  2918  02C9  0086               	movwf	6
  2919  02CA  0187               	clrf	7
  2920  02CB  3F40               	moviw [0]fsr1
  2921  02CC  3A96               	xorlw	150
  2922  02CD  1D03               	skipz
  2923  02CE  2AD1               	goto	u1955
  2924  02CF  3F41               	moviw [1]fsr1
  2925  02D0  3A00               	xorlw	0
  2926  02D1                     u1955:	
  2927  02D1  1D03               	skipz
  2928  02D2  2B01               	goto	l3079
  2929                           
  2930                           ;Main_B1.c: 186: {
  2931                           ;Main_B1.c: 187: myMain.PowerCount = 0;
  2932  02D3  01A1               	clrf	_myMain+1
  2933  02D4  01A2               	clrf	_myMain+2
  2934                           
  2935                           ;Main_B1.c: 188: myMain.PowerON = 1;
  2936  02D5  1420               	bsf	_myMain,0
  2937                           
  2938                           ;Main_B1.c: 193: ;;
  2939                           ;Main_B1.c: 194: myMain.SelfTest = 1;
  2940  02D6  1620               	bsf	_myMain,4
  2941                           
  2942                           ;Main_B1.c: 203: }
  2943                           ;Main_B1.c: 204: } else {
  2944  02D7  2B01               	goto	l3079
  2945  02D8                     l3063:	
  2946                           
  2947                           ;Main_B1.c: 205: myMain.PowerCount++;
  2948  02D8  3001               	movlw	1
  2949  02D9  07A1               	addwf	_myMain+1,f
  2950  02DA  3000               	movlw	0
  2951  02DB  3DA2               	addwfc	_myMain+2,f
  2952                           
  2953                           ;Main_B1.c: 206: if (myMain.PowerCount == 100) {
  2954  02DC  3001               	movlw	1
  2955  02DD  3E20               	addlw	_myMain& (0+255)
  2956  02DE  0086               	movwf	6
  2957  02DF  0187               	clrf	7
  2958  02E0  3F40               	moviw [0]fsr1
  2959  02E1  3A64               	xorlw	100
  2960  02E2  1D03               	skipz
  2961  02E3  2AE6               	goto	u1965
  2962  02E4  3F41               	moviw [1]fsr1
  2963  02E5  3A00               	xorlw	0
  2964  02E6                     u1965:	
  2965  02E6  1D03               	skipz
  2966  02E7  2AEA               	goto	l3069
  2967                           
  2968                           ;Main_B1.c: 207: myMain.PowerCount = 0;
  2969  02E8  01A1               	clrf	_myMain+1
  2970  02E9  01A2               	clrf	_myMain+2
  2971  02EA                     l3069:	
  2972                           
  2973                           ;Main_B1.c: 215: }
  2974                           ;Main_B1.c: 223: myMain.Count1++;
  2975  02EA  3001               	movlw	1
  2976  02EB  07A5               	addwf	_myMain+5,f
  2977  02EC  3000               	movlw	0
  2978  02ED  3DA6               	addwfc	_myMain+6,f
  2979                           
  2980                           ;Main_B1.c: 224: if (myMain.Count1 == 100)
  2981  02EE  3005               	movlw	5
  2982  02EF  3E20               	addlw	_myMain& (0+255)
  2983  02F0  0086               	movwf	6
  2984  02F1  0187               	clrf	7
  2985  02F2  3F40               	moviw [0]fsr1
  2986  02F3  3A64               	xorlw	100
  2987  02F4  1D03               	skipz
  2988  02F5  2AF8               	goto	u1975
  2989  02F6  3F41               	moviw [1]fsr1
  2990  02F7  3A00               	xorlw	0
  2991  02F8                     u1975:	
  2992  02F8  1D03               	skipz
  2993  02F9  2B01               	goto	l3079
  2994                           
  2995                           ;Main_B1.c: 225: {
  2996                           ;Main_B1.c: 226: myMain.Count1 = 0;
  2997  02FA  01A5               	clrf	_myMain+5
  2998  02FB  01A6               	clrf	_myMain+6
  2999                           
  3000                           ;Main_B1.c: 238: if (myMain.Flag) {
  3001  02FC  1CA0               	btfss	_myMain,1
  3002  02FD  2B00               	goto	l690
  3003                           
  3004                           ;Main_B1.c: 239: myMain.Flag = 0;
  3005  02FE  10A0               	bcf	_myMain,1
  3006                           
  3007                           ;Main_B1.c: 248: } else {
  3008  02FF  2B01               	goto	l3079
  3009  0300                     l690:	
  3010                           
  3011                           ;Main_B1.c: 249: myMain.Flag = 1;
  3012  0300  14A0               	bsf	_myMain,1
  3013  0301                     l3079:	
  3014                           
  3015                           ;Main_B1.c: 258: }
  3016                           ;Main_B1.c: 259: }
  3017                           ;Main_B1.c: 261: }
  3018                           ;Main_B1.c: 263: myMain.Count2++;
  3019  0301  3001               	movlw	1
  3020  0302  07A7               	addwf	_myMain+7,f
  3021  0303  3000               	movlw	0
  3022  0304  3DA8               	addwfc	_myMain+8,f
  3023                           
  3024                           ;Main_B1.c: 264: if (myMain.Count2 == 100) {
  3025  0305  3007               	movlw	7
  3026  0306  3E20               	addlw	_myMain& (0+255)
  3027  0307  0086               	movwf	6
  3028  0308  0187               	clrf	7
  3029  0309  3F40               	moviw [0]fsr1
  3030  030A  3A64               	xorlw	100
  3031  030B  1D03               	skipz
  3032  030C  2B0F               	goto	u1995
  3033  030D  3F41               	moviw [1]fsr1
  3034  030E  3A00               	xorlw	0
  3035  030F                     u1995:	
  3036  030F  1D03               	skipz
  3037  0310  0008               	return
  3038                           
  3039                           ;Main_B1.c: 265: myMain.Count2 = 0;
  3040  0311  01A7               	clrf	_myMain+7
  3041  0312  01A8               	clrf	_myMain+8
  3042  0313  0008               	return
  3043  0314                     __end_of_my_MainTimer:	
  3044                           
  3045                           	psect	text2
  3046  0647                     __ptext2:	
  3047 ;; *************** function _myUARTtoRF_Main *****************
  3048 ;; Defined at:
  3049 ;;		line 14 in file "../src/myUARTtoRF.c"
  3050 ;; Parameters:    Size  Location     Type
  3051 ;;		None
  3052 ;; Auto vars:     Size  Location     Type
  3053 ;;		None
  3054 ;; Return value:  Size  Location     Type
  3055 ;;		None               void
  3056 ;; Registers used:
  3057 ;;		None
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3063 ;;      Params:         0       0       0       0       0       0       0       0
  3064 ;;      Locals:         0       0       0       0       0       0       0       0
  3065 ;;      Temps:          0       0       0       0       0       0       0       0
  3066 ;;      Totals:         0       0       0       0       0       0       0       0
  3067 ;;Total ram usage:        0 bytes
  3068 ;; Hardware stack levels used:    1
  3069 ;; Hardware stack levels required when called:    3
  3070 ;; This function calls:
  3071 ;;		Nothing
  3072 ;; This function is called by:
  3073 ;;		_main
  3074 ;; This function uses a non-reentrant model
  3075 ;;
  3076                           
  3077                           
  3078                           ;psect for function _myUARTtoRF_Main
  3079  0647                     _myUARTtoRF_Main:	
  3080                           
  3081                           ;incstack = 0
  3082                           ; Regs used in _myUARTtoRF_Main: []
  3083  0647  0008               	return
  3084  0648                     __end_of_myUARTtoRF_Main:	
  3085                           
  3086                           	psect	text3
  3087  0624                     __ptext3:	
  3088 ;; *************** function _myUARTtoRF_Initialization *****************
  3089 ;; Defined at:
  3090 ;;		line 7 in file "../src/myUARTtoRF.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;		None
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;		None
  3095 ;; Return value:  Size  Location     Type
  3096 ;;		None               void
  3097 ;; Registers used:
  3098 ;;		None
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3104 ;;      Params:         0       0       0       0       0       0       0       0
  3105 ;;      Locals:         0       0       0       0       0       0       0       0
  3106 ;;      Temps:          0       0       0       0       0       0       0       0
  3107 ;;      Totals:         0       0       0       0       0       0       0       0
  3108 ;;Total ram usage:        0 bytes
  3109 ;; Hardware stack levels used:    1
  3110 ;; Hardware stack levels required when called:    3
  3111 ;; This function calls:
  3112 ;;		Nothing
  3113 ;; This function is called by:
  3114 ;;		_main
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118                           
  3119                           ;psect for function _myUARTtoRF_Initialization
  3120  0624                     _myUARTtoRF_Initialization:	
  3121                           
  3122                           ;myUARTtoRF.c: 8: RA0 = 0;
  3123                           
  3124                           ;incstack = 0
  3125                           ; Regs used in _myUARTtoRF_Initialization: []
  3126  0624  0020               	movlb	0	; select bank0
  3127  0625  100C               	bcf	12,0	;volatile
  3128                           
  3129                           ;myUARTtoRF.c: 9: RA1 = 1;
  3130  0626  148C               	bsf	12,1	;volatile
  3131                           
  3132                           ;myUARTtoRF.c: 10: RA2 = 1;
  3133  0627  150C               	bsf	12,2	;volatile
  3134  0628  0008               	return
  3135  0629                     __end_of_myUARTtoRF_Initialization:	
  3136                           
  3137                           	psect	text4
  3138  05C3                     __ptext4:	
  3139 ;; *************** function _myMain_Initialization *****************
  3140 ;; Defined at:
  3141 ;;		line 168 in file "../src/Main_B1.c"
  3142 ;; Parameters:    Size  Location     Type
  3143 ;;		None
  3144 ;; Auto vars:     Size  Location     Type
  3145 ;;		None
  3146 ;; Return value:  Size  Location     Type
  3147 ;;		None               void
  3148 ;; Registers used:
  3149 ;;		wreg, fsr1l, fsr1h
  3150 ;; Tracked objects:
  3151 ;;		On entry : 0/0
  3152 ;;		On exit  : 0/0
  3153 ;;		Unchanged: 0/0
  3154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3155 ;;      Params:         0       0       0       0       0       0       0       0
  3156 ;;      Locals:         0       0       0       0       0       0       0       0
  3157 ;;      Temps:          1       0       0       0       0       0       0       0
  3158 ;;      Totals:         1       0       0       0       0       0       0       0
  3159 ;;Total ram usage:        1 bytes
  3160 ;; Hardware stack levels used:    1
  3161 ;; Hardware stack levels required when called:    3
  3162 ;; This function calls:
  3163 ;;		Nothing
  3164 ;; This function is called by:
  3165 ;;		_main
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           
  3169                           
  3170                           ;psect for function _myMain_Initialization
  3171  05C3                     _myMain_Initialization:	
  3172                           
  3173                           ;Main_B1.c: 170: product = &_product;
  3174                           
  3175                           ;incstack = 0
  3176                           ; Regs used in _myMain_Initialization: [wregfsr1]
  3177  05C3  30A0               	movlw	__product& (0+255)
  3178  05C4  00F4               	movwf	??_myMain_Initialization
  3179  05C5  0874               	movf	??_myMain_Initialization,w
  3180  05C6  00F9               	movwf	_product
  3181                           
  3182                           ;Main_B1.c: 171: product->Data[20] = 0xaa;
  3183  05C7  30AA               	movlw	170
  3184  05C8  00F4               	movwf	??_myMain_Initialization
  3185  05C9  0879               	movf	_product,w
  3186  05CA  3E14               	addlw	20
  3187  05CB  0086               	movwf	6
  3188  05CC  0187               	clrf	7
  3189  05CD  0874               	movf	??_myMain_Initialization,w
  3190  05CE  0081               	movwf	1
  3191  05CF  0008               	return
  3192  05D0                     __end_of_myMain_Initialization:	
  3193                           
  3194                           	psect	text5
  3195  05D0                     __ptext5:	
  3196 ;; *************** function _UART_Main *****************
  3197 ;; Defined at:
  3198 ;;		line 757 in file "../src/MCU_B1.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;		None
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;		None
  3203 ;; Return value:  Size  Location     Type
  3204 ;;		None               void
  3205 ;; Registers used:
  3206 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3207 ;; Tracked objects:
  3208 ;;		On entry : 0/0
  3209 ;;		On exit  : 0/0
  3210 ;;		Unchanged: 0/0
  3211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3212 ;;      Params:         0       0       0       0       0       0       0       0
  3213 ;;      Locals:         0       0       0       0       0       0       0       0
  3214 ;;      Temps:          0       0       0       0       0       0       0       0
  3215 ;;      Totals:         0       0       0       0       0       0       0       0
  3216 ;;Total ram usage:        0 bytes
  3217 ;; Hardware stack levels used:    1
  3218 ;; Hardware stack levels required when called:    5
  3219 ;; This function calls:
  3220 ;;		_UART_Receive
  3221 ;;		_UART_Transmit
  3222 ;; This function is called by:
  3223 ;;		_main
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           
  3228                           ;psect for function _UART_Main
  3229  05D0                     _UART_Main:	
  3230                           
  3231                           ;MCU_B1.c: 758: if (UART.RxGO == 1) {
  3232                           
  3233                           ;incstack = 0
  3234                           ; Regs used in _UART_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3235  05D0  0020               	movlb	0	; select bank0
  3236  05D1  1CD1               	btfss	_UART+11,1
  3237  05D2  2DD7               	goto	l583
  3238                           
  3239                           ;MCU_B1.c: 759: UART.RxGO = 0;
  3240  05D3  10D1               	bcf	_UART+11,1
  3241                           
  3242                           ;MCU_B1.c: 760: UART_Receive();
  3243  05D4  3183  2314         	fcall	_UART_Receive
  3244                           
  3245                           ;MCU_B1.c: 761: ;;
  3246                           ;MCU_B1.c: 764: } else {
  3247  05D6  0008               	return
  3248  05D7                     l583:	
  3249                           
  3250                           ;MCU_B1.c: 765: if (UART.TxGO == 1) {
  3251  05D7  1C51               	btfss	_UART+11,0
  3252  05D8  0008               	return
  3253                           
  3254                           ;MCU_B1.c: 766: UART.TxGO = 0;
  3255  05D9  1051               	bcf	_UART+11,0
  3256                           
  3257                           ;MCU_B1.c: 767: UART_Transmit();
  3258  05DA  3184  24FE         	fcall	_UART_Transmit
  3259  05DC  0008               	return
  3260  05DD                     __end_of_UART_Main:	
  3261                           
  3262                           	psect	text6
  3263  04FE                     __ptext6:	
  3264 ;; *************** function _UART_Transmit *****************
  3265 ;; Defined at:
  3266 ;;		line 772 in file "../src/MCU_B1.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;		None
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;  i               2    0[BANK0 ] int 
  3271 ;; Return value:  Size  Location     Type
  3272 ;;		None               void
  3273 ;; Registers used:
  3274 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3280 ;;      Params:         0       0       0       0       0       0       0       0
  3281 ;;      Locals:         0       2       0       0       0       0       0       0
  3282 ;;      Temps:          1       0       0       0       0       0       0       0
  3283 ;;      Totals:         1       2       0       0       0       0       0       0
  3284 ;;Total ram usage:        3 bytes
  3285 ;; Hardware stack levels used:    1
  3286 ;; Hardware stack levels required when called:    4
  3287 ;; This function calls:
  3288 ;;		_putch
  3289 ;; This function is called by:
  3290 ;;		_UART_Main
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           
  3295                           ;psect for function _UART_Transmit
  3296  04FE                     _UART_Transmit:	
  3297                           
  3298                           ;MCU_B1.c: 775: for (int i = 0; i < 8; i++) {
  3299                           
  3300                           ;incstack = 0
  3301                           ; Regs used in _UART_Transmit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3302  04FE  0020               	movlb	0	; select bank0
  3303  04FF  01D2               	clrf	UART_Transmit@i
  3304  0500  01D3               	clrf	UART_Transmit@i+1
  3305  0501                     L1:	
  3306  0501  0853               	movf	UART_Transmit@i+1,w
  3307  0502  3A80               	xorlw	128
  3308  0503  00F5               	movwf	??_UART_Transmit
  3309  0504  3080               	movlw	128
  3310  0505  0275               	subwf	??_UART_Transmit,w
  3311  0506  3008               	movlw	8
  3312  0507  1903               	btfsc	3,2
  3313  0508  0252               	subwf	UART_Transmit@i,w
  3314  0509  1803               	btfsc	3,0
  3315  050A  0008               	return
  3316                           
  3317                           ;MCU_B1.c: 777: putch(UART.Data[i]);
  3318  050B  0020               	movlb	0	; select bank0
  3319  050C  0852               	movf	UART_Transmit@i,w
  3320  050D  3E46               	addlw	_UART& (0+255)
  3321  050E  0086               	movwf	6
  3322  050F  0187               	clrf	7
  3323  0510  0801               	movf	1,w
  3324  0511  3186  260A  3184   	fcall	_putch
  3325  0514  3001               	movlw	1
  3326  0515  0020               	movlb	0	; select bank0
  3327  0516  07D2               	addwf	UART_Transmit@i,f
  3328  0517  3000               	movlw	0
  3329  0518  3DD3               	addwfc	UART_Transmit@i+1,f
  3330  0519  2D01               	goto	L1
  3331  051A                     __end_of_UART_Transmit:	
  3332                           
  3333                           	psect	text7
  3334  060A                     __ptext7:	
  3335 ;; *************** function _putch *****************
  3336 ;; Defined at:
  3337 ;;		line 856 in file "../src/MCU_B1.c"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;  byte            1    wreg     unsigned char 
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;  byte            1    4[COMMON] unsigned char 
  3342 ;; Return value:  Size  Location     Type
  3343 ;;		None               void
  3344 ;; Registers used:
  3345 ;;		wreg
  3346 ;; Tracked objects:
  3347 ;;		On entry : 0/0
  3348 ;;		On exit  : 0/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3351 ;;      Params:         0       0       0       0       0       0       0       0
  3352 ;;      Locals:         1       0       0       0       0       0       0       0
  3353 ;;      Temps:          0       0       0       0       0       0       0       0
  3354 ;;      Totals:         1       0       0       0       0       0       0       0
  3355 ;;Total ram usage:        1 bytes
  3356 ;; Hardware stack levels used:    1
  3357 ;; Hardware stack levels required when called:    3
  3358 ;; This function calls:
  3359 ;;		Nothing
  3360 ;; This function is called by:
  3361 ;;		_UART_Transmit
  3362 ;;		_getche
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           
  3367                           ;psect for function _putch
  3368  060A                     _putch:	
  3369                           
  3370                           ;incstack = 0
  3371                           ; Regs used in _putch: [wreg]
  3372                           ;putch@byte stored from wreg
  3373  060A  00F4               	movwf	putch@byte
  3374  060B                     l600:	
  3375                           ;MCU_B1.c: 859: continue;
  3376                           
  3377                           ;MCU_B1.c: 858: while (!TXIF)
  3378                           
  3379  060B  0020               	movlb	0	; select bank0
  3380  060C  1E11               	btfss	17,4	;volatile
  3381  060D  2E0B               	goto	l600
  3382                           
  3383                           ;MCU_B1.c: 860: TXREG = byte;
  3384  060E  0874               	movf	putch@byte,w
  3385  060F  0023               	movlb	3	; select bank3
  3386  0610  009A               	movwf	26	;volatile
  3387  0611  0008               	return
  3388  0612                     __end_of_putch:	
  3389                           
  3390                           	psect	text8
  3391  0314                     __ptext8:	
  3392 ;; *************** function _UART_Receive *****************
  3393 ;; Defined at:
  3394 ;;		line 791 in file "../src/MCU_B1.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;		None
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;		None
  3399 ;; Return value:  Size  Location     Type
  3400 ;;		None               void
  3401 ;; Registers used:
  3402 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3403 ;; Tracked objects:
  3404 ;;		On entry : 0/0
  3405 ;;		On exit  : 0/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3408 ;;      Params:         0       0       0       0       0       0       0       0
  3409 ;;      Locals:         0       0       0       0       0       0       0       0
  3410 ;;      Temps:          1       0       0       0       0       0       0       0
  3411 ;;      Totals:         1       0       0       0       0       0       0       0
  3412 ;;Total ram usage:        1 bytes
  3413 ;; Hardware stack levels used:    1
  3414 ;; Hardware stack levels required when called:    4
  3415 ;; This function calls:
  3416 ;;		_setTxData
  3417 ;; This function is called by:
  3418 ;;		_UART_Main
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421                           
  3422                           
  3423                           ;psect for function _UART_Receive
  3424  0314                     _UART_Receive:	
  3425                           
  3426                           ;MCU_B1.c: 799: product->Data[2] = UART.Data[0];
  3427                           
  3428                           ;incstack = 0
  3429                           ; Regs used in _UART_Receive: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3430  0314  0020               	movlb	0	; select bank0
  3431  0315  0846               	movf	_UART,w
  3432  0316  00F5               	movwf	??_UART_Receive
  3433  0317  0879               	movf	_product,w
  3434  0318  3E02               	addlw	2
  3435  0319  0086               	movwf	6
  3436  031A  0187               	clrf	7
  3437  031B  0875               	movf	??_UART_Receive,w
  3438  031C  0081               	movwf	1
  3439                           
  3440                           ;MCU_B1.c: 800: product->Data[3] = UART.Data[1];
  3441  031D  0847               	movf	_UART+1,w
  3442  031E  00F5               	movwf	??_UART_Receive
  3443  031F  0879               	movf	_product,w
  3444  0320  3E03               	addlw	3
  3445  0321  0086               	movwf	6
  3446  0322  0187               	clrf	7
  3447  0323  0875               	movf	??_UART_Receive,w
  3448  0324  0081               	movwf	1
  3449                           
  3450                           ;MCU_B1.c: 801: product->Data[4] = UART.Data[2];
  3451  0325  0848               	movf	_UART+2,w
  3452  0326  00F5               	movwf	??_UART_Receive
  3453  0327  0879               	movf	_product,w
  3454  0328  3E04               	addlw	4
  3455  0329  0086               	movwf	6
  3456  032A  0187               	clrf	7
  3457  032B  0875               	movf	??_UART_Receive,w
  3458  032C  0081               	movwf	1
  3459                           
  3460                           ;MCU_B1.c: 802: product->Data[5] = UART.Data[3];
  3461  032D  0849               	movf	_UART+3,w
  3462  032E  00F5               	movwf	??_UART_Receive
  3463  032F  0879               	movf	_product,w
  3464  0330  3E05               	addlw	5
  3465  0331  0086               	movwf	6
  3466  0332  0187               	clrf	7
  3467  0333  0875               	movf	??_UART_Receive,w
  3468  0334  0081               	movwf	1
  3469                           
  3470                           ;MCU_B1.c: 803: product->Data[6] = UART.Data[4];
  3471  0335  084A               	movf	_UART+4,w
  3472  0336  00F5               	movwf	??_UART_Receive
  3473  0337  0879               	movf	_product,w
  3474  0338  3E06               	addlw	6
  3475  0339  0086               	movwf	6
  3476  033A  0187               	clrf	7
  3477  033B  0875               	movf	??_UART_Receive,w
  3478  033C  0081               	movwf	1
  3479                           
  3480                           ;MCU_B1.c: 804: product->Data[7] = UART.Data[5];
  3481  033D  084B               	movf	_UART+5,w
  3482  033E  00F5               	movwf	??_UART_Receive
  3483  033F  0879               	movf	_product,w
  3484  0340  3E07               	addlw	7
  3485  0341  0086               	movwf	6
  3486  0342  0187               	clrf	7
  3487  0343  0875               	movf	??_UART_Receive,w
  3488  0344  0081               	movwf	1
  3489                           
  3490                           ;MCU_B1.c: 805: product->Data[8] = UART.Data[6];
  3491  0345  084C               	movf	_UART+6,w
  3492  0346  00F5               	movwf	??_UART_Receive
  3493  0347  0879               	movf	_product,w
  3494  0348  3E08               	addlw	8
  3495  0349  0086               	movwf	6
  3496  034A  0187               	clrf	7
  3497  034B  0875               	movf	??_UART_Receive,w
  3498  034C  0081               	movwf	1
  3499                           
  3500                           ;MCU_B1.c: 806: product->Data[9] = UART.Data[7];
  3501  034D  084D               	movf	_UART+7,w
  3502  034E  00F5               	movwf	??_UART_Receive
  3503  034F  0879               	movf	_product,w
  3504  0350  3E09               	addlw	9
  3505  0351  0086               	movwf	6
  3506  0352  0187               	clrf	7
  3507  0353  0875               	movf	??_UART_Receive,w
  3508  0354  0081               	movwf	1
  3509                           
  3510                           ;MCU_B1.c: 809: setTxData();
  3511  0355  3181  216A         	fcall	_setTxData
  3512                           
  3513                           ;MCU_B1.c: 813: myMain.Test = 1;
  3514  0357  0020               	movlb	0	; select bank0
  3515  0358  1720               	bsf	_myMain,6
  3516  0359  0008               	return
  3517  035A                     __end_of_UART_Receive:	
  3518                           
  3519                           	psect	text9
  3520  063E                     __ptext9:	
  3521 ;; *************** function _RF_Main *****************
  3522 ;; Defined at:
  3523 ;;		line 16 in file "../src/RF_Control_B1.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;		None
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;		None
  3528 ;; Return value:  Size  Location     Type
  3529 ;;		None               void
  3530 ;; Registers used:
  3531 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3532 ;; Tracked objects:
  3533 ;;		On entry : 0/0
  3534 ;;		On exit  : 0/0
  3535 ;;		Unchanged: 0/0
  3536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3537 ;;      Params:         0       0       0       0       0       0       0       0
  3538 ;;      Locals:         0       0       0       0       0       0       0       0
  3539 ;;      Temps:          0       0       0       0       0       0       0       0
  3540 ;;      Totals:         0       0       0       0       0       0       0       0
  3541 ;;Total ram usage:        0 bytes
  3542 ;; Hardware stack levels used:    1
  3543 ;; Hardware stack levels required when called:    7
  3544 ;; This function calls:
  3545 ;;		_setRF_Main
  3546 ;; This function is called by:
  3547 ;;		_main
  3548 ;; This function uses a non-reentrant model
  3549 ;;
  3550                           
  3551                           
  3552                           ;psect for function _RF_Main
  3553  063E                     _RF_Main:	
  3554                           
  3555                           ;RF_Control_B1.c: 18: setRF_Main();
  3556                           
  3557                           ;incstack = 0
  3558                           ; Regs used in _RF_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3559  063E  3180  2037         	fcall	_setRF_Main
  3560  0640  0008               	return
  3561  0641                     __end_of_RF_Main:	
  3562                           
  3563                           	psect	text10
  3564  0037                     __ptext10:	
  3565 ;; *************** function _setRF_Main *****************
  3566 ;; Defined at:
  3567 ;;		line 52 in file "../src/RF_Control_B1.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;		None
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;  error           1    7[BANK0 ] unsigned char 
  3572 ;;  Receive_OK      1    6[BANK0 ] unsigned char 
  3573 ;;  loop_f          1    5[BANK0 ] unsigned char 
  3574 ;; Return value:  Size  Location     Type
  3575 ;;		None               void
  3576 ;; Registers used:
  3577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3578 ;; Tracked objects:
  3579 ;;		On entry : 0/0
  3580 ;;		On exit  : 0/0
  3581 ;;		Unchanged: 0/0
  3582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3583 ;;      Params:         0       0       0       0       0       0       0       0
  3584 ;;      Locals:         0       3       0       0       0       0       0       0
  3585 ;;      Temps:          0       1       0       0       0       0       0       0
  3586 ;;      Totals:         0       4       0       0       0       0       0       0
  3587 ;;Total ram usage:        4 bytes
  3588 ;; Hardware stack levels used:    1
  3589 ;; Hardware stack levels required when called:    6
  3590 ;; This function calls:
  3591 ;;		_CC2500_TxData
  3592 ;;		_RF_RxDisable
  3593 ;;		_getMain_All_Error_Status
  3594 ;;		_getRxData
  3595 ;; This function is called by:
  3596 ;;		_RF_Main
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           
  3601                           ;psect for function _setRF_Main
  3602  0037                     _setRF_Main:	
  3603                           
  3604                           ;RF_Control_B1.c: 53: char loop_f = 0, Receive_OK = 0, error = 0;
  3605                           
  3606                           ;incstack = 0
  3607                           ; Regs used in _setRF_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3608  0037  0020               	movlb	0	; select bank0
  3609  0038  01D7               	clrf	setRF_Main@loop_f
  3610  0039  01D8               	clrf	setRF_Main@Receive_OK
  3611  003A  01D9               	clrf	setRF_Main@error
  3612                           
  3613                           ;RF_Control_B1.c: 58: if (0 == 0) {
  3614  003B  1C2F               	btfss	_RF1,0
  3615  003C  28DF               	goto	l966
  3616                           
  3617                           ;RF_Control_B1.c: 59: if (getMain_All_Error_Status(0) == 0) {
  3618  003D  3000               	movlw	0
  3619  003E  3186  2641  3180   	fcall	_getMain_All_Error_Status
  3620  0041  3800               	iorlw	0
  3621  0042  1D03               	skipz
  3622  0043  2844               	goto	l968
  3623  0044                     l968:	
  3624                           ;RF_Control_B1.c: 65: } else {
  3625                           
  3626                           ;RF_Control_B1.c: 63: RF1.Key = 0;
  3627                           
  3628                           
  3629                           ;RF_Control_B1.c: 69: RF1.Key = 0;
  3630  0044  0020               	movlb	0	; select bank0
  3631  0045  13AF               	bcf	_RF1,7
  3632                           
  3633                           ;RF_Control_B1.c: 70: }
  3634                           ;RF_Control_B1.c: 72: if (RF1.Key == 1 && RF1.Learn == 0) {
  3635  0046  1BAF               	btfsc	_RF1,7
  3636  0047  1B2F               	btfsc	_RF1,6
  3637  0048  284E               	goto	l970
  3638                           
  3639                           ;RF_Control_B1.c: 73: RF1.Count = 0;
  3640  0049  01B1               	clrf	_RF1+2
  3641  004A  01B2               	clrf	_RF1+3
  3642                           
  3643                           ;RF_Control_B1.c: 74: RF1.Run = 1;
  3644  004B  14B0               	bsf	_RF1+1,1
  3645                           
  3646                           ;RF_Control_B1.c: 75: RF1.RxStatus = 0;
  3647  004C  11AF               	bcf	_RF1,3
  3648                           
  3649                           ;RF_Control_B1.c: 76: } else {
  3650  004D  0008               	return
  3651  004E                     l970:	
  3652                           
  3653                           ;RF_Control_B1.c: 77: if (RF1.Run == 1 && RF1.Learn == 0) {
  3654  004E  18B0               	btfsc	_RF1+1,1
  3655  004F  1B2F               	btfsc	_RF1,6
  3656  0050  2865               	goto	l3637
  3657                           
  3658                           ;RF_Control_B1.c: 78: RF1.Count++;
  3659  0051  3001               	movlw	1
  3660  0052  07B1               	addwf	_RF1+2,f
  3661  0053  3000               	movlw	0
  3662  0054  3DB2               	addwfc	_RF1+3,f
  3663                           
  3664                           ;RF_Control_B1.c: 79: if (RF1.Count == RF1.RunTime) {
  3665  0055  3002               	movlw	2
  3666  0056  3E2F               	addlw	_RF1& (0+255)
  3667  0057  0086               	movwf	6
  3668  0058  0187               	clrf	7
  3669  0059  3F40               	moviw [0]fsr1
  3670  005A  0636               	xorwf	_RF1+7,w
  3671  005B  1D03               	skipz
  3672  005C  285F               	goto	u2735
  3673  005D  3F41               	moviw [1]fsr1
  3674  005E  0637               	xorwf	_RF1+8,w
  3675  005F                     u2735:	
  3676  005F  1D03               	skipz
  3677  0060  28AC               	goto	l974
  3678                           
  3679                           ;RF_Control_B1.c: 80: RF1.Count = 0;
  3680  0061  01B1               	clrf	_RF1+2
  3681  0062  01B2               	clrf	_RF1+3
  3682                           
  3683                           ;RF_Control_B1.c: 81: RF1.Run = 0;
  3684  0063  10B0               	bcf	_RF1+1,1
  3685                           
  3686                           ;RF_Control_B1.c: 82: }
  3687                           ;RF_Control_B1.c: 83: } else {
  3688  0064  28AC               	goto	l974
  3689  0065                     l3637:	
  3690                           
  3691                           ;RF_Control_B1.c: 84: RF1.Count = 0;
  3692  0065  01B1               	clrf	_RF1+2
  3693  0066  01B2               	clrf	_RF1+3
  3694                           
  3695                           ;RF_Control_B1.c: 85: RF1.Run = 0;
  3696  0067  10B0               	bcf	_RF1+1,1
  3697                           
  3698                           ;RF_Control_B1.c: 87: if (RF1.TransceiveGO == 1 && RF1.Learn == 0) {
  3699  0068  192F               	btfsc	_RF1,2
  3700  0069  1B2F               	btfsc	_RF1,6
  3701  006A  287B               	goto	l975
  3702                           
  3703                           ;RF_Control_B1.c: 88: RF1.TransceiveGO = 0;
  3704  006B  112F               	bcf	_RF1,2
  3705                           
  3706                           ;RF_Control_B1.c: 89: RF1.RxStatus = 0;
  3707  006C  11AF               	bcf	_RF1,3
  3708                           
  3709                           ;RF_Control_B1.c: 90: RF1.ReceiveGO = 0;
  3710  006D  10AF               	bcf	_RF1,1
  3711                           
  3712                           ;RF_Control_B1.c: 91: RF1.RunTime = 10;
  3713  006E  300A               	movlw	10
  3714  006F  00B6               	movwf	_RF1+7
  3715  0070  3000               	movlw	0
  3716  0071  00B7               	movwf	_RF1+8
  3717                           
  3718                           ;RF_Control_B1.c: 93: RA1 = RA1 == 1 ? 0 : 1;
  3719  0072  3002               	movlw	2
  3720  0073  068C               	xorwf	12,f
  3721                           
  3722                           ;RF_Control_B1.c: 97: RF_RxDisable();
  3723  0074  3185  25B4  3180   	fcall	_RF_RxDisable
  3724                           
  3725                           ;RF_Control_B1.c: 104: CC2500_TxData();
  3726  0077  3182  2266  3180   	fcall	_CC2500_TxData
  3727                           
  3728                           ;RF_Control_B1.c: 106: } else {
  3729  007A  28AC               	goto	l974
  3730  007B                     l975:	
  3731                           
  3732                           ;RF_Control_B1.c: 108: if (RF1.RxStatus == 1) {
  3733  007B  19AF               	btfsc	_RF1,3
  3734                           
  3735                           ;RF_Control_B1.c: 112: if (RF1.ReceiveGO == 1) {
  3736  007C  1CAF               	btfss	_RF1,1
  3737  007D  28AC               	goto	l974
  3738                           
  3739                           ;RF_Control_B1.c: 113: RF1.ReceiveGO = 0;
  3740  007E  10AF               	bcf	_RF1,1
  3741                           
  3742                           ;RF_Control_B1.c: 114: RF1.Correction = 0;
  3743  007F  12B0               	bcf	_RF1+1,5
  3744                           
  3745                           ;RF_Control_B1.c: 115: RF1.CorrectionCounter = 0;
  3746  0080  01B9               	clrf	_RF1+10
  3747  0081  01BA               	clrf	_RF1+11
  3748                           
  3749                           ;RF_Control_B1.c: 126: getRxData();
  3750  0082  3180  20E3  3180   	fcall	_getRxData
  3751                           
  3752                           ;RF_Control_B1.c: 127: RF1.Run = 1;
  3753  0085  0020               	movlb	0	; select bank0
  3754  0086  14B0               	bsf	_RF1+1,1
  3755                           
  3756                           ;RF_Control_B1.c: 129: if (RF1.Checked == 1) {
  3757  0087  1DB0               	btfss	_RF1+1,3
  3758  0088  2896               	goto	l3671
  3759                           
  3760                           ;RF_Control_B1.c: 130: if (RF1.RunTime > 10) {
  3761  0089  3000               	movlw	0
  3762  008A  0237               	subwf	_RF1+8,w
  3763  008B  300B               	movlw	11
  3764  008C  1903               	skipnz
  3765  008D  0236               	subwf	_RF1+7,w
  3766  008E  1C03               	skipc
  3767  008F  2894               	goto	l3669
  3768                           
  3769                           ;RF_Control_B1.c: 131: RF1.RunTime = 10;
  3770  0090  300A               	movlw	10
  3771  0091  00B6               	movwf	_RF1+7
  3772  0092  3000               	movlw	0
  3773  0093  00B7               	movwf	_RF1+8
  3774  0094                     l3669:	
  3775                           
  3776                           ;RF_Control_B1.c: 132: }
  3777                           ;RF_Control_B1.c: 133: RF1.CheckCount = 0;
  3778  0094  01B3               	clrf	_RF1+4
  3779                           
  3780                           ;RF_Control_B1.c: 134: } else {
  3781  0095  28AC               	goto	l974
  3782  0096                     l3671:	
  3783                           
  3784                           ;RF_Control_B1.c: 135: RF1.CheckCount++;
  3785  0096  3001               	movlw	1
  3786  0097  00D6               	movwf	??_setRF_Main
  3787  0098  0856               	movf	??_setRF_Main,w
  3788  0099  07B3               	addwf	_RF1+4,f
  3789                           
  3790                           ;RF_Control_B1.c: 136: if (RF1.CheckCount == 2) {
  3791  009A  0833               	movf	_RF1+4,w
  3792  009B  3A02               	xorlw	2
  3793  009C  1D03               	skipz
  3794  009D  28AC               	goto	l974
  3795                           
  3796                           ;RF_Control_B1.c: 137: RF1.CheckCount = 0;
  3797  009E  01B3               	clrf	_RF1+4
  3798                           
  3799                           ;RF_Control_B1.c: 138: RF1.CheckedCounter = 0;
  3800  009F  01B4               	clrf	_RF1+5
  3801  00A0  01B5               	clrf	_RF1+6
  3802                           
  3803                           ;RF_Control_B1.c: 139: if (RF1.RunTime < 200) {
  3804  00A1  3000               	movlw	0
  3805  00A2  0237               	subwf	_RF1+8,w
  3806  00A3  30C8               	movlw	200
  3807  00A4  1903               	skipnz
  3808  00A5  0236               	subwf	_RF1+7,w
  3809  00A6  1803               	skipnc
  3810  00A7  28AC               	goto	l974
  3811                           
  3812                           ;RF_Control_B1.c: 140: RF1.RunTime += 10;
  3813  00A8  300A               	movlw	10
  3814  00A9  07B6               	addwf	_RF1+7,f
  3815  00AA  3000               	movlw	0
  3816  00AB  3DB7               	addwfc	_RF1+8,f
  3817  00AC                     l974:	
  3818                           ;RF_Control_B1.c: 141: }
  3819                           ;RF_Control_B1.c: 142: }
  3820                           ;RF_Control_B1.c: 143: }
  3821                           ;RF_Control_B1.c: 144: }
  3822                           ;RF_Control_B1.c: 145: } else {
  3823                           
  3824                           
  3825                           ;RF_Control_B1.c: 157: }
  3826                           ;RF_Control_B1.c: 158: }
  3827                           ;RF_Control_B1.c: 159: }
  3828                           ;RF_Control_B1.c: 160: if (RF1.RxStatus == 1) {
  3829  00AC  0020               	movlb	0	; select bank0
  3830  00AD  1DAF               	btfss	_RF1,3
  3831  00AE  28CD               	goto	l3691
  3832                           
  3833                           ;RF_Control_B1.c: 161: RF1.CheckedCounter++;
  3834  00AF  3001               	movlw	1
  3835  00B0  07B4               	addwf	_RF1+5,f
  3836  00B1  3000               	movlw	0
  3837  00B2  3DB5               	addwfc	_RF1+6,f
  3838                           
  3839                           ;RF_Control_B1.c: 162: if (RF1.CheckedCounter == 100) {
  3840  00B3  3005               	movlw	5
  3841  00B4  3E2F               	addlw	_RF1& (0+255)
  3842  00B5  0086               	movwf	6
  3843  00B6  0187               	clrf	7
  3844  00B7  3F40               	moviw [0]fsr1
  3845  00B8  3A64               	xorlw	100
  3846  00B9  1D03               	skipz
  3847  00BA  28BD               	goto	u2835
  3848  00BB  3F41               	moviw [1]fsr1
  3849  00BC  3A00               	xorlw	0
  3850  00BD                     u2835:	
  3851  00BD  1D03               	skipz
  3852  00BE  28CD               	goto	l3691
  3853                           
  3854                           ;RF_Control_B1.c: 163: RF1.CheckedCounter = 0;
  3855  00BF  01B4               	clrf	_RF1+5
  3856  00C0  01B5               	clrf	_RF1+6
  3857                           
  3858                           ;RF_Control_B1.c: 164: RF1.CheckCount = 0;
  3859  00C1  01B3               	clrf	_RF1+4
  3860                           
  3861                           ;RF_Control_B1.c: 165: if (RF1.RunTime > 10) {
  3862  00C2  3000               	movlw	0
  3863  00C3  0237               	subwf	_RF1+8,w
  3864  00C4  300B               	movlw	11
  3865  00C5  1903               	skipnz
  3866  00C6  0236               	subwf	_RF1+7,w
  3867  00C7  1C03               	skipc
  3868  00C8  28CD               	goto	l3691
  3869                           
  3870                           ;RF_Control_B1.c: 166: RF1.RunTime -= 10;
  3871  00C9  300A               	movlw	10
  3872  00CA  02B6               	subwf	_RF1+7,f
  3873  00CB  3000               	movlw	0
  3874  00CC  3BB7               	subwfb	_RF1+8,f
  3875  00CD                     l3691:	
  3876                           
  3877                           ;RF_Control_B1.c: 167: }
  3878                           ;RF_Control_B1.c: 168: }
  3879                           ;RF_Control_B1.c: 169: }
  3880                           ;RF_Control_B1.c: 170: if (RF1.Correction == 1) {
  3881  00CD  1EB0               	btfss	_RF1+1,5
  3882  00CE  0008               	return
  3883                           
  3884                           ;RF_Control_B1.c: 171: RF1.CorrectionCounter++;
  3885  00CF  3001               	movlw	1
  3886  00D0  07B9               	addwf	_RF1+10,f
  3887  00D1  3000               	movlw	0
  3888  00D2  3DBA               	addwfc	_RF1+11,f
  3889                           
  3890                           ;RF_Control_B1.c: 172: if (RF1.CorrectionCounter >= 30000) {
  3891  00D3  3075               	movlw	117
  3892  00D4  023A               	subwf	_RF1+11,w
  3893  00D5  3030               	movlw	48
  3894  00D6  1903               	skipnz
  3895  00D7  0239               	subwf	_RF1+10,w
  3896  00D8  1C03               	skipc
  3897  00D9  0008               	return
  3898                           
  3899                           ;RF_Control_B1.c: 173: RF1.CorrectionCounter = 0;
  3900  00DA  01B9               	clrf	_RF1+10
  3901  00DB  01BA               	clrf	_RF1+11
  3902                           
  3903                           ;RF_Control_B1.c: 174: RF1.RxStatus = 0;
  3904  00DC  11AF               	bcf	_RF1,3
  3905                           
  3906                           ;RF_Control_B1.c: 175: RF1.ReceiveGO = 0;
  3907  00DD  10AF               	bcf	_RF1,1
  3908                           
  3909                           ;RF_Control_B1.c: 176: }
  3910                           ;RF_Control_B1.c: 177: }
  3911                           ;RF_Control_B1.c: 178: }
  3912                           ;RF_Control_B1.c: 179: }
  3913                           ;RF_Control_B1.c: 186: } else {
  3914  00DE  0008               	return
  3915  00DF                     l966:	
  3916                           
  3917                           ;RF_Control_B1.c: 187: if (myMain.PowerON == 1) {
  3918  00DF  1C20               	btfss	_myMain,0
  3919  00E0  0008               	return
  3920                           
  3921                           ;RF_Control_B1.c: 188: RF1.Enable = 1;
  3922  00E1  142F               	bsf	_RF1,0
  3923  00E2  0008               	return
  3924  00E3                     __end_of_setRF_Main:	
  3925                           
  3926                           	psect	text11
  3927  00E3                     __ptext11:	
  3928 ;; *************** function _getRxData *****************
  3929 ;; Defined at:
  3930 ;;		line 282 in file "../src/RF_Control_B1.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;		None
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;  error           1    0[BANK0 ] unsigned char 
  3935 ;; Return value:  Size  Location     Type
  3936 ;;		None               void
  3937 ;; Registers used:
  3938 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3939 ;; Tracked objects:
  3940 ;;		On entry : 0/0
  3941 ;;		On exit  : 0/0
  3942 ;;		Unchanged: 0/0
  3943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3944 ;;      Params:         0       0       0       0       0       0       0       0
  3945 ;;      Locals:         0       1       0       0       0       0       0       0
  3946 ;;      Temps:          1       0       0       0       0       0       0       0
  3947 ;;      Totals:         1       1       0       0       0       0       0       0
  3948 ;;Total ram usage:        2 bytes
  3949 ;; Hardware stack levels used:    1
  3950 ;; Hardware stack levels required when called:    5
  3951 ;; This function calls:
  3952 ;;		_getMain_All_Error_Status
  3953 ;;		_setControl_Lights_Table
  3954 ;;		_setLog_Code
  3955 ;;		_setTxData
  3956 ;; This function is called by:
  3957 ;;		_setRF_Main
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           
  3962                           ;psect for function _getRxData
  3963  00E3                     _getRxData:	
  3964                           
  3965                           ;RF_Control_B1.c: 283: char error = getMain_All_Error_Status(0);
  3966                           
  3967                           ;incstack = 0
  3968                           ; Regs used in _getRxData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3969  00E3  3000               	movlw	0
  3970  00E4  3186  2641  3180   	fcall	_getMain_All_Error_Status
  3971  00E7  00F5               	movwf	??_getRxData
  3972  00E8  0875               	movf	??_getRxData,w
  3973  00E9  0020               	movlb	0	; select bank0
  3974  00EA  00D2               	movwf	getRxData@error
  3975                           
  3976                           ;RF_Control_B1.c: 284: if (RF_Data[0] == 0xaa && RF_Data[1] == 0x01) {
  3977  00EB  0021               	movlb	1	; select bank1
  3978  00EC  0840               	movf	_RF_Data^(0+128),w
  3979  00ED  3AAA               	xorlw	170
  3980  00EE  1D03               	skipz
  3981  00EF  2906               	goto	l3475
  3982  00F0  0841               	movf	(_RF_Data^(0+128)+1),w
  3983  00F1  3A01               	xorlw	1
  3984  00F2  1D03               	skipz
  3985  00F3  2906               	goto	l3475
  3986                           
  3987                           ;RF_Control_B1.c: 286: product->Data[2] = 0x55;
  3988  00F4  3055               	movlw	85
  3989  00F5  00F5               	movwf	??_getRxData
  3990  00F6  0879               	movf	_product,w
  3991  00F7  3E02               	addlw	2
  3992  00F8  0086               	movwf	6
  3993  00F9  0187               	clrf	7
  3994  00FA  0875               	movf	??_getRxData,w
  3995  00FB  0081               	movwf	1
  3996                           
  3997                           ;RF_Control_B1.c: 287: setTxData();
  3998  00FC  3181  216A         	fcall	_setTxData
  3999                           
  4000                           ;RF_Control_B1.c: 288: RF1.RunTime = 10;
  4001  00FE  300A               	movlw	10
  4002  00FF  0020               	movlb	0	; select bank0
  4003  0100  00B6               	movwf	_RF1+7
  4004  0101  3000               	movlw	0
  4005  0102  00B7               	movwf	_RF1+8
  4006                           
  4007                           ;RF_Control_B1.c: 291: RA1 = RA1 == 1 ? 0 : 1;
  4008  0103  3002               	movlw	2
  4009  0104  068C               	xorwf	12,f
  4010                           
  4011                           ;RF_Control_B1.c: 294: } else {
  4012  0105  0008               	return
  4013  0106                     l3475:	
  4014                           
  4015                           ;RF_Control_B1.c: 296: if (error == 0) {
  4016  0106  0020               	movlb	0	; select bank0
  4017  0107  08D2               	movf	getRxData@error,f
  4018  0108  1D03               	skipz
  4019  0109  0008               	return
  4020                           
  4021                           ;RF_Control_B1.c: 297: if (RF1.Learn == 1) {
  4022  010A  1F2F               	btfss	_RF1,6
  4023  010B  291C               	goto	l3487
  4024                           
  4025                           ;RF_Control_B1.c: 298: if (RF_Data[0] == 0x0 && RF_Data[1] == 0x64) {
  4026  010C  0021               	movlb	1	; select bank1
  4027  010D  08C0               	movf	_RF_Data^(0+128),f
  4028  010E  1D03               	skipz
  4029  010F  2919               	goto	l1016
  4030  0110  0841               	movf	(_RF_Data^(0+128)+1),w
  4031  0111  3A64               	xorlw	100
  4032  0112  1D03               	skipz
  4033  0113  2919               	goto	l1016
  4034                           
  4035                           ;RF_Control_B1.c: 299: setLog_Code();
  4036  0114  3185  251A         	fcall	_setLog_Code
  4037                           
  4038                           ;RF_Control_B1.c: 300: RF1.Checked = 1;
  4039  0116  0020               	movlb	0	; select bank0
  4040  0117  15B0               	bsf	_RF1+1,3
  4041                           
  4042                           ;RF_Control_B1.c: 301: } else {
  4043  0118  0008               	return
  4044  0119                     l1016:	
  4045                           
  4046                           ;RF_Control_B1.c: 302: RF1.Checked = 0;
  4047  0119  0020               	movlb	0	; select bank0
  4048  011A  11B0               	bcf	_RF1+1,3
  4049                           
  4050                           ;RF_Control_B1.c: 303: }
  4051                           ;RF_Control_B1.c: 304: } else {
  4052  011B  0008               	return
  4053  011C                     l3487:	
  4054                           
  4055                           ;RF_Control_B1.c: 305: if (RF_Data[0] == 0x00 && RF_Data[1] == 0x02) {
  4056  011C  0021               	movlb	1	; select bank1
  4057  011D  08C0               	movf	_RF_Data^(0+128),f
  4058  011E  1D03               	skipz
  4059  011F  2952               	goto	l3509
  4060  0120  0841               	movf	(_RF_Data^(0+128)+1),w
  4061  0121  3A02               	xorlw	2
  4062  0122  1D03               	skipz
  4063  0123  2952               	goto	l3509
  4064                           
  4065                           ;RF_Control_B1.c: 307: if (RF_Data[12] == 0xff && RF_Data[13] == 0xff && RF_Data[14] == 
      +                          0xff) {
  4066  0124  084C               	movf	(_RF_Data^(0+128)+12),w
  4067  0125  3AFF               	xorlw	255
  4068  0126  1D03               	skipz
  4069  0127  2934               	goto	l3499
  4070  0128  084D               	movf	(_RF_Data^(0+128)+13),w
  4071  0129  3AFF               	xorlw	255
  4072  012A  1D03               	skipz
  4073  012B  2934               	goto	l3499
  4074  012C  084E               	movf	(_RF_Data^(0+128)+14),w
  4075  012D  3AFF               	xorlw	255
  4076  012E  1D03               	skipz
  4077  012F  2934               	goto	l3499
  4078                           
  4079                           ;RF_Control_B1.c: 308: __nop();
  4080  0130  0000               	nop
  4081                           
  4082                           ;RF_Control_B1.c: 309: RF1.Checked = 0;
  4083  0131  0020               	movlb	0	; select bank0
  4084  0132  11B0               	bcf	_RF1+1,3
  4085                           
  4086                           ;RF_Control_B1.c: 310: } else {
  4087  0133  0008               	return
  4088  0134                     l3499:	
  4089                           
  4090                           ;RF_Control_B1.c: 311: if (RF_Data[12] == product->Data[12] && RF_Data[13] == product->D
      +                          ata[13] && RF_Data[14] == product->Data[14]) {
  4091  0134  0879               	movf	_product,w
  4092  0135  3E0C               	addlw	12
  4093  0136  0086               	movwf	6
  4094  0137  0187               	clrf	7
  4095  0138  0021               	movlb	1	; select bank1
  4096  0139  084C               	movf	(_RF_Data^(0+128)+12),w
  4097  013A  0601               	xorwf	1,w
  4098  013B  1D03               	skipz
  4099  013C  0008               	return
  4100  013D  0879               	movf	_product,w
  4101  013E  3E0D               	addlw	13
  4102  013F  0086               	movwf	6
  4103  0140  0187               	clrf	7
  4104  0141  084D               	movf	(_RF_Data^(0+128)+13),w
  4105  0142  0601               	xorwf	1,w
  4106  0143  1D03               	skipz
  4107  0144  0008               	return
  4108  0145  0879               	movf	_product,w
  4109  0146  3E0E               	addlw	14
  4110  0147  0086               	movwf	6
  4111  0148  0187               	clrf	7
  4112  0149  084E               	movf	(_RF_Data^(0+128)+14),w
  4113  014A  0601               	xorwf	1,w
  4114  014B  1D03               	skipz
  4115  014C  0008               	return
  4116                           
  4117                           ;RF_Control_B1.c: 312: setControl_Lights_Table();
  4118  014D  3183  235A         	fcall	_setControl_Lights_Table
  4119                           
  4120                           ;RF_Control_B1.c: 313: RF1.Checked = 1;
  4121  014F  0020               	movlb	0	; select bank0
  4122  0150  15B0               	bsf	_RF1+1,3
  4123                           
  4124                           ;RF_Control_B1.c: 314: }
  4125                           ;RF_Control_B1.c: 315: }
  4126                           ;RF_Control_B1.c: 316: } else if (RF_Data[0] == 0xff && RF_Data[1] == 0x02) {
  4127  0151  0008               	return
  4128  0152                     l3509:	
  4129  0152  0021               	movlb	1	; select bank1
  4130  0153  0840               	movf	_RF_Data^(0+128),w
  4131  0154  3AFF               	xorlw	255
  4132  0155  1D03               	skipz
  4133  0156  295D               	goto	l3515
  4134  0157  0841               	movf	(_RF_Data^(0+128)+1),w
  4135  0158  3A02               	xorlw	2
  4136  0159  1D03               	skipz
  4137  015A  295D               	goto	l3515
  4138                           
  4139                           ;RF_Control_B1.c: 317: __nop();
  4140  015B  0000               	nop
  4141                           
  4142                           ;RF_Control_B1.c: 318: } else if (RF_Data[0] == 0x0 && RF_Data[1] == 0x65) {
  4143  015C  0008               	return
  4144  015D                     l3515:	
  4145  015D  0021               	movlb	1	; select bank1
  4146  015E  08C0               	movf	_RF_Data^(0+128),f
  4147  015F  1D03               	skipz
  4148  0160  2967               	goto	l1026
  4149  0161  0841               	movf	(_RF_Data^(0+128)+1),w
  4150  0162  3A65               	xorlw	101
  4151  0163  1D03               	skipz
  4152  0164  2967               	goto	l1026
  4153                           
  4154                           ;RF_Control_B1.c: 319: __nop();
  4155  0165  0000               	nop
  4156                           
  4157                           ;RF_Control_B1.c: 320: } else {
  4158  0166  0008               	return
  4159  0167                     l1026:	
  4160                           
  4161                           ;RF_Control_B1.c: 321: RF1.Checked = 0;
  4162  0167  0020               	movlb	0	; select bank0
  4163  0168  11B0               	bcf	_RF1+1,3
  4164                           
  4165                           ;RF_Control_B1.c: 329: ;
  4166                           
  4167                           ;RF_Control_B1.c: 322: }
  4168                           ;RF_Control_B1.c: 327: }
  4169                           ;RF_Control_B1.c: 328: } else {
  4170  0169  0008               	return
  4171  016A                     __end_of_getRxData:	
  4172                           
  4173                           	psect	text12
  4174  051A                     __ptext12:	
  4175 ;; *************** function _setLog_Code *****************
  4176 ;; Defined at:
  4177 ;;		line 335 in file "../src/RF_Control_B1.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;		None
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;		None
  4182 ;; Return value:  Size  Location     Type
  4183 ;;		None               void
  4184 ;; Registers used:
  4185 ;;		wreg, fsr1l, fsr1h
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4191 ;;      Params:         0       0       0       0       0       0       0       0
  4192 ;;      Locals:         0       0       0       0       0       0       0       0
  4193 ;;      Temps:          1       0       0       0       0       0       0       0
  4194 ;;      Totals:         1       0       0       0       0       0       0       0
  4195 ;;Total ram usage:        1 bytes
  4196 ;; Hardware stack levels used:    1
  4197 ;; Hardware stack levels required when called:    3
  4198 ;; This function calls:
  4199 ;;		Nothing
  4200 ;; This function is called by:
  4201 ;;		_getRxData
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205                           
  4206                           ;psect for function _setLog_Code
  4207  051A                     _setLog_Code:	
  4208                           
  4209                           ;RF_Control_B1.c: 336: RF1.Learn = 0;
  4210                           
  4211                           ;incstack = 0
  4212                           ; Regs used in _setLog_Code: [wregfsr1]
  4213  051A  0020               	movlb	0	; select bank0
  4214  051B  132F               	bcf	_RF1,6
  4215                           
  4216                           ;RF_Control_B1.c: 337: product->Data[12]=RF_Data[12];
  4217  051C  0021               	movlb	1	; select bank1
  4218  051D  084C               	movf	(_RF_Data^(0+128)+12),w
  4219  051E  00F4               	movwf	??_setLog_Code
  4220  051F  0879               	movf	_product,w
  4221  0520  3E0C               	addlw	12
  4222  0521  0086               	movwf	6
  4223  0522  0187               	clrf	7
  4224  0523  0874               	movf	??_setLog_Code,w
  4225  0524  0081               	movwf	1
  4226                           
  4227                           ;RF_Control_B1.c: 338: product->Data[13]=RF_Data[13];
  4228  0525  084D               	movf	(_RF_Data^(0+128)+13),w
  4229  0526  00F4               	movwf	??_setLog_Code
  4230  0527  0879               	movf	_product,w
  4231  0528  3E0D               	addlw	13
  4232  0529  0086               	movwf	6
  4233  052A  0187               	clrf	7
  4234  052B  0874               	movf	??_setLog_Code,w
  4235  052C  0081               	movwf	1
  4236                           
  4237                           ;RF_Control_B1.c: 339: product->Data[14]=RF_Data[14];
  4238  052D  084E               	movf	(_RF_Data^(0+128)+14),w
  4239  052E  00F4               	movwf	??_setLog_Code
  4240  052F  0879               	movf	_product,w
  4241  0530  3E0E               	addlw	14
  4242  0531  0086               	movwf	6
  4243  0532  0187               	clrf	7
  4244  0533  0874               	movf	??_setLog_Code,w
  4245  0534  0081               	movwf	1
  4246  0535  0008               	return
  4247  0536                     __end_of_setLog_Code:	
  4248                           ;RF_Control_B1.c: 342: ;;
  4249                           
  4250                           
  4251                           	psect	text13
  4252  035A                     __ptext13:	
  4253 ;; *************** function _setControl_Lights_Table *****************
  4254 ;; Defined at:
  4255 ;;		line 348 in file "../src/RF_Control_B1.c"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;		None
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;		None
  4260 ;; Return value:  Size  Location     Type
  4261 ;;		None               void
  4262 ;; Registers used:
  4263 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/0
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4269 ;;      Params:         0       0       0       0       0       0       0       0
  4270 ;;      Locals:         0       0       0       0       0       0       0       0
  4271 ;;      Temps:          0       0       0       0       0       0       0       0
  4272 ;;      Totals:         0       0       0       0       0       0       0       0
  4273 ;;Total ram usage:        0 bytes
  4274 ;; Hardware stack levels used:    1
  4275 ;; Hardware stack levels required when called:    4
  4276 ;; This function calls:
  4277 ;;		_setTxData
  4278 ;; This function is called by:
  4279 ;;		_getRxData
  4280 ;; This function uses a non-reentrant model
  4281 ;;
  4282                           
  4283                           
  4284                           ;psect for function _setControl_Lights_Table
  4285  035A                     _setControl_Lights_Table:	
  4286                           
  4287                           ;RF_Control_B1.c: 349: switch (RF_Data[15]) {
  4288                           
  4289                           ;incstack = 0
  4290                           ; Regs used in _setControl_Lights_Table: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4291  035A  2B82               	goto	l3369
  4292  035B                     l3361:	
  4293                           ;RF_Control_B1.c: 350: case 0x00:
  4294                           
  4295                           
  4296                           ;RF_Control_B1.c: 354: product->Data[9]=0;
  4297  035B  0879               	movf	_product,w
  4298  035C  3E09               	addlw	9
  4299  035D  0086               	movwf	6
  4300  035E  0187               	clrf	7
  4301  035F  0181               	clrf	1
  4302                           
  4303                           ;RF_Control_B1.c: 355: product->Data[11]=0;
  4304  0360  0879               	movf	_product,w
  4305  0361  3E0B               	addlw	11
  4306  0362  0086               	movwf	6
  4307  0363  0187               	clrf	7
  4308  0364  0181               	clrf	1
  4309                           
  4310                           ;RF_Control_B1.c: 356: product->Data[15]=0;
  4311  0365  0879               	movf	_product,w
  4312  0366  3E0F               	addlw	15
  4313  0367  0086               	movwf	6
  4314  0368  0187               	clrf	7
  4315  0369  0181               	clrf	1
  4316                           
  4317                           ;RF_Control_B1.c: 357: product->Data[17]=0;
  4318  036A  0879               	movf	_product,w
  4319  036B  3E11               	addlw	17
  4320  036C  0086               	movwf	6
  4321  036D  0187               	clrf	7
  4322  036E  0181               	clrf	1
  4323                           
  4324                           ;RF_Control_B1.c: 358: ;;
  4325                           ;RF_Control_B1.c: 360: break;
  4326  036F  0008               	return
  4327  0370                     l3363:	
  4328                           ;RF_Control_B1.c: 361: case 0x20:
  4329                           
  4330                           
  4331                           ;RF_Control_B1.c: 362: product->Data[9]=0;
  4332  0370  0879               	movf	_product,w
  4333  0371  3E09               	addlw	9
  4334  0372  0086               	movwf	6
  4335  0373  0187               	clrf	7
  4336  0374  0181               	clrf	1
  4337                           
  4338                           ;RF_Control_B1.c: 363: product->Data[11]=0;
  4339  0375  0879               	movf	_product,w
  4340  0376  3E0B               	addlw	11
  4341  0377  0086               	movwf	6
  4342  0378  0187               	clrf	7
  4343  0379  0181               	clrf	1
  4344                           
  4345                           ;RF_Control_B1.c: 364: product->Data[17]=0;
  4346  037A  0879               	movf	_product,w
  4347  037B  3E11               	addlw	17
  4348  037C  0086               	movwf	6
  4349  037D  0187               	clrf	7
  4350  037E  0181               	clrf	1
  4351                           
  4352                           ;RF_Control_B1.c: 365: setTxData();
  4353  037F  3181  216A         	fcall	_setTxData
  4354                           
  4355                           ;RF_Control_B1.c: 403: }
  4356                           
  4357                           ;RF_Control_B1.c: 402: break;
  4358                           
  4359                           ;RF_Control_B1.c: 396: case 0x31:
  4360                           
  4361                           ;RF_Control_B1.c: 395: break;
  4362                           
  4363                           ;RF_Control_B1.c: 389: case 0x21:
  4364                           
  4365                           ;RF_Control_B1.c: 388: break;
  4366                           
  4367                           ;RF_Control_B1.c: 382: case 0x11:
  4368                           
  4369                           ;RF_Control_B1.c: 381: break;
  4370                           
  4371                           ;RF_Control_B1.c: 377: case 0x03:
  4372                           
  4373                           ;RF_Control_B1.c: 376: break;
  4374                           
  4375                           ;RF_Control_B1.c: 372: case 0x02:
  4376                           
  4377                           ;RF_Control_B1.c: 371: break;
  4378                           
  4379                           ;RF_Control_B1.c: 367: case 0x01:
  4380                           
  4381                           ;RF_Control_B1.c: 366: break;
  4382  0381  0008               	return
  4383  0382                     l3369:	
  4384  0382  0021               	movlb	1	; select bank1
  4385  0383  084F               	movf	(_RF_Data^(0+128)+15),w
  4386                           
  4387                           ; Switch size 1, requested type "space"
  4388                           ; Number of cases is 8, Range of values is 0 to 49
  4389                           ; switch strategies available:
  4390                           ; Name         Instructions Cycles
  4391                           ; simple_byte           25    13 (average)
  4392                           ; direct_byte          106     6 (fixed)
  4393                           ; jumptable            260     6 (fixed)
  4394                           ;	Chosen strategy is simple_byte
  4395  0384  3A00               	xorlw	0	; case 0
  4396  0385  1903               	skipnz
  4397  0386  2B5B               	goto	l3361
  4398  0387  3A01               	xorlw	1	; case 1
  4399  0388  1903               	skipnz
  4400  0389  2B9D               	goto	l1046
  4401  038A  3A03               	xorlw	3	; case 2
  4402  038B  1903               	skipnz
  4403  038C  2B9D               	goto	l1046
  4404  038D  3A01               	xorlw	1	; case 3
  4405  038E  1903               	skipnz
  4406  038F  2B9D               	goto	l1046
  4407  0390  3A12               	xorlw	18	; case 17
  4408  0391  1903               	skipnz
  4409  0392  2B9D               	goto	l1046
  4410  0393  3A31               	xorlw	49	; case 32
  4411  0394  1903               	skipnz
  4412  0395  2B70               	goto	l3363
  4413  0396  3A01               	xorlw	1	; case 33
  4414  0397  1903               	skipnz
  4415  0398  2B9D               	goto	l1046
  4416  0399  3A10               	xorlw	16	; case 49
  4417  039A  1903               	skipnz
  4418  039B  2B9D               	goto	l1046
  4419  039C  2B9D               	goto	l1046
  4420  039D                     l1046:	
  4421  039D  0008               	return
  4422  039E                     __end_of_setControl_Lights_Table:	
  4423                           
  4424                           	psect	text14
  4425  016A                     __ptext14:	
  4426 ;; *************** function _setTxData *****************
  4427 ;; Defined at:
  4428 ;;		line 211 in file "../src/RF_Control_B1.c"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;		None
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;  i               1    0        unsigned char 
  4433 ;; Return value:  Size  Location     Type
  4434 ;;		None               void
  4435 ;; Registers used:
  4436 ;;		wreg, fsr1l, fsr1h
  4437 ;; Tracked objects:
  4438 ;;		On entry : 0/0
  4439 ;;		On exit  : 0/0
  4440 ;;		Unchanged: 0/0
  4441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4442 ;;      Params:         0       0       0       0       0       0       0       0
  4443 ;;      Locals:         0       0       0       0       0       0       0       0
  4444 ;;      Temps:          1       0       0       0       0       0       0       0
  4445 ;;      Totals:         1       0       0       0       0       0       0       0
  4446 ;;Total ram usage:        1 bytes
  4447 ;; Hardware stack levels used:    1
  4448 ;; Hardware stack levels required when called:    3
  4449 ;; This function calls:
  4450 ;;		Nothing
  4451 ;; This function is called by:
  4452 ;;		_UART_Receive
  4453 ;;		_getRxData
  4454 ;;		_setControl_Lights_Table
  4455 ;;		_setRFSW_Control
  4456 ;;		_setRFSW_AdjControl
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459                           
  4460                           
  4461                           ;psect for function _setTxData
  4462  016A                     _setTxData:	
  4463                           
  4464                           ;RF_Control_B1.c: 212: char i;
  4465                           ;RF_Control_B1.c: 213: if (RF1.Enable == 1) {
  4466                           
  4467                           ;incstack = 0
  4468                           ; Regs used in _setTxData: [wregfsr1]
  4469  016A  0020               	movlb	0	; select bank0
  4470  016B  1C2F               	btfss	_RF1,0
  4471  016C  0008               	return
  4472                           
  4473                           ;RF_Control_B1.c: 215: if (RF1.TransceiveGO == 0) {
  4474  016D  192F               	btfsc	_RF1,2
  4475  016E  0008               	return
  4476                           
  4477                           ;RF_Control_B1.c: 216: RF1.TransceiveGO = 1;
  4478  016F  152F               	bsf	_RF1,2
  4479                           
  4480                           ;RF_Control_B1.c: 217: RF1.RunTime = 20;
  4481  0170  3014               	movlw	20
  4482  0171  00B6               	movwf	_RF1+7
  4483  0172  3000               	movlw	0
  4484  0173  00B7               	movwf	_RF1+8
  4485                           
  4486                           ;RF_Control_B1.c: 226: RF_Data[0] = 0xAA;
  4487  0174  30AA               	movlw	170
  4488  0175  00F4               	movwf	??_setTxData
  4489  0176  0874               	movf	??_setTxData,w
  4490  0177  0021               	movlb	1	; select bank1
  4491  0178  00C0               	movwf	_RF_Data^(0+128)
  4492                           
  4493                           ;RF_Control_B1.c: 227: RF_Data[1] = 0x01;
  4494  0179  01C1               	clrf	(_RF_Data^(0+128)+1)
  4495  017A  0AC1               	incf	(_RF_Data^(0+128)+1),f
  4496                           
  4497                           ;RF_Control_B1.c: 232: RF_Data[2] = product->Data[2];
  4498  017B  0879               	movf	_product,w
  4499  017C  0086               	movwf	6
  4500  017D  0187               	clrf	7
  4501  017E  3F42               	moviw [2]fsr1
  4502  017F  00C2               	movwf	(_RF_Data^(0+128)+2)
  4503                           
  4504                           ;RF_Control_B1.c: 233: RF_Data[3] = product->Data[3];
  4505  0180  0879               	movf	_product,w
  4506  0181  0086               	movwf	6
  4507  0182  0187               	clrf	7
  4508  0183  3F43               	moviw [3]fsr1
  4509  0184  00C3               	movwf	(_RF_Data^(0+128)+3)
  4510                           
  4511                           ;RF_Control_B1.c: 234: RF_Data[4] = product->Data[4];
  4512  0185  0879               	movf	_product,w
  4513  0186  0086               	movwf	6
  4514  0187  0187               	clrf	7
  4515  0188  3F44               	moviw [4]fsr1
  4516  0189  00C4               	movwf	(_RF_Data^(0+128)+4)
  4517                           
  4518                           ;RF_Control_B1.c: 235: RF_Data[5] = product->Data[5];
  4519  018A  0879               	movf	_product,w
  4520  018B  0086               	movwf	6
  4521  018C  0187               	clrf	7
  4522  018D  3F45               	moviw [5]fsr1
  4523  018E  00C5               	movwf	(_RF_Data^(0+128)+5)
  4524                           
  4525                           ;RF_Control_B1.c: 236: RF_Data[6] = product->Data[6];
  4526  018F  0879               	movf	_product,w
  4527  0190  0086               	movwf	6
  4528  0191  0187               	clrf	7
  4529  0192  3F46               	moviw [6]fsr1
  4530  0193  00C6               	movwf	(_RF_Data^(0+128)+6)
  4531                           
  4532                           ;RF_Control_B1.c: 237: RF_Data[7] = product->Data[7];
  4533  0194  0879               	movf	_product,w
  4534  0195  0086               	movwf	6
  4535  0196  0187               	clrf	7
  4536  0197  3F47               	moviw [7]fsr1
  4537  0198  00C7               	movwf	(_RF_Data^(0+128)+7)
  4538                           
  4539                           ;RF_Control_B1.c: 238: RF_Data[8] = product->Data[8];
  4540  0199  0879               	movf	_product,w
  4541  019A  0086               	movwf	6
  4542  019B  0187               	clrf	7
  4543  019C  3F48               	moviw [8]fsr1
  4544  019D  00C8               	movwf	(_RF_Data^(0+128)+8)
  4545                           
  4546                           ;RF_Control_B1.c: 239: RF_Data[9] = product->Data[9];
  4547  019E  0879               	movf	_product,w
  4548  019F  0086               	movwf	6
  4549  01A0  0187               	clrf	7
  4550  01A1  3F49               	moviw [9]fsr1
  4551  01A2  00C9               	movwf	(_RF_Data^(0+128)+9)
  4552                           
  4553                           ;RF_Control_B1.c: 240: RF_Data[10] = product->Data[10];
  4554  01A3  0879               	movf	_product,w
  4555  01A4  0086               	movwf	6
  4556  01A5  0187               	clrf	7
  4557  01A6  3F4A               	moviw [10]fsr1
  4558  01A7  00CA               	movwf	(_RF_Data^(0+128)+10)
  4559                           
  4560                           ;RF_Control_B1.c: 241: RF_Data[11] = product->Data[11];
  4561  01A8  0879               	movf	_product,w
  4562  01A9  0086               	movwf	6
  4563  01AA  0187               	clrf	7
  4564  01AB  3F4B               	moviw [11]fsr1
  4565  01AC  00CB               	movwf	(_RF_Data^(0+128)+11)
  4566                           
  4567                           ;RF_Control_B1.c: 242: RF_Data[12] = product->Data[12];
  4568  01AD  0879               	movf	_product,w
  4569  01AE  0086               	movwf	6
  4570  01AF  0187               	clrf	7
  4571  01B0  3F4C               	moviw [12]fsr1
  4572  01B1  00CC               	movwf	(_RF_Data^(0+128)+12)
  4573                           
  4574                           ;RF_Control_B1.c: 243: RF_Data[13] = product->Data[13];
  4575  01B2  0879               	movf	_product,w
  4576  01B3  0086               	movwf	6
  4577  01B4  0187               	clrf	7
  4578  01B5  3F4D               	moviw [13]fsr1
  4579  01B6  00CD               	movwf	(_RF_Data^(0+128)+13)
  4580                           
  4581                           ;RF_Control_B1.c: 244: RF_Data[14] = product->Data[14];
  4582  01B7  0879               	movf	_product,w
  4583  01B8  0086               	movwf	6
  4584  01B9  0187               	clrf	7
  4585  01BA  3F4E               	moviw [14]fsr1
  4586  01BB  00CE               	movwf	(_RF_Data^(0+128)+14)
  4587                           
  4588                           ;RF_Control_B1.c: 245: RF_Data[15] = product->Data[15];
  4589  01BC  0879               	movf	_product,w
  4590  01BD  0086               	movwf	6
  4591  01BE  0187               	clrf	7
  4592  01BF  3F4F               	moviw [15]fsr1
  4593  01C0  00CF               	movwf	(_RF_Data^(0+128)+15)
  4594                           
  4595                           ;RF_Control_B1.c: 246: RF_Data[16] = product->Data[16];
  4596  01C1  0879               	movf	_product,w
  4597  01C2  0086               	movwf	6
  4598  01C3  0187               	clrf	7
  4599  01C4  3F50               	moviw [16]fsr1
  4600  01C5  00D0               	movwf	(_RF_Data^(0+128)+16)
  4601                           
  4602                           ;RF_Control_B1.c: 247: RF_Data[17] = product->Data[17];
  4603  01C6  0879               	movf	_product,w
  4604  01C7  0086               	movwf	6
  4605  01C8  0187               	clrf	7
  4606  01C9  3F51               	moviw [17]fsr1
  4607  01CA  00D1               	movwf	(_RF_Data^(0+128)+17)
  4608                           
  4609                           ;RF_Control_B1.c: 248: RF_Data[18] = product->Data[18];
  4610  01CB  0879               	movf	_product,w
  4611  01CC  0086               	movwf	6
  4612  01CD  0187               	clrf	7
  4613  01CE  3F52               	moviw [18]fsr1
  4614  01CF  00D2               	movwf	(_RF_Data^(0+128)+18)
  4615                           
  4616                           ;RF_Control_B1.c: 249: RF_Data[19] = product->Data[19];
  4617  01D0  0879               	movf	_product,w
  4618  01D1  0086               	movwf	6
  4619  01D2  0187               	clrf	7
  4620  01D3  3F53               	moviw [19]fsr1
  4621  01D4  00D3               	movwf	(_RF_Data^(0+128)+19)
  4622                           
  4623                           ;RF_Control_B1.c: 250: RF_Data[20] = 0xaa;
  4624  01D5  30AA               	movlw	170
  4625  01D6  00F4               	movwf	??_setTxData
  4626  01D7  0874               	movf	??_setTxData,w
  4627  01D8  00D4               	movwf	(_RF_Data^(0+128)+20)
  4628  01D9  0008               	return
  4629  01DA                     __end_of_setTxData:	
  4630                           
  4631                           	psect	text15
  4632  0641                     __ptext15:	
  4633 ;; *************** function _getMain_All_Error_Status *****************
  4634 ;; Defined at:
  4635 ;;		line 376 in file "../src/Main_B1.c"
  4636 ;; Parameters:    Size  Location     Type
  4637 ;;  command         1    wreg     unsigned char 
  4638 ;; Auto vars:     Size  Location     Type
  4639 ;;  command         1    0[COMMON] unsigned char 
  4640 ;;  status          1    4[COMMON] unsigned char 
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  1    wreg      unsigned char 
  4643 ;; Registers used:
  4644 ;;		wreg, status,2
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4650 ;;      Params:         0       0       0       0       0       0       0       0
  4651 ;;      Locals:         1       0       0       0       0       0       0       0
  4652 ;;      Temps:          0       0       0       0       0       0       0       0
  4653 ;;      Totals:         1       0       0       0       0       0       0       0
  4654 ;;Total ram usage:        1 bytes
  4655 ;; Hardware stack levels used:    1
  4656 ;; Hardware stack levels required when called:    3
  4657 ;; This function calls:
  4658 ;;		Nothing
  4659 ;; This function is called by:
  4660 ;;		_setRF_Main
  4661 ;;		_getRxData
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           
  4666                           ;psect for function _getMain_All_Error_Status
  4667  0641                     _getMain_All_Error_Status:	
  4668                           
  4669                           ;Main_B1.c: 377: char status = 0;
  4670                           
  4671                           ;incstack = 0
  4672                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2]
  4673  0641  01F4               	clrf	getMain_All_Error_Status@status
  4674                           
  4675                           ;Main_B1.c: 413: return status;
  4676  0642  0874               	movf	getMain_All_Error_Status@status,w
  4677  0643  0008               	return
  4678  0644                     __end_of_getMain_All_Error_Status:	
  4679                           
  4680                           	psect	text16
  4681  05B4                     __ptext16:	
  4682 ;; *************** function _RF_RxDisable *****************
  4683 ;; Defined at:
  4684 ;;		line 269 in file "../src/RF_Control_B1.c"
  4685 ;; Parameters:    Size  Location     Type
  4686 ;;		None
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;		None
  4689 ;; Return value:  Size  Location     Type
  4690 ;;		None               void
  4691 ;; Registers used:
  4692 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4693 ;; Tracked objects:
  4694 ;;		On entry : 0/0
  4695 ;;		On exit  : 0/0
  4696 ;;		Unchanged: 0/0
  4697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4698 ;;      Params:         0       0       0       0       0       0       0       0
  4699 ;;      Locals:         0       0       0       0       0       0       0       0
  4700 ;;      Temps:          0       0       0       0       0       0       0       0
  4701 ;;      Totals:         0       0       0       0       0       0       0       0
  4702 ;;Total ram usage:        0 bytes
  4703 ;; Hardware stack levels used:    1
  4704 ;; Hardware stack levels required when called:    5
  4705 ;; This function calls:
  4706 ;;		_CC2500_WriteCommand
  4707 ;; This function is called by:
  4708 ;;		_setRF_Main
  4709 ;; This function uses a non-reentrant model
  4710 ;;
  4711                           
  4712                           
  4713                           ;psect for function _RF_RxDisable
  4714  05B4                     _RF_RxDisable:	
  4715                           
  4716                           ;RF_Control_B1.c: 270: if (RF1.ReceiveGO == 1 || RF1.RxStatus == 1) {
  4717                           
  4718                           ;incstack = 0
  4719                           ; Regs used in _RF_RxDisable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4720  05B4  0020               	movlb	0	; select bank0
  4721  05B5  18AF               	btfsc	_RF1,1
  4722  05B6  2DB9               	goto	l1008
  4723  05B7  1DAF               	btfss	_RF1,3
  4724  05B8  0008               	return
  4725  05B9                     l1008:	
  4726                           
  4727                           ;RF_Control_B1.c: 271: RF1.RxStatus = 0;
  4728  05B9  11AF               	bcf	_RF1,3
  4729                           
  4730                           ;RF_Control_B1.c: 272: RF1.ReceiveGO = 0;
  4731  05BA  10AF               	bcf	_RF1,1
  4732                           
  4733                           ;RF_Control_B1.c: 273: CC2500_WriteCommand(0x36);
  4734  05BB  3036               	movlw	54
  4735  05BC  3185  2536  3185   	fcall	_CC2500_WriteCommand
  4736                           
  4737                           ;RF_Control_B1.c: 275: CC2500_WriteCommand(0x3A);
  4738  05BF  303A               	movlw	58
  4739  05C0  3185  2536         	fcall	_CC2500_WriteCommand
  4740  05C2  0008               	return
  4741  05C3                     __end_of_RF_RxDisable:	
  4742                           
  4743                           	psect	text17
  4744  0266                     __ptext17:	
  4745 ;; *************** function _CC2500_TxData *****************
  4746 ;; Defined at:
  4747 ;;		line 32 in file "../src/CC2500_B1.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;		None
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;  loop_e          1    3[BANK0 ] unsigned char 
  4752 ;; Return value:  Size  Location     Type
  4753 ;;		None               void
  4754 ;; Registers used:
  4755 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4756 ;; Tracked objects:
  4757 ;;		On entry : 0/0
  4758 ;;		On exit  : 0/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4761 ;;      Params:         0       0       0       0       0       0       0       0
  4762 ;;      Locals:         0       1       0       0       0       0       0       0
  4763 ;;      Temps:          0       1       0       0       0       0       0       0
  4764 ;;      Totals:         0       2       0       0       0       0       0       0
  4765 ;;Total ram usage:        2 bytes
  4766 ;; Hardware stack levels used:    1
  4767 ;; Hardware stack levels required when called:    5
  4768 ;; This function calls:
  4769 ;;		_CC2500_WriteByte
  4770 ;;		_CC2500_WriteCommand
  4771 ;;		_Timeout_Counter
  4772 ;;		_set_TimeoutCleared
  4773 ;; This function is called by:
  4774 ;;		_setRF_Main
  4775 ;; This function uses a non-reentrant model
  4776 ;;
  4777                           
  4778                           
  4779                           ;psect for function _CC2500_TxData
  4780  0266                     _CC2500_TxData:	
  4781                           
  4782                           ;CC2500_B1.c: 33: unsigned char loop_e;
  4783                           ;CC2500_B1.c: 35: RC0 = 0;
  4784                           
  4785                           ;incstack = 0
  4786                           ; Regs used in _CC2500_TxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4787  0266  0020               	movlb	0	; select bank0
  4788  0267  100E               	bcf	14,0	;volatile
  4789                           
  4790                           ;CC2500_B1.c: 36: SPI0Buffer = 0x3F + 0x40;
  4791  0268  307F               	movlw	127
  4792  0269  00D4               	movwf	??_CC2500_TxData
  4793  026A  0854               	movf	??_CC2500_TxData,w
  4794  026B  00F7               	movwf	_SPI0Buffer
  4795                           
  4796                           ;CC2500_B1.c: 37: while (RC5 == 1 && myMain.Timeout == 0) {
  4797  026C  2A70               	goto	l3377
  4798  026D                     l3375:	
  4799                           
  4800                           ;CC2500_B1.c: 38: Timeout_Counter();
  4801  026D  3185  2563  3182   	fcall	_Timeout_Counter
  4802  0270                     l3377:	
  4803  0270  0020               	movlb	0	; select bank0
  4804  0271  1E8E               	btfss	14,5	;volatile
  4805  0272  2A75               	goto	l3381
  4806  0273  1D2C               	btfss	_myMain+12,2
  4807  0274  2A6D               	goto	l3375
  4808  0275                     l3381:	
  4809                           
  4810                           ;CC2500_B1.c: 39: };
  4811                           ;CC2500_B1.c: 40: set_TimeoutCleared();
  4812  0275  3186  2629  3182   	fcall	_set_TimeoutCleared
  4813                           
  4814                           ;CC2500_B1.c: 42: CC2500_WriteByte();
  4815  0278  3185  2578  3182   	fcall	_CC2500_WriteByte
  4816                           
  4817                           ;CC2500_B1.c: 43: SPI0Buffer = Tx_Length;
  4818  027B  0020               	movlb	0	; select bank0
  4819  027C  085E               	movf	_Tx_Length,w
  4820  027D  00D4               	movwf	??_CC2500_TxData
  4821  027E  0854               	movf	??_CC2500_TxData,w
  4822  027F  00F7               	movwf	_SPI0Buffer
  4823                           
  4824                           ;CC2500_B1.c: 44: CC2500_WriteByte();
  4825  0280  3185  2578  3182   	fcall	_CC2500_WriteByte
  4826                           
  4827                           ;CC2500_B1.c: 45: for (loop_e = 0; loop_e < Tx_Length; loop_e++) {
  4828  0283  0020               	movlb	0	; select bank0
  4829  0284  01D5               	clrf	CC2500_TxData@loop_e
  4830  0285                     l3395:	
  4831  0285  085E               	movf	_Tx_Length,w
  4832  0286  0255               	subwf	CC2500_TxData@loop_e,w
  4833  0287  1803               	btfsc	3,0
  4834  0288  2A9A               	goto	l134
  4835                           
  4836                           ;CC2500_B1.c: 46: SPI0Buffer = RF_Data[loop_e];
  4837  0289  0855               	movf	CC2500_TxData@loop_e,w
  4838  028A  3EC0               	addlw	_RF_Data& (0+255)
  4839  028B  0086               	movwf	6
  4840  028C  0187               	clrf	7
  4841  028D  0801               	movf	1,w
  4842  028E  00D4               	movwf	??_CC2500_TxData
  4843  028F  0854               	movf	??_CC2500_TxData,w
  4844  0290  00F7               	movwf	_SPI0Buffer
  4845                           
  4846                           ;CC2500_B1.c: 47: CC2500_WriteByte();
  4847  0291  3185  2578  3182   	fcall	_CC2500_WriteByte
  4848  0294  3001               	movlw	1
  4849  0295  0020               	movlb	0	; select bank0
  4850  0296  00D4               	movwf	??_CC2500_TxData
  4851  0297  0854               	movf	??_CC2500_TxData,w
  4852  0298  07D5               	addwf	CC2500_TxData@loop_e,f
  4853  0299  2A85               	goto	l3395
  4854  029A                     l134:	
  4855                           
  4856                           ;CC2500_B1.c: 48: }
  4857                           ;CC2500_B1.c: 49: RC0 = 1;
  4858  029A  140E               	bsf	14,0	;volatile
  4859                           
  4860                           ;CC2500_B1.c: 50: CC2500_WriteCommand(0x35);
  4861  029B  3035               	movlw	53
  4862  029C  3185  2536  3182   	fcall	_CC2500_WriteCommand
  4863                           
  4864                           ;CC2500_B1.c: 51: while (RC1 == 0 && myMain.Timeout == 0) {
  4865  029F  2AA3               	goto	l3401
  4866  02A0                     l3399:	
  4867                           
  4868                           ;CC2500_B1.c: 52: Timeout_Counter();
  4869  02A0  3185  2563  3182   	fcall	_Timeout_Counter
  4870  02A3                     l3401:	
  4871  02A3  0020               	movlb	0	; select bank0
  4872  02A4  188E               	btfsc	14,1	;volatile
  4873  02A5  2AA8               	goto	l3405
  4874  02A6  1D2C               	btfss	_myMain+12,2
  4875  02A7  2AA0               	goto	l3399
  4876  02A8                     l3405:	
  4877                           
  4878                           ;CC2500_B1.c: 53: };
  4879                           ;CC2500_B1.c: 54: set_TimeoutCleared();
  4880  02A8  3186  2629  3182   	fcall	_set_TimeoutCleared
  4881                           
  4882                           ;CC2500_B1.c: 56: while (RC1 == 1 && myMain.Timeout == 0) {
  4883  02AB  2AAF               	goto	l3409
  4884  02AC                     l3407:	
  4885                           
  4886                           ;CC2500_B1.c: 57: Timeout_Counter();
  4887  02AC  3185  2563  3182   	fcall	_Timeout_Counter
  4888  02AF                     l3409:	
  4889  02AF  0020               	movlb	0	; select bank0
  4890  02B0  1C8E               	btfss	14,1	;volatile
  4891  02B1  2AB4               	goto	l3413
  4892  02B2  1D2C               	btfss	_myMain+12,2
  4893  02B3  2AAC               	goto	l3407
  4894  02B4                     l3413:	
  4895                           
  4896                           ;CC2500_B1.c: 58: };
  4897                           ;CC2500_B1.c: 59: set_TimeoutCleared();
  4898  02B4  3186  2629  3182   	fcall	_set_TimeoutCleared
  4899                           
  4900                           ;CC2500_B1.c: 61: CC2500_WriteCommand(0x36);
  4901  02B7  3036               	movlw	54
  4902  02B8  3185  2536  3182   	fcall	_CC2500_WriteCommand
  4903                           
  4904                           ;CC2500_B1.c: 62: CC2500_WriteCommand(0x3B);
  4905  02BB  303B               	movlw	59
  4906  02BC  3185  2536         	fcall	_CC2500_WriteCommand
  4907                           
  4908                           ;CC2500_B1.c: 64: Transceive_OK = 1;
  4909  02BE  14F6               	bsf	_Transceive_OK/(0+8),_Transceive_OK& (0+7)
  4910  02BF  0008               	return
  4911  02C0                     __end_of_CC2500_TxData:	
  4912                           
  4913                           	psect	text18
  4914  0644                     __ptext18:	
  4915 ;; *************** function _RF_Initialization *****************
  4916 ;; Defined at:
  4917 ;;		line 9 in file "../src/RF_Control_B1.c"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;		None
  4920 ;; Auto vars:     Size  Location     Type
  4921 ;;		None
  4922 ;; Return value:  Size  Location     Type
  4923 ;;		None               void
  4924 ;; Registers used:
  4925 ;;		wreg, status,2, status,0, pclath, cstack
  4926 ;; Tracked objects:
  4927 ;;		On entry : 0/0
  4928 ;;		On exit  : 0/0
  4929 ;;		Unchanged: 0/0
  4930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4931 ;;      Params:         0       0       0       0       0       0       0       0
  4932 ;;      Locals:         0       0       0       0       0       0       0       0
  4933 ;;      Temps:          0       0       0       0       0       0       0       0
  4934 ;;      Totals:         0       0       0       0       0       0       0       0
  4935 ;;Total ram usage:        0 bytes
  4936 ;; Hardware stack levels used:    1
  4937 ;; Hardware stack levels required when called:    4
  4938 ;; This function calls:
  4939 ;;		_setRF_Initialization
  4940 ;; This function is called by:
  4941 ;;		_main
  4942 ;; This function uses a non-reentrant model
  4943 ;;
  4944                           
  4945                           
  4946                           ;psect for function _RF_Initialization
  4947  0644                     _RF_Initialization:	
  4948                           
  4949                           ;RF_Control_B1.c: 11: setRF_Initialization();
  4950                           
  4951                           ;incstack = 0
  4952                           ; Regs used in _RF_Initialization: [wreg+status,2+status,0+pclath+cstack]
  4953  0644  3186  2600         	fcall	_setRF_Initialization
  4954  0646  0008               	return
  4955  0647                     __end_of_RF_Initialization:	
  4956                           
  4957                           	psect	text19
  4958  0600                     __ptext19:	
  4959 ;; *************** function _setRF_Initialization *****************
  4960 ;; Defined at:
  4961 ;;		line 43 in file "../src/RF_Control_B1.c"
  4962 ;; Parameters:    Size  Location     Type
  4963 ;;		None
  4964 ;; Auto vars:     Size  Location     Type
  4965 ;;		None
  4966 ;; Return value:  Size  Location     Type
  4967 ;;		None               void
  4968 ;; Registers used:
  4969 ;;		wreg
  4970 ;; Tracked objects:
  4971 ;;		On entry : 0/0
  4972 ;;		On exit  : 0/0
  4973 ;;		Unchanged: 0/0
  4974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4975 ;;      Params:         0       0       0       0       0       0       0       0
  4976 ;;      Locals:         0       0       0       0       0       0       0       0
  4977 ;;      Temps:          1       0       0       0       0       0       0       0
  4978 ;;      Totals:         1       0       0       0       0       0       0       0
  4979 ;;Total ram usage:        1 bytes
  4980 ;; Hardware stack levels used:    1
  4981 ;; Hardware stack levels required when called:    3
  4982 ;; This function calls:
  4983 ;;		Nothing
  4984 ;; This function is called by:
  4985 ;;		_RF_Initialization
  4986 ;; This function uses a non-reentrant model
  4987 ;;
  4988                           
  4989                           
  4990                           ;psect for function _setRF_Initialization
  4991  0600                     _setRF_Initialization:	
  4992                           
  4993                           ;RF_Control_B1.c: 45: Tx_Length = 21;
  4994                           
  4995                           ;incstack = 0
  4996                           ; Regs used in _setRF_Initialization: [wreg]
  4997  0600  3015               	movlw	21
  4998  0601  00F4               	movwf	??_setRF_Initialization
  4999  0602  0874               	movf	??_setRF_Initialization,w
  5000  0603  0020               	movlb	0	; select bank0
  5001  0604  00DE               	movwf	_Tx_Length
  5002                           
  5003                           ;RF_Control_B1.c: 46: RF1.RunTime = 10;
  5004  0605  300A               	movlw	10
  5005  0606  00B6               	movwf	_RF1+7
  5006  0607  3000               	movlw	0
  5007  0608  00B7               	movwf	_RF1+8
  5008  0609  0008               	return
  5009  060A                     __end_of_setRF_Initialization:	
  5010                           
  5011                           	psect	text20
  5012  05DD                     __ptext20:	
  5013 ;; *************** function _Mcu_Initialization *****************
  5014 ;; Defined at:
  5015 ;;		line 30 in file "../src/MCU_B1.c"
  5016 ;; Parameters:    Size  Location     Type
  5017 ;;		None
  5018 ;; Auto vars:     Size  Location     Type
  5019 ;;		None
  5020 ;; Return value:  Size  Location     Type
  5021 ;;		None               void
  5022 ;; Registers used:
  5023 ;;		wreg, status,2, status,0, pclath, cstack
  5024 ;; Tracked objects:
  5025 ;;		On entry : 0/0
  5026 ;;		On exit  : 0/0
  5027 ;;		Unchanged: 0/0
  5028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5029 ;;      Params:         0       0       0       0       0       0       0       0
  5030 ;;      Locals:         0       0       0       0       0       0       0       0
  5031 ;;      Temps:          0       0       0       0       0       0       0       0
  5032 ;;      Totals:         0       0       0       0       0       0       0       0
  5033 ;;Total ram usage:        0 bytes
  5034 ;; Hardware stack levels used:    1
  5035 ;; Hardware stack levels required when called:    4
  5036 ;; This function calls:
  5037 ;;		_Fosc_Set
  5038 ;;		_IO_Set
  5039 ;;		_TMR1_Set
  5040 ;;		_UART_Set
  5041 ;; This function is called by:
  5042 ;;		_main
  5043 ;; This function uses a non-reentrant model
  5044 ;;
  5045                           
  5046                           
  5047                           ;psect for function _Mcu_Initialization
  5048  05DD                     _Mcu_Initialization:	
  5049                           
  5050                           ;MCU_B1.c: 32: Fosc_Set();
  5051                           
  5052                           ;incstack = 0
  5053                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  5054  05DD  3186  262E  3185   	fcall	_Fosc_Set
  5055                           
  5056                           ;MCU_B1.c: 34: IO_Set();
  5057  05E0  3185  25A1  3185   	fcall	_IO_Set
  5058                           
  5059                           ;MCU_B1.c: 36: ;;
  5060                           ;MCU_B1.c: 38: TMR1_Set();
  5061  05E3  3185  25E9  3185   	fcall	_TMR1_Set
  5062                           
  5063                           ;MCU_B1.c: 40: ;;
  5064                           ;MCU_B1.c: 42: ;;
  5065                           ;MCU_B1.c: 44: ;;
  5066                           ;MCU_B1.c: 46: ;;
  5067                           ;MCU_B1.c: 48: ;;
  5068                           ;MCU_B1.c: 50: UART_Set();
  5069  05E6  3185  258D         	fcall	_UART_Set
  5070  05E8  0008               	return
  5071  05E9                     __end_of_Mcu_Initialization:	
  5072                           
  5073                           	psect	text21
  5074  058D                     __ptext21:	
  5075 ;; *************** function _UART_Set *****************
  5076 ;; Defined at:
  5077 ;;		line 720 in file "../src/MCU_B1.c"
  5078 ;; Parameters:    Size  Location     Type
  5079 ;;		None
  5080 ;; Auto vars:     Size  Location     Type
  5081 ;;		None
  5082 ;; Return value:  Size  Location     Type
  5083 ;;		None               void
  5084 ;; Registers used:
  5085 ;;		wreg, status,2
  5086 ;; Tracked objects:
  5087 ;;		On entry : 0/0
  5088 ;;		On exit  : 0/0
  5089 ;;		Unchanged: 0/0
  5090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5091 ;;      Params:         0       0       0       0       0       0       0       0
  5092 ;;      Locals:         0       0       0       0       0       0       0       0
  5093 ;;      Temps:          0       0       0       0       0       0       0       0
  5094 ;;      Totals:         0       0       0       0       0       0       0       0
  5095 ;;Total ram usage:        0 bytes
  5096 ;; Hardware stack levels used:    1
  5097 ;; Hardware stack levels required when called:    3
  5098 ;; This function calls:
  5099 ;;		Nothing
  5100 ;; This function is called by:
  5101 ;;		_Mcu_Initialization
  5102 ;; This function uses a non-reentrant model
  5103 ;;
  5104                           
  5105                           
  5106                           ;psect for function _UART_Set
  5107  058D                     _UART_Set:	
  5108                           
  5109                           ;MCU_B1.c: 722: TRISC7 = 1;
  5110                           
  5111                           ;incstack = 0
  5112                           ; Regs used in _UART_Set: [wreg+status,2]
  5113  058D  0021               	movlb	1	; select bank1
  5114  058E  178E               	bsf	14,7	;volatile
  5115                           
  5116                           ;MCU_B1.c: 723: TRISC6 = 1;
  5117  058F  170E               	bsf	14,6	;volatile
  5118                           
  5119                           ;MCU_B1.c: 724: SPBRG = ((int)(16000000L/(16UL * 19200) -1));
  5120  0590  3033               	movlw	51
  5121  0591  0023               	movlb	3	; select bank3
  5122  0592  009B               	movwf	27	;volatile
  5123                           
  5124                           ;MCU_B1.c: 726: SPBRGH = 0;
  5125  0593  019C               	clrf	28	;volatile
  5126                           
  5127                           ;MCU_B1.c: 727: BRG16 = 0;
  5128  0594  119F               	bcf	31,3	;volatile
  5129                           
  5130                           ;MCU_B1.c: 729: RCSTA = (0 | 0x90);
  5131  0595  3090               	movlw	144
  5132  0596  009D               	movwf	29	;volatile
  5133                           
  5134                           ;MCU_B1.c: 730: TXSTA = (0x4 | 0 | 0x20);
  5135  0597  3024               	movlw	36
  5136  0598  009E               	movwf	30	;volatile
  5137                           
  5138                           ;MCU_B1.c: 731: TX9 = 0;
  5139  0599  131E               	bcf	30,6	;volatile
  5140                           
  5141                           ;MCU_B1.c: 732: RX9 = 0;
  5142  059A  131D               	bcf	29,6	;volatile
  5143                           
  5144                           ;MCU_B1.c: 733: TXIE = 0;
  5145  059B  0021               	movlb	1	; select bank1
  5146  059C  1211               	bcf	17,4	;volatile
  5147                           
  5148                           ;MCU_B1.c: 734: RCIE = 1;
  5149  059D  1691               	bsf	17,5	;volatile
  5150                           
  5151                           ;MCU_B1.c: 735: PEIE = 1;
  5152  059E  170B               	bsf	11,6	;volatile
  5153                           
  5154                           ;MCU_B1.c: 736: GIE = 1;
  5155  059F  178B               	bsf	11,7	;volatile
  5156  05A0  0008               	return
  5157  05A1                     __end_of_UART_Set:	
  5158                           
  5159                           	psect	text22
  5160  05E9                     __ptext22:	
  5161 ;; *************** function _TMR1_Set *****************
  5162 ;; Defined at:
  5163 ;;		line 199 in file "../src/MCU_B1.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;		None
  5166 ;; Auto vars:     Size  Location     Type
  5167 ;;		None
  5168 ;; Return value:  Size  Location     Type
  5169 ;;		None               void
  5170 ;; Registers used:
  5171 ;;		wreg
  5172 ;; Tracked objects:
  5173 ;;		On entry : 0/0
  5174 ;;		On exit  : 0/0
  5175 ;;		Unchanged: 0/0
  5176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5177 ;;      Params:         0       0       0       0       0       0       0       0
  5178 ;;      Locals:         0       0       0       0       0       0       0       0
  5179 ;;      Temps:          0       0       0       0       0       0       0       0
  5180 ;;      Totals:         0       0       0       0       0       0       0       0
  5181 ;;Total ram usage:        0 bytes
  5182 ;; Hardware stack levels used:    1
  5183 ;; Hardware stack levels required when called:    3
  5184 ;; This function calls:
  5185 ;;		Nothing
  5186 ;; This function is called by:
  5187 ;;		_Mcu_Initialization
  5188 ;; This function uses a non-reentrant model
  5189 ;;
  5190                           
  5191                           
  5192                           ;psect for function _TMR1_Set
  5193  05E9                     _TMR1_Set:	
  5194                           
  5195                           ;MCU_B1.c: 200: T1CON = (0x40 | 0x00 | 0x01);
  5196                           
  5197                           ;incstack = 0
  5198                           ; Regs used in _TMR1_Set: [wreg]
  5199  05E9  3041               	movlw	65
  5200  05EA  0020               	movlb	0	; select bank0
  5201  05EB  0098               	movwf	24	;volatile
  5202                           
  5203                           ;MCU_B1.c: 201: TMR1H = ((65536-1480)/256);
  5204  05EC  30FA               	movlw	250
  5205  05ED  0097               	movwf	23	;volatile
  5206                           
  5207                           ;MCU_B1.c: 202: TMR1L = ((65536-1480)%256);
  5208  05EE  3038               	movlw	56
  5209  05EF  0096               	movwf	22	;volatile
  5210                           
  5211                           ;MCU_B1.c: 203: TMR1IE = 1;
  5212  05F0  0021               	movlb	1	; select bank1
  5213  05F1  1411               	bsf	17,0	;volatile
  5214                           
  5215                           ;MCU_B1.c: 204: PEIE = 1;
  5216  05F2  170B               	bsf	11,6	;volatile
  5217                           
  5218                           ;MCU_B1.c: 205: GIE = 1;
  5219  05F3  178B               	bsf	11,7	;volatile
  5220  05F4  0008               	return
  5221  05F5                     __end_of_TMR1_Set:	
  5222                           
  5223                           	psect	text23
  5224  05A1                     __ptext23:	
  5225 ;; *************** function _IO_Set *****************
  5226 ;; Defined at:
  5227 ;;		line 60 in file "../src/MCU_B1.c"
  5228 ;; Parameters:    Size  Location     Type
  5229 ;;		None
  5230 ;; Auto vars:     Size  Location     Type
  5231 ;;		None
  5232 ;; Return value:  Size  Location     Type
  5233 ;;		None               void
  5234 ;; Registers used:
  5235 ;;		wreg, status,2
  5236 ;; Tracked objects:
  5237 ;;		On entry : 0/0
  5238 ;;		On exit  : 0/0
  5239 ;;		Unchanged: 0/0
  5240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5241 ;;      Params:         0       0       0       0       0       0       0       0
  5242 ;;      Locals:         0       0       0       0       0       0       0       0
  5243 ;;      Temps:          0       0       0       0       0       0       0       0
  5244 ;;      Totals:         0       0       0       0       0       0       0       0
  5245 ;;Total ram usage:        0 bytes
  5246 ;; Hardware stack levels used:    1
  5247 ;; Hardware stack levels required when called:    3
  5248 ;; This function calls:
  5249 ;;		Nothing
  5250 ;; This function is called by:
  5251 ;;		_Mcu_Initialization
  5252 ;; This function uses a non-reentrant model
  5253 ;;
  5254                           
  5255                           
  5256                           ;psect for function _IO_Set
  5257  05A1                     _IO_Set:	
  5258                           
  5259                           ;MCU_B1.c: 73: TRISA = 0b00000000;;
  5260                           
  5261                           ;incstack = 0
  5262                           ; Regs used in _IO_Set: [wreg+status,2]
  5263  05A1  0021               	movlb	1	; select bank1
  5264  05A2  018C               	clrf	12	;volatile
  5265                           
  5266                           ;MCU_B1.c: 74: TRISB = 0b00000000;;
  5267  05A3  018D               	clrf	13	;volatile
  5268                           
  5269                           ;MCU_B1.c: 75: TRISC = 0b11100110;;
  5270  05A4  30E6               	movlw	230
  5271  05A5  008E               	movwf	14	;volatile
  5272                           
  5273                           ;MCU_B1.c: 76: LATA = 0b00000000;;
  5274  05A6  0022               	movlb	2	; select bank2
  5275  05A7  018C               	clrf	12	;volatile
  5276                           
  5277                           ;MCU_B1.c: 77: LATB = 0b00000000;;
  5278  05A8  018D               	clrf	13	;volatile
  5279                           
  5280                           ;MCU_B1.c: 78: LATC = 0b00000000;;
  5281  05A9  018E               	clrf	14	;volatile
  5282                           
  5283                           ;MCU_B1.c: 79: ANSELA = 0b00000000;;
  5284  05AA  0023               	movlb	3	; select bank3
  5285  05AB  018C               	clrf	12	;volatile
  5286                           
  5287                           ;MCU_B1.c: 80: ANSELB = 0b00000000;;
  5288  05AC  018D               	clrf	13	;volatile
  5289                           
  5290                           ;MCU_B1.c: 81: ANSELC = 0b00000000;;
  5291  05AD  018E               	clrf	14	;volatile
  5292                           
  5293                           ;MCU_B1.c: 82: PORTA = 0b00000000;;
  5294  05AE  0020               	movlb	0	; select bank0
  5295  05AF  018C               	clrf	12	;volatile
  5296                           
  5297                           ;MCU_B1.c: 83: PORTB = 0b00000000;;
  5298  05B0  018D               	clrf	13	;volatile
  5299                           
  5300                           ;MCU_B1.c: 84: PORTC = 0b11100110;;
  5301  05B1  30E6               	movlw	230
  5302  05B2  008E               	movwf	14	;volatile
  5303  05B3  0008               	return
  5304  05B4                     __end_of_IO_Set:	
  5305                           
  5306                           	psect	text24
  5307  062E                     __ptext24:	
  5308 ;; *************** function _Fosc_Set *****************
  5309 ;; Defined at:
  5310 ;;		line 56 in file "../src/MCU_B1.c"
  5311 ;; Parameters:    Size  Location     Type
  5312 ;;		None
  5313 ;; Auto vars:     Size  Location     Type
  5314 ;;		None
  5315 ;; Return value:  Size  Location     Type
  5316 ;;		None               void
  5317 ;; Registers used:
  5318 ;;		wreg
  5319 ;; Tracked objects:
  5320 ;;		On entry : 0/0
  5321 ;;		On exit  : 0/0
  5322 ;;		Unchanged: 0/0
  5323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5324 ;;      Params:         0       0       0       0       0       0       0       0
  5325 ;;      Locals:         0       0       0       0       0       0       0       0
  5326 ;;      Temps:          0       0       0       0       0       0       0       0
  5327 ;;      Totals:         0       0       0       0       0       0       0       0
  5328 ;;Total ram usage:        0 bytes
  5329 ;; Hardware stack levels used:    1
  5330 ;; Hardware stack levels required when called:    3
  5331 ;; This function calls:
  5332 ;;		Nothing
  5333 ;; This function is called by:
  5334 ;;		_Mcu_Initialization
  5335 ;; This function uses a non-reentrant model
  5336 ;;
  5337                           
  5338                           
  5339                           ;psect for function _Fosc_Set
  5340  062E                     _Fosc_Set:	
  5341                           
  5342                           ;MCU_B1.c: 57: OSCCON = 0x78;
  5343                           
  5344                           ;incstack = 0
  5345                           ; Regs used in _Fosc_Set: [wreg]
  5346  062E  3078               	movlw	120
  5347  062F  0021               	movlb	1	; select bank1
  5348  0630  0099               	movwf	25	;volatile
  5349  0631  0008               	return
  5350  0632                     __end_of_Fosc_Set:	
  5351                           
  5352                           	psect	text25
  5353  054E                     __ptext25:	
  5354 ;; *************** function _CC2500_PowerOnInitial *****************
  5355 ;; Defined at:
  5356 ;;		line 119 in file "../src/CC2500_B1.c"
  5357 ;; Parameters:    Size  Location     Type
  5358 ;;		None
  5359 ;; Auto vars:     Size  Location     Type
  5360 ;;		None
  5361 ;; Return value:  Size  Location     Type
  5362 ;;		None               void
  5363 ;; Registers used:
  5364 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5365 ;; Tracked objects:
  5366 ;;		On entry : 0/0
  5367 ;;		On exit  : 0/0
  5368 ;;		Unchanged: 0/0
  5369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5370 ;;      Params:         0       0       0       0       0       0       0       0
  5371 ;;      Locals:         0       0       0       0       0       0       0       0
  5372 ;;      Temps:          0       0       0       0       0       0       0       0
  5373 ;;      Totals:         0       0       0       0       0       0       0       0
  5374 ;;Total ram usage:        0 bytes
  5375 ;; Hardware stack levels used:    1
  5376 ;; Hardware stack levels required when called:    6
  5377 ;; This function calls:
  5378 ;;		_CC2500_ClearRXFIFO
  5379 ;;		_CC2500_ClearTXFIFO
  5380 ;;		_CC2500_FrequencyCabr
  5381 ;;		_CC2500_InitPATable
  5382 ;;		_CC2500_InitSetREG
  5383 ;;		_CC2500_PowerRST
  5384 ;;		_CC2500_SIDLEMode
  5385 ;; This function is called by:
  5386 ;;		_main
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           
  5391                           ;psect for function _CC2500_PowerOnInitial
  5392  054E                     _CC2500_PowerOnInitial:	
  5393                           
  5394                           ;CC2500_B1.c: 120: CC2500_PowerRST();
  5395                           
  5396                           ;incstack = 0
  5397                           ; Regs used in _CC2500_PowerOnInitial: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5398  054E  3183  239E  3185   	fcall	_CC2500_PowerRST
  5399                           
  5400                           ;CC2500_B1.c: 121: CC2500_InitSetREG();
  5401  0551  3184  240D  3185   	fcall	_CC2500_InitSetREG
  5402                           
  5403                           ;CC2500_B1.c: 122: CC2500_InitPATable();
  5404  0554  3184  24C0  3185   	fcall	_CC2500_InitPATable
  5405                           
  5406                           ;CC2500_B1.c: 123: CC2500_ClearTXFIFO();
  5407  0557  3186  2636  3185   	fcall	_CC2500_ClearTXFIFO
  5408                           
  5409                           ;CC2500_B1.c: 124: CC2500_ClearRXFIFO();
  5410  055A  3186  263A  3185   	fcall	_CC2500_ClearRXFIFO
  5411                           
  5412                           ;CC2500_B1.c: 125: CC2500_FrequencyCabr();
  5413  055D  3185  25F5  3185   	fcall	_CC2500_FrequencyCabr
  5414                           
  5415                           ;CC2500_B1.c: 126: CC2500_SIDLEMode();
  5416  0560  3186  2632         	fcall	_CC2500_SIDLEMode
  5417  0562  0008               	return
  5418  0563                     __end_of_CC2500_PowerOnInitial:	
  5419                           
  5420                           	psect	text26
  5421  0632                     __ptext26:	
  5422 ;; *************** function _CC2500_SIDLEMode *****************
  5423 ;; Defined at:
  5424 ;;		line 209 in file "../src/CC2500_B1.c"
  5425 ;; Parameters:    Size  Location     Type
  5426 ;;		None
  5427 ;; Auto vars:     Size  Location     Type
  5428 ;;		None
  5429 ;; Return value:  Size  Location     Type
  5430 ;;		None               void
  5431 ;; Registers used:
  5432 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5433 ;; Tracked objects:
  5434 ;;		On entry : 0/0
  5435 ;;		On exit  : 0/0
  5436 ;;		Unchanged: 0/0
  5437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5438 ;;      Params:         0       0       0       0       0       0       0       0
  5439 ;;      Locals:         0       0       0       0       0       0       0       0
  5440 ;;      Temps:          0       0       0       0       0       0       0       0
  5441 ;;      Totals:         0       0       0       0       0       0       0       0
  5442 ;;Total ram usage:        0 bytes
  5443 ;; Hardware stack levels used:    1
  5444 ;; Hardware stack levels required when called:    5
  5445 ;; This function calls:
  5446 ;;		_CC2500_WriteCommand
  5447 ;; This function is called by:
  5448 ;;		_CC2500_PowerOnInitial
  5449 ;; This function uses a non-reentrant model
  5450 ;;
  5451                           
  5452                           
  5453                           ;psect for function _CC2500_SIDLEMode
  5454  0632                     _CC2500_SIDLEMode:	
  5455                           
  5456                           ;CC2500_B1.c: 210: CC2500_WriteCommand(0x36);
  5457                           
  5458                           ;incstack = 0
  5459                           ; Regs used in _CC2500_SIDLEMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5460  0632  3036               	movlw	54
  5461  0633  3185  2536         	fcall	_CC2500_WriteCommand
  5462  0635  0008               	return
  5463  0636                     __end_of_CC2500_SIDLEMode:	
  5464                           
  5465                           	psect	text27
  5466  039E                     __ptext27:	
  5467 ;; *************** function _CC2500_PowerRST *****************
  5468 ;; Defined at:
  5469 ;;		line 132 in file "../src/CC2500_B1.c"
  5470 ;; Parameters:    Size  Location     Type
  5471 ;;		None
  5472 ;; Auto vars:     Size  Location     Type
  5473 ;;		None
  5474 ;; Return value:  Size  Location     Type
  5475 ;;		None               void
  5476 ;; Registers used:
  5477 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5478 ;; Tracked objects:
  5479 ;;		On entry : 0/0
  5480 ;;		On exit  : 0/0
  5481 ;;		Unchanged: 0/0
  5482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5483 ;;      Params:         0       0       0       0       0       0       0       0
  5484 ;;      Locals:         0       0       0       0       0       0       0       0
  5485 ;;      Temps:          0       1       0       0       0       0       0       0
  5486 ;;      Totals:         0       1       0       0       0       0       0       0
  5487 ;;Total ram usage:        1 bytes
  5488 ;; Hardware stack levels used:    1
  5489 ;; Hardware stack levels required when called:    4
  5490 ;; This function calls:
  5491 ;;		_CC2500_WriteByte
  5492 ;;		_DelayTime_1us
  5493 ;;		_Timeout_Counter
  5494 ;;		_set_TimeoutCleared
  5495 ;; This function is called by:
  5496 ;;		_CC2500_PowerOnInitial
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           
  5500                           
  5501                           ;psect for function _CC2500_PowerRST
  5502  039E                     _CC2500_PowerRST:	
  5503                           
  5504                           ;CC2500_B1.c: 133: RC3 = 0;
  5505                           
  5506                           ;incstack = 0
  5507                           ; Regs used in _CC2500_PowerRST: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5508  039E  0020               	movlb	0	; select bank0
  5509  039F  118E               	bcf	14,3	;volatile
  5510                           
  5511                           ;CC2500_B1.c: 134: RC4 = 0;
  5512  03A0  120E               	bcf	14,4	;volatile
  5513                           
  5514                           ;CC2500_B1.c: 135: RC0 = 1;
  5515  03A1  140E               	bsf	14,0	;volatile
  5516                           
  5517                           ;CC2500_B1.c: 136: DelayTime_1us(10);
  5518  03A2  300A               	movlw	10
  5519  03A3  00F4               	movwf	DelayTime_1us@count
  5520  03A4  3000               	movlw	0
  5521  03A5  00F5               	movwf	DelayTime_1us@count+1
  5522  03A6  3184  2437  3183   	fcall	_DelayTime_1us
  5523                           
  5524                           ;CC2500_B1.c: 137: RC0 = 0;
  5525  03A9  0020               	movlb	0	; select bank0
  5526  03AA  100E               	bcf	14,0	;volatile
  5527                           
  5528                           ;CC2500_B1.c: 138: DelayTime_1us(10);
  5529  03AB  300A               	movlw	10
  5530  03AC  00F4               	movwf	DelayTime_1us@count
  5531  03AD  3000               	movlw	0
  5532  03AE  00F5               	movwf	DelayTime_1us@count+1
  5533  03AF  3184  2437  3183   	fcall	_DelayTime_1us
  5534                           
  5535                           ;CC2500_B1.c: 139: RC0 = 1;
  5536  03B2  0020               	movlb	0	; select bank0
  5537  03B3  140E               	bsf	14,0	;volatile
  5538                           
  5539                           ;CC2500_B1.c: 140: DelayTime_1us(40);
  5540  03B4  3028               	movlw	40
  5541  03B5  00F4               	movwf	DelayTime_1us@count
  5542  03B6  3000               	movlw	0
  5543  03B7  00F5               	movwf	DelayTime_1us@count+1
  5544  03B8  3184  2437  3183   	fcall	_DelayTime_1us
  5545                           
  5546                           ;CC2500_B1.c: 141: RC0 = 0;
  5547  03BB  0020               	movlb	0	; select bank0
  5548  03BC  100E               	bcf	14,0	;volatile
  5549                           
  5550                           ;CC2500_B1.c: 142: SPI0Buffer = 0x30;
  5551  03BD  3030               	movlw	48
  5552  03BE  00D6               	movwf	??_CC2500_PowerRST
  5553  03BF  0856               	movf	??_CC2500_PowerRST,w
  5554  03C0  00F7               	movwf	_SPI0Buffer
  5555                           
  5556                           ;CC2500_B1.c: 143: while (RC5 == 1 && myMain.Timeout == 0) {
  5557  03C1  2BC5               	goto	l3535
  5558  03C2                     l3533:	
  5559                           
  5560                           ;CC2500_B1.c: 144: Timeout_Counter();
  5561  03C2  3185  2563  3183   	fcall	_Timeout_Counter
  5562  03C5                     l3535:	
  5563  03C5  0020               	movlb	0	; select bank0
  5564  03C6  1E8E               	btfss	14,5	;volatile
  5565  03C7  2BCA               	goto	l3539
  5566  03C8  1D2C               	btfss	_myMain+12,2
  5567  03C9  2BC2               	goto	l3533
  5568  03CA                     l3539:	
  5569                           
  5570                           ;CC2500_B1.c: 145: };
  5571                           ;CC2500_B1.c: 146: set_TimeoutCleared();
  5572  03CA  3186  2629  3183   	fcall	_set_TimeoutCleared
  5573                           
  5574                           ;CC2500_B1.c: 147: CC2500_WriteByte();
  5575  03CD  3185  2578  3183   	fcall	_CC2500_WriteByte
  5576                           
  5577                           ;CC2500_B1.c: 148: while (RC5 == 1 && myMain.Timeout == 0) {
  5578  03D0  2BD4               	goto	l3545
  5579  03D1                     l3543:	
  5580                           
  5581                           ;CC2500_B1.c: 149: Timeout_Counter();
  5582  03D1  3185  2563  3183   	fcall	_Timeout_Counter
  5583  03D4                     l3545:	
  5584  03D4  0020               	movlb	0	; select bank0
  5585  03D5  1E8E               	btfss	14,5	;volatile
  5586  03D6  2BD9               	goto	l3549
  5587  03D7  1D2C               	btfss	_myMain+12,2
  5588  03D8  2BD1               	goto	l3543
  5589  03D9                     l3549:	
  5590                           
  5591                           ;CC2500_B1.c: 150: };
  5592                           ;CC2500_B1.c: 151: set_TimeoutCleared();
  5593  03D9  3186  2629         	fcall	_set_TimeoutCleared
  5594                           
  5595                           ;CC2500_B1.c: 152: RC4 = 0;
  5596  03DB  0020               	movlb	0	; select bank0
  5597  03DC  120E               	bcf	14,4	;volatile
  5598                           
  5599                           ;CC2500_B1.c: 153: RC0 = 1;
  5600  03DD  140E               	bsf	14,0	;volatile
  5601  03DE  0008               	return
  5602  03DF                     __end_of_CC2500_PowerRST:	
  5603                           
  5604                           	psect	text28
  5605  040D                     __ptext28:	
  5606 ;; *************** function _CC2500_InitSetREG *****************
  5607 ;; Defined at:
  5608 ;;		line 159 in file "../src/CC2500_B1.c"
  5609 ;; Parameters:    Size  Location     Type
  5610 ;;		None
  5611 ;; Auto vars:     Size  Location     Type
  5612 ;;  loop_c          1    6[BANK0 ] unsigned char 
  5613 ;;  temp2           1    5[BANK0 ] unsigned char 
  5614 ;;  temp1           1    4[BANK0 ] unsigned char 
  5615 ;; Return value:  Size  Location     Type
  5616 ;;		None               void
  5617 ;; Registers used:
  5618 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5619 ;; Tracked objects:
  5620 ;;		On entry : 0/0
  5621 ;;		On exit  : 0/0
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5624 ;;      Params:         0       0       0       0       0       0       0       0
  5625 ;;      Locals:         0       3       0       0       0       0       0       0
  5626 ;;      Temps:          0       1       0       0       0       0       0       0
  5627 ;;      Totals:         0       4       0       0       0       0       0       0
  5628 ;;Total ram usage:        4 bytes
  5629 ;; Hardware stack levels used:    1
  5630 ;; Hardware stack levels required when called:    5
  5631 ;; This function calls:
  5632 ;;		_CC2500_WriteREG
  5633 ;; This function is called by:
  5634 ;;		_CC2500_PowerOnInitial
  5635 ;; This function uses a non-reentrant model
  5636 ;;
  5637                           
  5638                           
  5639                           ;psect for function _CC2500_InitSetREG
  5640  040D                     _CC2500_InitSetREG:	
  5641                           
  5642                           ;CC2500_B1.c: 160: unsigned char loop_c;
  5643                           ;CC2500_B1.c: 161: unsigned char temp1, temp2;
  5644                           ;CC2500_B1.c: 163: for (loop_c = 0; loop_c < 47; loop_c++) {
  5645                           
  5646                           ;incstack = 0
  5647                           ; Regs used in _CC2500_InitSetREG: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5648  040D  0020               	movlb	0	; select bank0
  5649  040E  01D8               	clrf	CC2500_InitSetREG@loop_c
  5650  040F                     L2:	
  5651  040F  302F               	movlw	47
  5652  0410  0258               	subwf	CC2500_InitSetREG@loop_c,w
  5653  0411  1803               	btfsc	3,0
  5654  0412  0008               	return
  5655                           
  5656                           ;CC2500_B1.c: 164: temp1 = CC2500_registers_address[loop_c];
  5657  0413  0858               	movf	CC2500_InitSetREG@loop_c,w
  5658  0414  3E00               	addlw	low (_CC2500_registers_address| (0+32768))
  5659  0415  0084               	movwf	4
  5660  0416  3082               	movlw	high (_CC2500_registers_address| (0+32768))
  5661  0417  1803               	skipnc
  5662  0418  3E01               	addlw	1
  5663  0419  0085               	movwf	5
  5664  041A  0800               	movf	0,w	;code access
  5665  041B  00D5               	movwf	??_CC2500_InitSetREG
  5666  041C  0855               	movf	??_CC2500_InitSetREG,w
  5667  041D  00D6               	movwf	CC2500_InitSetREG@temp1
  5668                           
  5669                           ;CC2500_B1.c: 165: temp2 = CC2500_rfSettings[loop_c];
  5670  041E  0858               	movf	CC2500_InitSetREG@loop_c,w
  5671  041F  3E2F               	addlw	low (_CC2500_rfSettings| (0+32768))
  5672  0420  0084               	movwf	4
  5673  0421  3082               	movlw	high (_CC2500_rfSettings| (0+32768))
  5674  0422  1803               	skipnc
  5675  0423  3E01               	addlw	1
  5676  0424  0085               	movwf	5
  5677  0425  0800               	movf	0,w	;code access
  5678  0426  00D5               	movwf	??_CC2500_InitSetREG
  5679  0427  0855               	movf	??_CC2500_InitSetREG,w
  5680  0428  00D7               	movwf	CC2500_InitSetREG@temp2
  5681                           
  5682                           ;CC2500_B1.c: 167: CC2500_WriteREG(temp1, temp2);
  5683  0429  0857               	movf	CC2500_InitSetREG@temp2,w
  5684  042A  00D5               	movwf	??_CC2500_InitSetREG
  5685  042B  0855               	movf	??_CC2500_InitSetREG,w
  5686  042C  00D2               	movwf	CC2500_WriteREG@value
  5687  042D  0856               	movf	CC2500_InitSetREG@temp1,w
  5688  042E  3184  24A0  3184   	fcall	_CC2500_WriteREG
  5689  0431  3001               	movlw	1
  5690  0432  0020               	movlb	0	; select bank0
  5691  0433  00D5               	movwf	??_CC2500_InitSetREG
  5692  0434  0855               	movf	??_CC2500_InitSetREG,w
  5693  0435  07D8               	addwf	CC2500_InitSetREG@loop_c,f
  5694  0436  2C0F               	goto	L2
  5695  0437                     __end_of_CC2500_InitSetREG:	
  5696                           
  5697                           	psect	text29
  5698  04C0                     __ptext29:	
  5699 ;; *************** function _CC2500_InitPATable *****************
  5700 ;; Defined at:
  5701 ;;		line 174 in file "../src/CC2500_B1.c"
  5702 ;; Parameters:    Size  Location     Type
  5703 ;;		None
  5704 ;; Auto vars:     Size  Location     Type
  5705 ;;  loop_d          1    5[BANK0 ] unsigned char 
  5706 ;;  temp            1    4[BANK0 ] unsigned char 
  5707 ;; Return value:  Size  Location     Type
  5708 ;;		None               void
  5709 ;; Registers used:
  5710 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5711 ;; Tracked objects:
  5712 ;;		On entry : 0/0
  5713 ;;		On exit  : 0/0
  5714 ;;		Unchanged: 0/0
  5715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5716 ;;      Params:         0       0       0       0       0       0       0       0
  5717 ;;      Locals:         0       2       0       0       0       0       0       0
  5718 ;;      Temps:          0       1       0       0       0       0       0       0
  5719 ;;      Totals:         0       3       0       0       0       0       0       0
  5720 ;;Total ram usage:        3 bytes
  5721 ;; Hardware stack levels used:    1
  5722 ;; Hardware stack levels required when called:    5
  5723 ;; This function calls:
  5724 ;;		_CC2500_WriteREG
  5725 ;; This function is called by:
  5726 ;;		_CC2500_PowerOnInitial
  5727 ;; This function uses a non-reentrant model
  5728 ;;
  5729                           
  5730                           
  5731                           ;psect for function _CC2500_InitPATable
  5732  04C0                     _CC2500_InitPATable:	
  5733                           
  5734                           ;CC2500_B1.c: 175: unsigned char loop_d;
  5735                           ;CC2500_B1.c: 176: unsigned char temp;
  5736                           ;CC2500_B1.c: 178: for (loop_d = 0; loop_d < 8; loop_d++) {
  5737                           
  5738                           ;incstack = 0
  5739                           ; Regs used in _CC2500_InitPATable: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5740  04C0  0020               	movlb	0	; select bank0
  5741  04C1  01D7               	clrf	CC2500_InitPATable@loop_d
  5742  04C2                     L3:	
  5743  04C2  3008               	movlw	8
  5744  04C3  0257               	subwf	CC2500_InitPATable@loop_d,w
  5745  04C4  1803               	btfsc	3,0
  5746  04C5  0008               	return
  5747                           
  5748                           ;CC2500_B1.c: 179: temp = CC2500_patable_vaule[loop_d];
  5749  04C6  0857               	movf	CC2500_InitPATable@loop_d,w
  5750  04C7  3E5E               	addlw	low (_CC2500_patable_vaule| (0+32768))
  5751  04C8  0084               	movwf	4
  5752  04C9  3082               	movlw	high (_CC2500_patable_vaule| (0+32768))
  5753  04CA  1803               	skipnc
  5754  04CB  3E01               	addlw	1
  5755  04CC  0085               	movwf	5
  5756  04CD  0800               	movf	0,w	;code access
  5757  04CE  00D5               	movwf	??_CC2500_InitPATable
  5758  04CF  0855               	movf	??_CC2500_InitPATable,w
  5759  04D0  00D6               	movwf	CC2500_InitPATable@temp
  5760                           
  5761                           ;CC2500_B1.c: 180: CC2500_WriteREG(0x3E, temp);
  5762  04D1  0856               	movf	CC2500_InitPATable@temp,w
  5763  04D2  00D5               	movwf	??_CC2500_InitPATable
  5764  04D3  0855               	movf	??_CC2500_InitPATable,w
  5765  04D4  00D2               	movwf	CC2500_WriteREG@value
  5766  04D5  303E               	movlw	62
  5767  04D6  3184  24A0  3184   	fcall	_CC2500_WriteREG
  5768  04D9  3001               	movlw	1
  5769  04DA  0020               	movlb	0	; select bank0
  5770  04DB  00D5               	movwf	??_CC2500_InitPATable
  5771  04DC  0855               	movf	??_CC2500_InitPATable,w
  5772  04DD  07D7               	addwf	CC2500_InitPATable@loop_d,f
  5773  04DE  2CC2               	goto	L3
  5774  04DF                     __end_of_CC2500_InitPATable:	
  5775                           
  5776                           	psect	text30
  5777  04A0                     __ptext30:	
  5778 ;; *************** function _CC2500_WriteREG *****************
  5779 ;; Defined at:
  5780 ;;		line 251 in file "../src/CC2500_B1.c"
  5781 ;; Parameters:    Size  Location     Type
  5782 ;;  w_addr          1    wreg     unsigned char 
  5783 ;;  value           1    0[BANK0 ] unsigned char 
  5784 ;; Auto vars:     Size  Location     Type
  5785 ;;  w_addr          1    2[BANK0 ] unsigned char 
  5786 ;; Return value:  Size  Location     Type
  5787 ;;		None               void
  5788 ;; Registers used:
  5789 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5790 ;; Tracked objects:
  5791 ;;		On entry : 0/0
  5792 ;;		On exit  : 0/0
  5793 ;;		Unchanged: 0/0
  5794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5795 ;;      Params:         0       1       0       0       0       0       0       0
  5796 ;;      Locals:         0       1       0       0       0       0       0       0
  5797 ;;      Temps:          0       1       0       0       0       0       0       0
  5798 ;;      Totals:         0       3       0       0       0       0       0       0
  5799 ;;Total ram usage:        3 bytes
  5800 ;; Hardware stack levels used:    1
  5801 ;; Hardware stack levels required when called:    4
  5802 ;; This function calls:
  5803 ;;		_CC2500_WriteByte
  5804 ;;		_Timeout_Counter
  5805 ;;		_set_TimeoutCleared
  5806 ;; This function is called by:
  5807 ;;		_CC2500_InitSetREG
  5808 ;;		_CC2500_InitPATable
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           
  5812                           
  5813                           ;psect for function _CC2500_WriteREG
  5814  04A0                     _CC2500_WriteREG:	
  5815                           
  5816                           ;incstack = 0
  5817                           ; Regs used in _CC2500_WriteREG: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5818                           ;CC2500_WriteREG@w_addr stored from wreg
  5819  04A0  0020               	movlb	0	; select bank0
  5820  04A1  00D4               	movwf	CC2500_WriteREG@w_addr
  5821                           
  5822                           ;CC2500_B1.c: 252: RC0 = 0;
  5823  04A2  100E               	bcf	14,0	;volatile
  5824                           
  5825                           ;CC2500_B1.c: 253: SPI0Buffer = w_addr;
  5826  04A3  0854               	movf	CC2500_WriteREG@w_addr,w
  5827  04A4  00D3               	movwf	??_CC2500_WriteREG
  5828  04A5  0853               	movf	??_CC2500_WriteREG,w
  5829  04A6  00F7               	movwf	_SPI0Buffer
  5830                           
  5831                           ;CC2500_B1.c: 254: while (RC5 == 1 && myMain.Timeout == 0) {
  5832  04A7  2CAB               	goto	l3439
  5833  04A8                     l3437:	
  5834                           
  5835                           ;CC2500_B1.c: 255: Timeout_Counter();
  5836  04A8  3185  2563  3184   	fcall	_Timeout_Counter
  5837  04AB                     l3439:	
  5838  04AB  0020               	movlb	0	; select bank0
  5839  04AC  1E8E               	btfss	14,5	;volatile
  5840  04AD  2CB0               	goto	l3443
  5841  04AE  1D2C               	btfss	_myMain+12,2
  5842  04AF  2CA8               	goto	l3437
  5843  04B0                     l3443:	
  5844                           
  5845                           ;CC2500_B1.c: 256: };
  5846                           ;CC2500_B1.c: 257: set_TimeoutCleared();
  5847  04B0  3186  2629  3184   	fcall	_set_TimeoutCleared
  5848                           
  5849                           ;CC2500_B1.c: 259: CC2500_WriteByte();
  5850  04B3  3185  2578  3184   	fcall	_CC2500_WriteByte
  5851                           
  5852                           ;CC2500_B1.c: 260: SPI0Buffer = value;
  5853  04B6  0020               	movlb	0	; select bank0
  5854  04B7  0852               	movf	CC2500_WriteREG@value,w
  5855  04B8  00D3               	movwf	??_CC2500_WriteREG
  5856  04B9  0853               	movf	??_CC2500_WriteREG,w
  5857  04BA  00F7               	movwf	_SPI0Buffer
  5858                           
  5859                           ;CC2500_B1.c: 261: CC2500_WriteByte();
  5860  04BB  3185  2578         	fcall	_CC2500_WriteByte
  5861                           
  5862                           ;CC2500_B1.c: 262: RC0 = 1;
  5863  04BD  0020               	movlb	0	; select bank0
  5864  04BE  140E               	bsf	14,0	;volatile
  5865  04BF  0008               	return
  5866  04C0                     __end_of_CC2500_WriteREG:	
  5867                           
  5868                           	psect	text31
  5869  05F5                     __ptext31:	
  5870 ;; *************** function _CC2500_FrequencyCabr *****************
  5871 ;; Defined at:
  5872 ;;		line 201 in file "../src/CC2500_B1.c"
  5873 ;; Parameters:    Size  Location     Type
  5874 ;;		None
  5875 ;; Auto vars:     Size  Location     Type
  5876 ;;		None
  5877 ;; Return value:  Size  Location     Type
  5878 ;;		None               void
  5879 ;; Registers used:
  5880 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5881 ;; Tracked objects:
  5882 ;;		On entry : 0/0
  5883 ;;		On exit  : 0/0
  5884 ;;		Unchanged: 0/0
  5885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5886 ;;      Params:         0       0       0       0       0       0       0       0
  5887 ;;      Locals:         0       0       0       0       0       0       0       0
  5888 ;;      Temps:          0       0       0       0       0       0       0       0
  5889 ;;      Totals:         0       0       0       0       0       0       0       0
  5890 ;;Total ram usage:        0 bytes
  5891 ;; Hardware stack levels used:    1
  5892 ;; Hardware stack levels required when called:    5
  5893 ;; This function calls:
  5894 ;;		_CC2500_WriteCommand
  5895 ;;		_DelayTime_1us
  5896 ;; This function is called by:
  5897 ;;		_CC2500_PowerOnInitial
  5898 ;; This function uses a non-reentrant model
  5899 ;;
  5900                           
  5901                           
  5902                           ;psect for function _CC2500_FrequencyCabr
  5903  05F5                     _CC2500_FrequencyCabr:	
  5904                           
  5905                           ;CC2500_B1.c: 202: CC2500_WriteCommand(0x33);
  5906                           
  5907                           ;incstack = 0
  5908                           ; Regs used in _CC2500_FrequencyCabr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5909  05F5  3033               	movlw	51
  5910  05F6  3185  2536  3185   	fcall	_CC2500_WriteCommand
  5911                           
  5912                           ;CC2500_B1.c: 203: DelayTime_1us(1000);
  5913  05F9  30E8               	movlw	232
  5914  05FA  00F4               	movwf	DelayTime_1us@count
  5915  05FB  3003               	movlw	3
  5916  05FC  00F5               	movwf	DelayTime_1us@count+1
  5917  05FD  3184  2437         	fcall	_DelayTime_1us
  5918  05FF  0008               	return
  5919  0600                     __end_of_CC2500_FrequencyCabr:	
  5920                           
  5921                           	psect	text32
  5922  0437                     __ptext32:	
  5923 ;; *************** function _DelayTime_1us *****************
  5924 ;; Defined at:
  5925 ;;		line 320 in file "../src/CC2500_B1.c"
  5926 ;; Parameters:    Size  Location     Type
  5927 ;;  count           2    4[COMMON] int 
  5928 ;; Auto vars:     Size  Location     Type
  5929 ;;  j               2    2[BANK0 ] unsigned int 
  5930 ;;  i               2    0[BANK0 ] unsigned int 
  5931 ;; Return value:  Size  Location     Type
  5932 ;;		None               void
  5933 ;; Registers used:
  5934 ;;		wreg, status,2
  5935 ;; Tracked objects:
  5936 ;;		On entry : 0/0
  5937 ;;		On exit  : 0/0
  5938 ;;		Unchanged: 0/0
  5939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5940 ;;      Params:         2       0       0       0       0       0       0       0
  5941 ;;      Locals:         0       4       0       0       0       0       0       0
  5942 ;;      Temps:          0       0       0       0       0       0       0       0
  5943 ;;      Totals:         2       4       0       0       0       0       0       0
  5944 ;;Total ram usage:        6 bytes
  5945 ;; Hardware stack levels used:    1
  5946 ;; Hardware stack levels required when called:    3
  5947 ;; This function calls:
  5948 ;;		Nothing
  5949 ;; This function is called by:
  5950 ;;		_CC2500_PowerRST
  5951 ;;		_CC2500_FrequencyCabr
  5952 ;; This function uses a non-reentrant model
  5953 ;;
  5954                           
  5955                           
  5956                           ;psect for function _DelayTime_1us
  5957  0437                     _DelayTime_1us:	
  5958                           
  5959                           ;CC2500_B1.c: 321: unsigned int i, j;
  5960                           ;CC2500_B1.c: 322: for (i = 1; i < count; i++)
  5961                           
  5962                           ;incstack = 0
  5963                           ; Regs used in _DelayTime_1us: [wreg+status,2]
  5964  0437  3001               	movlw	1
  5965  0438  0020               	movlb	0	; select bank0
  5966  0439  00D2               	movwf	DelayTime_1us@i
  5967  043A  3000               	movlw	0
  5968  043B  00D3               	movwf	DelayTime_1us@i+1
  5969  043C                     l251:	
  5970  043C  0875               	movf	DelayTime_1us@count+1,w
  5971  043D  0253               	subwf	DelayTime_1us@i+1,w
  5972  043E  1D03               	skipz
  5973  043F  2C42               	goto	u2335
  5974  0440  0874               	movf	DelayTime_1us@count,w
  5975  0441  0252               	subwf	DelayTime_1us@i,w
  5976  0442                     u2335:	
  5977  0442  1803               	btfsc	3,0
  5978  0443  0008               	return
  5979                           
  5980                           ;CC2500_B1.c: 323: for (j = 0; j <= 1; j++);
  5981  0444  01D4               	clrf	DelayTime_1us@j
  5982  0445  01D5               	clrf	DelayTime_1us@j+1
  5983  0446  3000               	movlw	0
  5984  0447  0255               	subwf	DelayTime_1us@j+1,w
  5985  0448  3002               	movlw	2
  5986  0449  1903               	skipnz
  5987  044A  0254               	subwf	DelayTime_1us@j,w
  5988  044B  1803               	btfsc	3,0
  5989  044C  2C58               	goto	l3431
  5990  044D                     l3429:	
  5991  044D  3001               	movlw	1
  5992  044E  07D4               	addwf	DelayTime_1us@j,f
  5993  044F  3000               	movlw	0
  5994  0450  3DD5               	addwfc	DelayTime_1us@j+1,f
  5995  0451  3000               	movlw	0
  5996  0452  0255               	subwf	DelayTime_1us@j+1,w
  5997  0453  3002               	movlw	2
  5998  0454  1903               	skipnz
  5999  0455  0254               	subwf	DelayTime_1us@j,w
  6000  0456  1C03               	skipc
  6001  0457  2C4D               	goto	l3429
  6002  0458                     l3431:	
  6003  0458  3001               	movlw	1
  6004  0459  07D2               	addwf	DelayTime_1us@i,f
  6005  045A  3000               	movlw	0
  6006  045B  3DD3               	addwfc	DelayTime_1us@i+1,f
  6007  045C  2C3C               	goto	l251
  6008  045D                     __end_of_DelayTime_1us:	
  6009                           
  6010                           	psect	text33
  6011  0636                     __ptext33:	
  6012 ;; *************** function _CC2500_ClearTXFIFO *****************
  6013 ;; Defined at:
  6014 ;;		line 187 in file "../src/CC2500_B1.c"
  6015 ;; Parameters:    Size  Location     Type
  6016 ;;		None
  6017 ;; Auto vars:     Size  Location     Type
  6018 ;;		None
  6019 ;; Return value:  Size  Location     Type
  6020 ;;		None               void
  6021 ;; Registers used:
  6022 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6023 ;; Tracked objects:
  6024 ;;		On entry : 0/0
  6025 ;;		On exit  : 0/0
  6026 ;;		Unchanged: 0/0
  6027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6028 ;;      Params:         0       0       0       0       0       0       0       0
  6029 ;;      Locals:         0       0       0       0       0       0       0       0
  6030 ;;      Temps:          0       0       0       0       0       0       0       0
  6031 ;;      Totals:         0       0       0       0       0       0       0       0
  6032 ;;Total ram usage:        0 bytes
  6033 ;; Hardware stack levels used:    1
  6034 ;; Hardware stack levels required when called:    5
  6035 ;; This function calls:
  6036 ;;		_CC2500_WriteCommand
  6037 ;; This function is called by:
  6038 ;;		_CC2500_PowerOnInitial
  6039 ;; This function uses a non-reentrant model
  6040 ;;
  6041                           
  6042                           
  6043                           ;psect for function _CC2500_ClearTXFIFO
  6044  0636                     _CC2500_ClearTXFIFO:	
  6045                           
  6046                           ;CC2500_B1.c: 188: CC2500_WriteCommand(0x3B);
  6047                           
  6048                           ;incstack = 0
  6049                           ; Regs used in _CC2500_ClearTXFIFO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6050  0636  303B               	movlw	59
  6051  0637  3185  2536         	fcall	_CC2500_WriteCommand
  6052  0639  0008               	return
  6053  063A                     __end_of_CC2500_ClearTXFIFO:	
  6054                           
  6055                           	psect	text34
  6056  063A                     __ptext34:	
  6057 ;; *************** function _CC2500_ClearRXFIFO *****************
  6058 ;; Defined at:
  6059 ;;		line 194 in file "../src/CC2500_B1.c"
  6060 ;; Parameters:    Size  Location     Type
  6061 ;;		None
  6062 ;; Auto vars:     Size  Location     Type
  6063 ;;		None
  6064 ;; Return value:  Size  Location     Type
  6065 ;;		None               void
  6066 ;; Registers used:
  6067 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6068 ;; Tracked objects:
  6069 ;;		On entry : 0/0
  6070 ;;		On exit  : 0/0
  6071 ;;		Unchanged: 0/0
  6072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6073 ;;      Params:         0       0       0       0       0       0       0       0
  6074 ;;      Locals:         0       0       0       0       0       0       0       0
  6075 ;;      Temps:          0       0       0       0       0       0       0       0
  6076 ;;      Totals:         0       0       0       0       0       0       0       0
  6077 ;;Total ram usage:        0 bytes
  6078 ;; Hardware stack levels used:    1
  6079 ;; Hardware stack levels required when called:    5
  6080 ;; This function calls:
  6081 ;;		_CC2500_WriteCommand
  6082 ;; This function is called by:
  6083 ;;		_CC2500_PowerOnInitial
  6084 ;; This function uses a non-reentrant model
  6085 ;;
  6086                           
  6087                           
  6088                           ;psect for function _CC2500_ClearRXFIFO
  6089  063A                     _CC2500_ClearRXFIFO:	
  6090                           
  6091                           ;CC2500_B1.c: 195: CC2500_WriteCommand(0x3A);
  6092                           
  6093                           ;incstack = 0
  6094                           ; Regs used in _CC2500_ClearRXFIFO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6095  063A  303A               	movlw	58
  6096  063B  3185  2536         	fcall	_CC2500_WriteCommand
  6097  063D  0008               	return
  6098  063E                     __end_of_CC2500_ClearRXFIFO:	
  6099                           
  6100                           	psect	text35
  6101  0536                     __ptext35:	
  6102 ;; *************** function _CC2500_WriteCommand *****************
  6103 ;; Defined at:
  6104 ;;		line 285 in file "../src/CC2500_B1.c"
  6105 ;; Parameters:    Size  Location     Type
  6106 ;;  command         1    wreg     unsigned char 
  6107 ;; Auto vars:     Size  Location     Type
  6108 ;;  command         1    1[BANK0 ] unsigned char 
  6109 ;; Return value:  Size  Location     Type
  6110 ;;		None               void
  6111 ;; Registers used:
  6112 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6113 ;; Tracked objects:
  6114 ;;		On entry : 0/0
  6115 ;;		On exit  : 0/0
  6116 ;;		Unchanged: 0/0
  6117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6118 ;;      Params:         0       0       0       0       0       0       0       0
  6119 ;;      Locals:         0       1       0       0       0       0       0       0
  6120 ;;      Temps:          0       1       0       0       0       0       0       0
  6121 ;;      Totals:         0       2       0       0       0       0       0       0
  6122 ;;Total ram usage:        2 bytes
  6123 ;; Hardware stack levels used:    1
  6124 ;; Hardware stack levels required when called:    4
  6125 ;; This function calls:
  6126 ;;		_CC2500_WriteByte
  6127 ;;		_Timeout_Counter
  6128 ;;		_set_TimeoutCleared
  6129 ;; This function is called by:
  6130 ;;		_CC2500_TxData
  6131 ;;		_CC2500_ClearTXFIFO
  6132 ;;		_CC2500_ClearRXFIFO
  6133 ;;		_CC2500_FrequencyCabr
  6134 ;;		_CC2500_SIDLEMode
  6135 ;;		_RF_RxDisable
  6136 ;; This function uses a non-reentrant model
  6137 ;;
  6138                           
  6139                           
  6140                           ;psect for function _CC2500_WriteCommand
  6141  0536                     _CC2500_WriteCommand:	
  6142                           
  6143                           ;incstack = 0
  6144                           ; Regs used in _CC2500_WriteCommand: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6145                           ;CC2500_WriteCommand@command stored from wreg
  6146  0536  0020               	movlb	0	; select bank0
  6147  0537  00D3               	movwf	CC2500_WriteCommand@command
  6148                           
  6149                           ;CC2500_B1.c: 286: RC0 = 0;
  6150  0538  100E               	bcf	14,0	;volatile
  6151                           
  6152                           ;CC2500_B1.c: 287: SPI0Buffer = command;
  6153  0539  0853               	movf	CC2500_WriteCommand@command,w
  6154  053A  00D2               	movwf	??_CC2500_WriteCommand
  6155  053B  0852               	movf	??_CC2500_WriteCommand,w
  6156  053C  00F7               	movwf	_SPI0Buffer
  6157                           
  6158                           ;CC2500_B1.c: 289: while (RC5 == 1 && myMain.Timeout == 0) {
  6159  053D  2D41               	goto	l3337
  6160  053E                     l3335:	
  6161                           
  6162                           ;CC2500_B1.c: 290: Timeout_Counter();
  6163  053E  3185  2563  3185   	fcall	_Timeout_Counter
  6164  0541                     l3337:	
  6165  0541  0020               	movlb	0	; select bank0
  6166  0542  1E8E               	btfss	14,5	;volatile
  6167  0543  2D46               	goto	l3341
  6168  0544  1D2C               	btfss	_myMain+12,2
  6169  0545  2D3E               	goto	l3335
  6170  0546                     l3341:	
  6171                           
  6172                           ;CC2500_B1.c: 291: };
  6173                           ;CC2500_B1.c: 292: set_TimeoutCleared();
  6174  0546  3186  2629  3185   	fcall	_set_TimeoutCleared
  6175                           
  6176                           ;CC2500_B1.c: 294: CC2500_WriteByte();
  6177  0549  3185  2578         	fcall	_CC2500_WriteByte
  6178                           
  6179                           ;CC2500_B1.c: 295: RC0 = 1;
  6180  054B  0020               	movlb	0	; select bank0
  6181  054C  140E               	bsf	14,0	;volatile
  6182  054D  0008               	return
  6183  054E                     __end_of_CC2500_WriteCommand:	
  6184                           
  6185                           	psect	text36
  6186  0629                     __ptext36:	
  6187 ;; *************** function _set_TimeoutCleared *****************
  6188 ;; Defined at:
  6189 ;;		line 283 in file "../src/Main_B1.c"
  6190 ;; Parameters:    Size  Location     Type
  6191 ;;		None
  6192 ;; Auto vars:     Size  Location     Type
  6193 ;;		None
  6194 ;; Return value:  Size  Location     Type
  6195 ;;		None               void
  6196 ;; Registers used:
  6197 ;;		status,2
  6198 ;; Tracked objects:
  6199 ;;		On entry : 0/0
  6200 ;;		On exit  : 0/0
  6201 ;;		Unchanged: 0/0
  6202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6203 ;;      Params:         0       0       0       0       0       0       0       0
  6204 ;;      Locals:         0       0       0       0       0       0       0       0
  6205 ;;      Temps:          0       0       0       0       0       0       0       0
  6206 ;;      Totals:         0       0       0       0       0       0       0       0
  6207 ;;Total ram usage:        0 bytes
  6208 ;; Hardware stack levels used:    1
  6209 ;; Hardware stack levels required when called:    3
  6210 ;; This function calls:
  6211 ;;		Nothing
  6212 ;; This function is called by:
  6213 ;;		_CC2500_TxData
  6214 ;;		_CC2500_PowerRST
  6215 ;;		_CC2500_WriteREG
  6216 ;;		_CC2500_WriteCommand
  6217 ;;		_CC2500_RxData
  6218 ;;		_CC2500_ReadREG
  6219 ;;		_CC2500_ReadStatus
  6220 ;; This function uses a non-reentrant model
  6221 ;;
  6222                           
  6223                           
  6224                           ;psect for function _set_TimeoutCleared
  6225  0629                     _set_TimeoutCleared:	
  6226                           
  6227                           ;Main_B1.c: 284: myMain.Timeout = 0;
  6228                           
  6229                           ;incstack = 0
  6230                           ; Regs used in _set_TimeoutCleared: [status,2]
  6231  0629  0020               	movlb	0	; select bank0
  6232  062A  112C               	bcf	_myMain+12,2
  6233                           
  6234                           ;Main_B1.c: 285: myMain.Timeout_Counter = 0;
  6235  062B  01AD               	clrf	_myMain+13
  6236  062C  01AE               	clrf	_myMain+14
  6237  062D  0008               	return
  6238  062E                     __end_of_set_TimeoutCleared:	
  6239                           
  6240                           	psect	text37
  6241  0563                     __ptext37:	
  6242 ;; *************** function _Timeout_Counter *****************
  6243 ;; Defined at:
  6244 ;;		line 274 in file "../src/Main_B1.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;		None
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;		None
  6249 ;; Return value:  Size  Location     Type
  6250 ;;		None               void
  6251 ;; Registers used:
  6252 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6258 ;;      Params:         0       0       0       0       0       0       0       0
  6259 ;;      Locals:         0       0       0       0       0       0       0       0
  6260 ;;      Temps:          0       0       0       0       0       0       0       0
  6261 ;;      Totals:         0       0       0       0       0       0       0       0
  6262 ;;Total ram usage:        0 bytes
  6263 ;; Hardware stack levels used:    1
  6264 ;; Hardware stack levels required when called:    3
  6265 ;; This function calls:
  6266 ;;		Nothing
  6267 ;; This function is called by:
  6268 ;;		_CC2500_TxData
  6269 ;;		_CC2500_PowerRST
  6270 ;;		_CC2500_WriteREG
  6271 ;;		_CC2500_WriteCommand
  6272 ;;		_CC2500_RxData
  6273 ;;		_CC2500_ReadREG
  6274 ;;		_CC2500_ReadStatus
  6275 ;; This function uses a non-reentrant model
  6276 ;;
  6277                           
  6278                           
  6279                           ;psect for function _Timeout_Counter
  6280  0563                     _Timeout_Counter:	
  6281                           
  6282                           ;Main_B1.c: 275: myMain.Timeout_Counter++;
  6283                           
  6284                           ;incstack = 0
  6285                           ; Regs used in _Timeout_Counter: [wreg+fsr1l+fsr1h+status,2+status,0]
  6286  0563  3001               	movlw	1
  6287  0564  0020               	movlb	0	; select bank0
  6288  0565  07AD               	addwf	_myMain+13,f
  6289  0566  3000               	movlw	0
  6290  0567  3DAE               	addwfc	_myMain+14,f
  6291                           
  6292                           ;Main_B1.c: 276: if (myMain.Timeout_Counter == 10000) {
  6293  0568  300D               	movlw	13
  6294  0569  3E20               	addlw	_myMain& (0+255)
  6295  056A  0086               	movwf	6
  6296  056B  0187               	clrf	7
  6297  056C  3F40               	moviw [0]fsr1
  6298  056D  3A10               	xorlw	16
  6299  056E  1D03               	skipz
  6300  056F  2D72               	goto	u2165
  6301  0570  3F41               	moviw [1]fsr1
  6302  0571  3A27               	xorlw	39
  6303  0572                     u2165:	
  6304  0572  1D03               	skipz
  6305  0573  0008               	return
  6306                           
  6307                           ;Main_B1.c: 277: myMain.Timeout_Counter = 0;
  6308  0574  01AD               	clrf	_myMain+13
  6309  0575  01AE               	clrf	_myMain+14
  6310                           
  6311                           ;Main_B1.c: 278: myMain.Timeout = 1;
  6312  0576  152C               	bsf	_myMain+12,2
  6313  0577  0008               	return
  6314  0578                     __end_of_Timeout_Counter:	
  6315                           
  6316                           	psect	text38
  6317  0578                     __ptext38:	
  6318 ;; *************** function _CC2500_WriteByte *****************
  6319 ;; Defined at:
  6320 ;;		line 219 in file "../src/CC2500_B1.c"
  6321 ;; Parameters:    Size  Location     Type
  6322 ;;		None
  6323 ;; Auto vars:     Size  Location     Type
  6324 ;;  loop_a          1    5[COMMON] unsigned char 
  6325 ;; Return value:  Size  Location     Type
  6326 ;;		None               void
  6327 ;; Registers used:
  6328 ;;		wreg, status,2, status,0
  6329 ;; Tracked objects:
  6330 ;;		On entry : 0/0
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6334 ;;      Params:         0       0       0       0       0       0       0       0
  6335 ;;      Locals:         1       0       0       0       0       0       0       0
  6336 ;;      Temps:          1       0       0       0       0       0       0       0
  6337 ;;      Totals:         2       0       0       0       0       0       0       0
  6338 ;;Total ram usage:        2 bytes
  6339 ;; Hardware stack levels used:    1
  6340 ;; Hardware stack levels required when called:    3
  6341 ;; This function calls:
  6342 ;;		Nothing
  6343 ;; This function is called by:
  6344 ;;		_CC2500_TxData
  6345 ;;		_CC2500_PowerRST
  6346 ;;		_CC2500_WriteREG
  6347 ;;		_CC2500_WriteCommand
  6348 ;;		_CC2500_RxData
  6349 ;;		_CC2500_ReadREG
  6350 ;;		_CC2500_ReadStatus
  6351 ;; This function uses a non-reentrant model
  6352 ;;
  6353                           
  6354                           
  6355                           ;psect for function _CC2500_WriteByte
  6356  0578                     _CC2500_WriteByte:	
  6357                           
  6358                           ;CC2500_B1.c: 220: unsigned char loop_a;
  6359                           ;CC2500_B1.c: 221: for (loop_a = 0; loop_a < 8; loop_a++) {
  6360                           
  6361                           ;incstack = 0
  6362                           ; Regs used in _CC2500_WriteByte: [wreg+status,2+status,0]
  6363  0578  01F5               	clrf	CC2500_WriteByte@loop_a
  6364  0579                     L4:	
  6365  0579  3008               	movlw	8
  6366  057A  0275               	subwf	CC2500_WriteByte@loop_a,w
  6367  057B  1803               	btfsc	3,0
  6368  057C  0008               	return
  6369                           
  6370                           ;CC2500_B1.c: 222: if (SPI0Buffer & 0x80)
  6371  057D  1FF7               	btfss	_SPI0Buffer,7
  6372  057E  2D82               	goto	l207
  6373                           
  6374                           ;CC2500_B1.c: 223: RC4 = 1;
  6375  057F  0020               	movlb	0	; select bank0
  6376  0580  160E               	bsf	14,4	;volatile
  6377  0581  2D84               	goto	l208
  6378  0582                     l207:	
  6379                           
  6380                           ;CC2500_B1.c: 224: else
  6381                           ;CC2500_B1.c: 225: RC4 = 0;
  6382  0582  0020               	movlb	0	; select bank0
  6383  0583  120E               	bcf	14,4	;volatile
  6384  0584                     l208:	
  6385                           
  6386                           ;CC2500_B1.c: 226: RC3 = 1;
  6387  0584  158E               	bsf	14,3	;volatile
  6388                           
  6389                           ;CC2500_B1.c: 227: SPI0Buffer <<= 1;
  6390  0585  1003               	clrc
  6391  0586  0DF7               	rlf	_SPI0Buffer,f
  6392                           
  6393                           ;CC2500_B1.c: 228: RC3 = 0;
  6394  0587  118E               	bcf	14,3	;volatile
  6395  0588  3001               	movlw	1
  6396  0589  00F4               	movwf	??_CC2500_WriteByte
  6397  058A  0874               	movf	??_CC2500_WriteByte,w
  6398  058B  07F5               	addwf	CC2500_WriteByte@loop_a,f
  6399  058C  2D79               	goto	L4
  6400  058D                     __end_of_CC2500_WriteByte:	
  6401                           
  6402                           	psect	intentry
  6403  0004                     __pintentry:	
  6404 ;; *************** function _ISR *****************
  6405 ;; Defined at:
  6406 ;;		line 107 in file "../src/MCU_B1.c"
  6407 ;; Parameters:    Size  Location     Type
  6408 ;;		None
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;		None
  6411 ;; Return value:  Size  Location     Type
  6412 ;;		None               void
  6413 ;; Registers used:
  6414 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6415 ;; Tracked objects:
  6416 ;;		On entry : 0/0
  6417 ;;		On exit  : 0/0
  6418 ;;		Unchanged: 0/0
  6419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6420 ;;      Params:         0       0       0       0       0       0       0       0
  6421 ;;      Locals:         0       0       0       0       0       0       0       0
  6422 ;;      Temps:          1       0       0       0       0       0       0       0
  6423 ;;      Totals:         1       0       0       0       0       0       0       0
  6424 ;;Total ram usage:        1 bytes
  6425 ;; Hardware stack levels used:    1
  6426 ;; Hardware stack levels required when called:    2
  6427 ;; This function calls:
  6428 ;;		_TMR1_ISR
  6429 ;;		_UART_ISR
  6430 ;; This function is called by:
  6431 ;;		Interrupt level 1
  6432 ;; This function uses a non-reentrant model
  6433 ;;
  6434                           
  6435  0004                     _ISR:	
  6436                           
  6437                           ;incstack = 0
  6438                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6439  0004  147E               	bsf	126,0	;set compiler interrupt flag
  6440  0005  3180               	pagesel	$
  6441  0006  0020               	movlb	0	; select bank0
  6442  0007  087F               	movf	127,w
  6443  0008  00F3               	movwf	??_ISR
  6444                           
  6445                           ;MCU_B1.c: 109: ;;
  6446                           ;MCU_B1.c: 111: ;;
  6447                           ;MCU_B1.c: 113: TMR1_ISR();
  6448  0009  3184  24DF  3180   	fcall	_TMR1_ISR
  6449                           
  6450                           ;MCU_B1.c: 115: ;;
  6451                           ;MCU_B1.c: 117: ;;
  6452                           ;MCU_B1.c: 119: UART_ISR();
  6453  000C  3183  23DF         	fcall	_UART_ISR
  6454  000E  0873               	movf	??_ISR,w
  6455  000F  0020               	movlb	0	; select bank0
  6456  0010  00FF               	movwf	127
  6457  0011  107E               	bcf	126,0	;clear compiler interrupt flag
  6458  0012  0009               	retfie
  6459  0013                     __end_of_ISR:	
  6460                           
  6461                           	psect	text40
  6462  03DF                     __ptext40:	
  6463 ;; *************** function _UART_ISR *****************
  6464 ;; Defined at:
  6465 ;;		line 740 in file "../src/MCU_B1.c"
  6466 ;; Parameters:    Size  Location     Type
  6467 ;;		None
  6468 ;; Auto vars:     Size  Location     Type
  6469 ;;  i               2    1[COMMON] int 
  6470 ;; Return value:  Size  Location     Type
  6471 ;;		None               void
  6472 ;; Registers used:
  6473 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6474 ;; Tracked objects:
  6475 ;;		On entry : 0/0
  6476 ;;		On exit  : 0/0
  6477 ;;		Unchanged: 0/0
  6478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6479 ;;      Params:         0       0       0       0       0       0       0       0
  6480 ;;      Locals:         2       0       0       0       0       0       0       0
  6481 ;;      Temps:          1       0       0       0       0       0       0       0
  6482 ;;      Totals:         3       0       0       0       0       0       0       0
  6483 ;;Total ram usage:        3 bytes
  6484 ;; Hardware stack levels used:    1
  6485 ;; Hardware stack levels required when called:    1
  6486 ;; This function calls:
  6487 ;;		_getch
  6488 ;; This function is called by:
  6489 ;;		_ISR
  6490 ;; This function uses a non-reentrant model
  6491 ;;
  6492                           
  6493                           
  6494                           ;psect for function _UART_ISR
  6495  03DF                     _UART_ISR:	
  6496                           
  6497                           ;MCU_B1.c: 741: if (RCIE == 1 && RCIF == 1) {
  6498                           
  6499                           ;incstack = 0
  6500                           ; Regs used in _UART_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6501  03DF  0021               	movlb	1	; select bank1
  6502  03E0  1E91               	btfss	17,5	;volatile
  6503  03E1  0008               	return
  6504  03E2  0020               	movlb	0	; select bank0
  6505  03E3  1E91               	btfss	17,5	;volatile
  6506  03E4  0008               	return
  6507                           
  6508                           ;MCU_B1.c: 743: for (int i = 0; i < 8; i++) {
  6509  03E5  01F1               	clrf	UART_ISR@i
  6510  03E6  01F2               	clrf	UART_ISR@i+1
  6511  03E7  0872               	movf	UART_ISR@i+1,w
  6512  03E8  3A80               	xorlw	128
  6513  03E9  00F0               	movwf	??_UART_ISR
  6514  03EA  3080               	movlw	128
  6515  03EB  0270               	subwf	??_UART_ISR,w
  6516  03EC  3008               	movlw	8
  6517  03ED  1903               	btfsc	3,2
  6518  03EE  0271               	subwf	UART_ISR@i,w
  6519  03EF  1803               	btfsc	3,0
  6520  03F0  2C09               	goto	i1l579
  6521  03F1                     i1l3027:	
  6522                           
  6523                           ;MCU_B1.c: 744: UART.Data[i] = getch();
  6524  03F1  3186  261E  3183   	fcall	_getch
  6525  03F4  00F0               	movwf	??_UART_ISR
  6526  03F5  0871               	movf	UART_ISR@i,w
  6527  03F6  3E46               	addlw	_UART& (0+255)
  6528  03F7  0086               	movwf	6
  6529  03F8  0187               	clrf	7
  6530  03F9  0870               	movf	??_UART_ISR,w
  6531  03FA  0081               	movwf	1
  6532  03FB  3001               	movlw	1
  6533  03FC  07F1               	addwf	UART_ISR@i,f
  6534  03FD  3000               	movlw	0
  6535  03FE  3DF2               	addwfc	UART_ISR@i+1,f
  6536  03FF  0872               	movf	UART_ISR@i+1,w
  6537  0400  3A80               	xorlw	128
  6538  0401  00F0               	movwf	??_UART_ISR
  6539  0402  3080               	movlw	128
  6540  0403  0270               	subwf	??_UART_ISR,w
  6541  0404  3008               	movlw	8
  6542  0405  1903               	btfsc	3,2
  6543  0406  0271               	subwf	UART_ISR@i,w
  6544  0407  1C03               	skipc
  6545  0408  2BF1               	goto	i1l3027
  6546  0409                     i1l579:	
  6547                           
  6548                           ;MCU_B1.c: 745: }
  6549                           ;MCU_B1.c: 746: UART.RxGO = 1;
  6550  0409  0020               	movlb	0	; select bank0
  6551  040A  14D1               	bsf	_UART+11,1
  6552                           
  6553                           ;MCU_B1.c: 753: RCIF = 0;
  6554  040B  1291               	bcf	17,5	;volatile
  6555  040C  0008               	return
  6556  040D                     __end_of_UART_ISR:	
  6557                           
  6558                           	psect	text41
  6559  061E                     __ptext41:	
  6560 ;; *************** function _getch *****************
  6561 ;; Defined at:
  6562 ;;		line 864 in file "../src/MCU_B1.c"
  6563 ;; Parameters:    Size  Location     Type
  6564 ;;		None
  6565 ;; Auto vars:     Size  Location     Type
  6566 ;;		None
  6567 ;; Return value:  Size  Location     Type
  6568 ;;                  1    wreg      unsigned char 
  6569 ;; Registers used:
  6570 ;;		wreg
  6571 ;; Tracked objects:
  6572 ;;		On entry : 0/0
  6573 ;;		On exit  : 0/0
  6574 ;;		Unchanged: 0/0
  6575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6576 ;;      Params:         0       0       0       0       0       0       0       0
  6577 ;;      Locals:         0       0       0       0       0       0       0       0
  6578 ;;      Temps:          0       0       0       0       0       0       0       0
  6579 ;;      Totals:         0       0       0       0       0       0       0       0
  6580 ;;Total ram usage:        0 bytes
  6581 ;; Hardware stack levels used:    1
  6582 ;; This function calls:
  6583 ;;		Nothing
  6584 ;; This function is called by:
  6585 ;;		_UART_ISR
  6586 ;;		_getche
  6587 ;; This function uses a non-reentrant model
  6588 ;;
  6589                           
  6590                           
  6591                           ;psect for function _getch
  6592  061E                     _getch:	
  6593  061E                     i1l606:	
  6594                           ;MCU_B1.c: 867: continue;
  6595                           
  6596                           ;MCU_B1.c: 866: while (!RCIF)
  6597                           
  6598                           ;incstack = 0
  6599                           ; Regs used in _getch: [wreg]
  6600                           
  6601  061E  0020               	movlb	0	; select bank0
  6602  061F  1E91               	btfss	17,5	;volatile
  6603  0620  2E1E               	goto	i1l606
  6604                           
  6605                           ;MCU_B1.c: 868: return RCREG;
  6606  0621  0023               	movlb	3	; select bank3
  6607  0622  0819               	movf	25,w	;volatile
  6608  0623  0008               	return
  6609  0624                     __end_of_getch:	
  6610                           
  6611                           	psect	text42
  6612  04DF                     __ptext42:	
  6613 ;; *************** function _TMR1_ISR *****************
  6614 ;; Defined at:
  6615 ;;		line 209 in file "../src/MCU_B1.c"
  6616 ;; Parameters:    Size  Location     Type
  6617 ;;		None
  6618 ;; Auto vars:     Size  Location     Type
  6619 ;;		None
  6620 ;; Return value:  Size  Location     Type
  6621 ;;		None               void
  6622 ;; Registers used:
  6623 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6624 ;; Tracked objects:
  6625 ;;		On entry : 0/0
  6626 ;;		On exit  : 0/0
  6627 ;;		Unchanged: 0/0
  6628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6629 ;;      Params:         0       0       0       0       0       0       0       0
  6630 ;;      Locals:         0       0       0       0       0       0       0       0
  6631 ;;      Temps:          0       0       0       0       0       0       0       0
  6632 ;;      Totals:         0       0       0       0       0       0       0       0
  6633 ;;Total ram usage:        0 bytes
  6634 ;; Hardware stack levels used:    1
  6635 ;; This function calls:
  6636 ;;		Nothing
  6637 ;; This function is called by:
  6638 ;;		_ISR
  6639 ;; This function uses a non-reentrant model
  6640 ;;
  6641                           
  6642                           
  6643                           ;psect for function _TMR1_ISR
  6644  04DF                     _TMR1_ISR:	
  6645                           
  6646                           ;MCU_B1.c: 210: if (TMR1IE == 1 && TMR1IF == 1) {
  6647                           
  6648                           ;incstack = 0
  6649                           ; Regs used in _TMR1_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  6650  04DF  0021               	movlb	1	; select bank1
  6651  04E0  1C11               	btfss	17,0	;volatile
  6652  04E1  0008               	return
  6653  04E2  0020               	movlb	0	; select bank0
  6654  04E3  1C11               	btfss	17,0	;volatile
  6655  04E4  0008               	return
  6656                           
  6657                           ;MCU_B1.c: 212: TMR1H = ((65536-1480)/256);
  6658  04E5  30FA               	movlw	250
  6659  04E6  0097               	movwf	23	;volatile
  6660                           
  6661                           ;MCU_B1.c: 213: TMR1L = ((65536-1480)%256);
  6662  04E7  3038               	movlw	56
  6663  04E8  0096               	movwf	22	;volatile
  6664                           
  6665                           ;MCU_B1.c: 214: TMR1IF = 0;
  6666  04E9  1011               	bcf	17,0	;volatile
  6667                           
  6668                           ;MCU_B1.c: 234: Timer1.Count++;
  6669  04EA  3001               	movlw	1
  6670  04EB  07BC               	addwf	_Timer1+1,f
  6671  04EC  3000               	movlw	0
  6672  04ED  3DBD               	addwfc	_Timer1+2,f
  6673                           
  6674                           ;MCU_B1.c: 235: if (Timer1.Count == 100)
  6675  04EE  3001               	movlw	1
  6676  04EF  3E3B               	addlw	_Timer1& (0+255)
  6677  04F0  0086               	movwf	6
  6678  04F1  0187               	clrf	7
  6679  04F2  3F40               	moviw [0]fsr1
  6680  04F3  3A64               	xorlw	100
  6681  04F4  1D03               	skipz
  6682  04F5  2CF8               	goto	u187_25
  6683  04F6  3F41               	moviw [1]fsr1
  6684  04F7  3A00               	xorlw	0
  6685  04F8                     u187_25:	
  6686  04F8  1D03               	skipz
  6687  04F9  0008               	return
  6688                           
  6689                           ;MCU_B1.c: 236: {
  6690                           ;MCU_B1.c: 237: Timer1.Count = 0;
  6691  04FA  01BC               	clrf	_Timer1+1
  6692  04FB  01BD               	clrf	_Timer1+2
  6693                           
  6694                           ;MCU_B1.c: 238: Timer1.Timeout = 1;
  6695  04FC  143B               	bsf	_Timer1,0
  6696  04FD  0008               	return
  6697  04FE                     __end_of_TMR1_ISR:	
  6698  007E                     btemp	set	126	;btemp
  6699  007E                     pic14e$flags	set	126
  6700  007E                     wtemp	set	126
  6701  007E                     wtemp0	set	126
  6702  0080                     wtemp1	set	128
  6703  0082                     wtemp2	set	130
  6704  0084                     wtemp3	set	132
  6705  0086                     wtemp4	set	134
  6706  0088                     wtemp5	set	136
  6707  007F                     wtemp6	set	127
  6708  007E                     ttemp	set	126
  6709  007E                     ttemp0	set	126
  6710  0081                     ttemp1	set	129
  6711  0084                     ttemp2	set	132
  6712  0087                     ttemp3	set	135
  6713  007F                     ttemp4	set	127
  6714  007E                     ltemp	set	126
  6715  007E                     ltemp0	set	126
  6716  0082                     ltemp1	set	130
  6717  0086                     ltemp2	set	134
  6718  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    102
    Data        32
    BSS         82
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     12      63
    BANK1            80      0      62
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), _product(BANK1[32]), 


Critical Paths under _main in COMMON

    _UART_Main->_UART_Receive
    _UART_Main->_UART_Transmit
    _UART_Transmit->_putch
    _UART_Receive->_setTxData
    _setRF_Main->_getRxData
    _getRxData->_getMain_All_Error_Status
    _getRxData->_setLog_Code
    _getRxData->_setTxData
    _setControl_Lights_Table->_setTxData
    _CC2500_TxData->_CC2500_WriteByte
    _RF_Initialization->_setRF_Initialization
    _CC2500_PowerRST->_CC2500_WriteByte
    _CC2500_PowerRST->_DelayTime_1us
    _CC2500_WriteREG->_CC2500_WriteByte
    _CC2500_FrequencyCabr->_DelayTime_1us
    _CC2500_WriteCommand->_CC2500_WriteByte

Critical Paths under _ISR in COMMON

    _ISR->_UART_ISR

Critical Paths under _main in BANK0

    _UART_Main->_UART_Transmit
    _RF_Main->_setRF_Main
    _setRF_Main->_CC2500_TxData
    _RF_RxDisable->_CC2500_WriteCommand
    _CC2500_TxData->_CC2500_WriteCommand
    _CC2500_PowerOnInitial->_CC2500_InitSetREG
    _CC2500_SIDLEMode->_CC2500_WriteCommand
    _CC2500_PowerRST->_DelayTime_1us
    _CC2500_InitSetREG->_CC2500_WriteREG
    _CC2500_InitPATable->_CC2500_WriteREG
    _CC2500_FrequencyCabr->_DelayTime_1us
    _CC2500_ClearTXFIFO->_CC2500_WriteCommand
    _CC2500_ClearRXFIFO->_CC2500_WriteCommand

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4    2826
                                              8 BANK0      4     0      4
              _CC2500_PowerOnInitial
                 _Mcu_Initialization
                  _RF_Initialization
                            _RF_Main
                          _UART_Main
              _myMain_Initialization
          _myUARTtoRF_Initialization
                    _myUARTtoRF_Main
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _myUARTtoRF_Main                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _myUARTtoRF_Initialization                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Main                                            0     0      0     130
                       _UART_Receive
                      _UART_Transmit
 ---------------------------------------------------------------------------------
 (2) _UART_Transmit                                        3     3      0     130
                                              5 COMMON     1     1      0
                                              0 BANK0      2     2      0
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UART_Receive                                         1     1      0       0
                                              5 COMMON     1     1      0
                          _setTxData
 ---------------------------------------------------------------------------------
 (1) _RF_Main                                              0     0      0     445
                         _setRF_Main
 ---------------------------------------------------------------------------------
 (2) _setRF_Main                                           4     4      0     445
                                              4 BANK0      4     4      0
                      _CC2500_TxData
                       _RF_RxDisable
           _getMain_All_Error_Status
                          _getRxData
 ---------------------------------------------------------------------------------
 (3) _getRxData                                            2     2      0      68
                                              5 COMMON     1     1      0
                                              0 BANK0      1     1      0
           _getMain_All_Error_Status
            _setControl_Lights_Table
                        _setLog_Code
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setLog_Code                                          1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _setControl_Lights_Table                              0     0      0       0
                          _setTxData
 ---------------------------------------------------------------------------------
 (3) _setTxData                                            2     2      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _getMain_All_Error_Status                             2     2      0      34
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _RF_RxDisable                                         0     0      0      99
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (3) _CC2500_TxData                                        2     2      0     235
                                              2 BANK0      2     2      0
                   _CC2500_WriteByte
                _CC2500_WriteCommand
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (1) _RF_Initialization                                    0     0      0       0
               _setRF_Initialization
 ---------------------------------------------------------------------------------
 (2) _setRF_Initialization                                 1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                           _Fosc_Set
                             _IO_Set
                           _TMR1_Set
                           _UART_Set
 ---------------------------------------------------------------------------------
 (2) _UART_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CC2500_PowerOnInitial                                0     0      0    2251
                 _CC2500_ClearRXFIFO
                 _CC2500_ClearTXFIFO
               _CC2500_FrequencyCabr
                 _CC2500_InitPATable
                  _CC2500_InitSetREG
                    _CC2500_PowerRST
                   _CC2500_SIDLEMode
 ---------------------------------------------------------------------------------
 (2) _CC2500_SIDLEMode                                     0     0      0      99
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _CC2500_PowerRST                                      1     1      0     512
                                              4 BANK0      1     1      0
                   _CC2500_WriteByte
                      _DelayTime_1us
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (2) _CC2500_InitSetREG                                    4     4      0     482
                                              3 BANK0      4     4      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (2) _CC2500_InitPATable                                   3     3      0     417
                                              3 BANK0      3     3      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (3) _CC2500_WriteREG                                      3     2      1     284
                                              0 BANK0      3     2      1
                   _CC2500_WriteByte
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (2) _CC2500_FrequencyCabr                                 0     0      0     543
                _CC2500_WriteCommand
                      _DelayTime_1us
 ---------------------------------------------------------------------------------
 (3) _DelayTime_1us                                        6     4      2     444
                                              4 COMMON     2     0      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _CC2500_ClearTXFIFO                                   0     0      0      99
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _CC2500_ClearRXFIFO                                   0     0      0      99
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (4) _CC2500_WriteCommand                                  2     2      0      99
                                              0 BANK0      2     2      0
                   _CC2500_WriteByte
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (5) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _CC2500_WriteByte                                     2     2      0      68
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  1     1      0      68
                                              3 COMMON     1     1      0
                           _TMR1_ISR
                           _UART_ISR
 ---------------------------------------------------------------------------------
 (7) _UART_ISR                                             3     3      0      68
                                              0 COMMON     3     3      0
                              _getch
 ---------------------------------------------------------------------------------
 (8) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CC2500_PowerOnInitial
     _CC2500_ClearRXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _Timeout_Counter
         _set_TimeoutCleared
     _CC2500_ClearTXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _Timeout_Counter
         _set_TimeoutCleared
     _CC2500_FrequencyCabr
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _Timeout_Counter
         _set_TimeoutCleared
       _DelayTime_1us
     _CC2500_InitPATable
       _CC2500_WriteREG
         _CC2500_WriteByte
         _Timeout_Counter
         _set_TimeoutCleared
     _CC2500_InitSetREG
       _CC2500_WriteREG
         _CC2500_WriteByte
         _Timeout_Counter
         _set_TimeoutCleared
     _CC2500_PowerRST
       _CC2500_WriteByte
       _DelayTime_1us
       _Timeout_Counter
       _set_TimeoutCleared
     _CC2500_SIDLEMode
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _Timeout_Counter
         _set_TimeoutCleared
   _Mcu_Initialization
     _Fosc_Set
     _IO_Set
     _TMR1_Set
     _UART_Set
   _RF_Initialization
     _setRF_Initialization
   _RF_Main
     _setRF_Main
       _CC2500_TxData
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
           _Timeout_Counter
           _set_TimeoutCleared
         _Timeout_Counter
         _set_TimeoutCleared
       _RF_RxDisable
         _CC2500_WriteCommand
           _CC2500_WriteByte
           _Timeout_Counter
           _set_TimeoutCleared
       _getMain_All_Error_Status
       _getRxData
         _getMain_All_Error_Status
         _setControl_Lights_Table
           _setTxData
         _setLog_Code
         _setTxData
   _UART_Main
     _UART_Receive
       _setTxData
     _UART_Transmit
       _putch
   _myMain_Initialization
   _myUARTtoRF_Initialization
   _myUARTtoRF_Main
   _my_MainTimer

 _ISR (ROOT)
   _TMR1_ISR
   _UART_ISR
     _getch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      87       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      C      3F       6       78.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      3E       8       77.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      87      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Dec 03 16:29:24 2014

           __end_of_CC2500_WriteREG 04C0                                 l134 029A  
                               l207 0582                                 l208 0584  
                               l251 043C                                 l600 060B  
                               l583 05D7                                 l690 0300  
                               l674 046C                                 l970 004E  
                               l974 00AC                                 l966 00DF  
                               l975 007B                                 l968 0044  
                               _GIE 005F                                 _CRC 0040  
                               _RA0 0060                                 _RA1 0061  
                               _RA2 0062                                 _RC0 0070  
                               _RC1 0071                                 _RC3 0073  
                               _RC4 0074                                 _RC5 0075  
                               _RF1 002F                                 _ISR 0004  
                               _RX9 0CEE                                 _TX9 0CF6  
          __end_of_CC2500_WriteByte 058D                                 wreg 0009  
                              ?_ISR 0070                                l1008 05B9  
                              l1016 0119                                l1026 0167  
                              l1046 039D                                l3063 02D8  
                              l3401 02A3                                l3341 0546  
                              l3413 02B4                                l3405 02A8  
                              l3069 02EA                                l3335 053E  
                              l3431 0458                                l3407 02AC  
                              l3079 0301                                l3337 0541  
                              l3409 02AF                                l3361 035B  
                              l3443 04B0                                l3363 0370  
                              l3515 015D                                l3429 044D  
                              l3437 04A8                                l3533 03C2  
                              l3381 0275                                l3509 0152  
                              l3439 04AB                                l3543 03D1  
                              l3535 03C5                                l3375 026D  
                              l3545 03D4                                l3377 0270  
                              l3369 0382                                l3539 03CA  
                              l3395 0285                                l3475 0106  
                              l3549 03D9                                l3637 0065  
                              l3399 02A0                                l3487 011C  
                              l3671 0096                                l3499 0134  
                              l3691 00CD                                l3669 0094  
             _myMain_Initialization 05C3                                _LATA 010C  
                              _LATB 010D                                _LATC 010E  
                              u2165 0572                                u2335 0442  
                              u2735 005F                                u2835 00BD  
                              u1955 02D1                                _PEIE 005E  
                              u1965 02E6                                u1975 02F8  
                              u1995 030F                                _RCIE 048D  
                              _RCIF 008D                                _UART 0046  
                              _RSSI 0041                                _TXIE 048C  
                              _TXIF 008C                                _main 045D  
                   __end_of_RF_Main 0641                                fsr0h 0005  
                              fsr1h 0007                                fsr0l 0004  
                              indf0 0000                                indf1 0001  
                              fsr1l 0006                                btemp 007E  
        ?_myUARTtoRF_Initialization 0070                                ltemp 007E  
     __size_of_setRF_Initialization 000A                                start 0013  
                              ttemp 007E                                wtemp 007E  
                             ??_ISR 0073                   ??_myUARTtoRF_Main 0074  
                             ?_main 005A                               _BRG16 0CFB  
                     __CFG_WDTE$OFF 0000                               _T1CON 0018  
                             i1l606 061E                               i1l579 0409  
     __size_of_CC2500_FrequencyCabr 000B                               _RCREG 0199  
                             _RCSTA 019D                               _TMR1H 0017  
                             _TMR1L 0016                               _SPBRG 019B  
                             _PORTA 000C                               _PORTB 000D  
                             _PORTC 000E                               _TRISA 008C  
                             _TRISB 008D                               _TRISC 008E  
                             _TXREG 019A                               _TXSTA 019E  
           __end_of_Timeout_Counter 0578                       __CFG_WRT$BOOT 0000  
                  __end_of_UART_ISR 040D                  __size_of_UART_Main 000D  
                  __end_of_TMR1_ISR 04FE                    __end_of_UART_Set 05A1  
      __size_of_CC2500_WriteCommand 0018                    __end_of_TMR1_Set 05F5  
                             _getch 061E                               _putch 060A  
       __size_of_CC2500_ClearRXFIFO 0004         __size_of_CC2500_ClearTXFIFO 0004  
                    __pbitbssCOMMON 03B0                      __CFG_BOREN$OFF 0000  
                             ltemp0 007E                               ltemp1 0082  
                             ltemp2 0086                               ltemp3 0080  
                             ttemp0 007E                               ttemp1 0081  
                             ttemp2 0084                               ttemp3 0087  
                             ttemp4 007F                               wtemp0 007E  
                             wtemp1 0080                               wtemp2 0082  
                             wtemp3 0084                               wtemp4 0086  
                             wtemp5 0088                               wtemp6 007F  
                 ?_CC2500_SIDLEMode 0070          __size_of_RF_Initialization 0003  
                ??_CC2500_SIDLEMode 0076                     __initialization 0015  
                  ?_CC2500_PowerRST 0070                        __end_of_main 0480  
                  __end_of_Fosc_Set 0632                    ?_CC2500_WriteREG 0052  
                            ??_main 0076                        ?_setLog_Code 0070  
           _setControl_Lights_Table 035A                          _Receive_OK 03B0  
            ?_myMain_Initialization 0070                              ?_getch 0070  
                         ??_RF_Main 0076                              _ANSELA 018C  
                            ?_putch 0070                              _ANSELB 018D  
                            _ANSELC 018E            _getMain_All_Error_Status 0641  
                            i1l3027 03F1                              u187_25 04F8  
                            _OSCCON 0099                              _TMR1IE 0488  
                            _TMR1IF 0088                              _SPBRGH 019C  
                            _IO_Set 05A1                              _TRISC6 0476  
                            _TRISC7 0477                  DelayTime_1us@count 0074  
    __size_of_CC2500_PowerOnInitial 0015       __end_of_CC2500_PowerOnInitial 0563  
        __end_of_Mcu_Initialization 05E9                              _Timer1 003B  
                 __end_of_UART_Main 05DD                              _r_data 0045  
                            _s_data 0078                              _myMain 0020  
                  ?_Timeout_Counter 0070         __size_of_CC2500_InitPATable 001F  
               CC2500_TxData@loop_e 0055    __end_of_CC2500_registers_address 022F  
           __end_of__initialization 0033                       ?_my_MainTimer 0070  
             __end_of_UART_Transmit 051A                      __pcstackCOMMON 0070  
                      __pidataBANK1 0480                           ?_UART_ISR 0070  
                         ?_TMR1_ISR 0070                           ?_UART_Set 0070  
                     __end_of_getch 0624                           ?_TMR1_Set 0070  
         ??_setControl_Lights_Table 0075                       __end_of_putch 0612  
        __end_of_set_TimeoutCleared 062E                  __size_of_getRxData 0087  
                 ?_CC2500_WriteByte 0070                  ??_CC2500_WriteByte 0074  
                           ??_getch 0070                             ??_putch 0074  
                        __pbssBANK0 0020                          __pbssBANK1 00C0  
                         ?_Fosc_Set 0070                             ?_IO_Set 0070  
                    ??_my_MainTimer 0074                     __CFG_VCAPEN$OFF 0000  
                   _myUARTtoRF_Main 0647                          __pnvCOMMON 0079  
                    DelayTime_1us@i 0052                      DelayTime_1us@j 0054  
       ??_myUARTtoRF_Initialization 0074                          __pmaintext 045D  
               _CC2500_WriteCommand 0536                          ??_UART_ISR 0070  
                        ??_TMR1_ISR 0070                          ??_UART_Set 0074  
                        ??_TMR1_Set 0074                          __pintentry 0004  
                __size_of_setTxData 0070              __size_of_DelayTime_1us 0026  
                         UART_ISR@i 0071        __end_of_setRF_Initialization 060A  
              __size_of_setLog_Code 001C                ?_CC2500_WriteCommand 0070  
            __size_of_CC2500_TxData 005A                             _RF_Data 00C0  
                           _RF_Main 063E     __end_of_setControl_Lights_Table 039E  
                   setRF_Main@error 0059                          ??_Fosc_Set 0074  
                     ?_UART_Receive 0070        __end_of_CC2500_FrequencyCabr 0600  
                   __size_of_IO_Set 0013                   __end_of_getRxData 016A  
          _CC2500_registers_address 0200                             __ptext1 02C0  
                           __ptext2 0647                             __ptext3 0624  
                           __ptext4 05C3                             __ptext5 05D0  
                           __ptext6 04FE                             __ptext7 060A  
                           __ptext8 0314                             __ptext9 063E  
         __size_of_CC2500_SIDLEMode 0004           _myUARTtoRF_Initialization 0624  
                      __size_of_ISR 000F          ??_getMain_All_Error_Status 0074  
                        _setRF_Main 0037             ??_myMain_Initialization 0074  
             ??_CC2500_WriteCommand 0052          __end_of_CC2500_ClearRXFIFO 063E  
        __end_of_CC2500_ClearTXFIFO 063A                             _product 0079  
           __end_of_myUARTtoRF_Main 0648                             clrloop0 0613  
              end_of_initialization 0033                   _CC2500_InitSetREG 040D  
                     _DelayTime_1us 0437                   __end_of_setTxData 01DA  
                    ??_UART_Receive 0075                             init_ram 0618  
                ?_CC2500_InitSetREG 0070                             initloop 0619  
                    UART_Transmit@i 0052                       _CC2500_TxData 0266  
               ??_CC2500_InitSetREG 0055                        __pstringtext 0200  
                         _UART_Main 05D0             CC2500_InitSetREG@loop_c 0058  
                _Mcu_Initialization 05DD            __size_of_CC2500_PowerRST 0041  
              __end_of_my_MainTimer 0314                    __CFG_FOSC$INTOSC 0000  
          __size_of_CC2500_WriteREG 0020           __end_of_CC2500_InitSetREG 0437  
               ?_Mcu_Initialization 0070                      ?_DelayTime_1us 0074  
                     ?_RF_RxDisable 0070     getMain_All_Error_Status@command 0070  
                    __end_of_IO_Set 05B4                _setRF_Initialization 0600  
                    ?_CC2500_TxData 0070               _CC2500_PowerOnInitial 054E  
              ??_Mcu_Initialization 0074                          ?_UART_Main 0070  
                 __size_of_UART_ISR 002E                   __size_of_TMR1_ISR 001F  
                 __size_of_UART_Set 0014                   __size_of_TMR1_Set 000C  
              _CC2500_FrequencyCabr 05F5                         ?_setRF_Main 0070  
               start_initialization 0015                         __end_of_ISR 0013  
        __end_of_CC2500_InitPATable 04DF                    ?_myUARTtoRF_Main 0070  
                    ??_RF_RxDisable 0076                  _set_TimeoutCleared 0629  
                          ??_IO_Set 0074            __size_of_Timeout_Counter 0015  
             ?_setRF_Initialization 0070                   __size_of_Fosc_Set 0004  
         __size_of_CC2500_WriteByte 0015                 ?_set_TimeoutCleared 0070  
                         _Rx_Length 0042                           _Tx_Length 005E  
                       __pdataBANK1 00A0                __end_of_UART_Receive 035A  
  __end_of_getMain_All_Error_Status 0644                    _CC2500_SIDLEMode 0632  
             ?_CC2500_FrequencyCabr 0070                         __pbssCOMMON 0077  
                         ___latbits 0002              __size_of_UART_Transmit 001C  
                     __pcstackBANK0 0052                ??_set_TimeoutCleared 0074  
                   ??_DelayTime_1us 0076          __size_of_CC2500_InitSetREG 002A  
                 ??_CC2500_PowerRST 0056                            ?_RF_Main 0070  
__size_of_myUARTtoRF_Initialization 0005                   ??_CC2500_WriteREG 0053  
             CC2500_WriteREG@w_addr 0054                     ??_CC2500_TxData 0054  
                         __pnvBANK0 005E                      getRxData@error 0052  
            ?_CC2500_PowerOnInitial 0070                 __size_of_setRF_Main 00AC  
          ?_setControl_Lights_Table 0070                           _getRxData 00E3  
             __size_of_my_MainTimer 0054                         ??_UART_Main 0076  
                     ??_setLog_Code 0074              CC2500_WriteByte@loop_a 0075  
                         _r_address 0044      __size_of_myMain_Initialization 000D  
      __end_of_CC2500_patable_vaule 0266       __end_of_myMain_Initialization 05D0  
                    __size_of_getch 0006                      __size_of_putch 0008  
            ??_setRF_Initialization 0074   __end_of_myUARTtoRF_Initialization 0629  
                 _CC2500_rfSettings 022F                           clear_ram0 0612  
          CC2500_InitPATable@loop_d 0057                        _my_MainTimer 02C0  
                         _setTxData 016A                  _CC2500_ClearRXFIFO 063A  
                _CC2500_ClearTXFIFO 0636                       _UART_Transmit 04FE  
                 ??_Timeout_Counter 0074                            _UART_ISR 03DF  
                        ?_getRxData 0070                            _TMR1_ISR 04DF  
            CC2500_InitSetREG@temp1 0056              CC2500_InitSetREG@temp2 0057  
                          _UART_Set 058D                            _TMR1_Set 05E9  
               ?_CC2500_ClearRXFIFO 0070                 ?_CC2500_ClearTXFIFO 0070  
                          _RF_Count 003E                __end_of_RF_RxDisable 05C3  
       __end_of_CC2500_WriteCommand 054E              ??_CC2500_FrequencyCabr 0076  
                  setRF_Main@loop_f 0057      getMain_All_Error_Status@status 0074  
               __end_of_setLog_Code 0536                ??_CC2500_ClearRXFIFO 0076  
              ??_CC2500_ClearTXFIFO 0076           __end_of_CC2500_rfSettings 025E  
                  __size_of_RF_Main 0003                            _Fosc_Set 062E  
 __size_of_getMain_All_Error_Status 0003           ?_getMain_All_Error_Status 0070  
                        ?_setTxData 0070                    _CC2500_WriteByte 0578  
                    ?_UART_Transmit 0070                            _SwDetect 0043  
             __size_of_UART_Receive 0046                        ??_setRF_Main 0056  
              CC2500_WriteREG@value 0052                            __ptext10 0037  
                          __ptext11 00E3                            __ptext20 05DD  
                          __ptext12 051A                            __ptext21 058D  
                          __ptext13 035A                            __ptext30 04A0  
                          __ptext22 05E9                            __ptext14 016A  
                          __ptext31 05F5                            __ptext23 05A1  
                          __ptext15 0641                            __ptext40 03DF  
                          __ptext32 0437                            __ptext24 062E  
                          __ptext16 05B4                            __ptext41 061E  
                          __ptext33 0636                            __ptext25 054E  
                          __ptext17 0266                            __ptext42 04DF  
                          __ptext34 063A                            __ptext26 0632  
                          __ptext18 0644                            __ptext35 0536  
                          __ptext27 039E                            __ptext19 0600  
                          __ptext36 0629                            __ptext28 040D  
                          __ptext37 0563                            __ptext29 04C0  
                          __ptext38 0578                            __product 00A0  
                     __size_of_main 0023            __end_of_CC2500_SIDLEMode 0636  
                      _UART_Receive 0314          CC2500_WriteCommand@command 0053  
              setRF_Main@Receive_OK 0058                  _CC2500_InitPATable 04C0  
                __end_of_setRF_Main 00E3         __size_of_Mcu_Initialization 000C  
              _CC2500_patable_vaule 025E                         ??_getRxData 0075  
                          main@argc 005A                            main@argv 005C  
               ?_CC2500_InitPATable 0070                     _CC2500_PowerRST 039E  
                       _setLog_Code 051A                           putch@byte 0074  
                   _CC2500_WriteREG 04A0                       _Transceive_OK 03B1  
                       pic14e$flags 007E                            intlevel1 0000  
              ??_CC2500_InitPATable 0055             ??_CC2500_PowerOnInitial 0076  
                   ??_UART_Transmit 0075                         ??_setTxData 0074  
          __size_of_myUARTtoRF_Main 0001              CC2500_InitPATable@temp 0056  
             __size_of_RF_RxDisable 000F                   _RF_Initialization 0644  
                ?_RF_Initialization 0070                          _SPI0Buffer 0077  
               ??_RF_Initialization 0075    __size_of_setControl_Lights_Table 0044  
       __size_of_set_TimeoutCleared 0005               __end_of_DelayTime_1us 045D  
                   _Timeout_Counter 0563                        _RF_RxDisable 05B4  
         __end_of_RF_Initialization 0647               __end_of_CC2500_TxData 02C0  
           __end_of_CC2500_PowerRST 03DF  
