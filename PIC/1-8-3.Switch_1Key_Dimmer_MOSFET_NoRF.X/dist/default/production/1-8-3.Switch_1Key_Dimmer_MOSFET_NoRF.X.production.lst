

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Mar 30 11:36:52 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,inline,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,inline,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,inline,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,inline,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,inline,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,inline,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,inline,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2
    70                           	psect	text52,local,class=CODE,merge=1,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,delta=2
    73                           	psect	text55,local,class=CODE,merge=1,delta=2
    74                           	psect	text56,local,class=CODE,merge=1,delta=2
    75                           	psect	text57,local,class=CODE,merge=1,delta=2
    76                           	psect	text58,local,class=CODE,merge=1,delta=2
    77                           	psect	text59,local,class=CODE,merge=1,delta=2
    78                           	psect	text60,local,class=CODE,merge=1,delta=2
    79                           	psect	text61,local,class=CODE,merge=1,delta=2
    80                           	psect	text62,local,class=CODE,merge=1,delta=2
    81                           	psect	text63,local,class=CODE,merge=1,delta=2
    82                           	psect	text64,local,class=CODE,merge=1,delta=2
    83                           	psect	text65,local,class=CODE,merge=1,delta=2
    84                           	psect	text66,local,class=CODE,merge=1,delta=2
    85                           	psect	text67,local,class=CODE,merge=1,delta=2
    86                           	psect	text68,local,class=CODE,merge=1,delta=2
    87                           	psect	text69,local,class=CODE,merge=1,delta=2
    88                           	psect	text70,local,class=CODE,merge=1,delta=2
    89                           	psect	text71,local,class=CODE,merge=1,delta=2
    90                           	psect	text72,local,class=CODE,merge=1,delta=2
    91                           	psect	text73,local,class=CODE,merge=1,delta=2
    92                           	psect	text74,local,class=CODE,merge=1,delta=2
    93                           	psect	text75,local,class=CODE,merge=1,delta=2
    94                           	psect	text76,local,class=CODE,merge=1,delta=2
    95                           	psect	text77,local,class=CODE,merge=1,delta=2
    96                           	psect	text78,local,class=CODE,merge=1,delta=2
    97                           	psect	text79,local,class=CODE,merge=1,delta=2
    98                           	psect	text80,local,class=CODE,merge=1,delta=2
    99                           	psect	text81,local,class=CODE,merge=1,delta=2
   100                           	psect	text82,local,class=CODE,merge=1,delta=2
   101                           	psect	text83,local,class=CODE,merge=1,delta=2
   102                           	psect	text84,local,class=CODE,merge=1,delta=2
   103                           	psect	text85,local,class=CODE,merge=1,delta=2
   104                           	psect	text86,local,class=CODE,merge=1,delta=2
   105                           	psect	text87,local,class=CODE,merge=1,delta=2
   106                           	psect	text88,local,class=CODE,merge=1,delta=2
   107                           	psect	text89,local,class=CODE,merge=1,delta=2
   108                           	psect	text90,local,class=CODE,merge=1,delta=2
   109                           	psect	text91,local,class=CODE,merge=1,delta=2
   110                           	psect	text92,local,class=CODE,merge=1,delta=2
   111                           	psect	text93,local,class=CODE,merge=1,delta=2
   112                           	psect	text94,local,class=CODE,merge=1,inline,delta=2
   113                           	psect	text95,local,class=CODE,merge=1,delta=2
   114                           	psect	text96,local,class=CODE,merge=1,inline,delta=2
   115                           	psect	text97,local,class=CODE,merge=1,delta=2
   116                           	psect	text98,local,class=CODE,merge=1,inline,delta=2
   117                           	psect	text99,local,class=CODE,merge=1,delta=2
   118                           	psect	text100,local,class=CODE,merge=1,delta=2
   119                           	psect	text101,local,class=CODE,merge=1,delta=2
   120                           	psect	text102,local,class=CODE,merge=1,delta=2
   121                           	psect	text103,local,class=CODE,merge=1,delta=2
   122                           	psect	text104,local,class=CODE,merge=1,delta=2
   123                           	psect	text105,local,class=CODE,merge=1,inline,delta=2
   124                           	psect	text106,local,class=CODE,merge=1,inline,delta=2
   125                           	psect	text107,local,class=CODE,merge=1,delta=2
   126                           	psect	text108,local,class=CODE,merge=1,delta=2
   127                           	psect	text109,local,class=CODE,merge=1,inline,delta=2
   128                           	psect	text110,local,class=CODE,merge=1,inline,delta=2
   129                           	psect	intentry,global,class=CODE,delta=2
   130                           	psect	text112,local,class=CODE,merge=1,inline,delta=2
   131                           	psect	text113,local,class=CODE,merge=1,inline,delta=2
   132                           	psect	text114,local,class=CODE,merge=1,inline,delta=2
   133                           	psect	text115,local,class=CODE,merge=1,inline,delta=2
   134                           	dabs	1,0x7E,2
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  0090                     	;# 
   166  0091                     	;# 
   167  0092                     	;# 
   168  0095                     	;# 
   169  0096                     	;# 
   170  0097                     	;# 
   171  0099                     	;# 
   172  009A                     	;# 
   173  009B                     	;# 
   174  009B                     	;# 
   175  009C                     	;# 
   176  009D                     	;# 
   177  009E                     	;# 
   178  010C                     	;# 
   179  010D                     	;# 
   180  010E                     	;# 
   181  0116                     	;# 
   182  0117                     	;# 
   183  011D                     	;# 
   184  018C                     	;# 
   185  018D                     	;# 
   186  018E                     	;# 
   187  0191                     	;# 
   188  0191                     	;# 
   189  0192                     	;# 
   190  0193                     	;# 
   191  0193                     	;# 
   192  0194                     	;# 
   193  0195                     	;# 
   194  0196                     	;# 
   195  0197                     	;# 
   196  0199                     	;# 
   197  019A                     	;# 
   198  019B                     	;# 
   199  019B                     	;# 
   200  019B                     	;# 
   201  019B                     	;# 
   202  019C                     	;# 
   203  019C                     	;# 
   204  019D                     	;# 
   205  019E                     	;# 
   206  019F                     	;# 
   207  020D                     	;# 
   208  0210                     	;# 
   209  0211                     	;# 
   210  0211                     	;# 
   211  0212                     	;# 
   212  0212                     	;# 
   213  0213                     	;# 
   214  0213                     	;# 
   215  0214                     	;# 
   216  0214                     	;# 
   217  0215                     	;# 
   218  0215                     	;# 
   219  0215                     	;# 
   220  0216                     	;# 
   221  0216                     	;# 
   222  0217                     	;# 
   223  0217                     	;# 
   224  0291                     	;# 
   225  0291                     	;# 
   226  0292                     	;# 
   227  0293                     	;# 
   228  0298                     	;# 
   229  0298                     	;# 
   230  0299                     	;# 
   231  029A                     	;# 
   232  0394                     	;# 
   233  0395                     	;# 
   234  0396                     	;# 
   235  0FE4                     	;# 
   236  0FE5                     	;# 
   237  0FE6                     	;# 
   238  0FE7                     	;# 
   239  0FE8                     	;# 
   240  0FE9                     	;# 
   241  0FEA                     	;# 
   242  0FEB                     	;# 
   243  0FED                     	;# 
   244  0FEE                     	;# 
   245  0FEF                     	;# 
   246  0000                     	;# 
   247  0001                     	;# 
   248  0002                     	;# 
   249  0003                     	;# 
   250  0004                     	;# 
   251  0005                     	;# 
   252  0006                     	;# 
   253  0007                     	;# 
   254  0008                     	;# 
   255  0009                     	;# 
   256  000A                     	;# 
   257  000B                     	;# 
   258  000C                     	;# 
   259  000D                     	;# 
   260  000E                     	;# 
   261  0010                     	;# 
   262  0011                     	;# 
   263  0012                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0016                     	;# 
   267  0017                     	;# 
   268  0018                     	;# 
   269  0019                     	;# 
   270  001A                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  008C                     	;# 
   274  008D                     	;# 
   275  008E                     	;# 
   276  0090                     	;# 
   277  0091                     	;# 
   278  0092                     	;# 
   279  0095                     	;# 
   280  0096                     	;# 
   281  0097                     	;# 
   282  0099                     	;# 
   283  009A                     	;# 
   284  009B                     	;# 
   285  009B                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  0116                     	;# 
   293  0117                     	;# 
   294  011D                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  018E                     	;# 
   298  0191                     	;# 
   299  0191                     	;# 
   300  0192                     	;# 
   301  0193                     	;# 
   302  0193                     	;# 
   303  0194                     	;# 
   304  0195                     	;# 
   305  0196                     	;# 
   306  0197                     	;# 
   307  0199                     	;# 
   308  019A                     	;# 
   309  019B                     	;# 
   310  019B                     	;# 
   311  019B                     	;# 
   312  019B                     	;# 
   313  019C                     	;# 
   314  019C                     	;# 
   315  019D                     	;# 
   316  019E                     	;# 
   317  019F                     	;# 
   318  020D                     	;# 
   319  0210                     	;# 
   320  0211                     	;# 
   321  0211                     	;# 
   322  0212                     	;# 
   323  0212                     	;# 
   324  0213                     	;# 
   325  0213                     	;# 
   326  0214                     	;# 
   327  0214                     	;# 
   328  0215                     	;# 
   329  0215                     	;# 
   330  0215                     	;# 
   331  0216                     	;# 
   332  0216                     	;# 
   333  0217                     	;# 
   334  0217                     	;# 
   335  0291                     	;# 
   336  0291                     	;# 
   337  0292                     	;# 
   338  0293                     	;# 
   339  0298                     	;# 
   340  0298                     	;# 
   341  0299                     	;# 
   342  029A                     	;# 
   343  0394                     	;# 
   344  0395                     	;# 
   345  0396                     	;# 
   346  0FE4                     	;# 
   347  0FE5                     	;# 
   348  0FE6                     	;# 
   349  0FE7                     	;# 
   350  0FE8                     	;# 
   351  0FE9                     	;# 
   352  0FEA                     	;# 
   353  0FEB                     	;# 
   354  0FED                     	;# 
   355  0FEE                     	;# 
   356  0FEF                     	;# 
   357  0000                     	;# 
   358  0001                     	;# 
   359  0002                     	;# 
   360  0003                     	;# 
   361  0004                     	;# 
   362  0005                     	;# 
   363  0006                     	;# 
   364  0007                     	;# 
   365  0008                     	;# 
   366  0009                     	;# 
   367  000A                     	;# 
   368  000B                     	;# 
   369  000C                     	;# 
   370  000D                     	;# 
   371  000E                     	;# 
   372  0010                     	;# 
   373  0011                     	;# 
   374  0012                     	;# 
   375  0015                     	;# 
   376  0016                     	;# 
   377  0016                     	;# 
   378  0017                     	;# 
   379  0018                     	;# 
   380  0019                     	;# 
   381  001A                     	;# 
   382  001B                     	;# 
   383  001C                     	;# 
   384  008C                     	;# 
   385  008D                     	;# 
   386  008E                     	;# 
   387  0090                     	;# 
   388  0091                     	;# 
   389  0092                     	;# 
   390  0095                     	;# 
   391  0096                     	;# 
   392  0097                     	;# 
   393  0099                     	;# 
   394  009A                     	;# 
   395  009B                     	;# 
   396  009B                     	;# 
   397  009C                     	;# 
   398  009D                     	;# 
   399  009E                     	;# 
   400  010C                     	;# 
   401  010D                     	;# 
   402  010E                     	;# 
   403  0116                     	;# 
   404  0117                     	;# 
   405  011D                     	;# 
   406  018C                     	;# 
   407  018D                     	;# 
   408  018E                     	;# 
   409  0191                     	;# 
   410  0191                     	;# 
   411  0192                     	;# 
   412  0193                     	;# 
   413  0193                     	;# 
   414  0194                     	;# 
   415  0195                     	;# 
   416  0196                     	;# 
   417  0197                     	;# 
   418  0199                     	;# 
   419  019A                     	;# 
   420  019B                     	;# 
   421  019B                     	;# 
   422  019B                     	;# 
   423  019B                     	;# 
   424  019C                     	;# 
   425  019C                     	;# 
   426  019D                     	;# 
   427  019E                     	;# 
   428  019F                     	;# 
   429  020D                     	;# 
   430  0210                     	;# 
   431  0211                     	;# 
   432  0211                     	;# 
   433  0212                     	;# 
   434  0212                     	;# 
   435  0213                     	;# 
   436  0213                     	;# 
   437  0214                     	;# 
   438  0214                     	;# 
   439  0215                     	;# 
   440  0215                     	;# 
   441  0215                     	;# 
   442  0216                     	;# 
   443  0216                     	;# 
   444  0217                     	;# 
   445  0217                     	;# 
   446  0291                     	;# 
   447  0291                     	;# 
   448  0292                     	;# 
   449  0293                     	;# 
   450  0298                     	;# 
   451  0298                     	;# 
   452  0299                     	;# 
   453  029A                     	;# 
   454  0394                     	;# 
   455  0395                     	;# 
   456  0396                     	;# 
   457  0FE4                     	;# 
   458  0FE5                     	;# 
   459  0FE6                     	;# 
   460  0FE7                     	;# 
   461  0FE8                     	;# 
   462  0FE9                     	;# 
   463  0FEA                     	;# 
   464  0FEB                     	;# 
   465  0FED                     	;# 
   466  0FEE                     	;# 
   467  0FEF                     	;# 
   468  0000                     	;# 
   469  0001                     	;# 
   470  0002                     	;# 
   471  0003                     	;# 
   472  0004                     	;# 
   473  0005                     	;# 
   474  0006                     	;# 
   475  0007                     	;# 
   476  0008                     	;# 
   477  0009                     	;# 
   478  000A                     	;# 
   479  000B                     	;# 
   480  000C                     	;# 
   481  000D                     	;# 
   482  000E                     	;# 
   483  0010                     	;# 
   484  0011                     	;# 
   485  0012                     	;# 
   486  0015                     	;# 
   487  0016                     	;# 
   488  0016                     	;# 
   489  0017                     	;# 
   490  0018                     	;# 
   491  0019                     	;# 
   492  001A                     	;# 
   493  001B                     	;# 
   494  001C                     	;# 
   495  008C                     	;# 
   496  008D                     	;# 
   497  008E                     	;# 
   498  0090                     	;# 
   499  0091                     	;# 
   500  0092                     	;# 
   501  0095                     	;# 
   502  0096                     	;# 
   503  0097                     	;# 
   504  0099                     	;# 
   505  009A                     	;# 
   506  009B                     	;# 
   507  009B                     	;# 
   508  009C                     	;# 
   509  009D                     	;# 
   510  009E                     	;# 
   511  010C                     	;# 
   512  010D                     	;# 
   513  010E                     	;# 
   514  0116                     	;# 
   515  0117                     	;# 
   516  011D                     	;# 
   517  018C                     	;# 
   518  018D                     	;# 
   519  018E                     	;# 
   520  0191                     	;# 
   521  0191                     	;# 
   522  0192                     	;# 
   523  0193                     	;# 
   524  0193                     	;# 
   525  0194                     	;# 
   526  0195                     	;# 
   527  0196                     	;# 
   528  0197                     	;# 
   529  0199                     	;# 
   530  019A                     	;# 
   531  019B                     	;# 
   532  019B                     	;# 
   533  019B                     	;# 
   534  019B                     	;# 
   535  019C                     	;# 
   536  019C                     	;# 
   537  019D                     	;# 
   538  019E                     	;# 
   539  019F                     	;# 
   540  020D                     	;# 
   541  0210                     	;# 
   542  0211                     	;# 
   543  0211                     	;# 
   544  0212                     	;# 
   545  0212                     	;# 
   546  0213                     	;# 
   547  0213                     	;# 
   548  0214                     	;# 
   549  0214                     	;# 
   550  0215                     	;# 
   551  0215                     	;# 
   552  0215                     	;# 
   553  0216                     	;# 
   554  0216                     	;# 
   555  0217                     	;# 
   556  0217                     	;# 
   557  0291                     	;# 
   558  0291                     	;# 
   559  0292                     	;# 
   560  0293                     	;# 
   561  0298                     	;# 
   562  0298                     	;# 
   563  0299                     	;# 
   564  029A                     	;# 
   565  0394                     	;# 
   566  0395                     	;# 
   567  0396                     	;# 
   568  0FE4                     	;# 
   569  0FE5                     	;# 
   570  0FE6                     	;# 
   571  0FE7                     	;# 
   572  0FE8                     	;# 
   573  0FE9                     	;# 
   574  0FEA                     	;# 
   575  0FEB                     	;# 
   576  0FED                     	;# 
   577  0FEE                     	;# 
   578  0FEF                     	;# 
   579  0000                     	;# 
   580  0001                     	;# 
   581  0002                     	;# 
   582  0003                     	;# 
   583  0004                     	;# 
   584  0005                     	;# 
   585  0006                     	;# 
   586  0007                     	;# 
   587  0008                     	;# 
   588  0009                     	;# 
   589  000A                     	;# 
   590  000B                     	;# 
   591  000C                     	;# 
   592  000D                     	;# 
   593  000E                     	;# 
   594  0010                     	;# 
   595  0011                     	;# 
   596  0012                     	;# 
   597  0015                     	;# 
   598  0016                     	;# 
   599  0016                     	;# 
   600  0017                     	;# 
   601  0018                     	;# 
   602  0019                     	;# 
   603  001A                     	;# 
   604  001B                     	;# 
   605  001C                     	;# 
   606  008C                     	;# 
   607  008D                     	;# 
   608  008E                     	;# 
   609  0090                     	;# 
   610  0091                     	;# 
   611  0092                     	;# 
   612  0095                     	;# 
   613  0096                     	;# 
   614  0097                     	;# 
   615  0099                     	;# 
   616  009A                     	;# 
   617  009B                     	;# 
   618  009B                     	;# 
   619  009C                     	;# 
   620  009D                     	;# 
   621  009E                     	;# 
   622  010C                     	;# 
   623  010D                     	;# 
   624  010E                     	;# 
   625  0116                     	;# 
   626  0117                     	;# 
   627  011D                     	;# 
   628  018C                     	;# 
   629  018D                     	;# 
   630  018E                     	;# 
   631  0191                     	;# 
   632  0191                     	;# 
   633  0192                     	;# 
   634  0193                     	;# 
   635  0193                     	;# 
   636  0194                     	;# 
   637  0195                     	;# 
   638  0196                     	;# 
   639  0197                     	;# 
   640  0199                     	;# 
   641  019A                     	;# 
   642  019B                     	;# 
   643  019B                     	;# 
   644  019B                     	;# 
   645  019B                     	;# 
   646  019C                     	;# 
   647  019C                     	;# 
   648  019D                     	;# 
   649  019E                     	;# 
   650  019F                     	;# 
   651  020D                     	;# 
   652  0210                     	;# 
   653  0211                     	;# 
   654  0211                     	;# 
   655  0212                     	;# 
   656  0212                     	;# 
   657  0213                     	;# 
   658  0213                     	;# 
   659  0214                     	;# 
   660  0214                     	;# 
   661  0215                     	;# 
   662  0215                     	;# 
   663  0215                     	;# 
   664  0216                     	;# 
   665  0216                     	;# 
   666  0217                     	;# 
   667  0217                     	;# 
   668  0291                     	;# 
   669  0291                     	;# 
   670  0292                     	;# 
   671  0293                     	;# 
   672  0298                     	;# 
   673  0298                     	;# 
   674  0299                     	;# 
   675  029A                     	;# 
   676  0394                     	;# 
   677  0395                     	;# 
   678  0396                     	;# 
   679  0FE4                     	;# 
   680  0FE5                     	;# 
   681  0FE6                     	;# 
   682  0FE7                     	;# 
   683  0FE8                     	;# 
   684  0FE9                     	;# 
   685  0FEA                     	;# 
   686  0FEB                     	;# 
   687  0FED                     	;# 
   688  0FEE                     	;# 
   689  0FEF                     	;# 
   690  0000                     	;# 
   691  0001                     	;# 
   692  0002                     	;# 
   693  0003                     	;# 
   694  0004                     	;# 
   695  0005                     	;# 
   696  0006                     	;# 
   697  0007                     	;# 
   698  0008                     	;# 
   699  0009                     	;# 
   700  000A                     	;# 
   701  000B                     	;# 
   702  000C                     	;# 
   703  000D                     	;# 
   704  000E                     	;# 
   705  0010                     	;# 
   706  0011                     	;# 
   707  0012                     	;# 
   708  0015                     	;# 
   709  0016                     	;# 
   710  0016                     	;# 
   711  0017                     	;# 
   712  0018                     	;# 
   713  0019                     	;# 
   714  001A                     	;# 
   715  001B                     	;# 
   716  001C                     	;# 
   717  008C                     	;# 
   718  008D                     	;# 
   719  008E                     	;# 
   720  0090                     	;# 
   721  0091                     	;# 
   722  0092                     	;# 
   723  0095                     	;# 
   724  0096                     	;# 
   725  0097                     	;# 
   726  0099                     	;# 
   727  009A                     	;# 
   728  009B                     	;# 
   729  009B                     	;# 
   730  009C                     	;# 
   731  009D                     	;# 
   732  009E                     	;# 
   733  010C                     	;# 
   734  010D                     	;# 
   735  010E                     	;# 
   736  0116                     	;# 
   737  0117                     	;# 
   738  011D                     	;# 
   739  018C                     	;# 
   740  018D                     	;# 
   741  018E                     	;# 
   742  0191                     	;# 
   743  0191                     	;# 
   744  0192                     	;# 
   745  0193                     	;# 
   746  0193                     	;# 
   747  0194                     	;# 
   748  0195                     	;# 
   749  0196                     	;# 
   750  0197                     	;# 
   751  0199                     	;# 
   752  019A                     	;# 
   753  019B                     	;# 
   754  019B                     	;# 
   755  019B                     	;# 
   756  019B                     	;# 
   757  019C                     	;# 
   758  019C                     	;# 
   759  019D                     	;# 
   760  019E                     	;# 
   761  019F                     	;# 
   762  020D                     	;# 
   763  0210                     	;# 
   764  0211                     	;# 
   765  0211                     	;# 
   766  0212                     	;# 
   767  0212                     	;# 
   768  0213                     	;# 
   769  0213                     	;# 
   770  0214                     	;# 
   771  0214                     	;# 
   772  0215                     	;# 
   773  0215                     	;# 
   774  0215                     	;# 
   775  0216                     	;# 
   776  0216                     	;# 
   777  0217                     	;# 
   778  0217                     	;# 
   779  0291                     	;# 
   780  0291                     	;# 
   781  0292                     	;# 
   782  0293                     	;# 
   783  0298                     	;# 
   784  0298                     	;# 
   785  0299                     	;# 
   786  029A                     	;# 
   787  0394                     	;# 
   788  0395                     	;# 
   789  0396                     	;# 
   790  0FE4                     	;# 
   791  0FE5                     	;# 
   792  0FE6                     	;# 
   793  0FE7                     	;# 
   794  0FE8                     	;# 
   795  0FE9                     	;# 
   796  0FEA                     	;# 
   797  0FEB                     	;# 
   798  0FED                     	;# 
   799  0FEE                     	;# 
   800  0FEF                     	;# 
   801  0000                     	;# 
   802  0001                     	;# 
   803  0002                     	;# 
   804  0003                     	;# 
   805  0004                     	;# 
   806  0005                     	;# 
   807  0006                     	;# 
   808  0007                     	;# 
   809  0008                     	;# 
   810  0009                     	;# 
   811  000A                     	;# 
   812  000B                     	;# 
   813  000C                     	;# 
   814  000D                     	;# 
   815  000E                     	;# 
   816  0010                     	;# 
   817  0011                     	;# 
   818  0012                     	;# 
   819  0015                     	;# 
   820  0016                     	;# 
   821  0016                     	;# 
   822  0017                     	;# 
   823  0018                     	;# 
   824  0019                     	;# 
   825  001A                     	;# 
   826  001B                     	;# 
   827  001C                     	;# 
   828  008C                     	;# 
   829  008D                     	;# 
   830  008E                     	;# 
   831  0090                     	;# 
   832  0091                     	;# 
   833  0092                     	;# 
   834  0095                     	;# 
   835  0096                     	;# 
   836  0097                     	;# 
   837  0099                     	;# 
   838  009A                     	;# 
   839  009B                     	;# 
   840  009B                     	;# 
   841  009C                     	;# 
   842  009D                     	;# 
   843  009E                     	;# 
   844  010C                     	;# 
   845  010D                     	;# 
   846  010E                     	;# 
   847  0116                     	;# 
   848  0117                     	;# 
   849  011D                     	;# 
   850  018C                     	;# 
   851  018D                     	;# 
   852  018E                     	;# 
   853  0191                     	;# 
   854  0191                     	;# 
   855  0192                     	;# 
   856  0193                     	;# 
   857  0193                     	;# 
   858  0194                     	;# 
   859  0195                     	;# 
   860  0196                     	;# 
   861  0197                     	;# 
   862  0199                     	;# 
   863  019A                     	;# 
   864  019B                     	;# 
   865  019B                     	;# 
   866  019B                     	;# 
   867  019B                     	;# 
   868  019C                     	;# 
   869  019C                     	;# 
   870  019D                     	;# 
   871  019E                     	;# 
   872  019F                     	;# 
   873  020D                     	;# 
   874  0210                     	;# 
   875  0211                     	;# 
   876  0211                     	;# 
   877  0212                     	;# 
   878  0212                     	;# 
   879  0213                     	;# 
   880  0213                     	;# 
   881  0214                     	;# 
   882  0214                     	;# 
   883  0215                     	;# 
   884  0215                     	;# 
   885  0215                     	;# 
   886  0216                     	;# 
   887  0216                     	;# 
   888  0217                     	;# 
   889  0217                     	;# 
   890  0291                     	;# 
   891  0291                     	;# 
   892  0292                     	;# 
   893  0293                     	;# 
   894  0298                     	;# 
   895  0298                     	;# 
   896  0299                     	;# 
   897  029A                     	;# 
   898  0394                     	;# 
   899  0395                     	;# 
   900  0396                     	;# 
   901  0FE4                     	;# 
   902  0FE5                     	;# 
   903  0FE6                     	;# 
   904  0FE7                     	;# 
   905  0FE8                     	;# 
   906  0FE9                     	;# 
   907  0FEA                     	;# 
   908  0FEB                     	;# 
   909  0FED                     	;# 
   910  0FEE                     	;# 
   911  0FEF                     	;# 
   912  0000                     	;# 
   913  0001                     	;# 
   914  0002                     	;# 
   915  0003                     	;# 
   916  0004                     	;# 
   917  0005                     	;# 
   918  0006                     	;# 
   919  0007                     	;# 
   920  0008                     	;# 
   921  0009                     	;# 
   922  000A                     	;# 
   923  000B                     	;# 
   924  000C                     	;# 
   925  000D                     	;# 
   926  000E                     	;# 
   927  0010                     	;# 
   928  0011                     	;# 
   929  0012                     	;# 
   930  0015                     	;# 
   931  0016                     	;# 
   932  0016                     	;# 
   933  0017                     	;# 
   934  0018                     	;# 
   935  0019                     	;# 
   936  001A                     	;# 
   937  001B                     	;# 
   938  001C                     	;# 
   939  008C                     	;# 
   940  008D                     	;# 
   941  008E                     	;# 
   942  0090                     	;# 
   943  0091                     	;# 
   944  0092                     	;# 
   945  0095                     	;# 
   946  0096                     	;# 
   947  0097                     	;# 
   948  0099                     	;# 
   949  009A                     	;# 
   950  009B                     	;# 
   951  009B                     	;# 
   952  009C                     	;# 
   953  009D                     	;# 
   954  009E                     	;# 
   955  010C                     	;# 
   956  010D                     	;# 
   957  010E                     	;# 
   958  0116                     	;# 
   959  0117                     	;# 
   960  011D                     	;# 
   961  018C                     	;# 
   962  018D                     	;# 
   963  018E                     	;# 
   964  0191                     	;# 
   965  0191                     	;# 
   966  0192                     	;# 
   967  0193                     	;# 
   968  0193                     	;# 
   969  0194                     	;# 
   970  0195                     	;# 
   971  0196                     	;# 
   972  0197                     	;# 
   973  0199                     	;# 
   974  019A                     	;# 
   975  019B                     	;# 
   976  019B                     	;# 
   977  019B                     	;# 
   978  019B                     	;# 
   979  019C                     	;# 
   980  019C                     	;# 
   981  019D                     	;# 
   982  019E                     	;# 
   983  019F                     	;# 
   984  020D                     	;# 
   985  0210                     	;# 
   986  0211                     	;# 
   987  0211                     	;# 
   988  0212                     	;# 
   989  0212                     	;# 
   990  0213                     	;# 
   991  0213                     	;# 
   992  0214                     	;# 
   993  0214                     	;# 
   994  0215                     	;# 
   995  0215                     	;# 
   996  0215                     	;# 
   997  0216                     	;# 
   998  0216                     	;# 
   999  0217                     	;# 
  1000  0217                     	;# 
  1001  0291                     	;# 
  1002  0291                     	;# 
  1003  0292                     	;# 
  1004  0293                     	;# 
  1005  0298                     	;# 
  1006  0298                     	;# 
  1007  0299                     	;# 
  1008  029A                     	;# 
  1009  0394                     	;# 
  1010  0395                     	;# 
  1011  0396                     	;# 
  1012  0FE4                     	;# 
  1013  0FE5                     	;# 
  1014  0FE6                     	;# 
  1015  0FE7                     	;# 
  1016  0FE8                     	;# 
  1017  0FE9                     	;# 
  1018  0FEA                     	;# 
  1019  0FEB                     	;# 
  1020  0FED                     	;# 
  1021  0FEE                     	;# 
  1022  0FEF                     	;# 
  1023  0000                     	;# 
  1024  0001                     	;# 
  1025  0002                     	;# 
  1026  0003                     	;# 
  1027  0004                     	;# 
  1028  0005                     	;# 
  1029  0006                     	;# 
  1030  0007                     	;# 
  1031  0008                     	;# 
  1032  0009                     	;# 
  1033  000A                     	;# 
  1034  000B                     	;# 
  1035  000C                     	;# 
  1036  000D                     	;# 
  1037  000E                     	;# 
  1038  0010                     	;# 
  1039  0011                     	;# 
  1040  0012                     	;# 
  1041  0015                     	;# 
  1042  0016                     	;# 
  1043  0016                     	;# 
  1044  0017                     	;# 
  1045  0018                     	;# 
  1046  0019                     	;# 
  1047  001A                     	;# 
  1048  001B                     	;# 
  1049  001C                     	;# 
  1050  008C                     	;# 
  1051  008D                     	;# 
  1052  008E                     	;# 
  1053  0090                     	;# 
  1054  0091                     	;# 
  1055  0092                     	;# 
  1056  0095                     	;# 
  1057  0096                     	;# 
  1058  0097                     	;# 
  1059  0099                     	;# 
  1060  009A                     	;# 
  1061  009B                     	;# 
  1062  009B                     	;# 
  1063  009C                     	;# 
  1064  009D                     	;# 
  1065  009E                     	;# 
  1066  010C                     	;# 
  1067  010D                     	;# 
  1068  010E                     	;# 
  1069  0116                     	;# 
  1070  0117                     	;# 
  1071  011D                     	;# 
  1072  018C                     	;# 
  1073  018D                     	;# 
  1074  018E                     	;# 
  1075  0191                     	;# 
  1076  0191                     	;# 
  1077  0192                     	;# 
  1078  0193                     	;# 
  1079  0193                     	;# 
  1080  0194                     	;# 
  1081  0195                     	;# 
  1082  0196                     	;# 
  1083  0197                     	;# 
  1084  0199                     	;# 
  1085  019A                     	;# 
  1086  019B                     	;# 
  1087  019B                     	;# 
  1088  019B                     	;# 
  1089  019B                     	;# 
  1090  019C                     	;# 
  1091  019C                     	;# 
  1092  019D                     	;# 
  1093  019E                     	;# 
  1094  019F                     	;# 
  1095  020D                     	;# 
  1096  0210                     	;# 
  1097  0211                     	;# 
  1098  0211                     	;# 
  1099  0212                     	;# 
  1100  0212                     	;# 
  1101  0213                     	;# 
  1102  0213                     	;# 
  1103  0214                     	;# 
  1104  0214                     	;# 
  1105  0215                     	;# 
  1106  0215                     	;# 
  1107  0215                     	;# 
  1108  0216                     	;# 
  1109  0216                     	;# 
  1110  0217                     	;# 
  1111  0217                     	;# 
  1112  0291                     	;# 
  1113  0291                     	;# 
  1114  0292                     	;# 
  1115  0293                     	;# 
  1116  0298                     	;# 
  1117  0298                     	;# 
  1118  0299                     	;# 
  1119  029A                     	;# 
  1120  0394                     	;# 
  1121  0395                     	;# 
  1122  0396                     	;# 
  1123  0FE4                     	;# 
  1124  0FE5                     	;# 
  1125  0FE6                     	;# 
  1126  0FE7                     	;# 
  1127  0FE8                     	;# 
  1128  0FE9                     	;# 
  1129  0FEA                     	;# 
  1130  0FEB                     	;# 
  1131  0FED                     	;# 
  1132  0FEE                     	;# 
  1133  0FEF                     	;# 
  1134  0000                     	;# 
  1135  0001                     	;# 
  1136  0002                     	;# 
  1137  0003                     	;# 
  1138  0004                     	;# 
  1139  0005                     	;# 
  1140  0006                     	;# 
  1141  0007                     	;# 
  1142  0008                     	;# 
  1143  0009                     	;# 
  1144  000A                     	;# 
  1145  000B                     	;# 
  1146  000C                     	;# 
  1147  000D                     	;# 
  1148  000E                     	;# 
  1149  0010                     	;# 
  1150  0011                     	;# 
  1151  0012                     	;# 
  1152  0015                     	;# 
  1153  0016                     	;# 
  1154  0016                     	;# 
  1155  0017                     	;# 
  1156  0018                     	;# 
  1157  0019                     	;# 
  1158  001A                     	;# 
  1159  001B                     	;# 
  1160  001C                     	;# 
  1161  008C                     	;# 
  1162  008D                     	;# 
  1163  008E                     	;# 
  1164  0090                     	;# 
  1165  0091                     	;# 
  1166  0092                     	;# 
  1167  0095                     	;# 
  1168  0096                     	;# 
  1169  0097                     	;# 
  1170  0099                     	;# 
  1171  009A                     	;# 
  1172  009B                     	;# 
  1173  009B                     	;# 
  1174  009C                     	;# 
  1175  009D                     	;# 
  1176  009E                     	;# 
  1177  010C                     	;# 
  1178  010D                     	;# 
  1179  010E                     	;# 
  1180  0116                     	;# 
  1181  0117                     	;# 
  1182  011D                     	;# 
  1183  018C                     	;# 
  1184  018D                     	;# 
  1185  018E                     	;# 
  1186  0191                     	;# 
  1187  0191                     	;# 
  1188  0192                     	;# 
  1189  0193                     	;# 
  1190  0193                     	;# 
  1191  0194                     	;# 
  1192  0195                     	;# 
  1193  0196                     	;# 
  1194  0197                     	;# 
  1195  0199                     	;# 
  1196  019A                     	;# 
  1197  019B                     	;# 
  1198  019B                     	;# 
  1199  019B                     	;# 
  1200  019B                     	;# 
  1201  019C                     	;# 
  1202  019C                     	;# 
  1203  019D                     	;# 
  1204  019E                     	;# 
  1205  019F                     	;# 
  1206  020D                     	;# 
  1207  0210                     	;# 
  1208  0211                     	;# 
  1209  0211                     	;# 
  1210  0212                     	;# 
  1211  0212                     	;# 
  1212  0213                     	;# 
  1213  0213                     	;# 
  1214  0214                     	;# 
  1215  0214                     	;# 
  1216  0215                     	;# 
  1217  0215                     	;# 
  1218  0215                     	;# 
  1219  0216                     	;# 
  1220  0216                     	;# 
  1221  0217                     	;# 
  1222  0217                     	;# 
  1223  0291                     	;# 
  1224  0291                     	;# 
  1225  0292                     	;# 
  1226  0293                     	;# 
  1227  0298                     	;# 
  1228  0298                     	;# 
  1229  0299                     	;# 
  1230  029A                     	;# 
  1231  0394                     	;# 
  1232  0395                     	;# 
  1233  0396                     	;# 
  1234  0FE4                     	;# 
  1235  0FE5                     	;# 
  1236  0FE6                     	;# 
  1237  0FE7                     	;# 
  1238  0FE8                     	;# 
  1239  0FE9                     	;# 
  1240  0FEA                     	;# 
  1241  0FEB                     	;# 
  1242  0FED                     	;# 
  1243  0FEE                     	;# 
  1244  0FEF                     	;# 
  1245  0000                     	;# 
  1246  0001                     	;# 
  1247  0002                     	;# 
  1248  0003                     	;# 
  1249  0004                     	;# 
  1250  0005                     	;# 
  1251  0006                     	;# 
  1252  0007                     	;# 
  1253  0008                     	;# 
  1254  0009                     	;# 
  1255  000A                     	;# 
  1256  000B                     	;# 
  1257  000C                     	;# 
  1258  000D                     	;# 
  1259  000E                     	;# 
  1260  0010                     	;# 
  1261  0011                     	;# 
  1262  0012                     	;# 
  1263  0015                     	;# 
  1264  0016                     	;# 
  1265  0016                     	;# 
  1266  0017                     	;# 
  1267  0018                     	;# 
  1268  0019                     	;# 
  1269  001A                     	;# 
  1270  001B                     	;# 
  1271  001C                     	;# 
  1272  008C                     	;# 
  1273  008D                     	;# 
  1274  008E                     	;# 
  1275  0090                     	;# 
  1276  0091                     	;# 
  1277  0092                     	;# 
  1278  0095                     	;# 
  1279  0096                     	;# 
  1280  0097                     	;# 
  1281  0099                     	;# 
  1282  009A                     	;# 
  1283  009B                     	;# 
  1284  009B                     	;# 
  1285  009C                     	;# 
  1286  009D                     	;# 
  1287  009E                     	;# 
  1288  010C                     	;# 
  1289  010D                     	;# 
  1290  010E                     	;# 
  1291  0116                     	;# 
  1292  0117                     	;# 
  1293  011D                     	;# 
  1294  018C                     	;# 
  1295  018D                     	;# 
  1296  018E                     	;# 
  1297  0191                     	;# 
  1298  0191                     	;# 
  1299  0192                     	;# 
  1300  0193                     	;# 
  1301  0193                     	;# 
  1302  0194                     	;# 
  1303  0195                     	;# 
  1304  0196                     	;# 
  1305  0197                     	;# 
  1306  0199                     	;# 
  1307  019A                     	;# 
  1308  019B                     	;# 
  1309  019B                     	;# 
  1310  019B                     	;# 
  1311  019B                     	;# 
  1312  019C                     	;# 
  1313  019C                     	;# 
  1314  019D                     	;# 
  1315  019E                     	;# 
  1316  019F                     	;# 
  1317  020D                     	;# 
  1318  0210                     	;# 
  1319  0211                     	;# 
  1320  0211                     	;# 
  1321  0212                     	;# 
  1322  0212                     	;# 
  1323  0213                     	;# 
  1324  0213                     	;# 
  1325  0214                     	;# 
  1326  0214                     	;# 
  1327  0215                     	;# 
  1328  0215                     	;# 
  1329  0215                     	;# 
  1330  0216                     	;# 
  1331  0216                     	;# 
  1332  0217                     	;# 
  1333  0217                     	;# 
  1334  0291                     	;# 
  1335  0291                     	;# 
  1336  0292                     	;# 
  1337  0293                     	;# 
  1338  0298                     	;# 
  1339  0298                     	;# 
  1340  0299                     	;# 
  1341  029A                     	;# 
  1342  0394                     	;# 
  1343  0395                     	;# 
  1344  0396                     	;# 
  1345  0FE4                     	;# 
  1346  0FE5                     	;# 
  1347  0FE6                     	;# 
  1348  0FE7                     	;# 
  1349  0FE8                     	;# 
  1350  0FE9                     	;# 
  1351  0FEA                     	;# 
  1352  0FEB                     	;# 
  1353  0FED                     	;# 
  1354  0FEE                     	;# 
  1355  0FEF                     	;# 
  1356  0000                     	;# 
  1357  0001                     	;# 
  1358  0002                     	;# 
  1359  0003                     	;# 
  1360  0004                     	;# 
  1361  0005                     	;# 
  1362  0006                     	;# 
  1363  0007                     	;# 
  1364  0008                     	;# 
  1365  0009                     	;# 
  1366  000A                     	;# 
  1367  000B                     	;# 
  1368  000C                     	;# 
  1369  000D                     	;# 
  1370  000E                     	;# 
  1371  0010                     	;# 
  1372  0011                     	;# 
  1373  0012                     	;# 
  1374  0015                     	;# 
  1375  0016                     	;# 
  1376  0016                     	;# 
  1377  0017                     	;# 
  1378  0018                     	;# 
  1379  0019                     	;# 
  1380  001A                     	;# 
  1381  001B                     	;# 
  1382  001C                     	;# 
  1383  008C                     	;# 
  1384  008D                     	;# 
  1385  008E                     	;# 
  1386  0090                     	;# 
  1387  0091                     	;# 
  1388  0092                     	;# 
  1389  0095                     	;# 
  1390  0096                     	;# 
  1391  0097                     	;# 
  1392  0099                     	;# 
  1393  009A                     	;# 
  1394  009B                     	;# 
  1395  009B                     	;# 
  1396  009C                     	;# 
  1397  009D                     	;# 
  1398  009E                     	;# 
  1399  010C                     	;# 
  1400  010D                     	;# 
  1401  010E                     	;# 
  1402  0116                     	;# 
  1403  0117                     	;# 
  1404  011D                     	;# 
  1405  018C                     	;# 
  1406  018D                     	;# 
  1407  018E                     	;# 
  1408  0191                     	;# 
  1409  0191                     	;# 
  1410  0192                     	;# 
  1411  0193                     	;# 
  1412  0193                     	;# 
  1413  0194                     	;# 
  1414  0195                     	;# 
  1415  0196                     	;# 
  1416  0197                     	;# 
  1417  0199                     	;# 
  1418  019A                     	;# 
  1419  019B                     	;# 
  1420  019B                     	;# 
  1421  019B                     	;# 
  1422  019B                     	;# 
  1423  019C                     	;# 
  1424  019C                     	;# 
  1425  019D                     	;# 
  1426  019E                     	;# 
  1427  019F                     	;# 
  1428  020D                     	;# 
  1429  0210                     	;# 
  1430  0211                     	;# 
  1431  0211                     	;# 
  1432  0212                     	;# 
  1433  0212                     	;# 
  1434  0213                     	;# 
  1435  0213                     	;# 
  1436  0214                     	;# 
  1437  0214                     	;# 
  1438  0215                     	;# 
  1439  0215                     	;# 
  1440  0215                     	;# 
  1441  0216                     	;# 
  1442  0216                     	;# 
  1443  0217                     	;# 
  1444  0217                     	;# 
  1445  0291                     	;# 
  1446  0291                     	;# 
  1447  0292                     	;# 
  1448  0293                     	;# 
  1449  0298                     	;# 
  1450  0298                     	;# 
  1451  0299                     	;# 
  1452  029A                     	;# 
  1453  0394                     	;# 
  1454  0395                     	;# 
  1455  0396                     	;# 
  1456  0FE4                     	;# 
  1457  0FE5                     	;# 
  1458  0FE6                     	;# 
  1459  0FE7                     	;# 
  1460  0FE8                     	;# 
  1461  0FE9                     	;# 
  1462  0FEA                     	;# 
  1463  0FEB                     	;# 
  1464  0FED                     	;# 
  1465  0FEE                     	;# 
  1466  0FEF                     	;# 
  1467  0000                     	;# 
  1468  0001                     	;# 
  1469  0002                     	;# 
  1470  0003                     	;# 
  1471  0004                     	;# 
  1472  0005                     	;# 
  1473  0006                     	;# 
  1474  0007                     	;# 
  1475  0008                     	;# 
  1476  0009                     	;# 
  1477  000A                     	;# 
  1478  000B                     	;# 
  1479  000C                     	;# 
  1480  000D                     	;# 
  1481  000E                     	;# 
  1482  0010                     	;# 
  1483  0011                     	;# 
  1484  0012                     	;# 
  1485  0015                     	;# 
  1486  0016                     	;# 
  1487  0016                     	;# 
  1488  0017                     	;# 
  1489  0018                     	;# 
  1490  0019                     	;# 
  1491  001A                     	;# 
  1492  001B                     	;# 
  1493  001C                     	;# 
  1494  008C                     	;# 
  1495  008D                     	;# 
  1496  008E                     	;# 
  1497  0090                     	;# 
  1498  0091                     	;# 
  1499  0092                     	;# 
  1500  0095                     	;# 
  1501  0096                     	;# 
  1502  0097                     	;# 
  1503  0099                     	;# 
  1504  009A                     	;# 
  1505  009B                     	;# 
  1506  009B                     	;# 
  1507  009C                     	;# 
  1508  009D                     	;# 
  1509  009E                     	;# 
  1510  010C                     	;# 
  1511  010D                     	;# 
  1512  010E                     	;# 
  1513  0116                     	;# 
  1514  0117                     	;# 
  1515  011D                     	;# 
  1516  018C                     	;# 
  1517  018D                     	;# 
  1518  018E                     	;# 
  1519  0191                     	;# 
  1520  0191                     	;# 
  1521  0192                     	;# 
  1522  0193                     	;# 
  1523  0193                     	;# 
  1524  0194                     	;# 
  1525  0195                     	;# 
  1526  0196                     	;# 
  1527  0197                     	;# 
  1528  0199                     	;# 
  1529  019A                     	;# 
  1530  019B                     	;# 
  1531  019B                     	;# 
  1532  019B                     	;# 
  1533  019B                     	;# 
  1534  019C                     	;# 
  1535  019C                     	;# 
  1536  019D                     	;# 
  1537  019E                     	;# 
  1538  019F                     	;# 
  1539  020D                     	;# 
  1540  0210                     	;# 
  1541  0211                     	;# 
  1542  0211                     	;# 
  1543  0212                     	;# 
  1544  0212                     	;# 
  1545  0213                     	;# 
  1546  0213                     	;# 
  1547  0214                     	;# 
  1548  0214                     	;# 
  1549  0215                     	;# 
  1550  0215                     	;# 
  1551  0215                     	;# 
  1552  0216                     	;# 
  1553  0216                     	;# 
  1554  0217                     	;# 
  1555  0217                     	;# 
  1556  0291                     	;# 
  1557  0291                     	;# 
  1558  0292                     	;# 
  1559  0293                     	;# 
  1560  0298                     	;# 
  1561  0298                     	;# 
  1562  0299                     	;# 
  1563  029A                     	;# 
  1564  0394                     	;# 
  1565  0395                     	;# 
  1566  0396                     	;# 
  1567  0FE4                     	;# 
  1568  0FE5                     	;# 
  1569  0FE6                     	;# 
  1570  0FE7                     	;# 
  1571  0FE8                     	;# 
  1572  0FE9                     	;# 
  1573  0FEA                     	;# 
  1574  0FEB                     	;# 
  1575  0FED                     	;# 
  1576  0FEE                     	;# 
  1577  0FEF                     	;# 
  1578  0000                     	;# 
  1579  0001                     	;# 
  1580  0002                     	;# 
  1581  0003                     	;# 
  1582  0004                     	;# 
  1583  0005                     	;# 
  1584  0006                     	;# 
  1585  0007                     	;# 
  1586  0008                     	;# 
  1587  0009                     	;# 
  1588  000A                     	;# 
  1589  000B                     	;# 
  1590  000C                     	;# 
  1591  000D                     	;# 
  1592  000E                     	;# 
  1593  0010                     	;# 
  1594  0011                     	;# 
  1595  0012                     	;# 
  1596  0015                     	;# 
  1597  0016                     	;# 
  1598  0016                     	;# 
  1599  0017                     	;# 
  1600  0018                     	;# 
  1601  0019                     	;# 
  1602  001A                     	;# 
  1603  001B                     	;# 
  1604  001C                     	;# 
  1605  008C                     	;# 
  1606  008D                     	;# 
  1607  008E                     	;# 
  1608  0090                     	;# 
  1609  0091                     	;# 
  1610  0092                     	;# 
  1611  0095                     	;# 
  1612  0096                     	;# 
  1613  0097                     	;# 
  1614  0099                     	;# 
  1615  009A                     	;# 
  1616  009B                     	;# 
  1617  009B                     	;# 
  1618  009C                     	;# 
  1619  009D                     	;# 
  1620  009E                     	;# 
  1621  010C                     	;# 
  1622  010D                     	;# 
  1623  010E                     	;# 
  1624  0116                     	;# 
  1625  0117                     	;# 
  1626  011D                     	;# 
  1627  018C                     	;# 
  1628  018D                     	;# 
  1629  018E                     	;# 
  1630  0191                     	;# 
  1631  0191                     	;# 
  1632  0192                     	;# 
  1633  0193                     	;# 
  1634  0193                     	;# 
  1635  0194                     	;# 
  1636  0195                     	;# 
  1637  0196                     	;# 
  1638  0197                     	;# 
  1639  0199                     	;# 
  1640  019A                     	;# 
  1641  019B                     	;# 
  1642  019B                     	;# 
  1643  019B                     	;# 
  1644  019B                     	;# 
  1645  019C                     	;# 
  1646  019C                     	;# 
  1647  019D                     	;# 
  1648  019E                     	;# 
  1649  019F                     	;# 
  1650  020D                     	;# 
  1651  0210                     	;# 
  1652  0211                     	;# 
  1653  0211                     	;# 
  1654  0212                     	;# 
  1655  0212                     	;# 
  1656  0213                     	;# 
  1657  0213                     	;# 
  1658  0214                     	;# 
  1659  0214                     	;# 
  1660  0215                     	;# 
  1661  0215                     	;# 
  1662  0215                     	;# 
  1663  0216                     	;# 
  1664  0216                     	;# 
  1665  0217                     	;# 
  1666  0217                     	;# 
  1667  0291                     	;# 
  1668  0291                     	;# 
  1669  0292                     	;# 
  1670  0293                     	;# 
  1671  0298                     	;# 
  1672  0298                     	;# 
  1673  0299                     	;# 
  1674  029A                     	;# 
  1675  0394                     	;# 
  1676  0395                     	;# 
  1677  0396                     	;# 
  1678  0FE4                     	;# 
  1679  0FE5                     	;# 
  1680  0FE6                     	;# 
  1681  0FE7                     	;# 
  1682  0FE8                     	;# 
  1683  0FE9                     	;# 
  1684  0FEA                     	;# 
  1685  0FEB                     	;# 
  1686  0FED                     	;# 
  1687  0FEE                     	;# 
  1688  0FEF                     	;# 
  1689  0000                     	;# 
  1690  0001                     	;# 
  1691  0002                     	;# 
  1692  0003                     	;# 
  1693  0004                     	;# 
  1694  0005                     	;# 
  1695  0006                     	;# 
  1696  0007                     	;# 
  1697  0008                     	;# 
  1698  0009                     	;# 
  1699  000A                     	;# 
  1700  000B                     	;# 
  1701  000C                     	;# 
  1702  000D                     	;# 
  1703  000E                     	;# 
  1704  0010                     	;# 
  1705  0011                     	;# 
  1706  0012                     	;# 
  1707  0015                     	;# 
  1708  0016                     	;# 
  1709  0016                     	;# 
  1710  0017                     	;# 
  1711  0018                     	;# 
  1712  0019                     	;# 
  1713  001A                     	;# 
  1714  001B                     	;# 
  1715  001C                     	;# 
  1716  008C                     	;# 
  1717  008D                     	;# 
  1718  008E                     	;# 
  1719  0090                     	;# 
  1720  0091                     	;# 
  1721  0092                     	;# 
  1722  0095                     	;# 
  1723  0096                     	;# 
  1724  0097                     	;# 
  1725  0099                     	;# 
  1726  009A                     	;# 
  1727  009B                     	;# 
  1728  009B                     	;# 
  1729  009C                     	;# 
  1730  009D                     	;# 
  1731  009E                     	;# 
  1732  010C                     	;# 
  1733  010D                     	;# 
  1734  010E                     	;# 
  1735  0116                     	;# 
  1736  0117                     	;# 
  1737  011D                     	;# 
  1738  018C                     	;# 
  1739  018D                     	;# 
  1740  018E                     	;# 
  1741  0191                     	;# 
  1742  0191                     	;# 
  1743  0192                     	;# 
  1744  0193                     	;# 
  1745  0193                     	;# 
  1746  0194                     	;# 
  1747  0195                     	;# 
  1748  0196                     	;# 
  1749  0197                     	;# 
  1750  0199                     	;# 
  1751  019A                     	;# 
  1752  019B                     	;# 
  1753  019B                     	;# 
  1754  019B                     	;# 
  1755  019B                     	;# 
  1756  019C                     	;# 
  1757  019C                     	;# 
  1758  019D                     	;# 
  1759  019E                     	;# 
  1760  019F                     	;# 
  1761  020D                     	;# 
  1762  0210                     	;# 
  1763  0211                     	;# 
  1764  0211                     	;# 
  1765  0212                     	;# 
  1766  0212                     	;# 
  1767  0213                     	;# 
  1768  0213                     	;# 
  1769  0214                     	;# 
  1770  0214                     	;# 
  1771  0215                     	;# 
  1772  0215                     	;# 
  1773  0215                     	;# 
  1774  0216                     	;# 
  1775  0216                     	;# 
  1776  0217                     	;# 
  1777  0217                     	;# 
  1778  0291                     	;# 
  1779  0291                     	;# 
  1780  0292                     	;# 
  1781  0293                     	;# 
  1782  0298                     	;# 
  1783  0298                     	;# 
  1784  0299                     	;# 
  1785  029A                     	;# 
  1786  0394                     	;# 
  1787  0395                     	;# 
  1788  0396                     	;# 
  1789  0FE4                     	;# 
  1790  0FE5                     	;# 
  1791  0FE6                     	;# 
  1792  0FE7                     	;# 
  1793  0FE8                     	;# 
  1794  0FE9                     	;# 
  1795  0FEA                     	;# 
  1796  0FEB                     	;# 
  1797  0FED                     	;# 
  1798  0FEE                     	;# 
  1799  0FEF                     	;# 
  1800  0000                     	;# 
  1801  0001                     	;# 
  1802  0002                     	;# 
  1803  0003                     	;# 
  1804  0004                     	;# 
  1805  0005                     	;# 
  1806  0006                     	;# 
  1807  0007                     	;# 
  1808  0008                     	;# 
  1809  0009                     	;# 
  1810  000A                     	;# 
  1811  000B                     	;# 
  1812  000C                     	;# 
  1813  000D                     	;# 
  1814  000E                     	;# 
  1815  0010                     	;# 
  1816  0011                     	;# 
  1817  0012                     	;# 
  1818  0015                     	;# 
  1819  0016                     	;# 
  1820  0016                     	;# 
  1821  0017                     	;# 
  1822  0018                     	;# 
  1823  0019                     	;# 
  1824  001A                     	;# 
  1825  001B                     	;# 
  1826  001C                     	;# 
  1827  008C                     	;# 
  1828  008D                     	;# 
  1829  008E                     	;# 
  1830  0090                     	;# 
  1831  0091                     	;# 
  1832  0092                     	;# 
  1833  0095                     	;# 
  1834  0096                     	;# 
  1835  0097                     	;# 
  1836  0099                     	;# 
  1837  009A                     	;# 
  1838  009B                     	;# 
  1839  009B                     	;# 
  1840  009C                     	;# 
  1841  009D                     	;# 
  1842  009E                     	;# 
  1843  010C                     	;# 
  1844  010D                     	;# 
  1845  010E                     	;# 
  1846  0116                     	;# 
  1847  0117                     	;# 
  1848  011D                     	;# 
  1849  018C                     	;# 
  1850  018D                     	;# 
  1851  018E                     	;# 
  1852  0191                     	;# 
  1853  0191                     	;# 
  1854  0192                     	;# 
  1855  0193                     	;# 
  1856  0193                     	;# 
  1857  0194                     	;# 
  1858  0195                     	;# 
  1859  0196                     	;# 
  1860  0197                     	;# 
  1861  0199                     	;# 
  1862  019A                     	;# 
  1863  019B                     	;# 
  1864  019B                     	;# 
  1865  019B                     	;# 
  1866  019B                     	;# 
  1867  019C                     	;# 
  1868  019C                     	;# 
  1869  019D                     	;# 
  1870  019E                     	;# 
  1871  019F                     	;# 
  1872  020D                     	;# 
  1873  0210                     	;# 
  1874  0211                     	;# 
  1875  0211                     	;# 
  1876  0212                     	;# 
  1877  0212                     	;# 
  1878  0213                     	;# 
  1879  0213                     	;# 
  1880  0214                     	;# 
  1881  0214                     	;# 
  1882  0215                     	;# 
  1883  0215                     	;# 
  1884  0215                     	;# 
  1885  0216                     	;# 
  1886  0216                     	;# 
  1887  0217                     	;# 
  1888  0217                     	;# 
  1889  0291                     	;# 
  1890  0291                     	;# 
  1891  0292                     	;# 
  1892  0293                     	;# 
  1893  0298                     	;# 
  1894  0298                     	;# 
  1895  0299                     	;# 
  1896  029A                     	;# 
  1897  0394                     	;# 
  1898  0395                     	;# 
  1899  0396                     	;# 
  1900  0FE4                     	;# 
  1901  0FE5                     	;# 
  1902  0FE6                     	;# 
  1903  0FE7                     	;# 
  1904  0FE8                     	;# 
  1905  0FE9                     	;# 
  1906  0FEA                     	;# 
  1907  0FEB                     	;# 
  1908  0FED                     	;# 
  1909  0FEE                     	;# 
  1910  0FEF                     	;# 
  1911  0000                     	;# 
  1912  0001                     	;# 
  1913  0002                     	;# 
  1914  0003                     	;# 
  1915  0004                     	;# 
  1916  0005                     	;# 
  1917  0006                     	;# 
  1918  0007                     	;# 
  1919  0008                     	;# 
  1920  0009                     	;# 
  1921  000A                     	;# 
  1922  000B                     	;# 
  1923  000C                     	;# 
  1924  000D                     	;# 
  1925  000E                     	;# 
  1926  0010                     	;# 
  1927  0011                     	;# 
  1928  0012                     	;# 
  1929  0015                     	;# 
  1930  0016                     	;# 
  1931  0016                     	;# 
  1932  0017                     	;# 
  1933  0018                     	;# 
  1934  0019                     	;# 
  1935  001A                     	;# 
  1936  001B                     	;# 
  1937  001C                     	;# 
  1938  008C                     	;# 
  1939  008D                     	;# 
  1940  008E                     	;# 
  1941  0090                     	;# 
  1942  0091                     	;# 
  1943  0092                     	;# 
  1944  0095                     	;# 
  1945  0096                     	;# 
  1946  0097                     	;# 
  1947  0099                     	;# 
  1948  009A                     	;# 
  1949  009B                     	;# 
  1950  009B                     	;# 
  1951  009C                     	;# 
  1952  009D                     	;# 
  1953  009E                     	;# 
  1954  010C                     	;# 
  1955  010D                     	;# 
  1956  010E                     	;# 
  1957  0116                     	;# 
  1958  0117                     	;# 
  1959  011D                     	;# 
  1960  018C                     	;# 
  1961  018D                     	;# 
  1962  018E                     	;# 
  1963  0191                     	;# 
  1964  0191                     	;# 
  1965  0192                     	;# 
  1966  0193                     	;# 
  1967  0193                     	;# 
  1968  0194                     	;# 
  1969  0195                     	;# 
  1970  0196                     	;# 
  1971  0197                     	;# 
  1972  0199                     	;# 
  1973  019A                     	;# 
  1974  019B                     	;# 
  1975  019B                     	;# 
  1976  019B                     	;# 
  1977  019B                     	;# 
  1978  019C                     	;# 
  1979  019C                     	;# 
  1980  019D                     	;# 
  1981  019E                     	;# 
  1982  019F                     	;# 
  1983  020D                     	;# 
  1984  0210                     	;# 
  1985  0211                     	;# 
  1986  0211                     	;# 
  1987  0212                     	;# 
  1988  0212                     	;# 
  1989  0213                     	;# 
  1990  0213                     	;# 
  1991  0214                     	;# 
  1992  0214                     	;# 
  1993  0215                     	;# 
  1994  0215                     	;# 
  1995  0215                     	;# 
  1996  0216                     	;# 
  1997  0216                     	;# 
  1998  0217                     	;# 
  1999  0217                     	;# 
  2000  0291                     	;# 
  2001  0291                     	;# 
  2002  0292                     	;# 
  2003  0293                     	;# 
  2004  0298                     	;# 
  2005  0298                     	;# 
  2006  0299                     	;# 
  2007  029A                     	;# 
  2008  0394                     	;# 
  2009  0395                     	;# 
  2010  0396                     	;# 
  2011  0FE4                     	;# 
  2012  0FE5                     	;# 
  2013  0FE6                     	;# 
  2014  0FE7                     	;# 
  2015  0FE8                     	;# 
  2016  0FE9                     	;# 
  2017  0FEA                     	;# 
  2018  0FEB                     	;# 
  2019  0FED                     	;# 
  2020  0FEE                     	;# 
  2021  0FEF                     	;# 
  2022  0000                     	;# 
  2023  0001                     	;# 
  2024  0002                     	;# 
  2025  0003                     	;# 
  2026  0004                     	;# 
  2027  0005                     	;# 
  2028  0006                     	;# 
  2029  0007                     	;# 
  2030  0008                     	;# 
  2031  0009                     	;# 
  2032  000A                     	;# 
  2033  000B                     	;# 
  2034  000C                     	;# 
  2035  000D                     	;# 
  2036  000E                     	;# 
  2037  0010                     	;# 
  2038  0011                     	;# 
  2039  0012                     	;# 
  2040  0015                     	;# 
  2041  0016                     	;# 
  2042  0016                     	;# 
  2043  0017                     	;# 
  2044  0018                     	;# 
  2045  0019                     	;# 
  2046  001A                     	;# 
  2047  001B                     	;# 
  2048  001C                     	;# 
  2049  008C                     	;# 
  2050  008D                     	;# 
  2051  008E                     	;# 
  2052  0090                     	;# 
  2053  0091                     	;# 
  2054  0092                     	;# 
  2055  0095                     	;# 
  2056  0096                     	;# 
  2057  0097                     	;# 
  2058  0099                     	;# 
  2059  009A                     	;# 
  2060  009B                     	;# 
  2061  009B                     	;# 
  2062  009C                     	;# 
  2063  009D                     	;# 
  2064  009E                     	;# 
  2065  010C                     	;# 
  2066  010D                     	;# 
  2067  010E                     	;# 
  2068  0116                     	;# 
  2069  0117                     	;# 
  2070  011D                     	;# 
  2071  018C                     	;# 
  2072  018D                     	;# 
  2073  018E                     	;# 
  2074  0191                     	;# 
  2075  0191                     	;# 
  2076  0192                     	;# 
  2077  0193                     	;# 
  2078  0193                     	;# 
  2079  0194                     	;# 
  2080  0195                     	;# 
  2081  0196                     	;# 
  2082  0197                     	;# 
  2083  0199                     	;# 
  2084  019A                     	;# 
  2085  019B                     	;# 
  2086  019B                     	;# 
  2087  019B                     	;# 
  2088  019B                     	;# 
  2089  019C                     	;# 
  2090  019C                     	;# 
  2091  019D                     	;# 
  2092  019E                     	;# 
  2093  019F                     	;# 
  2094  020D                     	;# 
  2095  0210                     	;# 
  2096  0211                     	;# 
  2097  0211                     	;# 
  2098  0212                     	;# 
  2099  0212                     	;# 
  2100  0213                     	;# 
  2101  0213                     	;# 
  2102  0214                     	;# 
  2103  0214                     	;# 
  2104  0215                     	;# 
  2105  0215                     	;# 
  2106  0215                     	;# 
  2107  0216                     	;# 
  2108  0216                     	;# 
  2109  0217                     	;# 
  2110  0217                     	;# 
  2111  0291                     	;# 
  2112  0291                     	;# 
  2113  0292                     	;# 
  2114  0293                     	;# 
  2115  0298                     	;# 
  2116  0298                     	;# 
  2117  0299                     	;# 
  2118  029A                     	;# 
  2119  0394                     	;# 
  2120  0395                     	;# 
  2121  0396                     	;# 
  2122  0FE4                     	;# 
  2123  0FE5                     	;# 
  2124  0FE6                     	;# 
  2125  0FE7                     	;# 
  2126  0FE8                     	;# 
  2127  0FE9                     	;# 
  2128  0FEA                     	;# 
  2129  0FEB                     	;# 
  2130  0FED                     	;# 
  2131  0FEE                     	;# 
  2132  0FEF                     	;# 
  2133                           
  2134                           	psect	idataBANK3
  2135  151B                     __pidataBANK3:	
  2136                           
  2137                           ;initializer for __product
  2138  151B  3463               	retlw	99
  2139  151C  3402               	retlw	2
  2140  151D  3400               	retlw	0
  2141  151E  3400               	retlw	0
  2142  151F  3400               	retlw	0
  2143  1520  3400               	retlw	0
  2144  1521  3400               	retlw	0
  2145  1522  3400               	retlw	0
  2146  1523  3400               	retlw	0
  2147  1524  3400               	retlw	0
  2148  1525  3400               	retlw	0
  2149  1526  3400               	retlw	0
  2150  1527  34FF               	retlw	255
  2151  1528  34FF               	retlw	255
  2152  1529  34FF               	retlw	255
  2153  152A  3400               	retlw	0
  2154  152B  3400               	retlw	0
  2155  152C  3400               	retlw	0
  2156  152D  3400               	retlw	0
  2157  152E  3400               	retlw	0
  2158  152F  3400               	retlw	0
  2159  1530  3400               	retlw	0
  2160  1531  3400               	retlw	0
  2161  1532  3400               	retlw	0
  2162  1533  3400               	retlw	0
  2163  1534  3400               	retlw	0
  2164  1535  3400               	retlw	0
  2165  1536  3400               	retlw	0
  2166  1537  3400               	retlw	0
  2167  1538  3400               	retlw	0
  2168  1539  3400               	retlw	0
  2169  153A  3400               	retlw	0
  2170                           
  2171                           	psect	nvBANK0
  2172  006D                     __pnvBANK0:	
  2173  006D                     _product:	
  2174  006D                     	ds	1
  2175  000C                     _PORTA	set	12
  2176  000D                     _PORTB	set	13
  2177  000E                     _PORTC	set	14
  2178  0018                     _T1CON	set	24
  2179  0017                     _TMR1H	set	23
  2180  0016                     _TMR1L	set	22
  2181  005F                     _GIE	set	95
  2182  005B                     _IOCIE	set	91
  2183  0058                     _IOCIF	set	88
  2184  005E                     _PEIE	set	94
  2185  0060                     _RA0	set	96
  2186  0064                     _RA4	set	100
  2187  0066                     _RA6	set	102
  2188  0067                     _RA7	set	103
  2189  0068                     _RB0	set	104
  2190  0069                     _RB1	set	105
  2191  006A                     _RB2	set	106
  2192  006B                     _RB3	set	107
  2193  006D                     _RB5	set	109
  2194  0088                     _TMR1IF	set	136
  2195  009D                     _ADCON0	set	157
  2196  009E                     _ADCON1	set	158
  2197  009C                     _ADRESH	set	156
  2198  009B                     _ADRESL	set	155
  2199  0099                     _OSCCON	set	153
  2200  008C                     _TRISA	set	140
  2201  008D                     _TRISB	set	141
  2202  008E                     _TRISC	set	142
  2203  0097                     _WDTCON	set	151
  2204  04E9                     _GO_nDONE	set	1257
  2205  0488                     _TMR1IE	set	1160
  2206  0117                     _FVRCON	set	279
  2207  010C                     _LATA	set	268
  2208  010D                     _LATB	set	269
  2209  010E                     _LATC	set	270
  2210  018C                     _ANSELA	set	396
  2211  018D                     _ANSELB	set	397
  2212  018E                     _ANSELC	set	398
  2213  0192                     _PMADRH	set	402
  2214  0191                     _PMADRL	set	401
  2215  0196                     _PMCON2	set	406
  2216  0194                     _PMDATH	set	404
  2217  0193                     _PMDATL	set	403
  2218  0CAE                     _CFGS	set	3246
  2219  0CAC                     _FREE	set	3244
  2220  0CAD                     _LWLO	set	3245
  2221  0CA8                     _RD	set	3240
  2222  0CA9                     _WR	set	3241
  2223  0CAA                     _WREN	set	3242
  2224  020D                     _WPUB	set	525
  2225  0396                     _IOCBF	set	918
  2226  0395                     _IOCBN	set	917
  2227  0394                     _IOCBP	set	916
  2228  1CB2                     _IOCBF2	set	7346
  2229                           
  2230                           ; #config settings
  2231  0000                     
  2232                           	psect	cinit
  2233  0021                     start_initialization:	
  2234  0021                     __initialization:	
  2235                           
  2236                           ; Clear objects allocated to COMMON
  2237  0021  01FA               	clrf	__pbssCOMMON& (0+127)
  2238  0022  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  2239                           
  2240                           ; Clear objects allocated to BANK0
  2241  0023  01EA               	clrf	__pbssBANK0& (0+127)
  2242  0024  01EB               	clrf	(__pbssBANK0+1)& (0+127)
  2243  0025  01EC               	clrf	(__pbssBANK0+2)& (0+127)
  2244                           
  2245                           ; Clear objects allocated to BANK1
  2246  0026  30A0               	movlw	low __pbssBANK1
  2247  0027  0084               	movwf	4
  2248  0028  3000               	movlw	high __pbssBANK1
  2249  0029  0085               	movwf	5
  2250  002A  304D               	movlw	77
  2251  002B  3191  21EF  3180   	fcall	clear_ram0
  2252                           
  2253                           ; Clear objects allocated to BANK2
  2254  002E  3020               	movlw	low __pbssBANK2
  2255  002F  0084               	movwf	4
  2256  0030  3001               	movlw	high __pbssBANK2
  2257  0031  0085               	movwf	5
  2258  0032  304A               	movlw	74
  2259  0033  3191  21EF  3180   	fcall	clear_ram0
  2260                           
  2261                           ; Clear objects allocated to BANK3
  2262  0036  30A0               	movlw	low __pbssBANK3
  2263  0037  0084               	movwf	4
  2264  0038  3001               	movlw	high __pbssBANK3
  2265  0039  0085               	movwf	5
  2266  003A  3025               	movlw	37
  2267  003B  3191  21EF  3180   	fcall	clear_ram0
  2268                           
  2269                           ; Initialize objects allocated to BANK3
  2270  003E  301B               	movlw	low __pidataBANK3
  2271  003F  0084               	movwf	4
  2272  0040  3095               	movlw	(high __pidataBANK3)| (0+128)
  2273  0041  0085               	movwf	5
  2274  0042  30C5               	movlw	low __pdataBANK3
  2275  0043  0086               	movwf	6
  2276  0044  3001               	movlw	high __pdataBANK3
  2277  0045  0087               	movwf	7
  2278  0046  3020               	movlw	32
  2279  0047  3191  21E9         	fcall	init_ram
  2280  0049                     end_of_initialization:	
  2281                           ;End of C runtime variable initialization code
  2282                           
  2283  0049                     __end_of__initialization:	
  2284  0049  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  2285  004A  0020               	movlb	0
  2286  004B  3189  290A         	ljmp	_main	;jump to C main() function
  2287                           
  2288                           	psect	bssCOMMON
  2289  007A                     __pbssCOMMON:	
  2290  007A                     _Cmd:	
  2291  007A                     	ds	1
  2292  007B                     _LED:	
  2293  007B                     	ds	1
  2294                           
  2295                           	psect	bssBANK0
  2296  006A                     __pbssBANK0:	
  2297  006A                     _DelayOff:	
  2298  006A                     	ds	1
  2299  006B                     _DimmerLights:	
  2300  006B                     	ds	1
  2301  006C                     _Sw:	
  2302  006C                     	ds	1
  2303                           
  2304                           	psect	bssBANK1
  2305  00A0                     __pbssBANK1:	
  2306  00A0                     _DimmerIntr1:	
  2307  00A0                     	ds	16
  2308  00B0                     _myMain:	
  2309  00B0                     	ds	13
  2310  00BD                     _Buz1:	
  2311  00BD                     	ds	12
  2312  00C9                     _Dimmer:	
  2313  00C9                     	ds	5
  2314  00CE                     _Timer1:	
  2315  00CE                     	ds	3
  2316  00D1                     _WDT:	
  2317  00D1                     	ds	2
  2318  00D3                     _DimmerIntr:	
  2319  00D3                     	ds	1
  2320  00D4                     _Light:	
  2321  00D4                     	ds	1
  2322  00D5                     _SwDetect:	
  2323  00D5                     	ds	1
  2324  00D6                     _Temp:	
  2325  00D6                     	ds	14
  2326  00E4                     _DlySw1:	
  2327  00E4                     	ds	5
  2328  00E9                     _VarErrLED:	
  2329  00E9                     	ds	4
  2330                           
  2331                           	psect	bssBANK2
  2332  0120                     __pbssBANK2:	
  2333  0120                     _u1:	
  2334  0120                     	ds	16
  2335  0130                     _Load:	
  2336  0130                     	ds	40
  2337  0158                     _DimmerLights1:	
  2338  0158                     	ds	9
  2339  0161                     _Sw1:	
  2340  0161                     	ds	9
  2341                           
  2342                           	psect	bssBANK3
  2343  01A0                     __pbssBANK3:	
  2344  01A0                     _Memory:	
  2345  01A0                     	ds	37
  2346                           
  2347                           	psect	dataBANK3
  2348  01C5                     __pdataBANK3:	
  2349  01C5                     __product:	
  2350  01C5                     	ds	32
  2351                           
  2352                           	psect	clrtext
  2353  11EF                     clear_ram0:	
  2354                           ;	Called with FSR0 containing the base address, and
  2355                           ;	WREG with the size to clear
  2356                           
  2357  11EF  0064               	clrwdt	;clear the watchdog before getting into this loop
  2358  11F0                     clrloop0:	
  2359  11F0  0180               	clrf	0	;clear RAM location pointed to by FSR
  2360  11F1  3101               	addfsr 0,1
  2361  11F2  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2362  11F3  29F0               	goto	clrloop0	;have we reached the end yet?
  2363  11F4  3400               	retlw	0	;all done for this memory range, return
  2364                           
  2365                           	psect	inittext
  2366  11E9                     init_ram:	
  2367  11E9  00FE               	movwf	126
  2368  11EA                     initloop:	
  2369  11EA  0012               	moviw fsr0++
  2370  11EB  001E               	movwi fsr1++
  2371  11EC  0BFE               	decfsz	126,f
  2372  11ED  29EA               	goto	initloop
  2373  11EE  3400               	retlw	0
  2374                           
  2375                           	psect	cstackBANK2
  2376  016A                     __pcstackBANK2:	
  2377  016A                     ?_main:	
  2378  016A                     main@argc:	
  2379                           ; 2 bytes @ 0x0
  2380                           
  2381                           
  2382                           ; 2 bytes @ 0x0
  2383  016A                     	ds	2
  2384  016C                     main@argv:	
  2385                           
  2386                           ; 2 bytes @ 0x2
  2387  016C                     	ds	2
  2388                           
  2389                           	psect	cstackCOMMON
  2390  0070                     __pcstackCOMMON:	
  2391  0070                     ?_DlyOff_Initialization:	
  2392  0070                     ?_DlyOff_Main:	
  2393                           ; 0 bytes @ 0x0
  2394                           
  2395  0070                     ?_setDimmerLights_SwOn:	
  2396                           ; 0 bytes @ 0x0
  2397                           
  2398  0070                     ?_setDimmerLights_SwOff:	
  2399                           ; 0 bytes @ 0x0
  2400                           
  2401  0070                     ?_setMemory_Modify:	
  2402                           ; 0 bytes @ 0x0
  2403                           
  2404  0070                     ?_setDimmerLights_Initialization:	
  2405                           ; 0 bytes @ 0x0
  2406                           
  2407  0070                     ?_setDimmerLights_Main:	
  2408                           ; 0 bytes @ 0x0
  2409                           
  2410  0070                     ?_DimmerLights_DimmingFunction:	
  2411                           ; 0 bytes @ 0x0
  2412                           
  2413  0070                     ?_DimmerLights_TwoPhase_Main:	
  2414                           ; 0 bytes @ 0x0
  2415                           
  2416  0070                     ?_DimmerLights_AssignationDimming:	
  2417                           ; 0 bytes @ 0x0
  2418                           
  2419  0070                     ?_setDimmerLights_Line:	
  2420                           ; 0 bytes @ 0x0
  2421                           
  2422  0070                     ?_DimmerIntr_ValueCalculate:	
  2423                           ; 0 bytes @ 0x0
  2424                           
  2425  0070                     ?_setDimmerLights_DimmingClose:	
  2426                           ; 0 bytes @ 0x0
  2427                           
  2428  0070                     ?_setLED_Initialization:	
  2429                           ; 0 bytes @ 0x0
  2430                           
  2431  0070                     ?_setLED_Main:	
  2432                           ; 0 bytes @ 0x0
  2433                           
  2434  0070                     ?_Fosc_Set:	
  2435                           ; 0 bytes @ 0x0
  2436                           
  2437  0070                     ?_IO_Set:	
  2438                           ; 0 bytes @ 0x0
  2439                           
  2440  0070                     ?_TMR1_Set:	
  2441                           ; 0 bytes @ 0x0
  2442                           
  2443  0070                     ?_ADC_Set:	
  2444                           ; 0 bytes @ 0x0
  2445                           
  2446  0070                     ?_IOC_Set:	
  2447                           ; 0 bytes @ 0x0
  2448                           
  2449  0070                     ?_WDT_Set:	
  2450                           ; 0 bytes @ 0x0
  2451                           
  2452  0070                     ?_TMR1_ISR:	
  2453                           ; 0 bytes @ 0x0
  2454                           
  2455  0070                     ?_IOC_ISR:	
  2456                           ; 0 bytes @ 0x0
  2457                           
  2458  0070                     ?_Timeout_Counter:	
  2459                           ; 0 bytes @ 0x0
  2460                           
  2461  0070                     ?_set_TimeoutCleared:	
  2462                           ; 0 bytes @ 0x0
  2463                           
  2464  0070                     ?_Flash_Memory_Write:	
  2465                           ; 0 bytes @ 0x0
  2466                           
  2467  0070                     ?_Flash_Memory_Modify:	
  2468                           ; 0 bytes @ 0x0
  2469                           
  2470  0070                     ?_WDT_Clearing:	
  2471                           ; 0 bytes @ 0x0
  2472                           
  2473  0070                     ?_myMain_Initialization:	
  2474                           ; 0 bytes @ 0x0
  2475                           
  2476  0070                     ?_Temp_Initialization:	
  2477                           ; 0 bytes @ 0x0
  2478                           
  2479  0070                     ?_Load_Initialization:	
  2480                           ; 0 bytes @ 0x0
  2481                           
  2482  0070                     ?_Switch_Initialization:	
  2483                           ; 0 bytes @ 0x0
  2484                           
  2485  0070                     ?_getLoad_AD:	
  2486                           ; 0 bytes @ 0x0
  2487                           
  2488  0070                     ?_getTemp_AD:	
  2489                           ; 0 bytes @ 0x0
  2490                           
  2491  0070                     ?_my_MainTimer:	
  2492                           ; 0 bytes @ 0x0
  2493                           
  2494  0070                     ?_Temp_Main:	
  2495                           ; 0 bytes @ 0x0
  2496                           
  2497  0070                     ?_Load_Main:	
  2498                           ; 0 bytes @ 0x0
  2499                           
  2500  0070                     ?_Switch_Main:	
  2501                           ; 0 bytes @ 0x0
  2502                           
  2503  0070                     ?_Exception_Main:	
  2504                           ; 0 bytes @ 0x0
  2505                           
  2506  0070                     ?_setLoad_AH_AL_Restore:	
  2507                           ; 0 bytes @ 0x0
  2508                           
  2509  0070                     ?_setTemp_Initialization:	
  2510                           ; 0 bytes @ 0x0
  2511                           
  2512  0070                     ?_setTemp_Main:	
  2513                           ; 0 bytes @ 0x0
  2514                           
  2515  0070                     ?_setOverTemp_ADV_Restore:	
  2516                           ; 0 bytes @ 0x0
  2517                           
  2518  0070                     ?_setSw_Initialization:	
  2519                           ; 0 bytes @ 0x0
  2520                           
  2521  0070                     ?_setSw_Main:	
  2522                           ; 0 bytes @ 0x0
  2523                           
  2524  0070                     ?_Buzzer_Initialization:	
  2525                           ; 0 bytes @ 0x0
  2526                           
  2527  0070                     ?_Buzzer_Main:	
  2528                           ; 0 bytes @ 0x0
  2529                           
  2530  0070                     ?_DelayOffPointSelect:	
  2531                           ; 0 bytes @ 0x0
  2532                           
  2533  0070                     ?_DelayOff_Initialization:	
  2534                           ; 0 bytes @ 0x0
  2535                           
  2536  0070                     ?_DelayOff_Main:	
  2537                           ; 0 bytes @ 0x0
  2538                           
  2539  0070                     ?_DimmerIntr_Initialization:	
  2540                           ; 0 bytes @ 0x0
  2541                           
  2542  0070                     ?_DimmerLights_SelectPointer:	
  2543                           ; 0 bytes @ 0x0
  2544                           
  2545  0070                     ?_DimmerLights_Initialization:	
  2546                           ; 0 bytes @ 0x0
  2547                           
  2548  0070                     ?_setDimmerLights_DimmingOn:	
  2549                           ; 0 bytes @ 0x0
  2550                           
  2551  0070                     ?_DimmerLights_Main:	
  2552                           ; 0 bytes @ 0x0
  2553                           
  2554  0070                     ?_DimmerLights_TMR_1:	
  2555                           ; 0 bytes @ 0x0
  2556                           
  2557  0070                     ??_DimmerLights_TMR_1:	
  2558                           ; 0 bytes @ 0x0
  2559                           
  2560  0070                     ?_DimmerLights_IOC_1:	
  2561                           ; 0 bytes @ 0x0
  2562                           
  2563  0070                     ??_DimmerLights_IOC_1:	
  2564                           ; 0 bytes @ 0x0
  2565                           
  2566  0070                     ?_LedPointSelect:	
  2567                           ; 0 bytes @ 0x0
  2568                           
  2569  0070                     ?_LED_Initialization:	
  2570                           ; 0 bytes @ 0x0
  2571                           
  2572  0070                     ?_LED_Main:	
  2573                           ; 0 bytes @ 0x0
  2574                           
  2575  0070                     ?_Mcu_Initialization:	
  2576                           ; 0 bytes @ 0x0
  2577                           
  2578  0070                     ?_ISR:	
  2579                           ; 0 bytes @ 0x0
  2580                           
  2581  0070                     ?_Flash_Memory_Initialization:	
  2582                           ; 0 bytes @ 0x0
  2583                           
  2584  0070                     ?_Flash_Memory_Main:	
  2585                           ; 0 bytes @ 0x0
  2586                           
  2587  0070                     ?_Flash_Memory_Unlock:	
  2588                           ; 0 bytes @ 0x0
  2589                           
  2590  0070                     ?_Flash_Memory_Erasing:	
  2591                           ; 0 bytes @ 0x0
  2592                           
  2593  0070                     ?_WDT_Main:	
  2594                           ; 0 bytes @ 0x0
  2595                           
  2596  0070                     ?_TouchPower:	
  2597                           ; 0 bytes @ 0x0
  2598                           
  2599  0070                     ?_SwPointSelect:	
  2600                           ; 0 bytes @ 0x0
  2601                           
  2602  0070                     ?_getDimmerLights_Status:	
  2603                           ; 0 bytes @ 0x0
  2604                           
  2605  0070                     ?_getDimmerLights_ValueToPercent:	
  2606                           ; 1 bytes @ 0x0
  2607                           
  2608  0070                     ?_getDimmerLights_PercentToValue:	
  2609                           ; 1 bytes @ 0x0
  2610                           
  2611  0070                     ?_getLoad_OK:	
  2612                           ; 1 bytes @ 0x0
  2613                           
  2614  0070                     ?_getMain_All_Error_Status:	
  2615                           ; 1 bytes @ 0x0
  2616                           
  2617  0070                     ?_getMain_All_LightsStatus:	
  2618                           ; 1 bytes @ 0x0
  2619                           
  2620  0070                     ?_getDimmerLights_Allow_Condition:	
  2621                           ; 1 bytes @ 0x0
  2622                           
  2623  0070                     ?_getCmd_Status:	
  2624                           ; 1 bytes @ 0x0
  2625                           
  2626  0070                     ?_Flash_Memory_Read:	
  2627                           ; 1 bytes @ 0x0
  2628                           
  2629  0070                     ?_getAll_Sw_KeyStatus:	
  2630                           ; 1 bytes @ 0x0
  2631                           
  2632  0070                     ?_getSw_KeyStatus:	
  2633                           ; 1 bytes @ 0x0
  2634                           
  2635  0070                     ?_getDelayOff_GO:	
  2636                           ; 1 bytes @ 0x0
  2637                           
  2638  0070                     ?_getDimmerIntr_DimmingValue:	
  2639                           ; 1 bytes @ 0x0
  2640                           
  2641  0070                     ?_getDimmerIntr_Dimming_Sw:	
  2642                           ; 1 bytes @ 0x0
  2643                           
  2644  0070                     ?_getAll_DimmerIntr_Dimming_Sw_RF:	
  2645                           ; 1 bytes @ 0x0
  2646                           
  2647  0070                     ?_getDimmerLights_Line:	
  2648                           ; 1 bytes @ 0x0
  2649                           
  2650  0070                     ?_getDimmer_LoadGO:	
  2651                           ; 1 bytes @ 0x0
  2652                           
  2653  0070                     ?_getDimmer_Load_Status:	
  2654                           ; 1 bytes @ 0x0
  2655                           
  2656  0070                     ?_getMain_Lights_Count:	
  2657                           ; 1 bytes @ 0x0
  2658                           
  2659  0070                     setDimmerLights_Initialization@lights:	
  2660                           ; 1 bytes @ 0x0
  2661                           
  2662  0070                     getDimmerLights_Allow_Condition@lights:	
  2663                           ; 1 bytes @ 0x0
  2664                           
  2665  0070                     getSw_KeyStatus@sw:	
  2666                           ; 1 bytes @ 0x0
  2667                           
  2668                           
  2669                           ; 1 bytes @ 0x0
  2670  0070                     	ds	1
  2671  0071                     ??_TMR1_ISR:	
  2672  0071                     ??_IOC_ISR:	
  2673                           ; 0 bytes @ 0x1
  2674                           
  2675  0071                     ??_ISR:	
  2676                           ; 0 bytes @ 0x1
  2677                           
  2678                           
  2679                           ; 0 bytes @ 0x1
  2680  0071                     	ds	1
  2681  0072                     ??_setMemory_Modify:	
  2682  0072                     ??_setDimmerLights_Initialization:	
  2683                           ; 0 bytes @ 0x2
  2684                           
  2685  0072                     ??_getLoad_OK:	
  2686                           ; 0 bytes @ 0x2
  2687                           
  2688  0072                     ??_getMain_All_Error_Status:	
  2689                           ; 0 bytes @ 0x2
  2690                           
  2691  0072                     ??_getMain_All_LightsStatus:	
  2692                           ; 0 bytes @ 0x2
  2693                           
  2694  0072                     ??_setDimmerLights_Line:	
  2695                           ; 0 bytes @ 0x2
  2696                           
  2697  0072                     ??_getCmd_Status:	
  2698                           ; 0 bytes @ 0x2
  2699                           
  2700  0072                     ?_setCmd_Status:	
  2701                           ; 0 bytes @ 0x2
  2702                           
  2703  0072                     ??_Fosc_Set:	
  2704                           ; 0 bytes @ 0x2
  2705                           
  2706  0072                     ??_IO_Set:	
  2707                           ; 0 bytes @ 0x2
  2708                           
  2709  0072                     ??_TMR1_Set:	
  2710                           ; 0 bytes @ 0x2
  2711                           
  2712  0072                     ??_ADC_Set:	
  2713                           ; 0 bytes @ 0x2
  2714                           
  2715  0072                     ??_IOC_Set:	
  2716                           ; 0 bytes @ 0x2
  2717                           
  2718  0072                     ??_WDT_Set:	
  2719                           ; 0 bytes @ 0x2
  2720                           
  2721  0072                     ??_Timeout_Counter:	
  2722                           ; 0 bytes @ 0x2
  2723                           
  2724  0072                     ??_set_TimeoutCleared:	
  2725                           ; 0 bytes @ 0x2
  2726                           
  2727  0072                     ??_Flash_Memory_Read:	
  2728                           ; 0 bytes @ 0x2
  2729                           
  2730  0072                     ?_setMemory_Data:	
  2731                           ; 0 bytes @ 0x2
  2732                           
  2733  0072                     ??_Flash_Memory_Write:	
  2734                           ; 0 bytes @ 0x2
  2735                           
  2736  0072                     ??_getAll_Sw_KeyStatus:	
  2737                           ; 0 bytes @ 0x2
  2738                           
  2739  0072                     ??_WDT_Clearing:	
  2740                           ; 0 bytes @ 0x2
  2741                           
  2742  0072                     ??_myMain_Initialization:	
  2743                           ; 0 bytes @ 0x2
  2744                           
  2745  0072                     ??_Temp_Initialization:	
  2746                           ; 0 bytes @ 0x2
  2747                           
  2748  0072                     ??_setLoad_AH_AL_Restore:	
  2749                           ; 0 bytes @ 0x2
  2750                           
  2751  0072                     ??_setTemp_Initialization:	
  2752                           ; 0 bytes @ 0x2
  2753                           
  2754  0072                     ??_setOverTemp_ADV_Restore:	
  2755                           ; 0 bytes @ 0x2
  2756                           
  2757  0072                     ??_getSw_KeyStatus:	
  2758                           ; 0 bytes @ 0x2
  2759                           
  2760  0072                     ??_Buzzer_Initialization:	
  2761                           ; 0 bytes @ 0x2
  2762                           
  2763  0072                     ??_Buzzer_Main:	
  2764                           ; 0 bytes @ 0x2
  2765                           
  2766  0072                     ??_DelayOffPointSelect:	
  2767                           ; 0 bytes @ 0x2
  2768                           
  2769  0072                     ?_setDimmerIntr_ControlStatus:	
  2770                           ; 0 bytes @ 0x2
  2771                           
  2772  0072                     ?_setDimmerIntr_DimmingValue:	
  2773                           ; 0 bytes @ 0x2
  2774                           
  2775  0072                     ??_getDimmerIntr_DimmingValue:	
  2776                           ; 0 bytes @ 0x2
  2777                           
  2778  0072                     ?_setDimmerIntr_Dimming_Sw:	
  2779                           ; 0 bytes @ 0x2
  2780                           
  2781  0072                     ??_getDimmerIntr_Dimming_Sw:	
  2782                           ; 0 bytes @ 0x2
  2783                           
  2784  0072                     ?_setDimmerIntr_Dimming_RF:	
  2785                           ; 0 bytes @ 0x2
  2786                           
  2787  0072                     ??_getAll_DimmerIntr_Dimming_Sw_RF:	
  2788                           ; 0 bytes @ 0x2
  2789                           
  2790  0072                     ??_DimmerLights_SelectPointer:	
  2791                           ; 0 bytes @ 0x2
  2792                           
  2793  0072                     ??_getDimmerLights_Line:	
  2794                           ; 0 bytes @ 0x2
  2795                           
  2796  0072                     ??_getDimmer_LoadGO:	
  2797                           ; 0 bytes @ 0x2
  2798                           
  2799  0072                     ??_getDimmer_Load_Status:	
  2800                           ; 0 bytes @ 0x2
  2801                           
  2802  0072                     ??_LedPointSelect:	
  2803                           ; 0 bytes @ 0x2
  2804                           
  2805  0072                     ??_Flash_Memory_Unlock:	
  2806                           ; 0 bytes @ 0x2
  2807                           
  2808  0072                     ??_Flash_Memory_Erasing:	
  2809                           ; 0 bytes @ 0x2
  2810                           
  2811  0072                     ??_WDT_Main:	
  2812                           ; 0 bytes @ 0x2
  2813                           
  2814  0072                     ??_getMain_Lights_Count:	
  2815                           ; 0 bytes @ 0x2
  2816                           
  2817  0072                     ??_TouchPower:	
  2818                           ; 0 bytes @ 0x2
  2819                           
  2820  0072                     ??_SwPointSelect:	
  2821                           ; 0 bytes @ 0x2
  2822                           
  2823  0072                     ?___bmul:	
  2824                           ; 0 bytes @ 0x2
  2825                           
  2826  0072                     ?___lbdiv:	
  2827                           ; 1 bytes @ 0x2
  2828                           
  2829  0072                     ?_getAD:	
  2830                           ; 1 bytes @ 0x2
  2831                           
  2832  0072                     ?___wmul:	
  2833                           ; 2 bytes @ 0x2
  2834                           
  2835  0072                     ?___awdiv:	
  2836                           ; 2 bytes @ 0x2
  2837                           
  2838  0072                     ?___lwdiv:	
  2839                           ; 2 bytes @ 0x2
  2840                           
  2841  0072                     ?___ftpack:	
  2842                           ; 2 bytes @ 0x2
  2843                           
  2844  0072                     setDimmerIntr_ControlStatus@command:	
  2845                           ; 3 bytes @ 0x2
  2846                           
  2847  0072                     setDimmerIntr_DimmingValue@value:	
  2848                           ; 1 bytes @ 0x2
  2849                           
  2850  0072                     setDimmerIntr_Dimming_Sw@command:	
  2851                           ; 1 bytes @ 0x2
  2852                           
  2853  0072                     getDimmerIntr_Dimming_Sw@lights:	
  2854                           ; 1 bytes @ 0x2
  2855                           
  2856  0072                     setDimmerIntr_Dimming_RF@command:	
  2857                           ; 1 bytes @ 0x2
  2858                           
  2859  0072                     getAll_DimmerIntr_Dimming_Sw_RF@status:	
  2860                           ; 1 bytes @ 0x2
  2861                           
  2862  0072                     setDimmerLights_Line@lights:	
  2863                           ; 1 bytes @ 0x2
  2864                           
  2865  0072                     getDimmerLights_Line@line:	
  2866                           ; 1 bytes @ 0x2
  2867                           
  2868  0072                     getDimmer_LoadGO@loadgo:	
  2869                           ; 1 bytes @ 0x2
  2870                           
  2871  0072                     getDimmer_Load_Status@status:	
  2872                           ; 1 bytes @ 0x2
  2873                           
  2874  0072                     getAD@adcon1:	
  2875                           ; 1 bytes @ 0x2
  2876                           
  2877  0072                     setMemory_Data@data:	
  2878                           ; 1 bytes @ 0x2
  2879                           
  2880  0072                     getMain_All_LightsStatus@status:	
  2881                           ; 1 bytes @ 0x2
  2882                           
  2883  0072                     setCmd_Status@cmd:	
  2884                           ; 1 bytes @ 0x2
  2885                           
  2886  0072                     getCmd_Status@number:	
  2887                           ; 1 bytes @ 0x2
  2888                           
  2889  0072                     getLoad_OK@ok:	
  2890                           ; 1 bytes @ 0x2
  2891                           
  2892  0072                     ___bmul@multiplicand:	
  2893                           ; 1 bytes @ 0x2
  2894                           
  2895  0072                     ___lbdiv@divisor:	
  2896                           ; 1 bytes @ 0x2
  2897                           
  2898  0072                     ___wmul@multiplier:	
  2899                           ; 1 bytes @ 0x2
  2900                           
  2901  0072                     ___awdiv@divisor:	
  2902                           ; 2 bytes @ 0x2
  2903                           
  2904  0072                     ___lwdiv@divisor:	
  2905                           ; 2 bytes @ 0x2
  2906                           
  2907  0072                     ___ftpack@arg:	
  2908                           ; 2 bytes @ 0x2
  2909                           
  2910                           
  2911                           ; 3 bytes @ 0x2
  2912  0072                     	ds	1
  2913  0073                     ??_getDimmerLights_Allow_Condition:	
  2914  0073                     ??_setCmd_Status:	
  2915                           ; 0 bytes @ 0x3
  2916                           
  2917  0073                     ??_setMemory_Data:	
  2918                           ; 0 bytes @ 0x3
  2919                           
  2920  0073                     ??_setDimmerIntr_ControlStatus:	
  2921                           ; 0 bytes @ 0x3
  2922                           
  2923  0073                     ??_setDimmerIntr_DimmingValue:	
  2924                           ; 0 bytes @ 0x3
  2925                           
  2926  0073                     ??_setDimmerIntr_Dimming_Sw:	
  2927                           ; 0 bytes @ 0x3
  2928                           
  2929  0073                     ??_setDimmerIntr_Dimming_RF:	
  2930                           ; 0 bytes @ 0x3
  2931                           
  2932  0073                     ??_Mcu_Initialization:	
  2933                           ; 0 bytes @ 0x3
  2934                           
  2935  0073                     ??___bmul:	
  2936                           ; 0 bytes @ 0x3
  2937                           
  2938  0073                     ??___lbdiv:	
  2939                           ; 0 bytes @ 0x3
  2940                           
  2941  0073                     DelayOffPointSelect@sw:	
  2942                           ; 0 bytes @ 0x3
  2943                           
  2944  0073                     getDimmerIntr_DimmingValue@lights:	
  2945                           ; 1 bytes @ 0x3
  2946                           
  2947  0073                     getDimmerIntr_Dimming_Sw@status:	
  2948                           ; 1 bytes @ 0x3
  2949                           
  2950  0073                     DimmerLights_SelectPointer@lights:	
  2951                           ; 1 bytes @ 0x3
  2952                           
  2953  0073                     LedPointSelect@led:	
  2954                           ; 1 bytes @ 0x3
  2955                           
  2956  0073                     Flash_Memory_Read@i:	
  2957                           ; 1 bytes @ 0x3
  2958                           
  2959  0073                     Flash_Memory_Write@i:	
  2960                           ; 1 bytes @ 0x3
  2961                           
  2962  0073                     setMemory_Modify@command:	
  2963                           ; 1 bytes @ 0x3
  2964                           
  2965  0073                     getMain_Lights_Count@status1:	
  2966                           ; 1 bytes @ 0x3
  2967                           
  2968  0073                     getCmd_Status@cmd:	
  2969                           ; 1 bytes @ 0x3
  2970                           
  2971  0073                     setLoad_AH_AL_Restore@i:	
  2972                           ; 1 bytes @ 0x3
  2973                           
  2974  0073                     SwPointSelect@sw:	
  2975                           ; 1 bytes @ 0x3
  2976                           
  2977  0073                     getSw_KeyStatus@status:	
  2978                           ; 1 bytes @ 0x3
  2979                           
  2980  0073                     getAll_Sw_KeyStatus@status:	
  2981                           ; 1 bytes @ 0x3
  2982                           
  2983  0073                     _getMain_All_Error_Status$3476:	
  2984                           ; 1 bytes @ 0x3
  2985                           
  2986  0073                     setOverTemp_ADV_Restore@i:	
  2987                           ; 2 bytes @ 0x3
  2988                           
  2989                           
  2990                           ; 2 bytes @ 0x3
  2991  0073                     	ds	1
  2992  0074                     ??_DlyOff_Initialization:	
  2993  0074                     ??_getDimmerLights_Status:	
  2994                           ; 0 bytes @ 0x4
  2995                           
  2996  0074                     ??_setDimmerLights_SwOff:	
  2997                           ; 0 bytes @ 0x4
  2998                           
  2999  0074                     ?_setLED:	
  3000                           ; 0 bytes @ 0x4
  3001                           
  3002  0074                     ??_setLED_Main:	
  3003                           ; 0 bytes @ 0x4
  3004                           
  3005  0074                     ??_Load_Initialization:	
  3006                           ; 0 bytes @ 0x4
  3007                           
  3008  0074                     ??_getDelayOff_GO:	
  3009                           ; 0 bytes @ 0x4
  3010                           
  3011  0074                     ??_setDimmerLights_DimmingOn:	
  3012                           ; 0 bytes @ 0x4
  3013                           
  3014  0074                     DlyOff_Initialization@sw:	
  3015                           ; 0 bytes @ 0x4
  3016                           
  3017  0074                     getDelayOff_GO@sw:	
  3018                           ; 1 bytes @ 0x4
  3019                           
  3020  0074                     setDimmerIntr_ControlStatus@lights:	
  3021                           ; 1 bytes @ 0x4
  3022                           
  3023  0074                     setDimmerIntr_DimmingValue@lights:	
  3024                           ; 1 bytes @ 0x4
  3025                           
  3026  0074                     getDimmerIntr_DimmingValue@value:	
  3027                           ; 1 bytes @ 0x4
  3028                           
  3029  0074                     setDimmerIntr_Dimming_Sw@lights:	
  3030                           ; 1 bytes @ 0x4
  3031                           
  3032  0074                     setDimmerIntr_Dimming_RF@lights:	
  3033                           ; 1 bytes @ 0x4
  3034                           
  3035  0074                     setDimmerLights_SwOff@sw:	
  3036                           ; 1 bytes @ 0x4
  3037                           
  3038  0074                     setDimmerLights_DimmingOn@sw:	
  3039                           ; 1 bytes @ 0x4
  3040                           
  3041  0074                     getDimmerLights_Allow_Condition@allow:	
  3042                           ; 1 bytes @ 0x4
  3043                           
  3044  0074                     getDimmerLights_Status@lights:	
  3045                           ; 1 bytes @ 0x4
  3046                           
  3047  0074                     setLED@command:	
  3048                           ; 1 bytes @ 0x4
  3049                           
  3050  0074                     Flash_Memory_Read@address:	
  3051                           ; 1 bytes @ 0x4
  3052                           
  3053  0074                     setMemory_Data@address:	
  3054                           ; 1 bytes @ 0x4
  3055                           
  3056  0074                     getMain_Lights_Count@count:	
  3057                           ; 1 bytes @ 0x4
  3058                           
  3059  0074                     setCmd_Status@number:	
  3060                           ; 1 bytes @ 0x4
  3061                           
  3062  0074                     _getSw_KeyStatus$6151:	
  3063                           ; 1 bytes @ 0x4
  3064                           
  3065  0074                     _getAll_Sw_KeyStatus$6154:	
  3066                           ; 1 bytes @ 0x4
  3067                           
  3068  0074                     ___bmul@product:	
  3069                           ; 1 bytes @ 0x4
  3070                           
  3071  0074                     ___lbdiv@dividend:	
  3072                           ; 1 bytes @ 0x4
  3073                           
  3074  0074                     ___wmul@multiplicand:	
  3075                           ; 1 bytes @ 0x4
  3076                           
  3077  0074                     ___awdiv@dividend:	
  3078                           ; 2 bytes @ 0x4
  3079                           
  3080  0074                     ___lwdiv@dividend:	
  3081                           ; 2 bytes @ 0x4
  3082                           
  3083                           
  3084                           ; 2 bytes @ 0x4
  3085  0074                     	ds	1
  3086  0075                     ??_setLED:	
  3087  0075                     ??_setDimmerLights_DimmingClose:	
  3088                           ; 0 bytes @ 0x5
  3089                           
  3090  0075                     ??_DelayOff_Initialization:	
  3091                           ; 0 bytes @ 0x5
  3092                           
  3093  0075                     ??_getAD:	
  3094                           ; 0 bytes @ 0x5
  3095                           
  3096  0075                     getDelayOff_GO@go:	
  3097                           ; 0 bytes @ 0x5
  3098                           
  3099  0075                     _getDimmerLights_Allow_Condition$2174:	
  3100                           ; 1 bytes @ 0x5
  3101                           
  3102  0075                     getDimmerLights_Status@status:	
  3103                           ; 1 bytes @ 0x5
  3104                           
  3105  0075                     setLED@led:	
  3106                           ; 1 bytes @ 0x5
  3107                           
  3108  0075                     getAD@adcon0:	
  3109                           ; 1 bytes @ 0x5
  3110                           
  3111  0075                     Flash_Memory_Read@ret:	
  3112                           ; 1 bytes @ 0x5
  3113                           
  3114  0075                     ___bmul@multiplier:	
  3115                           ; 1 bytes @ 0x5
  3116                           
  3117  0075                     ___ftpack@exp:	
  3118                           ; 1 bytes @ 0x5
  3119                           
  3120  0075                     ___lbdiv@counter:	
  3121                           ; 1 bytes @ 0x5
  3122                           
  3123  0075                     _getMain_All_Error_Status$3477:	
  3124                           ; 1 bytes @ 0x5
  3125                           
  3126                           
  3127                           ; 2 bytes @ 0x5
  3128  0075                     	ds	1
  3129  0076                     ??_setLED_Initialization:	
  3130  0076                     ??_Flash_Memory_Modify:	
  3131                           ; 0 bytes @ 0x6
  3132                           
  3133  0076                     ??_getLoad_AD:	
  3134                           ; 0 bytes @ 0x6
  3135                           
  3136  0076                     ??_getTemp_AD:	
  3137                           ; 0 bytes @ 0x6
  3138                           
  3139  0076                     ??_setSw_Initialization:	
  3140                           ; 0 bytes @ 0x6
  3141                           
  3142  0076                     ??_Flash_Memory_Initialization:	
  3143                           ; 0 bytes @ 0x6
  3144                           
  3145  0076                     ??___wmul:	
  3146                           ; 0 bytes @ 0x6
  3147                           
  3148  0076                     ??___awdiv:	
  3149                           ; 0 bytes @ 0x6
  3150                           
  3151  0076                     ??___lwdiv:	
  3152                           ; 0 bytes @ 0x6
  3153                           
  3154  0076                     setLED_Initialization@led:	
  3155                           ; 0 bytes @ 0x6
  3156                           
  3157  0076                     setLED_Main@led:	
  3158                           ; 1 bytes @ 0x6
  3159                           
  3160  0076                     setSw_Initialization@sw:	
  3161                           ; 1 bytes @ 0x6
  3162                           
  3163  0076                     ___ftpack@sign:	
  3164                           ; 1 bytes @ 0x6
  3165                           
  3166  0076                     ___lbdiv@quotient:	
  3167                           ; 1 bytes @ 0x6
  3168                           
  3169  0076                     ___wmul@product:	
  3170                           ; 1 bytes @ 0x6
  3171                           
  3172                           
  3173                           ; 2 bytes @ 0x6
  3174  0076                     	ds	1
  3175  0077                     ??_Switch_Initialization:	
  3176  0077                     ??___ftpack:	
  3177                           ; 0 bytes @ 0x7
  3178                           
  3179  0077                     ??_setBuz:	
  3180                           ; 0 bytes @ 0x7
  3181                           
  3182  0077                     ??_LED_Initialization:	
  3183                           ; 0 bytes @ 0x7
  3184                           
  3185  0077                     ??_LED_Main:	
  3186                           ; 0 bytes @ 0x7
  3187                           
  3188  0077                     ?_Division:	
  3189                           ; 0 bytes @ 0x7
  3190                           
  3191  0077                     Division@num:	
  3192                           ; 1 bytes @ 0x7
  3193                           
  3194  0077                     Flash_Memory_Initialization@value:	
  3195                           ; 1 bytes @ 0x7
  3196                           
  3197  0077                     Flash_Memory_Modify@i:	
  3198                           ; 1 bytes @ 0x7
  3199                           
  3200  0077                     getMain_All_Error_Status@command:	
  3201                           ; 1 bytes @ 0x7
  3202                           
  3203  0077                     getTemp_AD@channel:	
  3204                           ; 1 bytes @ 0x7
  3205                           
  3206  0077                     ___lwdiv@quotient:	
  3207                           ; 1 bytes @ 0x7
  3208                           
  3209                           
  3210                           ; 2 bytes @ 0x7
  3211  0077                     	ds	1
  3212  0078                     ??_Division:	
  3213  0078                     ??_Flash_Memory_Main:	
  3214                           ; 0 bytes @ 0x8
  3215                           
  3216  0078                     setBuz@count:	
  3217                           ; 0 bytes @ 0x8
  3218                           
  3219  0078                     getMain_All_Error_Status@status:	
  3220                           ; 1 bytes @ 0x8
  3221                           
  3222  0078                     getTemp_AD@ADRES:	
  3223                           ; 1 bytes @ 0x8
  3224                           
  3225                           
  3226                           ; 2 bytes @ 0x8
  3227  0078                     	ds	1
  3228  0079                     ??_setDimmerLights_SwOn:	
  3229  0079                     ??_my_MainTimer:	
  3230                           ; 0 bytes @ 0x9
  3231                           
  3232  0079                     ??_Exception_Main:	
  3233                           ; 0 bytes @ 0x9
  3234                           
  3235  0079                     ___lwdiv@counter:	
  3236                           ; 0 bytes @ 0x9
  3237                           
  3238                           
  3239                           ; 1 bytes @ 0x9
  3240  0079                     	ds	1
  3241  007A                     ??_setDimmerLights_Main:	
  3242  007A                     ??_DimmerLights_TwoPhase_Main:	
  3243                           ; 0 bytes @ 0xA
  3244                           
  3245  007A                     ??_Temp_Main:	
  3246                           ; 0 bytes @ 0xA
  3247                           
  3248  007A                     ??_Switch_Main:	
  3249                           ; 0 bytes @ 0xA
  3250                           
  3251  007A                     ??_DelayOff_Main:	
  3252                           ; 0 bytes @ 0xA
  3253                           
  3254  007A                     ??_DimmerLights_Initialization:	
  3255                           ; 0 bytes @ 0xA
  3256                           
  3257  007A                     ??_DimmerLights_Main:	
  3258                           ; 0 bytes @ 0xA
  3259                           
  3260  007A                     ??_main:	
  3261                           ; 0 bytes @ 0xA
  3262                           
  3263  007A                     ??___ftneg:	
  3264                           ; 0 bytes @ 0xA
  3265                           
  3266                           
  3267                           	psect	cstackBANK0
  3268  0020                     __pcstackBANK0:	
  3269                           ; 0 bytes @ 0xA
  3270                           
  3271  0020                     ??_Load_Main:	
  3272  0020                     ?___awtoft:	
  3273                           ; 0 bytes @ 0x0
  3274                           
  3275  0020                     Division@value:	
  3276                           ; 3 bytes @ 0x0
  3277                           
  3278  0020                     Flash_Memory_Main@key_Status:	
  3279                           ; 1 bytes @ 0x0
  3280                           
  3281  0020                     getLoad_AD@channel:	
  3282                           ; 1 bytes @ 0x0
  3283                           
  3284  0020                     ___awdiv@counter:	
  3285                           ; 1 bytes @ 0x0
  3286                           
  3287  0020                     ___awtoft@c:	
  3288                           ; 1 bytes @ 0x0
  3289                           
  3290                           
  3291                           ; 2 bytes @ 0x0
  3292  0020                     	ds	1
  3293  0021                     Division@result:	
  3294  0021                     _Flash_Memory_Main$3034:	
  3295                           ; 1 bytes @ 0x1
  3296                           
  3297  0021                     getLoad_AD@k:	
  3298                           ; 1 bytes @ 0x1
  3299                           
  3300  0021                     ___awdiv@sign:	
  3301                           ; 1 bytes @ 0x1
  3302                           
  3303                           
  3304                           ; 1 bytes @ 0x1
  3305  0021                     	ds	1
  3306  0022                     ??_DimmerIntr_ValueCalculate:	
  3307  0022                     getLoad_AD@j:	
  3308                           ; 0 bytes @ 0x2
  3309                           
  3310  0022                     Load_Main@error:	
  3311                           ; 1 bytes @ 0x2
  3312                           
  3313  0022                     ___awdiv@quotient:	
  3314                           ; 1 bytes @ 0x2
  3315                           
  3316                           
  3317                           ; 2 bytes @ 0x2
  3318  0022                     	ds	1
  3319  0023                     ??___awtoft:	
  3320  0023                     getLoad_AD@ADRES:	
  3321                           ; 0 bytes @ 0x3
  3322                           
  3323  0023                     _Load_Main$3845:	
  3324                           ; 2 bytes @ 0x3
  3325                           
  3326                           
  3327                           ; 2 bytes @ 0x3
  3328  0023                     	ds	1
  3329  0024                     ?_setBuz:	
  3330  0024                     DimmerIntr_ValueCalculate@lights:	
  3331                           ; 0 bytes @ 0x4
  3332                           
  3333  0024                     setBuz@time:	
  3334                           ; 1 bytes @ 0x4
  3335                           
  3336                           
  3337                           ; 2 bytes @ 0x4
  3338  0024                     	ds	1
  3339  0025                     ??_DimmerLights_DimmingFunction:	
  3340  0025                     getLoad_AD@i:	
  3341                           ; 0 bytes @ 0x5
  3342                           
  3343  0025                     Load_Main@ErrorCountValue:	
  3344                           ; 1 bytes @ 0x5
  3345                           
  3346  0025                     ___awtoft@sign:	
  3347                           ; 1 bytes @ 0x5
  3348                           
  3349                           
  3350                           ; 1 bytes @ 0x5
  3351  0025                     	ds	1
  3352  0026                     ?___ftdiv:	
  3353  0026                     ?___ftmul:	
  3354                           ; 3 bytes @ 0x6
  3355                           
  3356  0026                     setDimmerLights_SwOn@idle:	
  3357                           ; 3 bytes @ 0x6
  3358                           
  3359  0026                     DimmerLights_DimmingFunction@lights:	
  3360                           ; 1 bytes @ 0x6
  3361                           
  3362  0026                     Exception_Main@status:	
  3363                           ; 1 bytes @ 0x6
  3364                           
  3365  0026                     Load_Main@Load_RunStatus:	
  3366                           ; 1 bytes @ 0x6
  3367                           
  3368  0026                     ___ftdiv@f2:	
  3369                           ; 1 bytes @ 0x6
  3370                           
  3371  0026                     ___ftmul@f1:	
  3372                           ; 3 bytes @ 0x6
  3373                           
  3374                           
  3375                           ; 3 bytes @ 0x6
  3376  0026                     	ds	1
  3377  0027                     setDimmerLights_SwOn@dimmingStatus:	
  3378  0027                     Exception_Main@count:	
  3379                           ; 1 bytes @ 0x7
  3380                           
  3381  0027                     Load_Main@LightsCount:	
  3382                           ; 1 bytes @ 0x7
  3383                           
  3384                           
  3385                           ; 1 bytes @ 0x7
  3386  0027                     	ds	1
  3387  0028                     setDimmerLights_SwOn@sw:	
  3388  0028                     Exception_Main@error:	
  3389                           ; 1 bytes @ 0x8
  3390                           
  3391  0028                     Load_Main@i:	
  3392                           ; 1 bytes @ 0x8
  3393                           
  3394                           
  3395                           ; 2 bytes @ 0x8
  3396  0028                     	ds	1
  3397  0029                     ??_setSw_Main:	
  3398  0029                     Exception_Main@i:	
  3399                           ; 0 bytes @ 0x9
  3400                           
  3401  0029                     ___ftdiv@f1:	
  3402                           ; 2 bytes @ 0x9
  3403                           
  3404  0029                     ___ftmul@f2:	
  3405                           ; 3 bytes @ 0x9
  3406                           
  3407                           
  3408                           ; 3 bytes @ 0x9
  3409  0029                     	ds	2
  3410  002B                     setSw_Main@sw:	
  3411  002B                     Exception_Main@i_3488:	
  3412                           ; 1 bytes @ 0xB
  3413                           
  3414                           
  3415                           ; 2 bytes @ 0xB
  3416  002B                     	ds	1
  3417  002C                     ??___ftdiv:	
  3418  002C                     ??___ftmul:	
  3419                           ; 0 bytes @ 0xC
  3420                           
  3421                           
  3422                           ; 0 bytes @ 0xC
  3423  002C                     	ds	1
  3424  002D                     Exception_Main@lights:	
  3425                           
  3426                           ; 1 bytes @ 0xD
  3427  002D                     	ds	3
  3428  0030                     ___ftdiv@cntr:	
  3429  0030                     ___ftmul@exp:	
  3430                           ; 1 bytes @ 0x10
  3431                           
  3432                           
  3433                           ; 1 bytes @ 0x10
  3434  0030                     	ds	1
  3435  0031                     ___ftdiv@f3:	
  3436  0031                     ___ftmul@f3_as_product:	
  3437                           ; 3 bytes @ 0x11
  3438                           
  3439                           
  3440                           ; 3 bytes @ 0x11
  3441  0031                     	ds	3
  3442  0034                     ___ftdiv@exp:	
  3443  0034                     ___ftmul@cntr:	
  3444                           ; 1 bytes @ 0x14
  3445                           
  3446                           
  3447                           ; 1 bytes @ 0x14
  3448  0034                     	ds	1
  3449  0035                     ___ftdiv@sign:	
  3450  0035                     ___ftmul@sign:	
  3451                           ; 1 bytes @ 0x15
  3452                           
  3453                           
  3454                           ; 1 bytes @ 0x15
  3455  0035                     	ds	1
  3456  0036                     ?___ftneg:	
  3457  0036                     ___ftneg@f1:	
  3458                           ; 3 bytes @ 0x16
  3459                           
  3460                           
  3461                           ; 3 bytes @ 0x16
  3462  0036                     	ds	3
  3463  0039                     ?___ftadd:	
  3464  0039                     ___ftadd@f1:	
  3465                           ; 3 bytes @ 0x19
  3466                           
  3467                           
  3468                           ; 3 bytes @ 0x19
  3469  0039                     	ds	3
  3470  003C                     ___ftadd@f2:	
  3471                           
  3472                           ; 3 bytes @ 0x1C
  3473  003C                     	ds	3
  3474  003F                     ??___ftadd:	
  3475                           
  3476                           ; 0 bytes @ 0x1F
  3477  003F                     	ds	4
  3478  0043                     ___ftadd@sign:	
  3479                           
  3480                           ; 1 bytes @ 0x23
  3481  0043                     	ds	1
  3482  0044                     ___ftadd@exp2:	
  3483                           
  3484                           ; 1 bytes @ 0x24
  3485  0044                     	ds	1
  3486  0045                     ___ftadd@exp1:	
  3487                           
  3488                           ; 1 bytes @ 0x25
  3489  0045                     	ds	1
  3490  0046                     ?___fttol:	
  3491  0046                     ___fttol@f1:	
  3492                           ; 4 bytes @ 0x26
  3493                           
  3494                           
  3495                           ; 3 bytes @ 0x26
  3496  0046                     	ds	4
  3497  004A                     ??___fttol:	
  3498                           
  3499                           ; 0 bytes @ 0x2A
  3500  004A                     	ds	4
  3501  004E                     ___fttol@sign1:	
  3502                           
  3503                           ; 1 bytes @ 0x2E
  3504  004E                     	ds	1
  3505  004F                     ___fttol@lval:	
  3506                           
  3507                           ; 4 bytes @ 0x2F
  3508  004F                     	ds	4
  3509  0053                     ___fttol@exp1:	
  3510                           
  3511                           ; 1 bytes @ 0x33
  3512  0053                     	ds	1
  3513  0054                     ??_getDimmerLights_ValueToPercent:	
  3514  0054                     ??_getDimmerLights_PercentToValue:	
  3515                           ; 0 bytes @ 0x34
  3516                           
  3517                           
  3518                           ; 0 bytes @ 0x34
  3519  0054                     	ds	2
  3520  0056                     getDimmerLights_PercentToValue@value:	
  3521  0056                     getDimmerLights_ValueToPercent@value:	
  3522                           ; 1 bytes @ 0x36
  3523                           
  3524                           
  3525                           ; 1 bytes @ 0x36
  3526  0056                     	ds	1
  3527  0057                     getDimmerLights_PercentToValue@i:	
  3528  0057                     getDimmerLights_ValueToPercent@i:	
  3529                           ; 3 bytes @ 0x37
  3530                           
  3531                           
  3532                           ; 3 bytes @ 0x37
  3533  0057                     	ds	3
  3534  005A                     ?_setProductData:	
  3535  005A                     ??_DimmerIntr_Initialization:	
  3536                           ; 0 bytes @ 0x3A
  3537                           
  3538  005A                     ?_setDimmerIntr_MaxmumValue:	
  3539                           ; 0 bytes @ 0x3A
  3540                           
  3541  005A                     setDimmerIntr_MaxmumValue@value:	
  3542                           ; 0 bytes @ 0x3A
  3543                           
  3544  005A                     setProductData@value:	
  3545                           ; 1 bytes @ 0x3A
  3546                           
  3547                           
  3548                           ; 1 bytes @ 0x3A
  3549  005A                     	ds	1
  3550  005B                     ??_setProductData:	
  3551  005B                     ??_setDimmerIntr_MaxmumValue:	
  3552                           ; 0 bytes @ 0x3B
  3553                           
  3554                           
  3555                           ; 0 bytes @ 0x3B
  3556  005B                     	ds	1
  3557  005C                     setDimmerIntr_MaxmumValue@lights:	
  3558  005C                     setProductData@address:	
  3559                           ; 1 bytes @ 0x3C
  3560                           
  3561                           
  3562                           ; 1 bytes @ 0x3C
  3563  005C                     	ds	1
  3564  005D                     ??_DlyOff_Main:	
  3565  005D                     ?_setDimmerLights_Dimming:	
  3566                           ; 0 bytes @ 0x3D
  3567                           
  3568  005D                     ??_DimmerLights_AssignationDimming:	
  3569                           ; 0 bytes @ 0x3D
  3570                           
  3571  005D                     ??_setTemp_Main:	
  3572                           ; 0 bytes @ 0x3D
  3573                           
  3574  005D                     ?_setDelayOff_GO:	
  3575                           ; 0 bytes @ 0x3D
  3576                           
  3577  005D                     setDelayOff_GO@command:	
  3578                           ; 0 bytes @ 0x3D
  3579                           
  3580  005D                     setDimmerLights_Dimming@status:	
  3581                           ; 1 bytes @ 0x3D
  3582                           
  3583                           
  3584                           ; 1 bytes @ 0x3D
  3585  005D                     	ds	1
  3586  005E                     ??_setDimmerLights_Dimming:	
  3587  005E                     setDelayOff_GO@value:	
  3588                           ; 0 bytes @ 0x3E
  3589                           
  3590                           
  3591                           ; 1 bytes @ 0x3E
  3592  005E                     	ds	1
  3593  005F                     ??_setDelayOff_GO:	
  3594  005F                     DlyOff_Main@sw:	
  3595                           ; 0 bytes @ 0x3F
  3596                           
  3597  005F                     DimmerLights_AssignationDimming@status:	
  3598                           ; 1 bytes @ 0x3F
  3599                           
  3600  005F                     setDimmerLights_Dimming@value:	
  3601                           ; 1 bytes @ 0x3F
  3602                           
  3603  005F                     setTemp_Main@error:	
  3604                           ; 1 bytes @ 0x3F
  3605                           
  3606                           
  3607                           ; 1 bytes @ 0x3F
  3608  005F                     	ds	1
  3609  0060                     DimmerLights_AssignationDimming@sw:	
  3610  0060                     setDimmerLights_Dimming@lights:	
  3611                           ; 1 bytes @ 0x40
  3612                           
  3613  0060                     setTemp_Main@TempGO:	
  3614                           ; 1 bytes @ 0x40
  3615                           
  3616                           
  3617                           ; 1 bytes @ 0x40
  3618  0060                     	ds	1
  3619  0061                     setDelayOff_GO@i:	
  3620  0061                     DimmerLights_TwoPhase_Main@lights:	
  3621                           ; 1 bytes @ 0x41
  3622                           
  3623  0061                     setTemp_Main@SafeValue:	
  3624                           ; 1 bytes @ 0x41
  3625                           
  3626                           
  3627                           ; 2 bytes @ 0x41
  3628  0061                     	ds	1
  3629  0062                     setDelayOff_GO@j:	
  3630                           
  3631                           ; 1 bytes @ 0x42
  3632  0062                     	ds	1
  3633  0063                     setDelayOff_GO@k:	
  3634  0063                     setTemp_Main@DangerValue:	
  3635                           ; 1 bytes @ 0x43
  3636                           
  3637                           
  3638                           ; 2 bytes @ 0x43
  3639  0063                     	ds	1
  3640  0064                     setDelayOff_GO@sw:	
  3641                           
  3642                           ; 1 bytes @ 0x44
  3643  0064                     	ds	1
  3644  0065                     ?_setDimmerLights_OnOff:	
  3645  0065                     setDimmerLights_OnOff@command:	
  3646                           ; 0 bytes @ 0x45
  3647                           
  3648  0065                     setTemp_Main@AD:	
  3649                           ; 1 bytes @ 0x45
  3650                           
  3651                           
  3652                           ; 2 bytes @ 0x45
  3653  0065                     	ds	1
  3654  0066                     ??_setDimmerLights_OnOff:	
  3655                           
  3656                           ; 0 bytes @ 0x46
  3657  0066                     	ds	2
  3658  0068                     setDimmerLights_OnOff@lights:	
  3659                           
  3660                           ; 1 bytes @ 0x48
  3661  0068                     	ds	1
  3662  0069                     setDimmerLights_Main@lights:	
  3663                           
  3664                           ; 1 bytes @ 0x49
  3665  0069                     	ds	1
  3666                           
  3667                           	psect	maintext
  3668  090A                     __pmaintext:	
  3669 ;;
  3670 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3671 ;;
  3672 ;; *************** function _main *****************
  3673 ;; Defined at:
  3674 ;;		line 6 in file "../src/Main_B1.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;  argc            2    0[BANK2 ] int 
  3677 ;;  argv            2    2[BANK2 ] PTR PTR unsigned char 
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;		None
  3680 ;; Return value:  Size  Location     Type
  3681 ;;                  2    0[BANK2 ] int 
  3682 ;; Registers used:
  3683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3684 ;; Tracked objects:
  3685 ;;		On entry : 17F/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3689 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  3690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3692 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  3693 ;;Total ram usage:        4 bytes
  3694 ;; Hardware stack levels required when called:    9
  3695 ;; This function calls:
  3696 ;;		_Buzzer_Initialization
  3697 ;;		_Buzzer_Main
  3698 ;;		_DelayOff_Initialization
  3699 ;;		_DelayOff_Main
  3700 ;;		_DimmerLights_Initialization
  3701 ;;		_DimmerLights_Main
  3702 ;;		_Exception_Main
  3703 ;;		_Flash_Memory_Initialization
  3704 ;;		_Flash_Memory_Main
  3705 ;;		_LED_Initialization
  3706 ;;		_LED_Main
  3707 ;;		_Load_Initialization
  3708 ;;		_Load_Main
  3709 ;;		_Mcu_Initialization
  3710 ;;		_Switch_Initialization
  3711 ;;		_Switch_Main
  3712 ;;		_Temp_Initialization
  3713 ;;		_Temp_Main
  3714 ;;		_WDT_Main
  3715 ;;		_getLoad_AD
  3716 ;;		_getTemp_AD
  3717 ;;		_myMain_Initialization
  3718 ;;		_my_MainTimer
  3719 ;; This function is called by:
  3720 ;;		Startup code after reset
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724                           
  3725                           ;psect for function _main
  3726  090A                     _main:	
  3727                           
  3728                           ;Main_B1.c: 7: myMain_Initialization();
  3729                           
  3730                           ;incstack = 0
  3731                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3732  090A  3193  2362  3189   	fcall	_myMain_Initialization
  3733                           
  3734                           ;Main_B1.c: 8: Mcu_Initialization();
  3735  090D  3193  23C4  3189   	fcall	_Mcu_Initialization
  3736                           
  3737                           ;Main_B1.c: 9: Flash_Memory_Initialization();
  3738  0910  3185  25DD  3189   	fcall	_Flash_Memory_Initialization
  3739                           
  3740                           ;Main_B1.c: 10: LED_Initialization();
  3741  0913  3191  21CF  3189   	fcall	_LED_Initialization
  3742                           
  3743                           ;Main_B1.c: 11: Buzzer_Initialization();
  3744  0916  3191  21BE  3189   	fcall	_Buzzer_Initialization
  3745                           
  3746                           ;Main_B1.c: 13: ;;
  3747                           ;Main_B1.c: 14: Temp_Initialization();
  3748  0919  3191  21C4  3189   	fcall	_Temp_Initialization
  3749                           
  3750                           ;Main_B1.c: 15: Load_Initialization();
  3751  091C  3191  21C1  3189   	fcall	_Load_Initialization
  3752                           
  3753                           ;Main_B1.c: 16: ;;
  3754                           ;Main_B1.c: 17: DelayOff_Initialization();
  3755  091F  3191  21C7  3189   	fcall	_DelayOff_Initialization
  3756                           
  3757                           ;Main_B1.c: 19: DimmerLights_Initialization();
  3758  0922  3191  21F5  3189   	fcall	_DimmerLights_Initialization
  3759                           
  3760                           ;Main_B1.c: 20: ;;
  3761                           ;Main_B1.c: 21: ;;
  3762                           ;Main_B1.c: 22: ;;
  3763                           ;Main_B1.c: 23: Switch_Initialization();
  3764  0925  3191  21DB  3189   	fcall	_Switch_Initialization
  3765  0928                     l7524:	
  3766                           ;Main_B1.c: 24: ;;
  3767                           ;Main_B1.c: 25: ;;
  3768                           ;Main_B1.c: 26: ;;
  3769                           ;Main_B1.c: 27: ;;
  3770                           ;Main_B1.c: 29: while (1) {
  3771                           
  3772                           
  3773                           ;Main_B1.c: 31: if (myMain.PowerON == 1) {
  3774  0928  0021               	movlb	1	; select bank1
  3775  0929  1C30               	btfss	_myMain^(0+128),0
  3776  092A  2933               	goto	l7528
  3777                           
  3778                           ;Main_B1.c: 37: getLoad_AD(0x05);
  3779  092B  3005               	movlw	5
  3780  092C  318D  2556  3189   	fcall	_getLoad_AD
  3781                           
  3782                           ;Main_B1.c: 41: getTemp_AD(0x09);
  3783  092F  3009               	movlw	9
  3784  0930  318B  23C3  3189   	fcall	_getTemp_AD
  3785  0933                     l7528:	
  3786                           
  3787                           ;Main_B1.c: 56: }
  3788                           ;Main_B1.c: 92: if (Timer1.Timeout == 1) {
  3789  0933  0021               	movlb	1	; select bank1
  3790  0934  1C4E               	btfss	_Timer1^(0+128),0
  3791  0935  2928               	goto	l7524
  3792                           
  3793                           ;Main_B1.c: 93: Timer1.Timeout = 0;
  3794  0936  104E               	bcf	_Timer1^(0+128),0
  3795                           
  3796                           ;Main_B1.c: 95: my_MainTimer();
  3797  0937  3197  274D  3189   	fcall	_my_MainTimer
  3798                           
  3799                           ;Main_B1.c: 96: WDT_Main();
  3800  093A  3193  2381  3189   	fcall	_WDT_Main
  3801                           
  3802                           ;Main_B1.c: 97: ;;
  3803                           ;Main_B1.c: 98: ;;
  3804                           ;Main_B1.c: 99: if (myMain.PowerON == 1) {
  3805  093D  0021               	movlb	1	; select bank1
  3806  093E  1C30               	btfss	_myMain^(0+128),0
  3807  093F  2928               	goto	l7524
  3808                           
  3809                           ;Main_B1.c: 100: Flash_Memory_Main();
  3810  0940  3197  27BF  3189   	fcall	_Flash_Memory_Main
  3811                           
  3812                           ;Main_B1.c: 102: LED_Main();
  3813  0943  3191  21D3  3189   	fcall	_LED_Main
  3814                           
  3815                           ;Main_B1.c: 103: Buzzer_Main();
  3816  0946  3188  2078  3189   	fcall	_Buzzer_Main
  3817                           
  3818                           ;Main_B1.c: 105: ;;
  3819                           ;Main_B1.c: 106: Temp_Main();
  3820  0949  3188  2000  3189   	fcall	_Temp_Main
  3821                           
  3822                           ;Main_B1.c: 107: Load_Main();
  3823  094C  3180  204D  3189   	fcall	_Load_Main
  3824                           
  3825                           ;Main_B1.c: 108: ;;
  3826                           ;Main_B1.c: 110: ;;
  3827                           ;Main_B1.c: 111: DimmerLights_Main();
  3828  094F  3195  257E  3189   	fcall	_DimmerLights_Main
  3829                           
  3830                           ;Main_B1.c: 112: Switch_Main();
  3831  0952  3192  2218  3189   	fcall	_Switch_Main
  3832                           
  3833                           ;Main_B1.c: 113: ;;
  3834                           ;Main_B1.c: 114: ;;
  3835                           ;Main_B1.c: 116: ;;
  3836                           ;Main_B1.c: 117: DelayOff_Main();
  3837  0955  3191  21CB  3189   	fcall	_DelayOff_Main
  3838                           
  3839                           ;Main_B1.c: 118: ;;
  3840                           ;Main_B1.c: 119: ;;
  3841                           ;Main_B1.c: 120: Exception_Main();
  3842  0958  3185  250D  3189   	fcall	_Exception_Main
  3843  095B  2928               	goto	l7524
  3844  095C                     __end_of_main:	
  3845                           ;Main_B1.c: 127: }
  3846                           ;Main_B1.c: 128: }
  3847                           ;Main_B1.c: 162: }
  3848                           ;Main_B1.c: 163: return (0);
  3849                           ;	Return value of _main is never used
  3850                           
  3851                           
  3852                           	psect	text1
  3853  174D                     __ptext1:	
  3854 ;; *************** function _my_MainTimer *****************
  3855 ;; Defined at:
  3856 ;;		line 184 in file "../src/Main_B1.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;		None
  3859 ;; Auto vars:     Size  Location     Type
  3860 ;;		None
  3861 ;; Return value:  Size  Location     Type
  3862 ;;		None               void
  3863 ;; Registers used:
  3864 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3865 ;; Tracked objects:
  3866 ;;		On entry : 0/0
  3867 ;;		On exit  : 0/0
  3868 ;;		Unchanged: 0/0
  3869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3872 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3873 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3874 ;;Total ram usage:        1 bytes
  3875 ;; Hardware stack levels used:    1
  3876 ;; Hardware stack levels required when called:    5
  3877 ;; This function calls:
  3878 ;;		_setBuz
  3879 ;; This function is called by:
  3880 ;;		_main
  3881 ;; This function uses a non-reentrant model
  3882 ;;
  3883                           
  3884                           
  3885                           ;psect for function _my_MainTimer
  3886  174D                     _my_MainTimer:	
  3887                           
  3888                           ;Main_B1.c: 186: if (myMain.PowerON == 0) {
  3889                           
  3890                           ;incstack = 0
  3891                           ; Regs used in _my_MainTimer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3892  174D  0021               	movlb	1	; select bank1
  3893  174E  1830               	btfsc	_myMain^(0+128),0
  3894  174F  2F65               	goto	l7264
  3895                           
  3896                           ;Main_B1.c: 187: myMain.PowerCount++;
  3897  1750  3001               	movlw	1
  3898  1751  00F9               	movwf	??_my_MainTimer
  3899  1752  0879               	movf	??_my_MainTimer,w
  3900  1753  07B1               	addwf	(_myMain^(0+128)+1),f
  3901                           
  3902                           ;Main_B1.c: 188: if (myMain.PowerCount == (1500 / 20)) {
  3903  1754  0831               	movf	(_myMain^(0+128)+1),w
  3904  1755  3A4B               	xorlw	75
  3905  1756  1D03               	skipz
  3906  1757  0008               	return
  3907                           
  3908                           ;Main_B1.c: 189: myMain.PowerCount = 0;
  3909  1758  01B1               	clrf	(_myMain^(0+128)+1)
  3910                           
  3911                           ;Main_B1.c: 190: myMain.PowerON = 1;
  3912  1759  1430               	bsf	_myMain^(0+128),0
  3913                           
  3914                           ;Main_B1.c: 195: setBuz(3, 50);
  3915  175A  3032               	movlw	50
  3916  175B  0020               	movlb	0	; select bank0
  3917  175C  00A4               	movwf	setBuz@time
  3918  175D  3000               	movlw	0
  3919  175E  00A5               	movwf	setBuz@time+1
  3920  175F  3003               	movlw	3
  3921  1760  3189  215C         	fcall	_setBuz
  3922                           
  3923                           ;Main_B1.c: 196: myMain.SelfTest = 1;
  3924  1762  0021               	movlb	1	; select bank1
  3925  1763  1630               	bsf	_myMain^(0+128),4
  3926                           
  3927                           ;Main_B1.c: 205: }
  3928                           ;Main_B1.c: 206: } else {
  3929  1764  0008               	return
  3930  1765                     l7264:	
  3931                           
  3932                           ;Main_B1.c: 207: myMain.PowerCount++;
  3933  1765  3001               	movlw	1
  3934  1766  00F9               	movwf	??_my_MainTimer
  3935  1767  0879               	movf	??_my_MainTimer,w
  3936  1768  07B1               	addwf	(_myMain^(0+128)+1),f
  3937                           
  3938                           ;Main_B1.c: 208: if (myMain.PowerCount == (1000 / 20)) {
  3939  1769  0831               	movf	(_myMain^(0+128)+1),w
  3940  176A  3A32               	xorlw	50
  3941  176B  1903               	btfsc	3,2
  3942                           
  3943                           ;Main_B1.c: 209: myMain.PowerCount = 0;
  3944  176C  01B1               	clrf	(_myMain^(0+128)+1)
  3945                           
  3946                           ;Main_B1.c: 231: }
  3947                           ;Main_B1.c: 233: myMain.Count1++;
  3948  176D  3001               	movlw	1
  3949  176E  07B4               	addwf	(_myMain^(0+128)+4),f
  3950  176F  3000               	movlw	0
  3951  1770  3DB5               	addwfc	((_myMain+1)^(0+128)+4),f
  3952                           
  3953                           ;Main_B1.c: 234: if (myMain.Count1 == (1000 / 20)) {
  3954  1771  3004               	movlw	4
  3955  1772  3EB0               	addlw	_myMain& (0+255)
  3956  1773  0086               	movwf	6
  3957  1774  0187               	clrf	7
  3958  1775  3F40               	moviw [0]fsr1
  3959  1776  3A32               	xorlw	50
  3960  1777  1D03               	skipz
  3961  1778  2F7B               	goto	u8325
  3962  1779  3F41               	moviw [1]fsr1
  3963  177A  3A00               	xorlw	0
  3964  177B                     u8325:	
  3965  177B  1D03               	skipz
  3966  177C  0008               	return
  3967                           
  3968                           ;Main_B1.c: 235: myMain.Count1 = 0;
  3969  177D  01B4               	clrf	(_myMain^(0+128)+4)
  3970  177E  01B5               	clrf	((_myMain+1)^(0+128)+4)
  3971                           
  3972                           ;Main_B1.c: 247: if (myMain.Flag) {
  3973  177F  1CB0               	btfss	_myMain^(0+128),1
  3974  1780  2F83               	goto	l1094
  3975                           
  3976                           ;Main_B1.c: 248: myMain.Flag = 0;
  3977  1781  10B0               	bcf	_myMain^(0+128),1
  3978                           
  3979                           ;Main_B1.c: 257: } else {
  3980  1782  0008               	return
  3981  1783                     l1094:	
  3982                           
  3983                           ;Main_B1.c: 258: myMain.Flag = 1;
  3984  1783  14B0               	bsf	_myMain^(0+128),1
  3985  1784  0008               	return
  3986  1785                     __end_of_my_MainTimer:	
  3987                           
  3988                           	psect	text2
  3989  1362                     __ptext2:	
  3990 ;; *************** function _myMain_Initialization *****************
  3991 ;; Defined at:
  3992 ;;		line 169 in file "../src/Main_B1.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;		None
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;		None
  3997 ;; Return value:  Size  Location     Type
  3998 ;;		None               void
  3999 ;; Registers used:
  4000 ;;		wreg, fsr1l, fsr1h
  4001 ;; Tracked objects:
  4002 ;;		On entry : 0/0
  4003 ;;		On exit  : 0/0
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4008 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4009 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4010 ;;Total ram usage:        1 bytes
  4011 ;; Hardware stack levels used:    1
  4012 ;; Hardware stack levels required when called:    3
  4013 ;; This function calls:
  4014 ;;		Nothing
  4015 ;; This function is called by:
  4016 ;;		_main
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           
  4021                           ;psect for function _myMain_Initialization
  4022  1362                     _myMain_Initialization:	
  4023                           
  4024                           ;Main_B1.c: 172: product = &_product;
  4025                           
  4026                           ;incstack = 0
  4027                           ; Regs used in _myMain_Initialization: [wregfsr1]
  4028  1362  30C5               	movlw	__product& (0+255)
  4029  1363  00F2               	movwf	??_myMain_Initialization
  4030  1364  0872               	movf	??_myMain_Initialization,w
  4031  1365  0020               	movlb	0	; select bank0
  4032  1366  00ED               	movwf	_product
  4033                           
  4034                           ;Main_B1.c: 173: product->Data[20] = 209;
  4035  1367  30D1               	movlw	209
  4036  1368  00F2               	movwf	??_myMain_Initialization
  4037  1369  086D               	movf	_product,w
  4038  136A  3E14               	addlw	20
  4039  136B  0086               	movwf	6
  4040  136C  3001               	movlw	1	; select bank2/3
  4041  136D  0087               	movwf	7
  4042  136E  0872               	movf	??_myMain_Initialization,w
  4043  136F  0081               	movwf	1
  4044  1370  0008               	return
  4045  1371                     __end_of_myMain_Initialization:	
  4046                           
  4047                           	psect	text3
  4048  0BC3                     __ptext3:	
  4049 ;; *************** function _getTemp_AD *****************
  4050 ;; Defined at:
  4051 ;;		line 15 in file "../src/OverTemperature_B1.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;  channel         1    wreg     unsigned char 
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;  channel         1    7[COMMON] unsigned char 
  4056 ;;  ADRES           2    8[COMMON] unsigned int 
  4057 ;; Return value:  Size  Location     Type
  4058 ;;		None               void
  4059 ;; Registers used:
  4060 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4067 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4068 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4069 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4070 ;;Total ram usage:        4 bytes
  4071 ;; Hardware stack levels used:    1
  4072 ;; Hardware stack levels required when called:    5
  4073 ;; This function calls:
  4074 ;;		_getAD
  4075 ;; This function is called by:
  4076 ;;		_main
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080                           
  4081                           ;psect for function _getTemp_AD
  4082  0BC3                     _getTemp_AD:	
  4083                           
  4084                           ;incstack = 0
  4085                           ; Regs used in _getTemp_AD: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4086                           ;getTemp_AD@channel stored from wreg
  4087  0BC3  00F7               	movwf	getTemp_AD@channel
  4088                           
  4089                           ;OverTemperature_B1.c: 16: ADtype ADRES = 0;
  4090  0BC4  01F8               	clrf	getTemp_AD@ADRES
  4091  0BC5  01F9               	clrf	getTemp_AD@ADRES+1
  4092                           
  4093                           ;OverTemperature_B1.c: 19: if (Temp.ADtoGO == 1) {
  4094  0BC6  0021               	movlb	1	; select bank1
  4095  0BC7  1D56               	btfss	_Temp^(0+128),2
  4096  0BC8  0008               	return
  4097                           
  4098                           ;OverTemperature_B1.c: 21: ADRES = getAD(channel, 0xf0);
  4099  0BC9  30F0               	movlw	240
  4100  0BCA  00F6               	movwf	??_getTemp_AD
  4101  0BCB  0876               	movf	??_getTemp_AD,w
  4102  0BCC  00F2               	movwf	getAD@adcon1
  4103  0BCD  0877               	movf	getTemp_AD@channel,w
  4104  0BCE  3194  24AB  318B   	fcall	_getAD
  4105  0BD1  0873               	movf	?_getAD+1,w
  4106  0BD2  01F9               	clrf	getTemp_AD@ADRES+1
  4107  0BD3  07F9               	addwf	getTemp_AD@ADRES+1,f
  4108  0BD4  0872               	movf	?_getAD,w
  4109  0BD5  01F8               	clrf	getTemp_AD@ADRES
  4110  0BD6  07F8               	addwf	getTemp_AD@ADRES,f
  4111                           
  4112                           ;OverTemperature_B1.c: 29: if (ADRES > 0) {
  4113  0BD7  0879               	movf	getTemp_AD@ADRES+1,w
  4114  0BD8  0478               	iorwf	getTemp_AD@ADRES,w
  4115  0BD9  1903               	skipnz
  4116  0BDA  0008               	return
  4117                           
  4118                           ;OverTemperature_B1.c: 30: if (Temp.ADV[0] < ADRES) {
  4119  0BDB  0879               	movf	getTemp_AD@ADRES+1,w
  4120  0BDC  0021               	movlb	1	; select bank1
  4121  0BDD  025B               	subwf	((_Temp+1)^(0+128)+4),w
  4122  0BDE  1D03               	skipz
  4123  0BDF  2BE2               	goto	u6495
  4124  0BE0  0878               	movf	getTemp_AD@ADRES,w
  4125  0BE1  025A               	subwf	(_Temp^(0+128)+4),w
  4126  0BE2                     u6495:	
  4127  0BE2  1803               	skipnc
  4128  0BE3  2BEB               	goto	l6070
  4129                           
  4130                           ;OverTemperature_B1.c: 31: Temp.ADV[0] = ADRES;
  4131  0BE4  0879               	movf	getTemp_AD@ADRES+1,w
  4132  0BE5  01DB               	clrf	((_Temp+1)^(0+128)+4)
  4133  0BE6  07DB               	addwf	((_Temp+1)^(0+128)+4),f
  4134  0BE7  0878               	movf	getTemp_AD@ADRES,w
  4135  0BE8  01DA               	clrf	(_Temp^(0+128)+4)
  4136  0BE9  07DA               	addwf	(_Temp^(0+128)+4),f
  4137                           
  4138                           ;OverTemperature_B1.c: 32: } else if (Temp.ADV[1] < ADRES) {
  4139  0BEA  0008               	return
  4140  0BEB                     l6070:	
  4141  0BEB  0879               	movf	getTemp_AD@ADRES+1,w
  4142  0BEC  025D               	subwf	((_Temp+1)^(0+128)+6),w
  4143  0BED  1D03               	skipz
  4144  0BEE  2BF1               	goto	u6505
  4145  0BEF  0878               	movf	getTemp_AD@ADRES,w
  4146  0BF0  025C               	subwf	(_Temp^(0+128)+6),w
  4147  0BF1                     u6505:	
  4148  0BF1  1803               	skipnc
  4149  0BF2  2BFA               	goto	l6074
  4150                           
  4151                           ;OverTemperature_B1.c: 33: Temp.ADV[1] = ADRES;
  4152  0BF3  0879               	movf	getTemp_AD@ADRES+1,w
  4153  0BF4  01DD               	clrf	((_Temp+1)^(0+128)+6)
  4154  0BF5  07DD               	addwf	((_Temp+1)^(0+128)+6),f
  4155  0BF6  0878               	movf	getTemp_AD@ADRES,w
  4156  0BF7  01DC               	clrf	(_Temp^(0+128)+6)
  4157  0BF8  07DC               	addwf	(_Temp^(0+128)+6),f
  4158                           
  4159                           ;OverTemperature_B1.c: 34: } else if (Temp.ADV[2] < ADRES) {
  4160  0BF9  0008               	return
  4161  0BFA                     l6074:	
  4162  0BFA  0879               	movf	getTemp_AD@ADRES+1,w
  4163  0BFB  025F               	subwf	((_Temp+1)^(0+128)+8),w
  4164  0BFC  1D03               	skipz
  4165  0BFD  2C00               	goto	u6515
  4166  0BFE  0878               	movf	getTemp_AD@ADRES,w
  4167  0BFF  025E               	subwf	(_Temp^(0+128)+8),w
  4168  0C00                     u6515:	
  4169  0C00  1803               	skipnc
  4170  0C01  2C09               	goto	l6078
  4171                           
  4172                           ;OverTemperature_B1.c: 35: Temp.ADV[2] = ADRES;
  4173  0C02  0879               	movf	getTemp_AD@ADRES+1,w
  4174  0C03  01DF               	clrf	((_Temp+1)^(0+128)+8)
  4175  0C04  07DF               	addwf	((_Temp+1)^(0+128)+8),f
  4176  0C05  0878               	movf	getTemp_AD@ADRES,w
  4177  0C06  01DE               	clrf	(_Temp^(0+128)+8)
  4178  0C07  07DE               	addwf	(_Temp^(0+128)+8),f
  4179                           
  4180                           ;OverTemperature_B1.c: 36: } else if (Temp.ADV[3] < ADRES) {
  4181  0C08  0008               	return
  4182  0C09                     l6078:	
  4183  0C09  0879               	movf	getTemp_AD@ADRES+1,w
  4184  0C0A  0261               	subwf	((_Temp+1)^(0+128)+10),w
  4185  0C0B  1D03               	skipz
  4186  0C0C  2C0F               	goto	u6525
  4187  0C0D  0878               	movf	getTemp_AD@ADRES,w
  4188  0C0E  0260               	subwf	(_Temp^(0+128)+10),w
  4189  0C0F                     u6525:	
  4190  0C0F  1803               	skipnc
  4191  0C10  2C18               	goto	l6082
  4192                           
  4193                           ;OverTemperature_B1.c: 37: Temp.ADV[3] = ADRES;
  4194  0C11  0879               	movf	getTemp_AD@ADRES+1,w
  4195  0C12  01E1               	clrf	((_Temp+1)^(0+128)+10)
  4196  0C13  07E1               	addwf	((_Temp+1)^(0+128)+10),f
  4197  0C14  0878               	movf	getTemp_AD@ADRES,w
  4198  0C15  01E0               	clrf	(_Temp^(0+128)+10)
  4199  0C16  07E0               	addwf	(_Temp^(0+128)+10),f
  4200                           
  4201                           ;OverTemperature_B1.c: 38: } else if (Temp.ADV[4] < ADRES) {
  4202  0C17  0008               	return
  4203  0C18                     l6082:	
  4204  0C18  0879               	movf	getTemp_AD@ADRES+1,w
  4205  0C19  0263               	subwf	((_Temp+1)^(0+128)+12),w
  4206  0C1A  1D03               	skipz
  4207  0C1B  2C1E               	goto	u6535
  4208  0C1C  0878               	movf	getTemp_AD@ADRES,w
  4209  0C1D  0262               	subwf	(_Temp^(0+128)+12),w
  4210  0C1E                     u6535:	
  4211  0C1E  1803               	skipnc
  4212  0C1F  0008               	return
  4213                           
  4214                           ;OverTemperature_B1.c: 39: Temp.ADV[4] = ADRES;
  4215  0C20  0879               	movf	getTemp_AD@ADRES+1,w
  4216  0C21  01E3               	clrf	((_Temp+1)^(0+128)+12)
  4217  0C22  07E3               	addwf	((_Temp+1)^(0+128)+12),f
  4218  0C23  0878               	movf	getTemp_AD@ADRES,w
  4219  0C24  01E2               	clrf	(_Temp^(0+128)+12)
  4220  0C25  07E2               	addwf	(_Temp^(0+128)+12),f
  4221  0C26  0008               	return
  4222  0C27                     __end_of_getTemp_AD:	
  4223                           
  4224                           	psect	text4
  4225  0D56                     __ptext4:	
  4226 ;; *************** function _getLoad_AD *****************
  4227 ;; Defined at:
  4228 ;;		line 16 in file "../src/OverLoad_B1.c"
  4229 ;; Parameters:    Size  Location     Type
  4230 ;;  channel         1    wreg     unsigned char 
  4231 ;; Auto vars:     Size  Location     Type
  4232 ;;  channel         1    0[BANK0 ] unsigned char 
  4233 ;;  ADRES           2    3[BANK0 ] unsigned int 
  4234 ;;  i               1    5[BANK0 ] unsigned char 
  4235 ;;  j               1    2[BANK0 ] unsigned char 
  4236 ;;  k               1    1[BANK0 ] unsigned char 
  4237 ;; Return value:  Size  Location     Type
  4238 ;;		None               void
  4239 ;; Registers used:
  4240 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4247 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4248 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4249 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4250 ;;Total ram usage:        8 bytes
  4251 ;; Hardware stack levels used:    1
  4252 ;; Hardware stack levels required when called:    5
  4253 ;; This function calls:
  4254 ;;		_getAD
  4255 ;; This function is called by:
  4256 ;;		_main
  4257 ;; This function uses a non-reentrant model
  4258 ;;
  4259                           
  4260                           
  4261                           ;psect for function _getLoad_AD
  4262  0D56                     _getLoad_AD:	
  4263                           
  4264                           ;incstack = 0
  4265                           ; Regs used in _getLoad_AD: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4266                           ;getLoad_AD@channel stored from wreg
  4267  0D56  0020               	movlb	0	; select bank0
  4268  0D57  00A0               	movwf	getLoad_AD@channel
  4269                           
  4270                           ;OverLoad_B1.c: 17: char i = 0, j = 0, k = 0;
  4271  0D58  01A5               	clrf	getLoad_AD@i
  4272  0D59  01A2               	clrf	getLoad_AD@j
  4273  0D5A  01A1               	clrf	getLoad_AD@k
  4274                           
  4275                           ;OverLoad_B1.c: 18: ADtype ADRES = 0;
  4276  0D5B  01A3               	clrf	getLoad_AD@ADRES
  4277  0D5C  01A4               	clrf	getLoad_AD@ADRES+1
  4278                           
  4279                           ;OverLoad_B1.c: 19: if (Load.ADtoGO == 1) {
  4280  0D5D  0022               	movlb	2	; select bank2
  4281  0D5E  1E30               	btfss	_Load^(0+256),4
  4282  0D5F  0008               	return
  4283                           
  4284                           ;OverLoad_B1.c: 21: ADRES = getAD(channel, 0xf3);
  4285  0D60  30F3               	movlw	243
  4286  0D61  00F6               	movwf	??_getLoad_AD
  4287  0D62  0876               	movf	??_getLoad_AD,w
  4288  0D63  00F2               	movwf	getAD@adcon1
  4289  0D64  0020               	movlb	0	; select bank0
  4290  0D65  0820               	movf	getLoad_AD@channel,w
  4291  0D66  3194  24AB  318D   	fcall	_getAD
  4292  0D69  0873               	movf	?_getAD+1,w
  4293  0D6A  0020               	movlb	0	; select bank0
  4294  0D6B  01A4               	clrf	getLoad_AD@ADRES+1
  4295  0D6C  07A4               	addwf	getLoad_AD@ADRES+1,f
  4296  0D6D  0872               	movf	?_getAD,w
  4297  0D6E  01A3               	clrf	getLoad_AD@ADRES
  4298  0D6F  07A3               	addwf	getLoad_AD@ADRES,f
  4299                           
  4300                           ;OverLoad_B1.c: 22: for (i = 0; i < 4; i++) {
  4301  0D70  01A5               	clrf	getLoad_AD@i
  4302  0D71  3004               	movlw	4
  4303  0D72  0225               	subwf	getLoad_AD@i,w
  4304  0D73  1803               	btfsc	3,0
  4305  0D74  2D9C               	goto	l6038
  4306  0D75                     l6026:	
  4307                           
  4308                           ;OverLoad_B1.c: 23: if (Load.AH[i] < ADRES && j == 0) {
  4309  0D75  3525               	lslf	getLoad_AD@i,w
  4310  0D76  3E3B               	addlw	(_Load+11)& (0+255)
  4311  0D77  0086               	movwf	6
  4312  0D78  3001               	movlw	1	; select bank2/3
  4313  0D79  0087               	movwf	7
  4314  0D7A  3F40               	moviw [0]fsr1
  4315  0D7B  00F6               	movwf	??_getLoad_AD
  4316  0D7C  3F41               	moviw [1]fsr1
  4317  0D7D  00F7               	movwf	??_getLoad_AD+1
  4318  0D7E  0824               	movf	getLoad_AD@ADRES+1,w
  4319  0D7F  0277               	subwf	??_getLoad_AD+1,w
  4320  0D80  1D03               	skipz
  4321  0D81  2D84               	goto	u6395
  4322  0D82  0823               	movf	getLoad_AD@ADRES,w
  4323  0D83  0276               	subwf	??_getLoad_AD,w
  4324  0D84                     u6395:	
  4325  0D84  1803               	skipnc
  4326  0D85  2D94               	goto	l6034
  4327  0D86  08A2               	movf	getLoad_AD@j,f
  4328  0D87  1D03               	skipz
  4329  0D88  2D94               	goto	l6034
  4330                           
  4331                           ;OverLoad_B1.c: 24: Load.AH[i] = ADRES;
  4332  0D89  3525               	lslf	getLoad_AD@i,w
  4333  0D8A  3E3B               	addlw	(_Load+11)& (0+255)
  4334  0D8B  0086               	movwf	6
  4335  0D8C  3001               	movlw	1	; select bank2/3
  4336  0D8D  0087               	movwf	7
  4337  0D8E  0823               	movf	getLoad_AD@ADRES,w
  4338  0D8F  3FC0               	movwi [0]fsr1
  4339  0D90  0824               	movf	getLoad_AD@ADRES+1,w
  4340  0D91  3FC1               	movwi [1]fsr1
  4341                           
  4342                           ;OverLoad_B1.c: 25: j = 1;
  4343  0D92  01A2               	clrf	getLoad_AD@j
  4344  0D93  0AA2               	incf	getLoad_AD@j,f
  4345  0D94                     l6034:	
  4346  0D94  3001               	movlw	1
  4347  0D95  00F6               	movwf	??_getLoad_AD
  4348  0D96  0876               	movf	??_getLoad_AD,w
  4349  0D97  07A5               	addwf	getLoad_AD@i,f
  4350  0D98  3004               	movlw	4
  4351  0D99  0225               	subwf	getLoad_AD@i,w
  4352  0D9A  1C03               	skipc
  4353  0D9B  2D75               	goto	l6026
  4354  0D9C                     l6038:	
  4355                           
  4356                           ;OverLoad_B1.c: 26: }
  4357                           ;OverLoad_B1.c: 27: }
  4358                           ;OverLoad_B1.c: 28: if (j == 0) {
  4359  0D9C  08A2               	movf	getLoad_AD@j,f
  4360  0D9D  1D03               	skipz
  4361  0D9E  0008               	return
  4362                           
  4363                           ;OverLoad_B1.c: 29: for (i = 0; i < 4; i++) {
  4364  0D9F  01A5               	clrf	getLoad_AD@i
  4365  0DA0                     L1:	
  4366  0DA0  3004               	movlw	4
  4367  0DA1  0225               	subwf	getLoad_AD@i,w
  4368  0DA2  1803               	btfsc	3,0
  4369  0DA3  0008               	return
  4370                           
  4371                           ;OverLoad_B1.c: 30: if (Load.AL[i] > ADRES && k == 0) {
  4372  0DA4  3525               	lslf	getLoad_AD@i,w
  4373  0DA5  3E45               	addlw	(_Load+21)& (0+255)
  4374  0DA6  0086               	movwf	6
  4375  0DA7  3001               	movlw	1	; select bank2/3
  4376  0DA8  0087               	movwf	7
  4377  0DA9  3F40               	moviw [0]fsr1
  4378  0DAA  00F6               	movwf	??_getLoad_AD
  4379  0DAB  3F41               	moviw [1]fsr1
  4380  0DAC  00F7               	movwf	??_getLoad_AD+1
  4381  0DAD  0877               	movf	??_getLoad_AD+1,w
  4382  0DAE  0224               	subwf	getLoad_AD@ADRES+1,w
  4383  0DAF  1D03               	skipz
  4384  0DB0  2DB3               	goto	u6445
  4385  0DB1  0876               	movf	??_getLoad_AD,w
  4386  0DB2  0223               	subwf	getLoad_AD@ADRES,w
  4387  0DB3                     u6445:	
  4388  0DB3  1803               	skipnc
  4389  0DB4  2DC3               	goto	l6054
  4390  0DB5  08A1               	movf	getLoad_AD@k,f
  4391  0DB6  1D03               	skipz
  4392  0DB7  2DC3               	goto	l6054
  4393                           
  4394                           ;OverLoad_B1.c: 31: Load.AL[i] = ADRES;
  4395  0DB8  3525               	lslf	getLoad_AD@i,w
  4396  0DB9  3E45               	addlw	(_Load+21)& (0+255)
  4397  0DBA  0086               	movwf	6
  4398  0DBB  3001               	movlw	1	; select bank2/3
  4399  0DBC  0087               	movwf	7
  4400  0DBD  0823               	movf	getLoad_AD@ADRES,w
  4401  0DBE  3FC0               	movwi [0]fsr1
  4402  0DBF  0824               	movf	getLoad_AD@ADRES+1,w
  4403  0DC0  3FC1               	movwi [1]fsr1
  4404                           
  4405                           ;OverLoad_B1.c: 32: k = 1;
  4406  0DC1  01A1               	clrf	getLoad_AD@k
  4407  0DC2  0AA1               	incf	getLoad_AD@k,f
  4408  0DC3                     l6054:	
  4409  0DC3  3001               	movlw	1
  4410  0DC4  00F6               	movwf	??_getLoad_AD
  4411  0DC5  0876               	movf	??_getLoad_AD,w
  4412  0DC6  07A5               	addwf	getLoad_AD@i,f
  4413  0DC7  2DA0               	goto	L1
  4414  0DC8                     __end_of_getLoad_AD:	
  4415                           
  4416                           	psect	text5
  4417  14AB                     __ptext5:	
  4418 ;; *************** function _getAD *****************
  4419 ;; Defined at:
  4420 ;;		line 463 in file "../src/MCU_B1.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;  adcon0          1    wreg     unsigned char 
  4423 ;;  adcon1          1    2[COMMON] unsigned char 
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;  adcon0          1    5[COMMON] unsigned char 
  4426 ;; Return value:  Size  Location     Type
  4427 ;;                  2    2[COMMON] int 
  4428 ;; Registers used:
  4429 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4430 ;; Tracked objects:
  4431 ;;		On entry : 0/0
  4432 ;;		On exit  : 0/0
  4433 ;;		Unchanged: 0/0
  4434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4435 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4436 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4438 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4439 ;;Total ram usage:        4 bytes
  4440 ;; Hardware stack levels used:    1
  4441 ;; Hardware stack levels required when called:    4
  4442 ;; This function calls:
  4443 ;;		_Timeout_Counter
  4444 ;;		_set_TimeoutCleared
  4445 ;; This function is called by:
  4446 ;;		_getLoad_AD
  4447 ;;		_getTemp_AD
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450                           
  4451                           
  4452                           ;psect for function _getAD
  4453  14AB                     _getAD:	
  4454                           
  4455                           ;incstack = 0
  4456                           ; Regs used in _getAD: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4457                           ;getAD@adcon0 stored from wreg
  4458  14AB  00F5               	movwf	getAD@adcon0
  4459                           
  4460                           ;MCU_B1.c: 464: ADCON0 = adcon0;
  4461  14AC  0875               	movf	getAD@adcon0,w
  4462  14AD  0021               	movlb	1	; select bank1
  4463  14AE  009D               	movwf	29	;volatile
  4464                           
  4465                           ;MCU_B1.c: 465: ADCON1 = adcon1;
  4466  14AF  0872               	movf	getAD@adcon1,w
  4467  14B0  009E               	movwf	30	;volatile
  4468                           
  4469                           ;MCU_B1.c: 466: GO_nDONE = 1;
  4470  14B1  149D               	bsf	29,1	;volatile
  4471                           
  4472                           ;MCU_B1.c: 467: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  4473  14B2  2CB6               	goto	l5592
  4474  14B3                     l5590:	
  4475                           
  4476                           ;MCU_B1.c: 468: Timeout_Counter();
  4477  14B3  3194  244E  3194   	fcall	_Timeout_Counter
  4478  14B6                     l5592:	
  4479  14B6  0021               	movlb	1	; select bank1
  4480  14B7  1C9D               	btfss	29,1	;volatile
  4481  14B8  2CBB               	goto	l5596
  4482  14B9  1D3A               	btfss	(_myMain^(0+128)+10),2
  4483  14BA  2CB3               	goto	l5590
  4484  14BB                     l5596:	
  4485                           
  4486                           ;MCU_B1.c: 469: };
  4487                           ;MCU_B1.c: 470: set_TimeoutCleared();
  4488  14BB  3187  27FB         	fcall	_set_TimeoutCleared
  4489                           
  4490                           ;MCU_B1.c: 471: return ((ADRESH*256)+ADRESL);
  4491  14BD  0021               	movlb	1	; select bank1
  4492  14BE  081C               	movf	28,w	;volatile
  4493  14BF  01F3               	clrf	?_getAD+1
  4494  14C0  07F3               	addwf	?_getAD+1,f
  4495  14C1  081B               	movf	27,w	;volatile
  4496  14C2  01F2               	clrf	?_getAD
  4497  14C3  07F2               	addwf	?_getAD,f
  4498  14C4  0008               	return
  4499  14C5                     __end_of_getAD:	
  4500                           
  4501                           	psect	text6
  4502  1381                     __ptext6:	
  4503 ;; *************** function _WDT_Main *****************
  4504 ;; Defined at:
  4505 ;;		line 1121 in file "../src/MCU_B1.c"
  4506 ;; Parameters:    Size  Location     Type
  4507 ;;		None
  4508 ;; Auto vars:     Size  Location     Type
  4509 ;;		None
  4510 ;; Return value:  Size  Location     Type
  4511 ;;		None               void
  4512 ;; Registers used:
  4513 ;;		wreg, status,2, status,0, pclath, cstack
  4514 ;; Tracked objects:
  4515 ;;		On entry : 0/0
  4516 ;;		On exit  : 0/0
  4517 ;;		Unchanged: 0/0
  4518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4521 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4522 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4523 ;;Total ram usage:        1 bytes
  4524 ;; Hardware stack levels used:    1
  4525 ;; Hardware stack levels required when called:    4
  4526 ;; This function calls:
  4527 ;;		_WDT_Clearing
  4528 ;; This function is called by:
  4529 ;;		_main
  4530 ;; This function uses a non-reentrant model
  4531 ;;
  4532                           
  4533                           
  4534                           ;psect for function _WDT_Main
  4535  1381                     _WDT_Main:	
  4536                           
  4537                           ;MCU_B1.c: 1122: if (WDT.Enable == 1) {
  4538                           
  4539                           ;incstack = 0
  4540                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  4541  1381  0021               	movlb	1	; select bank1
  4542  1382  1C51               	btfss	_WDT^(0+128),0
  4543  1383  0008               	return
  4544                           
  4545                           ;MCU_B1.c: 1123: if (WDT.Timer-- > 0) {
  4546  1384  3001               	movlw	1
  4547  1385  02D2               	subwf	(_WDT^(0+128)+1),f
  4548  1386  0852               	movf	(_WDT^(0+128)+1),w
  4549  1387  3AFF               	xorlw	255
  4550  1388  1903               	skipnz
  4551  1389  0008               	return
  4552                           
  4553                           ;MCU_B1.c: 1124: WDT.Timer = 100;
  4554  138A  3064               	movlw	100
  4555  138B  00F2               	movwf	??_WDT_Main
  4556  138C  0872               	movf	??_WDT_Main,w
  4557  138D  00D2               	movwf	(_WDT^(0+128)+1)
  4558                           
  4559                           ;MCU_B1.c: 1125: WDT_Clearing();
  4560  138E  3180  2002         	fcall	_WDT_Clearing
  4561  1390  0008               	return
  4562  1391                     __end_of_WDT_Main:	
  4563                           
  4564                           	psect	text7
  4565  0002                     __ptext7:	
  4566 ;; *************** function _WDT_Clearing *****************
  4567 ;; Defined at:
  4568 ;;		line 1131 in file "../src/MCU_B1.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;		None
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;		None
  4573 ;; Return value:  Size  Location     Type
  4574 ;;		None               void
  4575 ;; Registers used:
  4576 ;;		None
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4586 ;;Total ram usage:        0 bytes
  4587 ;; Hardware stack levels used:    1
  4588 ;; Hardware stack levels required when called:    3
  4589 ;; This function calls:
  4590 ;;		Nothing
  4591 ;; This function is called by:
  4592 ;;		_WDT_Main
  4593 ;; This function uses a non-reentrant model
  4594 ;;
  4595                           
  4596                           
  4597                           ;psect for function _WDT_Clearing
  4598  0002                     _WDT_Clearing:	
  4599                           
  4600                           ;incstack = 0
  4601                           ; Regs used in _WDT_Clearing: []
  4602  0002  0064               	clrwdt	;# 
  4603  0003  0008               	return
  4604  0004                     __end_of_WDT_Clearing:	
  4605                           
  4606                           	psect	text8
  4607  0800                     __ptext8:	
  4608 ;; *************** function _Temp_Main *****************
  4609 ;; Defined at:
  4610 ;;		line 65 in file "../src/OverTemperature_B1.c"
  4611 ;; Parameters:    Size  Location     Type
  4612 ;;		None
  4613 ;; Auto vars:     Size  Location     Type
  4614 ;;		None
  4615 ;; Return value:  Size  Location     Type
  4616 ;;		None               void
  4617 ;; Registers used:
  4618 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4628 ;;Total ram usage:        0 bytes
  4629 ;; Hardware stack levels used:    1
  4630 ;; Hardware stack levels required when called:    6
  4631 ;; This function calls:
  4632 ;;		_setTemp_Main
  4633 ;; This function is called by:
  4634 ;;		_main
  4635 ;; This function uses a non-reentrant model
  4636 ;;
  4637                           
  4638                           
  4639                           ;psect for function _Temp_Main
  4640  0800                     _Temp_Main:	
  4641                           
  4642                           ;OverTemperature_B1.c: 67: setTemp_Main();
  4643                           
  4644                           ;incstack = 0
  4645                           ; Regs used in _Temp_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4646  0800  3184  243C         	fcall	_setTemp_Main
  4647  0802  0008               	return
  4648  0803                     __end_of_Temp_Main:	
  4649                           
  4650                           	psect	text9
  4651  043C                     __ptext9:	
  4652 ;; *************** function _setTemp_Main *****************
  4653 ;; Defined at:
  4654 ;;		line 72 in file "../src/OverTemperature_B1.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;		None
  4657 ;; Auto vars:     Size  Location     Type
  4658 ;;  AD              2   69[BANK0 ] int 
  4659 ;;  DangerValue     2   67[BANK0 ] unsigned int 
  4660 ;;  SafeValue       2   65[BANK0 ] unsigned int 
  4661 ;;  TempGO          1   64[BANK0 ] unsigned char 
  4662 ;;  error           1   63[BANK0 ] unsigned char 
  4663 ;; Return value:  Size  Location     Type
  4664 ;;		None               void
  4665 ;; Registers used:
  4666 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4673 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4674 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4675 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4676 ;;Total ram usage:       10 bytes
  4677 ;; Hardware stack levels used:    1
  4678 ;; Hardware stack levels required when called:    5
  4679 ;; This function calls:
  4680 ;;		___lwdiv
  4681 ;;		_getMain_All_Error_Status
  4682 ;;		_getMain_All_LightsStatus
  4683 ;;		_setBuz
  4684 ;;		_setOverTemp_ADV_Restore
  4685 ;;		_setProductData
  4686 ;; This function is called by:
  4687 ;;		_Temp_Main
  4688 ;; This function uses a non-reentrant model
  4689 ;;
  4690                           
  4691                           
  4692                           ;psect for function _setTemp_Main
  4693  043C                     _setTemp_Main:	
  4694                           
  4695                           ;OverTemperature_B1.c: 73: char error = getMain_All_Error_Status(0);
  4696                           
  4697                           ;incstack = 0
  4698                           ; Regs used in _setTemp_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4699  043C  3000               	movlw	0
  4700  043D  3196  261F  3184   	fcall	_getMain_All_Error_Status
  4701  0440  0020               	movlb	0	; select bank0
  4702  0441  00DD               	movwf	??_setTemp_Main
  4703  0442  085D               	movf	??_setTemp_Main,w
  4704  0443  00DF               	movwf	setTemp_Main@error
  4705                           
  4706                           ;OverTemperature_B1.c: 74: ADtype SafeValue = 0, DangerValue = 0;
  4707  0444  01E1               	clrf	setTemp_Main@SafeValue
  4708  0445  01E2               	clrf	setTemp_Main@SafeValue+1
  4709  0446  01E3               	clrf	setTemp_Main@DangerValue
  4710  0447  01E4               	clrf	setTemp_Main@DangerValue+1
  4711                           
  4712                           ;OverTemperature_B1.c: 75: int AD = 0;
  4713  0448  01E5               	clrf	setTemp_Main@AD
  4714  0449  01E6               	clrf	setTemp_Main@AD+1
  4715                           
  4716                           ;OverTemperature_B1.c: 76: char TempGO = getMain_All_LightsStatus();
  4717  044A  3192  221F  3184   	fcall	_getMain_All_LightsStatus
  4718  044D  0020               	movlb	0	; select bank0
  4719  044E  00DD               	movwf	??_setTemp_Main
  4720  044F  085D               	movf	??_setTemp_Main,w
  4721  0450  00E0               	movwf	setTemp_Main@TempGO
  4722                           
  4723                           ;OverTemperature_B1.c: 78: if (Temp.Enable == 1) {
  4724  0451  0021               	movlb	1	; select bank1
  4725  0452  1C56               	btfss	_Temp^(0+128),0
  4726  0453  2D09               	goto	l1391
  4727                           
  4728                           ;OverTemperature_B1.c: 86: if (Temp.ADtoGO == 0) {
  4729  0454  1956               	btfsc	_Temp^(0+128),2
  4730  0455  2C73               	goto	l7042
  4731                           
  4732                           ;OverTemperature_B1.c: 87: if ((TempGO == 1 && Temp.ERROR == 0) || Temp.ERROR == 1) {
  4733  0456  0020               	movlb	0	; select bank0
  4734  0457  0860               	movf	setTemp_Main@TempGO,w
  4735  0458  3A01               	xorlw	1
  4736  0459  1D03               	skipz
  4737  045A  2C5E               	goto	l1397
  4738  045B  0021               	movlb	1	; select bank1
  4739  045C  1CD6               	btfss	_Temp^(0+128),1
  4740  045D  2C61               	goto	l7034
  4741  045E                     l1397:	
  4742  045E  0021               	movlb	1	; select bank1
  4743  045F  1CD6               	btfss	_Temp^(0+128),1
  4744  0460  2C70               	goto	l7040
  4745  0461                     l7034:	
  4746                           
  4747                           ;OverTemperature_B1.c: 88: Temp.Time++;
  4748  0461  3001               	movlw	1
  4749  0462  07D7               	addwf	(_Temp^(0+128)+1),f
  4750  0463  3000               	movlw	0
  4751  0464  3DD8               	addwfc	((_Temp+1)^(0+128)+1),f
  4752                           
  4753                           ;OverTemperature_B1.c: 89: if (Temp.Time >= (5000 / 20)) {
  4754  0465  3000               	movlw	0
  4755  0466  0258               	subwf	((_Temp+1)^(0+128)+1),w
  4756  0467  30FA               	movlw	250
  4757  0468  1903               	skipnz
  4758  0469  0257               	subwf	(_Temp^(0+128)+1),w
  4759  046A  1C03               	skipc
  4760  046B  0008               	return
  4761                           
  4762                           ;OverTemperature_B1.c: 90: Temp.Time = 0;
  4763  046C  01D7               	clrf	(_Temp^(0+128)+1)
  4764  046D  01D8               	clrf	((_Temp+1)^(0+128)+1)
  4765                           
  4766                           ;OverTemperature_B1.c: 91: Temp.ADtoGO = 1;
  4767  046E  1556               	bsf	_Temp^(0+128),2
  4768                           
  4769                           ;OverTemperature_B1.c: 92: }
  4770                           ;OverTemperature_B1.c: 93: } else {
  4771  046F  0008               	return
  4772  0470                     l7040:	
  4773                           
  4774                           ;OverTemperature_B1.c: 94: Temp.Time = 0;
  4775  0470  01D7               	clrf	(_Temp^(0+128)+1)
  4776  0471  01D8               	clrf	((_Temp+1)^(0+128)+1)
  4777                           
  4778                           ;OverTemperature_B1.c: 95: }
  4779                           ;OverTemperature_B1.c: 96: } else {
  4780  0472  0008               	return
  4781  0473                     l7042:	
  4782                           
  4783                           ;OverTemperature_B1.c: 97: Temp.Time++;
  4784  0473  3001               	movlw	1
  4785  0474  07D7               	addwf	(_Temp^(0+128)+1),f
  4786  0475  3000               	movlw	0
  4787  0476  3DD8               	addwfc	((_Temp+1)^(0+128)+1),f
  4788                           
  4789                           ;OverTemperature_B1.c: 98: if (Temp.Time >= (100 / 20)) {
  4790  0477  3000               	movlw	0
  4791  0478  0258               	subwf	((_Temp+1)^(0+128)+1),w
  4792  0479  3005               	movlw	5
  4793  047A  1903               	skipnz
  4794  047B  0257               	subwf	(_Temp^(0+128)+1),w
  4795  047C  1C03               	skipc
  4796  047D  0008               	return
  4797                           
  4798                           ;OverTemperature_B1.c: 99: Temp.Time = 0;
  4799  047E  01D7               	clrf	(_Temp^(0+128)+1)
  4800  047F  01D8               	clrf	((_Temp+1)^(0+128)+1)
  4801                           
  4802                           ;OverTemperature_B1.c: 104: AD = (Temp.ADV[1] + Temp.ADV[2] + Temp.ADV[3]) / 3;
  4803  0480  3003               	movlw	3
  4804  0481  00F2               	movwf	___lwdiv@divisor
  4805  0482  3000               	movlw	0
  4806  0483  00F3               	movwf	___lwdiv@divisor+1
  4807  0484  300A               	movlw	10
  4808  0485  3ED6               	addlw	_Temp& (0+255)
  4809  0486  0086               	movwf	6
  4810  0487  0187               	clrf	7
  4811  0488  3008               	movlw	8
  4812  0489  3ED6               	addlw	_Temp& (0+255)
  4813  048A  0084               	movwf	4
  4814  048B  0185               	clrf	5
  4815  048C  3F00               	moviw [0]fsr0
  4816  048D  075C               	addwf	(_Temp^(0+128)+6),w
  4817  048E  0020               	movlb	0	; select bank0
  4818  048F  00DD               	movwf	??_setTemp_Main
  4819  0490  3F01               	moviw [1]fsr0
  4820  0491  0021               	movlb	1	; select bank1
  4821  0492  3D5D               	addwfc	((_Temp+1)^(0+128)+6),w
  4822  0493  0020               	movlb	0	; select bank0
  4823  0494  00DE               	movwf	??_setTemp_Main+1
  4824  0495  3F40               	moviw [0]fsr1
  4825  0496  075D               	addwf	??_setTemp_Main,w
  4826  0497  00F4               	movwf	___lwdiv@dividend
  4827  0498  3F41               	moviw [1]fsr1
  4828  0499  3D5E               	addwfc	??_setTemp_Main+1,w
  4829  049A  00F5               	movwf	___lwdiv@dividend+1
  4830  049B  3196  26DF  3184   	fcall	___lwdiv
  4831  049E  0873               	movf	?___lwdiv+1,w
  4832  049F  0020               	movlb	0	; select bank0
  4833  04A0  01E6               	clrf	setTemp_Main@AD+1
  4834  04A1  07E6               	addwf	setTemp_Main@AD+1,f
  4835  04A2  0872               	movf	?___lwdiv,w
  4836  04A3  01E5               	clrf	setTemp_Main@AD
  4837  04A4  07E5               	addwf	setTemp_Main@AD,f
  4838                           
  4839                           ;OverTemperature_B1.c: 105: setOverTemp_ADV_Restore();
  4840  04A5  3194  2478  3184   	fcall	_setOverTemp_ADV_Restore
  4841                           
  4842                           ;OverTemperature_B1.c: 106: if (AD > 0) {
  4843  04A8  0020               	movlb	0	; select bank0
  4844  04A9  0866               	movf	setTemp_Main@AD+1,w
  4845  04AA  3A80               	xorlw	128
  4846  04AB  00DD               	movwf	??_setTemp_Main
  4847  04AC  3080               	movlw	128
  4848  04AD  025D               	subwf	??_setTemp_Main,w
  4849  04AE  1D03               	skipz
  4850  04AF  2CB2               	goto	u7935
  4851  04B0  3001               	movlw	1
  4852  04B1  0265               	subwf	setTemp_Main@AD,w
  4853  04B2                     u7935:	
  4854  04B2  1C03               	skipc
  4855  04B3  0008               	return
  4856                           
  4857                           ;OverTemperature_B1.c: 107: Temp.ADtoGO = 0;
  4858  04B4  0021               	movlb	1	; select bank1
  4859  04B5  1156               	bcf	_Temp^(0+128),2
  4860                           
  4861                           ;OverTemperature_B1.c: 123: SafeValue = 0x205;
  4862  04B6  3005               	movlw	5
  4863  04B7  0020               	movlb	0	; select bank0
  4864  04B8  00E1               	movwf	setTemp_Main@SafeValue
  4865  04B9  3002               	movlw	2
  4866  04BA  00E2               	movwf	setTemp_Main@SafeValue+1
  4867                           
  4868                           ;OverTemperature_B1.c: 124: DangerValue = 0x1ba;
  4869  04BB  30BA               	movlw	186
  4870  04BC  00E3               	movwf	setTemp_Main@DangerValue
  4871  04BD  3001               	movlw	1
  4872  04BE  00E4               	movwf	setTemp_Main@DangerValue+1
  4873                           
  4874                           ;OverTemperature_B1.c: 130: if (Temp.ERROR == 1) {
  4875  04BF  0021               	movlb	1	; select bank1
  4876  04C0  1CD6               	btfss	_Temp^(0+128),1
  4877  04C1  2CE0               	goto	l7072
  4878                           
  4879                           ;OverTemperature_B1.c: 131: if (AD >= SafeValue) {
  4880  04C2  0020               	movlb	0	; select bank0
  4881  04C3  0862               	movf	setTemp_Main@SafeValue+1,w
  4882  04C4  0266               	subwf	setTemp_Main@AD+1,w
  4883  04C5  1D03               	skipz
  4884  04C6  2CC9               	goto	u7955
  4885  04C7  0861               	movf	setTemp_Main@SafeValue,w
  4886  04C8  0265               	subwf	setTemp_Main@AD,w
  4887  04C9                     u7955:	
  4888  04C9  1C03               	skipc
  4889  04CA  2CF5               	goto	l7082
  4890                           
  4891                           ;OverTemperature_B1.c: 132: Temp.Count++;
  4892  04CB  3001               	movlw	1
  4893  04CC  00DD               	movwf	??_setTemp_Main
  4894  04CD  085D               	movf	??_setTemp_Main,w
  4895  04CE  0021               	movlb	1	; select bank1
  4896  04CF  07D9               	addwf	(_Temp^(0+128)+3),f
  4897                           
  4898                           ;OverTemperature_B1.c: 133: if (Temp.Count >= 3) {
  4899  04D0  3003               	movlw	3
  4900  04D1  0259               	subwf	(_Temp^(0+128)+3),w
  4901  04D2  1C03               	skipc
  4902  04D3  2CF7               	goto	l7084
  4903                           
  4904                           ;OverTemperature_B1.c: 134: Temp.Count = 0;
  4905  04D4  01D9               	clrf	(_Temp^(0+128)+3)
  4906                           
  4907                           ;OverTemperature_B1.c: 135: Temp.ERROR = 0;
  4908  04D5  10D6               	bcf	_Temp^(0+128),1
  4909                           
  4910                           ;OverTemperature_B1.c: 136: setBuz(2, 100);
  4911  04D6  3064               	movlw	100
  4912  04D7  0020               	movlb	0	; select bank0
  4913  04D8  00A4               	movwf	setBuz@time
  4914  04D9  3000               	movlw	0
  4915  04DA  00A5               	movwf	setBuz@time+1
  4916  04DB  3002               	movlw	2
  4917  04DC  3189  215C  3184   	fcall	_setBuz
  4918                           
  4919                           ;OverTemperature_B1.c: 137: }
  4920                           ;OverTemperature_B1.c: 138: } else {
  4921  04DF  2CF7               	goto	l7084
  4922  04E0                     l7072:	
  4923                           ;OverTemperature_B1.c: 140: }
  4924                           ;OverTemperature_B1.c: 141: } else {
  4925                           
  4926                           ;OverTemperature_B1.c: 139: Temp.Count = 0;
  4927                           
  4928                           
  4929                           ;OverTemperature_B1.c: 142: if (AD <= DangerValue) {
  4930  04E0  0020               	movlb	0	; select bank0
  4931  04E1  0866               	movf	setTemp_Main@AD+1,w
  4932  04E2  0264               	subwf	setTemp_Main@DangerValue+1,w
  4933  04E3  1D03               	skipz
  4934  04E4  2CE7               	goto	u7975
  4935  04E5  0865               	movf	setTemp_Main@AD,w
  4936  04E6  0263               	subwf	setTemp_Main@DangerValue,w
  4937  04E7                     u7975:	
  4938  04E7  1C03               	skipc
  4939  04E8  2CF5               	goto	l7082
  4940                           
  4941                           ;OverTemperature_B1.c: 143: Temp.Count++;
  4942  04E9  3001               	movlw	1
  4943  04EA  00DD               	movwf	??_setTemp_Main
  4944  04EB  085D               	movf	??_setTemp_Main,w
  4945  04EC  0021               	movlb	1	; select bank1
  4946  04ED  07D9               	addwf	(_Temp^(0+128)+3),f
  4947                           
  4948                           ;OverTemperature_B1.c: 144: if (Temp.Count >= 3) {
  4949  04EE  3003               	movlw	3
  4950  04EF  0259               	subwf	(_Temp^(0+128)+3),w
  4951  04F0  1C03               	skipc
  4952  04F1  2CF7               	goto	l7084
  4953                           
  4954                           ;OverTemperature_B1.c: 145: Temp.Count = 0;
  4955  04F2  01D9               	clrf	(_Temp^(0+128)+3)
  4956                           
  4957                           ;OverTemperature_B1.c: 146: Temp.ERROR = 1;
  4958  04F3  14D6               	bsf	_Temp^(0+128),1
  4959                           
  4960                           ;OverTemperature_B1.c: 147: }
  4961                           ;OverTemperature_B1.c: 148: } else {
  4962  04F4  2CF7               	goto	l7084
  4963  04F5                     l7082:	
  4964                           
  4965                           ;OverTemperature_B1.c: 149: Temp.Count = 0;
  4966  04F5  0021               	movlb	1	; select bank1
  4967  04F6  01D9               	clrf	(_Temp^(0+128)+3)
  4968  04F7                     l7084:	
  4969                           
  4970                           ;OverTemperature_B1.c: 150: }
  4971                           ;OverTemperature_B1.c: 151: }
  4972                           ;OverTemperature_B1.c: 152: setProductData(24, AD >> 8);
  4973  04F7  0020               	movlb	0	; select bank0
  4974  04F8  0866               	movf	setTemp_Main@AD+1,w
  4975  04F9  00DD               	movwf	??_setTemp_Main
  4976  04FA  085D               	movf	??_setTemp_Main,w
  4977  04FB  00DA               	movwf	setProductData@value
  4978  04FC  3018               	movlw	24
  4979  04FD  3192  22A7  3184   	fcall	_setProductData
  4980                           
  4981                           ;OverTemperature_B1.c: 153: setProductData(25, AD);
  4982  0500  0020               	movlb	0	; select bank0
  4983  0501  0865               	movf	setTemp_Main@AD,w
  4984  0502  00DD               	movwf	??_setTemp_Main
  4985  0503  085D               	movf	??_setTemp_Main,w
  4986  0504  00DA               	movwf	setProductData@value
  4987  0505  3019               	movlw	25
  4988  0506  3192  22A7         	fcall	_setProductData
  4989                           
  4990                           ;OverTemperature_B1.c: 169: }
  4991                           ;OverTemperature_B1.c: 170: }
  4992                           ;OverTemperature_B1.c: 171: }
  4993                           ;OverTemperature_B1.c: 174: } else {
  4994  0508  0008               	return
  4995  0509                     l1391:	
  4996                           
  4997                           ;OverTemperature_B1.c: 175: if (myMain.PowerON == 1) {
  4998  0509  1C30               	btfss	_myMain^(0+128),0
  4999  050A  0008               	return
  5000                           
  5001                           ;OverTemperature_B1.c: 176: Temp.Enable = 1;
  5002  050B  1456               	bsf	_Temp^(0+128),0
  5003  050C  0008               	return
  5004  050D                     __end_of_setTemp_Main:	
  5005                           
  5006                           	psect	text10
  5007  1478                     __ptext10:	
  5008 ;; *************** function _setOverTemp_ADV_Restore *****************
  5009 ;; Defined at:
  5010 ;;		line 182 in file "../src/OverTemperature_B1.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;		None
  5013 ;; Auto vars:     Size  Location     Type
  5014 ;;  i               2    3[COMMON] int 
  5015 ;; Return value:  Size  Location     Type
  5016 ;;		None               void
  5017 ;; Registers used:
  5018 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5019 ;; Tracked objects:
  5020 ;;		On entry : 0/0
  5021 ;;		On exit  : 0/0
  5022 ;;		Unchanged: 0/0
  5023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5025 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5026 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5027 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5028 ;;Total ram usage:        3 bytes
  5029 ;; Hardware stack levels used:    1
  5030 ;; Hardware stack levels required when called:    3
  5031 ;; This function calls:
  5032 ;;		Nothing
  5033 ;; This function is called by:
  5034 ;;		_setTemp_Main
  5035 ;; This function uses a non-reentrant model
  5036 ;;
  5037                           
  5038                           
  5039                           ;psect for function _setOverTemp_ADV_Restore
  5040  1478                     _setOverTemp_ADV_Restore:	
  5041                           
  5042                           ;OverTemperature_B1.c: 183: for (int i = 0; i < 5; i++) {
  5043                           
  5044                           ;incstack = 0
  5045                           ; Regs used in _setOverTemp_ADV_Restore: [wreg+fsr1l+fsr1h+status,2+status,0]
  5046  1478  01F3               	clrf	setOverTemp_ADV_Restore@i
  5047  1479  01F4               	clrf	setOverTemp_ADV_Restore@i+1
  5048  147A                     L2:	
  5049  147A  0874               	movf	setOverTemp_ADV_Restore@i+1,w
  5050  147B  3A80               	xorlw	128
  5051  147C  00F2               	movwf	??_setOverTemp_ADV_Restore
  5052  147D  3080               	movlw	128
  5053  147E  0272               	subwf	??_setOverTemp_ADV_Restore,w
  5054  147F  1D03               	skipz
  5055  1480  2C83               	goto	u5005
  5056  1481  3005               	movlw	5
  5057  1482  0273               	subwf	setOverTemp_ADV_Restore@i,w
  5058  1483                     u5005:	
  5059  1483  1803               	btfsc	3,0
  5060  1484  0008               	return
  5061                           
  5062                           ;OverTemperature_B1.c: 184: Temp.ADV[i] = 0;
  5063  1485  3573               	lslf	setOverTemp_ADV_Restore@i,w
  5064  1486  3EDA               	addlw	(_Temp+4)& (0+255)
  5065  1487  0086               	movwf	6
  5066  1488  0187               	clrf	7
  5067  1489  3000               	movlw	0
  5068  148A  3FC0               	movwi [0]fsr1
  5069  148B  3FC1               	movwi [1]fsr1
  5070  148C  3001               	movlw	1
  5071  148D  07F3               	addwf	setOverTemp_ADV_Restore@i,f
  5072  148E  3000               	movlw	0
  5073  148F  3DF4               	addwfc	setOverTemp_ADV_Restore@i+1,f
  5074  1490  2C7A               	goto	L2
  5075  1491                     __end_of_setOverTemp_ADV_Restore:	
  5076                           
  5077                           	psect	text11
  5078  11C4                     __ptext11:	
  5079 ;; *************** function _Temp_Initialization *****************
  5080 ;; Defined at:
  5081 ;;		line 8 in file "../src/OverTemperature_B1.c"
  5082 ;; Parameters:    Size  Location     Type
  5083 ;;		None
  5084 ;; Auto vars:     Size  Location     Type
  5085 ;;		None
  5086 ;; Return value:  Size  Location     Type
  5087 ;;		None               void
  5088 ;; Registers used:
  5089 ;;		status,2, status,0, pclath, cstack
  5090 ;; Tracked objects:
  5091 ;;		On entry : 0/0
  5092 ;;		On exit  : 0/0
  5093 ;;		Unchanged: 0/0
  5094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5099 ;;Total ram usage:        0 bytes
  5100 ;; Hardware stack levels used:    1
  5101 ;; Hardware stack levels required when called:    4
  5102 ;; This function calls:
  5103 ;;		_setTemp_Initialization
  5104 ;; This function is called by:
  5105 ;;		_main
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108                           
  5109                           
  5110                           ;psect for function _Temp_Initialization
  5111  11C4                     _Temp_Initialization:	
  5112                           
  5113                           ;OverTemperature_B1.c: 10: setTemp_Initialization();
  5114                           
  5115                           ;incstack = 0
  5116                           ; Regs used in _Temp_Initialization: [status,2+status,0+pclath+cstack]
  5117  11C4  3191  21BD         	fcall	_setTemp_Initialization
  5118  11C6  0008               	return
  5119  11C7                     __end_of_Temp_Initialization:	
  5120                           
  5121                           	psect	text12
  5122  11BD                     __ptext12:	
  5123 ;; *************** function _setTemp_Initialization *****************
  5124 ;; Defined at:
  5125 ;;		line 60 in file "../src/OverTemperature_B1.c"
  5126 ;; Parameters:    Size  Location     Type
  5127 ;;		None
  5128 ;; Auto vars:     Size  Location     Type
  5129 ;;		None
  5130 ;; Return value:  Size  Location     Type
  5131 ;;		None               void
  5132 ;; Registers used:
  5133 ;;		None
  5134 ;; Tracked objects:
  5135 ;;		On entry : 0/0
  5136 ;;		On exit  : 0/0
  5137 ;;		Unchanged: 0/0
  5138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5143 ;;Total ram usage:        0 bytes
  5144 ;; Hardware stack levels used:    1
  5145 ;; Hardware stack levels required when called:    3
  5146 ;; This function calls:
  5147 ;;		Nothing
  5148 ;; This function is called by:
  5149 ;;		_Temp_Initialization
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           
  5153                           
  5154                           ;psect for function _setTemp_Initialization
  5155  11BD                     _setTemp_Initialization:	
  5156                           
  5157                           ;incstack = 0
  5158                           ; Regs used in _setTemp_Initialization: []
  5159  11BD  0008               	return
  5160  11BE                     __end_of_setTemp_Initialization:	
  5161                           
  5162                           	psect	text13
  5163  1218                     __ptext13:	
  5164 ;; *************** function _Switch_Main *****************
  5165 ;; Defined at:
  5166 ;;		line 76 in file "../src/Switch_B1.c"
  5167 ;; Parameters:    Size  Location     Type
  5168 ;;		None
  5169 ;; Auto vars:     Size  Location     Type
  5170 ;;		None
  5171 ;; Return value:  Size  Location     Type
  5172 ;;		None               void
  5173 ;; Registers used:
  5174 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5175 ;; Tracked objects:
  5176 ;;		On entry : 0/0
  5177 ;;		On exit  : 0/0
  5178 ;;		Unchanged: 0/0
  5179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5184 ;;Total ram usage:        0 bytes
  5185 ;; Hardware stack levels used:    1
  5186 ;; Hardware stack levels required when called:    7
  5187 ;; This function calls:
  5188 ;;		_TouchPower
  5189 ;;		_setSw_Main
  5190 ;; This function is called by:
  5191 ;;		_main
  5192 ;; This function uses a non-reentrant model
  5193 ;;
  5194                           
  5195                           
  5196                           ;psect for function _Switch_Main
  5197  1218                     _Switch_Main:	
  5198                           
  5199                           ;Switch_B1.c: 79: setSw_Main(1);
  5200                           
  5201                           ;incstack = 0
  5202                           ; Regs used in _Switch_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5203  1218  3001               	movlw	1
  5204  1219  3181  21ED  3192   	fcall	_setSw_Main
  5205                           
  5206                           ;Switch_B1.c: 91: TouchPower();
  5207  121C  3194  2463         	fcall	_TouchPower
  5208  121E  0008               	return
  5209  121F                     __end_of_Switch_Main:	
  5210                           
  5211                           	psect	text14
  5212  01ED                     __ptext14:	
  5213 ;; *************** function _setSw_Main *****************
  5214 ;; Defined at:
  5215 ;;		line 117 in file "../src/Switch_B1.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;  sw              1    wreg     unsigned char 
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;  sw              1   11[BANK0 ] unsigned char 
  5220 ;; Return value:  Size  Location     Type
  5221 ;;		None               void
  5222 ;; Registers used:
  5223 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5230 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5231 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5232 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5233 ;;Total ram usage:        3 bytes
  5234 ;; Hardware stack levels used:    1
  5235 ;; Hardware stack levels required when called:    6
  5236 ;; This function calls:
  5237 ;;		_SwPointSelect
  5238 ;;		_getMain_All_Error_Status
  5239 ;;		_getSw_KeyStatus
  5240 ;;		_setDimmerLights_DimmingOn
  5241 ;;		_setDimmerLights_SwOff
  5242 ;;		_setDimmerLights_SwOn
  5243 ;; This function is called by:
  5244 ;;		_Switch_Main
  5245 ;; This function uses a non-reentrant model
  5246 ;;
  5247                           
  5248                           
  5249                           ;psect for function _setSw_Main
  5250  01ED                     _setSw_Main:	
  5251                           
  5252                           ;incstack = 0
  5253                           ; Regs used in _setSw_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5254                           ;setSw_Main@sw stored from wreg
  5255  01ED  0020               	movlb	0	; select bank0
  5256  01EE  00AB               	movwf	setSw_Main@sw
  5257                           
  5258                           ;Switch_B1.c: 118: SwPointSelect(sw);
  5259  01EF  082B               	movf	setSw_Main@sw,w
  5260  01F0  3192  229C  3181   	fcall	_SwPointSelect
  5261                           
  5262                           ;Switch_B1.c: 119: if (Sw->Enable == 1) {
  5263  01F3  0020               	movlb	0	; select bank0
  5264  01F4  086C               	movf	_Sw,w
  5265  01F5  0086               	movwf	6
  5266  01F6  3001               	movlw	1	; select bank2/3
  5267  01F7  0087               	movwf	7
  5268  01F8  1C01               	btfss	1,0
  5269  01F9  2B3C               	goto	l1774
  5270                           
  5271                           ;Switch_B1.c: 121: if (getMain_All_Error_Status(0) == 0) {
  5272  01FA  3000               	movlw	0
  5273  01FB  3196  261F  3181   	fcall	_getMain_All_Error_Status
  5274  01FE  3800               	iorlw	0
  5275  01FF  1D03               	skipz
  5276  0200  2A1C               	goto	l7100
  5277                           
  5278                           ;Switch_B1.c: 122: Sw->Detect = 0;
  5279  0201  0020               	movlb	0	; select bank0
  5280  0202  0A6C               	incf	_Sw,w
  5281  0203  0086               	movwf	6
  5282  0204  3001               	movlw	1	; select bank2/3
  5283  0205  0087               	movwf	7
  5284  0206  1081               	bcf	1,1
  5285                           
  5286                           ;Switch_B1.c: 123: Sw->Touch = getSw_KeyStatus(sw) == 1 ? 1 : 0;
  5287  0207  082B               	movf	setSw_Main@sw,w
  5288  0208  3193  23B3  3181   	fcall	_getSw_KeyStatus
  5289  020B  3A01               	xorlw	1
  5290  020C  3000               	movlw	0
  5291  020D  1903               	skipnz
  5292  020E  3001               	movlw	1
  5293  020F  0020               	movlb	0	; select bank0
  5294  0210  00A9               	movwf	??_setSw_Main
  5295  0211  086C               	movf	_Sw,w
  5296  0212  0086               	movwf	6
  5297  0213  3001               	movlw	1	; select bank2/3
  5298  0214  0087               	movwf	7
  5299  0215  0DA9               	rlf	??_setSw_Main,f
  5300  0216  0801               	movf	1,w
  5301  0217  0629               	xorwf	??_setSw_Main,w
  5302  0218  39FD               	andlw	-3
  5303  0219  0629               	xorwf	??_setSw_Main,w
  5304  021A  0081               	movwf	1
  5305                           
  5306                           ;Switch_B1.c: 124: } else {
  5307  021B  2A32               	goto	l1776
  5308  021C                     l7100:	
  5309                           
  5310                           ;Switch_B1.c: 125: if (Sw->Detect == 0) {
  5311  021C  0020               	movlb	0	; select bank0
  5312  021D  0A6C               	incf	_Sw,w
  5313  021E  0086               	movwf	6
  5314  021F  3001               	movlw	1	; select bank2/3
  5315  0220  0087               	movwf	7
  5316  0221  1881               	btfsc	1,1
  5317  0222  2A32               	goto	l1776
  5318                           
  5319                           ;Switch_B1.c: 126: Sw->Detect = 1;
  5320  0223  0A6C               	incf	_Sw,w
  5321  0224  0086               	movwf	6
  5322  0225  3001               	movlw	1	; select bank2/3
  5323  0226  0087               	movwf	7
  5324  0227  1481               	bsf	1,1
  5325                           
  5326                           ;Switch_B1.c: 128: Sw->Touch = 0;
  5327  0228  086C               	movf	_Sw,w
  5328  0229  0086               	movwf	6
  5329  022A  3001               	movlw	1	; select bank2/3
  5330  022B  0087               	movwf	7
  5331  022C  1081               	bcf	1,1
  5332                           
  5333                           ;Switch_B1.c: 129: Sw->Debounce = 1;
  5334  022D  086C               	movf	_Sw,w
  5335  022E  0086               	movwf	6
  5336  022F  3001               	movlw	1	; select bank2/3
  5337  0230  0087               	movwf	7
  5338  0231  1501               	bsf	1,2
  5339  0232                     l1776:	
  5340                           
  5341                           ;Switch_B1.c: 130: }
  5342                           ;Switch_B1.c: 131: }
  5343                           ;Switch_B1.c: 133: if (Sw->Touch == 1) {
  5344  0232  086C               	movf	_Sw,w
  5345  0233  0086               	movwf	6
  5346  0234  3001               	movlw	1	; select bank2/3
  5347  0235  0087               	movwf	7
  5348  0236  1C81               	btfss	1,1
  5349  0237  2AEE               	goto	l7142
  5350                           
  5351                           ;Switch_B1.c: 134: if (Sw->Debounce == 0) {
  5352  0238  086C               	movf	_Sw,w
  5353  0239  0086               	movwf	6
  5354  023A  3001               	movlw	1	; select bank2/3
  5355  023B  0087               	movwf	7
  5356  023C  1901               	btfsc	1,2
  5357  023D  2A5F               	goto	l7116
  5358                           
  5359                           ;Switch_B1.c: 135: Sw->DebounceTime++;
  5360  023E  3001               	movlw	1
  5361  023F  00A9               	movwf	??_setSw_Main
  5362  0240  086C               	movf	_Sw,w
  5363  0241  3E02               	addlw	2
  5364  0242  0086               	movwf	6
  5365  0243  3001               	movlw	1	; select bank2/3
  5366  0244  0087               	movwf	7
  5367  0245  0829               	movf	??_setSw_Main,w
  5368  0246  0781               	addwf	1,f
  5369                           
  5370                           ;Switch_B1.c: 136: if (Sw->DebounceTime >= (100 / 20)) {
  5371  0247  086C               	movf	_Sw,w
  5372  0248  3E02               	addlw	2
  5373  0249  0086               	movwf	6
  5374  024A  3001               	movlw	1	; select bank2/3
  5375  024B  0087               	movwf	7
  5376  024C  3005               	movlw	5
  5377  024D  0201               	subwf	1,w
  5378  024E  1C03               	skipc
  5379  024F  0008               	return
  5380                           
  5381                           ;Switch_B1.c: 137: Sw->DebounceTime = 0;
  5382  0250  086C               	movf	_Sw,w
  5383  0251  3E02               	addlw	2
  5384  0252  0086               	movwf	6
  5385  0253  3001               	movlw	1	; select bank2/3
  5386  0254  0087               	movwf	7
  5387  0255  0181               	clrf	1
  5388                           
  5389                           ;Switch_B1.c: 138: Sw->Debounce = 1;
  5390  0256  086C               	movf	_Sw,w
  5391  0257  0086               	movwf	6
  5392  0258  3001               	movlw	1	; select bank2/3
  5393  0259  0087               	movwf	7
  5394  025A  1501               	bsf	1,2
  5395                           
  5396                           ;Switch_B1.c: 144: setDimmerLights_SwOn(sw);
  5397  025B  082B               	movf	setSw_Main@sw,w
  5398  025C  3188  20BE         	fcall	_setDimmerLights_SwOn
  5399                           
  5400                           ;Switch_B1.c: 147: }
  5401                           ;Switch_B1.c: 148: } else {
  5402  025E  0008               	return
  5403  025F                     l7116:	
  5404                           
  5405                           ;Switch_B1.c: 149: if (Sw->Hold1 == 0) {
  5406  025F  0020               	movlb	0	; select bank0
  5407  0260  086C               	movf	_Sw,w
  5408  0261  0086               	movwf	6
  5409  0262  3001               	movlw	1	; select bank2/3
  5410  0263  0087               	movwf	7
  5411  0264  1981               	btfsc	1,3
  5412  0265  2A91               	goto	l7126
  5413                           
  5414                           ;Switch_B1.c: 150: Sw->Hold1Time++;
  5415  0266  086C               	movf	_Sw,w
  5416  0267  3E03               	addlw	3
  5417  0268  0086               	movwf	6
  5418  0269  3001               	movlw	1	; select bank2/3
  5419  026A  0087               	movwf	7
  5420  026B  3001               	movlw	1
  5421  026C  0781               	addwf	1,f
  5422  026D  3141               	addfsr 1,1
  5423  026E  1803               	skipnc
  5424  026F  0A81               	incf	1,f
  5425                           
  5426                           ;Switch_B1.c: 151: if (Sw->Hold1Time >= (1500 / 20)) {
  5427  0270  086C               	movf	_Sw,w
  5428  0271  3E03               	addlw	3
  5429  0272  0086               	movwf	6
  5430  0273  3001               	movlw	1	; select bank2/3
  5431  0274  0087               	movwf	7
  5432  0275  3F40               	moviw [0]fsr1
  5433  0276  00A9               	movwf	??_setSw_Main
  5434  0277  3F41               	moviw [1]fsr1
  5435  0278  00AA               	movwf	??_setSw_Main+1
  5436  0279  3000               	movlw	0
  5437  027A  022A               	subwf	??_setSw_Main+1,w
  5438  027B  304B               	movlw	75
  5439  027C  1903               	skipnz
  5440  027D  0229               	subwf	??_setSw_Main,w
  5441  027E  1C03               	skipc
  5442  027F  0008               	return
  5443                           
  5444                           ;Switch_B1.c: 152: Sw->Hold1Time = 0;
  5445  0280  086C               	movf	_Sw,w
  5446  0281  3E03               	addlw	3
  5447  0282  0086               	movwf	6
  5448  0283  3001               	movlw	1	; select bank2/3
  5449  0284  0087               	movwf	7
  5450  0285  3000               	movlw	0
  5451  0286  3FC0               	movwi [0]fsr1
  5452  0287  3FC1               	movwi [1]fsr1
  5453                           
  5454                           ;Switch_B1.c: 153: Sw->Hold1 = 1;
  5455  0288  086C               	movf	_Sw,w
  5456  0289  0086               	movwf	6
  5457  028A  3001               	movlw	1	; select bank2/3
  5458  028B  0087               	movwf	7
  5459  028C  1581               	bsf	1,3
  5460                           
  5461                           ;Switch_B1.c: 159: setDimmerLights_DimmingOn(sw);
  5462  028D  082B               	movf	setSw_Main@sw,w
  5463  028E  3195  25A2         	fcall	_setDimmerLights_DimmingOn
  5464                           
  5465                           ;Switch_B1.c: 162: }
  5466                           ;Switch_B1.c: 163: } else {
  5467  0290  0008               	return
  5468  0291                     l7126:	
  5469                           
  5470                           ;Switch_B1.c: 165: if (Sw->Hold2 == 0) {
  5471  0291  0020               	movlb	0	; select bank0
  5472  0292  086C               	movf	_Sw,w
  5473  0293  0086               	movwf	6
  5474  0294  3001               	movlw	1	; select bank2/3
  5475  0295  0087               	movwf	7
  5476  0296  1A01               	btfsc	1,4
  5477  0297  2AC0               	goto	l7134
  5478                           
  5479                           ;Switch_B1.c: 166: Sw->Hold2Time++;
  5480  0298  086C               	movf	_Sw,w
  5481  0299  3E05               	addlw	5
  5482  029A  0086               	movwf	6
  5483  029B  3001               	movlw	1	; select bank2/3
  5484  029C  0087               	movwf	7
  5485  029D  3001               	movlw	1
  5486  029E  0781               	addwf	1,f
  5487  029F  3141               	addfsr 1,1
  5488  02A0  1803               	skipnc
  5489  02A1  0A81               	incf	1,f
  5490                           
  5491                           ;Switch_B1.c: 167: if (Sw->Hold2Time >= (1500 / 20)) {
  5492  02A2  086C               	movf	_Sw,w
  5493  02A3  3E05               	addlw	5
  5494  02A4  0086               	movwf	6
  5495  02A5  3001               	movlw	1	; select bank2/3
  5496  02A6  0087               	movwf	7
  5497  02A7  3F40               	moviw [0]fsr1
  5498  02A8  00A9               	movwf	??_setSw_Main
  5499  02A9  3F41               	moviw [1]fsr1
  5500  02AA  00AA               	movwf	??_setSw_Main+1
  5501  02AB  3000               	movlw	0
  5502  02AC  022A               	subwf	??_setSw_Main+1,w
  5503  02AD  304B               	movlw	75
  5504  02AE  1903               	skipnz
  5505  02AF  0229               	subwf	??_setSw_Main,w
  5506  02B0  1C03               	skipc
  5507  02B1  0008               	return
  5508                           
  5509                           ;Switch_B1.c: 168: Sw->Hold2Time = 0;
  5510  02B2  086C               	movf	_Sw,w
  5511  02B3  3E05               	addlw	5
  5512  02B4  0086               	movwf	6
  5513  02B5  3001               	movlw	1	; select bank2/3
  5514  02B6  0087               	movwf	7
  5515  02B7  3000               	movlw	0
  5516  02B8  3FC0               	movwi [0]fsr1
  5517  02B9  3FC1               	movwi [1]fsr1
  5518                           
  5519                           ;Switch_B1.c: 169: Sw->Hold2 = 1;
  5520  02BA  086C               	movf	_Sw,w
  5521  02BB  0086               	movwf	6
  5522  02BC  3001               	movlw	1	; select bank2/3
  5523  02BD  0087               	movwf	7
  5524  02BE  1601               	bsf	1,4
  5525                           
  5526                           ;Switch_B1.c: 179: }
  5527                           ;Switch_B1.c: 180: } else {
  5528  02BF  0008               	return
  5529  02C0                     l7134:	
  5530                           
  5531                           ;Switch_B1.c: 181: if (Sw->Hold3 == 0) {
  5532  02C0  086C               	movf	_Sw,w
  5533  02C1  0086               	movwf	6
  5534  02C2  3001               	movlw	1	; select bank2/3
  5535  02C3  0087               	movwf	7
  5536  02C4  1A81               	btfsc	1,5
  5537  02C5  0008               	return
  5538                           
  5539                           ;Switch_B1.c: 182: Sw->Hold3Time++;
  5540  02C6  086C               	movf	_Sw,w
  5541  02C7  3E07               	addlw	7
  5542  02C8  0086               	movwf	6
  5543  02C9  3001               	movlw	1	; select bank2/3
  5544  02CA  0087               	movwf	7
  5545  02CB  3001               	movlw	1
  5546  02CC  0781               	addwf	1,f
  5547  02CD  3141               	addfsr 1,1
  5548  02CE  1803               	skipnc
  5549  02CF  0A81               	incf	1,f
  5550                           
  5551                           ;Switch_B1.c: 183: if (Sw->Hold3Time >= (3000 / 20)) {
  5552  02D0  086C               	movf	_Sw,w
  5553  02D1  3E07               	addlw	7
  5554  02D2  0086               	movwf	6
  5555  02D3  3001               	movlw	1	; select bank2/3
  5556  02D4  0087               	movwf	7
  5557  02D5  3F40               	moviw [0]fsr1
  5558  02D6  00A9               	movwf	??_setSw_Main
  5559  02D7  3F41               	moviw [1]fsr1
  5560  02D8  00AA               	movwf	??_setSw_Main+1
  5561  02D9  3000               	movlw	0
  5562  02DA  022A               	subwf	??_setSw_Main+1,w
  5563  02DB  3096               	movlw	150
  5564  02DC  1903               	skipnz
  5565  02DD  0229               	subwf	??_setSw_Main,w
  5566  02DE  1C03               	skipc
  5567  02DF  0008               	return
  5568                           
  5569                           ;Switch_B1.c: 184: Sw->Hold3Time = 0;
  5570  02E0  086C               	movf	_Sw,w
  5571  02E1  3E07               	addlw	7
  5572  02E2  0086               	movwf	6
  5573  02E3  3001               	movlw	1	; select bank2/3
  5574  02E4  0087               	movwf	7
  5575  02E5  3000               	movlw	0
  5576  02E6  3FC0               	movwi [0]fsr1
  5577  02E7  3FC1               	movwi [1]fsr1
  5578                           
  5579                           ;Switch_B1.c: 185: Sw->Hold3 = 1;
  5580  02E8  086C               	movf	_Sw,w
  5581  02E9  0086               	movwf	6
  5582  02EA  3001               	movlw	1	; select bank2/3
  5583  02EB  0087               	movwf	7
  5584  02EC  1681               	bsf	1,5
  5585                           
  5586                           ;Switch_B1.c: 191: }
  5587                           ;Switch_B1.c: 192: }
  5588                           ;Switch_B1.c: 193: }
  5589                           ;Switch_B1.c: 195: }
  5590                           ;Switch_B1.c: 196: }
  5591                           ;Switch_B1.c: 197: } else {
  5592  02ED  0008               	return
  5593  02EE                     l7142:	
  5594                           
  5595                           ;Switch_B1.c: 198: if (Sw->Debounce == 1) {
  5596  02EE  086C               	movf	_Sw,w
  5597  02EF  0086               	movwf	6
  5598  02F0  3001               	movlw	1	; select bank2/3
  5599  02F1  0087               	movwf	7
  5600  02F2  1D01               	btfss	1,2
  5601  02F3  0008               	return
  5602                           
  5603                           ;Switch_B1.c: 199: Sw->DebounceTime++;
  5604  02F4  3001               	movlw	1
  5605  02F5  00A9               	movwf	??_setSw_Main
  5606  02F6  086C               	movf	_Sw,w
  5607  02F7  3E02               	addlw	2
  5608  02F8  0086               	movwf	6
  5609  02F9  3001               	movlw	1	; select bank2/3
  5610  02FA  0087               	movwf	7
  5611  02FB  0829               	movf	??_setSw_Main,w
  5612  02FC  0781               	addwf	1,f
  5613                           
  5614                           ;Switch_B1.c: 200: if (Sw->DebounceTime >= (100 / 20)) {
  5615  02FD  086C               	movf	_Sw,w
  5616  02FE  3E02               	addlw	2
  5617  02FF  0086               	movwf	6
  5618  0300  3001               	movlw	1	; select bank2/3
  5619  0301  0087               	movwf	7
  5620  0302  3005               	movlw	5
  5621  0303  0201               	subwf	1,w
  5622  0304  1C03               	skipc
  5623  0305  0008               	return
  5624                           
  5625                           ;Switch_B1.c: 201: Sw->DebounceTime = 0;
  5626  0306  086C               	movf	_Sw,w
  5627  0307  3E02               	addlw	2
  5628  0308  0086               	movwf	6
  5629  0309  3001               	movlw	1	; select bank2/3
  5630  030A  0087               	movwf	7
  5631  030B  0181               	clrf	1
  5632                           
  5633                           ;Switch_B1.c: 202: Sw->Debounce = 0;
  5634  030C  086C               	movf	_Sw,w
  5635  030D  0086               	movwf	6
  5636  030E  3001               	movlw	1	; select bank2/3
  5637  030F  0087               	movwf	7
  5638  0310  1101               	bcf	1,2
  5639                           
  5640                           ;Switch_B1.c: 203: Sw->Hold1Time = 0;
  5641  0311  086C               	movf	_Sw,w
  5642  0312  3E03               	addlw	3
  5643  0313  0086               	movwf	6
  5644  0314  3001               	movlw	1	; select bank2/3
  5645  0315  0087               	movwf	7
  5646  0316  3000               	movlw	0
  5647  0317  3FC0               	movwi [0]fsr1
  5648  0318  3FC1               	movwi [1]fsr1
  5649                           
  5650                           ;Switch_B1.c: 204: Sw->Hold1 = 0;
  5651  0319  086C               	movf	_Sw,w
  5652  031A  0086               	movwf	6
  5653  031B  3001               	movlw	1	; select bank2/3
  5654  031C  0087               	movwf	7
  5655  031D  1181               	bcf	1,3
  5656                           
  5657                           ;Switch_B1.c: 206: Sw->Hold2 = 0;
  5658  031E  086C               	movf	_Sw,w
  5659  031F  0086               	movwf	6
  5660  0320  3001               	movlw	1	; select bank2/3
  5661  0321  0087               	movwf	7
  5662  0322  1201               	bcf	1,4
  5663                           
  5664                           ;Switch_B1.c: 207: Sw->Hold3 = 0;
  5665  0323  086C               	movf	_Sw,w
  5666  0324  0086               	movwf	6
  5667  0325  3001               	movlw	1	; select bank2/3
  5668  0326  0087               	movwf	7
  5669  0327  1281               	bcf	1,5
  5670                           
  5671                           ;Switch_B1.c: 208: Sw->Hold2Time = 0;
  5672  0328  086C               	movf	_Sw,w
  5673  0329  3E05               	addlw	5
  5674  032A  0086               	movwf	6
  5675  032B  3001               	movlw	1	; select bank2/3
  5676  032C  0087               	movwf	7
  5677  032D  3000               	movlw	0
  5678  032E  3FC0               	movwi [0]fsr1
  5679  032F  3FC1               	movwi [1]fsr1
  5680                           
  5681                           ;Switch_B1.c: 209: Sw->Hold3Time = 0;
  5682  0330  086C               	movf	_Sw,w
  5683  0331  3E07               	addlw	7
  5684  0332  0086               	movwf	6
  5685  0333  3001               	movlw	1	; select bank2/3
  5686  0334  0087               	movwf	7
  5687  0335  3000               	movlw	0
  5688  0336  3FC0               	movwi [0]fsr1
  5689  0337  3FC1               	movwi [1]fsr1
  5690                           
  5691                           ;Switch_B1.c: 216: setDimmerLights_SwOff(sw);
  5692  0338  082B               	movf	setSw_Main@sw,w
  5693  0339  3197  2785         	fcall	_setDimmerLights_SwOff
  5694                           
  5695                           ;Switch_B1.c: 222: }
  5696                           ;Switch_B1.c: 223: }
  5697                           ;Switch_B1.c: 224: }
  5698                           ;Switch_B1.c: 225: } else {
  5699  033B  0008               	return
  5700  033C                     l1774:	
  5701                           
  5702                           ;Switch_B1.c: 226: if (myMain.PowerON == 1) {
  5703  033C  0021               	movlb	1	; select bank1
  5704  033D  1C30               	btfss	_myMain^(0+128),0
  5705  033E  0008               	return
  5706                           
  5707                           ;Switch_B1.c: 227: Sw->Enable = 1;
  5708  033F  0020               	movlb	0	; select bank0
  5709  0340  086C               	movf	_Sw,w
  5710  0341  0086               	movwf	6
  5711  0342  3001               	movlw	1	; select bank2/3
  5712  0343  0087               	movwf	7
  5713  0344  1401               	bsf	1,0
  5714  0345  0008               	return
  5715  0346                     __end_of_setSw_Main:	
  5716                           
  5717                           	psect	text15
  5718  15A2                     __ptext15:	
  5719 ;; *************** function _setDimmerLights_DimmingOn *****************
  5720 ;; Defined at:
  5721 ;;		line 846 in file "../src/Dimmer_B1.c"
  5722 ;; Parameters:    Size  Location     Type
  5723 ;;  sw              1    wreg     unsigned char 
  5724 ;; Auto vars:     Size  Location     Type
  5725 ;;  sw              1    4[COMMON] unsigned char 
  5726 ;; Return value:  Size  Location     Type
  5727 ;;		None               void
  5728 ;; Registers used:
  5729 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5730 ;; Tracked objects:
  5731 ;;		On entry : 0/0
  5732 ;;		On exit  : 0/0
  5733 ;;		Unchanged: 0/0
  5734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5736 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5738 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5739 ;;Total ram usage:        1 bytes
  5740 ;; Hardware stack levels used:    1
  5741 ;; Hardware stack levels required when called:    4
  5742 ;; This function calls:
  5743 ;;		_DimmerLights_SelectPointer
  5744 ;; This function is called by:
  5745 ;;		_setSw_Main
  5746 ;; This function uses a non-reentrant model
  5747 ;;
  5748                           
  5749                           
  5750                           ;psect for function _setDimmerLights_DimmingOn
  5751  15A2                     _setDimmerLights_DimmingOn:	
  5752                           
  5753                           ;incstack = 0
  5754                           ; Regs used in _setDimmerLights_DimmingOn: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  5755                           ;setDimmerLights_DimmingOn@sw stored from wreg
  5756  15A2  00F4               	movwf	setDimmerLights_DimmingOn@sw
  5757                           
  5758                           ;Dimmer_B1.c: 852: DimmerLights_SelectPointer(sw);
  5759  15A3  0874               	movf	setDimmerLights_DimmingOn@sw,w
  5760  15A4  3192  2270  3195   	fcall	_DimmerLights_SelectPointer
  5761                           
  5762                           ;Dimmer_B1.c: 853: if (DimmerLights->Trigger == 0) {
  5763  15A7  0020               	movlb	0	; select bank0
  5764  15A8  086B               	movf	_DimmerLights,w
  5765  15A9  0086               	movwf	6
  5766  15AA  3001               	movlw	1	; select bank2/3
  5767  15AB  0087               	movwf	7
  5768  15AC  1881               	btfsc	1,1
  5769  15AD  0008               	return
  5770                           
  5771                           ;Dimmer_B1.c: 854: if (DimmerLights->SwFlag == 1) {
  5772  15AE  086B               	movf	_DimmerLights,w
  5773  15AF  0086               	movwf	6
  5774  15B0  3001               	movlw	1	; select bank2/3
  5775  15B1  0087               	movwf	7
  5776  15B2  1C01               	btfss	1,0
  5777  15B3  0008               	return
  5778                           
  5779                           ;Dimmer_B1.c: 855: DimmerLights->Status = 1;
  5780  15B4  0A6B               	incf	_DimmerLights,w
  5781  15B5  0086               	movwf	6
  5782  15B6  3001               	movlw	1	; select bank2/3
  5783  15B7  0087               	movwf	7
  5784  15B8  1401               	bsf	1,0
  5785                           
  5786                           ;Dimmer_B1.c: 857: DimmerLights->DimmingSwFlag = 1;
  5787  15B9  086B               	movf	_DimmerLights,w
  5788  15BA  0086               	movwf	6
  5789  15BB  3001               	movlw	1	; select bank2/3
  5790  15BC  0087               	movwf	7
  5791  15BD  1581               	bsf	1,3
  5792                           
  5793                           ;Dimmer_B1.c: 858: DimmerLights->DimmingTrigger = 1;
  5794  15BE  086B               	movf	_DimmerLights,w
  5795  15BF  0086               	movwf	6
  5796  15C0  3001               	movlw	1	; select bank2/3
  5797  15C1  0087               	movwf	7
  5798  15C2  1601               	bsf	1,4
  5799                           
  5800                           ;Dimmer_B1.c: 859: DimmerLights->DimmingSwitch = 1;
  5801  15C3  086B               	movf	_DimmerLights,w
  5802  15C4  0086               	movwf	6
  5803  15C5  3001               	movlw	1	; select bank2/3
  5804  15C6  0087               	movwf	7
  5805  15C7  1681               	bsf	1,5
  5806  15C8  0008               	return
  5807  15C9                     __end_of_setDimmerLights_DimmingOn:	
  5808                           
  5809                           	psect	text16
  5810  13B3                     __ptext16:	
  5811 ;; *************** function _getSw_KeyStatus *****************
  5812 ;; Defined at:
  5813 ;;		line 238 in file "../src/Switch_B1.c"
  5814 ;; Parameters:    Size  Location     Type
  5815 ;;  sw              1    wreg     unsigned char 
  5816 ;; Auto vars:     Size  Location     Type
  5817 ;;  sw              1    0[COMMON] unsigned char 
  5818 ;;  status          1    3[COMMON] unsigned char 
  5819 ;; Return value:  Size  Location     Type
  5820 ;;                  1    wreg      unsigned char 
  5821 ;; Registers used:
  5822 ;;		wreg, status,2
  5823 ;; Tracked objects:
  5824 ;;		On entry : 0/0
  5825 ;;		On exit  : 0/0
  5826 ;;		Unchanged: 0/0
  5827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5829 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5830 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5831 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5832 ;;Total ram usage:        3 bytes
  5833 ;; Hardware stack levels used:    1
  5834 ;; Hardware stack levels required when called:    3
  5835 ;; This function calls:
  5836 ;;		Nothing
  5837 ;; This function is called by:
  5838 ;;		_setSw_Main
  5839 ;; This function uses a non-reentrant model
  5840 ;;
  5841                           
  5842                           
  5843                           ;psect for function _getSw_KeyStatus
  5844  13B3                     _getSw_KeyStatus:	
  5845                           
  5846                           ;Switch_B1.c: 239: char status = 0;
  5847                           
  5848                           ;incstack = 0
  5849                           ; Regs used in _getSw_KeyStatus: [wreg+status,2]
  5850  13B3  01F3               	clrf	getSw_KeyStatus@status
  5851                           
  5852                           ;Switch_B1.c: 279: status = RA6 == 1 || RA4 == 1 || RA0 == 1 || RA7 == 1 ? 1 : 0;
  5853  13B4  01F4               	clrf	_getSw_KeyStatus$6151
  5854  13B5  0AF4               	incf	_getSw_KeyStatus$6151,f
  5855  13B6  0020               	movlb	0	; select bank0
  5856  13B7  1F0C               	btfss	12,6	;volatile
  5857  13B8  1A0C               	btfsc	12,4	;volatile
  5858  13B9  2BBE               	goto	l5262
  5859  13BA  1C0C               	btfss	12,0	;volatile
  5860  13BB  1B8C               	btfsc	12,7	;volatile
  5861  13BC  2BBE               	goto	l5262
  5862  13BD  01F4               	clrf	_getSw_KeyStatus$6151
  5863  13BE                     l5262:	
  5864  13BE  0874               	movf	_getSw_KeyStatus$6151,w
  5865  13BF  00F2               	movwf	??_getSw_KeyStatus
  5866  13C0  0872               	movf	??_getSw_KeyStatus,w
  5867  13C1  00F3               	movwf	getSw_KeyStatus@status
  5868                           
  5869                           ;Switch_B1.c: 283: return status;
  5870  13C2  0873               	movf	getSw_KeyStatus@status,w
  5871  13C3  0008               	return
  5872  13C4                     __end_of_getSw_KeyStatus:	
  5873                           
  5874                           	psect	text17
  5875  129C                     __ptext17:	
  5876 ;; *************** function _SwPointSelect *****************
  5877 ;; Defined at:
  5878 ;;		line 25 in file "../src/Switch_B1.c"
  5879 ;; Parameters:    Size  Location     Type
  5880 ;;  sw              1    wreg     unsigned char 
  5881 ;; Auto vars:     Size  Location     Type
  5882 ;;  sw              1    3[COMMON] unsigned char 
  5883 ;; Return value:  Size  Location     Type
  5884 ;;		None               void
  5885 ;; Registers used:
  5886 ;;		wreg
  5887 ;; Tracked objects:
  5888 ;;		On entry : 0/0
  5889 ;;		On exit  : 0/0
  5890 ;;		Unchanged: 0/0
  5891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5893 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5894 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5895 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5896 ;;Total ram usage:        2 bytes
  5897 ;; Hardware stack levels used:    1
  5898 ;; Hardware stack levels required when called:    3
  5899 ;; This function calls:
  5900 ;;		Nothing
  5901 ;; This function is called by:
  5902 ;;		_setSw_Main
  5903 ;; This function uses a non-reentrant model
  5904 ;;
  5905                           
  5906                           
  5907                           ;psect for function _SwPointSelect
  5908  129C                     _SwPointSelect:	
  5909                           
  5910                           ;incstack = 0
  5911                           ; Regs used in _SwPointSelect: [wreg]
  5912                           ;SwPointSelect@sw stored from wreg
  5913  129C  00F3               	movwf	SwPointSelect@sw
  5914                           
  5915                           ;Switch_B1.c: 28: if (sw == 1) {
  5916  129D  0873               	movf	SwPointSelect@sw,w
  5917  129E  3A01               	xorlw	1
  5918  129F  1D03               	skipz
  5919  12A0  0008               	return
  5920                           
  5921                           ;Switch_B1.c: 29: Sw = &Sw1;
  5922  12A1  3061               	movlw	_Sw1& (0+255)
  5923  12A2  00F2               	movwf	??_SwPointSelect
  5924  12A3  0872               	movf	??_SwPointSelect,w
  5925  12A4  0020               	movlb	0	; select bank0
  5926  12A5  00EC               	movwf	_Sw
  5927  12A6  0008               	return
  5928  12A7                     __end_of_SwPointSelect:	
  5929                           
  5930                           	psect	text18
  5931  1463                     __ptext18:	
  5932 ;; *************** function _TouchPower *****************
  5933 ;; Defined at:
  5934 ;;		line 10 in file "../src/Switch_B1.c"
  5935 ;; Parameters:    Size  Location     Type
  5936 ;;		None
  5937 ;; Auto vars:     Size  Location     Type
  5938 ;;		None
  5939 ;; Return value:  Size  Location     Type
  5940 ;;		None               void
  5941 ;; Registers used:
  5942 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5943 ;; Tracked objects:
  5944 ;;		On entry : 0/0
  5945 ;;		On exit  : 0/0
  5946 ;;		Unchanged: 0/0
  5947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5952 ;;Total ram usage:        0 bytes
  5953 ;; Hardware stack levels used:    1
  5954 ;; Hardware stack levels required when called:    4
  5955 ;; This function calls:
  5956 ;;		_Timeout_Counter
  5957 ;;		_set_TimeoutCleared
  5958 ;; This function is called by:
  5959 ;;		_Switch_Main
  5960 ;; This function uses a non-reentrant model
  5961 ;;
  5962                           
  5963                           
  5964                           ;psect for function _TouchPower
  5965  1463                     _TouchPower:	
  5966                           
  5967                           ;Switch_B1.c: 11: if (myMain.PowerON == 1) {
  5968                           
  5969                           ;incstack = 0
  5970                           ; Regs used in _TouchPower: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5971  1463  0021               	movlb	1	; select bank1
  5972  1464  1C30               	btfss	_myMain^(0+128),0
  5973  1465  0008               	return
  5974                           
  5975                           ;Switch_B1.c: 12: if (RB0 == 0) {
  5976  1466  0020               	movlb	0	; select bank0
  5977  1467  180D               	btfsc	13,0	;volatile
  5978  1468  0008               	return
  5979  1469  2C6F               	goto	l5754
  5980  146A                     l1754:	
  5981                           ;Switch_B1.c: 13: while (RB0 == 0 && myMain.Timeout == 0) {
  5982                           
  5983                           
  5984                           ;Switch_B1.c: 14: RB0 = 1;
  5985  146A  0020               	movlb	0	; select bank0
  5986  146B  140D               	bsf	13,0	;volatile
  5987                           
  5988                           ;Switch_B1.c: 15: Timeout_Counter();
  5989  146C  3194  244E  3194   	fcall	_Timeout_Counter
  5990  146F                     l5754:	
  5991  146F  0020               	movlb	0	; select bank0
  5992  1470  180D               	btfsc	13,0	;volatile
  5993  1471  2C75               	goto	l5758
  5994  1472  0021               	movlb	1	; select bank1
  5995  1473  1D3A               	btfss	(_myMain^(0+128)+10),2
  5996  1474  2C6A               	goto	l1754
  5997  1475                     l5758:	
  5998                           
  5999                           ;Switch_B1.c: 16: }
  6000                           ;Switch_B1.c: 17: set_TimeoutCleared();
  6001  1475  3187  27FB         	fcall	_set_TimeoutCleared
  6002  1477  0008               	return
  6003  1478                     __end_of_TouchPower:	
  6004                           
  6005                           	psect	text19
  6006  07FB                     __ptext19:	
  6007 ;; *************** function _set_TimeoutCleared *****************
  6008 ;; Defined at:
  6009 ;;		line 286 in file "../src/Main_B1.c"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;		None
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;		None
  6014 ;; Return value:  Size  Location     Type
  6015 ;;		None               void
  6016 ;; Registers used:
  6017 ;;		status,2
  6018 ;; Tracked objects:
  6019 ;;		On entry : 0/0
  6020 ;;		On exit  : 0/0
  6021 ;;		Unchanged: 0/0
  6022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6027 ;;Total ram usage:        0 bytes
  6028 ;; Hardware stack levels used:    1
  6029 ;; Hardware stack levels required when called:    3
  6030 ;; This function calls:
  6031 ;;		Nothing
  6032 ;; This function is called by:
  6033 ;;		_getAD
  6034 ;;		_TouchPower
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           
  6039                           ;psect for function _set_TimeoutCleared
  6040  07FB                     _set_TimeoutCleared:	
  6041                           
  6042                           ;Main_B1.c: 287: myMain.Timeout = 0;
  6043                           
  6044                           ;incstack = 0
  6045                           ; Regs used in _set_TimeoutCleared: [status,2]
  6046  07FB  0021               	movlb	1	; select bank1
  6047  07FC  113A               	bcf	(_myMain^(0+128)+10),2
  6048                           
  6049                           ;Main_B1.c: 288: myMain.Timeout_Counter = 0;
  6050  07FD  01BB               	clrf	(_myMain^(0+128)+11)
  6051  07FE  01BC               	clrf	((_myMain+1)^(0+128)+11)
  6052  07FF  0008               	return
  6053  0800                     __end_of_set_TimeoutCleared:	
  6054                           
  6055                           	psect	text20
  6056  144E                     __ptext20:	
  6057 ;; *************** function _Timeout_Counter *****************
  6058 ;; Defined at:
  6059 ;;		line 277 in file "../src/Main_B1.c"
  6060 ;; Parameters:    Size  Location     Type
  6061 ;;		None
  6062 ;; Auto vars:     Size  Location     Type
  6063 ;;		None
  6064 ;; Return value:  Size  Location     Type
  6065 ;;		None               void
  6066 ;; Registers used:
  6067 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6068 ;; Tracked objects:
  6069 ;;		On entry : 0/0
  6070 ;;		On exit  : 0/0
  6071 ;;		Unchanged: 0/0
  6072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6077 ;;Total ram usage:        0 bytes
  6078 ;; Hardware stack levels used:    1
  6079 ;; Hardware stack levels required when called:    3
  6080 ;; This function calls:
  6081 ;;		Nothing
  6082 ;; This function is called by:
  6083 ;;		_getAD
  6084 ;;		_TouchPower
  6085 ;; This function uses a non-reentrant model
  6086 ;;
  6087                           
  6088                           
  6089                           ;psect for function _Timeout_Counter
  6090  144E                     _Timeout_Counter:	
  6091                           
  6092                           ;Main_B1.c: 278: myMain.Timeout_Counter++;
  6093                           
  6094                           ;incstack = 0
  6095                           ; Regs used in _Timeout_Counter: [wreg+fsr1l+fsr1h+status,2+status,0]
  6096  144E  3001               	movlw	1
  6097  144F  0021               	movlb	1	; select bank1
  6098  1450  07BB               	addwf	(_myMain^(0+128)+11),f
  6099  1451  3000               	movlw	0
  6100  1452  3DBC               	addwfc	((_myMain+1)^(0+128)+11),f
  6101                           
  6102                           ;Main_B1.c: 279: if (myMain.Timeout_Counter == 25000) {
  6103  1453  300B               	movlw	11
  6104  1454  3EB0               	addlw	_myMain& (0+255)
  6105  1455  0086               	movwf	6
  6106  1456  0187               	clrf	7
  6107  1457  3F40               	moviw [0]fsr1
  6108  1458  3AA8               	xorlw	168
  6109  1459  1D03               	skipz
  6110  145A  2C5D               	goto	u4975
  6111  145B  3F41               	moviw [1]fsr1
  6112  145C  3A61               	xorlw	97
  6113  145D                     u4975:	
  6114  145D  1D03               	skipz
  6115  145E  0008               	return
  6116                           
  6117                           ;Main_B1.c: 280: myMain.Timeout_Counter = 0;
  6118  145F  01BB               	clrf	(_myMain^(0+128)+11)
  6119  1460  01BC               	clrf	((_myMain+1)^(0+128)+11)
  6120                           
  6121                           ;Main_B1.c: 281: myMain.Timeout = 1;
  6122  1461  153A               	bsf	(_myMain^(0+128)+10),2
  6123  1462  0008               	return
  6124  1463                     __end_of_Timeout_Counter:	
  6125                           
  6126                           	psect	text21
  6127  11DB                     __ptext21:	
  6128 ;; *************** function _Switch_Initialization *****************
  6129 ;; Defined at:
  6130 ;;		line 46 in file "../src/Switch_B1.c"
  6131 ;; Parameters:    Size  Location     Type
  6132 ;;		None
  6133 ;; Auto vars:     Size  Location     Type
  6134 ;;		None
  6135 ;; Return value:  Size  Location     Type
  6136 ;;		None               void
  6137 ;; Registers used:
  6138 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6139 ;; Tracked objects:
  6140 ;;		On entry : 0/0
  6141 ;;		On exit  : 0/0
  6142 ;;		Unchanged: 0/0
  6143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6148 ;;Total ram usage:        0 bytes
  6149 ;; Hardware stack levels used:    1
  6150 ;; Hardware stack levels required when called:    6
  6151 ;; This function calls:
  6152 ;;		_setSw_Initialization
  6153 ;; This function is called by:
  6154 ;;		_main
  6155 ;; This function uses a non-reentrant model
  6156 ;;
  6157                           
  6158                           
  6159                           ;psect for function _Switch_Initialization
  6160  11DB                     _Switch_Initialization:	
  6161                           
  6162                           ;Switch_B1.c: 52: setSw_Initialization(1);
  6163                           
  6164                           ;incstack = 0
  6165                           ; Regs used in _Switch_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6166  11DB  3001               	movlw	1
  6167  11DC  3193  2327         	fcall	_setSw_Initialization
  6168  11DE  0008               	return
  6169  11DF                     __end_of_Switch_Initialization:	
  6170                           
  6171                           	psect	text22
  6172  1327                     __ptext22:	
  6173 ;; *************** function _setSw_Initialization *****************
  6174 ;; Defined at:
  6175 ;;		line 66 in file "../src/Switch_B1.c"
  6176 ;; Parameters:    Size  Location     Type
  6177 ;;  sw              1    wreg     unsigned char 
  6178 ;; Auto vars:     Size  Location     Type
  6179 ;;  sw              1    6[COMMON] unsigned char 
  6180 ;; Return value:  Size  Location     Type
  6181 ;;		None               void
  6182 ;; Registers used:
  6183 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6184 ;; Tracked objects:
  6185 ;;		On entry : 0/0
  6186 ;;		On exit  : 0/0
  6187 ;;		Unchanged: 0/0
  6188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6190 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6192 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6193 ;;Total ram usage:        1 bytes
  6194 ;; Hardware stack levels used:    1
  6195 ;; Hardware stack levels required when called:    5
  6196 ;; This function calls:
  6197 ;;		_setLED
  6198 ;; This function is called by:
  6199 ;;		_Switch_Initialization
  6200 ;; This function uses a non-reentrant model
  6201 ;;
  6202                           
  6203                           
  6204                           ;psect for function _setSw_Initialization
  6205  1327                     _setSw_Initialization:	
  6206                           
  6207                           ;incstack = 0
  6208                           ; Regs used in _setSw_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6209                           ;setSw_Initialization@sw stored from wreg
  6210  1327  00F6               	movwf	setSw_Initialization@sw
  6211                           
  6212                           ;Switch_B1.c: 68: setLED(sw, 1);
  6213  1328  01F4               	clrf	setLED@command
  6214  1329  0AF4               	incf	setLED@command,f
  6215  132A  0876               	movf	setSw_Initialization@sw,w
  6216  132B  3196  26AA  3193   	fcall	_setLED
  6217                           
  6218                           ;Switch_B1.c: 70: setLED(sw + 1, 1);
  6219  132E  01F4               	clrf	setLED@command
  6220  132F  0AF4               	incf	setLED@command,f
  6221  1330  0876               	movf	setSw_Initialization@sw,w
  6222  1331  3E01               	addlw	1
  6223  1332  3196  26AA         	fcall	_setLED
  6224  1334  0008               	return
  6225  1335                     __end_of_setSw_Initialization:	
  6226                           
  6227                           	psect	text23
  6228  13C4                     __ptext23:	
  6229 ;; *************** function _Mcu_Initialization *****************
  6230 ;; Defined at:
  6231 ;;		line 30 in file "../src/MCU_B1.c"
  6232 ;; Parameters:    Size  Location     Type
  6233 ;;		None
  6234 ;; Auto vars:     Size  Location     Type
  6235 ;;		None
  6236 ;; Return value:  Size  Location     Type
  6237 ;;		None               void
  6238 ;; Registers used:
  6239 ;;		wreg, status,2, status,0, pclath, cstack
  6240 ;; Tracked objects:
  6241 ;;		On entry : 0/0
  6242 ;;		On exit  : 0/0
  6243 ;;		Unchanged: 0/0
  6244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6249 ;;Total ram usage:        0 bytes
  6250 ;; Hardware stack levels used:    1
  6251 ;; Hardware stack levels required when called:    4
  6252 ;; This function calls:
  6253 ;;		_ADC_Set
  6254 ;;		_Fosc_Set
  6255 ;;		_IOC_Set
  6256 ;;		_IO_Set
  6257 ;;		_TMR1_Set
  6258 ;;		_WDT_Set
  6259 ;; This function is called by:
  6260 ;;		_main
  6261 ;; This function uses a non-reentrant model
  6262 ;;
  6263                           
  6264                           
  6265                           ;psect for function _Mcu_Initialization
  6266  13C4                     _Mcu_Initialization:	
  6267                           
  6268                           ;MCU_B1.c: 32: Fosc_Set();
  6269                           
  6270                           ;incstack = 0
  6271                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  6272  13C4  3191  21D7  3193   	fcall	_Fosc_Set
  6273                           
  6274                           ;MCU_B1.c: 34: IO_Set();
  6275  13C7  3194  2491  3193   	fcall	_IO_Set
  6276                           
  6277                           ;MCU_B1.c: 36: ;;
  6278                           ;MCU_B1.c: 38: TMR1_Set();
  6279  13CA  3192  22D7  3193   	fcall	_TMR1_Set
  6280                           
  6281                           ;MCU_B1.c: 40: ADC_Set();
  6282  13CD  3192  2211  3193   	fcall	_ADC_Set
  6283                           
  6284                           ;MCU_B1.c: 42: ;;
  6285                           ;MCU_B1.c: 44: ;;
  6286                           ;MCU_B1.c: 46: IOC_Set();
  6287  13D0  3192  2291  3193   	fcall	_IOC_Set
  6288                           
  6289                           ;MCU_B1.c: 48: ;;
  6290                           ;MCU_B1.c: 50: ;;
  6291                           ;MCU_B1.c: 52: WDT_Set();
  6292  13D3  3192  2252         	fcall	_WDT_Set
  6293  13D5  0008               	return
  6294  13D6                     __end_of_Mcu_Initialization:	
  6295                           
  6296                           	psect	text24
  6297  1252                     __ptext24:	
  6298 ;; *************** function _WDT_Set *****************
  6299 ;; Defined at:
  6300 ;;		line 1107 in file "../src/MCU_B1.c"
  6301 ;; Parameters:    Size  Location     Type
  6302 ;;		None
  6303 ;; Auto vars:     Size  Location     Type
  6304 ;;		None
  6305 ;; Return value:  Size  Location     Type
  6306 ;;		None               void
  6307 ;; Registers used:
  6308 ;;		wreg
  6309 ;; Tracked objects:
  6310 ;;		On entry : 0/0
  6311 ;;		On exit  : 0/0
  6312 ;;		Unchanged: 0/0
  6313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6316 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6317 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6318 ;;Total ram usage:        1 bytes
  6319 ;; Hardware stack levels used:    1
  6320 ;; Hardware stack levels required when called:    3
  6321 ;; This function calls:
  6322 ;;		Nothing
  6323 ;; This function is called by:
  6324 ;;		_Mcu_Initialization
  6325 ;; This function uses a non-reentrant model
  6326 ;;
  6327                           
  6328                           
  6329                           ;psect for function _WDT_Set
  6330  1252                     _WDT_Set:	
  6331                           
  6332                           ;MCU_B1.c: 1114: WDTCON = 0b00010111;;
  6333                           
  6334                           ;incstack = 0
  6335                           ; Regs used in _WDT_Set: [wreg]
  6336  1252  3017               	movlw	23
  6337  1253  0021               	movlb	1	; select bank1
  6338  1254  0097               	movwf	23	;volatile
  6339                           
  6340                           ;MCU_B1.c: 1116: WDT.Enable = 1;
  6341  1255  1451               	bsf	_WDT^(0+128),0
  6342                           
  6343                           ;MCU_B1.c: 1117: WDT.Timer = 10;
  6344  1256  300A               	movlw	10
  6345  1257  00F2               	movwf	??_WDT_Set
  6346  1258  0872               	movf	??_WDT_Set,w
  6347  1259  00D2               	movwf	(_WDT^(0+128)+1)
  6348  125A  0008               	return
  6349  125B                     __end_of_WDT_Set:	
  6350                           
  6351                           	psect	text25
  6352  12D7                     __ptext25:	
  6353 ;; *************** function _TMR1_Set *****************
  6354 ;; Defined at:
  6355 ;;		line 226 in file "../src/MCU_B1.c"
  6356 ;; Parameters:    Size  Location     Type
  6357 ;;		None
  6358 ;; Auto vars:     Size  Location     Type
  6359 ;;		None
  6360 ;; Return value:  Size  Location     Type
  6361 ;;		None               void
  6362 ;; Registers used:
  6363 ;;		wreg
  6364 ;; Tracked objects:
  6365 ;;		On entry : 0/0
  6366 ;;		On exit  : 0/0
  6367 ;;		Unchanged: 0/0
  6368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6373 ;;Total ram usage:        0 bytes
  6374 ;; Hardware stack levels used:    1
  6375 ;; Hardware stack levels required when called:    3
  6376 ;; This function calls:
  6377 ;;		Nothing
  6378 ;; This function is called by:
  6379 ;;		_Mcu_Initialization
  6380 ;; This function uses a non-reentrant model
  6381 ;;
  6382                           
  6383                           
  6384                           ;psect for function _TMR1_Set
  6385  12D7                     _TMR1_Set:	
  6386                           
  6387                           ;MCU_B1.c: 227: T1CON = (0x40 | 0x00 | 0x01);
  6388                           
  6389                           ;incstack = 0
  6390                           ; Regs used in _TMR1_Set: [wreg]
  6391  12D7  3041               	movlw	65
  6392  12D8  0020               	movlb	0	; select bank0
  6393  12D9  0098               	movwf	24	;volatile
  6394                           
  6395                           ;MCU_B1.c: 228: TMR1H = (int)((65536-1480)/256);
  6396  12DA  30FA               	movlw	250
  6397  12DB  0097               	movwf	23	;volatile
  6398                           
  6399                           ;MCU_B1.c: 229: TMR1L = (int)((65536-1480)%256);
  6400  12DC  3038               	movlw	56
  6401  12DD  0096               	movwf	22	;volatile
  6402                           
  6403                           ;MCU_B1.c: 230: TMR1IE = 1;
  6404  12DE  0021               	movlb	1	; select bank1
  6405  12DF  1411               	bsf	17,0	;volatile
  6406                           
  6407                           ;MCU_B1.c: 231: PEIE = 1;
  6408  12E0  170B               	bsf	11,6	;volatile
  6409                           
  6410                           ;MCU_B1.c: 232: GIE = 1;
  6411  12E1  178B               	bsf	11,7	;volatile
  6412  12E2  0008               	return
  6413  12E3                     __end_of_TMR1_Set:	
  6414                           
  6415                           	psect	text26
  6416  1491                     __ptext26:	
  6417 ;; *************** function _IO_Set *****************
  6418 ;; Defined at:
  6419 ;;		line 60 in file "../src/MCU_B1.c"
  6420 ;; Parameters:    Size  Location     Type
  6421 ;;		None
  6422 ;; Auto vars:     Size  Location     Type
  6423 ;;		None
  6424 ;; Return value:  Size  Location     Type
  6425 ;;		None               void
  6426 ;; Registers used:
  6427 ;;		wreg, status,2
  6428 ;; Tracked objects:
  6429 ;;		On entry : 0/0
  6430 ;;		On exit  : 0/0
  6431 ;;		Unchanged: 0/0
  6432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6437 ;;Total ram usage:        0 bytes
  6438 ;; Hardware stack levels used:    1
  6439 ;; Hardware stack levels required when called:    3
  6440 ;; This function calls:
  6441 ;;		Nothing
  6442 ;; This function is called by:
  6443 ;;		_Mcu_Initialization
  6444 ;; This function uses a non-reentrant model
  6445 ;;
  6446                           
  6447                           
  6448                           ;psect for function _IO_Set
  6449  1491                     _IO_Set:	
  6450                           
  6451                           ;MCU_B1.c: 92: TRISA = 0b11110111;;
  6452                           
  6453                           ;incstack = 0
  6454                           ; Regs used in _IO_Set: [wreg+status,2]
  6455  1491  30F7               	movlw	247
  6456  1492  0021               	movlb	1	; select bank1
  6457  1493  008C               	movwf	12	;volatile
  6458                           
  6459                           ;MCU_B1.c: 93: TRISB = 0b00000100;;
  6460  1494  3004               	movlw	4
  6461  1495  008D               	movwf	13	;volatile
  6462                           
  6463                           ;MCU_B1.c: 94: TRISC = 0b00100110;;
  6464  1496  3026               	movlw	38
  6465  1497  008E               	movwf	14	;volatile
  6466                           
  6467                           ;MCU_B1.c: 96: LATA = 0b00000000;;
  6468  1498  0022               	movlb	2	; select bank2
  6469  1499  018C               	clrf	12	;volatile
  6470                           
  6471                           ;MCU_B1.c: 97: LATB = 0b00000000;;
  6472  149A  018D               	clrf	13	;volatile
  6473                           
  6474                           ;MCU_B1.c: 98: LATC = 0b00000000;;
  6475  149B  018E               	clrf	14	;volatile
  6476                           
  6477                           ;MCU_B1.c: 100: ANSELA = 0b00001110;;
  6478  149C  300E               	movlw	14
  6479  149D  0023               	movlb	3	; select bank3
  6480  149E  008C               	movwf	12	;volatile
  6481                           
  6482                           ;MCU_B1.c: 101: ANSELB = 0b00000000;;
  6483  149F  018D               	clrf	13	;volatile
  6484                           
  6485                           ;MCU_B1.c: 102: ANSELC = 0b00000000;;
  6486  14A0  018E               	clrf	14	;volatile
  6487                           
  6488                           ;MCU_B1.c: 104: PORTA = 0b11110111;;
  6489  14A1  30F7               	movlw	247
  6490  14A2  0020               	movlb	0	; select bank0
  6491  14A3  008C               	movwf	12	;volatile
  6492                           
  6493                           ;MCU_B1.c: 105: PORTB = 0b00000100;;
  6494  14A4  3004               	movlw	4
  6495  14A5  008D               	movwf	13	;volatile
  6496                           
  6497                           ;MCU_B1.c: 106: PORTC = 0b00100110;;
  6498  14A6  3026               	movlw	38
  6499  14A7  008E               	movwf	14	;volatile
  6500                           
  6501                           ;MCU_B1.c: 108: WPUB = 0b00000000;;
  6502  14A8  0024               	movlb	4	; select bank4
  6503  14A9  018D               	clrf	13	;volatile
  6504  14AA  0008               	return
  6505  14AB                     __end_of_IO_Set:	
  6506                           
  6507                           	psect	text27
  6508  1291                     __ptext27:	
  6509 ;; *************** function _IOC_Set *****************
  6510 ;; Defined at:
  6511 ;;		line 381 in file "../src/MCU_B1.c"
  6512 ;; Parameters:    Size  Location     Type
  6513 ;;		None
  6514 ;; Auto vars:     Size  Location     Type
  6515 ;;		None
  6516 ;; Return value:  Size  Location     Type
  6517 ;;		None               void
  6518 ;; Registers used:
  6519 ;;		wreg, status,2
  6520 ;; Tracked objects:
  6521 ;;		On entry : 0/0
  6522 ;;		On exit  : 0/0
  6523 ;;		Unchanged: 0/0
  6524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6529 ;;Total ram usage:        0 bytes
  6530 ;; Hardware stack levels used:    1
  6531 ;; Hardware stack levels required when called:    3
  6532 ;; This function calls:
  6533 ;;		Nothing
  6534 ;; This function is called by:
  6535 ;;		_Mcu_Initialization
  6536 ;; This function uses a non-reentrant model
  6537 ;;
  6538                           
  6539                           
  6540                           ;psect for function _IOC_Set
  6541  1291                     _IOC_Set:	
  6542                           
  6543                           ;MCU_B1.c: 383: IOCBP = 0b00000100;;
  6544                           
  6545                           ;incstack = 0
  6546                           ; Regs used in _IOC_Set: [wreg+status,2]
  6547  1291  3004               	movlw	4
  6548  1292  0027               	movlb	7	; select bank7
  6549  1293  0094               	movwf	20	;volatile
  6550                           
  6551                           ;MCU_B1.c: 384: IOCBN = 0b00000100;;
  6552  1294  3004               	movlw	4
  6553  1295  0095               	movwf	21	;volatile
  6554                           
  6555                           ;MCU_B1.c: 386: IOCBF = 0b00000000;
  6556  1296  0196               	clrf	22	;volatile
  6557                           
  6558                           ;MCU_B1.c: 388: IOCIE = 1;
  6559  1297  158B               	bsf	11,3	;volatile
  6560                           
  6561                           ;MCU_B1.c: 389: IOCIF = 0;
  6562  1298  100B               	bcf	11,0	;volatile
  6563                           
  6564                           ;MCU_B1.c: 390: PEIE = 1;
  6565  1299  170B               	bsf	11,6	;volatile
  6566                           
  6567                           ;MCU_B1.c: 391: GIE = 1;
  6568  129A  178B               	bsf	11,7	;volatile
  6569  129B  0008               	return
  6570  129C                     __end_of_IOC_Set:	
  6571                           
  6572                           	psect	text28
  6573  11D7                     __ptext28:	
  6574 ;; *************** function _Fosc_Set *****************
  6575 ;; Defined at:
  6576 ;;		line 56 in file "../src/MCU_B1.c"
  6577 ;; Parameters:    Size  Location     Type
  6578 ;;		None
  6579 ;; Auto vars:     Size  Location     Type
  6580 ;;		None
  6581 ;; Return value:  Size  Location     Type
  6582 ;;		None               void
  6583 ;; Registers used:
  6584 ;;		wreg
  6585 ;; Tracked objects:
  6586 ;;		On entry : 0/0
  6587 ;;		On exit  : 0/0
  6588 ;;		Unchanged: 0/0
  6589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6594 ;;Total ram usage:        0 bytes
  6595 ;; Hardware stack levels used:    1
  6596 ;; Hardware stack levels required when called:    3
  6597 ;; This function calls:
  6598 ;;		Nothing
  6599 ;; This function is called by:
  6600 ;;		_Mcu_Initialization
  6601 ;; This function uses a non-reentrant model
  6602 ;;
  6603                           
  6604                           
  6605                           ;psect for function _Fosc_Set
  6606  11D7                     _Fosc_Set:	
  6607                           
  6608                           ;MCU_B1.c: 57: OSCCON = 0x78;
  6609                           
  6610                           ;incstack = 0
  6611                           ; Regs used in _Fosc_Set: [wreg]
  6612  11D7  3078               	movlw	120
  6613  11D8  0021               	movlb	1	; select bank1
  6614  11D9  0099               	movwf	25	;volatile
  6615  11DA  0008               	return
  6616  11DB                     __end_of_Fosc_Set:	
  6617                           
  6618                           	psect	text29
  6619  1211                     __ptext29:	
  6620 ;; *************** function _ADC_Set *****************
  6621 ;; Defined at:
  6622 ;;		line 429 in file "../src/MCU_B1.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;		None
  6625 ;; Auto vars:     Size  Location     Type
  6626 ;;		None
  6627 ;; Return value:  Size  Location     Type
  6628 ;;		None               void
  6629 ;; Registers used:
  6630 ;;		wreg
  6631 ;; Tracked objects:
  6632 ;;		On entry : 0/0
  6633 ;;		On exit  : 0/0
  6634 ;;		Unchanged: 0/0
  6635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6640 ;;Total ram usage:        0 bytes
  6641 ;; Hardware stack levels used:    1
  6642 ;; Hardware stack levels required when called:    3
  6643 ;; This function calls:
  6644 ;;		Nothing
  6645 ;; This function is called by:
  6646 ;;		_Mcu_Initialization
  6647 ;; This function uses a non-reentrant model
  6648 ;;
  6649                           
  6650                           
  6651                           ;psect for function _ADC_Set
  6652  1211                     _ADC_Set:	
  6653                           
  6654                           ;MCU_B1.c: 430: ADCON1 = 0xf3;
  6655                           
  6656                           ;incstack = 0
  6657                           ; Regs used in _ADC_Set: [wreg]
  6658  1211  30F3               	movlw	243
  6659  1212  0021               	movlb	1	; select bank1
  6660  1213  009E               	movwf	30	;volatile
  6661                           
  6662                           ;MCU_B1.c: 431: FVRCON = 0xc1;
  6663  1214  30C1               	movlw	193
  6664  1215  0022               	movlb	2	; select bank2
  6665  1216  0097               	movwf	23	;volatile
  6666  1217  0008               	return
  6667  1218                     __end_of_ADC_Set:	
  6668                           
  6669                           	psect	text30
  6670  004D                     __ptext30:	
  6671 ;; *************** function _Load_Main *****************
  6672 ;; Defined at:
  6673 ;;		line 40 in file "../src/OverLoad_B1.c"
  6674 ;; Parameters:    Size  Location     Type
  6675 ;;		None
  6676 ;; Auto vars:     Size  Location     Type
  6677 ;;  i               2    8[BANK0 ] int 
  6678 ;;  LightsCount     1    7[BANK0 ] unsigned char 
  6679 ;;  Load_RunStat    1    6[BANK0 ] unsigned char 
  6680 ;;  ErrorCountVa    1    5[BANK0 ] unsigned char 
  6681 ;;  error           1    2[BANK0 ] unsigned char 
  6682 ;; Return value:  Size  Location     Type
  6683 ;;		None               void
  6684 ;; Registers used:
  6685 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6686 ;; Tracked objects:
  6687 ;;		On entry : 0/0
  6688 ;;		On exit  : 0/0
  6689 ;;		Unchanged: 0/0
  6690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6692 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6693 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6694 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6695 ;;Total ram usage:       10 bytes
  6696 ;; Hardware stack levels used:    1
  6697 ;; Hardware stack levels required when called:    4
  6698 ;; This function calls:
  6699 ;;		___lwdiv
  6700 ;;		___wmul
  6701 ;;		_getAll_DimmerIntr_Dimming_Sw_RF
  6702 ;;		_getDimmer_LoadGO
  6703 ;;		_getDimmer_Load_Status
  6704 ;;		_getMain_All_Error_Status
  6705 ;;		_getMain_All_LightsStatus
  6706 ;;		_getMain_Lights_Count
  6707 ;;		_setLoad_AH_AL_Restore
  6708 ;; This function is called by:
  6709 ;;		_main
  6710 ;; This function uses a non-reentrant model
  6711 ;;
  6712                           
  6713                           
  6714                           ;psect for function _Load_Main
  6715  004D                     _Load_Main:	
  6716                           
  6717                           ;OverLoad_B1.c: 41: char error = getMain_All_Error_Status(0);
  6718                           
  6719                           ;incstack = 0
  6720                           ; Regs used in _Load_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6721  004D  3000               	movlw	0
  6722  004E  3196  261F  3180   	fcall	_getMain_All_Error_Status
  6723  0051  0020               	movlb	0	; select bank0
  6724  0052  00A0               	movwf	??_Load_Main
  6725  0053  0820               	movf	??_Load_Main,w
  6726  0054  00A2               	movwf	Load_Main@error
  6727                           
  6728                           ;OverLoad_B1.c: 42: char Load_RunStatus = 0, ErrorCountValue = 0, LightsCount = 0;
  6729  0055  01A6               	clrf	Load_Main@Load_RunStatus
  6730  0056  01A5               	clrf	Load_Main@ErrorCountValue
  6731  0057  01A7               	clrf	Load_Main@LightsCount
  6732                           
  6733                           ;OverLoad_B1.c: 43: if (Load.Enable == 1) {
  6734  0058  0022               	movlb	2	; select bank2
  6735  0059  1C30               	btfss	_Load^(0+256),0
  6736  005A  29E7               	goto	l1245
  6737                           
  6738                           ;OverLoad_B1.c: 45: if (getMain_All_LightsStatus() == 0) {
  6739  005B  3192  221F  3180   	fcall	_getMain_All_LightsStatus
  6740  005E  3800               	iorlw	0
  6741  005F  1D03               	skipz
  6742  0060  2863               	goto	l7296
  6743                           
  6744                           ;OverLoad_B1.c: 46: Load.GO = 0;
  6745  0061  0022               	movlb	2	; select bank2
  6746  0062  2884               	goto	l7314
  6747  0063                     l7296:	
  6748                           ;OverLoad_B1.c: 47: } else {
  6749                           
  6750                           
  6751                           ;OverLoad_B1.c: 50: if (error == 0 && getAll_DimmerIntr_Dimming_Sw_RF() == 0) {
  6752  0063  0020               	movlb	0	; select bank0
  6753  0064  08A2               	movf	Load_Main@error,f
  6754  0065  1D03               	skipz
  6755  0066  2881               	goto	l1248
  6756  0067  3192  222F  3180   	fcall	_getAll_DimmerIntr_Dimming_Sw_RF
  6757  006A  3800               	iorlw	0
  6758  006B  1D03               	skipz
  6759  006C  2881               	goto	l1248
  6760                           
  6761                           ;OverLoad_B1.c: 51: Load.GO = 1;
  6762  006D  0022               	movlb	2	; select bank2
  6763  006E  14B0               	bsf	_Load^(0+256),1
  6764                           
  6765                           ;OverLoad_B1.c: 53: if (getDimmer_LoadGO() == 1) {
  6766  006F  3192  2203  3180   	fcall	_getDimmer_LoadGO
  6767  0072  3A01               	xorlw	1
  6768  0073  1D03               	skipz
  6769  0074  287C               	goto	l1249
  6770                           
  6771                           ;OverLoad_B1.c: 54: if (Load.Run == 0 && Load.OK == 0) {
  6772  0075  0022               	movlb	2	; select bank2
  6773  0076  1DB0               	btfss	_Load^(0+256),3
  6774  0077  1BB0               	btfsc	_Load^(0+256),7
  6775  0078  2885               	goto	l1247
  6776                           
  6777                           ;OverLoad_B1.c: 55: Load.Run = 1;
  6778  0079  15B0               	bsf	_Load^(0+256),3
  6779                           
  6780                           ;OverLoad_B1.c: 56: Load.Count = 0;
  6781  007A  01D5               	clrf	(_Load^(0+256)+37)
  6782                           
  6783                           ;OverLoad_B1.c: 57: }
  6784                           ;OverLoad_B1.c: 58: } else {
  6785  007B  2885               	goto	l1247
  6786  007C                     l1249:	
  6787                           
  6788                           ;OverLoad_B1.c: 59: if (Load.OK == 1) {
  6789  007C  0022               	movlb	2	; select bank2
  6790  007D  1FB0               	btfss	_Load^(0+256),7
  6791  007E  2885               	goto	l1247
  6792                           
  6793                           ;OverLoad_B1.c: 60: Load.OK = 0;
  6794  007F  13B0               	bcf	_Load^(0+256),7
  6795                           
  6796                           ;OverLoad_B1.c: 61: }
  6797                           ;OverLoad_B1.c: 62: }
  6798                           ;OverLoad_B1.c: 63: } else {
  6799  0080  2885               	goto	l1247
  6800  0081                     l1248:	
  6801                           
  6802                           ;OverLoad_B1.c: 64: if (Load.GO == 1) {
  6803  0081  0022               	movlb	2	; select bank2
  6804  0082  1CB0               	btfss	_Load^(0+256),1
  6805  0083  2885               	goto	l1247
  6806  0084                     l7314:	
  6807                           
  6808                           ;OverLoad_B1.c: 65: Load.GO = 0;
  6809  0084  10B0               	bcf	_Load^(0+256),1
  6810  0085                     l1247:	
  6811                           
  6812                           ;OverLoad_B1.c: 66: }
  6813                           ;OverLoad_B1.c: 67: }
  6814                           ;OverLoad_B1.c: 89: }
  6815                           ;OverLoad_B1.c: 92: if (Load.GO == 1) {
  6816  0085  1CB0               	btfss	_Load^(0+256),1
  6817  0086  29C3               	goto	l1255
  6818                           
  6819                           ;OverLoad_B1.c: 93: Load.LightsON = 1;
  6820  0087  1530               	bsf	_Load^(0+256),2
  6821                           
  6822                           ;OverLoad_B1.c: 95: if (Load.ADtoGO == 1) {
  6823  0088  1E30               	btfss	_Load^(0+256),4
  6824  0089  29C1               	goto	l1256
  6825                           
  6826                           ;OverLoad_B1.c: 96: Load.Time++;
  6827  008A  3001               	movlw	1
  6828  008B  07B1               	addwf	(_Load^(0+256)+1),f
  6829  008C  3000               	movlw	0
  6830  008D  3DB2               	addwfc	((_Load+1)^(0+256)+1),f
  6831                           
  6832                           ;OverLoad_B1.c: 97: if (Load.Time >= (40 / 20)) {
  6833  008E  3000               	movlw	0
  6834  008F  0232               	subwf	((_Load+1)^(0+256)+1),w
  6835  0090  3002               	movlw	2
  6836  0091  1903               	skipnz
  6837  0092  0231               	subwf	(_Load^(0+256)+1),w
  6838  0093  1C03               	skipc
  6839  0094  0008               	return
  6840                           
  6841                           ;OverLoad_B1.c: 98: Load.Time = 0;
  6842  0095  01B1               	clrf	(_Load^(0+256)+1)
  6843  0096  01B2               	clrf	((_Load+1)^(0+256)+1)
  6844                           
  6845                           ;OverLoad_B1.c: 99: Load.ADtoGO = 0;
  6846  0097  1230               	bcf	_Load^(0+256),4
  6847                           
  6848                           ;OverLoad_B1.c: 101: for (int i = 1; i < 4; i++) {
  6849  0098  3001               	movlw	1
  6850  0099  0020               	movlb	0	; select bank0
  6851  009A  00A8               	movwf	Load_Main@i
  6852  009B  3000               	movlw	0
  6853  009C  00A9               	movwf	Load_Main@i+1
  6854  009D  0829               	movf	Load_Main@i+1,w
  6855  009E  3A80               	xorlw	128
  6856  009F  00A0               	movwf	??_Load_Main
  6857  00A0  3080               	movlw	128
  6858  00A1  0220               	subwf	??_Load_Main,w
  6859  00A2  1D03               	skipz
  6860  00A3  28A6               	goto	u8465
  6861  00A4  3004               	movlw	4
  6862  00A5  0228               	subwf	Load_Main@i,w
  6863  00A6                     u8465:	
  6864  00A6  1803               	btfsc	3,0
  6865  00A7  28DA               	goto	l7336
  6866  00A8                     l7330:	
  6867                           
  6868                           ;OverLoad_B1.c: 102: Load.ADH += Load.AH[i];
  6869  00A8  0020               	movlb	0	; select bank0
  6870  00A9  3528               	lslf	Load_Main@i,w
  6871  00AA  3E3B               	addlw	(_Load+11)& (0+255)
  6872  00AB  0086               	movwf	6
  6873  00AC  3001               	movlw	1	; select bank2/3
  6874  00AD  0087               	movwf	7
  6875  00AE  3F40               	moviw [0]fsr1
  6876  00AF  00A0               	movwf	??_Load_Main
  6877  00B0  3F41               	moviw [1]fsr1
  6878  00B1  00A1               	movwf	??_Load_Main+1
  6879  00B2  0820               	movf	??_Load_Main,w
  6880  00B3  0022               	movlb	2	; select bank2
  6881  00B4  07B5               	addwf	(_Load^(0+256)+5),f
  6882  00B5  0020               	movlb	0	; select bank0
  6883  00B6  0821               	movf	??_Load_Main+1,w
  6884  00B7  0022               	movlb	2	; select bank2
  6885  00B8  3DB6               	addwfc	((_Load+1)^(0+256)+5),f
  6886                           
  6887                           ;OverLoad_B1.c: 103: Load.ADL += Load.AL[i];
  6888  00B9  0020               	movlb	0	; select bank0
  6889  00BA  3528               	lslf	Load_Main@i,w
  6890  00BB  3E45               	addlw	(_Load+21)& (0+255)
  6891  00BC  0086               	movwf	6
  6892  00BD  3001               	movlw	1	; select bank2/3
  6893  00BE  0087               	movwf	7
  6894  00BF  3F40               	moviw [0]fsr1
  6895  00C0  00A0               	movwf	??_Load_Main
  6896  00C1  3F41               	moviw [1]fsr1
  6897  00C2  00A1               	movwf	??_Load_Main+1
  6898  00C3  0820               	movf	??_Load_Main,w
  6899  00C4  0022               	movlb	2	; select bank2
  6900  00C5  07B7               	addwf	(_Load^(0+256)+7),f
  6901  00C6  0020               	movlb	0	; select bank0
  6902  00C7  0821               	movf	??_Load_Main+1,w
  6903  00C8  0022               	movlb	2	; select bank2
  6904  00C9  3DB8               	addwfc	((_Load+1)^(0+256)+7),f
  6905  00CA  3001               	movlw	1
  6906  00CB  0020               	movlb	0	; select bank0
  6907  00CC  07A8               	addwf	Load_Main@i,f
  6908  00CD  3000               	movlw	0
  6909  00CE  3DA9               	addwfc	Load_Main@i+1,f
  6910  00CF  0829               	movf	Load_Main@i+1,w
  6911  00D0  3A80               	xorlw	128
  6912  00D1  00A0               	movwf	??_Load_Main
  6913  00D2  3080               	movlw	128
  6914  00D3  0220               	subwf	??_Load_Main,w
  6915  00D4  1D03               	skipz
  6916  00D5  28D8               	goto	u8475
  6917  00D6  3004               	movlw	4
  6918  00D7  0228               	subwf	Load_Main@i,w
  6919  00D8                     u8475:	
  6920  00D8  1C03               	skipc
  6921  00D9  28A8               	goto	l7330
  6922  00DA                     l7336:	
  6923                           
  6924                           ;OverLoad_B1.c: 104: }
  6925                           ;OverLoad_B1.c: 105: Load.ADH /= 3;
  6926  00DA  3003               	movlw	3
  6927  00DB  00F2               	movwf	___lwdiv@divisor
  6928  00DC  3000               	movlw	0
  6929  00DD  00F3               	movwf	___lwdiv@divisor+1
  6930  00DE  0022               	movlb	2	; select bank2
  6931  00DF  0836               	movf	((_Load+1)^(0+256)+5),w
  6932  00E0  01F5               	clrf	___lwdiv@dividend+1
  6933  00E1  07F5               	addwf	___lwdiv@dividend+1,f
  6934  00E2  0835               	movf	(_Load^(0+256)+5),w
  6935  00E3  01F4               	clrf	___lwdiv@dividend
  6936  00E4  07F4               	addwf	___lwdiv@dividend,f
  6937  00E5  3196  26DF  3180   	fcall	___lwdiv
  6938  00E8  0873               	movf	?___lwdiv+1,w
  6939  00E9  0022               	movlb	2	; select bank2
  6940  00EA  01B6               	clrf	((_Load+1)^(0+256)+5)
  6941  00EB  07B6               	addwf	((_Load+1)^(0+256)+5),f
  6942  00EC  0872               	movf	?___lwdiv,w
  6943  00ED  01B5               	clrf	(_Load^(0+256)+5)
  6944  00EE  07B5               	addwf	(_Load^(0+256)+5),f
  6945                           
  6946                           ;OverLoad_B1.c: 106: Load.ADL /= 3;
  6947  00EF  3003               	movlw	3
  6948  00F0  00F2               	movwf	___lwdiv@divisor
  6949  00F1  3000               	movlw	0
  6950  00F2  00F3               	movwf	___lwdiv@divisor+1
  6951  00F3  0838               	movf	((_Load+1)^(0+256)+7),w
  6952  00F4  01F5               	clrf	___lwdiv@dividend+1
  6953  00F5  07F5               	addwf	___lwdiv@dividend+1,f
  6954  00F6  0837               	movf	(_Load^(0+256)+7),w
  6955  00F7  01F4               	clrf	___lwdiv@dividend
  6956  00F8  07F4               	addwf	___lwdiv@dividend,f
  6957  00F9  3196  26DF  3180   	fcall	___lwdiv
  6958  00FC  0873               	movf	?___lwdiv+1,w
  6959  00FD  0022               	movlb	2	; select bank2
  6960  00FE  01B8               	clrf	((_Load+1)^(0+256)+7)
  6961  00FF  07B8               	addwf	((_Load+1)^(0+256)+7),f
  6962  0100  0872               	movf	?___lwdiv,w
  6963  0101  01B7               	clrf	(_Load^(0+256)+7)
  6964  0102  07B7               	addwf	(_Load^(0+256)+7),f
  6965                           
  6966                           ;OverLoad_B1.c: 108: setLoad_AH_AL_Restore();
  6967  0103  3194  24C5  3180   	fcall	_setLoad_AH_AL_Restore
  6968                           
  6969                           ;OverLoad_B1.c: 110: if (Load.ADH >= Load.ADL) {
  6970  0106  0022               	movlb	2	; select bank2
  6971  0107  0838               	movf	((_Load+1)^(0+256)+7),w
  6972  0108  0236               	subwf	((_Load+1)^(0+256)+5),w
  6973  0109  1D03               	skipz
  6974  010A  290D               	goto	u8485
  6975  010B  0837               	movf	(_Load^(0+256)+7),w
  6976  010C  0235               	subwf	(_Load^(0+256)+5),w
  6977  010D                     u8485:	
  6978  010D  1C03               	skipc
  6979  010E  0008               	return
  6980                           
  6981                           ;OverLoad_B1.c: 111: Load.AD = Load.ADH - Load.ADL;
  6982  010F  3005               	movlw	5
  6983  0110  3E30               	addlw	_Load& (0+255)
  6984  0111  0086               	movwf	6
  6985  0112  3001               	movlw	1	; select bank2/3
  6986  0113  0087               	movwf	7
  6987  0114  0937               	comf	(_Load^(0+256)+7),w
  6988  0115  0020               	movlb	0	; select bank0
  6989  0116  00A0               	movwf	??_Load_Main
  6990  0117  0022               	movlb	2	; select bank2
  6991  0118  0938               	comf	((_Load+1)^(0+256)+7),w
  6992  0119  0020               	movlb	0	; select bank0
  6993  011A  00A1               	movwf	??_Load_Main+1
  6994  011B  0AA0               	incf	??_Load_Main,f
  6995  011C  1903               	skipnz
  6996  011D  0AA1               	incf	??_Load_Main+1,f
  6997  011E  3F40               	moviw [0]fsr1
  6998  011F  0720               	addwf	??_Load_Main,w
  6999  0120  0022               	movlb	2	; select bank2
  7000  0121  00CF               	movwf	(_Load^(0+256)+31)
  7001  0122  3F41               	moviw [1]fsr1
  7002  0123  0020               	movlb	0	; select bank0
  7003  0124  3D21               	addwfc	??_Load_Main+1,w
  7004  0125  0022               	movlb	2	; select bank2
  7005  0126  00D0               	movwf	(_Load^(0+256)+32)
  7006                           
  7007                           ;OverLoad_B1.c: 112: Load.ADH = 0;
  7008  0127  01B5               	clrf	(_Load^(0+256)+5)
  7009  0128  01B6               	clrf	((_Load+1)^(0+256)+5)
  7010                           
  7011                           ;OverLoad_B1.c: 113: Load.ADL = 0;
  7012  0129  01B7               	clrf	(_Load^(0+256)+7)
  7013  012A  01B8               	clrf	((_Load+1)^(0+256)+7)
  7014                           
  7015                           ;OverLoad_B1.c: 115: if (Load.Run == 1) {
  7016  012B  1DB0               	btfss	_Load^(0+256),3
  7017  012C  2983               	goto	l7376
  7018                           
  7019                           ;OverLoad_B1.c: 116: if (Load.Count < 2) {
  7020  012D  3002               	movlw	2
  7021  012E  0255               	subwf	(_Load^(0+256)+37),w
  7022  012F  1803               	skipnc
  7023  0130  2983               	goto	l7376
  7024                           
  7025                           ;OverLoad_B1.c: 117: Load.Count++;
  7026  0131  3001               	movlw	1
  7027  0132  0020               	movlb	0	; select bank0
  7028  0133  00A0               	movwf	??_Load_Main
  7029  0134  0820               	movf	??_Load_Main,w
  7030  0135  0022               	movlb	2	; select bank2
  7031  0136  07D5               	addwf	(_Load^(0+256)+37),f
  7032                           
  7033                           ;OverLoad_B1.c: 119: Load_RunStatus = getDimmer_Load_Status();
  7034  0137  3192  220A  3180   	fcall	_getDimmer_Load_Status
  7035  013A  0020               	movlb	0	; select bank0
  7036  013B  00A0               	movwf	??_Load_Main
  7037  013C  0820               	movf	??_Load_Main,w
  7038  013D  00A6               	movwf	Load_Main@Load_RunStatus
  7039                           
  7040                           ;OverLoad_B1.c: 124: LightsCount = getMain_Lights_Count();
  7041  013E  3192  22CB  3180   	fcall	_getMain_Lights_Count
  7042  0141  0020               	movlb	0	; select bank0
  7043  0142  00A0               	movwf	??_Load_Main
  7044  0143  0820               	movf	??_Load_Main,w
  7045  0144  00A7               	movwf	Load_Main@LightsCount
  7046                           
  7047                           ;OverLoad_B1.c: 126: if (Load.Count == 1) {
  7048  0145  0022               	movlb	2	; select bank2
  7049  0146  0855               	movf	(_Load^(0+256)+37),w
  7050  0147  3A01               	xorlw	1
  7051  0148  1D03               	skipz
  7052  0149  294E               	goto	l7362
  7053                           
  7054                           ;OverLoad_B1.c: 128: Load.JudgeValue = (20*65);
  7055  014A  3014               	movlw	20
  7056  014B  00D3               	movwf	(_Load^(0+256)+35)
  7057  014C  3005               	movlw	5
  7058  014D  295B               	goto	L3
  7059  014E                     l7362:	
  7060                           ;OverLoad_B1.c: 129: } else if (Load.Count == 2) {
  7061                           
  7062  014E  0855               	movf	(_Load^(0+256)+37),w
  7063  014F  3A02               	xorlw	2
  7064  0150  1D03               	skipz
  7065  0151  2983               	goto	l7376
  7066                           
  7067                           ;OverLoad_B1.c: 130: if (LightsCount == 1) {
  7068  0152  0020               	movlb	0	; select bank0
  7069  0153  0827               	movf	Load_Main@LightsCount,w
  7070  0154  3A01               	xorlw	1
  7071  0155  1D03               	skipz
  7072  0156  295D               	goto	l7368
  7073                           
  7074                           ;OverLoad_B1.c: 131: Load.JudgeValue = (int)(1.8*65);
  7075  0157  3075               	movlw	117
  7076  0158  0022               	movlb	2	; select bank2
  7077  0159  00D3               	movwf	(_Load^(0+256)+35)
  7078  015A  3000               	movlw	0
  7079  015B                     L3:	
  7080  015B  00D4               	movwf	(_Load^(0+256)+36)
  7081                           
  7082                           ;OverLoad_B1.c: 132: } else {
  7083  015C  2983               	goto	l7376
  7084  015D                     l7368:	
  7085                           
  7086                           ;OverLoad_B1.c: 133: if (Load_RunStatus == 0) {
  7087  015D  0020               	movlb	0	; select bank0
  7088  015E  08A6               	movf	Load_Main@Load_RunStatus,f
  7089  015F  1D03               	skipz
  7090  0160  2977               	goto	l7372
  7091                           
  7092                           ;OverLoad_B1.c: 134: Load.JudgeValue = (int)(1.8*65) * LightsCount;
  7093  0161  0827               	movf	Load_Main@LightsCount,w
  7094  0162  00A0               	movwf	??_Load_Main
  7095  0163  01A1               	clrf	??_Load_Main+1
  7096  0164  0820               	movf	??_Load_Main,w
  7097  0165  00F2               	movwf	___wmul@multiplier
  7098  0166  0821               	movf	??_Load_Main+1,w
  7099  0167  00F3               	movwf	___wmul@multiplier+1
  7100  0168  3075               	movlw	117
  7101  0169  00F4               	movwf	___wmul@multiplicand
  7102  016A  3000               	movlw	0
  7103  016B  00F5               	movwf	___wmul@multiplicand+1
  7104  016C  3194  24E0  3180   	fcall	___wmul
  7105  016F  0873               	movf	?___wmul+1,w
  7106  0170  0022               	movlb	2	; select bank2
  7107  0171  01D4               	clrf	((_Load+1)^(0+256)+35)
  7108  0172  07D4               	addwf	((_Load+1)^(0+256)+35),f
  7109  0173  0872               	movf	?___wmul,w
  7110  0174  01D3               	clrf	(_Load^(0+256)+35)
  7111  0175  07D3               	addwf	(_Load^(0+256)+35),f
  7112                           
  7113                           ;OverLoad_B1.c: 135: } else if (Load_RunStatus == 1) {
  7114  0176  2983               	goto	l7376
  7115  0177                     l7372:	
  7116  0177  0020               	movlb	0	; select bank0
  7117  0178  0826               	movf	Load_Main@Load_RunStatus,w
  7118  0179  3A01               	xorlw	1
  7119  017A  1D03               	skipz
  7120  017B  2983               	goto	l7376
  7121                           
  7122                           ;OverLoad_B1.c: 136: Load.JudgeValue = (int)(1.8*65) + Load.TotalLoad;
  7123  017C  0022               	movlb	2	; select bank2
  7124  017D  0839               	movf	(_Load^(0+256)+9),w
  7125  017E  3E75               	addlw	117
  7126  017F  00D3               	movwf	(_Load^(0+256)+35)
  7127  0180  3000               	movlw	0
  7128  0181  3D3A               	addwfc	((_Load+1)^(0+256)+9),w
  7129  0182  00D4               	movwf	((_Load+1)^(0+256)+35)
  7130  0183                     l7376:	
  7131                           
  7132                           ;OverLoad_B1.c: 137: }
  7133                           ;OverLoad_B1.c: 138: }
  7134                           ;OverLoad_B1.c: 139: }
  7135                           ;OverLoad_B1.c: 140: }
  7136                           ;OverLoad_B1.c: 141: }
  7137                           ;OverLoad_B1.c: 143: if (Load.AD >= Load.JudgeValue) {
  7138  0183  0022               	movlb	2	; select bank2
  7139  0184  0854               	movf	((_Load+1)^(0+256)+35),w
  7140  0185  0250               	subwf	((_Load+1)^(0+256)+31),w
  7141  0186  1D03               	skipz
  7142  0187  298A               	goto	u8565
  7143  0188  0853               	movf	(_Load^(0+256)+35),w
  7144  0189  024F               	subwf	(_Load^(0+256)+31),w
  7145  018A                     u8565:	
  7146  018A  1C03               	skipc
  7147  018B  29A9               	goto	l7392
  7148                           
  7149                           ;OverLoad_B1.c: 144: ErrorCountValue = LightsCount == 1 ? 2 : 3;
  7150  018C  0020               	movlb	0	; select bank0
  7151  018D  0827               	movf	Load_Main@LightsCount,w
  7152  018E  3A01               	xorlw	1
  7153  018F  1903               	skipnz
  7154  0190  2993               	goto	l7382
  7155  0191  3003               	movlw	3
  7156  0192  2994               	goto	L4
  7157  0193                     l7382:	
  7158  0193  3002               	movlw	2
  7159  0194                     L4:	
  7160  0194  00A3               	movwf	_Load_Main$3845
  7161  0195  3000               	movlw	0
  7162  0196  00A4               	movwf	_Load_Main$3845+1
  7163  0197  0823               	movf	_Load_Main$3845,w
  7164  0198  00A0               	movwf	??_Load_Main
  7165  0199  0820               	movf	??_Load_Main,w
  7166  019A  00A5               	movwf	Load_Main@ErrorCountValue
  7167                           
  7168                           ;OverLoad_B1.c: 145: Load.ErrorCount++;
  7169  019B  3001               	movlw	1
  7170  019C  00A0               	movwf	??_Load_Main
  7171  019D  0820               	movf	??_Load_Main,w
  7172  019E  0022               	movlb	2	; select bank2
  7173  019F  07D6               	addwf	(_Load^(0+256)+38),f
  7174                           
  7175                           ;OverLoad_B1.c: 146: if (Load.ErrorCount > ErrorCountValue) {
  7176  01A0  0856               	movf	(_Load^(0+256)+38),w
  7177  01A1  0020               	movlb	0	; select bank0
  7178  01A2  0225               	subwf	Load_Main@ErrorCountValue,w
  7179  01A3  1803               	skipnc
  7180  01A4  0008               	return
  7181                           
  7182                           ;OverLoad_B1.c: 147: Load.ErrorCount = 0;
  7183  01A5  0022               	movlb	2	; select bank2
  7184  01A6  01D6               	clrf	(_Load^(0+256)+38)
  7185                           
  7186                           ;OverLoad_B1.c: 148: Load.ERROR = 1;
  7187  01A7  16B0               	bsf	_Load^(0+256),5
  7188                           
  7189                           ;OverLoad_B1.c: 170: }
  7190                           ;OverLoad_B1.c: 171: } else {
  7191  01A8  0008               	return
  7192  01A9                     l7392:	
  7193                           
  7194                           ;OverLoad_B1.c: 172: Load.ErrorCount = 0;
  7195  01A9  01D6               	clrf	(_Load^(0+256)+38)
  7196                           
  7197                           ;OverLoad_B1.c: 173: if (Load.Run == 1) {
  7198  01AA  1DB0               	btfss	_Load^(0+256),3
  7199  01AB  0008               	return
  7200                           
  7201                           ;OverLoad_B1.c: 174: Load.SafeCount++;
  7202  01AC  3001               	movlw	1
  7203  01AD  0020               	movlb	0	; select bank0
  7204  01AE  00A0               	movwf	??_Load_Main
  7205  01AF  0820               	movf	??_Load_Main,w
  7206  01B0  0022               	movlb	2	; select bank2
  7207  01B1  07D7               	addwf	(_Load^(0+256)+39),f
  7208                           
  7209                           ;OverLoad_B1.c: 175: if (Load.SafeCount >= 3) {
  7210  01B2  3003               	movlw	3
  7211  01B3  0257               	subwf	(_Load^(0+256)+39),w
  7212  01B4  1C03               	skipc
  7213  01B5  0008               	return
  7214                           
  7215                           ;OverLoad_B1.c: 176: Load.SafeCount = 0;
  7216  01B6  01D7               	clrf	(_Load^(0+256)+39)
  7217                           
  7218                           ;OverLoad_B1.c: 177: Load.OK = 1;
  7219  01B7  17B0               	bsf	_Load^(0+256),7
  7220                           
  7221                           ;OverLoad_B1.c: 178: Load.Run = 0;
  7222  01B8  11B0               	bcf	_Load^(0+256),3
  7223                           
  7224                           ;OverLoad_B1.c: 179: Load.Count = 0;
  7225  01B9  01D5               	clrf	(_Load^(0+256)+37)
  7226                           
  7227                           ;OverLoad_B1.c: 180: Load.TotalLoad = Load.AD;
  7228  01BA  0850               	movf	((_Load+1)^(0+256)+31),w
  7229  01BB  01BA               	clrf	((_Load+1)^(0+256)+9)
  7230  01BC  07BA               	addwf	((_Load+1)^(0+256)+9),f
  7231  01BD  084F               	movf	(_Load^(0+256)+31),w
  7232  01BE  01B9               	clrf	(_Load^(0+256)+9)
  7233  01BF  07B9               	addwf	(_Load^(0+256)+9),f
  7234                           
  7235                           ;OverLoad_B1.c: 184: }
  7236                           ;OverLoad_B1.c: 185: }
  7237                           ;OverLoad_B1.c: 208: }
  7238                           ;OverLoad_B1.c: 209: }
  7239                           ;OverLoad_B1.c: 210: }
  7240                           ;OverLoad_B1.c: 211: } else {
  7241  01C0  0008               	return
  7242  01C1                     l1256:	
  7243                           
  7244                           ;OverLoad_B1.c: 212: Load.ADtoGO = 1;
  7245  01C1  1630               	bsf	_Load^(0+256),4
  7246                           
  7247                           ;OverLoad_B1.c: 213: }
  7248                           ;OverLoad_B1.c: 214: } else {
  7249  01C2  0008               	return
  7250  01C3                     l1255:	
  7251                           
  7252                           ;OverLoad_B1.c: 216: if (Load.LightsON == 1) {
  7253  01C3  1D30               	btfss	_Load^(0+256),2
  7254  01C4  29D6               	goto	l7428
  7255                           
  7256                           ;OverLoad_B1.c: 217: Load.LightsON = 0;
  7257  01C5  1130               	bcf	_Load^(0+256),2
  7258                           
  7259                           ;OverLoad_B1.c: 219: Load.ADtoGO = 0;
  7260  01C6  1230               	bcf	_Load^(0+256),4
  7261                           
  7262                           ;OverLoad_B1.c: 220: Load.Time = 0;
  7263  01C7  01B1               	clrf	(_Load^(0+256)+1)
  7264  01C8  01B2               	clrf	((_Load+1)^(0+256)+1)
  7265                           
  7266                           ;OverLoad_B1.c: 221: setLoad_AH_AL_Restore();
  7267  01C9  3194  24C5  3180   	fcall	_setLoad_AH_AL_Restore
  7268                           
  7269                           ;OverLoad_B1.c: 223: Load.ErrorCount = 0;
  7270  01CC  0022               	movlb	2	; select bank2
  7271  01CD  01D6               	clrf	(_Load^(0+256)+38)
  7272                           
  7273                           ;OverLoad_B1.c: 224: Load.SafeCount = 0;
  7274  01CE  01D7               	clrf	(_Load^(0+256)+39)
  7275                           
  7276                           ;OverLoad_B1.c: 226: Load.ADH = 0;
  7277  01CF  01B5               	clrf	(_Load^(0+256)+5)
  7278  01D0  01B6               	clrf	((_Load+1)^(0+256)+5)
  7279                           
  7280                           ;OverLoad_B1.c: 227: Load.ADL = 0;
  7281  01D1  01B7               	clrf	(_Load^(0+256)+7)
  7282  01D2  01B8               	clrf	((_Load+1)^(0+256)+7)
  7283                           
  7284                           ;OverLoad_B1.c: 233: Load.Run = 0;
  7285  01D3  11B0               	bcf	_Load^(0+256),3
  7286                           
  7287                           ;OverLoad_B1.c: 234: Load.Count = 0;
  7288  01D4  01D5               	clrf	(_Load^(0+256)+37)
  7289                           
  7290                           ;OverLoad_B1.c: 235: Load.OK = 0;
  7291  01D5  13B0               	bcf	_Load^(0+256),7
  7292  01D6                     l7428:	
  7293                           
  7294                           ;OverLoad_B1.c: 257: }
  7295                           ;OverLoad_B1.c: 258: if (Load.ERROR == 1) {
  7296  01D6  1EB0               	btfss	_Load^(0+256),5
  7297  01D7  0008               	return
  7298                           
  7299                           ;OverLoad_B1.c: 259: Load.ErrorTime++;
  7300  01D8  3001               	movlw	1
  7301  01D9  07B3               	addwf	(_Load^(0+256)+3),f
  7302  01DA  3000               	movlw	0
  7303  01DB  3DB4               	addwfc	((_Load+1)^(0+256)+3),f
  7304                           
  7305                           ;OverLoad_B1.c: 260: if (Load.ErrorTime >= (10000 / 20)) {
  7306  01DC  3001               	movlw	1
  7307  01DD  0234               	subwf	((_Load+1)^(0+256)+3),w
  7308  01DE  30F4               	movlw	244
  7309  01DF  1903               	skipnz
  7310  01E0  0233               	subwf	(_Load^(0+256)+3),w
  7311  01E1  1C03               	skipc
  7312  01E2  0008               	return
  7313                           
  7314                           ;OverLoad_B1.c: 261: Load.ErrorTime = 0;
  7315  01E3  01B3               	clrf	(_Load^(0+256)+3)
  7316  01E4  01B4               	clrf	((_Load+1)^(0+256)+3)
  7317                           
  7318                           ;OverLoad_B1.c: 262: Load.ERROR = 0;
  7319  01E5  12B0               	bcf	_Load^(0+256),5
  7320                           
  7321                           ;OverLoad_B1.c: 263: }
  7322                           ;OverLoad_B1.c: 264: }
  7323                           ;OverLoad_B1.c: 265: }
  7324                           ;OverLoad_B1.c: 266: } else {
  7325  01E6  0008               	return
  7326  01E7                     l1245:	
  7327                           
  7328                           ;OverLoad_B1.c: 267: if (myMain.PowerON == 1) {
  7329  01E7  0021               	movlb	1	; select bank1
  7330  01E8  1C30               	btfss	_myMain^(0+128),0
  7331  01E9  0008               	return
  7332                           
  7333                           ;OverLoad_B1.c: 268: Load.Enable = 1;
  7334  01EA  0022               	movlb	2	; select bank2
  7335  01EB  1430               	bsf	_Load^(0+256),0
  7336  01EC  0008               	return
  7337  01ED                     __end_of_Load_Main:	
  7338                           
  7339                           	psect	text31
  7340  12CB                     __ptext31:	
  7341 ;; *************** function _getMain_Lights_Count *****************
  7342 ;; Defined at:
  7343 ;;		line 464 in file "../src/Main_B1.c"
  7344 ;; Parameters:    Size  Location     Type
  7345 ;;		None
  7346 ;; Auto vars:     Size  Location     Type
  7347 ;;  count           1    4[COMMON] unsigned char 
  7348 ;;  status1         1    3[COMMON] unsigned char 
  7349 ;; Return value:  Size  Location     Type
  7350 ;;                  1    wreg      unsigned char 
  7351 ;; Registers used:
  7352 ;;		wreg, status,2
  7353 ;; Tracked objects:
  7354 ;;		On entry : 0/0
  7355 ;;		On exit  : 0/0
  7356 ;;		Unchanged: 0/0
  7357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7359 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7360 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7361 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7362 ;;Total ram usage:        3 bytes
  7363 ;; Hardware stack levels used:    1
  7364 ;; Hardware stack levels required when called:    3
  7365 ;; This function calls:
  7366 ;;		Nothing
  7367 ;; This function is called by:
  7368 ;;		_Load_Main
  7369 ;; This function uses a non-reentrant model
  7370 ;;
  7371                           
  7372                           
  7373                           ;psect for function _getMain_Lights_Count
  7374  12CB                     _getMain_Lights_Count:	
  7375                           
  7376                           ;Main_B1.c: 465: char count = 0;
  7377                           
  7378                           ;incstack = 0
  7379                           ; Regs used in _getMain_Lights_Count: [wreg+status,2]
  7380  12CB  01F4               	clrf	getMain_Lights_Count@count
  7381                           
  7382                           ;Main_B1.c: 469: char status1 = DimmerIntr1.ControlStatus == 1 ? 1 : 0;
  7383  12CC  3000               	movlw	0
  7384  12CD  0021               	movlb	1	; select bank1
  7385  12CE  19A0               	btfsc	_DimmerIntr1^(0+128),3
  7386  12CF  3001               	movlw	1
  7387  12D0  00F3               	movwf	getMain_Lights_Count@status1
  7388                           
  7389                           ;Main_B1.c: 492: count = status1;
  7390  12D1  0873               	movf	getMain_Lights_Count@status1,w
  7391  12D2  00F2               	movwf	??_getMain_Lights_Count
  7392  12D3  0872               	movf	??_getMain_Lights_Count,w
  7393  12D4  00F4               	movwf	getMain_Lights_Count@count
  7394                           
  7395                           ;Main_B1.c: 500: return count;
  7396  12D5  0874               	movf	getMain_Lights_Count@count,w
  7397  12D6  0008               	return
  7398  12D7                     __end_of_getMain_Lights_Count:	
  7399                           
  7400                           	psect	text32
  7401  120A                     __ptext32:	
  7402 ;; *************** function _getDimmer_Load_Status *****************
  7403 ;; Defined at:
  7404 ;;		line 1344 in file "../src/Dimmer_B1.c"
  7405 ;; Parameters:    Size  Location     Type
  7406 ;;		None
  7407 ;; Auto vars:     Size  Location     Type
  7408 ;;  status          1    2[COMMON] unsigned char 
  7409 ;; Return value:  Size  Location     Type
  7410 ;;                  1    wreg      unsigned char 
  7411 ;; Registers used:
  7412 ;;		wreg, status,2
  7413 ;; Tracked objects:
  7414 ;;		On entry : 0/0
  7415 ;;		On exit  : 0/0
  7416 ;;		Unchanged: 0/0
  7417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7419 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7421 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7422 ;;Total ram usage:        1 bytes
  7423 ;; Hardware stack levels used:    1
  7424 ;; Hardware stack levels required when called:    3
  7425 ;; This function calls:
  7426 ;;		Nothing
  7427 ;; This function is called by:
  7428 ;;		_Load_Main
  7429 ;; This function uses a non-reentrant model
  7430 ;;
  7431                           
  7432                           
  7433                           ;psect for function _getDimmer_Load_Status
  7434  120A                     _getDimmer_Load_Status:	
  7435                           
  7436                           ;Dimmer_B1.c: 1345: char status = Dimmer.Load_Status == 1 ? 1 : 0;
  7437                           
  7438                           ;incstack = 0
  7439                           ; Regs used in _getDimmer_Load_Status: [wreg+status,2]
  7440  120A  3000               	movlw	0
  7441  120B  0021               	movlb	1	; select bank1
  7442  120C  1949               	btfsc	_Dimmer^(0+128),2
  7443  120D  3001               	movlw	1
  7444  120E  00F2               	movwf	getDimmer_Load_Status@status
  7445                           
  7446                           ;Dimmer_B1.c: 1346: return status;
  7447  120F  0872               	movf	getDimmer_Load_Status@status,w
  7448  1210  0008               	return
  7449  1211                     __end_of_getDimmer_Load_Status:	
  7450                           
  7451                           	psect	text33
  7452  1203                     __ptext33:	
  7453 ;; *************** function _getDimmer_LoadGO *****************
  7454 ;; Defined at:
  7455 ;;		line 1338 in file "../src/Dimmer_B1.c"
  7456 ;; Parameters:    Size  Location     Type
  7457 ;;		None
  7458 ;; Auto vars:     Size  Location     Type
  7459 ;;  loadgo          1    2[COMMON] unsigned char 
  7460 ;; Return value:  Size  Location     Type
  7461 ;;                  1    wreg      unsigned char 
  7462 ;; Registers used:
  7463 ;;		wreg, status,2
  7464 ;; Tracked objects:
  7465 ;;		On entry : 0/0
  7466 ;;		On exit  : 0/0
  7467 ;;		Unchanged: 0/0
  7468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7470 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7472 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7473 ;;Total ram usage:        1 bytes
  7474 ;; Hardware stack levels used:    1
  7475 ;; Hardware stack levels required when called:    3
  7476 ;; This function calls:
  7477 ;;		Nothing
  7478 ;; This function is called by:
  7479 ;;		_Load_Main
  7480 ;; This function uses a non-reentrant model
  7481 ;;
  7482                           
  7483                           
  7484                           ;psect for function _getDimmer_LoadGO
  7485  1203                     _getDimmer_LoadGO:	
  7486                           
  7487                           ;Dimmer_B1.c: 1339: char loadgo = Dimmer.LoadGO == 1 ? 1 : 0;
  7488                           
  7489                           ;incstack = 0
  7490                           ; Regs used in _getDimmer_LoadGO: [wreg+status,2]
  7491  1203  3000               	movlw	0
  7492  1204  0021               	movlb	1	; select bank1
  7493  1205  18C9               	btfsc	_Dimmer^(0+128),1
  7494  1206  3001               	movlw	1
  7495  1207  00F2               	movwf	getDimmer_LoadGO@loadgo
  7496                           
  7497                           ;Dimmer_B1.c: 1340: return loadgo;
  7498  1208  0872               	movf	getDimmer_LoadGO@loadgo,w
  7499  1209  0008               	return
  7500  120A                     __end_of_getDimmer_LoadGO:	
  7501                           
  7502                           	psect	text34
  7503  122F                     __ptext34:	
  7504 ;; *************** function _getAll_DimmerIntr_Dimming_Sw_RF *****************
  7505 ;; Defined at:
  7506 ;;		line 348 in file "../src/Dimmer_B1.c"
  7507 ;; Parameters:    Size  Location     Type
  7508 ;;		None
  7509 ;; Auto vars:     Size  Location     Type
  7510 ;;  status          1    2[COMMON] unsigned char 
  7511 ;; Return value:  Size  Location     Type
  7512 ;;                  1    wreg      unsigned char 
  7513 ;; Registers used:
  7514 ;;		wreg, status,2
  7515 ;; Tracked objects:
  7516 ;;		On entry : 0/0
  7517 ;;		On exit  : 0/0
  7518 ;;		Unchanged: 0/0
  7519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7521 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7523 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7524 ;;Total ram usage:        1 bytes
  7525 ;; Hardware stack levels used:    1
  7526 ;; Hardware stack levels required when called:    3
  7527 ;; This function calls:
  7528 ;;		Nothing
  7529 ;; This function is called by:
  7530 ;;		_Load_Main
  7531 ;; This function uses a non-reentrant model
  7532 ;;
  7533                           
  7534                           
  7535                           ;psect for function _getAll_DimmerIntr_Dimming_Sw_RF
  7536  122F                     _getAll_DimmerIntr_Dimming_Sw_RF:	
  7537                           
  7538                           ;Dimmer_B1.c: 349: char status = 0;
  7539                           
  7540                           ;incstack = 0
  7541                           ; Regs used in _getAll_DimmerIntr_Dimming_Sw_RF: [wreg+status,2]
  7542  122F  01F2               	clrf	getAll_DimmerIntr_Dimming_Sw_RF@status
  7543                           
  7544                           ;Dimmer_B1.c: 360: status = (DimmerIntr1.Dimming_Sw == 1) ? 1 : 0;
  7545  1230  3000               	movlw	0
  7546  1231  0021               	movlb	1	; select bank1
  7547  1232  1A20               	btfsc	_DimmerIntr1^(0+128),4
  7548  1233  3001               	movlw	1
  7549  1234  00F2               	movwf	getAll_DimmerIntr_Dimming_Sw_RF@status
  7550                           
  7551                           ;Dimmer_B1.c: 378: return status;
  7552  1235  0872               	movf	getAll_DimmerIntr_Dimming_Sw_RF@status,w
  7553  1236  0008               	return
  7554  1237                     __end_of_getAll_DimmerIntr_Dimming_Sw_RF:	
  7555                           
  7556                           	psect	text35
  7557  14E0                     __ptext35:	
  7558 ;; *************** function ___wmul *****************
  7559 ;; Defined at:
  7560 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul16.c"
  7561 ;; Parameters:    Size  Location     Type
  7562 ;;  multiplier      2    2[COMMON] unsigned int 
  7563 ;;  multiplicand    2    4[COMMON] unsigned int 
  7564 ;; Auto vars:     Size  Location     Type
  7565 ;;  product         2    6[COMMON] unsigned int 
  7566 ;; Return value:  Size  Location     Type
  7567 ;;                  2    2[COMMON] unsigned int 
  7568 ;; Registers used:
  7569 ;;		wreg, status,2, status,0
  7570 ;; Tracked objects:
  7571 ;;		On entry : 0/0
  7572 ;;		On exit  : 0/0
  7573 ;;		Unchanged: 0/0
  7574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7575 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7576 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7578 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7579 ;;Total ram usage:        6 bytes
  7580 ;; Hardware stack levels used:    1
  7581 ;; Hardware stack levels required when called:    3
  7582 ;; This function calls:
  7583 ;;		Nothing
  7584 ;; This function is called by:
  7585 ;;		_Load_Main
  7586 ;; This function uses a non-reentrant model
  7587 ;;
  7588                           
  7589                           
  7590                           ;psect for function ___wmul
  7591  14E0                     ___wmul:	
  7592                           
  7593                           ;incstack = 0
  7594                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7595  14E0  01F6               	clrf	___wmul@product
  7596  14E1  01F7               	clrf	___wmul@product+1
  7597  14E2                     l5842:	
  7598  14E2  1C72               	btfss	___wmul@multiplier,0
  7599  14E3  2CE8               	goto	l1905
  7600  14E4  0874               	movf	___wmul@multiplicand,w
  7601  14E5  07F6               	addwf	___wmul@product,f
  7602  14E6  0875               	movf	___wmul@multiplicand+1,w
  7603  14E7  3DF7               	addwfc	___wmul@product+1,f
  7604  14E8                     l1905:	
  7605  14E8  3001               	movlw	1
  7606  14E9                     u6095:	
  7607  14E9  35F4               	lslf	___wmul@multiplicand,f
  7608  14EA  0DF5               	rlf	___wmul@multiplicand+1,f
  7609  14EB  0B89               	decfsz	9,f
  7610  14EC  2CE9               	goto	u6095
  7611  14ED  3001               	movlw	1
  7612  14EE                     u6105:	
  7613  14EE  36F3               	lsrf	___wmul@multiplier+1,f
  7614  14EF  0CF2               	rrf	___wmul@multiplier,f
  7615  14F0  0B89               	decfsz	9,f
  7616  14F1  2CEE               	goto	u6105
  7617  14F2  0873               	movf	___wmul@multiplier+1,w
  7618  14F3  0472               	iorwf	___wmul@multiplier,w
  7619  14F4  1D03               	skipz
  7620  14F5  2CE2               	goto	l5842
  7621  14F6  0877               	movf	___wmul@product+1,w
  7622  14F7  01F3               	clrf	?___wmul+1
  7623  14F8  07F3               	addwf	?___wmul+1,f
  7624  14F9  0876               	movf	___wmul@product,w
  7625  14FA  01F2               	clrf	?___wmul
  7626  14FB  07F2               	addwf	?___wmul,f
  7627  14FC  0008               	return
  7628  14FD                     __end_of___wmul:	
  7629                           
  7630                           	psect	text36
  7631  16DF                     __ptext36:	
  7632 ;; *************** function ___lwdiv *****************
  7633 ;; Defined at:
  7634 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  7635 ;; Parameters:    Size  Location     Type
  7636 ;;  divisor         2    2[COMMON] unsigned int 
  7637 ;;  dividend        2    4[COMMON] unsigned int 
  7638 ;; Auto vars:     Size  Location     Type
  7639 ;;  quotient        2    7[COMMON] unsigned int 
  7640 ;;  counter         1    9[COMMON] unsigned char 
  7641 ;; Return value:  Size  Location     Type
  7642 ;;                  2    2[COMMON] unsigned int 
  7643 ;; Registers used:
  7644 ;;		wreg, status,2, status,0
  7645 ;; Tracked objects:
  7646 ;;		On entry : 0/0
  7647 ;;		On exit  : 0/0
  7648 ;;		Unchanged: 0/0
  7649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7650 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7651 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7652 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7653 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7654 ;;Total ram usage:        8 bytes
  7655 ;; Hardware stack levels used:    1
  7656 ;; Hardware stack levels required when called:    3
  7657 ;; This function calls:
  7658 ;;		Nothing
  7659 ;; This function is called by:
  7660 ;;		_Load_Main
  7661 ;;		_setTemp_Main
  7662 ;; This function uses a non-reentrant model
  7663 ;;
  7664                           
  7665                           
  7666                           ;psect for function ___lwdiv
  7667  16DF                     ___lwdiv:	
  7668                           
  7669                           ;incstack = 0
  7670                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7671  16DF  01F7               	clrf	___lwdiv@quotient
  7672  16E0  01F8               	clrf	___lwdiv@quotient+1
  7673  16E1  0873               	movf	___lwdiv@divisor+1,w
  7674  16E2  0472               	iorwf	___lwdiv@divisor,w
  7675  16E3  1903               	skipnz
  7676  16E4  2F0E               	goto	l5290
  7677  16E5  01F9               	clrf	___lwdiv@counter
  7678  16E6  0AF9               	incf	___lwdiv@counter,f
  7679  16E7                     l5278:	
  7680  16E7  1BF3               	btfsc	___lwdiv@divisor+1,7
  7681  16E8  2EF3               	goto	l5280
  7682  16E9  3001               	movlw	1
  7683  16EA                     u5085:	
  7684  16EA  35F2               	lslf	___lwdiv@divisor,f
  7685  16EB  0DF3               	rlf	___lwdiv@divisor+1,f
  7686  16EC  0B89               	decfsz	9,f
  7687  16ED  2EEA               	goto	u5085
  7688  16EE  3001               	movlw	1
  7689  16EF  00F6               	movwf	??___lwdiv
  7690  16F0  0876               	movf	??___lwdiv,w
  7691  16F1  07F9               	addwf	___lwdiv@counter,f
  7692  16F2  2EE7               	goto	l5278
  7693  16F3                     l5280:	
  7694  16F3  3001               	movlw	1
  7695  16F4                     u5105:	
  7696  16F4  35F7               	lslf	___lwdiv@quotient,f
  7697  16F5  0DF8               	rlf	___lwdiv@quotient+1,f
  7698  16F6  0B89               	decfsz	9,f
  7699  16F7  2EF4               	goto	u5105
  7700  16F8  0873               	movf	___lwdiv@divisor+1,w
  7701  16F9  0275               	subwf	___lwdiv@dividend+1,w
  7702  16FA  1D03               	skipz
  7703  16FB  2EFE               	goto	u5115
  7704  16FC  0872               	movf	___lwdiv@divisor,w
  7705  16FD  0274               	subwf	___lwdiv@dividend,w
  7706  16FE                     u5115:	
  7707  16FE  1C03               	skipc
  7708  16FF  2F05               	goto	l5286
  7709  1700  0872               	movf	___lwdiv@divisor,w
  7710  1701  02F4               	subwf	___lwdiv@dividend,f
  7711  1702  0873               	movf	___lwdiv@divisor+1,w
  7712  1703  3BF5               	subwfb	___lwdiv@dividend+1,f
  7713  1704  1477               	bsf	___lwdiv@quotient,0
  7714  1705                     l5286:	
  7715  1705  3001               	movlw	1
  7716  1706                     u5125:	
  7717  1706  36F3               	lsrf	___lwdiv@divisor+1,f
  7718  1707  0CF2               	rrf	___lwdiv@divisor,f
  7719  1708  0B89               	decfsz	9,f
  7720  1709  2F06               	goto	u5125
  7721  170A  3001               	movlw	1
  7722  170B  02F9               	subwf	___lwdiv@counter,f
  7723  170C  1D03               	btfss	3,2
  7724  170D  2EF3               	goto	l5280
  7725  170E                     l5290:	
  7726  170E  0878               	movf	___lwdiv@quotient+1,w
  7727  170F  01F3               	clrf	?___lwdiv+1
  7728  1710  07F3               	addwf	?___lwdiv+1,f
  7729  1711  0877               	movf	___lwdiv@quotient,w
  7730  1712  01F2               	clrf	?___lwdiv
  7731  1713  07F2               	addwf	?___lwdiv,f
  7732  1714  0008               	return
  7733  1715                     __end_of___lwdiv:	
  7734                           
  7735                           	psect	text37
  7736  11C1                     __ptext37:	
  7737 ;; *************** function _Load_Initialization *****************
  7738 ;; Defined at:
  7739 ;;		line 9 in file "../src/OverLoad_B1.c"
  7740 ;; Parameters:    Size  Location     Type
  7741 ;;		None
  7742 ;; Auto vars:     Size  Location     Type
  7743 ;;		None
  7744 ;; Return value:  Size  Location     Type
  7745 ;;		None               void
  7746 ;; Registers used:
  7747 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7748 ;; Tracked objects:
  7749 ;;		On entry : 0/0
  7750 ;;		On exit  : 0/0
  7751 ;;		Unchanged: 0/0
  7752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7757 ;;Total ram usage:        0 bytes
  7758 ;; Hardware stack levels used:    1
  7759 ;; Hardware stack levels required when called:    4
  7760 ;; This function calls:
  7761 ;;		_setLoad_AH_AL_Restore
  7762 ;; This function is called by:
  7763 ;;		_main
  7764 ;; This function uses a non-reentrant model
  7765 ;;
  7766                           
  7767                           
  7768                           ;psect for function _Load_Initialization
  7769  11C1                     _Load_Initialization:	
  7770                           
  7771                           ;OverLoad_B1.c: 11: setLoad_AH_AL_Restore();
  7772                           
  7773                           ;incstack = 0
  7774                           ; Regs used in _Load_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7775  11C1  3194  24C5         	fcall	_setLoad_AH_AL_Restore
  7776  11C3  0008               	return
  7777  11C4                     __end_of_Load_Initialization:	
  7778                           
  7779                           	psect	text38
  7780  14C5                     __ptext38:	
  7781 ;; *************** function _setLoad_AH_AL_Restore *****************
  7782 ;; Defined at:
  7783 ;;		line 294 in file "../src/OverLoad_B1.c"
  7784 ;; Parameters:    Size  Location     Type
  7785 ;;		None
  7786 ;; Auto vars:     Size  Location     Type
  7787 ;;  i               1    3[COMMON] unsigned char 
  7788 ;; Return value:  Size  Location     Type
  7789 ;;		None               void
  7790 ;; Registers used:
  7791 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7792 ;; Tracked objects:
  7793 ;;		On entry : 0/0
  7794 ;;		On exit  : 0/0
  7795 ;;		Unchanged: 0/0
  7796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7798 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7799 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7800 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7801 ;;Total ram usage:        2 bytes
  7802 ;; Hardware stack levels used:    1
  7803 ;; Hardware stack levels required when called:    3
  7804 ;; This function calls:
  7805 ;;		Nothing
  7806 ;; This function is called by:
  7807 ;;		_Load_Initialization
  7808 ;;		_Load_Main
  7809 ;; This function uses a non-reentrant model
  7810 ;;
  7811                           
  7812                           
  7813                           ;psect for function _setLoad_AH_AL_Restore
  7814  14C5                     _setLoad_AH_AL_Restore:	
  7815                           
  7816                           ;OverLoad_B1.c: 295: char i;
  7817                           ;OverLoad_B1.c: 296: for (i = 0; i < 5; i++) {
  7818                           
  7819                           ;incstack = 0
  7820                           ; Regs used in _setLoad_AH_AL_Restore: [wreg+fsr1l+fsr1h+status,2+status,0]
  7821  14C5  01F3               	clrf	setLoad_AH_AL_Restore@i
  7822  14C6                     L5:	
  7823  14C6  3005               	movlw	5
  7824  14C7  0273               	subwf	setLoad_AH_AL_Restore@i,w
  7825  14C8  1803               	btfsc	3,0
  7826  14C9  0008               	return
  7827                           
  7828                           ;OverLoad_B1.c: 297: Load.AH[i] = 0;
  7829  14CA  3573               	lslf	setLoad_AH_AL_Restore@i,w
  7830  14CB  3E3B               	addlw	(_Load+11)& (0+255)
  7831  14CC  0086               	movwf	6
  7832  14CD  3001               	movlw	1	; select bank2/3
  7833  14CE  0087               	movwf	7
  7834  14CF  3000               	movlw	0
  7835  14D0  3FC0               	movwi [0]fsr1
  7836  14D1  3FC1               	movwi [1]fsr1
  7837                           
  7838                           ;OverLoad_B1.c: 298: Load.AL[i] = 0xffff;
  7839  14D2  3573               	lslf	setLoad_AH_AL_Restore@i,w
  7840  14D3  3E45               	addlw	(_Load+21)& (0+255)
  7841  14D4  0086               	movwf	6
  7842  14D5  3001               	movlw	1	; select bank2/3
  7843  14D6  0087               	movwf	7
  7844  14D7  30FF               	movlw	255
  7845  14D8  3FC0               	movwi [0]fsr1
  7846  14D9  30FF               	movlw	255
  7847  14DA  3FC1               	movwi [1]fsr1
  7848  14DB  3001               	movlw	1
  7849  14DC  00F2               	movwf	??_setLoad_AH_AL_Restore
  7850  14DD  0872               	movf	??_setLoad_AH_AL_Restore,w
  7851  14DE  07F3               	addwf	setLoad_AH_AL_Restore@i,f
  7852  14DF  2CC6               	goto	L5
  7853  14E0                     __end_of_setLoad_AH_AL_Restore:	
  7854                           
  7855                           	psect	text39
  7856  11D3                     __ptext39:	
  7857 ;; *************** function _LED_Main *****************
  7858 ;; Defined at:
  7859 ;;		line 47 in file "../src/LED_B1.c"
  7860 ;; Parameters:    Size  Location     Type
  7861 ;;		None
  7862 ;; Auto vars:     Size  Location     Type
  7863 ;;		None
  7864 ;; Return value:  Size  Location     Type
  7865 ;;		None               void
  7866 ;; Registers used:
  7867 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7868 ;; Tracked objects:
  7869 ;;		On entry : 0/0
  7870 ;;		On exit  : 0/0
  7871 ;;		Unchanged: 0/0
  7872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7877 ;;Total ram usage:        0 bytes
  7878 ;; Hardware stack levels used:    1
  7879 ;; Hardware stack levels required when called:    5
  7880 ;; This function calls:
  7881 ;;		_setLED_Main
  7882 ;; This function is called by:
  7883 ;;		_main
  7884 ;; This function uses a non-reentrant model
  7885 ;;
  7886                           
  7887                           
  7888                           ;psect for function _LED_Main
  7889  11D3                     _LED_Main:	
  7890                           
  7891                           ;LED_B1.c: 67: setLED_Main(99);
  7892                           
  7893                           ;incstack = 0
  7894                           ; Regs used in _LED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7895  11D3  3063               	movlw	99
  7896  11D4  3196  264D         	fcall	_setLED_Main
  7897  11D6  0008               	return
  7898  11D7                     __end_of_LED_Main:	
  7899                           
  7900                           	psect	text40
  7901  164D                     __ptext40:	
  7902 ;; *************** function _setLED_Main *****************
  7903 ;; Defined at:
  7904 ;;		line 229 in file "../src/LED_B1.c"
  7905 ;; Parameters:    Size  Location     Type
  7906 ;;  led             1    wreg     unsigned char 
  7907 ;; Auto vars:     Size  Location     Type
  7908 ;;  led             1    6[COMMON] unsigned char 
  7909 ;; Return value:  Size  Location     Type
  7910 ;;		None               void
  7911 ;; Registers used:
  7912 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7913 ;; Tracked objects:
  7914 ;;		On entry : 0/0
  7915 ;;		On exit  : 0/0
  7916 ;;		Unchanged: 0/0
  7917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7919 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7920 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7921 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7922 ;;Total ram usage:        3 bytes
  7923 ;; Hardware stack levels used:    1
  7924 ;; Hardware stack levels required when called:    4
  7925 ;; This function calls:
  7926 ;;		_LedPointSelect
  7927 ;; This function is called by:
  7928 ;;		_LED_Main
  7929 ;; This function uses a non-reentrant model
  7930 ;;
  7931                           
  7932                           
  7933                           ;psect for function _setLED_Main
  7934  164D                     _setLED_Main:	
  7935                           
  7936                           ;incstack = 0
  7937                           ; Regs used in _setLED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7938                           ;setLED_Main@led stored from wreg
  7939  164D  00F6               	movwf	setLED_Main@led
  7940                           
  7941                           ;LED_B1.c: 230: LedPointSelect(led);
  7942  164E  0876               	movf	setLED_Main@led,w
  7943  164F  3192  225B  3196   	fcall	_LedPointSelect
  7944                           
  7945                           ;LED_B1.c: 231: if (LED->GO == 1) {
  7946  1652  087B               	movf	_LED,w
  7947  1653  0086               	movwf	6
  7948  1654  0187               	clrf	7
  7949  1655  1C81               	btfss	1,1
  7950  1656  0008               	return
  7951                           
  7952                           ;LED_B1.c: 232: LED->Time++;
  7953  1657  0A7B               	incf	_LED,w
  7954  1658  0086               	movwf	6
  7955  1659  0187               	clrf	7
  7956  165A  3001               	movlw	1
  7957  165B  0781               	addwf	1,f
  7958  165C  3141               	addfsr 1,1
  7959  165D  1803               	skipnc
  7960  165E  0A81               	incf	1,f
  7961                           
  7962                           ;LED_B1.c: 233: if (LED->Time >= (500 / 20)) {
  7963  165F  0A7B               	incf	_LED,w
  7964  1660  0086               	movwf	6
  7965  1661  0187               	clrf	7
  7966  1662  3F40               	moviw [0]fsr1
  7967  1663  00F4               	movwf	??_setLED_Main
  7968  1664  3F41               	moviw [1]fsr1
  7969  1665  00F5               	movwf	??_setLED_Main+1
  7970  1666  3000               	movlw	0
  7971  1667  0275               	subwf	??_setLED_Main+1,w
  7972  1668  3019               	movlw	25
  7973  1669  1903               	skipnz
  7974  166A  0274               	subwf	??_setLED_Main,w
  7975  166B  1C03               	skipc
  7976  166C  0008               	return
  7977                           
  7978                           ;LED_B1.c: 234: LED->Time = 0;
  7979  166D  0A7B               	incf	_LED,w
  7980  166E  0086               	movwf	6
  7981  166F  0187               	clrf	7
  7982  1670  3000               	movlw	0
  7983  1671  3FC0               	movwi [0]fsr1
  7984  1672  3FC1               	movwi [1]fsr1
  7985                           
  7986                           ;LED_B1.c: 252: if (led == 99) {
  7987  1673  0876               	movf	setLED_Main@led,w
  7988  1674  3A63               	xorlw	99
  7989  1675  1D03               	skipz
  7990  1676  0008               	return
  7991                           
  7992                           ;LED_B1.c: 253: RB5 = RB5 == 1 ? 0 : 1;
  7993  1677  3020               	movlw	32
  7994  1678  0020               	movlb	0	; select bank0
  7995  1679  068D               	xorwf	13,f
  7996  167A  0008               	return
  7997  167B                     __end_of_setLED_Main:	
  7998                           
  7999                           	psect	text41
  8000  11CF                     __ptext41:	
  8001 ;; *************** function _LED_Initialization *****************
  8002 ;; Defined at:
  8003 ;;		line 31 in file "../src/LED_B1.c"
  8004 ;; Parameters:    Size  Location     Type
  8005 ;;		None
  8006 ;; Auto vars:     Size  Location     Type
  8007 ;;		None
  8008 ;; Return value:  Size  Location     Type
  8009 ;;		None               void
  8010 ;; Registers used:
  8011 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8012 ;; Tracked objects:
  8013 ;;		On entry : 0/0
  8014 ;;		On exit  : 0/0
  8015 ;;		Unchanged: 0/0
  8016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8021 ;;Total ram usage:        0 bytes
  8022 ;; Hardware stack levels used:    1
  8023 ;; Hardware stack levels required when called:    6
  8024 ;; This function calls:
  8025 ;;		_setLED_Initialization
  8026 ;; This function is called by:
  8027 ;;		_main
  8028 ;; This function uses a non-reentrant model
  8029 ;;
  8030                           
  8031                           
  8032                           ;psect for function _LED_Initialization
  8033  11CF                     _LED_Initialization:	
  8034                           
  8035                           ;LED_B1.c: 42: setLED_Initialization(99);
  8036                           
  8037                           ;incstack = 0
  8038                           ; Regs used in _LED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8039  11CF  3063               	movlw	99
  8040  11D0  3193  2319         	fcall	_setLED_Initialization
  8041  11D2  0008               	return
  8042  11D3                     __end_of_LED_Initialization:	
  8043                           
  8044                           	psect	text42
  8045  1319                     __ptext42:	
  8046 ;; *************** function _setLED_Initialization *****************
  8047 ;; Defined at:
  8048 ;;		line 74 in file "../src/LED_B1.c"
  8049 ;; Parameters:    Size  Location     Type
  8050 ;;  led             1    wreg     unsigned char 
  8051 ;; Auto vars:     Size  Location     Type
  8052 ;;  led             1    6[COMMON] unsigned char 
  8053 ;; Return value:  Size  Location     Type
  8054 ;;		None               void
  8055 ;; Registers used:
  8056 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8057 ;; Tracked objects:
  8058 ;;		On entry : 0/0
  8059 ;;		On exit  : 0/0
  8060 ;;		Unchanged: 0/0
  8061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8063 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8065 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8066 ;;Total ram usage:        1 bytes
  8067 ;; Hardware stack levels used:    1
  8068 ;; Hardware stack levels required when called:    5
  8069 ;; This function calls:
  8070 ;;		_LedPointSelect
  8071 ;;		_setLED
  8072 ;; This function is called by:
  8073 ;;		_LED_Initialization
  8074 ;; This function uses a non-reentrant model
  8075 ;;
  8076                           
  8077                           
  8078                           ;psect for function _setLED_Initialization
  8079  1319                     _setLED_Initialization:	
  8080                           
  8081                           ;incstack = 0
  8082                           ; Regs used in _setLED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8083                           ;setLED_Initialization@led stored from wreg
  8084  1319  00F6               	movwf	setLED_Initialization@led
  8085                           
  8086                           ;LED_B1.c: 75: LedPointSelect(led);
  8087  131A  0876               	movf	setLED_Initialization@led,w
  8088  131B  3192  225B  3193   	fcall	_LedPointSelect
  8089                           
  8090                           ;LED_B1.c: 76: LED->Enable = 1;
  8091  131E  087B               	movf	_LED,w
  8092  131F  0086               	movwf	6
  8093  1320  0187               	clrf	7
  8094  1321  1401               	bsf	1,0
  8095                           
  8096                           ;LED_B1.c: 77: setLED(led, 0);
  8097  1322  01F4               	clrf	setLED@command
  8098  1323  0876               	movf	setLED_Initialization@led,w
  8099  1324  3196  26AA         	fcall	_setLED
  8100  1326  0008               	return
  8101  1327                     __end_of_setLED_Initialization:	
  8102                           
  8103                           	psect	text43
  8104  17BF                     __ptext43:	
  8105 ;; *************** function _Flash_Memory_Main *****************
  8106 ;; Defined at:
  8107 ;;		line 980 in file "../src/MCU_B1.c"
  8108 ;; Parameters:    Size  Location     Type
  8109 ;;		None
  8110 ;; Auto vars:     Size  Location     Type
  8111 ;;  key_Status      1    0[BANK0 ] unsigned char 
  8112 ;; Return value:  Size  Location     Type
  8113 ;;		None               void
  8114 ;; Registers used:
  8115 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8116 ;; Tracked objects:
  8117 ;;		On entry : 0/0
  8118 ;;		On exit  : 0/0
  8119 ;;		Unchanged: 0/0
  8120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8122 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8123 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8124 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8125 ;;Total ram usage:        3 bytes
  8126 ;; Hardware stack levels used:    1
  8127 ;; Hardware stack levels required when called:    6
  8128 ;; This function calls:
  8129 ;;		_Flash_Memory_Modify
  8130 ;;		_getAll_Sw_KeyStatus
  8131 ;;		_getMain_All_LightsStatus
  8132 ;; This function is called by:
  8133 ;;		_main
  8134 ;; This function uses a non-reentrant model
  8135 ;;
  8136                           
  8137                           
  8138                           ;psect for function _Flash_Memory_Main
  8139  17BF                     _Flash_Memory_Main:	
  8140                           
  8141                           ;MCU_B1.c: 981: char key_Status = 0;
  8142                           
  8143                           ;incstack = 0
  8144                           ; Regs used in _Flash_Memory_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8145  17BF  0020               	movlb	0	; select bank0
  8146  17C0  01A0               	clrf	Flash_Memory_Main@key_Status
  8147                           
  8148                           ;MCU_B1.c: 983: key_Status = getAll_Sw_KeyStatus();
  8149  17C1  3193  23A2  3197   	fcall	_getAll_Sw_KeyStatus
  8150  17C4  00F8               	movwf	??_Flash_Memory_Main
  8151  17C5  0878               	movf	??_Flash_Memory_Main,w
  8152  17C6  0020               	movlb	0	; select bank0
  8153  17C7  00A0               	movwf	Flash_Memory_Main@key_Status
  8154                           
  8155                           ;MCU_B1.c: 985: if (Memory.Modify == 1) {
  8156  17C8  0023               	movlb	3	; select bank3
  8157  17C9  1C44               	btfss	(_Memory^(0+384)+36),0
  8158  17CA  0008               	return
  8159                           
  8160                           ;MCU_B1.c: 986: Memory.GO = getMain_All_LightsStatus() == 0 && key_Status == 0 ? 1 : 0;
  8161  17CB  0020               	movlb	0	; select bank0
  8162  17CC  01A1               	clrf	_Flash_Memory_Main$3034
  8163  17CD  3192  221F  3197   	fcall	_getMain_All_LightsStatus
  8164  17D0  3800               	iorlw	0
  8165  17D1  1D03               	skipz
  8166  17D2  2FD9               	goto	l7228
  8167  17D3  0020               	movlb	0	; select bank0
  8168  17D4  08A0               	movf	Flash_Memory_Main@key_Status,f
  8169  17D5  1D03               	skipz
  8170  17D6  2FD9               	goto	l7228
  8171  17D7  01A1               	clrf	_Flash_Memory_Main$3034
  8172  17D8  0AA1               	incf	_Flash_Memory_Main$3034,f
  8173  17D9                     l7228:	
  8174  17D9  0020               	movlb	0	; select bank0
  8175  17DA  0821               	movf	_Flash_Memory_Main$3034,w
  8176  17DB  0023               	movlb	3	; select bank3
  8177  17DC  10C4               	bcf	(_Memory^(0+384)+36),1
  8178  17DD  1D03               	skipz
  8179  17DE  14C4               	bsf	(_Memory^(0+384)+36),1
  8180                           
  8181                           ;MCU_B1.c: 987: if (Memory.GO == 1) {
  8182  17DF  1CC4               	btfss	(_Memory^(0+384)+36),1
  8183  17E0  2FFA               	goto	l925
  8184                           
  8185                           ;MCU_B1.c: 988: Memory.Runtime = 1;
  8186  17E1  15C4               	bsf	(_Memory^(0+384)+36),3
  8187                           
  8188                           ;MCU_B1.c: 989: Memory.Time++;
  8189  17E2  3001               	movlw	1
  8190  17E3  07C2               	addwf	(_Memory^(0+384)+34),f
  8191  17E4  3000               	movlw	0
  8192  17E5  3DC3               	addwfc	((_Memory+1)^(0+384)+34),f
  8193                           
  8194                           ;MCU_B1.c: 990: if (Memory.Time == (200 / 20)) {
  8195  17E6  3022               	movlw	34
  8196  17E7  3EA0               	addlw	_Memory& (0+255)
  8197  17E8  0086               	movwf	6
  8198  17E9  3001               	movlw	1	; select bank3/4
  8199  17EA  0087               	movwf	7
  8200  17EB  3F40               	moviw [0]fsr1
  8201  17EC  3A0A               	xorlw	10
  8202  17ED  1D03               	skipz
  8203  17EE  2FF1               	goto	u8275
  8204  17EF  3F41               	moviw [1]fsr1
  8205  17F0  3A00               	xorlw	0
  8206  17F1                     u8275:	
  8207  17F1  1D03               	skipz
  8208  17F2  0008               	return
  8209                           
  8210                           ;MCU_B1.c: 991: Memory.Time = 0;
  8211  17F3  01C2               	clrf	(_Memory^(0+384)+34)
  8212  17F4  01C3               	clrf	((_Memory+1)^(0+384)+34)
  8213                           
  8214                           ;MCU_B1.c: 992: Memory.Modify = 0;
  8215  17F5  1044               	bcf	(_Memory^(0+384)+36),0
  8216                           
  8217                           ;MCU_B1.c: 993: Memory.GO = 0;
  8218  17F6  10C4               	bcf	(_Memory^(0+384)+36),1
  8219                           
  8220                           ;MCU_B1.c: 994: Flash_Memory_Modify();
  8221  17F7  318E  26CE         	fcall	_Flash_Memory_Modify
  8222                           
  8223                           ;MCU_B1.c: 995: }
  8224                           ;MCU_B1.c: 996: } else {
  8225  17F9  0008               	return
  8226  17FA                     l925:	
  8227                           
  8228                           ;MCU_B1.c: 997: if (Memory.Runtime == 1) {
  8229  17FA  1DC4               	btfss	(_Memory^(0+384)+36),3
  8230  17FB  0008               	return
  8231                           
  8232                           ;MCU_B1.c: 998: Memory.Runtime = 0;
  8233  17FC  11C4               	bcf	(_Memory^(0+384)+36),3
  8234                           
  8235                           ;MCU_B1.c: 999: Memory.Time = 0;
  8236  17FD  01C2               	clrf	(_Memory^(0+384)+34)
  8237  17FE  01C3               	clrf	((_Memory+1)^(0+384)+34)
  8238  17FF  0008               	return
  8239  1800                     __end_of_Flash_Memory_Main:	
  8240                           
  8241                           	psect	text44
  8242  13A2                     __ptext44:	
  8243 ;; *************** function _getAll_Sw_KeyStatus *****************
  8244 ;; Defined at:
  8245 ;;		line 286 in file "../src/Switch_B1.c"
  8246 ;; Parameters:    Size  Location     Type
  8247 ;;		None
  8248 ;; Auto vars:     Size  Location     Type
  8249 ;;  status          1    3[COMMON] unsigned char 
  8250 ;; Return value:  Size  Location     Type
  8251 ;;                  1    wreg      unsigned char 
  8252 ;; Registers used:
  8253 ;;		wreg, status,2
  8254 ;; Tracked objects:
  8255 ;;		On entry : 0/0
  8256 ;;		On exit  : 0/0
  8257 ;;		Unchanged: 0/0
  8258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8260 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8261 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8262 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8263 ;;Total ram usage:        3 bytes
  8264 ;; Hardware stack levels used:    1
  8265 ;; Hardware stack levels required when called:    3
  8266 ;; This function calls:
  8267 ;;		Nothing
  8268 ;; This function is called by:
  8269 ;;		_Flash_Memory_Main
  8270 ;; This function uses a non-reentrant model
  8271 ;;
  8272                           
  8273                           
  8274                           ;psect for function _getAll_Sw_KeyStatus
  8275  13A2                     _getAll_Sw_KeyStatus:	
  8276                           
  8277                           ;Switch_B1.c: 287: char status = 0;
  8278                           
  8279                           ;incstack = 0
  8280                           ; Regs used in _getAll_Sw_KeyStatus: [wreg+status,2]
  8281  13A2  01F3               	clrf	getAll_Sw_KeyStatus@status
  8282                           
  8283                           ;Switch_B1.c: 311: status = RA6 == 1 || RA4 == 1 || RA0 == 1 || RA7 == 1 ? 1 : 0;
  8284  13A3  01F4               	clrf	_getAll_Sw_KeyStatus$6154
  8285  13A4  0AF4               	incf	_getAll_Sw_KeyStatus$6154,f
  8286  13A5  0020               	movlb	0	; select bank0
  8287  13A6  1F0C               	btfss	12,6	;volatile
  8288  13A7  1A0C               	btfsc	12,4	;volatile
  8289  13A8  2BAD               	goto	l6980
  8290  13A9  1C0C               	btfss	12,0	;volatile
  8291  13AA  1B8C               	btfsc	12,7	;volatile
  8292  13AB  2BAD               	goto	l6980
  8293  13AC  01F4               	clrf	_getAll_Sw_KeyStatus$6154
  8294  13AD                     l6980:	
  8295  13AD  0874               	movf	_getAll_Sw_KeyStatus$6154,w
  8296  13AE  00F2               	movwf	??_getAll_Sw_KeyStatus
  8297  13AF  0872               	movf	??_getAll_Sw_KeyStatus,w
  8298  13B0  00F3               	movwf	getAll_Sw_KeyStatus@status
  8299                           
  8300                           ;Switch_B1.c: 315: return status;
  8301  13B1  0873               	movf	getAll_Sw_KeyStatus@status,w
  8302  13B2  0008               	return
  8303  13B3                     __end_of_getAll_Sw_KeyStatus:	
  8304                           
  8305                           	psect	text45
  8306  0ECE                     __ptext45:	
  8307 ;; *************** function _Flash_Memory_Modify *****************
  8308 ;; Defined at:
  8309 ;;		line 1057 in file "../src/MCU_B1.c"
  8310 ;; Parameters:    Size  Location     Type
  8311 ;;		None
  8312 ;; Auto vars:     Size  Location     Type
  8313 ;;  i               1    7[COMMON] unsigned char 
  8314 ;; Return value:  Size  Location     Type
  8315 ;;		None               void
  8316 ;; Registers used:
  8317 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8318 ;; Tracked objects:
  8319 ;;		On entry : 0/0
  8320 ;;		On exit  : 0/0
  8321 ;;		Unchanged: 0/0
  8322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8324 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8325 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8326 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8327 ;;Total ram usage:        2 bytes
  8328 ;; Hardware stack levels used:    1
  8329 ;; Hardware stack levels required when called:    5
  8330 ;; This function calls:
  8331 ;;		_Flash_Memory_Erasing
  8332 ;;		_Flash_Memory_Read
  8333 ;;		_Flash_Memory_Write
  8334 ;;		_setMemory_Data
  8335 ;; This function is called by:
  8336 ;;		_Flash_Memory_Main
  8337 ;; This function uses a non-reentrant model
  8338 ;;
  8339                           
  8340                           
  8341                           ;psect for function _Flash_Memory_Modify
  8342  0ECE                     _Flash_Memory_Modify:	
  8343                           
  8344                           ;MCU_B1.c: 1058: char i = 0;
  8345                           
  8346                           ;incstack = 0
  8347                           ; Regs used in _Flash_Memory_Modify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8348  0ECE  01F7               	clrf	Flash_Memory_Modify@i
  8349                           
  8350                           ;MCU_B1.c: 1059: for (i = 0; i < 32; i++) {
  8351  0ECF  01F7               	clrf	Flash_Memory_Modify@i
  8352  0ED0  3020               	movlw	32
  8353  0ED1  0277               	subwf	Flash_Memory_Modify@i,w
  8354  0ED2  1803               	btfsc	3,0
  8355  0ED3  2EE8               	goto	l6998
  8356  0ED4                     l6992:	
  8357                           
  8358                           ;MCU_B1.c: 1060: Memory.Data[i] = Flash_Memory_Read(i);
  8359  0ED4  0877               	movf	Flash_Memory_Modify@i,w
  8360  0ED5  3194  2410  318E   	fcall	_Flash_Memory_Read
  8361  0ED8  00F6               	movwf	??_Flash_Memory_Modify
  8362  0ED9  0877               	movf	Flash_Memory_Modify@i,w
  8363  0EDA  3EA0               	addlw	_Memory& (0+255)
  8364  0EDB  0086               	movwf	6
  8365  0EDC  3001               	movlw	1	; select bank3/4
  8366  0EDD  0087               	movwf	7
  8367  0EDE  0876               	movf	??_Flash_Memory_Modify,w
  8368  0EDF  0081               	movwf	1
  8369  0EE0  3001               	movlw	1
  8370  0EE1  00F6               	movwf	??_Flash_Memory_Modify
  8371  0EE2  0876               	movf	??_Flash_Memory_Modify,w
  8372  0EE3  07F7               	addwf	Flash_Memory_Modify@i,f
  8373  0EE4  3020               	movlw	32
  8374  0EE5  0277               	subwf	Flash_Memory_Modify@i,w
  8375  0EE6  1C03               	skipc
  8376  0EE7  2ED4               	goto	l6992
  8377  0EE8                     l6998:	
  8378                           
  8379                           ;MCU_B1.c: 1061: }
  8380                           ;MCU_B1.c: 1062: setMemory_Data(6, product->Data[11]);
  8381  0EE8  0020               	movlb	0	; select bank0
  8382  0EE9  086D               	movf	_product,w
  8383  0EEA  0086               	movwf	6
  8384  0EEB  3001               	movlw	1	; select bank2/3
  8385  0EEC  0087               	movwf	7
  8386  0EED  3001               	movlw	1	; select bank2/3
  8387  0EEE  3F4B               	moviw [11]fsr1
  8388  0EEF  00F2               	movwf	setMemory_Data@data
  8389  0EF0  3006               	movlw	6
  8390  0EF1  3192  2286  318E   	fcall	_setMemory_Data
  8391                           
  8392                           ;MCU_B1.c: 1063: setMemory_Data(0, product->Data[12]);
  8393  0EF4  0020               	movlb	0	; select bank0
  8394  0EF5  086D               	movf	_product,w
  8395  0EF6  0086               	movwf	6
  8396  0EF7  3001               	movlw	1	; select bank2/3
  8397  0EF8  0087               	movwf	7
  8398  0EF9  3001               	movlw	1	; select bank2/3
  8399  0EFA  3F4C               	moviw [12]fsr1
  8400  0EFB  00F2               	movwf	setMemory_Data@data
  8401  0EFC  3000               	movlw	0
  8402  0EFD  3192  2286  318E   	fcall	_setMemory_Data
  8403                           
  8404                           ;MCU_B1.c: 1064: setMemory_Data(1, product->Data[13]);
  8405  0F00  0020               	movlb	0	; select bank0
  8406  0F01  086D               	movf	_product,w
  8407  0F02  0086               	movwf	6
  8408  0F03  3001               	movlw	1	; select bank2/3
  8409  0F04  0087               	movwf	7
  8410  0F05  3001               	movlw	1	; select bank2/3
  8411  0F06  3F4D               	moviw [13]fsr1
  8412  0F07  00F2               	movwf	setMemory_Data@data
  8413  0F08  3001               	movlw	1
  8414  0F09  3192  2286  318E   	fcall	_setMemory_Data
  8415                           
  8416                           ;MCU_B1.c: 1065: setMemory_Data(2, product->Data[14]);
  8417  0F0C  0020               	movlb	0	; select bank0
  8418  0F0D  086D               	movf	_product,w
  8419  0F0E  0086               	movwf	6
  8420  0F0F  3001               	movlw	1	; select bank2/3
  8421  0F10  0087               	movwf	7
  8422  0F11  3001               	movlw	1	; select bank2/3
  8423  0F12  3F4E               	moviw [14]fsr1
  8424  0F13  00F2               	movwf	setMemory_Data@data
  8425  0F14  3002               	movlw	2
  8426  0F15  3192  2286  318E   	fcall	_setMemory_Data
  8427                           
  8428                           ;MCU_B1.c: 1067: setMemory_Data(3, product->Data[21]);
  8429  0F18  0020               	movlb	0	; select bank0
  8430  0F19  086D               	movf	_product,w
  8431  0F1A  0086               	movwf	6
  8432  0F1B  3001               	movlw	1	; select bank2/3
  8433  0F1C  0087               	movwf	7
  8434  0F1D  3001               	movlw	1	; select bank2/3
  8435  0F1E  3F55               	moviw [21]fsr1
  8436  0F1F  00F2               	movwf	setMemory_Data@data
  8437  0F20  3003               	movlw	3
  8438  0F21  3192  2286  318E   	fcall	_setMemory_Data
  8439                           
  8440                           ;MCU_B1.c: 1068: setMemory_Data(4, product->Data[22]);
  8441  0F24  0020               	movlb	0	; select bank0
  8442  0F25  086D               	movf	_product,w
  8443  0F26  0086               	movwf	6
  8444  0F27  3001               	movlw	1	; select bank2/3
  8445  0F28  0087               	movwf	7
  8446  0F29  3001               	movlw	1	; select bank2/3
  8447  0F2A  3F56               	moviw [22]fsr1
  8448  0F2B  00F2               	movwf	setMemory_Data@data
  8449  0F2C  3004               	movlw	4
  8450  0F2D  3192  2286  318E   	fcall	_setMemory_Data
  8451                           
  8452                           ;MCU_B1.c: 1069: setMemory_Data(5, product->Data[23]);
  8453  0F30  0020               	movlb	0	; select bank0
  8454  0F31  086D               	movf	_product,w
  8455  0F32  0086               	movwf	6
  8456  0F33  3001               	movlw	1	; select bank2/3
  8457  0F34  0087               	movwf	7
  8458  0F35  3001               	movlw	1	; select bank2/3
  8459  0F36  3F57               	moviw [23]fsr1
  8460  0F37  00F2               	movwf	setMemory_Data@data
  8461  0F38  3005               	movlw	5
  8462  0F39  3192  2286  318E   	fcall	_setMemory_Data
  8463                           
  8464                           ;MCU_B1.c: 1070: if (myMain.SaveDimmer == 1) {
  8465  0F3C  0021               	movlb	1	; select bank1
  8466  0F3D  1EBA               	btfss	(_myMain^(0+128)+10),5
  8467  0F3E  2F48               	goto	l7006
  8468                           
  8469                           ;MCU_B1.c: 1071: myMain.SaveDimmer = 0;
  8470  0F3F  12BA               	bcf	(_myMain^(0+128)+10),5
  8471                           
  8472                           ;MCU_B1.c: 1072: setMemory_Data(30, 0xaa);
  8473  0F40  30AA               	movlw	170
  8474  0F41  00F6               	movwf	??_Flash_Memory_Modify
  8475  0F42  0876               	movf	??_Flash_Memory_Modify,w
  8476  0F43  00F2               	movwf	setMemory_Data@data
  8477  0F44  301E               	movlw	30
  8478  0F45  3192  2286  318E   	fcall	_setMemory_Data
  8479  0F48                     l7006:	
  8480                           
  8481                           ;MCU_B1.c: 1073: }
  8482                           ;MCU_B1.c: 1075: if (Memory.LoopSave == 1) {
  8483  0F48  0023               	movlb	3	; select bank3
  8484  0F49  1D44               	btfss	(_Memory^(0+384)+36),2
  8485  0F4A  2F4F               	goto	l949
  8486                           
  8487                           ;MCU_B1.c: 1076: Memory.LoopSave = 0;
  8488  0F4B  1144               	bcf	(_Memory^(0+384)+36),2
  8489                           
  8490                           ;MCU_B1.c: 1077: myMain.FirstOpen = 0;
  8491  0F4C  0021               	movlb	1	; select bank1
  8492  0F4D  11B0               	bcf	_myMain^(0+128),3
  8493                           
  8494                           ;MCU_B1.c: 1078: myMain.First = 0;
  8495  0F4E  12B0               	bcf	_myMain^(0+128),5
  8496  0F4F                     l949:	
  8497                           
  8498                           ;MCU_B1.c: 1080: }
  8499                           ;MCU_B1.c: 1081: GIE = 0;
  8500  0F4F  138B               	bcf	11,7	;volatile
  8501                           
  8502                           ;MCU_B1.c: 1082: Flash_Memory_Erasing();
  8503  0F50  3192  22BF  318E   	fcall	_Flash_Memory_Erasing
  8504                           
  8505                           ;MCU_B1.c: 1083: Flash_Memory_Write();
  8506  0F53  3195  25C9         	fcall	_Flash_Memory_Write
  8507                           
  8508                           ;MCU_B1.c: 1084: GIE = 1;
  8509  0F55  178B               	bsf	11,7	;volatile
  8510  0F56  0008               	return
  8511  0F57                     __end_of_Flash_Memory_Modify:	
  8512                           
  8513                           	psect	text46
  8514  12BF                     __ptext46:	
  8515 ;; *************** function _Flash_Memory_Erasing *****************
  8516 ;; Defined at:
  8517 ;;		line 1046 in file "../src/MCU_B1.c"
  8518 ;; Parameters:    Size  Location     Type
  8519 ;;		None
  8520 ;; Auto vars:     Size  Location     Type
  8521 ;;		None
  8522 ;; Return value:  Size  Location     Type
  8523 ;;		None               void
  8524 ;; Registers used:
  8525 ;;		wreg, status,2, status,0, pclath, cstack
  8526 ;; Tracked objects:
  8527 ;;		On entry : 0/0
  8528 ;;		On exit  : 0/0
  8529 ;;		Unchanged: 0/0
  8530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8535 ;;Total ram usage:        0 bytes
  8536 ;; Hardware stack levels used:    1
  8537 ;; Hardware stack levels required when called:    4
  8538 ;; This function calls:
  8539 ;;		_Flash_Memory_Unlock
  8540 ;; This function is called by:
  8541 ;;		_Flash_Memory_Modify
  8542 ;; This function uses a non-reentrant model
  8543 ;;
  8544                           
  8545                           
  8546                           ;psect for function _Flash_Memory_Erasing
  8547  12BF                     _Flash_Memory_Erasing:	
  8548                           
  8549                           ;MCU_B1.c: 1047: CFGS = 0;
  8550                           
  8551                           ;incstack = 0
  8552                           ; Regs used in _Flash_Memory_Erasing: [wreg+status,2+status,0+pclath+cstack]
  8553  12BF  0023               	movlb	3	; select bank3
  8554  12C0  1315               	bcf	21,6	;volatile
  8555                           
  8556                           ;MCU_B1.c: 1048: PMADRH = 0x30;
  8557  12C1  3030               	movlw	48
  8558  12C2  0092               	movwf	18	;volatile
  8559                           
  8560                           ;MCU_B1.c: 1049: PMADRL = 0x00;
  8561  12C3  0191               	clrf	17	;volatile
  8562                           
  8563                           ;MCU_B1.c: 1050: FREE = 1;
  8564  12C4  1615               	bsf	21,4	;volatile
  8565                           
  8566                           ;MCU_B1.c: 1051: WREN = 1;
  8567  12C5  1515               	bsf	21,2	;volatile
  8568                           
  8569                           ;MCU_B1.c: 1052: Flash_Memory_Unlock();
  8570  12C6  3192  2249         	fcall	_Flash_Memory_Unlock
  8571                           
  8572                           ;MCU_B1.c: 1053: WREN = 0;
  8573  12C8  0023               	movlb	3	; select bank3
  8574  12C9  1115               	bcf	21,2	;volatile
  8575  12CA  0008               	return
  8576  12CB                     __end_of_Flash_Memory_Erasing:	
  8577                           
  8578                           	psect	text47
  8579  05DD                     __ptext47:	
  8580 ;; *************** function _Flash_Memory_Initialization *****************
  8581 ;; Defined at:
  8582 ;;		line 934 in file "../src/MCU_B1.c"
  8583 ;; Parameters:    Size  Location     Type
  8584 ;;		None
  8585 ;; Auto vars:     Size  Location     Type
  8586 ;;  value           1    7[COMMON] unsigned char 
  8587 ;; Return value:  Size  Location     Type
  8588 ;;		None               void
  8589 ;; Registers used:
  8590 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8591 ;; Tracked objects:
  8592 ;;		On entry : 0/0
  8593 ;;		On exit  : 0/0
  8594 ;;		Unchanged: 0/0
  8595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8597 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8598 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8599 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8600 ;;Total ram usage:        2 bytes
  8601 ;; Hardware stack levels used:    1
  8602 ;; Hardware stack levels required when called:    5
  8603 ;; This function calls:
  8604 ;;		_Flash_Memory_Read
  8605 ;;		_Flash_Memory_Write
  8606 ;;		_setMemory_Data
  8607 ;; This function is called by:
  8608 ;;		_main
  8609 ;; This function uses a non-reentrant model
  8610 ;;
  8611                           
  8612                           
  8613                           ;psect for function _Flash_Memory_Initialization
  8614  05DD                     _Flash_Memory_Initialization:	
  8615                           
  8616                           ;MCU_B1.c: 935: char value = 0;
  8617                           
  8618                           ;incstack = 0
  8619                           ; Regs used in _Flash_Memory_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  8620  05DD  01F7               	clrf	Flash_Memory_Initialization@value
  8621                           
  8622                           ;MCU_B1.c: 936: if (Flash_Memory_Read(31) == 0xaa) {
  8623  05DE  301F               	movlw	31
  8624  05DF  3194  2410  3185   	fcall	_Flash_Memory_Read
  8625  05E2  3AAA               	xorlw	170
  8626  05E3  1D03               	skipz
  8627  05E4  2E5F               	goto	l7202
  8628                           
  8629                           ;MCU_B1.c: 937: product->Data[11] = Flash_Memory_Read(6);
  8630  05E5  3006               	movlw	6
  8631  05E6  3194  2410  3185   	fcall	_Flash_Memory_Read
  8632  05E9  00F6               	movwf	??_Flash_Memory_Initialization
  8633  05EA  0020               	movlb	0	; select bank0
  8634  05EB  086D               	movf	_product,w
  8635  05EC  3E0B               	addlw	11
  8636  05ED  0086               	movwf	6
  8637  05EE  3001               	movlw	1	; select bank2/3
  8638  05EF  0087               	movwf	7
  8639  05F0  0876               	movf	??_Flash_Memory_Initialization,w
  8640  05F1  0081               	movwf	1
  8641                           
  8642                           ;MCU_B1.c: 938: product->Data[12] = Flash_Memory_Read(0);
  8643  05F2  3000               	movlw	0
  8644  05F3  3194  2410  3185   	fcall	_Flash_Memory_Read
  8645  05F6  00F6               	movwf	??_Flash_Memory_Initialization
  8646  05F7  0020               	movlb	0	; select bank0
  8647  05F8  086D               	movf	_product,w
  8648  05F9  3E0C               	addlw	12
  8649  05FA  0086               	movwf	6
  8650  05FB  3001               	movlw	1	; select bank2/3
  8651  05FC  0087               	movwf	7
  8652  05FD  0876               	movf	??_Flash_Memory_Initialization,w
  8653  05FE  0081               	movwf	1
  8654                           
  8655                           ;MCU_B1.c: 939: product->Data[13] = Flash_Memory_Read(1);
  8656  05FF  3001               	movlw	1
  8657  0600  3194  2410  3185   	fcall	_Flash_Memory_Read
  8658  0603  00F6               	movwf	??_Flash_Memory_Initialization
  8659  0604  0020               	movlb	0	; select bank0
  8660  0605  086D               	movf	_product,w
  8661  0606  3E0D               	addlw	13
  8662  0607  0086               	movwf	6
  8663  0608  3001               	movlw	1	; select bank2/3
  8664  0609  0087               	movwf	7
  8665  060A  0876               	movf	??_Flash_Memory_Initialization,w
  8666  060B  0081               	movwf	1
  8667                           
  8668                           ;MCU_B1.c: 940: product->Data[14] = Flash_Memory_Read(2);
  8669  060C  3002               	movlw	2
  8670  060D  3194  2410  3185   	fcall	_Flash_Memory_Read
  8671  0610  00F6               	movwf	??_Flash_Memory_Initialization
  8672  0611  0020               	movlb	0	; select bank0
  8673  0612  086D               	movf	_product,w
  8674  0613  3E0E               	addlw	14
  8675  0614  0086               	movwf	6
  8676  0615  3001               	movlw	1	; select bank2/3
  8677  0616  0087               	movwf	7
  8678  0617  0876               	movf	??_Flash_Memory_Initialization,w
  8679  0618  0081               	movwf	1
  8680                           
  8681                           ;MCU_B1.c: 943: product->Data[21] = Flash_Memory_Read(3);
  8682  0619  3003               	movlw	3
  8683  061A  3194  2410  3185   	fcall	_Flash_Memory_Read
  8684  061D  00F6               	movwf	??_Flash_Memory_Initialization
  8685  061E  0020               	movlb	0	; select bank0
  8686  061F  086D               	movf	_product,w
  8687  0620  3E15               	addlw	21
  8688  0621  0086               	movwf	6
  8689  0622  3001               	movlw	1	; select bank2/3
  8690  0623  0087               	movwf	7
  8691  0624  0876               	movf	??_Flash_Memory_Initialization,w
  8692  0625  0081               	movwf	1
  8693                           
  8694                           ;MCU_B1.c: 944: product->Data[22] = Flash_Memory_Read(4);
  8695  0626  3004               	movlw	4
  8696  0627  3194  2410  3185   	fcall	_Flash_Memory_Read
  8697  062A  00F6               	movwf	??_Flash_Memory_Initialization
  8698  062B  0020               	movlb	0	; select bank0
  8699  062C  086D               	movf	_product,w
  8700  062D  3E16               	addlw	22
  8701  062E  0086               	movwf	6
  8702  062F  3001               	movlw	1	; select bank2/3
  8703  0630  0087               	movwf	7
  8704  0631  0876               	movf	??_Flash_Memory_Initialization,w
  8705  0632  0081               	movwf	1
  8706                           
  8707                           ;MCU_B1.c: 945: product->Data[23] = Flash_Memory_Read(5);
  8708  0633  3005               	movlw	5
  8709  0634  3194  2410  3185   	fcall	_Flash_Memory_Read
  8710  0637  00F6               	movwf	??_Flash_Memory_Initialization
  8711  0638  0020               	movlb	0	; select bank0
  8712  0639  086D               	movf	_product,w
  8713  063A  3E17               	addlw	23
  8714  063B  0086               	movwf	6
  8715  063C  3001               	movlw	1	; select bank2/3
  8716  063D  0087               	movwf	7
  8717  063E  0876               	movf	??_Flash_Memory_Initialization,w
  8718  063F  0081               	movwf	1
  8719                           
  8720                           ;MCU_B1.c: 952: if (product->Data[12] == 0xff && product->Data[13] == 0xff && product->D
      +                          ata[14] == 0xff) {
  8721  0640  086D               	movf	_product,w
  8722  0641  3E0C               	addlw	12
  8723  0642  0086               	movwf	6
  8724  0643  3001               	movlw	1	; select bank2/3
  8725  0644  0087               	movwf	7
  8726  0645  0801               	movf	1,w
  8727  0646  3AFF               	xorlw	255
  8728  0647  1D03               	skipz
  8729  0648  0008               	return
  8730  0649  086D               	movf	_product,w
  8731  064A  3E0D               	addlw	13
  8732  064B  0086               	movwf	6
  8733  064C  3001               	movlw	1	; select bank2/3
  8734  064D  0087               	movwf	7
  8735  064E  0801               	movf	1,w
  8736  064F  3AFF               	xorlw	255
  8737  0650  1D03               	skipz
  8738  0651  0008               	return
  8739  0652  086D               	movf	_product,w
  8740  0653  3E0E               	addlw	14
  8741  0654  0086               	movwf	6
  8742  0655  3001               	movlw	1	; select bank2/3
  8743  0656  0087               	movwf	7
  8744  0657  0801               	movf	1,w
  8745  0658  3AFF               	xorlw	255
  8746  0659  1D03               	skipz
  8747  065A  0008               	return
  8748                           
  8749                           ;MCU_B1.c: 953: myMain.FirstOpen = 1;
  8750  065B  0021               	movlb	1	; select bank1
  8751  065C  15B0               	bsf	_myMain^(0+128),3
  8752                           
  8753                           ;MCU_B1.c: 954: myMain.First = 1;
  8754  065D  16B0               	bsf	_myMain^(0+128),5
  8755                           
  8756                           ;MCU_B1.c: 955: }
  8757                           ;MCU_B1.c: 956: } else {
  8758  065E  0008               	return
  8759  065F                     l7202:	
  8760                           
  8761                           ;MCU_B1.c: 958: setMemory_Data(0, 0xff);
  8762  065F  30FF               	movlw	255
  8763  0660  00F6               	movwf	??_Flash_Memory_Initialization
  8764  0661  0876               	movf	??_Flash_Memory_Initialization,w
  8765  0662  00F2               	movwf	setMemory_Data@data
  8766  0663  3000               	movlw	0
  8767  0664  3192  2286  3185   	fcall	_setMemory_Data
  8768                           
  8769                           ;MCU_B1.c: 959: setMemory_Data(1, 0xff);
  8770  0667  30FF               	movlw	255
  8771  0668  00F6               	movwf	??_Flash_Memory_Initialization
  8772  0669  0876               	movf	??_Flash_Memory_Initialization,w
  8773  066A  00F2               	movwf	setMemory_Data@data
  8774  066B  3001               	movlw	1
  8775  066C  3192  2286  3185   	fcall	_setMemory_Data
  8776                           
  8777                           ;MCU_B1.c: 960: setMemory_Data(2, 0xff);
  8778  066F  30FF               	movlw	255
  8779  0670  00F6               	movwf	??_Flash_Memory_Initialization
  8780  0671  0876               	movf	??_Flash_Memory_Initialization,w
  8781  0672  00F2               	movwf	setMemory_Data@data
  8782  0673  3002               	movlw	2
  8783  0674  3192  2286  3185   	fcall	_setMemory_Data
  8784                           
  8785                           ;MCU_B1.c: 961: setMemory_Data(3, 0xff);
  8786  0677  30FF               	movlw	255
  8787  0678  00F6               	movwf	??_Flash_Memory_Initialization
  8788  0679  0876               	movf	??_Flash_Memory_Initialization,w
  8789  067A  00F2               	movwf	setMemory_Data@data
  8790  067B  3003               	movlw	3
  8791  067C  3192  2286  3185   	fcall	_setMemory_Data
  8792                           
  8793                           ;MCU_B1.c: 962: setMemory_Data(4, 0xff);
  8794  067F  30FF               	movlw	255
  8795  0680  00F6               	movwf	??_Flash_Memory_Initialization
  8796  0681  0876               	movf	??_Flash_Memory_Initialization,w
  8797  0682  00F2               	movwf	setMemory_Data@data
  8798  0683  3004               	movlw	4
  8799  0684  3192  2286  3185   	fcall	_setMemory_Data
  8800                           
  8801                           ;MCU_B1.c: 963: setMemory_Data(5, 0xff);
  8802  0687  30FF               	movlw	255
  8803  0688  00F6               	movwf	??_Flash_Memory_Initialization
  8804  0689  0876               	movf	??_Flash_Memory_Initialization,w
  8805  068A  00F2               	movwf	setMemory_Data@data
  8806  068B  3005               	movlw	5
  8807  068C  3192  2286  3185   	fcall	_setMemory_Data
  8808                           
  8809                           ;MCU_B1.c: 964: setMemory_Data(6, 0xff);
  8810  068F  30FF               	movlw	255
  8811  0690  00F6               	movwf	??_Flash_Memory_Initialization
  8812  0691  0876               	movf	??_Flash_Memory_Initialization,w
  8813  0692  00F2               	movwf	setMemory_Data@data
  8814  0693  3006               	movlw	6
  8815  0694  3192  2286  3185   	fcall	_setMemory_Data
  8816                           
  8817                           ;MCU_B1.c: 965: setMemory_Data(31, 0xaa);
  8818  0697  30AA               	movlw	170
  8819  0698  00F6               	movwf	??_Flash_Memory_Initialization
  8820  0699  0876               	movf	??_Flash_Memory_Initialization,w
  8821  069A  00F2               	movwf	setMemory_Data@data
  8822  069B  301F               	movlw	31
  8823  069C  3192  2286  3185   	fcall	_setMemory_Data
  8824                           
  8825                           ;MCU_B1.c: 970: GIE = 0;
  8826  069F  138B               	bcf	11,7	;volatile
  8827                           
  8828                           ;MCU_B1.c: 971: Flash_Memory_Write();
  8829  06A0  3195  25C9         	fcall	_Flash_Memory_Write
  8830                           
  8831                           ;MCU_B1.c: 972: GIE = 1;
  8832  06A2  178B               	bsf	11,7	;volatile
  8833                           
  8834                           ;MCU_B1.c: 973: myMain.FirstOpen = 1;
  8835  06A3  0021               	movlb	1	; select bank1
  8836  06A4  15B0               	bsf	_myMain^(0+128),3
  8837                           
  8838                           ;MCU_B1.c: 974: myMain.First = 1;
  8839  06A5  16B0               	bsf	_myMain^(0+128),5
  8840                           
  8841                           ;MCU_B1.c: 975: myMain.InitDimmer = 1;
  8842  06A6  163A               	bsf	(_myMain^(0+128)+10),4
  8843  06A7  0008               	return
  8844  06A8                     __end_of_Flash_Memory_Initialization:	
  8845                           
  8846                           	psect	text48
  8847  1286                     __ptext48:	
  8848 ;; *************** function _setMemory_Data *****************
  8849 ;; Defined at:
  8850 ;;		line 1099 in file "../src/MCU_B1.c"
  8851 ;; Parameters:    Size  Location     Type
  8852 ;;  address         1    wreg     unsigned char 
  8853 ;;  data            1    2[COMMON] unsigned char 
  8854 ;; Auto vars:     Size  Location     Type
  8855 ;;  address         1    4[COMMON] unsigned char 
  8856 ;; Return value:  Size  Location     Type
  8857 ;;		None               void
  8858 ;; Registers used:
  8859 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8860 ;; Tracked objects:
  8861 ;;		On entry : 0/0
  8862 ;;		On exit  : 0/0
  8863 ;;		Unchanged: 0/0
  8864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8865 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8866 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8867 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8868 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8869 ;;Total ram usage:        3 bytes
  8870 ;; Hardware stack levels used:    1
  8871 ;; Hardware stack levels required when called:    3
  8872 ;; This function calls:
  8873 ;;		Nothing
  8874 ;; This function is called by:
  8875 ;;		_Flash_Memory_Initialization
  8876 ;;		_Flash_Memory_Modify
  8877 ;; This function uses a non-reentrant model
  8878 ;;
  8879                           
  8880                           
  8881                           ;psect for function _setMemory_Data
  8882  1286                     _setMemory_Data:	
  8883                           
  8884                           ;incstack = 0
  8885                           ; Regs used in _setMemory_Data: [wreg+fsr1l+fsr1h+status,2+status,0]
  8886                           ;setMemory_Data@address stored from wreg
  8887  1286  00F4               	movwf	setMemory_Data@address
  8888                           
  8889                           ;MCU_B1.c: 1100: Memory.Data[address] = data;
  8890  1287  0872               	movf	setMemory_Data@data,w
  8891  1288  00F3               	movwf	??_setMemory_Data
  8892  1289  0874               	movf	setMemory_Data@address,w
  8893  128A  3EA0               	addlw	_Memory& (0+255)
  8894  128B  0086               	movwf	6
  8895  128C  3001               	movlw	1	; select bank3/4
  8896  128D  0087               	movwf	7
  8897  128E  0873               	movf	??_setMemory_Data,w
  8898  128F  0081               	movwf	1
  8899  1290  0008               	return
  8900  1291                     __end_of_setMemory_Data:	
  8901                           
  8902                           	psect	text49
  8903  15C9                     __ptext49:	
  8904 ;; *************** function _Flash_Memory_Write *****************
  8905 ;; Defined at:
  8906 ;;		line 1027 in file "../src/MCU_B1.c"
  8907 ;; Parameters:    Size  Location     Type
  8908 ;;		None
  8909 ;; Auto vars:     Size  Location     Type
  8910 ;;  i               1    3[COMMON] unsigned char 
  8911 ;; Return value:  Size  Location     Type
  8912 ;;		None               void
  8913 ;; Registers used:
  8914 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8915 ;; Tracked objects:
  8916 ;;		On entry : 0/0
  8917 ;;		On exit  : 0/0
  8918 ;;		Unchanged: 0/0
  8919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8921 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8922 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8923 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8924 ;;Total ram usage:        2 bytes
  8925 ;; Hardware stack levels used:    1
  8926 ;; Hardware stack levels required when called:    4
  8927 ;; This function calls:
  8928 ;;		_Flash_Memory_Unlock
  8929 ;; This function is called by:
  8930 ;;		_Flash_Memory_Initialization
  8931 ;;		_Flash_Memory_Modify
  8932 ;; This function uses a non-reentrant model
  8933 ;;
  8934                           
  8935                           
  8936                           ;psect for function _Flash_Memory_Write
  8937  15C9                     _Flash_Memory_Write:	
  8938                           
  8939                           ;MCU_B1.c: 1028: char i = 0;
  8940                           
  8941                           ;incstack = 0
  8942                           ; Regs used in _Flash_Memory_Write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8943  15C9  01F3               	clrf	Flash_Memory_Write@i
  8944                           
  8945                           ;MCU_B1.c: 1029: CFGS = 0;
  8946  15CA  0023               	movlb	3	; select bank3
  8947  15CB  1315               	bcf	21,6	;volatile
  8948                           
  8949                           ;MCU_B1.c: 1030: PMADRH = 0x30;
  8950  15CC  3030               	movlw	48
  8951  15CD  0092               	movwf	18	;volatile
  8952                           
  8953                           ;MCU_B1.c: 1031: PMDATH = 0;
  8954  15CE  0194               	clrf	20	;volatile
  8955                           
  8956                           ;MCU_B1.c: 1032: FREE = 0;
  8957  15CF  1215               	bcf	21,4	;volatile
  8958                           
  8959                           ;MCU_B1.c: 1033: LWLO = 1;
  8960  15D0  1695               	bsf	21,5	;volatile
  8961                           
  8962                           ;MCU_B1.c: 1034: WREN = 1;
  8963  15D1  1515               	bsf	21,2	;volatile
  8964                           
  8965                           ;MCU_B1.c: 1035: for (i = 0; i < 32; i++) {
  8966  15D2  01F3               	clrf	Flash_Memory_Write@i
  8967  15D3  3020               	movlw	32
  8968  15D4  0273               	subwf	Flash_Memory_Write@i,w
  8969  15D5  1803               	btfsc	3,0
  8970  15D6  2DEC               	goto	l939
  8971  15D7                     l6804:	
  8972                           
  8973                           ;MCU_B1.c: 1036: PMADRL = i;
  8974  15D7  0873               	movf	Flash_Memory_Write@i,w
  8975  15D8  0023               	movlb	3	; select bank3
  8976  15D9  0091               	movwf	17	;volatile
  8977                           
  8978                           ;MCU_B1.c: 1037: PMDATL = Memory.Data[i];
  8979  15DA  0873               	movf	Flash_Memory_Write@i,w
  8980  15DB  3EA0               	addlw	_Memory& (0+255)
  8981  15DC  0086               	movwf	6
  8982  15DD  3001               	movlw	1	; select bank3/4
  8983  15DE  0087               	movwf	7
  8984  15DF  0801               	movf	1,w
  8985  15E0  0093               	movwf	19	;volatile
  8986                           
  8987                           ;MCU_B1.c: 1038: Flash_Memory_Unlock();
  8988  15E1  3192  2249  3195   	fcall	_Flash_Memory_Unlock
  8989  15E4  3001               	movlw	1
  8990  15E5  00F2               	movwf	??_Flash_Memory_Write
  8991  15E6  0872               	movf	??_Flash_Memory_Write,w
  8992  15E7  07F3               	addwf	Flash_Memory_Write@i,f
  8993  15E8  3020               	movlw	32
  8994  15E9  0273               	subwf	Flash_Memory_Write@i,w
  8995  15EA  1C03               	skipc
  8996  15EB  2DD7               	goto	l6804
  8997  15EC                     l939:	
  8998                           
  8999                           ;MCU_B1.c: 1039: }
  9000                           ;MCU_B1.c: 1040: LWLO = 0;
  9001  15EC  0023               	movlb	3	; select bank3
  9002  15ED  1295               	bcf	21,5	;volatile
  9003                           
  9004                           ;MCU_B1.c: 1041: Flash_Memory_Unlock();
  9005  15EE  3192  2249         	fcall	_Flash_Memory_Unlock
  9006                           
  9007                           ;MCU_B1.c: 1042: WREN = 0;
  9008  15F0  0023               	movlb	3	; select bank3
  9009  15F1  1115               	bcf	21,2	;volatile
  9010  15F2  0008               	return
  9011  15F3                     __end_of_Flash_Memory_Write:	
  9012                           
  9013                           	psect	text50
  9014  1249                     __ptext50:	
  9015 ;; *************** function _Flash_Memory_Unlock *****************
  9016 ;; Defined at:
  9017 ;;		line 1006 in file "../src/MCU_B1.c"
  9018 ;; Parameters:    Size  Location     Type
  9019 ;;		None
  9020 ;; Auto vars:     Size  Location     Type
  9021 ;;		None
  9022 ;; Return value:  Size  Location     Type
  9023 ;;		None               void
  9024 ;; Registers used:
  9025 ;;		wreg
  9026 ;; Tracked objects:
  9027 ;;		On entry : 0/0
  9028 ;;		On exit  : 0/0
  9029 ;;		Unchanged: 0/0
  9030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9035 ;;Total ram usage:        0 bytes
  9036 ;; Hardware stack levels used:    1
  9037 ;; Hardware stack levels required when called:    3
  9038 ;; This function calls:
  9039 ;;		Nothing
  9040 ;; This function is called by:
  9041 ;;		_Flash_Memory_Write
  9042 ;;		_Flash_Memory_Erasing
  9043 ;; This function uses a non-reentrant model
  9044 ;;
  9045                           
  9046                           
  9047                           ;psect for function _Flash_Memory_Unlock
  9048  1249                     _Flash_Memory_Unlock:	
  9049                           
  9050                           ;MCU_B1.c: 1007: PMCON2 = 0x55;
  9051                           
  9052                           ;incstack = 0
  9053                           ; Regs used in _Flash_Memory_Unlock: [wreg]
  9054  1249  3055               	movlw	85
  9055  124A  0023               	movlb	3	; select bank3
  9056  124B  0096               	movwf	22	;volatile
  9057                           
  9058                           ;MCU_B1.c: 1008: PMCON2 = 0xaa;
  9059  124C  30AA               	movlw	170
  9060  124D  0096               	movwf	22	;volatile
  9061                           
  9062                           ;MCU_B1.c: 1009: WR = 1;
  9063  124E  1495               	bsf	21,1	;volatile
  9064                           
  9065                           ;MCU_B1.c: 1010: __nop();
  9066  124F  0000               	nop
  9067                           
  9068                           ;MCU_B1.c: 1011: __nop();
  9069  1250  0000               	nop
  9070  1251  0008               	return
  9071  1252                     __end_of_Flash_Memory_Unlock:	
  9072                           
  9073                           	psect	text51
  9074  1410                     __ptext51:	
  9075 ;; *************** function _Flash_Memory_Read *****************
  9076 ;; Defined at:
  9077 ;;		line 1015 in file "../src/MCU_B1.c"
  9078 ;; Parameters:    Size  Location     Type
  9079 ;;  address         1    wreg     unsigned char 
  9080 ;; Auto vars:     Size  Location     Type
  9081 ;;  address         1    4[COMMON] unsigned char 
  9082 ;;  ret             1    5[COMMON] unsigned char 
  9083 ;;  i               1    3[COMMON] unsigned char 
  9084 ;; Return value:  Size  Location     Type
  9085 ;;                  1    wreg      unsigned char 
  9086 ;; Registers used:
  9087 ;;		wreg, status,2
  9088 ;; Tracked objects:
  9089 ;;		On entry : 0/0
  9090 ;;		On exit  : 0/0
  9091 ;;		Unchanged: 0/0
  9092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9094 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9095 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9096 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9097 ;;Total ram usage:        4 bytes
  9098 ;; Hardware stack levels used:    1
  9099 ;; Hardware stack levels required when called:    3
  9100 ;; This function calls:
  9101 ;;		Nothing
  9102 ;; This function is called by:
  9103 ;;		_Flash_Memory_Initialization
  9104 ;;		_Flash_Memory_Modify
  9105 ;; This function uses a non-reentrant model
  9106 ;;
  9107                           
  9108                           
  9109                           ;psect for function _Flash_Memory_Read
  9110  1410                     _Flash_Memory_Read:	
  9111                           
  9112                           ;incstack = 0
  9113                           ; Regs used in _Flash_Memory_Read: [wreg+status,2]
  9114                           ;Flash_Memory_Read@address stored from wreg
  9115  1410  00F4               	movwf	Flash_Memory_Read@address
  9116                           
  9117                           ;MCU_B1.c: 1016: char i = 0, ret = 0;
  9118  1411  01F3               	clrf	Flash_Memory_Read@i
  9119  1412  01F5               	clrf	Flash_Memory_Read@ret
  9120                           
  9121                           ;MCU_B1.c: 1017: PMADRH = 0x30;
  9122  1413  3030               	movlw	48
  9123  1414  0023               	movlb	3	; select bank3
  9124  1415  0092               	movwf	18	;volatile
  9125                           
  9126                           ;MCU_B1.c: 1018: PMADRL = address;
  9127  1416  0874               	movf	Flash_Memory_Read@address,w
  9128  1417  0091               	movwf	17	;volatile
  9129                           
  9130                           ;MCU_B1.c: 1019: CFGS = 0;
  9131  1418  1315               	bcf	21,6	;volatile
  9132                           
  9133                           ;MCU_B1.c: 1020: RD = 1;
  9134  1419  1415               	bsf	21,0	;volatile
  9135                           
  9136                           ;MCU_B1.c: 1021: i = PMDATH;
  9137  141A  0814               	movf	20,w	;volatile
  9138  141B  00F2               	movwf	??_Flash_Memory_Read
  9139  141C  0872               	movf	??_Flash_Memory_Read,w
  9140  141D  00F3               	movwf	Flash_Memory_Read@i
  9141                           
  9142                           ;MCU_B1.c: 1022: ret = PMDATL;
  9143  141E  0813               	movf	19,w	;volatile
  9144  141F  00F2               	movwf	??_Flash_Memory_Read
  9145  1420  0872               	movf	??_Flash_Memory_Read,w
  9146  1421  00F5               	movwf	Flash_Memory_Read@ret
  9147                           
  9148                           ;MCU_B1.c: 1023: return ret;
  9149  1422  0875               	movf	Flash_Memory_Read@ret,w
  9150  1423  0008               	return
  9151  1424                     __end_of_Flash_Memory_Read:	
  9152                           
  9153                           	psect	text52
  9154  050D                     __ptext52:	
  9155 ;; *************** function _Exception_Main *****************
  9156 ;; Defined at:
  9157 ;;		line 504 in file "../src/Main_B1.c"
  9158 ;; Parameters:    Size  Location     Type
  9159 ;;		None
  9160 ;; Auto vars:     Size  Location     Type
  9161 ;;  i               2   11[BANK0 ] int 
  9162 ;;  i               2    9[BANK0 ] int 
  9163 ;;  lights          1   13[BANK0 ] unsigned char 
  9164 ;;  error           1    8[BANK0 ] unsigned char 
  9165 ;;  count           1    7[BANK0 ] unsigned char 
  9166 ;;  status          1    6[BANK0 ] unsigned char 
  9167 ;; Return value:  Size  Location     Type
  9168 ;;		None               void
  9169 ;; Registers used:
  9170 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9171 ;; Tracked objects:
  9172 ;;		On entry : 0/0
  9173 ;;		On exit  : 0/0
  9174 ;;		Unchanged: 0/0
  9175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9177 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9178 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9179 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9180 ;;Total ram usage:        9 bytes
  9181 ;; Hardware stack levels used:    1
  9182 ;; Hardware stack levels required when called:    5
  9183 ;; This function calls:
  9184 ;;		_getDimmerLights_Line
  9185 ;;		_getDimmerLights_Status
  9186 ;;		_getMain_All_Error_Status
  9187 ;;		_getMain_All_LightsStatus
  9188 ;;		_setBuz
  9189 ;;		_setDimmerLights_SwOff
  9190 ;;		_setLED
  9191 ;; This function is called by:
  9192 ;;		_main
  9193 ;; This function uses a non-reentrant model
  9194 ;;
  9195                           
  9196                           
  9197                           ;psect for function _Exception_Main
  9198  050D                     _Exception_Main:	
  9199                           
  9200                           ;Main_B1.c: 505: char error = getMain_All_Error_Status(0);
  9201                           
  9202                           ;incstack = 0
  9203                           ; Regs used in _Exception_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9204  050D  3000               	movlw	0
  9205  050E  3196  261F  3185   	fcall	_getMain_All_Error_Status
  9206  0511  00F9               	movwf	??_Exception_Main
  9207  0512  0879               	movf	??_Exception_Main,w
  9208  0513  0020               	movlb	0	; select bank0
  9209  0514  00A8               	movwf	Exception_Main@error
  9210                           
  9211                           ;Main_B1.c: 506: char lights = 0, count = 1;
  9212  0515  01AD               	clrf	Exception_Main@lights
  9213  0516  01A7               	clrf	Exception_Main@count
  9214  0517  0AA7               	incf	Exception_Main@count,f
  9215                           
  9216                           ;Main_B1.c: 507: char status = 0;
  9217  0518  01A6               	clrf	Exception_Main@status
  9218                           
  9219                           ;Main_B1.c: 509: if (myMain.Error_Run == 1) {
  9220  0519  0021               	movlb	1	; select bank1
  9221  051A  1DBA               	btfss	(_myMain^(0+128)+10),3
  9222  051B  2D2A               	goto	l7456
  9223                           
  9224                           ;Main_B1.c: 510: if (error == 0) {
  9225  051C  0020               	movlb	0	; select bank0
  9226  051D  08A8               	movf	Exception_Main@error,f
  9227  051E  1D03               	skipz
  9228  051F  0008               	return
  9229                           
  9230                           ;Main_B1.c: 511: myMain.Error_Run = 0;
  9231  0520  0021               	movlb	1	; select bank1
  9232  0521  11BA               	bcf	(_myMain^(0+128)+10),3
  9233                           
  9234                           ;Main_B1.c: 514: setLED(99, 10);
  9235  0522  300A               	movlw	10
  9236  0523  00F9               	movwf	??_Exception_Main
  9237  0524  0879               	movf	??_Exception_Main,w
  9238  0525  00F4               	movwf	setLED@command
  9239  0526  3063               	movlw	99
  9240  0527  3196  26AA         	fcall	_setLED
  9241                           
  9242                           ;Main_B1.c: 527: }
  9243                           ;Main_B1.c: 528: } else {
  9244  0529  0008               	return
  9245  052A                     l7456:	
  9246                           
  9247                           ;Main_B1.c: 529: if (error != 0) {
  9248  052A  0020               	movlb	0	; select bank0
  9249  052B  0828               	movf	Exception_Main@error,w
  9250  052C  1903               	btfsc	3,2
  9251  052D  0008               	return
  9252                           
  9253                           ;Main_B1.c: 530: myMain.Error_Run = 1;
  9254  052E  0021               	movlb	1	; select bank1
  9255  052F  15BA               	bsf	(_myMain^(0+128)+10),3
  9256                           
  9257                           ;Main_B1.c: 532: setLED(99, 11);
  9258  0530  300B               	movlw	11
  9259  0531  00F9               	movwf	??_Exception_Main
  9260  0532  0879               	movf	??_Exception_Main,w
  9261  0533  00F4               	movwf	setLED@command
  9262  0534  3063               	movlw	99
  9263  0535  3196  26AA  3185   	fcall	_setLED
  9264                           
  9265                           ;Main_B1.c: 543: switch (error) {
  9266  0538  2DD2               	goto	l7504
  9267  0539                     l7462:	
  9268                           ;Main_B1.c: 544: case 2:
  9269                           
  9270                           
  9271                           ;Main_B1.c: 551: if (getMain_All_LightsStatus() == 1) {
  9272  0539  3192  221F  3185   	fcall	_getMain_All_LightsStatus
  9273  053C  3A01               	xorlw	1
  9274  053D  1D03               	skipz
  9275  053E  2D48               	goto	l7466
  9276                           
  9277                           ;Main_B1.c: 552: setBuz(10, 300);
  9278  053F  302C               	movlw	44
  9279  0540  0020               	movlb	0	; select bank0
  9280  0541  00A4               	movwf	setBuz@time
  9281  0542  3001               	movlw	1
  9282  0543  00A5               	movwf	setBuz@time+1
  9283  0544  300A               	movlw	10
  9284  0545  3189  215C  3185   	fcall	_setBuz
  9285  0548                     l7466:	
  9286                           
  9287                           ;Main_B1.c: 553: }
  9288                           ;Main_B1.c: 555: for (int i = 0; i < count; i++) {
  9289  0548  0020               	movlb	0	; select bank0
  9290  0549  01A9               	clrf	Exception_Main@i
  9291  054A  01AA               	clrf	Exception_Main@i+1
  9292  054B                     l7476:	
  9293  054B  082A               	movf	Exception_Main@i+1,w
  9294  054C  3A80               	xorlw	128
  9295  054D  00F9               	movwf	??_Exception_Main
  9296  054E  3080               	movlw	128
  9297  054F  0279               	subwf	??_Exception_Main,w
  9298  0550  1D03               	skipz
  9299  0551  2D54               	goto	u8705
  9300  0552  0827               	movf	Exception_Main@count,w
  9301  0553  0229               	subwf	Exception_Main@i,w
  9302  0554                     u8705:	
  9303  0554  1803               	btfsc	3,0
  9304  0555  2D75               	goto	u8700
  9305                           
  9306                           ;Main_B1.c: 557: if (getDimmerLights_Status(i + 1) == 1) {
  9307  0556  0020               	movlb	0	; select bank0
  9308  0557  0829               	movf	Exception_Main@i,w
  9309  0558  3E01               	addlw	1
  9310  0559  3193  2335  3185   	fcall	_getDimmerLights_Status
  9311  055C  3A01               	xorlw	1
  9312  055D  1D03               	skipz
  9313  055E  2D6F               	goto	l7474
  9314                           
  9315                           ;Main_B1.c: 558: DimmerLights->SwFlag = 1;
  9316  055F  0020               	movlb	0	; select bank0
  9317  0560  086B               	movf	_DimmerLights,w
  9318  0561  0086               	movwf	6
  9319  0562  3001               	movlw	1	; select bank2/3
  9320  0563  0087               	movwf	7
  9321  0564  1401               	bsf	1,0
  9322                           
  9323                           ;Main_B1.c: 559: DimmerLights->Status = 0;
  9324  0565  0A6B               	incf	_DimmerLights,w
  9325  0566  0086               	movwf	6
  9326  0567  3001               	movlw	1	; select bank2/3
  9327  0568  0087               	movwf	7
  9328  0569  1001               	bcf	1,0
  9329                           
  9330                           ;Main_B1.c: 560: setDimmerLights_SwOff(i + 1);
  9331  056A  0829               	movf	Exception_Main@i,w
  9332  056B  3E01               	addlw	1
  9333  056C  3197  2785  3185   	fcall	_setDimmerLights_SwOff
  9334  056F                     l7474:	
  9335  056F  3001               	movlw	1
  9336  0570  0020               	movlb	0	; select bank0
  9337  0571  07A9               	addwf	Exception_Main@i,f
  9338  0572  3000               	movlw	0
  9339  0573  3DAA               	addwfc	Exception_Main@i+1,f
  9340  0574  2D4B               	goto	l7476
  9341  0575                     u8700:	
  9342  0575  0020               	movlb	0	; select bank0
  9343  0576  0008               	return
  9344  0577                     l7478:	
  9345                           ;Main_B1.c: 566: case 3:
  9346                           
  9347                           ;Main_B1.c: 561: }
  9348                           ;Main_B1.c: 562: }
  9349                           ;Main_B1.c: 565: break;
  9350                           
  9351                           
  9352                           ;Main_B1.c: 568: setBuz(5, 300);
  9353  0577  302C               	movlw	44
  9354  0578  0020               	movlb	0	; select bank0
  9355  0579  00A4               	movwf	setBuz@time
  9356  057A  3001               	movlw	1
  9357  057B  00A5               	movwf	setBuz@time+1
  9358  057C  3005               	movlw	5
  9359  057D  3189  215C  3185   	fcall	_setBuz
  9360                           
  9361                           ;Main_B1.c: 569: lights = getDimmerLights_Line();
  9362  0580  3192  2227  3185   	fcall	_getDimmerLights_Line
  9363  0583  00F9               	movwf	??_Exception_Main
  9364  0584  0879               	movf	??_Exception_Main,w
  9365  0585  0020               	movlb	0	; select bank0
  9366  0586  00AD               	movwf	Exception_Main@lights
  9367                           
  9368                           ;Main_B1.c: 570: if (lights == 0) {
  9369  0587  08AD               	movf	Exception_Main@lights,f
  9370  0588  1D03               	skipz
  9371  0589  2DB8               	goto	l7496
  9372                           
  9373                           ;Main_B1.c: 572: for (int i = 0; i < count; i++) {
  9374  058A  01AB               	clrf	Exception_Main@i_3488
  9375  058B  01AC               	clrf	Exception_Main@i_3488+1
  9376  058C                     l7494:	
  9377  058C  082C               	movf	Exception_Main@i_3488+1,w
  9378  058D  3A80               	xorlw	128
  9379  058E  00F9               	movwf	??_Exception_Main
  9380  058F  3080               	movlw	128
  9381  0590  0279               	subwf	??_Exception_Main,w
  9382  0591  1D03               	skipz
  9383  0592  2D95               	goto	u8735
  9384  0593  0827               	movf	Exception_Main@count,w
  9385  0594  022B               	subwf	Exception_Main@i_3488,w
  9386  0595                     u8735:	
  9387  0595  1803               	btfsc	3,0
  9388  0596  2DB6               	goto	u8730
  9389                           
  9390                           ;Main_B1.c: 574: if (getDimmerLights_Status(i + 1) == 1) {
  9391  0597  0020               	movlb	0	; select bank0
  9392  0598  082B               	movf	Exception_Main@i_3488,w
  9393  0599  3E01               	addlw	1
  9394  059A  3193  2335  3185   	fcall	_getDimmerLights_Status
  9395  059D  3A01               	xorlw	1
  9396  059E  1D03               	skipz
  9397  059F  2DB0               	goto	l7492
  9398                           
  9399                           ;Main_B1.c: 575: DimmerLights->SwFlag = 1;
  9400  05A0  0020               	movlb	0	; select bank0
  9401  05A1  086B               	movf	_DimmerLights,w
  9402  05A2  0086               	movwf	6
  9403  05A3  3001               	movlw	1	; select bank2/3
  9404  05A4  0087               	movwf	7
  9405  05A5  1401               	bsf	1,0
  9406                           
  9407                           ;Main_B1.c: 576: DimmerLights->Status = 0;
  9408  05A6  0A6B               	incf	_DimmerLights,w
  9409  05A7  0086               	movwf	6
  9410  05A8  3001               	movlw	1	; select bank2/3
  9411  05A9  0087               	movwf	7
  9412  05AA  1001               	bcf	1,0
  9413                           
  9414                           ;Main_B1.c: 577: setDimmerLights_SwOff(i + 1);
  9415  05AB  082B               	movf	Exception_Main@i_3488,w
  9416  05AC  3E01               	addlw	1
  9417  05AD  3197  2785  3185   	fcall	_setDimmerLights_SwOff
  9418  05B0                     l7492:	
  9419  05B0  3001               	movlw	1
  9420  05B1  0020               	movlb	0	; select bank0
  9421  05B2  07AB               	addwf	Exception_Main@i_3488,f
  9422  05B3  3000               	movlw	0
  9423  05B4  3DAC               	addwfc	Exception_Main@i_3488+1,f
  9424  05B5  2D8C               	goto	l7494
  9425  05B6                     u8730:	
  9426  05B6  0020               	movlb	0	; select bank0
  9427  05B7  0008               	return
  9428  05B8                     l7496:	
  9429                           ;Main_B1.c: 578: }
  9430                           ;Main_B1.c: 579: }
  9431                           ;Main_B1.c: 580: } else {
  9432                           
  9433                           
  9434                           ;Main_B1.c: 582: if (getDimmerLights_Status(lights) == 1) {
  9435  05B8  0020               	movlb	0	; select bank0
  9436  05B9  082D               	movf	Exception_Main@lights,w
  9437  05BA  3193  2335  3185   	fcall	_getDimmerLights_Status
  9438  05BD  3A01               	xorlw	1
  9439  05BE  1903               	btfsc	3,2
  9440  05BF  2DC2               	goto	l7498
  9441  05C0  0020               	movlb	0	; select bank0
  9442  05C1  0008               	return
  9443  05C2                     l7498:	
  9444                           
  9445                           ;Main_B1.c: 584: DimmerLights->SwFlag = 1;
  9446  05C2  0020               	movlb	0	; select bank0
  9447  05C3  086B               	movf	_DimmerLights,w
  9448  05C4  0086               	movwf	6
  9449  05C5  3001               	movlw	1	; select bank2/3
  9450  05C6  0087               	movwf	7
  9451  05C7  1401               	bsf	1,0
  9452                           
  9453                           ;Main_B1.c: 585: DimmerLights->Status = 0;
  9454  05C8  0A6B               	incf	_DimmerLights,w
  9455  05C9  0086               	movwf	6
  9456  05CA  3001               	movlw	1	; select bank2/3
  9457  05CB  0087               	movwf	7
  9458  05CC  1001               	bcf	1,0
  9459                           
  9460                           ;Main_B1.c: 586: setDimmerLights_SwOff(lights);
  9461  05CD  082D               	movf	Exception_Main@lights,w
  9462  05CE  3197  2785         	fcall	_setDimmerLights_SwOff
  9463  05D0  0020               	movlb	0	; select bank0
  9464  05D1  0008               	return
  9465  05D2                     l7504:	
  9466                           ;Main_B1.c: 591: }
  9467                           
  9468                           ;Main_B1.c: 587: }
  9469                           ;Main_B1.c: 588: }
  9470                           ;Main_B1.c: 590: break;
  9471                           
  9472  05D2  0020               	movlb	0	; select bank0
  9473  05D3  0828               	movf	Exception_Main@error,w
  9474                           
  9475                           ; Switch size 1, requested type "space"
  9476                           ; Number of cases is 2, Range of values is 2 to 3
  9477                           ; switch strategies available:
  9478                           ; Name         Instructions Cycles
  9479                           ; simple_byte            7     4 (average)
  9480                           ; direct_byte           13     9 (fixed)
  9481                           ; jumptable            263     9 (fixed)
  9482                           ;	Chosen strategy is simple_byte
  9483  05D4  3A02               	xorlw	2	; case 2
  9484  05D5  1903               	skipnz
  9485  05D6  2D39               	goto	l7462
  9486  05D7  3A01               	xorlw	1	; case 3
  9487  05D8  1903               	skipnz
  9488  05D9  2D77               	goto	l7478
  9489  05DA  2DDC               	goto	l1149
  9490  05DB  0008               	return
  9491  05DC                     l1149:	
  9492  05DC  0008               	return
  9493  05DD                     __end_of_Exception_Main:	
  9494                           
  9495                           	psect	text53
  9496  1227                     __ptext53:	
  9497 ;; *************** function _getDimmerLights_Line *****************
  9498 ;; Defined at:
  9499 ;;		line 1238 in file "../src/Dimmer_B1.c"
  9500 ;; Parameters:    Size  Location     Type
  9501 ;;		None
  9502 ;; Auto vars:     Size  Location     Type
  9503 ;;  line            1    2[COMMON] unsigned char 
  9504 ;; Return value:  Size  Location     Type
  9505 ;;                  1    wreg      unsigned char 
  9506 ;; Registers used:
  9507 ;;		wreg, status,2
  9508 ;; Tracked objects:
  9509 ;;		On entry : 0/0
  9510 ;;		On exit  : 0/0
  9511 ;;		Unchanged: 0/0
  9512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9514 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9516 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9517 ;;Total ram usage:        1 bytes
  9518 ;; Hardware stack levels used:    1
  9519 ;; Hardware stack levels required when called:    3
  9520 ;; This function calls:
  9521 ;;		Nothing
  9522 ;; This function is called by:
  9523 ;;		_Exception_Main
  9524 ;; This function uses a non-reentrant model
  9525 ;;
  9526                           
  9527                           
  9528                           ;psect for function _getDimmerLights_Line
  9529  1227                     _getDimmerLights_Line:	
  9530                           
  9531                           ;Dimmer_B1.c: 1239: char line = 0;
  9532                           
  9533                           ;incstack = 0
  9534                           ; Regs used in _getDimmerLights_Line: [wreg+status,2]
  9535  1227  01F2               	clrf	getDimmerLights_Line@line
  9536                           
  9537                           ;Dimmer_B1.c: 1241: if (DimmerLights1.Line == 1) {
  9538  1228  0022               	movlb	2	; select bank2
  9539  1229  1CD9               	btfss	(_DimmerLights1^(0+256)+1),1
  9540  122A  2A2D               	goto	l5442
  9541                           
  9542                           ;Dimmer_B1.c: 1242: line = 1;
  9543  122B  01F2               	clrf	getDimmerLights_Line@line
  9544  122C  0AF2               	incf	getDimmerLights_Line@line,f
  9545  122D                     l5442:	
  9546                           
  9547                           ;Dimmer_B1.c: 1243: }
  9548                           ;Dimmer_B1.c: 1255: return line;
  9549  122D  0872               	movf	getDimmerLights_Line@line,w
  9550  122E  0008               	return
  9551  122F                     __end_of_getDimmerLights_Line:	
  9552                           
  9553                           	psect	text54
  9554  157E                     __ptext54:	
  9555 ;; *************** function _DimmerLights_Main *****************
  9556 ;; Defined at:
  9557 ;;		line 867 in file "../src/Dimmer_B1.c"
  9558 ;; Parameters:    Size  Location     Type
  9559 ;;		None
  9560 ;; Auto vars:     Size  Location     Type
  9561 ;;		None
  9562 ;; Return value:  Size  Location     Type
  9563 ;;		None               void
  9564 ;; Registers used:
  9565 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9566 ;; Tracked objects:
  9567 ;;		On entry : 0/0
  9568 ;;		On exit  : 0/0
  9569 ;;		Unchanged: 0/0
  9570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9575 ;;Total ram usage:        0 bytes
  9576 ;; Hardware stack levels used:    1
  9577 ;; Hardware stack levels required when called:    8
  9578 ;; This function calls:
  9579 ;;		_DimmerLights_DimmingFunction
  9580 ;;		_DimmerLights_TwoPhase_Main
  9581 ;;		_getLoad_OK
  9582 ;;		_getMain_All_Error_Status
  9583 ;;		_getMain_All_LightsStatus
  9584 ;;		_setDimmerLights_Main
  9585 ;; This function is called by:
  9586 ;;		_main
  9587 ;; This function uses a non-reentrant model
  9588 ;;
  9589                           
  9590                           
  9591                           ;psect for function _DimmerLights_Main
  9592  157E                     _DimmerLights_Main:	
  9593                           
  9594                           ;Dimmer_B1.c: 870: if (Dimmer.LoadGO == 1) {
  9595                           
  9596                           ;incstack = 0
  9597                           ; Regs used in _DimmerLights_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9598  157E  0021               	movlb	1	; select bank1
  9599  157F  1CC9               	btfss	_Dimmer^(0+128),1
  9600  1580  2D96               	goto	l7182
  9601                           
  9602                           ;Dimmer_B1.c: 871: if (getLoad_OK() == 1 || getMain_All_Error_Status(0) != 0 || getMain_
      +                          All_LightsStatus() == 0) {
  9603  1581  3191  21FC  3195   	fcall	_getLoad_OK
  9604  1584  3A01               	xorlw	1
  9605  1585  1903               	skipnz
  9606  1586  2D94               	goto	l467
  9607  1587  3000               	movlw	0
  9608  1588  3196  261F  3195   	fcall	_getMain_All_Error_Status
  9609  158B  3800               	iorlw	0
  9610  158C  1D03               	skipz
  9611  158D  2D94               	goto	l467
  9612  158E  3192  221F  3195   	fcall	_getMain_All_LightsStatus
  9613  1591  3800               	iorlw	0
  9614  1592  1D03               	skipz
  9615  1593  2D96               	goto	l7182
  9616  1594                     l467:	
  9617                           
  9618                           ;Dimmer_B1.c: 872: Dimmer.LoadGO = 0;
  9619  1594  0021               	movlb	1	; select bank1
  9620  1595  10C9               	bcf	_Dimmer^(0+128),1
  9621  1596                     l7182:	
  9622                           
  9623                           ;Dimmer_B1.c: 873: }
  9624                           ;Dimmer_B1.c: 874: }
  9625                           ;Dimmer_B1.c: 879: setDimmerLights_Main(1);
  9626  1596  3001               	movlw	1
  9627  1597  318C  24F1  3195   	fcall	_setDimmerLights_Main
  9628                           
  9629                           ;Dimmer_B1.c: 882: DimmerLights_DimmingFunction(1);
  9630  159A  3001               	movlw	1
  9631  159B  3189  21AF  3195   	fcall	_DimmerLights_DimmingFunction
  9632                           
  9633                           ;Dimmer_B1.c: 886: DimmerLights_TwoPhase_Main(1);
  9634  159E  3001               	movlw	1
  9635  159F  318A  2256         	fcall	_DimmerLights_TwoPhase_Main
  9636  15A1  0008               	return
  9637  15A2                     __end_of_DimmerLights_Main:	
  9638                           
  9639                           	psect	text55
  9640  0CF1                     __ptext55:	
  9641 ;; *************** function _setDimmerLights_Main *****************
  9642 ;; Defined at:
  9643 ;;		line 924 in file "../src/Dimmer_B1.c"
  9644 ;; Parameters:    Size  Location     Type
  9645 ;;  lights          1    wreg     unsigned char 
  9646 ;; Auto vars:     Size  Location     Type
  9647 ;;  lights          1   73[BANK0 ] unsigned char 
  9648 ;; Return value:  Size  Location     Type
  9649 ;;		None               void
  9650 ;; Registers used:
  9651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9652 ;; Tracked objects:
  9653 ;;		On entry : 0/0
  9654 ;;		On exit  : 0/0
  9655 ;;		Unchanged: 0/0
  9656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9658 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9660 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9661 ;;Total ram usage:        1 bytes
  9662 ;; Hardware stack levels used:    1
  9663 ;; Hardware stack levels required when called:    7
  9664 ;; This function calls:
  9665 ;;		_DimmerLights_SelectPointer
  9666 ;;		_getDimmerLights_Allow_Condition
  9667 ;;		_getMain_All_LightsStatus
  9668 ;;		_setDimmerLights_Dimming
  9669 ;;		_setDimmerLights_OnOff
  9670 ;; This function is called by:
  9671 ;;		_DimmerLights_Main
  9672 ;; This function uses a non-reentrant model
  9673 ;;
  9674                           
  9675                           
  9676                           ;psect for function _setDimmerLights_Main
  9677  0CF1                     _setDimmerLights_Main:	
  9678                           
  9679                           ;incstack = 0
  9680                           ; Regs used in _setDimmerLights_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9681                           ;setDimmerLights_Main@lights stored from wreg
  9682  0CF1  0020               	movlb	0	; select bank0
  9683  0CF2  00E9               	movwf	setDimmerLights_Main@lights
  9684                           
  9685                           ;Dimmer_B1.c: 926: DimmerLights_SelectPointer(lights);
  9686  0CF3  0869               	movf	setDimmerLights_Main@lights,w
  9687  0CF4  3192  2270  318C   	fcall	_DimmerLights_SelectPointer
  9688                           
  9689                           ;Dimmer_B1.c: 927: if (DimmerLights->Trigger == 1) {
  9690  0CF7  0020               	movlb	0	; select bank0
  9691  0CF8  086B               	movf	_DimmerLights,w
  9692  0CF9  0086               	movwf	6
  9693  0CFA  3001               	movlw	1	; select bank2/3
  9694  0CFB  0087               	movwf	7
  9695  0CFC  1C81               	btfss	1,1
  9696  0CFD  2D1D               	goto	l6890
  9697                           
  9698                           ;Dimmer_B1.c: 928: if (getDimmerLights_Allow_Condition(lights) == 0) {
  9699  0CFE  0869               	movf	setDimmerLights_Main@lights,w
  9700  0CFF  3193  23D6  318C   	fcall	_getDimmerLights_Allow_Condition
  9701  0D02  3800               	iorlw	0
  9702  0D03  1D03               	skipz
  9703  0D04  0008               	return
  9704                           
  9705                           ;Dimmer_B1.c: 929: DimmerLights->Trigger = 0;
  9706  0D05  0020               	movlb	0	; select bank0
  9707  0D06  086B               	movf	_DimmerLights,w
  9708  0D07  0086               	movwf	6
  9709  0D08  3001               	movlw	1	; select bank2/3
  9710  0D09  0087               	movwf	7
  9711  0D0A  1081               	bcf	1,1
  9712                           
  9713                           ;Dimmer_B1.c: 930: if (DimmerLights->Switch == 1) {
  9714  0D0B  086B               	movf	_DimmerLights,w
  9715  0D0C  0086               	movwf	6
  9716  0D0D  3001               	movlw	1	; select bank2/3
  9717  0D0E  0087               	movwf	7
  9718  0D0F  1D01               	btfss	1,2
  9719  0D10  2D17               	goto	l6888
  9720                           
  9721                           ;Dimmer_B1.c: 931: setDimmerLights_OnOff(lights, 1);
  9722  0D11  01E5               	clrf	setDimmerLights_OnOff@command
  9723  0D12  0AE5               	incf	setDimmerLights_OnOff@command,f
  9724  0D13  0869               	movf	setDimmerLights_Main@lights,w
  9725  0D14  3187  275C         	fcall	_setDimmerLights_OnOff
  9726                           
  9727                           ;Dimmer_B1.c: 932: } else {
  9728  0D16  0008               	return
  9729  0D17                     l6888:	
  9730                           
  9731                           ;Dimmer_B1.c: 933: setDimmerLights_OnOff(lights, 0);
  9732  0D17  0020               	movlb	0	; select bank0
  9733  0D18  01E5               	clrf	setDimmerLights_OnOff@command
  9734  0D19  0869               	movf	setDimmerLights_Main@lights,w
  9735  0D1A  3187  275C         	fcall	_setDimmerLights_OnOff
  9736                           
  9737                           ;Dimmer_B1.c: 934: }
  9738                           ;Dimmer_B1.c: 935: }
  9739                           ;Dimmer_B1.c: 936: } else {
  9740  0D1C  0008               	return
  9741  0D1D                     l6890:	
  9742                           
  9743                           ;Dimmer_B1.c: 937: if (getMain_All_LightsStatus() == 1) {
  9744  0D1D  3192  221F  318C   	fcall	_getMain_All_LightsStatus
  9745  0D20  3A01               	xorlw	1
  9746  0D21  1D03               	skipz
  9747  0D22  2D49               	goto	l6902
  9748                           
  9749                           ;Dimmer_B1.c: 938: if (DimmerLights->DimmingTrigger == 1) {
  9750  0D23  0020               	movlb	0	; select bank0
  9751  0D24  086B               	movf	_DimmerLights,w
  9752  0D25  0086               	movwf	6
  9753  0D26  3001               	movlw	1	; select bank2/3
  9754  0D27  0087               	movwf	7
  9755  0D28  1E01               	btfss	1,4
  9756  0D29  0008               	return
  9757                           
  9758                           ;Dimmer_B1.c: 939: if (getDimmerLights_Allow_Condition(lights) == 0) {
  9759  0D2A  0869               	movf	setDimmerLights_Main@lights,w
  9760  0D2B  3193  23D6  318C   	fcall	_getDimmerLights_Allow_Condition
  9761  0D2E  3800               	iorlw	0
  9762  0D2F  1D03               	skipz
  9763  0D30  0008               	return
  9764                           
  9765                           ;Dimmer_B1.c: 940: DimmerLights->DimmingTrigger = 0;
  9766  0D31  0020               	movlb	0	; select bank0
  9767  0D32  086B               	movf	_DimmerLights,w
  9768  0D33  0086               	movwf	6
  9769  0D34  3001               	movlw	1	; select bank2/3
  9770  0D35  0087               	movwf	7
  9771  0D36  1201               	bcf	1,4
  9772                           
  9773                           ;Dimmer_B1.c: 941: if (DimmerLights->DimmingSwitch == 1) {
  9774  0D37  086B               	movf	_DimmerLights,w
  9775  0D38  0086               	movwf	6
  9776  0D39  3001               	movlw	1	; select bank2/3
  9777  0D3A  0087               	movwf	7
  9778  0D3B  1E81               	btfss	1,5
  9779  0D3C  2D43               	goto	l6900
  9780                           
  9781                           ;Dimmer_B1.c: 942: setDimmerLights_Dimming(lights, 1);
  9782  0D3D  01DD               	clrf	setDimmerLights_Dimming@status
  9783  0D3E  0ADD               	incf	setDimmerLights_Dimming@status,f
  9784  0D3F  0869               	movf	setDimmerLights_Main@lights,w
  9785  0D40  3188  2033         	fcall	_setDimmerLights_Dimming
  9786                           
  9787                           ;Dimmer_B1.c: 943: } else {
  9788  0D42  0008               	return
  9789  0D43                     l6900:	
  9790                           
  9791                           ;Dimmer_B1.c: 944: setDimmerLights_Dimming(lights, 0);
  9792  0D43  0020               	movlb	0	; select bank0
  9793  0D44  01DD               	clrf	setDimmerLights_Dimming@status
  9794  0D45  0869               	movf	setDimmerLights_Main@lights,w
  9795  0D46  3188  2033         	fcall	_setDimmerLights_Dimming
  9796                           
  9797                           ;Dimmer_B1.c: 945: }
  9798                           ;Dimmer_B1.c: 946: }
  9799                           ;Dimmer_B1.c: 947: }
  9800                           ;Dimmer_B1.c: 948: } else {
  9801  0D48  0008               	return
  9802  0D49                     l6902:	
  9803                           
  9804                           ;Dimmer_B1.c: 949: if (DimmerLights->DimmingTrigger == 1) {
  9805  0D49  0020               	movlb	0	; select bank0
  9806  0D4A  086B               	movf	_DimmerLights,w
  9807  0D4B  0086               	movwf	6
  9808  0D4C  3001               	movlw	1	; select bank2/3
  9809  0D4D  0087               	movwf	7
  9810  0D4E  1E01               	btfss	1,4
  9811  0D4F  0008               	return
  9812                           
  9813                           ;Dimmer_B1.c: 950: DimmerLights->DimmingTrigger = 0;
  9814  0D50  086B               	movf	_DimmerLights,w
  9815  0D51  0086               	movwf	6
  9816  0D52  3001               	movlw	1	; select bank2/3
  9817  0D53  0087               	movwf	7
  9818  0D54  1201               	bcf	1,4
  9819  0D55  0008               	return
  9820  0D56                     __end_of_setDimmerLights_Main:	
  9821                           
  9822                           	psect	text56
  9823  075C                     __ptext56:	
  9824 ;; *************** function _setDimmerLights_OnOff *****************
  9825 ;; Defined at:
  9826 ;;		line 1001 in file "../src/Dimmer_B1.c"
  9827 ;; Parameters:    Size  Location     Type
  9828 ;;  lights          1    wreg     unsigned char 
  9829 ;;  command         1   69[BANK0 ] unsigned char 
  9830 ;; Auto vars:     Size  Location     Type
  9831 ;;  lights          1   72[BANK0 ] unsigned char 
  9832 ;; Return value:  Size  Location     Type
  9833 ;;		None               void
  9834 ;; Registers used:
  9835 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9836 ;; Tracked objects:
  9837 ;;		On entry : 0/0
  9838 ;;		On exit  : 0/0
  9839 ;;		Unchanged: 0/0
  9840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9841 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9842 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9843 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9844 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9845 ;;Total ram usage:        4 bytes
  9846 ;; Hardware stack levels used:    1
  9847 ;; Hardware stack levels required when called:    6
  9848 ;; This function calls:
  9849 ;;		_DimmerIntr_ValueCalculate
  9850 ;;		_getCmd_Status
  9851 ;;		_getDelayOff_GO
  9852 ;;		_getDimmerLights_PercentToValue
  9853 ;;		_getMain_All_LightsStatus
  9854 ;;		_setCmd_Status
  9855 ;;		_setDelayOff_GO
  9856 ;;		_setDimmerIntr_ControlStatus
  9857 ;;		_setDimmerIntr_DimmingValue
  9858 ;;		_setDimmerIntr_Dimming_RF
  9859 ;;		_setDimmerIntr_MaxmumValue
  9860 ;;		_setDimmerLights_DimmingClose
  9861 ;;		_setDimmerLights_Line
  9862 ;;		_setLED
  9863 ;;		_setProductData
  9864 ;; This function is called by:
  9865 ;;		_setDimmerLights_Main
  9866 ;; This function uses a non-reentrant model
  9867 ;;
  9868                           
  9869                           
  9870                           ;psect for function _setDimmerLights_OnOff
  9871  075C                     _setDimmerLights_OnOff:	
  9872                           
  9873                           ;incstack = 0
  9874                           ; Regs used in _setDimmerLights_OnOff: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9875                           ;setDimmerLights_OnOff@lights stored from wreg
  9876  075C  0020               	movlb	0	; select bank0
  9877  075D  00E8               	movwf	setDimmerLights_OnOff@lights
  9878                           
  9879                           ;Dimmer_B1.c: 1003: if (command == 1) {
  9880  075E  0865               	movf	setDimmerLights_OnOff@command,w
  9881  075F  3A01               	xorlw	1
  9882  0760  1D03               	skipz
  9883  0761  2FB0               	goto	l6706
  9884                           
  9885                           ;Dimmer_B1.c: 1005: setDimmerIntr_ControlStatus(lights, 1);
  9886  0762  01F2               	clrf	setDimmerIntr_ControlStatus@command
  9887  0763  0AF2               	incf	setDimmerIntr_ControlStatus@command,f
  9888  0764  0868               	movf	setDimmerLights_OnOff@lights,w
  9889  0765  3194  2439  3187   	fcall	_setDimmerIntr_ControlStatus
  9890                           
  9891                           ;Dimmer_B1.c: 1008: Dimmer.Load_Status = 1;
  9892  0768  0021               	movlb	1	; select bank1
  9893  0769  1549               	bsf	_Dimmer^(0+128),2
  9894                           
  9895                           ;Dimmer_B1.c: 1009: setDimmerLights_Line(lights);
  9896  076A  0020               	movlb	0	; select bank0
  9897  076B  0868               	movf	setDimmerLights_OnOff@lights,w
  9898  076C  3192  22FD  3187   	fcall	_setDimmerLights_Line
  9899                           
  9900                           ;Dimmer_B1.c: 1015: setLED(lights, 0);
  9901  076F  01F4               	clrf	setLED@command
  9902  0770  0020               	movlb	0	; select bank0
  9903  0771  0868               	movf	setDimmerLights_OnOff@lights,w
  9904  0772  3196  26AA  3187   	fcall	_setLED
  9905                           
  9906                           ;Dimmer_B1.c: 1016: ;;
  9907                           ;Dimmer_B1.c: 1036: if (DimmerLights->DimmingRun == 1) {
  9908  0775  0020               	movlb	0	; select bank0
  9909  0776  0A6B               	incf	_DimmerLights,w
  9910  0777  0086               	movwf	6
  9911  0778  3001               	movlw	1	; select bank2/3
  9912  0779  0087               	movwf	7
  9913  077A  1F01               	btfss	1,6
  9914  077B  2F9D               	goto	l6698
  9915                           
  9916                           ;Dimmer_B1.c: 1037: DimmerLights->DimmingRun = 0;
  9917  077C  0A6B               	incf	_DimmerLights,w
  9918  077D  0086               	movwf	6
  9919  077E  3001               	movlw	1	; select bank2/3
  9920  077F  0087               	movwf	7
  9921  0780  1301               	bcf	1,6
  9922                           
  9923                           ;Dimmer_B1.c: 1038: setDimmerIntr_MaxmumValue(lights, getDimmerLights_PercentToValue(pro
      +                          duct->Data[20 + lights]));
  9924  0781  0868               	movf	setDimmerLights_OnOff@lights,w
  9925  0782  3E14               	addlw	20
  9926  0783  076D               	addwf	_product,w
  9927  0784  00E6               	movwf	??_setDimmerLights_OnOff
  9928  0785  0866               	movf	??_setDimmerLights_OnOff,w
  9929  0786  0086               	movwf	6
  9930  0787  3001               	movlw	1	; select bank2/3
  9931  0788  0087               	movwf	7
  9932  0789  0801               	movf	1,w
  9933  078A  318C  2427  3187   	fcall	_getDimmerLights_PercentToValue
  9934  078D  0020               	movlb	0	; select bank0
  9935  078E  00E7               	movwf	??_setDimmerLights_OnOff+1
  9936  078F  0867               	movf	??_setDimmerLights_OnOff+1,w
  9937  0790  00DA               	movwf	setDimmerIntr_MaxmumValue@value
  9938  0791  0868               	movf	setDimmerLights_OnOff@lights,w
  9939  0792  3192  22B3  3187   	fcall	_setDimmerIntr_MaxmumValue
  9940                           
  9941                           ;Dimmer_B1.c: 1039: setDimmerIntr_Dimming_RF(lights, 1);
  9942  0795  01F2               	clrf	setDimmerIntr_Dimming_RF@command
  9943  0796  0AF2               	incf	setDimmerIntr_Dimming_RF@command,f
  9944  0797  0020               	movlb	0	; select bank0
  9945  0798  0868               	movf	setDimmerLights_OnOff@lights,w
  9946  0799  3194  2424  3187   	fcall	_setDimmerIntr_Dimming_RF
  9947                           
  9948                           ;Dimmer_B1.c: 1040: } else {
  9949  079C  2FA6               	goto	l6700
  9950  079D                     l6698:	
  9951                           
  9952                           ;Dimmer_B1.c: 1045: setDimmerIntr_DimmingValue(lights, ((char)(10*0.6))+((((char)(82*0.6
      +                          ))-((char)(10*0.6)))/2));
  9953  079D  301B               	movlw	27
  9954  079E  0020               	movlb	0	; select bank0
  9955  079F  00E6               	movwf	??_setDimmerLights_OnOff
  9956  07A0  0866               	movf	??_setDimmerLights_OnOff,w
  9957  07A1  00F2               	movwf	setDimmerIntr_DimmingValue@value
  9958  07A2  0868               	movf	setDimmerLights_OnOff@lights,w
  9959  07A3  3192  227B  3187   	fcall	_setDimmerIntr_DimmingValue
  9960  07A6                     l6700:	
  9961                           
  9962                           ;Dimmer_B1.c: 1049: }
  9963                           ;Dimmer_B1.c: 1051: if (lights == 1) {
  9964  07A6  0020               	movlb	0	; select bank0
  9965  07A7  0868               	movf	setDimmerLights_OnOff@lights,w
  9966  07A8  3A01               	xorlw	1
  9967  07A9  1D03               	skipz
  9968  07AA  2FDA               	goto	l6720
  9969                           
  9970                           ;Dimmer_B1.c: 1054: DimmerIntr_ValueCalculate(1);
  9971  07AB  3001               	movlw	1
  9972  07AC  3195  25F3  3187   	fcall	_DimmerIntr_ValueCalculate
  9973                           
  9974                           ;Dimmer_B1.c: 1061: }
  9975                           ;Dimmer_B1.c: 1067: } else if (command == 0) {
  9976                           
  9977                           ;Dimmer_B1.c: 1056: } else if (lights == 2) {
  9978  07AF  2FDA               	goto	l6720
  9979  07B0                     l6706:	
  9980  07B0  0020               	movlb	0	; select bank0
  9981  07B1  08E5               	movf	setDimmerLights_OnOff@command,f
  9982  07B2  1D03               	skipz
  9983  07B3  2FDA               	goto	l6720
  9984                           
  9985                           ;Dimmer_B1.c: 1069: setDimmerIntr_ControlStatus(lights, 0);
  9986  07B4  01F2               	clrf	setDimmerIntr_ControlStatus@command
  9987  07B5  0868               	movf	setDimmerLights_OnOff@lights,w
  9988  07B6  3194  2439  3187   	fcall	_setDimmerIntr_ControlStatus
  9989                           
  9990                           ;Dimmer_B1.c: 1071: Dimmer.Load_Status = 0;
  9991  07B9  0021               	movlb	1	; select bank1
  9992  07BA  1149               	bcf	_Dimmer^(0+128),2
  9993                           
  9994                           ;Dimmer_B1.c: 1072: setDimmerLights_Line(0);
  9995  07BB  3000               	movlw	0
  9996  07BC  3192  22FD  3187   	fcall	_setDimmerLights_Line
  9997                           
  9998                           ;Dimmer_B1.c: 1076: if (getDelayOff_GO(lights) == 1) {
  9999  07BF  0020               	movlb	0	; select bank0
 10000  07C0  0868               	movf	setDimmerLights_OnOff@lights,w
 10001  07C1  3193  230B  3187   	fcall	_getDelayOff_GO
 10002  07C4  3A01               	xorlw	1
 10003  07C5  1D03               	skipz
 10004  07C6  2FCE               	goto	l507
 10005                           
 10006                           ;Dimmer_B1.c: 1077: setDelayOff_GO(lights, 0, 0);
 10007  07C7  0020               	movlb	0	; select bank0
 10008  07C8  01DD               	clrf	setDelayOff_GO@command
 10009  07C9  01DE               	clrf	setDelayOff_GO@value
 10010  07CA  0868               	movf	setDimmerLights_OnOff@lights,w
 10011  07CB  318D  25C8  3187   	fcall	_setDelayOff_GO
 10012  07CE                     l507:	
 10013                           
 10014                           ;Dimmer_B1.c: 1078: }
 10015                           ;Dimmer_B1.c: 1083: setLED(lights, 1);
 10016  07CE  01F4               	clrf	setLED@command
 10017  07CF  0AF4               	incf	setLED@command,f
 10018  07D0  0020               	movlb	0	; select bank0
 10019  07D1  0868               	movf	setDimmerLights_OnOff@lights,w
 10020  07D2  3196  26AA  3187   	fcall	_setLED
 10021                           
 10022                           ;Dimmer_B1.c: 1084: ;;
 10023                           ;Dimmer_B1.c: 1088: if (lights == 1) {
 10024  07D5  0020               	movlb	0	; select bank0
 10025  07D6  0868               	movf	setDimmerLights_OnOff@lights,w
 10026  07D7  3A01               	xorlw	1
 10027  07D8  1903               	btfsc	3,2
 10028                           
 10029                           ;Dimmer_B1.c: 1090: RB1 = 0;
 10030  07D9  108D               	bcf	13,1	;volatile
 10031  07DA                     l6720:	
 10032                           
 10033                           ;Dimmer_B1.c: 1096: }
 10034                           ;Dimmer_B1.c: 1122: }
 10035                           ;Dimmer_B1.c: 1124: setDimmerLights_DimmingClose();
 10036  07DA  3191  21E4  3187   	fcall	_setDimmerLights_DimmingClose
 10037                           
 10038                           ;Dimmer_B1.c: 1126: ;;
 10039                           ;Dimmer_B1.c: 1128: if (getCmd_Status(1) == 1) {
 10040  07DD  3001               	movlw	1
 10041  07DE  3193  2353  3187   	fcall	_getCmd_Status
 10042  07E1  3A01               	xorlw	1
 10043  07E2  1D03               	skipz
 10044  07E3  0008               	return
 10045                           
 10046                           ;Dimmer_B1.c: 1129: if (getMain_All_LightsStatus() == 0) {
 10047  07E4  3192  221F  3187   	fcall	_getMain_All_LightsStatus
 10048  07E7  3800               	iorlw	0
 10049  07E8  1D03               	skipz
 10050  07E9  0008               	return
 10051                           
 10052                           ;Dimmer_B1.c: 1130: setCmd_Status(1, 0);
 10053  07EA  01F2               	clrf	setCmd_Status@cmd
 10054  07EB  3001               	movlw	1
 10055  07EC  3193  23FC  3187   	fcall	_setCmd_Status
 10056                           
 10057                           ;Dimmer_B1.c: 1131: setProductData(11, 0);
 10058  07EF  0020               	movlb	0	; select bank0
 10059  07F0  01DA               	clrf	setProductData@value
 10060  07F1  300B               	movlw	11
 10061  07F2  3192  22A7  3187   	fcall	_setProductData
 10062                           
 10063                           ;Dimmer_B1.c: 1132: setProductData(17, 0);
 10064  07F5  0020               	movlb	0	; select bank0
 10065  07F6  01DA               	clrf	setProductData@value
 10066  07F7  3011               	movlw	17
 10067  07F8  3192  22A7         	fcall	_setProductData
 10068                           
 10069                           ;Dimmer_B1.c: 1134: }
 10070                           ;Dimmer_B1.c: 1135: } else {
 10071                           
 10072                           ;Dimmer_B1.c: 1133: ;;
 10073  07FA  0008               	return
 10074  07FB                     __end_of_setDimmerLights_OnOff:	
 10075                           ;Dimmer_B1.c: 1136: ;;
 10076                           
 10077                           
 10078                           	psect	text57
 10079  16AA                     __ptext57:	
 10080 ;; *************** function _setLED *****************
 10081 ;; Defined at:
 10082 ;;		line 81 in file "../src/LED_B1.c"
 10083 ;; Parameters:    Size  Location     Type
 10084 ;;  led             1    wreg     unsigned char 
 10085 ;;  command         1    4[COMMON] unsigned char 
 10086 ;; Auto vars:     Size  Location     Type
 10087 ;;  led             1    5[COMMON] unsigned char 
 10088 ;; Return value:  Size  Location     Type
 10089 ;;		None               void
 10090 ;; Registers used:
 10091 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10092 ;; Tracked objects:
 10093 ;;		On entry : 0/0
 10094 ;;		On exit  : 0/0
 10095 ;;		Unchanged: 0/0
 10096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10097 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10098 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10100 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10101 ;;Total ram usage:        2 bytes
 10102 ;; Hardware stack levels used:    1
 10103 ;; Hardware stack levels required when called:    4
 10104 ;; This function calls:
 10105 ;;		_LedPointSelect
 10106 ;; This function is called by:
 10107 ;;		_setDimmerLights_OnOff
 10108 ;;		_setLED_Initialization
 10109 ;;		_Exception_Main
 10110 ;;		_setSw_Initialization
 10111 ;; This function uses a non-reentrant model
 10112 ;;
 10113                           
 10114                           
 10115                           ;psect for function _setLED
 10116  16AA                     _setLED:	
 10117                           
 10118                           ;incstack = 0
 10119                           ; Regs used in _setLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10120                           ;setLED@led stored from wreg
 10121  16AA  00F5               	movwf	setLED@led
 10122                           
 10123                           ;LED_B1.c: 82: LedPointSelect(led);
 10124  16AB  0875               	movf	setLED@led,w
 10125  16AC  3192  225B  3196   	fcall	_LedPointSelect
 10126                           
 10127                           ;LED_B1.c: 83: if (command == 0) {
 10128  16AF  08F4               	movf	setLED@command,f
 10129  16B0  1D03               	skipz
 10130  16B1  2EB8               	goto	l4932
 10131                           
 10132                           ;LED_B1.c: 112: if (led == 99) {
 10133  16B2  0875               	movf	setLED@led,w
 10134  16B3  3A63               	xorlw	99
 10135  16B4  1D03               	skipz
 10136  16B5  2EB8               	goto	l4932
 10137                           
 10138                           ;LED_B1.c: 116: RB5 = 1;
 10139  16B6  0020               	movlb	0	; select bank0
 10140  16B7  168D               	bsf	13,5	;volatile
 10141  16B8                     l4932:	
 10142                           
 10143                           ;LED_B1.c: 118: }
 10144                           ;LED_B1.c: 120: }
 10145                           ;LED_B1.c: 121: if (command == 1) {
 10146  16B8  0874               	movf	setLED@command,w
 10147  16B9  3A01               	xorlw	1
 10148  16BA  1D03               	skipz
 10149  16BB  2EC2               	goto	l4938
 10150                           
 10151                           ;LED_B1.c: 150: if (led == 99) {
 10152  16BC  0875               	movf	setLED@led,w
 10153  16BD  3A63               	xorlw	99
 10154  16BE  1D03               	skipz
 10155  16BF  2EC2               	goto	l4938
 10156                           
 10157                           ;LED_B1.c: 154: RB5 = 0;
 10158  16C0  0020               	movlb	0	; select bank0
 10159  16C1  128D               	bcf	13,5	;volatile
 10160  16C2                     l4938:	
 10161                           
 10162                           ;LED_B1.c: 156: }
 10163                           ;LED_B1.c: 158: }
 10164                           ;LED_B1.c: 159: if (command == 10) {
 10165  16C2  0874               	movf	setLED@command,w
 10166  16C3  3A0A               	xorlw	10
 10167  16C4  1D03               	skipz
 10168  16C5  2ED6               	goto	l4946
 10169                           
 10170                           ;LED_B1.c: 160: LED->GO = 0;
 10171  16C6  087B               	movf	_LED,w
 10172  16C7  0086               	movwf	6
 10173  16C8  0187               	clrf	7
 10174  16C9  1081               	bcf	1,1
 10175                           
 10176                           ;LED_B1.c: 161: LED->Time = 0;
 10177  16CA  0A7B               	incf	_LED,w
 10178  16CB  0086               	movwf	6
 10179  16CC  0187               	clrf	7
 10180  16CD  3000               	movlw	0
 10181  16CE  3FC0               	movwi [0]fsr1
 10182  16CF  3FC1               	movwi [1]fsr1
 10183                           
 10184                           ;LED_B1.c: 190: if (led == 99) {
 10185  16D0  0875               	movf	setLED@led,w
 10186  16D1  3A63               	xorlw	99
 10187  16D2  1D03               	skipz
 10188  16D3  2ED6               	goto	l4946
 10189                           
 10190                           ;LED_B1.c: 194: RB5 = 1;
 10191  16D4  0020               	movlb	0	; select bank0
 10192  16D5  168D               	bsf	13,5	;volatile
 10193  16D6                     l4946:	
 10194                           
 10195                           ;LED_B1.c: 196: }
 10196                           ;LED_B1.c: 198: }
 10197                           ;LED_B1.c: 199: if (command == 11) {
 10198  16D6  0874               	movf	setLED@command,w
 10199  16D7  3A0B               	xorlw	11
 10200  16D8  1D03               	skipz
 10201  16D9  0008               	return
 10202                           
 10203                           ;LED_B1.c: 200: LED->GO = 1;
 10204  16DA  087B               	movf	_LED,w
 10205  16DB  0086               	movwf	6
 10206  16DC  0187               	clrf	7
 10207  16DD  1481               	bsf	1,1
 10208  16DE  0008               	return
 10209  16DF                     __end_of_setLED:	
 10210                           
 10211                           	psect	text58
 10212  125B                     __ptext58:	
 10213 ;; *************** function _LedPointSelect *****************
 10214 ;; Defined at:
 10215 ;;		line 7 in file "../src/LED_B1.c"
 10216 ;; Parameters:    Size  Location     Type
 10217 ;;  led             1    wreg     unsigned char 
 10218 ;; Auto vars:     Size  Location     Type
 10219 ;;  led             1    3[COMMON] unsigned char 
 10220 ;; Return value:  Size  Location     Type
 10221 ;;		None               void
 10222 ;; Registers used:
 10223 ;;		wreg
 10224 ;; Tracked objects:
 10225 ;;		On entry : 0/0
 10226 ;;		On exit  : 0/0
 10227 ;;		Unchanged: 0/0
 10228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10230 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10231 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10232 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10233 ;;Total ram usage:        2 bytes
 10234 ;; Hardware stack levels used:    1
 10235 ;; Hardware stack levels required when called:    3
 10236 ;; This function calls:
 10237 ;;		Nothing
 10238 ;; This function is called by:
 10239 ;;		_setLED_Initialization
 10240 ;;		_setLED
 10241 ;;		_setLED_Main
 10242 ;; This function uses a non-reentrant model
 10243 ;;
 10244                           
 10245                           
 10246                           ;psect for function _LedPointSelect
 10247  125B                     _LedPointSelect:	
 10248                           
 10249                           ;incstack = 0
 10250                           ; Regs used in _LedPointSelect: [wreg]
 10251                           ;LedPointSelect@led stored from wreg
 10252  125B  00F3               	movwf	LedPointSelect@led
 10253                           
 10254                           ;LED_B1.c: 24: if (led == 99) {
 10255  125C  0873               	movf	LedPointSelect@led,w
 10256  125D  3A63               	xorlw	99
 10257  125E  1D03               	skipz
 10258  125F  0008               	return
 10259                           
 10260                           ;LED_B1.c: 25: LED = &VarErrLED;
 10261  1260  30E9               	movlw	_VarErrLED& (0+255)
 10262  1261  00F2               	movwf	??_LedPointSelect
 10263  1262  0872               	movf	??_LedPointSelect,w
 10264  1263  00FB               	movwf	_LED
 10265  1264  0008               	return
 10266  1265                     __end_of_LedPointSelect:	
 10267                           
 10268                           	psect	text59
 10269  11E4                     __ptext59:	
 10270 ;; *************** function _setDimmerLights_DimmingClose *****************
 10271 ;; Defined at:
 10272 ;;		line 2043 in file "../src/Dimmer_B1.c"
 10273 ;; Parameters:    Size  Location     Type
 10274 ;;		None
 10275 ;; Auto vars:     Size  Location     Type
 10276 ;;		None
 10277 ;; Return value:  Size  Location     Type
 10278 ;;		None               void
 10279 ;; Registers used:
 10280 ;;		wreg, status,2, status,0, pclath, cstack
 10281 ;; Tracked objects:
 10282 ;;		On entry : 0/0
 10283 ;;		On exit  : 0/0
 10284 ;;		Unchanged: 0/0
 10285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10290 ;;Total ram usage:        0 bytes
 10291 ;; Hardware stack levels used:    1
 10292 ;; Hardware stack levels required when called:    4
 10293 ;; This function calls:
 10294 ;;		_setDimmerIntr_Dimming_Sw
 10295 ;; This function is called by:
 10296 ;;		_setDimmerLights_OnOff
 10297 ;; This function uses a non-reentrant model
 10298 ;;
 10299                           
 10300                           
 10301                           ;psect for function _setDimmerLights_DimmingClose
 10302  11E4                     _setDimmerLights_DimmingClose:	
 10303                           
 10304                           ;Dimmer_B1.c: 2045: setDimmerIntr_Dimming_Sw(1, 0);
 10305                           
 10306                           ;incstack = 0
 10307                           ; Regs used in _setDimmerLights_DimmingClose: [wreg+status,2+status,0+pclath+cstack]
 10308  11E4  01F2               	clrf	setDimmerIntr_Dimming_Sw@command
 10309  11E5  3001               	movlw	1
 10310  11E6  3193  23E9         	fcall	_setDimmerIntr_Dimming_Sw
 10311  11E8  0008               	return
 10312  11E9                     __end_of_setDimmerLights_DimmingClose:	
 10313                           
 10314                           	psect	text60
 10315  127B                     __ptext60:	
 10316 ;; *************** function _setDimmerIntr_DimmingValue *****************
 10317 ;; Defined at:
 10318 ;;		line 137 in file "../src/Dimmer_B1.c"
 10319 ;; Parameters:    Size  Location     Type
 10320 ;;  lights          1    wreg     unsigned char 
 10321 ;;  value           1    2[COMMON] unsigned char 
 10322 ;; Auto vars:     Size  Location     Type
 10323 ;;  lights          1    4[COMMON] unsigned char 
 10324 ;; Return value:  Size  Location     Type
 10325 ;;		None               void
 10326 ;; Registers used:
 10327 ;;		wreg
 10328 ;; Tracked objects:
 10329 ;;		On entry : 0/0
 10330 ;;		On exit  : 0/0
 10331 ;;		Unchanged: 0/0
 10332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10333 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10334 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10335 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10336 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10337 ;;Total ram usage:        3 bytes
 10338 ;; Hardware stack levels used:    1
 10339 ;; Hardware stack levels required when called:    3
 10340 ;; This function calls:
 10341 ;;		Nothing
 10342 ;; This function is called by:
 10343 ;;		_setDimmerLights_OnOff
 10344 ;; This function uses a non-reentrant model
 10345 ;;
 10346                           
 10347                           
 10348                           ;psect for function _setDimmerIntr_DimmingValue
 10349  127B                     _setDimmerIntr_DimmingValue:	
 10350                           
 10351                           ;incstack = 0
 10352                           ; Regs used in _setDimmerIntr_DimmingValue: [wreg]
 10353                           ;setDimmerIntr_DimmingValue@lights stored from wreg
 10354  127B  00F4               	movwf	setDimmerIntr_DimmingValue@lights
 10355                           
 10356                           ;Dimmer_B1.c: 139: if (lights == 1) {
 10357  127C  0874               	movf	setDimmerIntr_DimmingValue@lights,w
 10358  127D  3A01               	xorlw	1
 10359  127E  1D03               	skipz
 10360  127F  0008               	return
 10361                           
 10362                           ;Dimmer_B1.c: 140: DimmerIntr1.DimmingValue = value;
 10363  1280  0872               	movf	setDimmerIntr_DimmingValue@value,w
 10364  1281  00F3               	movwf	??_setDimmerIntr_DimmingValue
 10365  1282  0873               	movf	??_setDimmerIntr_DimmingValue,w
 10366  1283  0021               	movlb	1	; select bank1
 10367  1284  00A5               	movwf	(_DimmerIntr1^(0+128)+5)
 10368  1285  0008               	return
 10369  1286                     __end_of_setDimmerIntr_DimmingValue:	
 10370                           
 10371                           	psect	text61
 10372  1439                     __ptext61:	
 10373 ;; *************** function _setDimmerIntr_ControlStatus *****************
 10374 ;; Defined at:
 10375 ;;		line 119 in file "../src/Dimmer_B1.c"
 10376 ;; Parameters:    Size  Location     Type
 10377 ;;  lights          1    wreg     unsigned char 
 10378 ;;  command         1    2[COMMON] unsigned char 
 10379 ;; Auto vars:     Size  Location     Type
 10380 ;;  lights          1    4[COMMON] unsigned char 
 10381 ;; Return value:  Size  Location     Type
 10382 ;;		None               void
 10383 ;; Registers used:
 10384 ;;		wreg, status,2, status,0
 10385 ;; Tracked objects:
 10386 ;;		On entry : 0/0
 10387 ;;		On exit  : 0/0
 10388 ;;		Unchanged: 0/0
 10389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10390 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10391 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10392 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10393 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10394 ;;Total ram usage:        3 bytes
 10395 ;; Hardware stack levels used:    1
 10396 ;; Hardware stack levels required when called:    3
 10397 ;; This function calls:
 10398 ;;		Nothing
 10399 ;; This function is called by:
 10400 ;;		_setDimmerLights_OnOff
 10401 ;; This function uses a non-reentrant model
 10402 ;;
 10403                           
 10404                           
 10405                           ;psect for function _setDimmerIntr_ControlStatus
 10406  1439                     _setDimmerIntr_ControlStatus:	
 10407                           
 10408                           ;incstack = 0
 10409                           ; Regs used in _setDimmerIntr_ControlStatus: [wreg+status,2+status,0]
 10410                           ;setDimmerIntr_ControlStatus@lights stored from wreg
 10411  1439  00F4               	movwf	setDimmerIntr_ControlStatus@lights
 10412                           
 10413                           ;Dimmer_B1.c: 121: if (lights == 1) {
 10414  143A  0874               	movf	setDimmerIntr_ControlStatus@lights,w
 10415  143B  3A01               	xorlw	1
 10416  143C  1D03               	skipz
 10417  143D  0008               	return
 10418                           
 10419                           ;Dimmer_B1.c: 122: DimmerIntr1.ControlStatus = command == 1 ? 1 : 0;
 10420  143E  0872               	movf	setDimmerIntr_ControlStatus@command,w
 10421  143F  3A01               	xorlw	1
 10422  1440  3000               	movlw	0
 10423  1441  1903               	skipnz
 10424  1442  3001               	movlw	1
 10425  1443  00F3               	movwf	??_setDimmerIntr_ControlStatus
 10426  1444  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 10427  1445  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 10428  1446  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 10429  1447  0021               	movlb	1	; select bank1
 10430  1448  0820               	movf	_DimmerIntr1^(0+128),w
 10431  1449  0673               	xorwf	??_setDimmerIntr_ControlStatus,w
 10432  144A  39F7               	andlw	-9
 10433  144B  0673               	xorwf	??_setDimmerIntr_ControlStatus,w
 10434  144C  00A0               	movwf	_DimmerIntr1^(0+128)
 10435  144D  0008               	return
 10436  144E                     __end_of_setDimmerIntr_ControlStatus:	
 10437                           
 10438                           	psect	text62
 10439  0DC8                     __ptext62:	
 10440 ;; *************** function _setDelayOff_GO *****************
 10441 ;; Defined at:
 10442 ;;		line 87 in file "../src/DelayOff_B1.c"
 10443 ;; Parameters:    Size  Location     Type
 10444 ;;  sw              1    wreg     unsigned char 
 10445 ;;  command         1   61[BANK0 ] unsigned char 
 10446 ;;  value           1   62[BANK0 ] unsigned char 
 10447 ;; Auto vars:     Size  Location     Type
 10448 ;;  sw              1   68[BANK0 ] unsigned char 
 10449 ;;  k               1   67[BANK0 ] unsigned char 
 10450 ;;  j               1   66[BANK0 ] unsigned char 
 10451 ;;  i               1   65[BANK0 ] unsigned char 
 10452 ;; Return value:  Size  Location     Type
 10453 ;;		None               void
 10454 ;; Registers used:
 10455 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10456 ;; Tracked objects:
 10457 ;;		On entry : 0/0
 10458 ;;		On exit  : 0/0
 10459 ;;		Unchanged: 0/0
 10460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10461 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10462 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10463 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10464 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10465 ;;Total ram usage:        8 bytes
 10466 ;; Hardware stack levels used:    1
 10467 ;; Hardware stack levels required when called:    4
 10468 ;; This function calls:
 10469 ;;		_DelayOffPointSelect
 10470 ;;		___bmul
 10471 ;;		_setProductData
 10472 ;; This function is called by:
 10473 ;;		_setDimmerLights_OnOff
 10474 ;; This function uses a non-reentrant model
 10475 ;;
 10476                           
 10477                           
 10478                           ;psect for function _setDelayOff_GO
 10479  0DC8                     _setDelayOff_GO:	
 10480                           
 10481                           ;incstack = 0
 10482                           ; Regs used in _setDelayOff_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10483                           ;setDelayOff_GO@sw stored from wreg
 10484  0DC8  0020               	movlb	0	; select bank0
 10485  0DC9  00E4               	movwf	setDelayOff_GO@sw
 10486                           
 10487                           ;DelayOff_B1.c: 89: DelayOffPointSelect(sw);
 10488  0DCA  0864               	movf	setDelayOff_GO@sw,w
 10489  0DCB  3192  2265  318D   	fcall	_DelayOffPointSelect
 10490                           
 10491                           ;DelayOff_B1.c: 90: DelayOff->GO = command == 1 ? 1 : 0;
 10492  0DCE  0020               	movlb	0	; select bank0
 10493  0DCF  085D               	movf	setDelayOff_GO@command,w
 10494  0DD0  3A01               	xorlw	1
 10495  0DD1  3000               	movlw	0
 10496  0DD2  1903               	skipnz
 10497  0DD3  3001               	movlw	1
 10498  0DD4  00DF               	movwf	??_setDelayOff_GO
 10499  0DD5  086A               	movf	_DelayOff,w
 10500  0DD6  0086               	movwf	6
 10501  0DD7  0187               	clrf	7
 10502  0DD8  0DDF               	rlf	??_setDelayOff_GO,f
 10503  0DD9  0801               	movf	1,w
 10504  0DDA  065F               	xorwf	??_setDelayOff_GO,w
 10505  0DDB  39FD               	andlw	-3
 10506  0DDC  065F               	xorwf	??_setDelayOff_GO,w
 10507  0DDD  0081               	movwf	1
 10508                           
 10509                           ;DelayOff_B1.c: 91: DelayOff->SecondTime = 0;
 10510  0DDE  086A               	movf	_DelayOff,w
 10511  0DDF  3E02               	addlw	2
 10512  0DE0  0086               	movwf	6
 10513  0DE1  0187               	clrf	7
 10514  0DE2  3000               	movlw	0
 10515  0DE3  3FC0               	movwi [0]fsr1
 10516  0DE4  3FC1               	movwi [1]fsr1
 10517                           
 10518                           ;DelayOff_B1.c: 92: DelayOff->MinuteTime = 0;
 10519  0DE5  086A               	movf	_DelayOff,w
 10520  0DE6  3E04               	addlw	4
 10521  0DE7  0086               	movwf	6
 10522  0DE8  0187               	clrf	7
 10523  0DE9  0181               	clrf	1
 10524                           
 10525                           ;DelayOff_B1.c: 94: if (command == 1) {
 10526  0DEA  085D               	movf	setDelayOff_GO@command,w
 10527  0DEB  3A01               	xorlw	1
 10528  0DEC  1D03               	skipz
 10529  0DED  2E3D               	goto	l4838
 10530                           
 10531                           ;DelayOff_B1.c: 96: char i = 5, j = 0, k = 0;
 10532  0DEE  3005               	movlw	5
 10533  0DEF  00DF               	movwf	??_setDelayOff_GO
 10534  0DF0  085F               	movf	??_setDelayOff_GO,w
 10535  0DF1  00E1               	movwf	setDelayOff_GO@i
 10536  0DF2  01E2               	clrf	setDelayOff_GO@j
 10537  0DF3  01E3               	clrf	setDelayOff_GO@k
 10538                           
 10539                           ;DelayOff_B1.c: 97: if (((value % 16) == 5 || (value % 16) == 0) && value <= 0x30) {
 10540  0DF4  300F               	movlw	15
 10541  0DF5  055E               	andwf	setDelayOff_GO@value,w
 10542  0DF6  00DF               	movwf	??_setDelayOff_GO
 10543  0DF7  085F               	movf	??_setDelayOff_GO,w
 10544  0DF8  3A05               	xorlw	5
 10545  0DF9  1903               	skipnz
 10546  0DFA  2DFF               	goto	l4824
 10547  0DFB  085E               	movf	setDelayOff_GO@value,w
 10548  0DFC  390F               	andlw	15
 10549  0DFD  1D03               	btfss	3,2
 10550  0DFE  2E2C               	goto	l4834
 10551  0DFF                     l4824:	
 10552  0DFF  3031               	movlw	49
 10553  0E00  025E               	subwf	setDelayOff_GO@value,w
 10554  0E01  1803               	skipnc
 10555  0E02  2E2C               	goto	l4834
 10556                           
 10557                           ;DelayOff_B1.c: 98: j = value & 0x0f;
 10558  0E03  085E               	movf	setDelayOff_GO@value,w
 10559  0E04  390F               	andlw	15
 10560  0E05  00DF               	movwf	??_setDelayOff_GO
 10561  0E06  085F               	movf	??_setDelayOff_GO,w
 10562  0E07  00E2               	movwf	setDelayOff_GO@j
 10563                           
 10564                           ;DelayOff_B1.c: 99: k = (value >> 4) & 0x0f;
 10565  0E08  085E               	movf	setDelayOff_GO@value,w
 10566  0E09  00DF               	movwf	??_setDelayOff_GO
 10567  0E0A  3004               	movlw	4
 10568  0E0B                     u4525:	
 10569  0E0B  36DF               	lsrf	??_setDelayOff_GO,f
 10570  0E0C  0B89               	decfsz	9,f
 10571  0E0D  2E0B               	goto	u4525
 10572  0E0E  085F               	movf	??_setDelayOff_GO,w
 10573  0E0F  390F               	andlw	15
 10574  0E10  00E0               	movwf	??_setDelayOff_GO+1
 10575  0E11  0860               	movf	??_setDelayOff_GO+1,w
 10576  0E12  00E3               	movwf	setDelayOff_GO@k
 10577                           
 10578                           ;DelayOff_B1.c: 100: DelayOff->Value = j + (k * 10);
 10579  0E13  300A               	movlw	10
 10580  0E14  00DF               	movwf	??_setDelayOff_GO
 10581  0E15  085F               	movf	??_setDelayOff_GO,w
 10582  0E16  00F2               	movwf	___bmul@multiplicand
 10583  0E17  0863               	movf	setDelayOff_GO@k,w
 10584  0E18  3193  2391  318D   	fcall	___bmul
 10585  0E1B  0020               	movlb	0	; select bank0
 10586  0E1C  0762               	addwf	setDelayOff_GO@j,w
 10587  0E1D  00E0               	movwf	??_setDelayOff_GO+1
 10588  0E1E  0A6A               	incf	_DelayOff,w
 10589  0E1F  0086               	movwf	6
 10590  0E20  0187               	clrf	7
 10591  0E21  0860               	movf	??_setDelayOff_GO+1,w
 10592  0E22  0081               	movwf	1
 10593                           
 10594                           ;DelayOff_B1.c: 102: setProductData(26 + sw, value);
 10595  0E23  085E               	movf	setDelayOff_GO@value,w
 10596  0E24  00DF               	movwf	??_setDelayOff_GO
 10597  0E25  085F               	movf	??_setDelayOff_GO,w
 10598  0E26  00DA               	movwf	setProductData@value
 10599  0E27  0864               	movf	setDelayOff_GO@sw,w
 10600  0E28  3E1A               	addlw	26
 10601  0E29  3192  22A7         	fcall	_setProductData
 10602                           
 10603                           ;DelayOff_B1.c: 103: } else {
 10604  0E2B  0008               	return
 10605  0E2C                     l4834:	
 10606                           
 10607                           ;DelayOff_B1.c: 104: DelayOff->Value = 0x05;
 10608  0E2C  3005               	movlw	5
 10609  0E2D  0020               	movlb	0	; select bank0
 10610  0E2E  00DF               	movwf	??_setDelayOff_GO
 10611  0E2F  0A6A               	incf	_DelayOff,w
 10612  0E30  0086               	movwf	6
 10613  0E31  0187               	clrf	7
 10614  0E32  085F               	movf	??_setDelayOff_GO,w
 10615  0E33  0081               	movwf	1
 10616                           
 10617                           ;DelayOff_B1.c: 105: setProductData(26 + sw, 0x05);
 10618  0E34  3005               	movlw	5
 10619  0E35  00DF               	movwf	??_setDelayOff_GO
 10620  0E36  085F               	movf	??_setDelayOff_GO,w
 10621  0E37  00DA               	movwf	setProductData@value
 10622  0E38  0864               	movf	setDelayOff_GO@sw,w
 10623  0E39  3E1A               	addlw	26
 10624  0E3A  3192  22A7         	fcall	_setProductData
 10625                           
 10626                           ;DelayOff_B1.c: 106: }
 10627                           ;DelayOff_B1.c: 108: } else if (command == 0) {
 10628  0E3C  0008               	return
 10629  0E3D                     l4838:	
 10630  0E3D  0020               	movlb	0	; select bank0
 10631  0E3E  08DD               	movf	setDelayOff_GO@command,f
 10632  0E3F  1D03               	skipz
 10633  0E40  0008               	return
 10634                           
 10635                           ;DelayOff_B1.c: 109: setProductData(26 + sw, 0);
 10636  0E41  01DA               	clrf	setProductData@value
 10637  0E42  0864               	movf	setDelayOff_GO@sw,w
 10638  0E43  3E1A               	addlw	26
 10639  0E44  3192  22A7         	fcall	_setProductData
 10640  0E46  0008               	return
 10641  0E47                     __end_of_setDelayOff_GO:	
 10642                           
 10643                           	psect	text63
 10644  1391                     __ptext63:	
 10645 ;; *************** function ___bmul *****************
 10646 ;; Defined at:
 10647 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul8.c"
 10648 ;; Parameters:    Size  Location     Type
 10649 ;;  multiplier      1    wreg     unsigned char 
 10650 ;;  multiplicand    1    2[COMMON] unsigned char 
 10651 ;; Auto vars:     Size  Location     Type
 10652 ;;  multiplier      1    5[COMMON] unsigned char 
 10653 ;;  product         1    4[COMMON] unsigned char 
 10654 ;; Return value:  Size  Location     Type
 10655 ;;                  1    wreg      unsigned char 
 10656 ;; Registers used:
 10657 ;;		wreg, status,2, status,0
 10658 ;; Tracked objects:
 10659 ;;		On entry : 0/0
 10660 ;;		On exit  : 0/0
 10661 ;;		Unchanged: 0/0
 10662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10663 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10664 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10665 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10666 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10667 ;;Total ram usage:        4 bytes
 10668 ;; Hardware stack levels used:    1
 10669 ;; Hardware stack levels required when called:    3
 10670 ;; This function calls:
 10671 ;;		Nothing
 10672 ;; This function is called by:
 10673 ;;		_setDelayOff_GO
 10674 ;;		_DelayTimejudge
 10675 ;; This function uses a non-reentrant model
 10676 ;;
 10677                           
 10678                           
 10679                           ;psect for function ___bmul
 10680  1391                     ___bmul:	
 10681                           
 10682                           ;incstack = 0
 10683                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 10684                           ;___bmul@multiplier stored from wreg
 10685  1391  00F5               	movwf	___bmul@multiplier
 10686  1392  01F4               	clrf	___bmul@product
 10687  1393                     l4482:	
 10688  1393  1C75               	btfss	___bmul@multiplier,0
 10689  1394  2B99               	goto	l4486
 10690  1395  0872               	movf	___bmul@multiplicand,w
 10691  1396  00F3               	movwf	??___bmul
 10692  1397  0873               	movf	??___bmul,w
 10693  1398  07F4               	addwf	___bmul@product,f
 10694  1399                     l4486:	
 10695  1399  1003               	clrc
 10696  139A  0DF2               	rlf	___bmul@multiplicand,f
 10697  139B  1003               	clrc
 10698  139C  0CF5               	rrf	___bmul@multiplier,f
 10699  139D  08F5               	movf	___bmul@multiplier,f
 10700  139E  1D03               	skipz
 10701  139F  2B93               	goto	l4482
 10702  13A0  0874               	movf	___bmul@product,w
 10703  13A1  0008               	return
 10704  13A2                     __end_of___bmul:	
 10705                           
 10706                           	psect	text64
 10707  13FC                     __ptext64:	
 10708 ;; *************** function _setCmd_Status *****************
 10709 ;; Defined at:
 10710 ;;		line 656 in file "../src/Main_B1.c"
 10711 ;; Parameters:    Size  Location     Type
 10712 ;;  number          1    wreg     unsigned char 
 10713 ;;  cmd             1    2[COMMON] unsigned char 
 10714 ;; Auto vars:     Size  Location     Type
 10715 ;;  number          1    4[COMMON] unsigned char 
 10716 ;; Return value:  Size  Location     Type
 10717 ;;		None               void
 10718 ;; Registers used:
 10719 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10720 ;; Tracked objects:
 10721 ;;		On entry : 0/0
 10722 ;;		On exit  : 0/0
 10723 ;;		Unchanged: 0/0
 10724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10725 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10726 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10727 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10728 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10729 ;;Total ram usage:        3 bytes
 10730 ;; Hardware stack levels used:    1
 10731 ;; Hardware stack levels required when called:    3
 10732 ;; This function calls:
 10733 ;;		Nothing
 10734 ;; This function is called by:
 10735 ;;		_setDimmerLights_OnOff
 10736 ;; This function uses a non-reentrant model
 10737 ;;
 10738                           
 10739                           
 10740                           ;psect for function _setCmd_Status
 10741  13FC                     _setCmd_Status:	
 10742                           
 10743                           ;incstack = 0
 10744                           ; Regs used in _setCmd_Status: [wreg-fsr0h+status,2+status,0]
 10745                           ;setCmd_Status@number stored from wreg
 10746  13FC  00F4               	movwf	setCmd_Status@number
 10747                           
 10748                           ;Main_B1.c: 657: switch (number) {
 10749  13FD  2C0A               	goto	l4982
 10750  13FE                     l4978:	
 10751                           ;Main_B1.c: 658: case 1:
 10752                           
 10753                           
 10754                           ;Main_B1.c: 659: Cmd.all_off = cmd == 1 ? 1 : 0;
 10755  13FE  0872               	movf	setCmd_Status@cmd,w
 10756  13FF  3A01               	xorlw	1
 10757  1400  3000               	movlw	0
 10758  1401  1903               	skipnz
 10759  1402  3001               	movlw	1
 10760  1403  00F3               	movwf	??_setCmd_Status
 10761  1404  087A               	movf	_Cmd,w
 10762  1405  0673               	xorwf	??_setCmd_Status,w
 10763  1406  39FE               	andlw	-2
 10764  1407  0673               	xorwf	??_setCmd_Status,w
 10765  1408  00FA               	movwf	_Cmd
 10766                           
 10767                           ;Main_B1.c: 661: }
 10768                           
 10769                           ;Main_B1.c: 660: break;
 10770  1409  0008               	return
 10771  140A                     l4982:	
 10772  140A  0874               	movf	setCmd_Status@number,w
 10773                           
 10774                           ; Switch size 1, requested type "space"
 10775                           ; Number of cases is 1, Range of values is 1 to 1
 10776                           ; switch strategies available:
 10777                           ; Name         Instructions Cycles
 10778                           ; simple_byte            4     3 (average)
 10779                           ; direct_byte           11     9 (fixed)
 10780                           ; jumptable            263     9 (fixed)
 10781                           ;	Chosen strategy is simple_byte
 10782  140B  3A01               	xorlw	1	; case 1
 10783  140C  1903               	skipnz
 10784  140D  2BFE               	goto	l4978
 10785  140E  2C0F               	goto	l1158
 10786  140F                     l1158:	
 10787  140F  0008               	return
 10788  1410                     __end_of_setCmd_Status:	
 10789                           
 10790                           	psect	text65
 10791  121F                     __ptext65:	
 10792 ;; *************** function _getMain_All_LightsStatus *****************
 10793 ;; Defined at:
 10794 ;;		line 378 in file "../src/Main_B1.c"
 10795 ;; Parameters:    Size  Location     Type
 10796 ;;		None
 10797 ;; Auto vars:     Size  Location     Type
 10798 ;;  status          1    2[COMMON] unsigned char 
 10799 ;; Return value:  Size  Location     Type
 10800 ;;                  1    wreg      unsigned char 
 10801 ;; Registers used:
 10802 ;;		wreg, status,2
 10803 ;; Tracked objects:
 10804 ;;		On entry : 0/0
 10805 ;;		On exit  : 0/0
 10806 ;;		Unchanged: 0/0
 10807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10809 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10811 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10812 ;;Total ram usage:        1 bytes
 10813 ;; Hardware stack levels used:    1
 10814 ;; Hardware stack levels required when called:    3
 10815 ;; This function calls:
 10816 ;;		Nothing
 10817 ;; This function is called by:
 10818 ;;		_DimmerLights_Main
 10819 ;;		_setDimmerLights_Main
 10820 ;;		_setDimmerLights_OnOff
 10821 ;;		_Flash_Memory_Main
 10822 ;;		_Exception_Main
 10823 ;;		_Load_Main
 10824 ;;		_setTemp_Main
 10825 ;; This function uses a non-reentrant model
 10826 ;;
 10827                           
 10828                           
 10829                           ;psect for function _getMain_All_LightsStatus
 10830  121F                     _getMain_All_LightsStatus:	
 10831                           
 10832                           ;Main_B1.c: 379: char status = 0;
 10833                           
 10834                           ;incstack = 0
 10835                           ; Regs used in _getMain_All_LightsStatus: [wreg+status,2]
 10836  121F  01F2               	clrf	getMain_All_LightsStatus@status
 10837                           
 10838                           ;Main_B1.c: 386: status = DimmerLights1.Status == 1 ? 1 : 0;
 10839  1220  3000               	movlw	0
 10840  1221  0022               	movlb	2	; select bank2
 10841  1222  1859               	btfsc	(_DimmerLights1^(0+256)+1),0
 10842  1223  3001               	movlw	1
 10843  1224  00F2               	movwf	getMain_All_LightsStatus@status
 10844                           
 10845                           ;Main_B1.c: 425: return status;
 10846  1225  0872               	movf	getMain_All_LightsStatus@status,w
 10847  1226  0008               	return
 10848  1227                     __end_of_getMain_All_LightsStatus:	
 10849                           
 10850                           	psect	text66
 10851  130B                     __ptext66:	
 10852 ;; *************** function _getDelayOff_GO *****************
 10853 ;; Defined at:
 10854 ;;		line 114 in file "../src/DelayOff_B1.c"
 10855 ;; Parameters:    Size  Location     Type
 10856 ;;  sw              1    wreg     unsigned char 
 10857 ;; Auto vars:     Size  Location     Type
 10858 ;;  sw              1    4[COMMON] unsigned char 
 10859 ;;  go              1    5[COMMON] unsigned char 
 10860 ;; Return value:  Size  Location     Type
 10861 ;;                  1    wreg      unsigned char 
 10862 ;; Registers used:
 10863 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10864 ;; Tracked objects:
 10865 ;;		On entry : 0/0
 10866 ;;		On exit  : 0/0
 10867 ;;		Unchanged: 0/0
 10868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10870 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10872 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10873 ;;Total ram usage:        2 bytes
 10874 ;; Hardware stack levels used:    1
 10875 ;; Hardware stack levels required when called:    4
 10876 ;; This function calls:
 10877 ;;		_DelayOffPointSelect
 10878 ;; This function is called by:
 10879 ;;		_setDimmerLights_OnOff
 10880 ;; This function uses a non-reentrant model
 10881 ;;
 10882                           
 10883                           
 10884                           ;psect for function _getDelayOff_GO
 10885  130B                     _getDelayOff_GO:	
 10886                           
 10887                           ;incstack = 0
 10888                           ; Regs used in _getDelayOff_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10889                           ;getDelayOff_GO@sw stored from wreg
 10890  130B  00F4               	movwf	getDelayOff_GO@sw
 10891                           
 10892                           ;DelayOff_B1.c: 115: DelayOffPointSelect(sw);
 10893  130C  0874               	movf	getDelayOff_GO@sw,w
 10894  130D  3192  2265         	fcall	_DelayOffPointSelect
 10895                           
 10896                           ;DelayOff_B1.c: 116: char go = DelayOff->GO == 1 ? 1 : 0;
 10897  130F  0020               	movlb	0	; select bank0
 10898  1310  086A               	movf	_DelayOff,w
 10899  1311  0086               	movwf	6
 10900  1312  0187               	clrf	7
 10901  1313  3000               	movlw	0
 10902  1314  1881               	btfsc	1,1
 10903  1315  3001               	movlw	1
 10904  1316  00F5               	movwf	getDelayOff_GO@go
 10905                           
 10906                           ;DelayOff_B1.c: 117: return go;
 10907  1317  0875               	movf	getDelayOff_GO@go,w
 10908  1318  0008               	return
 10909  1319                     __end_of_getDelayOff_GO:	
 10910                           
 10911                           	psect	text67
 10912  1353                     __ptext67:	
 10913 ;; *************** function _getCmd_Status *****************
 10914 ;; Defined at:
 10915 ;;		line 664 in file "../src/Main_B1.c"
 10916 ;; Parameters:    Size  Location     Type
 10917 ;;  number          1    wreg     unsigned char 
 10918 ;; Auto vars:     Size  Location     Type
 10919 ;;  number          1    2[COMMON] unsigned char 
 10920 ;;  cmd             1    3[COMMON] unsigned char 
 10921 ;; Return value:  Size  Location     Type
 10922 ;;                  1    wreg      unsigned char 
 10923 ;; Registers used:
 10924 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10925 ;; Tracked objects:
 10926 ;;		On entry : 0/0
 10927 ;;		On exit  : 0/0
 10928 ;;		Unchanged: 0/0
 10929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10931 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10933 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10934 ;;Total ram usage:        2 bytes
 10935 ;; Hardware stack levels used:    1
 10936 ;; Hardware stack levels required when called:    3
 10937 ;; This function calls:
 10938 ;;		Nothing
 10939 ;; This function is called by:
 10940 ;;		_setDimmerLights_OnOff
 10941 ;; This function uses a non-reentrant model
 10942 ;;
 10943                           
 10944                           
 10945                           ;psect for function _getCmd_Status
 10946  1353                     _getCmd_Status:	
 10947                           
 10948                           ;incstack = 0
 10949                           ; Regs used in _getCmd_Status: [wreg-fsr0h+status,2+status,0]
 10950                           ;getCmd_Status@number stored from wreg
 10951  1353  00F2               	movwf	getCmd_Status@number
 10952                           
 10953                           ;Main_B1.c: 665: char cmd = 0;
 10954  1354  01F3               	clrf	getCmd_Status@cmd
 10955                           
 10956                           ;Main_B1.c: 666: switch (number) {
 10957  1355  2B5B               	goto	l4970
 10958  1356                     l4966:	
 10959                           ;Main_B1.c: 667: case 1:
 10960                           
 10961                           
 10962                           ;Main_B1.c: 668: cmd = Cmd.all_off == 1 ? 1 : 0;
 10963  1356  3000               	movlw	0
 10964  1357  187A               	btfsc	_Cmd,0
 10965  1358  3001               	movlw	1
 10966  1359  00F3               	movwf	getCmd_Status@cmd
 10967                           
 10968                           ;Main_B1.c: 670: }
 10969                           
 10970                           ;Main_B1.c: 669: break;
 10971  135A  2B60               	goto	l4972
 10972  135B                     l4970:	
 10973  135B  0872               	movf	getCmd_Status@number,w
 10974                           
 10975                           ; Switch size 1, requested type "space"
 10976                           ; Number of cases is 1, Range of values is 1 to 1
 10977                           ; switch strategies available:
 10978                           ; Name         Instructions Cycles
 10979                           ; simple_byte            4     3 (average)
 10980                           ; direct_byte           11     9 (fixed)
 10981                           ; jumptable            263     9 (fixed)
 10982                           ;	Chosen strategy is simple_byte
 10983  135C  3A01               	xorlw	1	; case 1
 10984  135D  1903               	skipnz
 10985  135E  2B56               	goto	l4966
 10986  135F  2B60               	goto	l4972
 10987  1360                     l4972:	
 10988                           
 10989                           ;Main_B1.c: 671: return cmd;
 10990  1360  0873               	movf	getCmd_Status@cmd,w
 10991  1361  0008               	return
 10992  1362                     __end_of_getCmd_Status:	
 10993                           
 10994                           	psect	text68
 10995  0833                     __ptext68:	
 10996 ;; *************** function _setDimmerLights_Dimming *****************
 10997 ;; Defined at:
 10998 ;;		line 1142 in file "../src/Dimmer_B1.c"
 10999 ;; Parameters:    Size  Location     Type
 11000 ;;  lights          1    wreg     unsigned char 
 11001 ;;  status          1   61[BANK0 ] unsigned char 
 11002 ;; Auto vars:     Size  Location     Type
 11003 ;;  lights          1   64[BANK0 ] unsigned char 
 11004 ;;  value           1   63[BANK0 ] unsigned char 
 11005 ;; Return value:  Size  Location     Type
 11006 ;;		None               void
 11007 ;; Registers used:
 11008 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11009 ;; Tracked objects:
 11010 ;;		On entry : 0/0
 11011 ;;		On exit  : 0/0
 11012 ;;		Unchanged: 0/0
 11013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11014 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11015 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11016 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11017 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11018 ;;Total ram usage:        4 bytes
 11019 ;; Hardware stack levels used:    1
 11020 ;; Hardware stack levels required when called:    6
 11021 ;; This function calls:
 11022 ;;		_getDimmerIntr_DimmingValue
 11023 ;;		_getDimmerLights_ValueToPercent
 11024 ;;		_setBuz
 11025 ;;		_setDimmerIntr_Dimming_Sw
 11026 ;;		_setDimmerIntr_MaxmumValue
 11027 ;;		_setDimmerLights_Line
 11028 ;;		_setMemory_Modify
 11029 ;;		_setProductData
 11030 ;; This function is called by:
 11031 ;;		_setDimmerLights_Main
 11032 ;; This function uses a non-reentrant model
 11033 ;;
 11034                           
 11035                           
 11036                           ;psect for function _setDimmerLights_Dimming
 11037  0833                     _setDimmerLights_Dimming:	
 11038                           
 11039                           ;incstack = 0
 11040                           ; Regs used in _setDimmerLights_Dimming: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 11041                           ;setDimmerLights_Dimming@lights stored from wreg
 11042  0833  0020               	movlb	0	; select bank0
 11043  0834  00E0               	movwf	setDimmerLights_Dimming@lights
 11044                           
 11045                           ;Dimmer_B1.c: 1143: setDimmerIntr_Dimming_Sw(lights, status);
 11046  0835  085D               	movf	setDimmerLights_Dimming@status,w
 11047  0836  00DE               	movwf	??_setDimmerLights_Dimming
 11048  0837  085E               	movf	??_setDimmerLights_Dimming,w
 11049  0838  00F2               	movwf	setDimmerIntr_Dimming_Sw@command
 11050  0839  0860               	movf	setDimmerLights_Dimming@lights,w
 11051  083A  3193  23E9  3188   	fcall	_setDimmerIntr_Dimming_Sw
 11052                           
 11053                           ;Dimmer_B1.c: 1144: if (status == 1) {
 11054  083D  0020               	movlb	0	; select bank0
 11055  083E  085D               	movf	setDimmerLights_Dimming@status,w
 11056  083F  3A01               	xorlw	1
 11057  0840  1D03               	skipz
 11058  0841  284A               	goto	l6738
 11059                           
 11060                           ;Dimmer_B1.c: 1148: setBuz(1, 100);
 11061  0842  3064               	movlw	100
 11062  0843  00A4               	movwf	setBuz@time
 11063  0844  3000               	movlw	0
 11064  0845  00A5               	movwf	setBuz@time+1
 11065  0846  3001               	movlw	1
 11066  0847  3189  215C         	fcall	_setBuz
 11067                           
 11068                           ;Dimmer_B1.c: 1149: } else if (status == 0) {
 11069  0849  0008               	return
 11070  084A                     l6738:	
 11071  084A  0020               	movlb	0	; select bank0
 11072  084B  08DD               	movf	setDimmerLights_Dimming@status,f
 11073  084C  1D03               	skipz
 11074  084D  0008               	return
 11075                           
 11076                           ;Dimmer_B1.c: 1152: Dimmer.Load_Status = 0;
 11077  084E  0021               	movlb	1	; select bank1
 11078  084F  1149               	bcf	_Dimmer^(0+128),2
 11079                           
 11080                           ;Dimmer_B1.c: 1153: setDimmerLights_Line(lights);
 11081  0850  0020               	movlb	0	; select bank0
 11082  0851  0860               	movf	setDimmerLights_Dimming@lights,w
 11083  0852  3192  22FD  3188   	fcall	_setDimmerLights_Line
 11084                           
 11085                           ;Dimmer_B1.c: 1155: char value = getDimmerIntr_DimmingValue(lights);
 11086  0855  0020               	movlb	0	; select bank0
 11087  0856  0860               	movf	setDimmerLights_Dimming@lights,w
 11088  0857  3192  22F0  3188   	fcall	_getDimmerIntr_DimmingValue
 11089  085A  0020               	movlb	0	; select bank0
 11090  085B  00DE               	movwf	??_setDimmerLights_Dimming
 11091  085C  085E               	movf	??_setDimmerLights_Dimming,w
 11092  085D  00DF               	movwf	setDimmerLights_Dimming@value
 11093                           
 11094                           ;Dimmer_B1.c: 1156: setDimmerIntr_MaxmumValue(lights, value);
 11095  085E  085F               	movf	setDimmerLights_Dimming@value,w
 11096  085F  00DE               	movwf	??_setDimmerLights_Dimming
 11097  0860  085E               	movf	??_setDimmerLights_Dimming,w
 11098  0861  00DA               	movwf	setDimmerIntr_MaxmumValue@value
 11099  0862  0860               	movf	setDimmerLights_Dimming@lights,w
 11100  0863  3192  22B3  3188   	fcall	_setDimmerIntr_MaxmumValue
 11101                           
 11102                           ;Dimmer_B1.c: 1157: setProductData((20 + lights), getDimmerLights_ValueToPercent(value))
      +                          ;
 11103  0866  0020               	movlb	0	; select bank0
 11104  0867  085F               	movf	setDimmerLights_Dimming@value,w
 11105  0868  318C  248C  3188   	fcall	_getDimmerLights_ValueToPercent
 11106  086B  0020               	movlb	0	; select bank0
 11107  086C  00DE               	movwf	??_setDimmerLights_Dimming
 11108  086D  085E               	movf	??_setDimmerLights_Dimming,w
 11109  086E  00DA               	movwf	setProductData@value
 11110  086F  0860               	movf	setDimmerLights_Dimming@lights,w
 11111  0870  3E14               	addlw	20
 11112  0871  3192  22A7  3188   	fcall	_setProductData
 11113                           
 11114                           ;Dimmer_B1.c: 1164: setMemory_Modify(1);
 11115  0874  3001               	movlw	1
 11116  0875  3193  2371         	fcall	_setMemory_Modify
 11117                           
 11118                           ;Dimmer_B1.c: 1168: ;;
 11119                           ;Dimmer_B1.c: 1169: ;;
 11120  0877  0008               	return
 11121  0878                     __end_of_setDimmerLights_Dimming:	
 11122                           
 11123                           	psect	text69
 11124  12FD                     __ptext69:	
 11125 ;; *************** function _setDimmerLights_Line *****************
 11126 ;; Defined at:
 11127 ;;		line 1215 in file "../src/Dimmer_B1.c"
 11128 ;; Parameters:    Size  Location     Type
 11129 ;;  lights          1    wreg     unsigned char 
 11130 ;; Auto vars:     Size  Location     Type
 11131 ;;  lights          1    2[COMMON] unsigned char 
 11132 ;; Return value:  Size  Location     Type
 11133 ;;		None               void
 11134 ;; Registers used:
 11135 ;;		wreg
 11136 ;; Tracked objects:
 11137 ;;		On entry : 0/0
 11138 ;;		On exit  : 0/0
 11139 ;;		Unchanged: 0/0
 11140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11142 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11144 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11145 ;;Total ram usage:        1 bytes
 11146 ;; Hardware stack levels used:    1
 11147 ;; Hardware stack levels required when called:    3
 11148 ;; This function calls:
 11149 ;;		Nothing
 11150 ;; This function is called by:
 11151 ;;		_setDimmerLights_OnOff
 11152 ;;		_setDimmerLights_Dimming
 11153 ;; This function uses a non-reentrant model
 11154 ;;
 11155                           
 11156                           
 11157                           ;psect for function _setDimmerLights_Line
 11158  12FD                     _setDimmerLights_Line:	
 11159                           
 11160                           ;incstack = 0
 11161                           ; Regs used in _setDimmerLights_Line: [wreg]
 11162                           ;setDimmerLights_Line@lights stored from wreg
 11163  12FD  00F2               	movwf	setDimmerLights_Line@lights
 11164                           
 11165                           ;Dimmer_B1.c: 1216: Dimmer.LoadGO = 1;
 11166  12FE  0021               	movlb	1	; select bank1
 11167  12FF  14C9               	bsf	_Dimmer^(0+128),1
 11168                           
 11169                           ;Dimmer_B1.c: 1218: DimmerLights1.Line = 0;
 11170  1300  0022               	movlb	2	; select bank2
 11171  1301  10D9               	bcf	(_DimmerLights1^(0+256)+1),1
 11172                           
 11173                           ;Dimmer_B1.c: 1219: if (lights == 1 && lights != 0) {
 11174  1302  0872               	movf	setDimmerLights_Line@lights,w
 11175  1303  3A01               	xorlw	1
 11176  1304  1D03               	skipz
 11177  1305  0008               	return
 11178  1306  0872               	movf	setDimmerLights_Line@lights,w
 11179  1307  1903               	btfsc	3,2
 11180  1308  0008               	return
 11181                           
 11182                           ;Dimmer_B1.c: 1220: DimmerLights1.Line = 1;
 11183  1309  14D9               	bsf	(_DimmerLights1^(0+256)+1),1
 11184  130A  0008               	return
 11185  130B                     __end_of_setDimmerLights_Line:	
 11186                           
 11187                           	psect	text70
 11188  13E9                     __ptext70:	
 11189 ;; *************** function _setDimmerIntr_Dimming_Sw *****************
 11190 ;; Defined at:
 11191 ;;		line 251 in file "../src/Dimmer_B1.c"
 11192 ;; Parameters:    Size  Location     Type
 11193 ;;  lights          1    wreg     unsigned char 
 11194 ;;  command         1    2[COMMON] unsigned char 
 11195 ;; Auto vars:     Size  Location     Type
 11196 ;;  lights          1    4[COMMON] unsigned char 
 11197 ;; Return value:  Size  Location     Type
 11198 ;;		None               void
 11199 ;; Registers used:
 11200 ;;		wreg, status,2, status,0
 11201 ;; Tracked objects:
 11202 ;;		On entry : 0/0
 11203 ;;		On exit  : 0/0
 11204 ;;		Unchanged: 0/0
 11205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11206 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11207 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11208 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11209 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11210 ;;Total ram usage:        3 bytes
 11211 ;; Hardware stack levels used:    1
 11212 ;; Hardware stack levels required when called:    3
 11213 ;; This function calls:
 11214 ;;		Nothing
 11215 ;; This function is called by:
 11216 ;;		_setDimmerLights_Dimming
 11217 ;;		_setDimmerLights_DimmingClose
 11218 ;; This function uses a non-reentrant model
 11219 ;;
 11220                           
 11221                           
 11222                           ;psect for function _setDimmerIntr_Dimming_Sw
 11223  13E9                     _setDimmerIntr_Dimming_Sw:	
 11224                           
 11225                           ;incstack = 0
 11226                           ; Regs used in _setDimmerIntr_Dimming_Sw: [wreg+status,2+status,0]
 11227                           ;setDimmerIntr_Dimming_Sw@lights stored from wreg
 11228  13E9  00F4               	movwf	setDimmerIntr_Dimming_Sw@lights
 11229                           
 11230                           ;Dimmer_B1.c: 253: if (lights == 1) {
 11231  13EA  0874               	movf	setDimmerIntr_Dimming_Sw@lights,w
 11232  13EB  3A01               	xorlw	1
 11233  13EC  1D03               	skipz
 11234  13ED  0008               	return
 11235                           
 11236                           ;Dimmer_B1.c: 254: DimmerIntr1.Dimming_Sw = command == 1 ? 1 : 0;
 11237  13EE  0872               	movf	setDimmerIntr_Dimming_Sw@command,w
 11238  13EF  3A01               	xorlw	1
 11239  13F0  3000               	movlw	0
 11240  13F1  1903               	skipnz
 11241  13F2  3001               	movlw	1
 11242  13F3  00F3               	movwf	??_setDimmerIntr_Dimming_Sw
 11243  13F4  0EF3               	swapf	??_setDimmerIntr_Dimming_Sw,f
 11244  13F5  0021               	movlb	1	; select bank1
 11245  13F6  0820               	movf	_DimmerIntr1^(0+128),w
 11246  13F7  0673               	xorwf	??_setDimmerIntr_Dimming_Sw,w
 11247  13F8  39EF               	andlw	-17
 11248  13F9  0673               	xorwf	??_setDimmerIntr_Dimming_Sw,w
 11249  13FA  00A0               	movwf	_DimmerIntr1^(0+128)
 11250  13FB  0008               	return
 11251  13FC                     __end_of_setDimmerIntr_Dimming_Sw:	
 11252                           
 11253                           	psect	text71
 11254  12F0                     __ptext71:	
 11255 ;; *************** function _getDimmerIntr_DimmingValue *****************
 11256 ;; Defined at:
 11257 ;;		line 155 in file "../src/Dimmer_B1.c"
 11258 ;; Parameters:    Size  Location     Type
 11259 ;;  lights          1    wreg     unsigned char 
 11260 ;; Auto vars:     Size  Location     Type
 11261 ;;  lights          1    3[COMMON] unsigned char 
 11262 ;;  value           1    4[COMMON] unsigned char 
 11263 ;; Return value:  Size  Location     Type
 11264 ;;                  1    wreg      unsigned char 
 11265 ;; Registers used:
 11266 ;;		wreg, status,2
 11267 ;; Tracked objects:
 11268 ;;		On entry : 0/0
 11269 ;;		On exit  : 0/0
 11270 ;;		Unchanged: 0/0
 11271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11273 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11274 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11275 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11276 ;;Total ram usage:        3 bytes
 11277 ;; Hardware stack levels used:    1
 11278 ;; Hardware stack levels required when called:    3
 11279 ;; This function calls:
 11280 ;;		Nothing
 11281 ;; This function is called by:
 11282 ;;		_setDimmerLights_Dimming
 11283 ;; This function uses a non-reentrant model
 11284 ;;
 11285                           
 11286                           
 11287                           ;psect for function _getDimmerIntr_DimmingValue
 11288  12F0                     _getDimmerIntr_DimmingValue:	
 11289                           
 11290                           ;incstack = 0
 11291                           ; Regs used in _getDimmerIntr_DimmingValue: [wreg+status,2]
 11292                           ;getDimmerIntr_DimmingValue@lights stored from wreg
 11293  12F0  00F3               	movwf	getDimmerIntr_DimmingValue@lights
 11294                           
 11295                           ;Dimmer_B1.c: 156: char value = 0;
 11296  12F1  01F4               	clrf	getDimmerIntr_DimmingValue@value
 11297                           
 11298                           ;Dimmer_B1.c: 158: if (lights == 1) {
 11299  12F2  0873               	movf	getDimmerIntr_DimmingValue@lights,w
 11300  12F3  3A01               	xorlw	1
 11301  12F4  1D03               	skipz
 11302  12F5  2AFB               	goto	l393
 11303                           
 11304                           ;Dimmer_B1.c: 159: value = DimmerIntr1.DimmingValue;
 11305  12F6  0021               	movlb	1	; select bank1
 11306  12F7  0825               	movf	(_DimmerIntr1^(0+128)+5),w
 11307  12F8  00F2               	movwf	??_getDimmerIntr_DimmingValue
 11308  12F9  0872               	movf	??_getDimmerIntr_DimmingValue,w
 11309  12FA  00F4               	movwf	getDimmerIntr_DimmingValue@value
 11310  12FB                     l393:	
 11311                           
 11312                           ;Dimmer_B1.c: 160: }
 11313                           ;Dimmer_B1.c: 172: return value;
 11314  12FB  0874               	movf	getDimmerIntr_DimmingValue@value,w
 11315  12FC  0008               	return
 11316  12FD                     __end_of_getDimmerIntr_DimmingValue:	
 11317                           
 11318                           	psect	text72
 11319  13D6                     __ptext72:	
 11320 ;; *************** function _getDimmerLights_Allow_Condition *****************
 11321 ;; Defined at:
 11322 ;;		line 1175 in file "../src/Dimmer_B1.c"
 11323 ;; Parameters:    Size  Location     Type
 11324 ;;  lights          1    wreg     unsigned char 
 11325 ;; Auto vars:     Size  Location     Type
 11326 ;;  lights          1    0[COMMON] unsigned char 
 11327 ;;  allow           1    4[COMMON] unsigned char 
 11328 ;; Return value:  Size  Location     Type
 11329 ;;                  1    wreg      unsigned char 
 11330 ;; Registers used:
 11331 ;;		wreg, status,2, pclath, cstack
 11332 ;; Tracked objects:
 11333 ;;		On entry : 0/0
 11334 ;;		On exit  : 0/0
 11335 ;;		Unchanged: 0/0
 11336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11338 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11339 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11340 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11341 ;;Total ram usage:        3 bytes
 11342 ;; Hardware stack levels used:    1
 11343 ;; Hardware stack levels required when called:    4
 11344 ;; This function calls:
 11345 ;;		_getLoad_OK
 11346 ;; This function is called by:
 11347 ;;		_setDimmerLights_Main
 11348 ;; This function uses a non-reentrant model
 11349 ;;
 11350                           
 11351                           
 11352                           ;psect for function _getDimmerLights_Allow_Condition
 11353  13D6                     _getDimmerLights_Allow_Condition:	
 11354                           
 11355                           ;Dimmer_B1.c: 1176: char allow = 0;
 11356                           
 11357                           ;incstack = 0
 11358                           ; Regs used in _getDimmerLights_Allow_Condition: [wreg+status,2+pclath+cstack]
 11359  13D6  01F4               	clrf	getDimmerLights_Allow_Condition@allow
 11360                           
 11361                           ;Dimmer_B1.c: 1182: allow = getLoad_OK() == 0 && Dimmer.LoadGO == 0 ? 0 : 1;
 11362  13D7  01F5               	clrf	_getDimmerLights_Allow_Condition$2174
 11363  13D8  0AF5               	incf	_getDimmerLights_Allow_Condition$2174,f
 11364  13D9  3191  21FC  3193   	fcall	_getLoad_OK
 11365  13DC  3800               	iorlw	0
 11366  13DD  1D03               	skipz
 11367  13DE  2BE3               	goto	l5064
 11368  13DF  0021               	movlb	1	; select bank1
 11369  13E0  18C9               	btfsc	_Dimmer^(0+128),1
 11370  13E1  2BE3               	goto	l5064
 11371  13E2  01F5               	clrf	_getDimmerLights_Allow_Condition$2174
 11372  13E3                     l5064:	
 11373  13E3  0875               	movf	_getDimmerLights_Allow_Condition$2174,w
 11374  13E4  00F3               	movwf	??_getDimmerLights_Allow_Condition
 11375  13E5  0873               	movf	??_getDimmerLights_Allow_Condition,w
 11376  13E6  00F4               	movwf	getDimmerLights_Allow_Condition@allow
 11377                           
 11378                           ;Dimmer_B1.c: 1210: return allow;
 11379  13E7  0874               	movf	getDimmerLights_Allow_Condition@allow,w
 11380  13E8  0008               	return
 11381  13E9                     __end_of_getDimmerLights_Allow_Condition:	
 11382                           
 11383                           	psect	text73
 11384  11FC                     __ptext73:	
 11385 ;; *************** function _getLoad_OK *****************
 11386 ;; Defined at:
 11387 ;;		line 274 in file "../src/OverLoad_B1.c"
 11388 ;; Parameters:    Size  Location     Type
 11389 ;;		None
 11390 ;; Auto vars:     Size  Location     Type
 11391 ;;  ok              1    2[COMMON] unsigned char 
 11392 ;; Return value:  Size  Location     Type
 11393 ;;                  1    wreg      unsigned char 
 11394 ;; Registers used:
 11395 ;;		wreg, status,2
 11396 ;; Tracked objects:
 11397 ;;		On entry : 0/0
 11398 ;;		On exit  : 0/0
 11399 ;;		Unchanged: 0/0
 11400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11402 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11404 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11405 ;;Total ram usage:        1 bytes
 11406 ;; Hardware stack levels used:    1
 11407 ;; Hardware stack levels required when called:    3
 11408 ;; This function calls:
 11409 ;;		Nothing
 11410 ;; This function is called by:
 11411 ;;		_DimmerLights_Main
 11412 ;;		_getDimmerLights_Allow_Condition
 11413 ;; This function uses a non-reentrant model
 11414 ;;
 11415                           
 11416                           
 11417                           ;psect for function _getLoad_OK
 11418  11FC                     _getLoad_OK:	
 11419                           
 11420                           ;OverLoad_B1.c: 275: char ok = Load.OK == 1 ? 1 : 0;
 11421                           
 11422                           ;incstack = 0
 11423                           ; Regs used in _getLoad_OK: [wreg+status,2]
 11424  11FC  3000               	movlw	0
 11425  11FD  0022               	movlb	2	; select bank2
 11426  11FE  1BB0               	btfsc	_Load^(0+256),7
 11427  11FF  3001               	movlw	1
 11428  1200  00F2               	movwf	getLoad_OK@ok
 11429                           
 11430                           ;OverLoad_B1.c: 276: return ok;
 11431  1201  0872               	movf	getLoad_OK@ok,w
 11432  1202  0008               	return
 11433  1203                     __end_of_getLoad_OK:	
 11434                           
 11435                           	psect	text74
 11436  161F                     __ptext74:	
 11437 ;; *************** function _getMain_All_Error_Status *****************
 11438 ;; Defined at:
 11439 ;;		line 429 in file "../src/Main_B1.c"
 11440 ;; Parameters:    Size  Location     Type
 11441 ;;  command         1    wreg     unsigned char 
 11442 ;; Auto vars:     Size  Location     Type
 11443 ;;  command         1    7[COMMON] unsigned char 
 11444 ;;  status          1    8[COMMON] unsigned char 
 11445 ;; Return value:  Size  Location     Type
 11446 ;;                  1    wreg      unsigned char 
 11447 ;; Registers used:
 11448 ;;		wreg, status,2, status,0
 11449 ;; Tracked objects:
 11450 ;;		On entry : 0/0
 11451 ;;		On exit  : 0/0
 11452 ;;		Unchanged: 0/0
 11453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11455 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11456 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11457 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11458 ;;Total ram usage:        7 bytes
 11459 ;; Hardware stack levels used:    1
 11460 ;; Hardware stack levels required when called:    3
 11461 ;; This function calls:
 11462 ;;		Nothing
 11463 ;; This function is called by:
 11464 ;;		_DimmerLights_Main
 11465 ;;		_Exception_Main
 11466 ;;		_Load_Main
 11467 ;;		_setTemp_Main
 11468 ;;		_setSw_Main
 11469 ;; This function uses a non-reentrant model
 11470 ;;
 11471                           
 11472                           
 11473                           ;psect for function _getMain_All_Error_Status
 11474  161F                     _getMain_All_Error_Status:	
 11475                           
 11476                           ;incstack = 0
 11477                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2+status,0]
 11478                           ;getMain_All_Error_Status@command stored from wreg
 11479  161F  00F7               	movwf	getMain_All_Error_Status@command
 11480                           
 11481                           ;Main_B1.c: 430: char status = 0;
 11482  1620  01F8               	clrf	getMain_All_Error_Status@status
 11483                           
 11484                           ;Main_B1.c: 441: if (status == 0 && command != 2) {
 11485  1621  08F8               	movf	getMain_All_Error_Status@status,f
 11486  1622  1D03               	skipz
 11487  1623  2E36               	goto	l5042
 11488  1624  0877               	movf	getMain_All_Error_Status@command,w
 11489  1625  3A02               	xorlw	2
 11490  1626  1903               	skipnz
 11491  1627  2E36               	goto	l5042
 11492                           
 11493                           ;Main_B1.c: 442: status = Temp.ERROR == 1 ? 2 : 0;
 11494  1628  0021               	movlb	1	; select bank1
 11495  1629  18D6               	btfsc	_Temp^(0+128),1
 11496  162A  2E2E               	goto	l5040
 11497  162B  01F3               	clrf	_getMain_All_Error_Status$3476
 11498  162C  01F4               	clrf	_getMain_All_Error_Status$3476+1
 11499  162D  2E32               	goto	l1117
 11500  162E                     l5040:	
 11501  162E  3002               	movlw	2
 11502  162F  00F3               	movwf	_getMain_All_Error_Status$3476
 11503  1630  3000               	movlw	0
 11504  1631  00F4               	movwf	_getMain_All_Error_Status$3476+1
 11505  1632                     l1117:	
 11506  1632  0873               	movf	_getMain_All_Error_Status$3476,w
 11507  1633  00F2               	movwf	??_getMain_All_Error_Status
 11508  1634  0872               	movf	??_getMain_All_Error_Status,w
 11509  1635  00F8               	movwf	getMain_All_Error_Status@status
 11510  1636                     l5042:	
 11511                           
 11512                           ;Main_B1.c: 443: }
 11513                           ;Main_B1.c: 448: if (status == 0 && command != 3) {
 11514  1636  08F8               	movf	getMain_All_Error_Status@status,f
 11515  1637  1D03               	skipz
 11516  1638  2E4B               	goto	l1118
 11517  1639  0877               	movf	getMain_All_Error_Status@command,w
 11518  163A  3A03               	xorlw	3
 11519  163B  1903               	skipnz
 11520  163C  2E4B               	goto	l1118
 11521                           
 11522                           ;Main_B1.c: 449: status = Load.ERROR == 1 ? 3 : 0;
 11523  163D  0022               	movlb	2	; select bank2
 11524  163E  1AB0               	btfsc	_Load^(0+256),5
 11525  163F  2E43               	goto	l5050
 11526  1640  01F5               	clrf	_getMain_All_Error_Status$3477
 11527  1641  01F6               	clrf	_getMain_All_Error_Status$3477+1
 11528  1642  2E47               	goto	l1122
 11529  1643                     l5050:	
 11530  1643  3003               	movlw	3
 11531  1644  00F5               	movwf	_getMain_All_Error_Status$3477
 11532  1645  3000               	movlw	0
 11533  1646  00F6               	movwf	_getMain_All_Error_Status$3477+1
 11534  1647                     l1122:	
 11535  1647  0875               	movf	_getMain_All_Error_Status$3477,w
 11536  1648  00F2               	movwf	??_getMain_All_Error_Status
 11537  1649  0872               	movf	??_getMain_All_Error_Status,w
 11538  164A  00F8               	movwf	getMain_All_Error_Status@status
 11539  164B                     l1118:	
 11540                           
 11541                           ;Main_B1.c: 450: }
 11542                           ;Main_B1.c: 460: return status;
 11543  164B  0878               	movf	getMain_All_Error_Status@status,w
 11544  164C  0008               	return
 11545  164D                     __end_of_getMain_All_Error_Status:	
 11546                           
 11547                           	psect	text75
 11548  0A56                     __ptext75:	
 11549 ;; *************** function _DimmerLights_TwoPhase_Main *****************
 11550 ;; Defined at:
 11551 ;;		line 957 in file "../src/Dimmer_B1.c"
 11552 ;; Parameters:    Size  Location     Type
 11553 ;;  lights          1    wreg     unsigned char 
 11554 ;; Auto vars:     Size  Location     Type
 11555 ;;  lights          1   65[BANK0 ] unsigned char 
 11556 ;; Return value:  Size  Location     Type
 11557 ;;		None               void
 11558 ;; Registers used:
 11559 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11560 ;; Tracked objects:
 11561 ;;		On entry : 0/0
 11562 ;;		On exit  : 0/0
 11563 ;;		Unchanged: 0/0
 11564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11566 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11568 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11569 ;;Total ram usage:        1 bytes
 11570 ;; Hardware stack levels used:    1
 11571 ;; Hardware stack levels required when called:    7
 11572 ;; This function calls:
 11573 ;;		_DimmerLights_AssignationDimming
 11574 ;;		_DimmerLights_SelectPointer
 11575 ;; This function is called by:
 11576 ;;		_DimmerLights_Main
 11577 ;; This function uses a non-reentrant model
 11578 ;;
 11579                           
 11580                           
 11581                           ;psect for function _DimmerLights_TwoPhase_Main
 11582  0A56                     _DimmerLights_TwoPhase_Main:	
 11583                           
 11584                           ;incstack = 0
 11585                           ; Regs used in _DimmerLights_TwoPhase_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 11586                           ;DimmerLights_TwoPhase_Main@lights stored from wreg
 11587  0A56  0020               	movlb	0	; select bank0
 11588  0A57  00E1               	movwf	DimmerLights_TwoPhase_Main@lights
 11589                           
 11590                           ;Dimmer_B1.c: 959: DimmerLights_SelectPointer(lights);
 11591  0A58  0861               	movf	DimmerLights_TwoPhase_Main@lights,w
 11592  0A59  3192  2270  318A   	fcall	_DimmerLights_SelectPointer
 11593                           
 11594                           ;Dimmer_B1.c: 960: if (DimmerLights->Phase == 1) {
 11595  0A5C  0020               	movlb	0	; select bank0
 11596  0A5D  086B               	movf	_DimmerLights,w
 11597  0A5E  3E02               	addlw	2
 11598  0A5F  0086               	movwf	6
 11599  0A60  3001               	movlw	1	; select bank2/3
 11600  0A61  0087               	movwf	7
 11601  0A62  1C01               	btfss	1,0
 11602  0A63  0008               	return
 11603                           
 11604                           ;Dimmer_B1.c: 961: if (DimmerLights->PhaseFirst == 0) {
 11605  0A64  086B               	movf	_DimmerLights,w
 11606  0A65  3E02               	addlw	2
 11607  0A66  0086               	movwf	6
 11608  0A67  3001               	movlw	1	; select bank2/3
 11609  0A68  0087               	movwf	7
 11610  0A69  1881               	btfsc	1,1
 11611  0A6A  2A94               	goto	l6960
 11612                           
 11613                           ;Dimmer_B1.c: 963: if (DimmerLights->PhaseSwitch == 1) {
 11614  0A6B  086B               	movf	_DimmerLights,w
 11615  0A6C  3E02               	addlw	2
 11616  0A6D  0086               	movwf	6
 11617  0A6E  3001               	movlw	1	; select bank2/3
 11618  0A6F  0087               	movwf	7
 11619  0A70  1D01               	btfss	1,2
 11620  0A71  2A83               	goto	l6958
 11621                           
 11622                           ;Dimmer_B1.c: 964: DimmerLights->PhaseFirst = 1;
 11623  0A72  086B               	movf	_DimmerLights,w
 11624  0A73  3E02               	addlw	2
 11625  0A74  0086               	movwf	6
 11626  0A75  3001               	movlw	1	; select bank2/3
 11627  0A76  0087               	movwf	7
 11628  0A77  1481               	bsf	1,1
 11629                           
 11630                           ;Dimmer_B1.c: 965: DimmerLights->Trigger = 1;
 11631  0A78  086B               	movf	_DimmerLights,w
 11632  0A79  0086               	movwf	6
 11633  0A7A  3001               	movlw	1	; select bank2/3
 11634  0A7B  0087               	movwf	7
 11635  0A7C  1481               	bsf	1,1
 11636                           
 11637                           ;Dimmer_B1.c: 966: DimmerLights->Switch = 1;
 11638  0A7D  086B               	movf	_DimmerLights,w
 11639  0A7E  0086               	movwf	6
 11640  0A7F  3001               	movlw	1	; select bank2/3
 11641  0A80  0087               	movwf	7
 11642  0A81  1501               	bsf	1,2
 11643                           
 11644                           ;Dimmer_B1.c: 967: } else {
 11645  0A82  0008               	return
 11646  0A83                     l6958:	
 11647                           
 11648                           ;Dimmer_B1.c: 968: DimmerLights->Phase = 0;
 11649  0A83  086B               	movf	_DimmerLights,w
 11650  0A84  3E02               	addlw	2
 11651  0A85  0086               	movwf	6
 11652  0A86  3001               	movlw	1	; select bank2/3
 11653  0A87  0087               	movwf	7
 11654  0A88  1001               	bcf	1,0
 11655                           
 11656                           ;Dimmer_B1.c: 969: DimmerLights->Trigger = 1;
 11657  0A89  086B               	movf	_DimmerLights,w
 11658  0A8A  0086               	movwf	6
 11659  0A8B  3001               	movlw	1	; select bank2/3
 11660  0A8C  0087               	movwf	7
 11661  0A8D  1481               	bsf	1,1
 11662                           
 11663                           ;Dimmer_B1.c: 970: DimmerLights->Switch = 0;
 11664  0A8E  086B               	movf	_DimmerLights,w
 11665  0A8F  0086               	movwf	6
 11666  0A90  3001               	movlw	1	; select bank2/3
 11667  0A91  0087               	movwf	7
 11668  0A92  1101               	bcf	1,2
 11669                           
 11670                           ;Dimmer_B1.c: 971: }
 11671                           ;Dimmer_B1.c: 972: } else {
 11672  0A93  0008               	return
 11673  0A94                     l6960:	
 11674                           
 11675                           ;Dimmer_B1.c: 973: if (DimmerLights->Trigger == 0) {
 11676  0A94  086B               	movf	_DimmerLights,w
 11677  0A95  0086               	movwf	6
 11678  0A96  3001               	movlw	1	; select bank2/3
 11679  0A97  0087               	movwf	7
 11680  0A98  1881               	btfsc	1,1
 11681  0A99  0008               	return
 11682                           
 11683                           ;Dimmer_B1.c: 974: DimmerLights->PhaseFirst = 0;
 11684  0A9A  086B               	movf	_DimmerLights,w
 11685  0A9B  3E02               	addlw	2
 11686  0A9C  0086               	movwf	6
 11687  0A9D  3001               	movlw	1	; select bank2/3
 11688  0A9E  0087               	movwf	7
 11689  0A9F  1081               	bcf	1,1
 11690                           
 11691                           ;Dimmer_B1.c: 975: DimmerLights->Phase = 0;
 11692  0AA0  086B               	movf	_DimmerLights,w
 11693  0AA1  3E02               	addlw	2
 11694  0AA2  0086               	movwf	6
 11695  0AA3  3001               	movlw	1	; select bank2/3
 11696  0AA4  0087               	movwf	7
 11697  0AA5  1001               	bcf	1,0
 11698                           
 11699                           ;Dimmer_B1.c: 976: DimmerLights_AssignationDimming(lights);
 11700  0AA6  0861               	movf	DimmerLights_TwoPhase_Main@lights,w
 11701  0AA7  3196  267B         	fcall	_DimmerLights_AssignationDimming
 11702  0AA9  0008               	return
 11703  0AAA                     __end_of_DimmerLights_TwoPhase_Main:	
 11704                           
 11705                           	psect	text76
 11706  167B                     __ptext76:	
 11707 ;; *************** function _DimmerLights_AssignationDimming *****************
 11708 ;; Defined at:
 11709 ;;		line 983 in file "../src/Dimmer_B1.c"
 11710 ;; Parameters:    Size  Location     Type
 11711 ;;  sw              1    wreg     unsigned char 
 11712 ;; Auto vars:     Size  Location     Type
 11713 ;;  sw              1   64[BANK0 ] unsigned char 
 11714 ;;  status          1   63[BANK0 ] unsigned char 
 11715 ;; Return value:  Size  Location     Type
 11716 ;;		None               void
 11717 ;; Registers used:
 11718 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11719 ;; Tracked objects:
 11720 ;;		On entry : 0/0
 11721 ;;		On exit  : 0/0
 11722 ;;		Unchanged: 0/0
 11723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11725 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11726 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11727 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11728 ;;Total ram usage:        4 bytes
 11729 ;; Hardware stack levels used:    1
 11730 ;; Hardware stack levels required when called:    6
 11731 ;; This function calls:
 11732 ;;		_getDimmerLights_PercentToValue
 11733 ;;		_getDimmerLights_Status
 11734 ;;		_setDimmerIntr_Dimming_RF
 11735 ;;		_setDimmerIntr_MaxmumValue
 11736 ;;		_setMemory_Modify
 11737 ;; This function is called by:
 11738 ;;		_DimmerLights_TwoPhase_Main
 11739 ;; This function uses a non-reentrant model
 11740 ;;
 11741                           
 11742                           
 11743                           ;psect for function _DimmerLights_AssignationDimming
 11744  167B                     _DimmerLights_AssignationDimming:	
 11745                           
 11746                           ;incstack = 0
 11747                           ; Regs used in _DimmerLights_AssignationDimming: [wreg+fsr1l+fsr1h+status,2+status,0+pcl
      +                          ath+cstack]
 11748                           ;DimmerLights_AssignationDimming@sw stored from wreg
 11749  167B  0020               	movlb	0	; select bank0
 11750  167C  00E0               	movwf	DimmerLights_AssignationDimming@sw
 11751                           
 11752                           ;Dimmer_B1.c: 984: char status = 0;
 11753  167D  01DF               	clrf	DimmerLights_AssignationDimming@status
 11754                           
 11755                           ;Dimmer_B1.c: 986: status = getDimmerLights_Status(sw);
 11756  167E  0860               	movf	DimmerLights_AssignationDimming@sw,w
 11757  167F  3193  2335  3196   	fcall	_getDimmerLights_Status
 11758  1682  0020               	movlb	0	; select bank0
 11759  1683  00DD               	movwf	??_DimmerLights_AssignationDimming
 11760  1684  085D               	movf	??_DimmerLights_AssignationDimming,w
 11761  1685  00DF               	movwf	DimmerLights_AssignationDimming@status
 11762                           
 11763                           ;Dimmer_B1.c: 990: setMemory_Modify(1);
 11764  1686  3001               	movlw	1
 11765  1687  3193  2371  3196   	fcall	_setMemory_Modify
 11766                           
 11767                           ;Dimmer_B1.c: 994: if (status == 1) {
 11768  168A  0020               	movlb	0	; select bank0
 11769  168B  085F               	movf	DimmerLights_AssignationDimming@status,w
 11770  168C  3A01               	xorlw	1
 11771  168D  1D03               	skipz
 11772  168E  0008               	return
 11773                           
 11774                           ;Dimmer_B1.c: 995: setDimmerIntr_MaxmumValue(sw, getDimmerLights_PercentToValue(product-
      +                          >Data[20 + sw]));
 11775  168F  0860               	movf	DimmerLights_AssignationDimming@sw,w
 11776  1690  3E14               	addlw	20
 11777  1691  076D               	addwf	_product,w
 11778  1692  00DD               	movwf	??_DimmerLights_AssignationDimming
 11779  1693  085D               	movf	??_DimmerLights_AssignationDimming,w
 11780  1694  0086               	movwf	6
 11781  1695  3001               	movlw	1	; select bank2/3
 11782  1696  0087               	movwf	7
 11783  1697  0801               	movf	1,w
 11784  1698  318C  2427  3196   	fcall	_getDimmerLights_PercentToValue
 11785  169B  0020               	movlb	0	; select bank0
 11786  169C  00DE               	movwf	??_DimmerLights_AssignationDimming+1
 11787  169D  085E               	movf	??_DimmerLights_AssignationDimming+1,w
 11788  169E  00DA               	movwf	setDimmerIntr_MaxmumValue@value
 11789  169F  0860               	movf	DimmerLights_AssignationDimming@sw,w
 11790  16A0  3192  22B3  3196   	fcall	_setDimmerIntr_MaxmumValue
 11791                           
 11792                           ;Dimmer_B1.c: 996: setDimmerIntr_Dimming_RF(sw, 1);
 11793  16A3  01F2               	clrf	setDimmerIntr_Dimming_RF@command
 11794  16A4  0AF2               	incf	setDimmerIntr_Dimming_RF@command,f
 11795  16A5  0020               	movlb	0	; select bank0
 11796  16A6  0860               	movf	DimmerLights_AssignationDimming@sw,w
 11797  16A7  3194  2424         	fcall	_setDimmerIntr_Dimming_RF
 11798  16A9  0008               	return
 11799  16AA                     __end_of_DimmerLights_AssignationDimming:	
 11800                           
 11801                           	psect	text77
 11802  12B3                     __ptext77:	
 11803 ;; *************** function _setDimmerIntr_MaxmumValue *****************
 11804 ;; Defined at:
 11805 ;;		line 175 in file "../src/Dimmer_B1.c"
 11806 ;; Parameters:    Size  Location     Type
 11807 ;;  lights          1    wreg     unsigned char 
 11808 ;;  value           1   58[BANK0 ] unsigned char 
 11809 ;; Auto vars:     Size  Location     Type
 11810 ;;  lights          1   60[BANK0 ] unsigned char 
 11811 ;; Return value:  Size  Location     Type
 11812 ;;		None               void
 11813 ;; Registers used:
 11814 ;;		wreg
 11815 ;; Tracked objects:
 11816 ;;		On entry : 0/0
 11817 ;;		On exit  : 0/0
 11818 ;;		Unchanged: 0/0
 11819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11820 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11821 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11822 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11823 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11824 ;;Total ram usage:        3 bytes
 11825 ;; Hardware stack levels used:    1
 11826 ;; Hardware stack levels required when called:    3
 11827 ;; This function calls:
 11828 ;;		Nothing
 11829 ;; This function is called by:
 11830 ;;		_DimmerLights_AssignationDimming
 11831 ;;		_setDimmerLights_OnOff
 11832 ;;		_setDimmerLights_Dimming
 11833 ;; This function uses a non-reentrant model
 11834 ;;
 11835                           
 11836                           
 11837                           ;psect for function _setDimmerIntr_MaxmumValue
 11838  12B3                     _setDimmerIntr_MaxmumValue:	
 11839                           
 11840                           ;incstack = 0
 11841                           ; Regs used in _setDimmerIntr_MaxmumValue: [wreg]
 11842                           ;setDimmerIntr_MaxmumValue@lights stored from wreg
 11843  12B3  0020               	movlb	0	; select bank0
 11844  12B4  00DC               	movwf	setDimmerIntr_MaxmumValue@lights
 11845                           
 11846                           ;Dimmer_B1.c: 177: if (lights == 1) {
 11847  12B5  085C               	movf	setDimmerIntr_MaxmumValue@lights,w
 11848  12B6  3A01               	xorlw	1
 11849  12B7  1D03               	skipz
 11850  12B8  0008               	return
 11851                           
 11852                           ;Dimmer_B1.c: 178: DimmerIntr1.MaxmumValue = value;
 11853  12B9  085A               	movf	setDimmerIntr_MaxmumValue@value,w
 11854  12BA  00DB               	movwf	??_setDimmerIntr_MaxmumValue
 11855  12BB  085B               	movf	??_setDimmerIntr_MaxmumValue,w
 11856  12BC  0021               	movlb	1	; select bank1
 11857  12BD  00A6               	movwf	(_DimmerIntr1^(0+128)+6)
 11858  12BE  0008               	return
 11859  12BF                     __end_of_setDimmerIntr_MaxmumValue:	
 11860                           
 11861                           	psect	text78
 11862  1424                     __ptext78:	
 11863 ;; *************** function _setDimmerIntr_Dimming_RF *****************
 11864 ;; Defined at:
 11865 ;;		line 290 in file "../src/Dimmer_B1.c"
 11866 ;; Parameters:    Size  Location     Type
 11867 ;;  lights          1    wreg     unsigned char 
 11868 ;;  command         1    2[COMMON] unsigned char 
 11869 ;; Auto vars:     Size  Location     Type
 11870 ;;  lights          1    4[COMMON] unsigned char 
 11871 ;; Return value:  Size  Location     Type
 11872 ;;		None               void
 11873 ;; Registers used:
 11874 ;;		wreg, status,2, status,0
 11875 ;; Tracked objects:
 11876 ;;		On entry : 0/0
 11877 ;;		On exit  : 0/0
 11878 ;;		Unchanged: 0/0
 11879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11880 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11881 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11882 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11883 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11884 ;;Total ram usage:        3 bytes
 11885 ;; Hardware stack levels used:    1
 11886 ;; Hardware stack levels required when called:    3
 11887 ;; This function calls:
 11888 ;;		Nothing
 11889 ;; This function is called by:
 11890 ;;		_DimmerLights_AssignationDimming
 11891 ;;		_setDimmerLights_OnOff
 11892 ;; This function uses a non-reentrant model
 11893 ;;
 11894                           
 11895                           
 11896                           ;psect for function _setDimmerIntr_Dimming_RF
 11897  1424                     _setDimmerIntr_Dimming_RF:	
 11898                           
 11899                           ;incstack = 0
 11900                           ; Regs used in _setDimmerIntr_Dimming_RF: [wreg+status,2+status,0]
 11901                           ;setDimmerIntr_Dimming_RF@lights stored from wreg
 11902  1424  00F4               	movwf	setDimmerIntr_Dimming_RF@lights
 11903                           
 11904                           ;Dimmer_B1.c: 292: if (lights == 1) {
 11905  1425  0874               	movf	setDimmerIntr_Dimming_RF@lights,w
 11906  1426  3A01               	xorlw	1
 11907  1427  1D03               	skipz
 11908  1428  0008               	return
 11909                           
 11910                           ;Dimmer_B1.c: 293: DimmerIntr1.Dimming_RF = command == 1 ? 1 : 0;
 11911  1429  0872               	movf	setDimmerIntr_Dimming_RF@command,w
 11912  142A  3A01               	xorlw	1
 11913  142B  3000               	movlw	0
 11914  142C  1903               	skipnz
 11915  142D  3001               	movlw	1
 11916  142E  00F3               	movwf	??_setDimmerIntr_Dimming_RF
 11917  142F  0EF3               	swapf	??_setDimmerIntr_Dimming_RF,f
 11918  1430  0DF3               	rlf	??_setDimmerIntr_Dimming_RF,f
 11919  1431  0DF3               	rlf	??_setDimmerIntr_Dimming_RF,f
 11920  1432  0021               	movlb	1	; select bank1
 11921  1433  0820               	movf	_DimmerIntr1^(0+128),w
 11922  1434  0673               	xorwf	??_setDimmerIntr_Dimming_RF,w
 11923  1435  39BF               	andlw	-65
 11924  1436  0673               	xorwf	??_setDimmerIntr_Dimming_RF,w
 11925  1437  00A0               	movwf	_DimmerIntr1^(0+128)
 11926  1438  0008               	return
 11927  1439                     __end_of_setDimmerIntr_Dimming_RF:	
 11928                           
 11929                           	psect	text79
 11930  09AF                     __ptext79:	
 11931 ;; *************** function _DimmerLights_DimmingFunction *****************
 11932 ;; Defined at:
 11933 ;;		line 2127 in file "../src/Dimmer_B1.c"
 11934 ;; Parameters:    Size  Location     Type
 11935 ;;  lights          1    wreg     unsigned char 
 11936 ;; Auto vars:     Size  Location     Type
 11937 ;;  lights          1    6[BANK0 ] unsigned char 
 11938 ;; Return value:  Size  Location     Type
 11939 ;;		None               void
 11940 ;; Registers used:
 11941 ;;		wreg, status,2, status,0, pclath, cstack
 11942 ;; Tracked objects:
 11943 ;;		On entry : 0/0
 11944 ;;		On exit  : 0/0
 11945 ;;		Unchanged: 0/0
 11946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11948 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11949 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11950 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11951 ;;Total ram usage:        2 bytes
 11952 ;; Hardware stack levels used:    1
 11953 ;; Hardware stack levels required when called:    6
 11954 ;; This function calls:
 11955 ;;		_DimmerIntr_ValueCalculate
 11956 ;; This function is called by:
 11957 ;;		_DimmerLights_Main
 11958 ;; This function uses a non-reentrant model
 11959 ;;
 11960                           
 11961                           
 11962                           ;psect for function _DimmerLights_DimmingFunction
 11963  09AF                     _DimmerLights_DimmingFunction:	
 11964                           
 11965                           ;incstack = 0
 11966                           ; Regs used in _DimmerLights_DimmingFunction: [wreg+status,2+status,0+pclath+cstack]
 11967                           ;DimmerLights_DimmingFunction@lights stored from wreg
 11968  09AF  0020               	movlb	0	; select bank0
 11969  09B0  00A6               	movwf	DimmerLights_DimmingFunction@lights
 11970                           
 11971                           ;Dimmer_B1.c: 2129: if (lights == 1) {
 11972  09B1  0826               	movf	DimmerLights_DimmingFunction@lights,w
 11973  09B2  3A01               	xorlw	1
 11974  09B3  1D03               	skipz
 11975  09B4  0008               	return
 11976                           
 11977                           ;Dimmer_B1.c: 2130: if (DimmerIntr1.Tune == 1) {
 11978  09B5  0021               	movlb	1	; select bank1
 11979  09B6  1CA0               	btfss	_DimmerIntr1^(0+128),1
 11980  09B7  0008               	return
 11981                           
 11982                           ;Dimmer_B1.c: 2131: DimmerIntr1.Tune = 0;
 11983  09B8  10A0               	bcf	_DimmerIntr1^(0+128),1
 11984                           
 11985                           ;Dimmer_B1.c: 2132: DimmerIntr1.TuneTime++;
 11986  09B9  3001               	movlw	1
 11987  09BA  0020               	movlb	0	; select bank0
 11988  09BB  00A5               	movwf	??_DimmerLights_DimmingFunction
 11989  09BC  0825               	movf	??_DimmerLights_DimmingFunction,w
 11990  09BD  0021               	movlb	1	; select bank1
 11991  09BE  07A3               	addwf	(_DimmerIntr1^(0+128)+3),f
 11992                           
 11993                           ;Dimmer_B1.c: 2133: if (DimmerIntr1.TuneTime >= DimmerIntr1.TuneTimeValue) {
 11994  09BF  0824               	movf	(_DimmerIntr1^(0+128)+4),w
 11995  09C0  0223               	subwf	(_DimmerIntr1^(0+128)+3),w
 11996  09C1  1C03               	skipc
 11997  09C2  0008               	return
 11998                           
 11999                           ;Dimmer_B1.c: 2134: DimmerIntr1.TuneTime = 0;
 12000  09C3  01A3               	clrf	(_DimmerIntr1^(0+128)+3)
 12001                           
 12002                           ;Dimmer_B1.c: 2135: DimmerIntr1.TuneGO = 1;
 12003  09C4  1721               	bsf	(_DimmerIntr1^(0+128)+1),6
 12004                           
 12005                           ;Dimmer_B1.c: 2136: if (DimmerIntr1.Dimming_Sw == 1) {
 12006  09C5  1E20               	btfss	_DimmerIntr1^(0+128),4
 12007  09C6  29E5               	goto	l595
 12008                           
 12009                           ;Dimmer_B1.c: 2138: if (DimmerIntr1.Dimming_Status == 0) {
 12010  09C7  1AA0               	btfsc	_DimmerIntr1^(0+128),5
 12011  09C8  29D9               	goto	l6930
 12012                           
 12013                           ;Dimmer_B1.c: 2139: if (DimmerIntr1.DimmingValue < ((char)(82*0.6))) {
 12014  09C9  3031               	movlw	49
 12015  09CA  0225               	subwf	(_DimmerIntr1^(0+128)+5),w
 12016  09CB  1803               	skipnc
 12017  09CC  29D7               	goto	l597
 12018                           
 12019                           ;Dimmer_B1.c: 2140: DimmerIntr1.DimmingValue++;
 12020  09CD  3001               	movlw	1
 12021  09CE  0020               	movlb	0	; select bank0
 12022  09CF  00A5               	movwf	??_DimmerLights_DimmingFunction
 12023  09D0  0825               	movf	??_DimmerLights_DimmingFunction,w
 12024  09D1  0021               	movlb	1	; select bank1
 12025  09D2  07A5               	addwf	(_DimmerIntr1^(0+128)+5),f
 12026                           
 12027                           ;Dimmer_B1.c: 2141: DimmerIntr_ValueCalculate(1);
 12028  09D3  3001               	movlw	1
 12029  09D4  3195  25F3         	fcall	_DimmerIntr_ValueCalculate
 12030                           
 12031                           ;Dimmer_B1.c: 2142: } else {
 12032  09D6  0008               	return
 12033  09D7                     l597:	
 12034                           
 12035                           ;Dimmer_B1.c: 2143: DimmerIntr1.Dimming_Status = 1;
 12036  09D7  16A0               	bsf	_DimmerIntr1^(0+128),5
 12037                           
 12038                           ;Dimmer_B1.c: 2144: }
 12039                           ;Dimmer_B1.c: 2145: } else {
 12040  09D8  0008               	return
 12041  09D9                     l6930:	
 12042                           
 12043                           ;Dimmer_B1.c: 2146: if (DimmerIntr1.DimmingValue > ((char)(10*0.6))) {
 12044  09D9  3007               	movlw	7
 12045  09DA  0225               	subwf	(_DimmerIntr1^(0+128)+5),w
 12046  09DB  1C03               	skipc
 12047  09DC  29E3               	goto	l600
 12048                           
 12049                           ;Dimmer_B1.c: 2147: DimmerIntr1.DimmingValue--;
 12050  09DD  3001               	movlw	1
 12051  09DE  02A5               	subwf	(_DimmerIntr1^(0+128)+5),f
 12052                           
 12053                           ;Dimmer_B1.c: 2148: DimmerIntr_ValueCalculate(1);
 12054  09DF  3001               	movlw	1
 12055  09E0  3195  25F3         	fcall	_DimmerIntr_ValueCalculate
 12056                           
 12057                           ;Dimmer_B1.c: 2149: } else {
 12058  09E2  0008               	return
 12059  09E3                     l600:	
 12060                           
 12061                           ;Dimmer_B1.c: 2150: DimmerIntr1.Dimming_Status = 0;
 12062  09E3  12A0               	bcf	_DimmerIntr1^(0+128),5
 12063                           
 12064                           ;Dimmer_B1.c: 2151: }
 12065                           ;Dimmer_B1.c: 2152: }
 12066                           ;Dimmer_B1.c: 2171: } else if (DimmerIntr1.Dimming_RF == 1) {
 12067  09E4  0008               	return
 12068  09E5                     l595:	
 12069  09E5  1F20               	btfss	_DimmerIntr1^(0+128),6
 12070  09E6  0008               	return
 12071                           
 12072                           ;Dimmer_B1.c: 2173: if (DimmerIntr1.DimmingValue < DimmerIntr1.MaxmumValue) {
 12073  09E7  0826               	movf	(_DimmerIntr1^(0+128)+6),w
 12074  09E8  0225               	subwf	(_DimmerIntr1^(0+128)+5),w
 12075  09E9  1803               	skipnc
 12076  09EA  29F5               	goto	l6942
 12077                           
 12078                           ;Dimmer_B1.c: 2174: DimmerIntr1.DimmingValue++;
 12079  09EB  3001               	movlw	1
 12080  09EC  0020               	movlb	0	; select bank0
 12081  09ED  00A5               	movwf	??_DimmerLights_DimmingFunction
 12082  09EE  0825               	movf	??_DimmerLights_DimmingFunction,w
 12083  09EF  0021               	movlb	1	; select bank1
 12084  09F0  07A5               	addwf	(_DimmerIntr1^(0+128)+5),f
 12085                           
 12086                           ;Dimmer_B1.c: 2175: DimmerIntr_ValueCalculate(1);
 12087  09F1  3001               	movlw	1
 12088  09F2  3195  25F3         	fcall	_DimmerIntr_ValueCalculate
 12089                           
 12090                           ;Dimmer_B1.c: 2176: } else if (DimmerIntr1.DimmingValue > DimmerIntr1.MaxmumValue) {
 12091  09F4  0008               	return
 12092  09F5                     l6942:	
 12093  09F5  0021               	movlb	1	; select bank1
 12094  09F6  0825               	movf	(_DimmerIntr1^(0+128)+5),w
 12095  09F7  0226               	subwf	(_DimmerIntr1^(0+128)+6),w
 12096  09F8  1803               	skipnc
 12097  09F9  2A00               	goto	l606
 12098                           
 12099                           ;Dimmer_B1.c: 2177: DimmerIntr1.DimmingValue--;
 12100  09FA  3001               	movlw	1
 12101  09FB  02A5               	subwf	(_DimmerIntr1^(0+128)+5),f
 12102                           
 12103                           ;Dimmer_B1.c: 2178: DimmerIntr_ValueCalculate(1);
 12104  09FC  3001               	movlw	1
 12105  09FD  3195  25F3         	fcall	_DimmerIntr_ValueCalculate
 12106                           
 12107                           ;Dimmer_B1.c: 2179: } else {
 12108  09FF  0008               	return
 12109  0A00                     l606:	
 12110                           
 12111                           ;Dimmer_B1.c: 2180: DimmerIntr1.Dimming_RF = 0;
 12112  0A00  1320               	bcf	_DimmerIntr1^(0+128),6
 12113  0A01  0008               	return
 12114  0A02                     __end_of_DimmerLights_DimmingFunction:	
 12115                           
 12116                           	psect	text80
 12117  15F3                     __ptext80:	
 12118 ;; *************** function _DimmerIntr_ValueCalculate *****************
 12119 ;; Defined at:
 12120 ;;		line 2058 in file "../src/Dimmer_B1.c"
 12121 ;; Parameters:    Size  Location     Type
 12122 ;;  lights          1    wreg     unsigned char 
 12123 ;; Auto vars:     Size  Location     Type
 12124 ;;  lights          1    4[BANK0 ] unsigned char 
 12125 ;; Return value:  Size  Location     Type
 12126 ;;		None               void
 12127 ;; Registers used:
 12128 ;;		wreg, status,2, status,0, pclath, cstack
 12129 ;; Tracked objects:
 12130 ;;		On entry : 0/0
 12131 ;;		On exit  : 0/0
 12132 ;;		Unchanged: 0/0
 12133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12135 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12136 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12137 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12138 ;;Total ram usage:        3 bytes
 12139 ;; Hardware stack levels used:    1
 12140 ;; Hardware stack levels required when called:    5
 12141 ;; This function calls:
 12142 ;;		_Division
 12143 ;; This function is called by:
 12144 ;;		_setDimmerLights_OnOff
 12145 ;;		_DimmerLights_DimmingFunction
 12146 ;; This function uses a non-reentrant model
 12147 ;;
 12148                           
 12149                           
 12150                           ;psect for function _DimmerIntr_ValueCalculate
 12151  15F3                     _DimmerIntr_ValueCalculate:	
 12152                           
 12153                           ;incstack = 0
 12154                           ; Regs used in _DimmerIntr_ValueCalculate: [wreg+status,2+status,0+pclath+cstack]
 12155                           ;DimmerIntr_ValueCalculate@lights stored from wreg
 12156  15F3  0020               	movlb	0	; select bank0
 12157  15F4  00A4               	movwf	DimmerIntr_ValueCalculate@lights
 12158                           
 12159                           ;Dimmer_B1.c: 2060: if (lights == 1) {
 12160  15F5  0824               	movf	DimmerIntr_ValueCalculate@lights,w
 12161  15F6  3A01               	xorlw	1
 12162  15F7  1D03               	skipz
 12163  15F8  0008               	return
 12164                           
 12165                           ;Dimmer_B1.c: 2071: DimmerIntr1.TuneValue2 = Division(DimmerIntr1.DimmingValue, 2);
 12166  15F9  3002               	movlw	2
 12167  15FA  00A2               	movwf	??_DimmerIntr_ValueCalculate
 12168  15FB  0822               	movf	??_DimmerIntr_ValueCalculate,w
 12169  15FC  00F7               	movwf	Division@num
 12170  15FD  0021               	movlb	1	; select bank1
 12171  15FE  0825               	movf	(_DimmerIntr1^(0+128)+5),w
 12172  15FF  3193  2344         	fcall	_Division
 12173  1601  0020               	movlb	0	; select bank0
 12174  1602  00A3               	movwf	??_DimmerIntr_ValueCalculate+1
 12175  1603  0823               	movf	??_DimmerIntr_ValueCalculate+1,w
 12176  1604  0021               	movlb	1	; select bank1
 12177  1605  00A8               	movwf	(_DimmerIntr1^(0+128)+8)
 12178                           
 12179                           ;Dimmer_B1.c: 2072: DimmerIntr1.TuneValue3 = DimmerIntr1.TuneValue2 + (60 - DimmerIntr1.
      +                          DimmingValue);
 12180  1606  0325               	decf	(_DimmerIntr1^(0+128)+5),w
 12181  1607  3AFF               	xorlw	255
 12182  1608  0728               	addwf	(_DimmerIntr1^(0+128)+8),w
 12183  1609  3E3C               	addlw	60
 12184  160A  0020               	movlb	0	; select bank0
 12185  160B  00A2               	movwf	??_DimmerIntr_ValueCalculate
 12186  160C  0822               	movf	??_DimmerIntr_ValueCalculate,w
 12187  160D  0021               	movlb	1	; select bank1
 12188  160E  00A9               	movwf	(_DimmerIntr1^(0+128)+9)
 12189                           
 12190                           ;Dimmer_B1.c: 2073: DimmerIntr1.TuneValue4 = DimmerIntr1.TuneValue3 + DimmerIntr1.TuneVa
      +                          lue2;
 12191  160F  0829               	movf	(_DimmerIntr1^(0+128)+9),w
 12192  1610  0728               	addwf	(_DimmerIntr1^(0+128)+8),w
 12193  1611  0020               	movlb	0	; select bank0
 12194  1612  00A2               	movwf	??_DimmerIntr_ValueCalculate
 12195  1613  0822               	movf	??_DimmerIntr_ValueCalculate,w
 12196  1614  0021               	movlb	1	; select bank1
 12197  1615  00AA               	movwf	(_DimmerIntr1^(0+128)+10)
 12198                           
 12199                           ;Dimmer_B1.c: 2074: DimmerIntr1.TuneEnd = DimmerIntr1.TuneValue4 + 5;
 12200  1616  082A               	movf	(_DimmerIntr1^(0+128)+10),w
 12201  1617  3E05               	addlw	5
 12202  1618  0020               	movlb	0	; select bank0
 12203  1619  00A2               	movwf	??_DimmerIntr_ValueCalculate
 12204  161A  0822               	movf	??_DimmerIntr_ValueCalculate,w
 12205  161B  0021               	movlb	1	; select bank1
 12206  161C  00AB               	movwf	(_DimmerIntr1^(0+128)+11)
 12207                           
 12208                           ;Dimmer_B1.c: 2076: DimmerIntr1.Calculate = 1;
 12209  161D  17A1               	bsf	(_DimmerIntr1^(0+128)+1),7
 12210  161E  0008               	return
 12211  161F                     __end_of_DimmerIntr_ValueCalculate:	
 12212                           
 12213                           	psect	text81
 12214  11F5                     __ptext81:	
 12215 ;; *************** function _DimmerLights_Initialization *****************
 12216 ;; Defined at:
 12217 ;;		line 703 in file "../src/Dimmer_B1.c"
 12218 ;; Parameters:    Size  Location     Type
 12219 ;;		None
 12220 ;; Auto vars:     Size  Location     Type
 12221 ;;		None
 12222 ;; Return value:  Size  Location     Type
 12223 ;;		None               void
 12224 ;; Registers used:
 12225 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12226 ;; Tracked objects:
 12227 ;;		On entry : 0/0
 12228 ;;		On exit  : 0/0
 12229 ;;		Unchanged: 0/0
 12230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12235 ;;Total ram usage:        0 bytes
 12236 ;; Hardware stack levels used:    1
 12237 ;; Hardware stack levels required when called:    7
 12238 ;; This function calls:
 12239 ;;		_DimmerIntr_Initialization
 12240 ;;		_setDimmerLights_Initialization
 12241 ;; This function is called by:
 12242 ;;		_main
 12243 ;; This function uses a non-reentrant model
 12244 ;;
 12245                           
 12246                           
 12247                           ;psect for function _DimmerLights_Initialization
 12248  11F5                     _DimmerLights_Initialization:	
 12249                           
 12250                           ;Dimmer_B1.c: 705: setDimmerLights_Initialization(1);
 12251                           
 12252                           ;incstack = 0
 12253                           ; Regs used in _DimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 12254  11F5  3001               	movlw	1
 12255  11F6  3191  21BC  3191   	fcall	_setDimmerLights_Initialization
 12256                           
 12257                           ;Dimmer_B1.c: 715: DimmerIntr_Initialization();
 12258  11F9  318A  22AA         	fcall	_DimmerIntr_Initialization
 12259  11FB  0008               	return
 12260  11FC                     __end_of_DimmerLights_Initialization:	
 12261                           
 12262                           	psect	text82
 12263  11BC                     __ptext82:	
 12264 ;; *************** function _setDimmerLights_Initialization *****************
 12265 ;; Defined at:
 12266 ;;		line 719 in file "../src/Dimmer_B1.c"
 12267 ;; Parameters:    Size  Location     Type
 12268 ;;  lights          1    wreg     unsigned char 
 12269 ;; Auto vars:     Size  Location     Type
 12270 ;;  lights          1    0[COMMON] unsigned char 
 12271 ;; Return value:  Size  Location     Type
 12272 ;;		None               void
 12273 ;; Registers used:
 12274 ;;		wreg
 12275 ;; Tracked objects:
 12276 ;;		On entry : 0/0
 12277 ;;		On exit  : 0/0
 12278 ;;		Unchanged: 0/0
 12279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12284 ;;Total ram usage:        0 bytes
 12285 ;; Hardware stack levels used:    1
 12286 ;; Hardware stack levels required when called:    3
 12287 ;; This function calls:
 12288 ;;		Nothing
 12289 ;; This function is called by:
 12290 ;;		_DimmerLights_Initialization
 12291 ;; This function uses a non-reentrant model
 12292 ;;
 12293                           
 12294                           
 12295                           ;psect for function _setDimmerLights_Initialization
 12296  11BC                     _setDimmerLights_Initialization:	
 12297                           
 12298                           ;incstack = 0
 12299                           ; Regs used in _setDimmerLights_Initialization: [wreg]
 12300  11BC  0008               	return
 12301  11BD                     __end_of_setDimmerLights_Initialization:	
 12302                           
 12303                           	psect	text83
 12304  0AAA                     __ptext83:	
 12305 ;; *************** function _DimmerIntr_Initialization *****************
 12306 ;; Defined at:
 12307 ;;		line 7 in file "../src/Dimmer_B1.c"
 12308 ;; Parameters:    Size  Location     Type
 12309 ;;		None
 12310 ;; Auto vars:     Size  Location     Type
 12311 ;;		None
 12312 ;; Return value:  Size  Location     Type
 12313 ;;		None               void
 12314 ;; Registers used:
 12315 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12316 ;; Tracked objects:
 12317 ;;		On entry : 0/0
 12318 ;;		On exit  : 0/0
 12319 ;;		Unchanged: 0/0
 12320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12323 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12324 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12325 ;;Total ram usage:        2 bytes
 12326 ;; Hardware stack levels used:    1
 12327 ;; Hardware stack levels required when called:    6
 12328 ;; This function calls:
 12329 ;;		_Division
 12330 ;;		_getDimmerLights_PercentToValue
 12331 ;;		_getDimmerLights_ValueToPercent
 12332 ;;		_setMemory_Modify
 12333 ;; This function is called by:
 12334 ;;		_DimmerLights_Initialization
 12335 ;; This function uses a non-reentrant model
 12336 ;;
 12337                           
 12338                           
 12339                           ;psect for function _DimmerIntr_Initialization
 12340  0AAA                     _DimmerIntr_Initialization:	
 12341                           
 12342                           ;Dimmer_B1.c: 10: DimmerIntr1.TuneTimeValue = 3;
 12343                           
 12344                           ;incstack = 0
 12345                           ; Regs used in _DimmerIntr_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 12346  0AAA  3003               	movlw	3
 12347  0AAB  0020               	movlb	0	; select bank0
 12348  0AAC  00DA               	movwf	??_DimmerIntr_Initialization
 12349  0AAD  085A               	movf	??_DimmerIntr_Initialization,w
 12350  0AAE  0021               	movlb	1	; select bank1
 12351  0AAF  00A4               	movwf	(_DimmerIntr1^(0+128)+4)
 12352                           
 12353                           ;Dimmer_B1.c: 11: DimmerIntr1.MaxmumValue = ((char)(82*0.6));
 12354  0AB0  3031               	movlw	49
 12355  0AB1  0020               	movlb	0	; select bank0
 12356  0AB2  00DA               	movwf	??_DimmerIntr_Initialization
 12357  0AB3  085A               	movf	??_DimmerIntr_Initialization,w
 12358  0AB4  0021               	movlb	1	; select bank1
 12359  0AB5  00A6               	movwf	(_DimmerIntr1^(0+128)+6)
 12360                           
 12361                           ;Dimmer_B1.c: 12: DimmerIntr1.MinimumValue = ((char)(10*0.6));
 12362  0AB6  3006               	movlw	6
 12363  0AB7  0020               	movlb	0	; select bank0
 12364  0AB8  00DA               	movwf	??_DimmerIntr_Initialization
 12365  0AB9  085A               	movf	??_DimmerIntr_Initialization,w
 12366  0ABA  0021               	movlb	1	; select bank1
 12367  0ABB  00A7               	movwf	(_DimmerIntr1^(0+128)+7)
 12368                           
 12369                           ;Dimmer_B1.c: 13: DimmerIntr1.Tune = 0;
 12370  0ABC  10A0               	bcf	_DimmerIntr1^(0+128),1
 12371                           
 12372                           ;Dimmer_B1.c: 18: product->Data[21] = getDimmerLights_ValueToPercent(((char)(82*0.6)));
 12373  0ABD  3031               	movlw	49
 12374  0ABE  318C  248C  318A   	fcall	_getDimmerLights_ValueToPercent
 12375  0AC1  0020               	movlb	0	; select bank0
 12376  0AC2  00DA               	movwf	??_DimmerIntr_Initialization
 12377  0AC3  086D               	movf	_product,w
 12378  0AC4  3E15               	addlw	21
 12379  0AC5  0086               	movwf	6
 12380  0AC6  3001               	movlw	1	; select bank2/3
 12381  0AC7  0087               	movwf	7
 12382  0AC8  085A               	movf	??_DimmerIntr_Initialization,w
 12383  0AC9  0081               	movwf	1
 12384                           
 12385                           ;Dimmer_B1.c: 21: DimmerIntr1.DimmingValue = getDimmerLights_PercentToValue(product->Dat
      +                          a[21]);
 12386  0ACA  086D               	movf	_product,w
 12387  0ACB  3E15               	addlw	21
 12388  0ACC  0086               	movwf	6
 12389  0ACD  3001               	movlw	1	; select bank2/3
 12390  0ACE  0087               	movwf	7
 12391  0ACF  0801               	movf	1,w
 12392  0AD0  318C  2427  318A   	fcall	_getDimmerLights_PercentToValue
 12393  0AD3  0020               	movlb	0	; select bank0
 12394  0AD4  00DA               	movwf	??_DimmerIntr_Initialization
 12395  0AD5  085A               	movf	??_DimmerIntr_Initialization,w
 12396  0AD6  0021               	movlb	1	; select bank1
 12397  0AD7  00A5               	movwf	(_DimmerIntr1^(0+128)+5)
 12398                           
 12399                           ;Dimmer_B1.c: 38: DimmerIntr1.TuneValue2 = Division(((char)(82*0.6)), 2);
 12400  0AD8  3002               	movlw	2
 12401  0AD9  0020               	movlb	0	; select bank0
 12402  0ADA  00DA               	movwf	??_DimmerIntr_Initialization
 12403  0ADB  085A               	movf	??_DimmerIntr_Initialization,w
 12404  0ADC  00F7               	movwf	Division@num
 12405  0ADD  3031               	movlw	49
 12406  0ADE  3193  2344  318A   	fcall	_Division
 12407  0AE1  0020               	movlb	0	; select bank0
 12408  0AE2  00DB               	movwf	??_DimmerIntr_Initialization+1
 12409  0AE3  085B               	movf	??_DimmerIntr_Initialization+1,w
 12410  0AE4  0021               	movlb	1	; select bank1
 12411  0AE5  00A8               	movwf	(_DimmerIntr1^(0+128)+8)
 12412                           
 12413                           ;Dimmer_B1.c: 39: DimmerIntr1.TuneValue3 = DimmerIntr1.TuneValue2 + (60 - ((char)(82*0.6
      +                          )));
 12414  0AE6  0828               	movf	(_DimmerIntr1^(0+128)+8),w
 12415  0AE7  3E0B               	addlw	11
 12416  0AE8  0020               	movlb	0	; select bank0
 12417  0AE9  00DA               	movwf	??_DimmerIntr_Initialization
 12418  0AEA  085A               	movf	??_DimmerIntr_Initialization,w
 12419  0AEB  0021               	movlb	1	; select bank1
 12420  0AEC  00A9               	movwf	(_DimmerIntr1^(0+128)+9)
 12421                           
 12422                           ;Dimmer_B1.c: 40: DimmerIntr1.TuneValue4 = DimmerIntr1.TuneValue3 + DimmerIntr1.TuneValu
      +                          e2;
 12423  0AED  0829               	movf	(_DimmerIntr1^(0+128)+9),w
 12424  0AEE  0728               	addwf	(_DimmerIntr1^(0+128)+8),w
 12425  0AEF  0020               	movlb	0	; select bank0
 12426  0AF0  00DA               	movwf	??_DimmerIntr_Initialization
 12427  0AF1  085A               	movf	??_DimmerIntr_Initialization,w
 12428  0AF2  0021               	movlb	1	; select bank1
 12429  0AF3  00AA               	movwf	(_DimmerIntr1^(0+128)+10)
 12430                           
 12431                           ;Dimmer_B1.c: 41: DimmerIntr1.TuneEnd = DimmerIntr1.TuneValue4 + 1;
 12432  0AF4  082A               	movf	(_DimmerIntr1^(0+128)+10),w
 12433  0AF5  3E01               	addlw	1
 12434  0AF6  0020               	movlb	0	; select bank0
 12435  0AF7  00DA               	movwf	??_DimmerIntr_Initialization
 12436  0AF8  085A               	movf	??_DimmerIntr_Initialization,w
 12437  0AF9  0021               	movlb	1	; select bank1
 12438  0AFA  00AB               	movwf	(_DimmerIntr1^(0+128)+11)
 12439                           
 12440                           ;Dimmer_B1.c: 42: DimmerIntr1.Calculate = 1;
 12441  0AFB  17A1               	bsf	(_DimmerIntr1^(0+128)+1),7
 12442                           
 12443                           ;Dimmer_B1.c: 111: if (myMain.InitDimmer == 1) {
 12444  0AFC  1E3A               	btfss	(_myMain^(0+128)+10),4
 12445  0AFD  0008               	return
 12446                           
 12447                           ;Dimmer_B1.c: 112: myMain.InitDimmer = 0;
 12448  0AFE  123A               	bcf	(_myMain^(0+128)+10),4
 12449                           
 12450                           ;Dimmer_B1.c: 113: myMain.SaveDimmer = 1;
 12451  0AFF  16BA               	bsf	(_myMain^(0+128)+10),5
 12452                           
 12453                           ;Dimmer_B1.c: 114: setMemory_Modify(1);
 12454  0B00  3001               	movlw	1
 12455  0B01  3193  2371         	fcall	_setMemory_Modify
 12456  0B03  0008               	return
 12457  0B04                     __end_of_DimmerIntr_Initialization:	
 12458                           
 12459                           	psect	text84
 12460  1371                     __ptext84:	
 12461 ;; *************** function _setMemory_Modify *****************
 12462 ;; Defined at:
 12463 ;;		line 1088 in file "../src/MCU_B1.c"
 12464 ;; Parameters:    Size  Location     Type
 12465 ;;  command         1    wreg     unsigned char 
 12466 ;; Auto vars:     Size  Location     Type
 12467 ;;  command         1    3[COMMON] unsigned char 
 12468 ;; Return value:  Size  Location     Type
 12469 ;;		None               void
 12470 ;; Registers used:
 12471 ;;		wreg, status,2, status,0
 12472 ;; Tracked objects:
 12473 ;;		On entry : 0/0
 12474 ;;		On exit  : 0/0
 12475 ;;		Unchanged: 0/0
 12476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12478 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12479 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12480 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12481 ;;Total ram usage:        2 bytes
 12482 ;; Hardware stack levels used:    1
 12483 ;; Hardware stack levels required when called:    3
 12484 ;; This function calls:
 12485 ;;		Nothing
 12486 ;; This function is called by:
 12487 ;;		_DimmerIntr_Initialization
 12488 ;;		_DimmerLights_AssignationDimming
 12489 ;;		_setDimmerLights_Dimming
 12490 ;; This function uses a non-reentrant model
 12491 ;;
 12492                           
 12493                           
 12494                           ;psect for function _setMemory_Modify
 12495  1371                     _setMemory_Modify:	
 12496                           
 12497                           ;incstack = 0
 12498                           ; Regs used in _setMemory_Modify: [wreg+status,2+status,0]
 12499                           ;setMemory_Modify@command stored from wreg
 12500  1371  00F3               	movwf	setMemory_Modify@command
 12501                           
 12502                           ;MCU_B1.c: 1089: Memory.Modify = command == 1 ? 1 : 0;
 12503  1372  0873               	movf	setMemory_Modify@command,w
 12504  1373  3A01               	xorlw	1
 12505  1374  3000               	movlw	0
 12506  1375  1903               	skipnz
 12507  1376  3001               	movlw	1
 12508  1377  00F2               	movwf	??_setMemory_Modify
 12509  1378  0023               	movlb	3	; select bank3
 12510  1379  0844               	movf	(_Memory^(0+384)+36),w
 12511  137A  0672               	xorwf	??_setMemory_Modify,w
 12512  137B  39FE               	andlw	-2
 12513  137C  0672               	xorwf	??_setMemory_Modify,w
 12514  137D  00C4               	movwf	(_Memory^(0+384)+36)
 12515                           
 12516                           ;MCU_B1.c: 1090: Memory.Time = 0;
 12517  137E  01C2               	clrf	(_Memory^(0+384)+34)
 12518  137F  01C3               	clrf	((_Memory+1)^(0+384)+34)
 12519  1380  0008               	return
 12520  1381                     __end_of_setMemory_Modify:	
 12521                           
 12522                           	psect	text85
 12523  0C8C                     __ptext85:	
 12524 ;; *************** function _getDimmerLights_ValueToPercent *****************
 12525 ;; Defined at:
 12526 ;;		line 1315 in file "../src/Dimmer_B1.c"
 12527 ;; Parameters:    Size  Location     Type
 12528 ;;  value           1    wreg     unsigned char 
 12529 ;; Auto vars:     Size  Location     Type
 12530 ;;  value           1   54[BANK0 ] unsigned char 
 12531 ;;  i               3   55[BANK0 ] float 
 12532 ;; Return value:  Size  Location     Type
 12533 ;;                  1    wreg      unsigned char 
 12534 ;; Registers used:
 12535 ;;		wreg, status,2, status,0, pclath, cstack
 12536 ;; Tracked objects:
 12537 ;;		On entry : 0/0
 12538 ;;		On exit  : 0/0
 12539 ;;		Unchanged: 0/0
 12540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12542 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12543 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12544 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12545 ;;Total ram usage:        6 bytes
 12546 ;; Hardware stack levels used:    1
 12547 ;; Hardware stack levels required when called:    5
 12548 ;; This function calls:
 12549 ;;		___awtoft
 12550 ;;		___ftadd
 12551 ;;		___ftdiv
 12552 ;;		___ftneg
 12553 ;;		___fttol
 12554 ;; This function is called by:
 12555 ;;		_DimmerIntr_Initialization
 12556 ;;		_setDimmerLights_Dimming
 12557 ;; This function uses a non-reentrant model
 12558 ;;
 12559                           
 12560                           
 12561                           ;psect for function _getDimmerLights_ValueToPercent
 12562  0C8C                     _getDimmerLights_ValueToPercent:	
 12563                           
 12564                           ;incstack = 0
 12565                           ; Regs used in _getDimmerLights_ValueToPercent: [wreg+status,2+status,0+pclath+cstack]
 12566                           ;getDimmerLights_ValueToPercent@value stored from wreg
 12567  0C8C  0020               	movlb	0	; select bank0
 12568  0C8D  00D6               	movwf	getDimmerLights_ValueToPercent@value
 12569                           
 12570                           ;Dimmer_B1.c: 1323: float i = ((char)(82*0.6)) - ((char)(10*0.6));
 12571  0C8E  3000               	movlw	0
 12572  0C8F  00D7               	movwf	getDimmerLights_ValueToPercent@i
 12573  0C90  302C               	movlw	44
 12574  0C91  00D8               	movwf	getDimmerLights_ValueToPercent@i+1
 12575  0C92  3042               	movlw	66
 12576  0C93  00D9               	movwf	getDimmerLights_ValueToPercent@i+2
 12577                           
 12578                           ;Dimmer_B1.c: 1324: i /= 100;
 12579  0C94  3000               	movlw	0
 12580  0C95  00A6               	movwf	___ftdiv@f2
 12581  0C96  30C8               	movlw	200
 12582  0C97  00A7               	movwf	___ftdiv@f2+1
 12583  0C98  3042               	movlw	66
 12584  0C99  00A8               	movwf	___ftdiv@f2+2
 12585  0C9A  0857               	movf	getDimmerLights_ValueToPercent@i,w
 12586  0C9B  00A9               	movwf	___ftdiv@f1
 12587  0C9C  0858               	movf	getDimmerLights_ValueToPercent@i+1,w
 12588  0C9D  00AA               	movwf	___ftdiv@f1+1
 12589  0C9E  0859               	movf	getDimmerLights_ValueToPercent@i+2,w
 12590  0C9F  00AB               	movwf	___ftdiv@f1+2
 12591  0CA0  318F  2757  318C   	fcall	___ftdiv
 12592  0CA3  0020               	movlb	0	; select bank0
 12593  0CA4  0826               	movf	?___ftdiv,w
 12594  0CA5  00D7               	movwf	getDimmerLights_ValueToPercent@i
 12595  0CA6  0827               	movf	?___ftdiv+1,w
 12596  0CA7  00D8               	movwf	getDimmerLights_ValueToPercent@i+1
 12597  0CA8  0828               	movf	?___ftdiv+2,w
 12598  0CA9  00D9               	movwf	getDimmerLights_ValueToPercent@i+2
 12599                           
 12600                           ;Dimmer_B1.c: 1326: return (char) (100 - ((((char)(82*0.6)) - value) / i));
 12601  0CAA  0856               	movf	getDimmerLights_ValueToPercent@value,w
 12602  0CAB  00D4               	movwf	??_getDimmerLights_ValueToPercent
 12603  0CAC  01D5               	clrf	??_getDimmerLights_ValueToPercent+1
 12604  0CAD  09D4               	comf	??_getDimmerLights_ValueToPercent,f
 12605  0CAE  09D5               	comf	??_getDimmerLights_ValueToPercent+1,f
 12606  0CAF  0AD4               	incf	??_getDimmerLights_ValueToPercent,f
 12607  0CB0  1903               	skipnz
 12608  0CB1  0AD5               	incf	??_getDimmerLights_ValueToPercent+1,f
 12609  0CB2  0854               	movf	??_getDimmerLights_ValueToPercent,w
 12610  0CB3  3E31               	addlw	49
 12611  0CB4  00A0               	movwf	___awtoft@c
 12612  0CB5  3000               	movlw	0
 12613  0CB6  3D55               	addwfc	??_getDimmerLights_ValueToPercent+1,w
 12614  0CB7  00A1               	movwf	___awtoft@c+1
 12615  0CB8  3195  255C  318C   	fcall	___awtoft
 12616  0CBB  0020               	movlb	0	; select bank0
 12617  0CBC  0820               	movf	?___awtoft,w
 12618  0CBD  00A9               	movwf	___ftdiv@f1
 12619  0CBE  0821               	movf	?___awtoft+1,w
 12620  0CBF  00AA               	movwf	___ftdiv@f1+1
 12621  0CC0  0822               	movf	?___awtoft+2,w
 12622  0CC1  00AB               	movwf	___ftdiv@f1+2
 12623  0CC2  0857               	movf	getDimmerLights_ValueToPercent@i,w
 12624  0CC3  00A6               	movwf	___ftdiv@f2
 12625  0CC4  0858               	movf	getDimmerLights_ValueToPercent@i+1,w
 12626  0CC5  00A7               	movwf	___ftdiv@f2+1
 12627  0CC6  0859               	movf	getDimmerLights_ValueToPercent@i+2,w
 12628  0CC7  00A8               	movwf	___ftdiv@f2+2
 12629  0CC8  318F  2757  318C   	fcall	___ftdiv
 12630  0CCB  0020               	movlb	0	; select bank0
 12631  0CCC  0826               	movf	?___ftdiv,w
 12632  0CCD  00B6               	movwf	___ftneg@f1
 12633  0CCE  0827               	movf	?___ftdiv+1,w
 12634  0CCF  00B7               	movwf	___ftneg@f1+1
 12635  0CD0  0828               	movf	?___ftdiv+2,w
 12636  0CD1  00B8               	movwf	___ftneg@f1+2
 12637  0CD2  3192  2240  318C   	fcall	___ftneg
 12638  0CD5  0020               	movlb	0	; select bank0
 12639  0CD6  0836               	movf	?___ftneg,w
 12640  0CD7  00BC               	movwf	___ftadd@f2
 12641  0CD8  0837               	movf	?___ftneg+1,w
 12642  0CD9  00BD               	movwf	___ftadd@f2+1
 12643  0CDA  0838               	movf	?___ftneg+2,w
 12644  0CDB  00BE               	movwf	___ftadd@f2+2
 12645  0CDC  3000               	movlw	0
 12646  0CDD  00B9               	movwf	___ftadd@f1
 12647  0CDE  30C8               	movlw	200
 12648  0CDF  00BA               	movwf	___ftadd@f1+1
 12649  0CE0  3042               	movlw	66
 12650  0CE1  00BB               	movwf	___ftadd@f1+2
 12651  0CE2  3183  2346  318C   	fcall	___ftadd
 12652  0CE5  0020               	movlb	0	; select bank0
 12653  0CE6  0839               	movf	?___ftadd,w
 12654  0CE7  00C6               	movwf	___fttol@f1
 12655  0CE8  083A               	movf	?___ftadd+1,w
 12656  0CE9  00C7               	movwf	___fttol@f1+1
 12657  0CEA  083B               	movf	?___ftadd+2,w
 12658  0CEB  00C8               	movwf	___fttol@f1+2
 12659  0CEC  318E  2647         	fcall	___fttol
 12660  0CEE  0020               	movlb	0	; select bank0
 12661  0CEF  0846               	movf	?___fttol,w
 12662  0CF0  0008               	return
 12663  0CF1                     __end_of_getDimmerLights_ValueToPercent:	
 12664                           
 12665                           	psect	text86
 12666  0C27                     __ptext86:	
 12667 ;; *************** function _getDimmerLights_PercentToValue *****************
 12668 ;; Defined at:
 12669 ;;		line 1299 in file "../src/Dimmer_B1.c"
 12670 ;; Parameters:    Size  Location     Type
 12671 ;;  value           1    wreg     unsigned char 
 12672 ;; Auto vars:     Size  Location     Type
 12673 ;;  value           1   54[BANK0 ] unsigned char 
 12674 ;;  i               3   55[BANK0 ] float 
 12675 ;; Return value:  Size  Location     Type
 12676 ;;                  1    wreg      unsigned char 
 12677 ;; Registers used:
 12678 ;;		wreg, status,2, status,0, pclath, cstack
 12679 ;; Tracked objects:
 12680 ;;		On entry : 0/0
 12681 ;;		On exit  : 0/0
 12682 ;;		Unchanged: 0/0
 12683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12685 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12686 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12687 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12688 ;;Total ram usage:        6 bytes
 12689 ;; Hardware stack levels used:    1
 12690 ;; Hardware stack levels required when called:    5
 12691 ;; This function calls:
 12692 ;;		___awtoft
 12693 ;;		___ftadd
 12694 ;;		___ftdiv
 12695 ;;		___ftmul
 12696 ;;		___ftneg
 12697 ;;		___fttol
 12698 ;; This function is called by:
 12699 ;;		_DimmerIntr_Initialization
 12700 ;;		_DimmerLights_AssignationDimming
 12701 ;;		_setDimmerLights_OnOff
 12702 ;; This function uses a non-reentrant model
 12703 ;;
 12704                           
 12705                           
 12706                           ;psect for function _getDimmerLights_PercentToValue
 12707  0C27                     _getDimmerLights_PercentToValue:	
 12708                           
 12709                           ;incstack = 0
 12710                           ; Regs used in _getDimmerLights_PercentToValue: [wreg+status,2+status,0+pclath+cstack]
 12711                           ;getDimmerLights_PercentToValue@value stored from wreg
 12712  0C27  0020               	movlb	0	; select bank0
 12713  0C28  00D6               	movwf	getDimmerLights_PercentToValue@value
 12714                           
 12715                           ;Dimmer_B1.c: 1307: float i = ((char)(82*0.6)) - ((char)(10*0.6));
 12716  0C29  3000               	movlw	0
 12717  0C2A  00D7               	movwf	getDimmerLights_PercentToValue@i
 12718  0C2B  302C               	movlw	44
 12719  0C2C  00D8               	movwf	getDimmerLights_PercentToValue@i+1
 12720  0C2D  3042               	movlw	66
 12721  0C2E  00D9               	movwf	getDimmerLights_PercentToValue@i+2
 12722                           
 12723                           ;Dimmer_B1.c: 1308: i /= 100;
 12724  0C2F  3000               	movlw	0
 12725  0C30  00A6               	movwf	___ftdiv@f2
 12726  0C31  30C8               	movlw	200
 12727  0C32  00A7               	movwf	___ftdiv@f2+1
 12728  0C33  3042               	movlw	66
 12729  0C34  00A8               	movwf	___ftdiv@f2+2
 12730  0C35  0857               	movf	getDimmerLights_PercentToValue@i,w
 12731  0C36  00A9               	movwf	___ftdiv@f1
 12732  0C37  0858               	movf	getDimmerLights_PercentToValue@i+1,w
 12733  0C38  00AA               	movwf	___ftdiv@f1+1
 12734  0C39  0859               	movf	getDimmerLights_PercentToValue@i+2,w
 12735  0C3A  00AB               	movwf	___ftdiv@f1+2
 12736  0C3B  318F  2757  318C   	fcall	___ftdiv
 12737  0C3E  0020               	movlb	0	; select bank0
 12738  0C3F  0826               	movf	?___ftdiv,w
 12739  0C40  00D7               	movwf	getDimmerLights_PercentToValue@i
 12740  0C41  0827               	movf	?___ftdiv+1,w
 12741  0C42  00D8               	movwf	getDimmerLights_PercentToValue@i+1
 12742  0C43  0828               	movf	?___ftdiv+2,w
 12743  0C44  00D9               	movwf	getDimmerLights_PercentToValue@i+2
 12744                           
 12745                           ;Dimmer_B1.c: 1310: return (char) (((char)(82*0.6)) - ((100 - value) * i));
 12746  0C45  0856               	movf	getDimmerLights_PercentToValue@value,w
 12747  0C46  00D4               	movwf	??_getDimmerLights_PercentToValue
 12748  0C47  01D5               	clrf	??_getDimmerLights_PercentToValue+1
 12749  0C48  09D4               	comf	??_getDimmerLights_PercentToValue,f
 12750  0C49  09D5               	comf	??_getDimmerLights_PercentToValue+1,f
 12751  0C4A  0AD4               	incf	??_getDimmerLights_PercentToValue,f
 12752  0C4B  1903               	skipnz
 12753  0C4C  0AD5               	incf	??_getDimmerLights_PercentToValue+1,f
 12754  0C4D  0854               	movf	??_getDimmerLights_PercentToValue,w
 12755  0C4E  3E64               	addlw	100
 12756  0C4F  00A0               	movwf	___awtoft@c
 12757  0C50  3000               	movlw	0
 12758  0C51  3D55               	addwfc	??_getDimmerLights_PercentToValue+1,w
 12759  0C52  00A1               	movwf	___awtoft@c+1
 12760  0C53  3195  255C  318C   	fcall	___awtoft
 12761  0C56  0020               	movlb	0	; select bank0
 12762  0C57  0820               	movf	?___awtoft,w
 12763  0C58  00A9               	movwf	___ftmul@f2
 12764  0C59  0821               	movf	?___awtoft+1,w
 12765  0C5A  00AA               	movwf	___ftmul@f2+1
 12766  0C5B  0822               	movf	?___awtoft+2,w
 12767  0C5C  00AB               	movwf	___ftmul@f2+2
 12768  0C5D  0857               	movf	getDimmerLights_PercentToValue@i,w
 12769  0C5E  00A6               	movwf	___ftmul@f1
 12770  0C5F  0858               	movf	getDimmerLights_PercentToValue@i+1,w
 12771  0C60  00A7               	movwf	___ftmul@f1+1
 12772  0C61  0859               	movf	getDimmerLights_PercentToValue@i+2,w
 12773  0C62  00A8               	movwf	___ftmul@f1+2
 12774  0C63  3186  26A8  318C   	fcall	___ftmul
 12775  0C66  0020               	movlb	0	; select bank0
 12776  0C67  0826               	movf	?___ftmul,w
 12777  0C68  00B6               	movwf	___ftneg@f1
 12778  0C69  0827               	movf	?___ftmul+1,w
 12779  0C6A  00B7               	movwf	___ftneg@f1+1
 12780  0C6B  0828               	movf	?___ftmul+2,w
 12781  0C6C  00B8               	movwf	___ftneg@f1+2
 12782  0C6D  3192  2240  318C   	fcall	___ftneg
 12783  0C70  0020               	movlb	0	; select bank0
 12784  0C71  0836               	movf	?___ftneg,w
 12785  0C72  00BC               	movwf	___ftadd@f2
 12786  0C73  0837               	movf	?___ftneg+1,w
 12787  0C74  00BD               	movwf	___ftadd@f2+1
 12788  0C75  0838               	movf	?___ftneg+2,w
 12789  0C76  00BE               	movwf	___ftadd@f2+2
 12790  0C77  3000               	movlw	0
 12791  0C78  00B9               	movwf	___ftadd@f1
 12792  0C79  3044               	movlw	68
 12793  0C7A  00BA               	movwf	___ftadd@f1+1
 12794  0C7B  3042               	movlw	66
 12795  0C7C  00BB               	movwf	___ftadd@f1+2
 12796  0C7D  3183  2346  318C   	fcall	___ftadd
 12797  0C80  0020               	movlb	0	; select bank0
 12798  0C81  0839               	movf	?___ftadd,w
 12799  0C82  00C6               	movwf	___fttol@f1
 12800  0C83  083A               	movf	?___ftadd+1,w
 12801  0C84  00C7               	movwf	___fttol@f1+1
 12802  0C85  083B               	movf	?___ftadd+2,w
 12803  0C86  00C8               	movwf	___fttol@f1+2
 12804  0C87  318E  2647         	fcall	___fttol
 12805  0C89  0020               	movlb	0	; select bank0
 12806  0C8A  0846               	movf	?___fttol,w
 12807  0C8B  0008               	return
 12808  0C8C                     __end_of_getDimmerLights_PercentToValue:	
 12809                           
 12810                           	psect	text87
 12811  0E47                     __ptext87:	
 12812 ;; *************** function ___fttol *****************
 12813 ;; Defined at:
 12814 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
 12815 ;; Parameters:    Size  Location     Type
 12816 ;;  f1              3   38[BANK0 ] float 
 12817 ;; Auto vars:     Size  Location     Type
 12818 ;;  lval            4   47[BANK0 ] unsigned long 
 12819 ;;  exp1            1   51[BANK0 ] unsigned char 
 12820 ;;  sign1           1   46[BANK0 ] unsigned char 
 12821 ;; Return value:  Size  Location     Type
 12822 ;;                  4   38[BANK0 ] long 
 12823 ;; Registers used:
 12824 ;;		wreg, status,2, status,0
 12825 ;; Tracked objects:
 12826 ;;		On entry : 0/0
 12827 ;;		On exit  : 0/0
 12828 ;;		Unchanged: 0/0
 12829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12830 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12831 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12832 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12833 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12834 ;;Total ram usage:       14 bytes
 12835 ;; Hardware stack levels used:    1
 12836 ;; Hardware stack levels required when called:    3
 12837 ;; This function calls:
 12838 ;;		Nothing
 12839 ;; This function is called by:
 12840 ;;		_getDimmerLights_PercentToValue
 12841 ;;		_getDimmerLights_ValueToPercent
 12842 ;; This function uses a non-reentrant model
 12843 ;;
 12844                           
 12845                           
 12846                           ;psect for function ___fttol
 12847  0E47                     ___fttol:	
 12848                           
 12849                           ;incstack = 0
 12850                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 12851  0E47  0020               	movlb	0	; select bank0
 12852  0E48  0846               	movf	___fttol@f1,w
 12853  0E49  00CA               	movwf	??___fttol
 12854  0E4A  0847               	movf	___fttol@f1+1,w
 12855  0E4B  00CB               	movwf	??___fttol+1
 12856  0E4C  0848               	movf	___fttol@f1+2,w
 12857  0E4D  00CC               	movwf	??___fttol+2
 12858  0E4E  1003               	clrc
 12859  0E4F  0D4B               	rlf	??___fttol+1,w
 12860  0E50  0D4C               	rlf	??___fttol+2,w
 12861  0E51  00CD               	movwf	??___fttol+3
 12862  0E52  084D               	movf	??___fttol+3,w
 12863  0E53  00D3               	movwf	___fttol@exp1
 12864  0E54  08D3               	movf	___fttol@exp1,f
 12865  0E55  1D03               	skipz
 12866  0E56  2E60               	goto	l4730
 12867  0E57  3000               	movlw	0
 12868  0E58  00C9               	movwf	?___fttol+3
 12869  0E59  3000               	movlw	0
 12870  0E5A  00C8               	movwf	?___fttol+2
 12871  0E5B  3000               	movlw	0
 12872  0E5C  00C7               	movwf	?___fttol+1
 12873  0E5D  3000               	movlw	0
 12874  0E5E  00C6               	movwf	?___fttol
 12875  0E5F  0008               	return
 12876  0E60                     l4730:	
 12877  0E60  0846               	movf	___fttol@f1,w
 12878  0E61  00CA               	movwf	??___fttol
 12879  0E62  0847               	movf	___fttol@f1+1,w
 12880  0E63  00CB               	movwf	??___fttol+1
 12881  0E64  0848               	movf	___fttol@f1+2,w
 12882  0E65  00CC               	movwf	??___fttol+2
 12883  0E66  3017               	movlw	23
 12884  0E67                     u4355:	
 12885  0E67  36CC               	lsrf	??___fttol+2,f
 12886  0E68  0CCB               	rrf	??___fttol+1,f
 12887  0E69  0CCA               	rrf	??___fttol,f
 12888  0E6A  0B89               	decfsz	9,f
 12889  0E6B  2E67               	goto	u4355
 12890  0E6C  084A               	movf	??___fttol,w
 12891  0E6D  00CD               	movwf	??___fttol+3
 12892  0E6E  084D               	movf	??___fttol+3,w
 12893  0E6F  00CE               	movwf	___fttol@sign1
 12894  0E70  17C7               	bsf	___fttol@f1+1,7
 12895  0E71  30FF               	movlw	255
 12896  0E72  05C6               	andwf	___fttol@f1,f
 12897  0E73  30FF               	movlw	255
 12898  0E74  05C7               	andwf	___fttol@f1+1,f
 12899  0E75  3000               	movlw	0
 12900  0E76  05C8               	andwf	___fttol@f1+2,f
 12901  0E77  0846               	movf	___fttol@f1,w
 12902  0E78  00CF               	movwf	___fttol@lval
 12903  0E79  0847               	movf	___fttol@f1+1,w
 12904  0E7A  00D0               	movwf	___fttol@lval+1
 12905  0E7B  0848               	movf	___fttol@f1+2,w
 12906  0E7C  00D1               	movwf	___fttol@lval+2
 12907  0E7D  01D2               	clrf	___fttol@lval+3
 12908  0E7E  308E               	movlw	142
 12909  0E7F  02D3               	subwf	___fttol@exp1,f
 12910  0E80  1FD3               	btfss	___fttol@exp1,7
 12911  0E81  2E9E               	goto	l4750
 12912  0E82  0853               	movf	___fttol@exp1,w
 12913  0E83  3A80               	xorlw	128
 12914  0E84  3E8F               	addlw	143
 12915  0E85  1803               	skipnc
 12916  0E86  2E90               	goto	l4748
 12917  0E87  3000               	movlw	0
 12918  0E88  00C9               	movwf	?___fttol+3
 12919  0E89  3000               	movlw	0
 12920  0E8A  00C8               	movwf	?___fttol+2
 12921  0E8B  3000               	movlw	0
 12922  0E8C  00C7               	movwf	?___fttol+1
 12923  0E8D  3000               	movlw	0
 12924  0E8E  00C6               	movwf	?___fttol
 12925  0E8F  0008               	return
 12926  0E90                     l4748:	
 12927  0E90  3001               	movlw	1
 12928  0E91                     u4385:	
 12929  0E91  36D2               	lsrf	___fttol@lval+3,f
 12930  0E92  0CD1               	rrf	___fttol@lval+2,f
 12931  0E93  0CD0               	rrf	___fttol@lval+1,f
 12932  0E94  0CCF               	rrf	___fttol@lval,f
 12933  0E95  0B89               	decfsz	9,f
 12934  0E96  2E91               	goto	u4385
 12935  0E97  3001               	movlw	1
 12936  0E98  00CA               	movwf	??___fttol
 12937  0E99  084A               	movf	??___fttol,w
 12938  0E9A  07D3               	addwf	___fttol@exp1,f
 12939  0E9B  1903               	btfsc	3,2
 12940  0E9C  2EB7               	goto	l4760
 12941  0E9D  2E90               	goto	l4748
 12942  0E9E                     l4750:	
 12943  0E9E  3018               	movlw	24
 12944  0E9F  0253               	subwf	___fttol@exp1,w
 12945  0EA0  1C03               	skipc
 12946  0EA1  2EB4               	goto	l4758
 12947  0EA2  3000               	movlw	0
 12948  0EA3  00C9               	movwf	?___fttol+3
 12949  0EA4  3000               	movlw	0
 12950  0EA5  00C8               	movwf	?___fttol+2
 12951  0EA6  3000               	movlw	0
 12952  0EA7  00C7               	movwf	?___fttol+1
 12953  0EA8  3000               	movlw	0
 12954  0EA9  00C6               	movwf	?___fttol
 12955  0EAA  0008               	return
 12956  0EAB                     l4756:	
 12957  0EAB  3001               	movlw	1
 12958  0EAC                     u4415:	
 12959  0EAC  35CF               	lslf	___fttol@lval,f
 12960  0EAD  0DD0               	rlf	___fttol@lval+1,f
 12961  0EAE  0DD1               	rlf	___fttol@lval+2,f
 12962  0EAF  0DD2               	rlf	___fttol@lval+3,f
 12963  0EB0  0B89               	decfsz	9,f
 12964  0EB1  2EAC               	goto	u4415
 12965  0EB2  3001               	movlw	1
 12966  0EB3  02D3               	subwf	___fttol@exp1,f
 12967  0EB4                     l4758:	
 12968  0EB4  08D3               	movf	___fttol@exp1,f
 12969  0EB5  1D03               	skipz
 12970  0EB6  2EAB               	goto	l4756
 12971  0EB7                     l4760:	
 12972  0EB7  084E               	movf	___fttol@sign1,w
 12973  0EB8  1903               	btfsc	3,2
 12974  0EB9  2EC5               	goto	l4764
 12975  0EBA  09CF               	comf	___fttol@lval,f
 12976  0EBB  09D0               	comf	___fttol@lval+1,f
 12977  0EBC  09D1               	comf	___fttol@lval+2,f
 12978  0EBD  09D2               	comf	___fttol@lval+3,f
 12979  0EBE  0ACF               	incf	___fttol@lval,f
 12980  0EBF  1903               	skipnz
 12981  0EC0  0AD0               	incf	___fttol@lval+1,f
 12982  0EC1  1903               	skipnz
 12983  0EC2  0AD1               	incf	___fttol@lval+2,f
 12984  0EC3  1903               	skipnz
 12985  0EC4  0AD2               	incf	___fttol@lval+3,f
 12986  0EC5                     l4764:	
 12987  0EC5  0852               	movf	___fttol@lval+3,w
 12988  0EC6  00C9               	movwf	?___fttol+3
 12989  0EC7  0851               	movf	___fttol@lval+2,w
 12990  0EC8  00C8               	movwf	?___fttol+2
 12991  0EC9  0850               	movf	___fttol@lval+1,w
 12992  0ECA  00C7               	movwf	?___fttol+1
 12993  0ECB  084F               	movf	___fttol@lval,w
 12994  0ECC  00C6               	movwf	?___fttol
 12995  0ECD  0008               	return
 12996  0ECE                     __end_of___fttol:	
 12997                           
 12998                           	psect	text88
 12999  1240                     __ptext88:	
 13000 ;; *************** function ___ftneg *****************
 13001 ;; Defined at:
 13002 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftneg.c"
 13003 ;; Parameters:    Size  Location     Type
 13004 ;;  f1              3   22[BANK0 ] float 
 13005 ;; Auto vars:     Size  Location     Type
 13006 ;;		None
 13007 ;; Return value:  Size  Location     Type
 13008 ;;                  3   22[BANK0 ] float 
 13009 ;; Registers used:
 13010 ;;		wreg
 13011 ;; Tracked objects:
 13012 ;;		On entry : 0/0
 13013 ;;		On exit  : 0/0
 13014 ;;		Unchanged: 0/0
 13015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13016 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13019 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13020 ;;Total ram usage:        3 bytes
 13021 ;; Hardware stack levels used:    1
 13022 ;; Hardware stack levels required when called:    3
 13023 ;; This function calls:
 13024 ;;		Nothing
 13025 ;; This function is called by:
 13026 ;;		_getDimmerLights_PercentToValue
 13027 ;;		_getDimmerLights_ValueToPercent
 13028 ;; This function uses a non-reentrant model
 13029 ;;
 13030                           
 13031                           
 13032                           ;psect for function ___ftneg
 13033  1240                     ___ftneg:	
 13034                           
 13035                           ;incstack = 0
 13036                           ; Regs used in ___ftneg: [wreg]
 13037  1240  0020               	movlb	0	; select bank0
 13038  1241  0838               	movf	___ftneg@f1+2,w
 13039  1242  0437               	iorwf	___ftneg@f1+1,w
 13040  1243  0436               	iorwf	___ftneg@f1,w
 13041  1244  1903               	skipnz
 13042  1245  0008               	return
 13043  1246  3080               	movlw	128
 13044  1247  06B8               	xorwf	___ftneg@f1+2,f
 13045  1248  0008               	return
 13046  1249                     __end_of___ftneg:	
 13047                           
 13048                           	psect	text89
 13049  06A8                     __ptext89:	
 13050 ;; *************** function ___ftmul *****************
 13051 ;; Defined at:
 13052 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftmul.c"
 13053 ;; Parameters:    Size  Location     Type
 13054 ;;  f1              3    6[BANK0 ] float 
 13055 ;;  f2              3    9[BANK0 ] float 
 13056 ;; Auto vars:     Size  Location     Type
 13057 ;;  f3_as_produc    3   17[BANK0 ] unsigned um
 13058 ;;  sign            1   21[BANK0 ] unsigned char 
 13059 ;;  cntr            1   20[BANK0 ] unsigned char 
 13060 ;;  exp             1   16[BANK0 ] unsigned char 
 13061 ;; Return value:  Size  Location     Type
 13062 ;;                  3    6[BANK0 ] float 
 13063 ;; Registers used:
 13064 ;;		wreg, status,2, status,0, pclath, cstack
 13065 ;; Tracked objects:
 13066 ;;		On entry : 0/0
 13067 ;;		On exit  : 0/0
 13068 ;;		Unchanged: 0/0
 13069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13070 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13071 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13072 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13073 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13074 ;;Total ram usage:       16 bytes
 13075 ;; Hardware stack levels used:    1
 13076 ;; Hardware stack levels required when called:    4
 13077 ;; This function calls:
 13078 ;;		___ftpack
 13079 ;; This function is called by:
 13080 ;;		_getDimmerLights_PercentToValue
 13081 ;; This function uses a non-reentrant model
 13082 ;;
 13083                           
 13084                           
 13085                           ;psect for function ___ftmul
 13086  06A8                     ___ftmul:	
 13087                           
 13088                           ;incstack = 0
 13089                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 13090  06A8  0020               	movlb	0	; select bank0
 13091  06A9  0826               	movf	___ftmul@f1,w
 13092  06AA  00AC               	movwf	??___ftmul
 13093  06AB  0827               	movf	___ftmul@f1+1,w
 13094  06AC  00AD               	movwf	??___ftmul+1
 13095  06AD  0828               	movf	___ftmul@f1+2,w
 13096  06AE  00AE               	movwf	??___ftmul+2
 13097  06AF  1003               	clrc
 13098  06B0  0D2D               	rlf	??___ftmul+1,w
 13099  06B1  0D2E               	rlf	??___ftmul+2,w
 13100  06B2  00AF               	movwf	??___ftmul+3
 13101  06B3  082F               	movf	??___ftmul+3,w
 13102  06B4  00B0               	movwf	___ftmul@exp
 13103  06B5  08B0               	movf	___ftmul@exp,f
 13104  06B6  1D03               	skipz
 13105  06B7  2EBF               	goto	l4672
 13106  06B8  3000               	movlw	0
 13107  06B9  00A6               	movwf	?___ftmul
 13108  06BA  3000               	movlw	0
 13109  06BB  00A7               	movwf	?___ftmul+1
 13110  06BC  3000               	movlw	0
 13111  06BD  00A8               	movwf	?___ftmul+2
 13112  06BE  0008               	return
 13113  06BF                     l4672:	
 13114  06BF  0829               	movf	___ftmul@f2,w
 13115  06C0  00AC               	movwf	??___ftmul
 13116  06C1  082A               	movf	___ftmul@f2+1,w
 13117  06C2  00AD               	movwf	??___ftmul+1
 13118  06C3  082B               	movf	___ftmul@f2+2,w
 13119  06C4  00AE               	movwf	??___ftmul+2
 13120  06C5  1003               	clrc
 13121  06C6  0D2D               	rlf	??___ftmul+1,w
 13122  06C7  0D2E               	rlf	??___ftmul+2,w
 13123  06C8  00AF               	movwf	??___ftmul+3
 13124  06C9  082F               	movf	??___ftmul+3,w
 13125  06CA  00B5               	movwf	___ftmul@sign
 13126  06CB  08B5               	movf	___ftmul@sign,f
 13127  06CC  1D03               	skipz
 13128  06CD  2ED5               	goto	l4678
 13129  06CE  3000               	movlw	0
 13130  06CF  00A6               	movwf	?___ftmul
 13131  06D0  3000               	movlw	0
 13132  06D1  00A7               	movwf	?___ftmul+1
 13133  06D2  3000               	movlw	0
 13134  06D3  00A8               	movwf	?___ftmul+2
 13135  06D4  0008               	return
 13136  06D5                     l4678:	
 13137  06D5  0835               	movf	___ftmul@sign,w
 13138  06D6  3E7B               	addlw	123
 13139  06D7  00AC               	movwf	??___ftmul
 13140  06D8  082C               	movf	??___ftmul,w
 13141  06D9  07B0               	addwf	___ftmul@exp,f
 13142  06DA  0826               	movf	___ftmul@f1,w
 13143  06DB  00AC               	movwf	??___ftmul
 13144  06DC  0827               	movf	___ftmul@f1+1,w
 13145  06DD  00AD               	movwf	??___ftmul+1
 13146  06DE  0828               	movf	___ftmul@f1+2,w
 13147  06DF  00AE               	movwf	??___ftmul+2
 13148  06E0  3010               	movlw	16
 13149  06E1                     u4235:	
 13150  06E1  36AE               	lsrf	??___ftmul+2,f
 13151  06E2  0CAD               	rrf	??___ftmul+1,f
 13152  06E3  0CAC               	rrf	??___ftmul,f
 13153  06E4  0B89               	decfsz	9,f
 13154  06E5  2EE1               	goto	u4235
 13155  06E6  082C               	movf	??___ftmul,w
 13156  06E7  00AF               	movwf	??___ftmul+3
 13157  06E8  082F               	movf	??___ftmul+3,w
 13158  06E9  00B5               	movwf	___ftmul@sign
 13159  06EA  0829               	movf	___ftmul@f2,w
 13160  06EB  00AC               	movwf	??___ftmul
 13161  06EC  082A               	movf	___ftmul@f2+1,w
 13162  06ED  00AD               	movwf	??___ftmul+1
 13163  06EE  082B               	movf	___ftmul@f2+2,w
 13164  06EF  00AE               	movwf	??___ftmul+2
 13165  06F0  3010               	movlw	16
 13166  06F1                     u4245:	
 13167  06F1  36AE               	lsrf	??___ftmul+2,f
 13168  06F2  0CAD               	rrf	??___ftmul+1,f
 13169  06F3  0CAC               	rrf	??___ftmul,f
 13170  06F4  0B89               	decfsz	9,f
 13171  06F5  2EF1               	goto	u4245
 13172  06F6  082C               	movf	??___ftmul,w
 13173  06F7  00AF               	movwf	??___ftmul+3
 13174  06F8  082F               	movf	??___ftmul+3,w
 13175  06F9  06B5               	xorwf	___ftmul@sign,f
 13176  06FA  3080               	movlw	128
 13177  06FB  00AC               	movwf	??___ftmul
 13178  06FC  082C               	movf	??___ftmul,w
 13179  06FD  05B5               	andwf	___ftmul@sign,f
 13180  06FE  17A7               	bsf	___ftmul@f1+1,7
 13181  06FF  17AA               	bsf	___ftmul@f2+1,7
 13182  0700  30FF               	movlw	255
 13183  0701  05A9               	andwf	___ftmul@f2,f
 13184  0702  30FF               	movlw	255
 13185  0703  05AA               	andwf	___ftmul@f2+1,f
 13186  0704  3000               	movlw	0
 13187  0705  05AB               	andwf	___ftmul@f2+2,f
 13188  0706  3000               	movlw	0
 13189  0707  00B1               	movwf	___ftmul@f3_as_product
 13190  0708  3000               	movlw	0
 13191  0709  00B2               	movwf	___ftmul@f3_as_product+1
 13192  070A  3000               	movlw	0
 13193  070B  00B3               	movwf	___ftmul@f3_as_product+2
 13194  070C  3007               	movlw	7
 13195  070D  00AC               	movwf	??___ftmul
 13196  070E  082C               	movf	??___ftmul,w
 13197  070F  00B4               	movwf	___ftmul@cntr
 13198  0710                     l4690:	
 13199  0710  1C26               	btfss	___ftmul@f1,0
 13200  0711  2F18               	goto	l4694
 13201  0712  0829               	movf	___ftmul@f2,w
 13202  0713  07B1               	addwf	___ftmul@f3_as_product,f
 13203  0714  082A               	movf	___ftmul@f2+1,w
 13204  0715  3DB2               	addwfc	___ftmul@f3_as_product+1,f
 13205  0716  082B               	movf	___ftmul@f2+2,w
 13206  0717  3DB3               	addwfc	___ftmul@f3_as_product+2,f
 13207  0718                     l4694:	
 13208  0718  3001               	movlw	1
 13209  0719                     u4265:	
 13210  0719  36A8               	lsrf	___ftmul@f1+2,f
 13211  071A  0CA7               	rrf	___ftmul@f1+1,f
 13212  071B  0CA6               	rrf	___ftmul@f1,f
 13213  071C  0B89               	decfsz	9,f
 13214  071D  2F19               	goto	u4265
 13215  071E  3001               	movlw	1
 13216  071F                     u4275:	
 13217  071F  35A9               	lslf	___ftmul@f2,f
 13218  0720  0DAA               	rlf	___ftmul@f2+1,f
 13219  0721  0DAB               	rlf	___ftmul@f2+2,f
 13220  0722  0B89               	decfsz	9,f
 13221  0723  2F1F               	goto	u4275
 13222  0724  3001               	movlw	1
 13223  0725  02B4               	subwf	___ftmul@cntr,f
 13224  0726  1D03               	btfss	3,2
 13225  0727  2F10               	goto	l4690
 13226  0728  3009               	movlw	9
 13227  0729  00AC               	movwf	??___ftmul
 13228  072A  082C               	movf	??___ftmul,w
 13229  072B  00B4               	movwf	___ftmul@cntr
 13230  072C                     l4702:	
 13231  072C  1C26               	btfss	___ftmul@f1,0
 13232  072D  2F34               	goto	l4706
 13233  072E  0829               	movf	___ftmul@f2,w
 13234  072F  07B1               	addwf	___ftmul@f3_as_product,f
 13235  0730  082A               	movf	___ftmul@f2+1,w
 13236  0731  3DB2               	addwfc	___ftmul@f3_as_product+1,f
 13237  0732  082B               	movf	___ftmul@f2+2,w
 13238  0733  3DB3               	addwfc	___ftmul@f3_as_product+2,f
 13239  0734                     l4706:	
 13240  0734  3001               	movlw	1
 13241  0735                     u4305:	
 13242  0735  36A8               	lsrf	___ftmul@f1+2,f
 13243  0736  0CA7               	rrf	___ftmul@f1+1,f
 13244  0737  0CA6               	rrf	___ftmul@f1,f
 13245  0738  0B89               	decfsz	9,f
 13246  0739  2F35               	goto	u4305
 13247  073A  3001               	movlw	1
 13248  073B                     u4315:	
 13249  073B  36B3               	lsrf	___ftmul@f3_as_product+2,f
 13250  073C  0CB2               	rrf	___ftmul@f3_as_product+1,f
 13251  073D  0CB1               	rrf	___ftmul@f3_as_product,f
 13252  073E  0B89               	decfsz	9,f
 13253  073F  2F3B               	goto	u4315
 13254  0740  3001               	movlw	1
 13255  0741  02B4               	subwf	___ftmul@cntr,f
 13256  0742  1D03               	btfss	3,2
 13257  0743  2F2C               	goto	l4702
 13258  0744  0831               	movf	___ftmul@f3_as_product,w
 13259  0745  00F2               	movwf	___ftpack@arg
 13260  0746  0832               	movf	___ftmul@f3_as_product+1,w
 13261  0747  00F3               	movwf	___ftpack@arg+1
 13262  0748  0833               	movf	___ftmul@f3_as_product+2,w
 13263  0749  00F4               	movwf	___ftpack@arg+2
 13264  074A  0830               	movf	___ftmul@exp,w
 13265  074B  00AC               	movwf	??___ftmul
 13266  074C  082C               	movf	??___ftmul,w
 13267  074D  00F5               	movwf	___ftpack@exp
 13268  074E  0835               	movf	___ftmul@sign,w
 13269  074F  00AD               	movwf	??___ftmul+1
 13270  0750  082D               	movf	??___ftmul+1,w
 13271  0751  00F6               	movwf	___ftpack@sign
 13272  0752  318B  2363         	fcall	___ftpack
 13273  0754  0872               	movf	?___ftpack,w
 13274  0755  0020               	movlb	0	; select bank0
 13275  0756  00A6               	movwf	?___ftmul
 13276  0757  0873               	movf	?___ftpack+1,w
 13277  0758  00A7               	movwf	?___ftmul+1
 13278  0759  0874               	movf	?___ftpack+2,w
 13279  075A  00A8               	movwf	?___ftmul+2
 13280  075B  0008               	return
 13281  075C                     __end_of___ftmul:	
 13282                           
 13283                           	psect	text90
 13284  0F57                     __ptext90:	
 13285 ;; *************** function ___ftdiv *****************
 13286 ;; Defined at:
 13287 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
 13288 ;; Parameters:    Size  Location     Type
 13289 ;;  f2              3    6[BANK0 ] float 
 13290 ;;  f1              3    9[BANK0 ] float 
 13291 ;; Auto vars:     Size  Location     Type
 13292 ;;  f3              3   17[BANK0 ] float 
 13293 ;;  sign            1   21[BANK0 ] unsigned char 
 13294 ;;  exp             1   20[BANK0 ] unsigned char 
 13295 ;;  cntr            1   16[BANK0 ] unsigned char 
 13296 ;; Return value:  Size  Location     Type
 13297 ;;                  3    6[BANK0 ] float 
 13298 ;; Registers used:
 13299 ;;		wreg, status,2, status,0, pclath, cstack
 13300 ;; Tracked objects:
 13301 ;;		On entry : 0/0
 13302 ;;		On exit  : 0/0
 13303 ;;		Unchanged: 0/0
 13304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13305 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13306 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13307 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13308 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13309 ;;Total ram usage:       16 bytes
 13310 ;; Hardware stack levels used:    1
 13311 ;; Hardware stack levels required when called:    4
 13312 ;; This function calls:
 13313 ;;		___ftpack
 13314 ;; This function is called by:
 13315 ;;		_getDimmerLights_PercentToValue
 13316 ;;		_getDimmerLights_ValueToPercent
 13317 ;; This function uses a non-reentrant model
 13318 ;;
 13319                           
 13320                           
 13321                           ;psect for function ___ftdiv
 13322  0F57                     ___ftdiv:	
 13323                           
 13324                           ;incstack = 0
 13325                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 13326  0F57  0020               	movlb	0	; select bank0
 13327  0F58  0829               	movf	___ftdiv@f1,w
 13328  0F59  00AC               	movwf	??___ftdiv
 13329  0F5A  082A               	movf	___ftdiv@f1+1,w
 13330  0F5B  00AD               	movwf	??___ftdiv+1
 13331  0F5C  082B               	movf	___ftdiv@f1+2,w
 13332  0F5D  00AE               	movwf	??___ftdiv+2
 13333  0F5E  1003               	clrc
 13334  0F5F  0D2D               	rlf	??___ftdiv+1,w
 13335  0F60  0D2E               	rlf	??___ftdiv+2,w
 13336  0F61  00AF               	movwf	??___ftdiv+3
 13337  0F62  082F               	movf	??___ftdiv+3,w
 13338  0F63  00B4               	movwf	___ftdiv@exp
 13339  0F64  08B4               	movf	___ftdiv@exp,f
 13340  0F65  1D03               	skipz
 13341  0F66  2F6E               	goto	l4630
 13342  0F67  3000               	movlw	0
 13343  0F68  00A6               	movwf	?___ftdiv
 13344  0F69  3000               	movlw	0
 13345  0F6A  00A7               	movwf	?___ftdiv+1
 13346  0F6B  3000               	movlw	0
 13347  0F6C  00A8               	movwf	?___ftdiv+2
 13348  0F6D  0008               	return
 13349  0F6E                     l4630:	
 13350  0F6E  0826               	movf	___ftdiv@f2,w
 13351  0F6F  00AC               	movwf	??___ftdiv
 13352  0F70  0827               	movf	___ftdiv@f2+1,w
 13353  0F71  00AD               	movwf	??___ftdiv+1
 13354  0F72  0828               	movf	___ftdiv@f2+2,w
 13355  0F73  00AE               	movwf	??___ftdiv+2
 13356  0F74  1003               	clrc
 13357  0F75  0D2D               	rlf	??___ftdiv+1,w
 13358  0F76  0D2E               	rlf	??___ftdiv+2,w
 13359  0F77  00AF               	movwf	??___ftdiv+3
 13360  0F78  082F               	movf	??___ftdiv+3,w
 13361  0F79  00B5               	movwf	___ftdiv@sign
 13362  0F7A  08B5               	movf	___ftdiv@sign,f
 13363  0F7B  1D03               	skipz
 13364  0F7C  2F84               	goto	l4636
 13365  0F7D  3000               	movlw	0
 13366  0F7E  00A6               	movwf	?___ftdiv
 13367  0F7F  3000               	movlw	0
 13368  0F80  00A7               	movwf	?___ftdiv+1
 13369  0F81  3000               	movlw	0
 13370  0F82  00A8               	movwf	?___ftdiv+2
 13371  0F83  0008               	return
 13372  0F84                     l4636:	
 13373  0F84  3000               	movlw	0
 13374  0F85  00B1               	movwf	___ftdiv@f3
 13375  0F86  3000               	movlw	0
 13376  0F87  00B2               	movwf	___ftdiv@f3+1
 13377  0F88  3000               	movlw	0
 13378  0F89  00B3               	movwf	___ftdiv@f3+2
 13379  0F8A  3089               	movlw	137
 13380  0F8B  0735               	addwf	___ftdiv@sign,w
 13381  0F8C  00AC               	movwf	??___ftdiv
 13382  0F8D  082C               	movf	??___ftdiv,w
 13383  0F8E  02B4               	subwf	___ftdiv@exp,f
 13384  0F8F  0829               	movf	___ftdiv@f1,w
 13385  0F90  00AC               	movwf	??___ftdiv
 13386  0F91  082A               	movf	___ftdiv@f1+1,w
 13387  0F92  00AD               	movwf	??___ftdiv+1
 13388  0F93  082B               	movf	___ftdiv@f1+2,w
 13389  0F94  00AE               	movwf	??___ftdiv+2
 13390  0F95  3010               	movlw	16
 13391  0F96                     u4155:	
 13392  0F96  36AE               	lsrf	??___ftdiv+2,f
 13393  0F97  0CAD               	rrf	??___ftdiv+1,f
 13394  0F98  0CAC               	rrf	??___ftdiv,f
 13395  0F99  0B89               	decfsz	9,f
 13396  0F9A  2F96               	goto	u4155
 13397  0F9B  082C               	movf	??___ftdiv,w
 13398  0F9C  00AF               	movwf	??___ftdiv+3
 13399  0F9D  082F               	movf	??___ftdiv+3,w
 13400  0F9E  00B5               	movwf	___ftdiv@sign
 13401  0F9F  0826               	movf	___ftdiv@f2,w
 13402  0FA0  00AC               	movwf	??___ftdiv
 13403  0FA1  0827               	movf	___ftdiv@f2+1,w
 13404  0FA2  00AD               	movwf	??___ftdiv+1
 13405  0FA3  0828               	movf	___ftdiv@f2+2,w
 13406  0FA4  00AE               	movwf	??___ftdiv+2
 13407  0FA5  3010               	movlw	16
 13408  0FA6                     u4165:	
 13409  0FA6  36AE               	lsrf	??___ftdiv+2,f
 13410  0FA7  0CAD               	rrf	??___ftdiv+1,f
 13411  0FA8  0CAC               	rrf	??___ftdiv,f
 13412  0FA9  0B89               	decfsz	9,f
 13413  0FAA  2FA6               	goto	u4165
 13414  0FAB  082C               	movf	??___ftdiv,w
 13415  0FAC  00AF               	movwf	??___ftdiv+3
 13416  0FAD  082F               	movf	??___ftdiv+3,w
 13417  0FAE  06B5               	xorwf	___ftdiv@sign,f
 13418  0FAF  3080               	movlw	128
 13419  0FB0  00AC               	movwf	??___ftdiv
 13420  0FB1  082C               	movf	??___ftdiv,w
 13421  0FB2  05B5               	andwf	___ftdiv@sign,f
 13422  0FB3  17AA               	bsf	___ftdiv@f1+1,7
 13423  0FB4  30FF               	movlw	255
 13424  0FB5  05A9               	andwf	___ftdiv@f1,f
 13425  0FB6  30FF               	movlw	255
 13426  0FB7  05AA               	andwf	___ftdiv@f1+1,f
 13427  0FB8  3000               	movlw	0
 13428  0FB9  05AB               	andwf	___ftdiv@f1+2,f
 13429  0FBA  17A7               	bsf	___ftdiv@f2+1,7
 13430  0FBB  30FF               	movlw	255
 13431  0FBC  05A6               	andwf	___ftdiv@f2,f
 13432  0FBD  30FF               	movlw	255
 13433  0FBE  05A7               	andwf	___ftdiv@f2+1,f
 13434  0FBF  3000               	movlw	0
 13435  0FC0  05A8               	andwf	___ftdiv@f2+2,f
 13436  0FC1  3018               	movlw	24
 13437  0FC2  00AC               	movwf	??___ftdiv
 13438  0FC3  082C               	movf	??___ftdiv,w
 13439  0FC4  00B0               	movwf	___ftdiv@cntr
 13440  0FC5                     l4650:	
 13441  0FC5  3001               	movlw	1
 13442  0FC6                     u4175:	
 13443  0FC6  35B1               	lslf	___ftdiv@f3,f
 13444  0FC7  0DB2               	rlf	___ftdiv@f3+1,f
 13445  0FC8  0DB3               	rlf	___ftdiv@f3+2,f
 13446  0FC9  0B89               	decfsz	9,f
 13447  0FCA  2FC6               	goto	u4175
 13448  0FCB  0828               	movf	___ftdiv@f2+2,w
 13449  0FCC  022B               	subwf	___ftdiv@f1+2,w
 13450  0FCD  1D03               	skipz
 13451  0FCE  2FD5               	goto	u4185
 13452  0FCF  0827               	movf	___ftdiv@f2+1,w
 13453  0FD0  022A               	subwf	___ftdiv@f1+1,w
 13454  0FD1  1D03               	skipz
 13455  0FD2  2FD5               	goto	u4185
 13456  0FD3  0826               	movf	___ftdiv@f2,w
 13457  0FD4  0229               	subwf	___ftdiv@f1,w
 13458  0FD5                     u4185:	
 13459  0FD5  1C03               	skipc
 13460  0FD6  2FDE               	goto	l4658
 13461  0FD7  0826               	movf	___ftdiv@f2,w
 13462  0FD8  02A9               	subwf	___ftdiv@f1,f
 13463  0FD9  0827               	movf	___ftdiv@f2+1,w
 13464  0FDA  3BAA               	subwfb	___ftdiv@f1+1,f
 13465  0FDB  0828               	movf	___ftdiv@f2+2,w
 13466  0FDC  3BAB               	subwfb	___ftdiv@f1+2,f
 13467  0FDD  1431               	bsf	___ftdiv@f3,0
 13468  0FDE                     l4658:	
 13469  0FDE  3001               	movlw	1
 13470  0FDF                     u4195:	
 13471  0FDF  35A9               	lslf	___ftdiv@f1,f
 13472  0FE0  0DAA               	rlf	___ftdiv@f1+1,f
 13473  0FE1  0DAB               	rlf	___ftdiv@f1+2,f
 13474  0FE2  0B89               	decfsz	9,f
 13475  0FE3  2FDF               	goto	u4195
 13476  0FE4  3001               	movlw	1
 13477  0FE5  02B0               	subwf	___ftdiv@cntr,f
 13478  0FE6  1D03               	btfss	3,2
 13479  0FE7  2FC5               	goto	l4650
 13480  0FE8  0831               	movf	___ftdiv@f3,w
 13481  0FE9  00F2               	movwf	___ftpack@arg
 13482  0FEA  0832               	movf	___ftdiv@f3+1,w
 13483  0FEB  00F3               	movwf	___ftpack@arg+1
 13484  0FEC  0833               	movf	___ftdiv@f3+2,w
 13485  0FED  00F4               	movwf	___ftpack@arg+2
 13486  0FEE  0834               	movf	___ftdiv@exp,w
 13487  0FEF  00AC               	movwf	??___ftdiv
 13488  0FF0  082C               	movf	??___ftdiv,w
 13489  0FF1  00F5               	movwf	___ftpack@exp
 13490  0FF2  0835               	movf	___ftdiv@sign,w
 13491  0FF3  00AD               	movwf	??___ftdiv+1
 13492  0FF4  082D               	movf	??___ftdiv+1,w
 13493  0FF5  00F6               	movwf	___ftpack@sign
 13494  0FF6  318B  2363         	fcall	___ftpack
 13495  0FF8  0872               	movf	?___ftpack,w
 13496  0FF9  0020               	movlb	0	; select bank0
 13497  0FFA  00A6               	movwf	?___ftdiv
 13498  0FFB  0873               	movf	?___ftpack+1,w
 13499  0FFC  00A7               	movwf	?___ftdiv+1
 13500  0FFD  0874               	movf	?___ftpack+2,w
 13501  0FFE  00A8               	movwf	?___ftdiv+2
 13502  0FFF  0008               	return
 13503  1000                     __end_of___ftdiv:	
 13504                           
 13505                           	psect	text91
 13506  0346                     __ptext91:	
 13507 ;; *************** function ___ftadd *****************
 13508 ;; Defined at:
 13509 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftadd.c"
 13510 ;; Parameters:    Size  Location     Type
 13511 ;;  f1              3   25[BANK0 ] float 
 13512 ;;  f2              3   28[BANK0 ] float 
 13513 ;; Auto vars:     Size  Location     Type
 13514 ;;  exp1            1   37[BANK0 ] unsigned char 
 13515 ;;  exp2            1   36[BANK0 ] unsigned char 
 13516 ;;  sign            1   35[BANK0 ] unsigned char 
 13517 ;; Return value:  Size  Location     Type
 13518 ;;                  3   25[BANK0 ] float 
 13519 ;; Registers used:
 13520 ;;		wreg, status,2, status,0, pclath, cstack
 13521 ;; Tracked objects:
 13522 ;;		On entry : 0/0
 13523 ;;		On exit  : 0/0
 13524 ;;		Unchanged: 0/0
 13525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13526 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13527 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13528 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13529 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13530 ;;Total ram usage:       13 bytes
 13531 ;; Hardware stack levels used:    1
 13532 ;; Hardware stack levels required when called:    4
 13533 ;; This function calls:
 13534 ;;		___ftpack
 13535 ;; This function is called by:
 13536 ;;		_getDimmerLights_PercentToValue
 13537 ;;		_getDimmerLights_ValueToPercent
 13538 ;; This function uses a non-reentrant model
 13539 ;;
 13540                           
 13541                           
 13542                           ;psect for function ___ftadd
 13543  0346                     ___ftadd:	
 13544                           
 13545                           ;incstack = 0
 13546                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 13547  0346  0020               	movlb	0	; select bank0
 13548  0347  0839               	movf	___ftadd@f1,w
 13549  0348  00BF               	movwf	??___ftadd
 13550  0349  083A               	movf	___ftadd@f1+1,w
 13551  034A  00C0               	movwf	??___ftadd+1
 13552  034B  083B               	movf	___ftadd@f1+2,w
 13553  034C  00C1               	movwf	??___ftadd+2
 13554  034D  1003               	clrc
 13555  034E  0D40               	rlf	??___ftadd+1,w
 13556  034F  0D41               	rlf	??___ftadd+2,w
 13557  0350  00C2               	movwf	??___ftadd+3
 13558  0351  0842               	movf	??___ftadd+3,w
 13559  0352  00C5               	movwf	___ftadd@exp1
 13560  0353  083C               	movf	___ftadd@f2,w
 13561  0354  00BF               	movwf	??___ftadd
 13562  0355  083D               	movf	___ftadd@f2+1,w
 13563  0356  00C0               	movwf	??___ftadd+1
 13564  0357  083E               	movf	___ftadd@f2+2,w
 13565  0358  00C1               	movwf	??___ftadd+2
 13566  0359  1003               	clrc
 13567  035A  0D40               	rlf	??___ftadd+1,w
 13568  035B  0D41               	rlf	??___ftadd+2,w
 13569  035C  00C2               	movwf	??___ftadd+3
 13570  035D  0842               	movf	??___ftadd+3,w
 13571  035E  00C4               	movwf	___ftadd@exp2
 13572  035F  0845               	movf	___ftadd@exp1,w
 13573  0360  1903               	btfsc	3,2
 13574  0361  2B6E               	goto	l4560
 13575  0362  0844               	movf	___ftadd@exp2,w
 13576  0363  0245               	subwf	___ftadd@exp1,w
 13577  0364  1803               	skipnc
 13578  0365  2B75               	goto	l4564
 13579  0366  0345               	decf	___ftadd@exp1,w
 13580  0367  3AFF               	xorlw	255
 13581  0368  0744               	addwf	___ftadd@exp2,w
 13582  0369  00BF               	movwf	??___ftadd
 13583  036A  3019               	movlw	25
 13584  036B  023F               	subwf	??___ftadd,w
 13585  036C  1C03               	skipc
 13586  036D  2B75               	goto	l4564
 13587  036E                     l4560:	
 13588  036E  083C               	movf	___ftadd@f2,w
 13589  036F  00B9               	movwf	?___ftadd
 13590  0370  083D               	movf	___ftadd@f2+1,w
 13591  0371  00BA               	movwf	?___ftadd+1
 13592  0372  083E               	movf	___ftadd@f2+2,w
 13593  0373  00BB               	movwf	?___ftadd+2
 13594  0374  0008               	return
 13595  0375                     l4564:	
 13596  0375  0844               	movf	___ftadd@exp2,w
 13597  0376  1903               	btfsc	3,2
 13598  0377  0008               	return
 13599  0378  0845               	movf	___ftadd@exp1,w
 13600  0379  0244               	subwf	___ftadd@exp2,w
 13601  037A  1803               	skipnc
 13602  037B  2B84               	goto	l4570
 13603  037C  0344               	decf	___ftadd@exp2,w
 13604  037D  3AFF               	xorlw	255
 13605  037E  0745               	addwf	___ftadd@exp1,w
 13606  037F  00BF               	movwf	??___ftadd
 13607  0380  3019               	movlw	25
 13608  0381  023F               	subwf	??___ftadd,w
 13609  0382  1803               	btfsc	3,0
 13610  0383  0008               	return
 13611  0384                     l4570:	
 13612  0384  3006               	movlw	6
 13613  0385  00BF               	movwf	??___ftadd
 13614  0386  083F               	movf	??___ftadd,w
 13615  0387  00C3               	movwf	___ftadd@sign
 13616  0388  1BBB               	btfsc	___ftadd@f1+2,7
 13617  0389  17C3               	bsf	___ftadd@sign,7
 13618  038A  1BBE               	btfsc	___ftadd@f2+2,7
 13619  038B  1743               	bsf	___ftadd@sign,6
 13620  038C  17BA               	bsf	___ftadd@f1+1,7
 13621  038D  30FF               	movlw	255
 13622  038E  05B9               	andwf	___ftadd@f1,f
 13623  038F  30FF               	movlw	255
 13624  0390  05BA               	andwf	___ftadd@f1+1,f
 13625  0391  3000               	movlw	0
 13626  0392  05BB               	andwf	___ftadd@f1+2,f
 13627  0393  17BD               	bsf	___ftadd@f2+1,7
 13628  0394  30FF               	movlw	255
 13629  0395  05BC               	andwf	___ftadd@f2,f
 13630  0396  30FF               	movlw	255
 13631  0397  05BD               	andwf	___ftadd@f2+1,f
 13632  0398  3000               	movlw	0
 13633  0399  05BE               	andwf	___ftadd@f2+2,f
 13634  039A  0844               	movf	___ftadd@exp2,w
 13635  039B  0245               	subwf	___ftadd@exp1,w
 13636  039C  1803               	skipnc
 13637  039D  2BC0               	goto	l4592
 13638  039E                     l4582:	
 13639  039E  3001               	movlw	1
 13640  039F                     u3995:	
 13641  039F  35BC               	lslf	___ftadd@f2,f
 13642  03A0  0DBD               	rlf	___ftadd@f2+1,f
 13643  03A1  0DBE               	rlf	___ftadd@f2+2,f
 13644  03A2  0B89               	decfsz	9,f
 13645  03A3  2B9F               	goto	u3995
 13646  03A4  3001               	movlw	1
 13647  03A5  02C4               	subwf	___ftadd@exp2,f
 13648  03A6  0844               	movf	___ftadd@exp2,w
 13649  03A7  0645               	xorwf	___ftadd@exp1,w
 13650  03A8  1903               	skipnz
 13651  03A9  2BBB               	goto	l4590
 13652  03AA  3001               	movlw	1
 13653  03AB  02C3               	subwf	___ftadd@sign,f
 13654  03AC  0843               	movf	___ftadd@sign,w
 13655  03AD  3907               	andlw	7
 13656  03AE  1903               	btfsc	3,2
 13657  03AF  2BBB               	goto	l4590
 13658  03B0  2B9E               	goto	l4582
 13659  03B1                     l4588:	
 13660  03B1  3001               	movlw	1
 13661  03B2                     u4025:	
 13662  03B2  36BB               	lsrf	___ftadd@f1+2,f
 13663  03B3  0CBA               	rrf	___ftadd@f1+1,f
 13664  03B4  0CB9               	rrf	___ftadd@f1,f
 13665  03B5  0B89               	decfsz	9,f
 13666  03B6  2BB2               	goto	u4025
 13667  03B7  3001               	movlw	1
 13668  03B8  00BF               	movwf	??___ftadd
 13669  03B9  083F               	movf	??___ftadd,w
 13670  03BA  07C5               	addwf	___ftadd@exp1,f
 13671  03BB                     l4590:	
 13672  03BB  0845               	movf	___ftadd@exp1,w
 13673  03BC  0644               	xorwf	___ftadd@exp2,w
 13674  03BD  1903               	btfsc	3,2
 13675  03BE  2BE5               	goto	l2095
 13676  03BF  2BB1               	goto	l4588
 13677  03C0                     l4592:	
 13678  03C0  0845               	movf	___ftadd@exp1,w
 13679  03C1  0244               	subwf	___ftadd@exp2,w
 13680  03C2  1803               	skipnc
 13681  03C3  2BE5               	goto	l2095
 13682  03C4                     l4594:	
 13683  03C4  3001               	movlw	1
 13684  03C5                     u4055:	
 13685  03C5  35B9               	lslf	___ftadd@f1,f
 13686  03C6  0DBA               	rlf	___ftadd@f1+1,f
 13687  03C7  0DBB               	rlf	___ftadd@f1+2,f
 13688  03C8  0B89               	decfsz	9,f
 13689  03C9  2BC5               	goto	u4055
 13690  03CA  3001               	movlw	1
 13691  03CB  02C5               	subwf	___ftadd@exp1,f
 13692  03CC  0844               	movf	___ftadd@exp2,w
 13693  03CD  0645               	xorwf	___ftadd@exp1,w
 13694  03CE  1903               	skipnz
 13695  03CF  2BE1               	goto	l4602
 13696  03D0  3001               	movlw	1
 13697  03D1  02C3               	subwf	___ftadd@sign,f
 13698  03D2  0843               	movf	___ftadd@sign,w
 13699  03D3  3907               	andlw	7
 13700  03D4  1903               	btfsc	3,2
 13701  03D5  2BE1               	goto	l4602
 13702  03D6  2BC4               	goto	l4594
 13703  03D7                     l4600:	
 13704  03D7  3001               	movlw	1
 13705  03D8                     u4085:	
 13706  03D8  36BE               	lsrf	___ftadd@f2+2,f
 13707  03D9  0CBD               	rrf	___ftadd@f2+1,f
 13708  03DA  0CBC               	rrf	___ftadd@f2,f
 13709  03DB  0B89               	decfsz	9,f
 13710  03DC  2BD8               	goto	u4085
 13711  03DD  3001               	movlw	1
 13712  03DE  00BF               	movwf	??___ftadd
 13713  03DF  083F               	movf	??___ftadd,w
 13714  03E0  07C4               	addwf	___ftadd@exp2,f
 13715  03E1                     l4602:	
 13716  03E1  0845               	movf	___ftadd@exp1,w
 13717  03E2  0644               	xorwf	___ftadd@exp2,w
 13718  03E3  1D03               	skipz
 13719  03E4  2BD7               	goto	l4600
 13720  03E5                     l2095:	
 13721  03E5  1FC3               	btfss	___ftadd@sign,7
 13722  03E6  2BF7               	goto	l4606
 13723  03E7  30FF               	movlw	255
 13724  03E8  06B9               	xorwf	___ftadd@f1,f
 13725  03E9  30FF               	movlw	255
 13726  03EA  06BA               	xorwf	___ftadd@f1+1,f
 13727  03EB  30FF               	movlw	255
 13728  03EC  06BB               	xorwf	___ftadd@f1+2,f
 13729  03ED  3001               	movlw	1
 13730  03EE  07B9               	addwf	___ftadd@f1,f
 13731  03EF  3000               	movlw	0
 13732  03F0  1803               	skipnc
 13733  03F1  3001               	movlw	1
 13734  03F2  07BA               	addwf	___ftadd@f1+1,f
 13735  03F3  3000               	movlw	0
 13736  03F4  1803               	skipnc
 13737  03F5  3001               	movlw	1
 13738  03F6  07BB               	addwf	___ftadd@f1+2,f
 13739  03F7                     l4606:	
 13740  03F7  1F43               	btfss	___ftadd@sign,6
 13741  03F8  2C09               	goto	l4610
 13742  03F9  30FF               	movlw	255
 13743  03FA  06BC               	xorwf	___ftadd@f2,f
 13744  03FB  30FF               	movlw	255
 13745  03FC  06BD               	xorwf	___ftadd@f2+1,f
 13746  03FD  30FF               	movlw	255
 13747  03FE  06BE               	xorwf	___ftadd@f2+2,f
 13748  03FF  3001               	movlw	1
 13749  0400  07BC               	addwf	___ftadd@f2,f
 13750  0401  3000               	movlw	0
 13751  0402  1803               	skipnc
 13752  0403  3001               	movlw	1
 13753  0404  07BD               	addwf	___ftadd@f2+1,f
 13754  0405  3000               	movlw	0
 13755  0406  1803               	skipnc
 13756  0407  3001               	movlw	1
 13757  0408  07BE               	addwf	___ftadd@f2+2,f
 13758  0409                     l4610:	
 13759  0409  01C3               	clrf	___ftadd@sign
 13760  040A  0839               	movf	___ftadd@f1,w
 13761  040B  07BC               	addwf	___ftadd@f2,f
 13762  040C  083A               	movf	___ftadd@f1+1,w
 13763  040D  3DBD               	addwfc	___ftadd@f2+1,f
 13764  040E  083B               	movf	___ftadd@f1+2,w
 13765  040F  3DBE               	addwfc	___ftadd@f2+2,f
 13766  0410  1FBE               	btfss	___ftadd@f2+2,7
 13767  0411  2C24               	goto	l4620
 13768  0412  30FF               	movlw	255
 13769  0413  06BC               	xorwf	___ftadd@f2,f
 13770  0414  30FF               	movlw	255
 13771  0415  06BD               	xorwf	___ftadd@f2+1,f
 13772  0416  30FF               	movlw	255
 13773  0417  06BE               	xorwf	___ftadd@f2+2,f
 13774  0418  3001               	movlw	1
 13775  0419  07BC               	addwf	___ftadd@f2,f
 13776  041A  3000               	movlw	0
 13777  041B  1803               	skipnc
 13778  041C  3001               	movlw	1
 13779  041D  07BD               	addwf	___ftadd@f2+1,f
 13780  041E  3000               	movlw	0
 13781  041F  1803               	skipnc
 13782  0420  3001               	movlw	1
 13783  0421  07BE               	addwf	___ftadd@f2+2,f
 13784  0422  01C3               	clrf	___ftadd@sign
 13785  0423  0AC3               	incf	___ftadd@sign,f
 13786  0424                     l4620:	
 13787  0424  083C               	movf	___ftadd@f2,w
 13788  0425  00F2               	movwf	___ftpack@arg
 13789  0426  083D               	movf	___ftadd@f2+1,w
 13790  0427  00F3               	movwf	___ftpack@arg+1
 13791  0428  083E               	movf	___ftadd@f2+2,w
 13792  0429  00F4               	movwf	___ftpack@arg+2
 13793  042A  0845               	movf	___ftadd@exp1,w
 13794  042B  00BF               	movwf	??___ftadd
 13795  042C  083F               	movf	??___ftadd,w
 13796  042D  00F5               	movwf	___ftpack@exp
 13797  042E  0843               	movf	___ftadd@sign,w
 13798  042F  00C0               	movwf	??___ftadd+1
 13799  0430  0840               	movf	??___ftadd+1,w
 13800  0431  00F6               	movwf	___ftpack@sign
 13801  0432  318B  2363         	fcall	___ftpack
 13802  0434  0872               	movf	?___ftpack,w
 13803  0435  0020               	movlb	0	; select bank0
 13804  0436  00B9               	movwf	?___ftadd
 13805  0437  0873               	movf	?___ftpack+1,w
 13806  0438  00BA               	movwf	?___ftadd+1
 13807  0439  0874               	movf	?___ftpack+2,w
 13808  043A  00BB               	movwf	?___ftadd+2
 13809  043B  0008               	return
 13810  043C                     __end_of___ftadd:	
 13811                           
 13812                           	psect	text92
 13813  155C                     __ptext92:	
 13814 ;; *************** function ___awtoft *****************
 13815 ;; Defined at:
 13816 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c"
 13817 ;; Parameters:    Size  Location     Type
 13818 ;;  c               2    0[BANK0 ] int 
 13819 ;; Auto vars:     Size  Location     Type
 13820 ;;  sign            1    5[BANK0 ] unsigned char 
 13821 ;; Return value:  Size  Location     Type
 13822 ;;                  3    0[BANK0 ] float 
 13823 ;; Registers used:
 13824 ;;		wreg, status,2, status,0, pclath, cstack
 13825 ;; Tracked objects:
 13826 ;;		On entry : 0/0
 13827 ;;		On exit  : 0/0
 13828 ;;		Unchanged: 0/0
 13829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13830 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13831 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13832 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13833 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13834 ;;Total ram usage:        6 bytes
 13835 ;; Hardware stack levels used:    1
 13836 ;; Hardware stack levels required when called:    4
 13837 ;; This function calls:
 13838 ;;		___ftpack
 13839 ;; This function is called by:
 13840 ;;		_getDimmerLights_PercentToValue
 13841 ;;		_getDimmerLights_ValueToPercent
 13842 ;; This function uses a non-reentrant model
 13843 ;;
 13844                           
 13845                           
 13846                           ;psect for function ___awtoft
 13847  155C                     ___awtoft:	
 13848                           
 13849                           ;incstack = 0
 13850                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 13851  155C  0020               	movlb	0	; select bank0
 13852  155D  01A5               	clrf	___awtoft@sign
 13853  155E  1FA1               	btfss	___awtoft@c+1,7
 13854  155F  2D67               	goto	l6590
 13855  1560  09A0               	comf	___awtoft@c,f
 13856  1561  09A1               	comf	___awtoft@c+1,f
 13857  1562  0AA0               	incf	___awtoft@c,f
 13858  1563  1903               	skipnz
 13859  1564  0AA1               	incf	___awtoft@c+1,f
 13860  1565  01A5               	clrf	___awtoft@sign
 13861  1566  0AA5               	incf	___awtoft@sign,f
 13862  1567                     l6590:	
 13863  1567  0820               	movf	___awtoft@c,w
 13864  1568  00F2               	movwf	___ftpack@arg
 13865  1569  0821               	movf	___awtoft@c+1,w
 13866  156A  00F3               	movwf	___ftpack@arg+1
 13867  156B  01F4               	clrf	___ftpack@arg+2
 13868  156C  308E               	movlw	142
 13869  156D  00A3               	movwf	??___awtoft
 13870  156E  0823               	movf	??___awtoft,w
 13871  156F  00F5               	movwf	___ftpack@exp
 13872  1570  0825               	movf	___awtoft@sign,w
 13873  1571  00A4               	movwf	??___awtoft+1
 13874  1572  0824               	movf	??___awtoft+1,w
 13875  1573  00F6               	movwf	___ftpack@sign
 13876  1574  318B  2363         	fcall	___ftpack
 13877  1576  0872               	movf	?___ftpack,w
 13878  1577  0020               	movlb	0	; select bank0
 13879  1578  00A0               	movwf	?___awtoft
 13880  1579  0873               	movf	?___ftpack+1,w
 13881  157A  00A1               	movwf	?___awtoft+1
 13882  157B  0874               	movf	?___ftpack+2,w
 13883  157C  00A2               	movwf	?___awtoft+2
 13884  157D  0008               	return
 13885  157E                     __end_of___awtoft:	
 13886                           
 13887                           	psect	text93
 13888  0B63                     __ptext93:	
 13889 ;; *************** function ___ftpack *****************
 13890 ;; Defined at:
 13891 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
 13892 ;; Parameters:    Size  Location     Type
 13893 ;;  arg             3    2[COMMON] unsigned um
 13894 ;;  exp             1    5[COMMON] unsigned char 
 13895 ;;  sign            1    6[COMMON] unsigned char 
 13896 ;; Auto vars:     Size  Location     Type
 13897 ;;		None
 13898 ;; Return value:  Size  Location     Type
 13899 ;;                  3    2[COMMON] float 
 13900 ;; Registers used:
 13901 ;;		wreg, status,2, status,0
 13902 ;; Tracked objects:
 13903 ;;		On entry : 0/0
 13904 ;;		On exit  : 0/0
 13905 ;;		Unchanged: 0/0
 13906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13907 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13909 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13910 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13911 ;;Total ram usage:        8 bytes
 13912 ;; Hardware stack levels used:    1
 13913 ;; Hardware stack levels required when called:    3
 13914 ;; This function calls:
 13915 ;;		Nothing
 13916 ;; This function is called by:
 13917 ;;		___awtoft
 13918 ;;		___ftadd
 13919 ;;		___ftdiv
 13920 ;;		___ftmul
 13921 ;; This function uses a non-reentrant model
 13922 ;;
 13923                           
 13924                           
 13925                           ;psect for function ___ftpack
 13926  0B63                     ___ftpack:	
 13927                           
 13928                           ;incstack = 0
 13929                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 13930  0B63  0875               	movf	___ftpack@exp,w
 13931  0B64  1903               	btfsc	3,2
 13932  0B65  2B6B               	goto	l4404
 13933  0B66  0874               	movf	___ftpack@arg+2,w
 13934  0B67  0473               	iorwf	___ftpack@arg+1,w
 13935  0B68  0472               	iorwf	___ftpack@arg,w
 13936  0B69  1D03               	skipz
 13937  0B6A  2B7C               	goto	l4410
 13938  0B6B                     l4404:	
 13939  0B6B  3000               	movlw	0
 13940  0B6C  00F2               	movwf	?___ftpack
 13941  0B6D  3000               	movlw	0
 13942  0B6E  00F3               	movwf	?___ftpack+1
 13943  0B6F  3000               	movlw	0
 13944  0B70  00F4               	movwf	?___ftpack+2
 13945  0B71  0008               	return
 13946  0B72                     l4408:	
 13947  0B72  3001               	movlw	1
 13948  0B73  00F7               	movwf	??___ftpack
 13949  0B74  0877               	movf	??___ftpack,w
 13950  0B75  07F5               	addwf	___ftpack@exp,f
 13951  0B76  3001               	movlw	1
 13952  0B77                     u3605:	
 13953  0B77  36F4               	lsrf	___ftpack@arg+2,f
 13954  0B78  0CF3               	rrf	___ftpack@arg+1,f
 13955  0B79  0CF2               	rrf	___ftpack@arg,f
 13956  0B7A  0B89               	decfsz	9,f
 13957  0B7B  2B77               	goto	u3605
 13958  0B7C                     l4410:	
 13959  0B7C  30FE               	movlw	254
 13960  0B7D  0574               	andwf	___ftpack@arg+2,w
 13961  0B7E  1903               	btfsc	3,2
 13962  0B7F  2B95               	goto	l2066
 13963  0B80  2B72               	goto	l4408
 13964  0B81                     l4412:	
 13965  0B81  3001               	movlw	1
 13966  0B82  00F7               	movwf	??___ftpack
 13967  0B83  0877               	movf	??___ftpack,w
 13968  0B84  07F5               	addwf	___ftpack@exp,f
 13969  0B85  3001               	movlw	1
 13970  0B86  07F2               	addwf	___ftpack@arg,f
 13971  0B87  3000               	movlw	0
 13972  0B88  1803               	skipnc
 13973  0B89  3001               	movlw	1
 13974  0B8A  07F3               	addwf	___ftpack@arg+1,f
 13975  0B8B  3000               	movlw	0
 13976  0B8C  1803               	skipnc
 13977  0B8D  3001               	movlw	1
 13978  0B8E  07F4               	addwf	___ftpack@arg+2,f
 13979  0B8F  3001               	movlw	1
 13980  0B90                     u3625:	
 13981  0B90  36F4               	lsrf	___ftpack@arg+2,f
 13982  0B91  0CF3               	rrf	___ftpack@arg+1,f
 13983  0B92  0CF2               	rrf	___ftpack@arg,f
 13984  0B93  0B89               	decfsz	9,f
 13985  0B94  2B90               	goto	u3625
 13986  0B95                     l2066:	
 13987  0B95  30FF               	movlw	255
 13988  0B96  0574               	andwf	___ftpack@arg+2,w
 13989  0B97  1903               	btfsc	3,2
 13990  0B98  2BA2               	goto	l4420
 13991  0B99  2B81               	goto	l4412
 13992  0B9A                     l4418:	
 13993  0B9A  3001               	movlw	1
 13994  0B9B  02F5               	subwf	___ftpack@exp,f
 13995  0B9C  3001               	movlw	1
 13996  0B9D                     u3645:	
 13997  0B9D  35F2               	lslf	___ftpack@arg,f
 13998  0B9E  0DF3               	rlf	___ftpack@arg+1,f
 13999  0B9F  0DF4               	rlf	___ftpack@arg+2,f
 14000  0BA0  0B89               	decfsz	9,f
 14001  0BA1  2B9D               	goto	u3645
 14002  0BA2                     l4420:	
 14003  0BA2  1FF3               	btfss	___ftpack@arg+1,7
 14004  0BA3  2B9A               	goto	l4418
 14005  0BA4  1875               	btfsc	___ftpack@exp,0
 14006  0BA5  2BAC               	goto	l2072
 14007  0BA6  30FF               	movlw	255
 14008  0BA7  05F2               	andwf	___ftpack@arg,f
 14009  0BA8  307F               	movlw	127
 14010  0BA9  05F3               	andwf	___ftpack@arg+1,f
 14011  0BAA  30FF               	movlw	255
 14012  0BAB  05F4               	andwf	___ftpack@arg+2,f
 14013  0BAC                     l2072:	
 14014  0BAC  1003               	clrc
 14015  0BAD  0CF5               	rrf	___ftpack@exp,f
 14016  0BAE  0875               	movf	___ftpack@exp,w
 14017  0BAF  00F7               	movwf	??___ftpack
 14018  0BB0  01F8               	clrf	??___ftpack+1
 14019  0BB1  01F9               	clrf	??___ftpack+2
 14020  0BB2  3010               	movlw	16
 14021  0BB3                     u3675:	
 14022  0BB3  35F7               	lslf	??___ftpack,f
 14023  0BB4  0DF8               	rlf	??___ftpack+1,f
 14024  0BB5  0DF9               	rlf	??___ftpack+2,f
 14025  0BB6  0B89               	decfsz	9,f
 14026  0BB7  2BB3               	goto	u3675
 14027  0BB8  0877               	movf	??___ftpack,w
 14028  0BB9  04F2               	iorwf	___ftpack@arg,f
 14029  0BBA  0878               	movf	??___ftpack+1,w
 14030  0BBB  04F3               	iorwf	___ftpack@arg+1,f
 14031  0BBC  0879               	movf	??___ftpack+2,w
 14032  0BBD  04F4               	iorwf	___ftpack@arg+2,f
 14033  0BBE  0876               	movf	___ftpack@sign,w
 14034  0BBF  1903               	btfsc	3,2
 14035  0BC0  0008               	return
 14036  0BC1  17F4               	bsf	___ftpack@arg+2,7
 14037  0BC2  0008               	return
 14038  0BC3                     __end_of___ftpack:	
 14039                           
 14040                           	psect	text94
 14041  1344                     __ptext94:	
 14042 ;; *************** function _Division *****************
 14043 ;; Defined at:
 14044 ;;		line 2398 in file "../src/Dimmer_B1.c"
 14045 ;; Parameters:    Size  Location     Type
 14046 ;;  value           1    wreg     unsigned char 
 14047 ;;  num             1    7[COMMON] unsigned char 
 14048 ;; Auto vars:     Size  Location     Type
 14049 ;;  value           1    0[BANK0 ] unsigned char 
 14050 ;;  result          1    1[BANK0 ] unsigned char 
 14051 ;; Return value:  Size  Location     Type
 14052 ;;                  1    wreg      unsigned char 
 14053 ;; Registers used:
 14054 ;;		wreg, status,2, status,0, pclath, cstack
 14055 ;; Tracked objects:
 14056 ;;		On entry : 0/0
 14057 ;;		On exit  : 0/0
 14058 ;;		Unchanged: 0/0
 14059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14060 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14061 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14062 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14063 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14064 ;;Total ram usage:        5 bytes
 14065 ;; Hardware stack levels used:    1
 14066 ;; Hardware stack levels required when called:    4
 14067 ;; This function calls:
 14068 ;;		___lbdiv
 14069 ;; This function is called by:
 14070 ;;		_DimmerIntr_Initialization
 14071 ;;		_DimmerIntr_ValueCalculate
 14072 ;; This function uses a non-reentrant model
 14073 ;;
 14074                           
 14075                           
 14076                           ;psect for function _Division
 14077  1344                     _Division:	
 14078                           
 14079                           ;incstack = 0
 14080                           ; Regs used in _Division: [wreg+status,2+status,0+pclath+cstack]
 14081                           ;Division@value stored from wreg
 14082  1344  0020               	movlb	0	; select bank0
 14083  1345  00A0               	movwf	Division@value
 14084                           
 14085                           ;Dimmer_B1.c: 2399: char result = (char) (value / num);
 14086  1346  0877               	movf	Division@num,w
 14087  1347  00F8               	movwf	??_Division
 14088  1348  0878               	movf	??_Division,w
 14089  1349  00F2               	movwf	___lbdiv@divisor
 14090  134A  0820               	movf	Division@value,w
 14091  134B  3195  253B         	fcall	___lbdiv
 14092  134D  00F9               	movwf	??_Division+1
 14093  134E  0879               	movf	??_Division+1,w
 14094  134F  0020               	movlb	0	; select bank0
 14095  1350  00A1               	movwf	Division@result
 14096                           
 14097                           ;Dimmer_B1.c: 2400: return result;
 14098  1351  0821               	movf	Division@result,w
 14099  1352  0008               	return
 14100  1353                     __end_of_Division:	
 14101                           
 14102                           	psect	text95
 14103  153B                     __ptext95:	
 14104 ;; *************** function ___lbdiv *****************
 14105 ;; Defined at:
 14106 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lbdiv.c"
 14107 ;; Parameters:    Size  Location     Type
 14108 ;;  dividend        1    wreg     unsigned char 
 14109 ;;  divisor         1    2[COMMON] unsigned char 
 14110 ;; Auto vars:     Size  Location     Type
 14111 ;;  dividend        1    4[COMMON] unsigned char 
 14112 ;;  quotient        1    6[COMMON] unsigned char 
 14113 ;;  counter         1    5[COMMON] unsigned char 
 14114 ;; Return value:  Size  Location     Type
 14115 ;;                  1    wreg      unsigned char 
 14116 ;; Registers used:
 14117 ;;		wreg, status,2, status,0
 14118 ;; Tracked objects:
 14119 ;;		On entry : 0/0
 14120 ;;		On exit  : 0/0
 14121 ;;		Unchanged: 0/0
 14122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14123 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14124 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14125 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14126 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14127 ;;Total ram usage:        5 bytes
 14128 ;; Hardware stack levels used:    1
 14129 ;; Hardware stack levels required when called:    3
 14130 ;; This function calls:
 14131 ;;		Nothing
 14132 ;; This function is called by:
 14133 ;;		_Division
 14134 ;; This function uses a non-reentrant model
 14135 ;;
 14136                           
 14137                           
 14138                           ;psect for function ___lbdiv
 14139  153B                     ___lbdiv:	
 14140                           
 14141                           ;incstack = 0
 14142                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
 14143                           ;___lbdiv@dividend stored from wreg
 14144  153B  00F4               	movwf	___lbdiv@dividend
 14145  153C  01F6               	clrf	___lbdiv@quotient
 14146  153D  0872               	movf	___lbdiv@divisor,w
 14147  153E  1903               	btfsc	3,2
 14148  153F  2D5A               	goto	l6528
 14149  1540  01F5               	clrf	___lbdiv@counter
 14150  1541  0AF5               	incf	___lbdiv@counter,f
 14151  1542                     l6516:	
 14152  1542  1BF2               	btfsc	___lbdiv@divisor,7
 14153  1543  2D4B               	goto	l6518
 14154  1544  1003               	clrc
 14155  1545  0DF2               	rlf	___lbdiv@divisor,f
 14156  1546  3001               	movlw	1
 14157  1547  00F3               	movwf	??___lbdiv
 14158  1548  0873               	movf	??___lbdiv,w
 14159  1549  07F5               	addwf	___lbdiv@counter,f
 14160  154A  2D42               	goto	l6516
 14161  154B                     l6518:	
 14162  154B  1003               	clrc
 14163  154C  0DF6               	rlf	___lbdiv@quotient,f
 14164  154D  0872               	movf	___lbdiv@divisor,w
 14165  154E  0274               	subwf	___lbdiv@dividend,w
 14166  154F  1C03               	skipc
 14167  1550  2D55               	goto	L6
 14168  1551  0872               	movf	___lbdiv@divisor,w
 14169  1552  02F4               	subwf	___lbdiv@dividend,f
 14170  1553  1476               	bsf	___lbdiv@quotient,0
 14171  1554  1003               	clrc
 14172  1555                     L6:	
 14173  1555  0CF2               	rrf	___lbdiv@divisor,f
 14174  1556  3001               	movlw	1
 14175  1557  02F5               	subwf	___lbdiv@counter,f
 14176  1558  1D03               	btfss	3,2
 14177  1559  2D4B               	goto	l6518
 14178  155A                     l6528:	
 14179  155A  0876               	movf	___lbdiv@quotient,w
 14180  155B  0008               	return
 14181  155C                     __end_of___lbdiv:	
 14182                           
 14183                           	psect	text96
 14184  11CB                     __ptext96:	
 14185 ;; *************** function _DelayOff_Main *****************
 14186 ;; Defined at:
 14187 ;;		line 41 in file "../src/DelayOff_B1.c"
 14188 ;; Parameters:    Size  Location     Type
 14189 ;;		None
 14190 ;; Auto vars:     Size  Location     Type
 14191 ;;		None
 14192 ;; Return value:  Size  Location     Type
 14193 ;;		None               void
 14194 ;; Registers used:
 14195 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14196 ;; Tracked objects:
 14197 ;;		On entry : 0/0
 14198 ;;		On exit  : 0/0
 14199 ;;		Unchanged: 0/0
 14200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14205 ;;Total ram usage:        0 bytes
 14206 ;; Hardware stack levels used:    1
 14207 ;; Hardware stack levels required when called:    7
 14208 ;; This function calls:
 14209 ;;		_DlyOff_Main
 14210 ;; This function is called by:
 14211 ;;		_main
 14212 ;; This function uses a non-reentrant model
 14213 ;;
 14214                           
 14215                           
 14216                           ;psect for function _DelayOff_Main
 14217  11CB                     _DelayOff_Main:	
 14218                           
 14219                           ;DelayOff_B1.c: 43: DlyOff_Main(1);
 14220                           
 14221                           ;incstack = 0
 14222                           ; Regs used in _DelayOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14223  11CB  3001               	movlw	1
 14224  11CC  318B  2304         	fcall	_DlyOff_Main
 14225  11CE  0008               	return
 14226  11CF                     __end_of_DelayOff_Main:	
 14227                           
 14228                           	psect	text97
 14229  0B04                     __ptext97:	
 14230 ;; *************** function _DlyOff_Main *****************
 14231 ;; Defined at:
 14232 ;;		line 61 in file "../src/DelayOff_B1.c"
 14233 ;; Parameters:    Size  Location     Type
 14234 ;;  sw              1    wreg     unsigned char 
 14235 ;; Auto vars:     Size  Location     Type
 14236 ;;  sw              1   63[BANK0 ] unsigned char 
 14237 ;; Return value:  Size  Location     Type
 14238 ;;		None               void
 14239 ;; Registers used:
 14240 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14241 ;; Tracked objects:
 14242 ;;		On entry : 0/0
 14243 ;;		On exit  : 0/0
 14244 ;;		Unchanged: 0/0
 14245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14247 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14248 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14249 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14250 ;;Total ram usage:        3 bytes
 14251 ;; Hardware stack levels used:    1
 14252 ;; Hardware stack levels required when called:    6
 14253 ;; This function calls:
 14254 ;;		_DelayOffPointSelect
 14255 ;;		_getDimmerLights_Status
 14256 ;;		_setDimmerLights_SwOff
 14257 ;;		_setDimmerLights_SwOn
 14258 ;;		_setProductData
 14259 ;; This function is called by:
 14260 ;;		_DelayOff_Main
 14261 ;; This function uses a non-reentrant model
 14262 ;;
 14263                           
 14264                           
 14265                           ;psect for function _DlyOff_Main
 14266  0B04                     _DlyOff_Main:	
 14267                           
 14268                           ;incstack = 0
 14269                           ; Regs used in _DlyOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14270                           ;DlyOff_Main@sw stored from wreg
 14271  0B04  0020               	movlb	0	; select bank0
 14272  0B05  00DF               	movwf	DlyOff_Main@sw
 14273                           
 14274                           ;DelayOff_B1.c: 63: DelayOffPointSelect(sw);
 14275  0B06  085F               	movf	DlyOff_Main@sw,w
 14276  0B07  3192  2265  318B   	fcall	_DelayOffPointSelect
 14277                           
 14278                           ;DelayOff_B1.c: 64: if (DelayOff->GO == 1) {
 14279  0B0A  0020               	movlb	0	; select bank0
 14280  0B0B  086A               	movf	_DelayOff,w
 14281  0B0C  0086               	movwf	6
 14282  0B0D  0187               	clrf	7
 14283  0B0E  1C81               	btfss	1,1
 14284  0B0F  0008               	return
 14285                           
 14286                           ;DelayOff_B1.c: 65: DelayOff->SecondTime++;
 14287  0B10  086A               	movf	_DelayOff,w
 14288  0B11  3E02               	addlw	2
 14289  0B12  0086               	movwf	6
 14290  0B13  0187               	clrf	7
 14291  0B14  3001               	movlw	1
 14292  0B15  0781               	addwf	1,f
 14293  0B16  3141               	addfsr 1,1
 14294  0B17  1803               	skipnc
 14295  0B18  0A81               	incf	1,f
 14296                           
 14297                           ;DelayOff_B1.c: 66: if (DelayOff->SecondTime >= (60000-10000)/20) {
 14298  0B19  086A               	movf	_DelayOff,w
 14299  0B1A  3E02               	addlw	2
 14300  0B1B  0086               	movwf	6
 14301  0B1C  0187               	clrf	7
 14302  0B1D  3F40               	moviw [0]fsr1
 14303  0B1E  00DD               	movwf	??_DlyOff_Main
 14304  0B1F  3F41               	moviw [1]fsr1
 14305  0B20  00DE               	movwf	??_DlyOff_Main+1
 14306  0B21  3009               	movlw	9
 14307  0B22  025E               	subwf	??_DlyOff_Main+1,w
 14308  0B23  30C4               	movlw	196
 14309  0B24  1903               	skipnz
 14310  0B25  025D               	subwf	??_DlyOff_Main,w
 14311  0B26  1C03               	skipc
 14312  0B27  0008               	return
 14313                           
 14314                           ;DelayOff_B1.c: 67: DelayOff->SecondTime = 0;
 14315  0B28  086A               	movf	_DelayOff,w
 14316  0B29  3E02               	addlw	2
 14317  0B2A  0086               	movwf	6
 14318  0B2B  0187               	clrf	7
 14319  0B2C  3000               	movlw	0
 14320  0B2D  3FC0               	movwi [0]fsr1
 14321  0B2E  3FC1               	movwi [1]fsr1
 14322                           
 14323                           ;DelayOff_B1.c: 68: DelayOff->MinuteTime++;
 14324  0B2F  3001               	movlw	1
 14325  0B30  00DD               	movwf	??_DlyOff_Main
 14326  0B31  086A               	movf	_DelayOff,w
 14327  0B32  3E04               	addlw	4
 14328  0B33  0086               	movwf	6
 14329  0B34  0187               	clrf	7
 14330  0B35  085D               	movf	??_DlyOff_Main,w
 14331  0B36  0781               	addwf	1,f
 14332                           
 14333                           ;DelayOff_B1.c: 69: if (DelayOff->MinuteTime >= DelayOff->Value) {
 14334  0B37  086A               	movf	_DelayOff,w
 14335  0B38  3E04               	addlw	4
 14336  0B39  0086               	movwf	6
 14337  0B3A  0187               	clrf	7
 14338  0B3B  0A6A               	incf	_DelayOff,w
 14339  0B3C  0084               	movwf	4
 14340  0B3D  0185               	clrf	5
 14341  0B3E  0800               	movf	0,w
 14342  0B3F  0201               	subwf	1,w
 14343  0B40  1C03               	skipc
 14344  0B41  0008               	return
 14345                           
 14346                           ;DelayOff_B1.c: 70: DelayOff->MinuteTime = 0;
 14347  0B42  086A               	movf	_DelayOff,w
 14348  0B43  3E04               	addlw	4
 14349  0B44  0086               	movwf	6
 14350  0B45  0187               	clrf	7
 14351  0B46  0181               	clrf	1
 14352                           
 14353                           ;DelayOff_B1.c: 71: DelayOff->GO = 0;
 14354  0B47  086A               	movf	_DelayOff,w
 14355  0B48  0086               	movwf	6
 14356  0B49  0187               	clrf	7
 14357  0B4A  1081               	bcf	1,1
 14358                           
 14359                           ;DelayOff_B1.c: 75: if (getDimmerLights_Status(sw) == 1) {
 14360  0B4B  085F               	movf	DlyOff_Main@sw,w
 14361  0B4C  3193  2335  318B   	fcall	_getDimmerLights_Status
 14362  0B4F  3A01               	xorlw	1
 14363  0B50  1D03               	skipz
 14364  0B51  2B5C               	goto	l256
 14365                           
 14366                           ;DelayOff_B1.c: 76: setDimmerLights_SwOn(sw);
 14367  0B52  0020               	movlb	0	; select bank0
 14368  0B53  085F               	movf	DlyOff_Main@sw,w
 14369  0B54  3188  20BE  318B   	fcall	_setDimmerLights_SwOn
 14370                           
 14371                           ;DelayOff_B1.c: 77: setDimmerLights_SwOff(sw);
 14372  0B57  0020               	movlb	0	; select bank0
 14373  0B58  085F               	movf	DlyOff_Main@sw,w
 14374  0B59  3197  2785  318B   	fcall	_setDimmerLights_SwOff
 14375  0B5C                     l256:	
 14376                           
 14377                           ;DelayOff_B1.c: 78: }
 14378                           ;DelayOff_B1.c: 80: setProductData(26 + sw, 0);
 14379  0B5C  0020               	movlb	0	; select bank0
 14380  0B5D  01DA               	clrf	setProductData@value
 14381  0B5E  085F               	movf	DlyOff_Main@sw,w
 14382  0B5F  3E1A               	addlw	26
 14383  0B60  3192  22A7         	fcall	_setProductData
 14384  0B62  0008               	return
 14385  0B63                     __end_of_DlyOff_Main:	
 14386                           
 14387                           	psect	text98
 14388  12A7                     __ptext98:	
 14389 ;; *************** function _setProductData *****************
 14390 ;; Defined at:
 14391 ;;		line 650 in file "../src/Main_B1.c"
 14392 ;; Parameters:    Size  Location     Type
 14393 ;;  address         1    wreg     unsigned char 
 14394 ;;  value           1   58[BANK0 ] unsigned char 
 14395 ;; Auto vars:     Size  Location     Type
 14396 ;;  address         1   60[BANK0 ] unsigned char 
 14397 ;; Return value:  Size  Location     Type
 14398 ;;		None               void
 14399 ;; Registers used:
 14400 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14401 ;; Tracked objects:
 14402 ;;		On entry : 0/0
 14403 ;;		On exit  : 0/0
 14404 ;;		Unchanged: 0/0
 14405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14406 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14407 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14408 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14409 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14410 ;;Total ram usage:        3 bytes
 14411 ;; Hardware stack levels used:    1
 14412 ;; Hardware stack levels required when called:    3
 14413 ;; This function calls:
 14414 ;;		Nothing
 14415 ;; This function is called by:
 14416 ;;		_DlyOff_Main
 14417 ;;		_setDelayOff_GO
 14418 ;;		_setDimmerLights_OnOff
 14419 ;;		_setDimmerLights_Dimming
 14420 ;;		_setTemp_Main
 14421 ;; This function uses a non-reentrant model
 14422 ;;
 14423                           
 14424                           
 14425                           ;psect for function _setProductData
 14426  12A7                     _setProductData:	
 14427                           
 14428                           ;incstack = 0
 14429                           ; Regs used in _setProductData: [wreg+fsr1l+fsr1h+status,2+status,0]
 14430                           ;setProductData@address stored from wreg
 14431  12A7  0020               	movlb	0	; select bank0
 14432  12A8  00DC               	movwf	setProductData@address
 14433                           
 14434                           ;Main_B1.c: 651: _product.Data[address] = value;
 14435  12A9  085A               	movf	setProductData@value,w
 14436  12AA  00DB               	movwf	??_setProductData
 14437  12AB  085C               	movf	setProductData@address,w
 14438  12AC  3EC5               	addlw	__product& (0+255)
 14439  12AD  0086               	movwf	6
 14440  12AE  3001               	movlw	1	; select bank3/4
 14441  12AF  0087               	movwf	7
 14442  12B0  085B               	movf	??_setProductData,w
 14443  12B1  0081               	movwf	1
 14444  12B2  0008               	return
 14445  12B3                     __end_of_setProductData:	
 14446                           
 14447                           	psect	text99
 14448  08BE                     __ptext99:	
 14449 ;; *************** function _setDimmerLights_SwOn *****************
 14450 ;; Defined at:
 14451 ;;		line 759 in file "../src/Dimmer_B1.c"
 14452 ;; Parameters:    Size  Location     Type
 14453 ;;  sw              1    wreg     unsigned char 
 14454 ;; Auto vars:     Size  Location     Type
 14455 ;;  sw              1    8[BANK0 ] unsigned char 
 14456 ;;  dimmingStatu    1    7[BANK0 ] unsigned char 
 14457 ;;  idle            1    6[BANK0 ] unsigned char 
 14458 ;; Return value:  Size  Location     Type
 14459 ;;		None               void
 14460 ;; Registers used:
 14461 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14462 ;; Tracked objects:
 14463 ;;		On entry : 0/0
 14464 ;;		On exit  : 0/0
 14465 ;;		Unchanged: 0/0
 14466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14468 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14469 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14470 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14471 ;;Total ram usage:        4 bytes
 14472 ;; Hardware stack levels used:    1
 14473 ;; Hardware stack levels required when called:    5
 14474 ;; This function calls:
 14475 ;;		_DimmerLights_SelectPointer
 14476 ;;		_getDimmerIntr_Dimming_Sw
 14477 ;;		_setBuz
 14478 ;; This function is called by:
 14479 ;;		_DlyOff_Main
 14480 ;;		_setSw_Main
 14481 ;; This function uses a non-reentrant model
 14482 ;;
 14483                           
 14484                           
 14485                           ;psect for function _setDimmerLights_SwOn
 14486  08BE                     _setDimmerLights_SwOn:	
 14487                           
 14488                           ;incstack = 0
 14489                           ; Regs used in _setDimmerLights_SwOn: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14490                           ;setDimmerLights_SwOn@sw stored from wreg
 14491  08BE  0020               	movlb	0	; select bank0
 14492  08BF  00A8               	movwf	setDimmerLights_SwOn@sw
 14493                           
 14494                           ;Dimmer_B1.c: 760: char idle = 0;
 14495  08C0  01A6               	clrf	setDimmerLights_SwOn@idle
 14496                           
 14497                           ;Dimmer_B1.c: 762: char dimmingStatus = 0;
 14498  08C1  01A7               	clrf	setDimmerLights_SwOn@dimmingStatus
 14499                           
 14500                           ;Dimmer_B1.c: 763: dimmingStatus = getDimmerIntr_Dimming_Sw(sw);
 14501  08C2  0828               	movf	setDimmerLights_SwOn@sw,w
 14502  08C3  3192  22E3  3188   	fcall	_getDimmerIntr_Dimming_Sw
 14503  08C6  00F9               	movwf	??_setDimmerLights_SwOn
 14504  08C7  0879               	movf	??_setDimmerLights_SwOn,w
 14505  08C8  0020               	movlb	0	; select bank0
 14506  08C9  00A7               	movwf	setDimmerLights_SwOn@dimmingStatus
 14507                           
 14508                           ;Dimmer_B1.c: 790: DimmerLights_SelectPointer(sw);
 14509  08CA  0828               	movf	setDimmerLights_SwOn@sw,w
 14510  08CB  3192  2270  3188   	fcall	_DimmerLights_SelectPointer
 14511                           
 14512                           ;Dimmer_B1.c: 791: if (idle == 0) {
 14513  08CE  0020               	movlb	0	; select bank0
 14514  08CF  08A6               	movf	setDimmerLights_SwOn@idle,f
 14515  08D0  1D03               	skipz
 14516  08D1  0008               	return
 14517                           
 14518                           ;Dimmer_B1.c: 793: if (dimmingStatus == 0) {
 14519  08D2  08A7               	movf	setDimmerLights_SwOn@dimmingStatus,f
 14520  08D3  1D03               	skipz
 14521  08D4  28F8               	goto	l6678
 14522                           
 14523                           ;Dimmer_B1.c: 794: DimmerLights->SwFlag = 1;
 14524  08D5  086B               	movf	_DimmerLights,w
 14525  08D6  0086               	movwf	6
 14526  08D7  3001               	movlw	1	; select bank2/3
 14527  08D8  0087               	movwf	7
 14528  08D9  1401               	bsf	1,0
 14529                           
 14530                           ;Dimmer_B1.c: 795: if (DimmerLights->Status == 0) {
 14531  08DA  0A6B               	incf	_DimmerLights,w
 14532  08DB  0086               	movwf	6
 14533  08DC  3001               	movlw	1	; select bank2/3
 14534  08DD  0087               	movwf	7
 14535  08DE  1801               	btfsc	1,0
 14536  08DF  28F2               	goto	l6676
 14537                           
 14538                           ;Dimmer_B1.c: 796: DimmerLights->Status = 1;
 14539  08E0  0A6B               	incf	_DimmerLights,w
 14540  08E1  0086               	movwf	6
 14541  08E2  3001               	movlw	1	; select bank2/3
 14542  08E3  0087               	movwf	7
 14543  08E4  1401               	bsf	1,0
 14544                           
 14545                           ;Dimmer_B1.c: 802: DimmerLights->Phase = 1;
 14546  08E5  086B               	movf	_DimmerLights,w
 14547  08E6  3E02               	addlw	2
 14548  08E7  0086               	movwf	6
 14549  08E8  3001               	movlw	1	; select bank2/3
 14550  08E9  0087               	movwf	7
 14551  08EA  1401               	bsf	1,0
 14552                           
 14553                           ;Dimmer_B1.c: 803: DimmerLights->PhaseSwitch = 1;
 14554  08EB  086B               	movf	_DimmerLights,w
 14555  08EC  3E02               	addlw	2
 14556  08ED  0086               	movwf	6
 14557  08EE  3001               	movlw	1	; select bank2/3
 14558  08EF  0087               	movwf	7
 14559  08F0  1501               	bsf	1,2
 14560                           
 14561                           ;Dimmer_B1.c: 807: } else {
 14562  08F1  2902               	goto	l6680
 14563  08F2                     l6676:	
 14564                           
 14565                           ;Dimmer_B1.c: 808: DimmerLights->Status = 0;
 14566  08F2  0A6B               	incf	_DimmerLights,w
 14567  08F3  0086               	movwf	6
 14568  08F4  3001               	movlw	1	; select bank2/3
 14569  08F5  0087               	movwf	7
 14570  08F6  1001               	bcf	1,0
 14571                           
 14572                           ;Dimmer_B1.c: 809: }
 14573                           ;Dimmer_B1.c: 810: } else {
 14574  08F7  2902               	goto	l6680
 14575  08F8                     l6678:	
 14576                           
 14577                           ;Dimmer_B1.c: 811: DimmerLights->DimmingTrigger = 1;
 14578  08F8  086B               	movf	_DimmerLights,w
 14579  08F9  0086               	movwf	6
 14580  08FA  3001               	movlw	1	; select bank2/3
 14581  08FB  0087               	movwf	7
 14582  08FC  1601               	bsf	1,4
 14583                           
 14584                           ;Dimmer_B1.c: 812: DimmerLights->DimmingSwitch = 0;
 14585  08FD  086B               	movf	_DimmerLights,w
 14586  08FE  0086               	movwf	6
 14587  08FF  3001               	movlw	1	; select bank2/3
 14588  0900  0087               	movwf	7
 14589  0901  1281               	bcf	1,5
 14590  0902                     l6680:	
 14591                           
 14592                           ;Dimmer_B1.c: 813: }
 14593                           ;Dimmer_B1.c: 814: setBuz(1, 100);
 14594  0902  3064               	movlw	100
 14595  0903  00A4               	movwf	setBuz@time
 14596  0904  3000               	movlw	0
 14597  0905  00A5               	movwf	setBuz@time+1
 14598  0906  3001               	movlw	1
 14599  0907  3189  215C         	fcall	_setBuz
 14600  0909  0008               	return
 14601  090A                     __end_of_setDimmerLights_SwOn:	
 14602                           
 14603                           	psect	text100
 14604  095C                     __ptext100:	
 14605 ;; *************** function _setBuz *****************
 14606 ;; Defined at:
 14607 ;;		line 22 in file "../src/Buzzer_B1.c"
 14608 ;; Parameters:    Size  Location     Type
 14609 ;;  count           1    wreg     unsigned char 
 14610 ;;  time            2    4[BANK0 ] int 
 14611 ;; Auto vars:     Size  Location     Type
 14612 ;;  count           1    8[COMMON] unsigned char 
 14613 ;; Return value:  Size  Location     Type
 14614 ;;		None               void
 14615 ;; Registers used:
 14616 ;;		wreg, status,2, status,0, pclath, cstack
 14617 ;; Tracked objects:
 14618 ;;		On entry : 0/0
 14619 ;;		On exit  : 0/0
 14620 ;;		Unchanged: 0/0
 14621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14622 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14623 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14624 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14625 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14626 ;;Total ram usage:        4 bytes
 14627 ;; Hardware stack levels used:    1
 14628 ;; Hardware stack levels required when called:    4
 14629 ;; This function calls:
 14630 ;;		___awdiv
 14631 ;; This function is called by:
 14632 ;;		_setDimmerLights_SwOn
 14633 ;;		_setDimmerLights_Dimming
 14634 ;;		_my_MainTimer
 14635 ;;		_Exception_Main
 14636 ;;		_setTemp_Main
 14637 ;; This function uses a non-reentrant model
 14638 ;;
 14639                           
 14640                           
 14641                           ;psect for function _setBuz
 14642  095C                     _setBuz:	
 14643                           
 14644                           ;incstack = 0
 14645                           ; Regs used in _setBuz: [wreg+status,2+status,0+pclath+cstack]
 14646                           ;setBuz@count stored from wreg
 14647  095C  00F8               	movwf	setBuz@count
 14648                           
 14649                           ;Buzzer_B1.c: 23: time /= 20;
 14650  095D  3014               	movlw	20
 14651  095E  00F2               	movwf	___awdiv@divisor
 14652  095F  3000               	movlw	0
 14653  0960  00F3               	movwf	___awdiv@divisor+1
 14654  0961  0020               	movlb	0	; select bank0
 14655  0962  0825               	movf	setBuz@time+1,w
 14656  0963  01F5               	clrf	___awdiv@dividend+1
 14657  0964  07F5               	addwf	___awdiv@dividend+1,f
 14658  0965  0824               	movf	setBuz@time,w
 14659  0966  01F4               	clrf	___awdiv@dividend
 14660  0967  07F4               	addwf	___awdiv@dividend,f
 14661  0968  318A  2202  3189   	fcall	___awdiv
 14662  096B  0873               	movf	?___awdiv+1,w
 14663  096C  0020               	movlb	0	; select bank0
 14664  096D  01A5               	clrf	setBuz@time+1
 14665  096E  07A5               	addwf	setBuz@time+1,f
 14666  096F  0872               	movf	?___awdiv,w
 14667  0970  01A4               	clrf	setBuz@time
 14668  0971  07A4               	addwf	setBuz@time,f
 14669                           
 14670                           ;Buzzer_B1.c: 24: if (Buz1.Enable == 1) {
 14671  0972  0021               	movlb	1	; select bank1
 14672  0973  1C3D               	btfss	_Buz1^(0+128),0
 14673  0974  0008               	return
 14674                           
 14675                           ;Buzzer_B1.c: 25: if (Buz1.GO == 0) {
 14676  0975  18BD               	btfsc	_Buz1^(0+128),1
 14677  0976  298B               	goto	l60
 14678                           
 14679                           ;Buzzer_B1.c: 26: Buz1.GO = 1;
 14680  0977  14BD               	bsf	_Buz1^(0+128),1
 14681                           
 14682                           ;Buzzer_B1.c: 27: Buz1.Counter = 0;
 14683  0978  01BE               	clrf	(_Buz1^(0+128)+1)
 14684  0979  01BF               	clrf	((_Buz1+1)^(0+128)+1)
 14685                           
 14686                           ;Buzzer_B1.c: 28: Buz1.Count = count;
 14687  097A  0878               	movf	setBuz@count,w
 14688  097B  00F7               	movwf	??_setBuz
 14689  097C  0877               	movf	??_setBuz,w
 14690  097D  00C0               	movwf	(_Buz1^(0+128)+3)
 14691                           
 14692                           ;Buzzer_B1.c: 29: Buz1.TimeValue = time;
 14693  097E  0020               	movlb	0	; select bank0
 14694  097F  0825               	movf	setBuz@time+1,w
 14695  0980  0021               	movlb	1	; select bank1
 14696  0981  01C4               	clrf	((_Buz1+1)^(0+128)+6)
 14697  0982  07C4               	addwf	((_Buz1+1)^(0+128)+6),f
 14698  0983  0020               	movlb	0	; select bank0
 14699  0984  0824               	movf	setBuz@time,w
 14700  0985  0021               	movlb	1	; select bank1
 14701  0986  01C3               	clrf	(_Buz1^(0+128)+6)
 14702  0987  07C3               	addwf	(_Buz1^(0+128)+6),f
 14703                           
 14704                           ;Buzzer_B1.c: 30: RB3 = 1;
 14705  0988  0020               	movlb	0	; select bank0
 14706  0989  158D               	bsf	13,3	;volatile
 14707                           
 14708                           ;Buzzer_B1.c: 31: } else {
 14709  098A  0008               	return
 14710  098B                     l60:	
 14711                           
 14712                           ;Buzzer_B1.c: 32: if (Buz1.BufferStatus1 == 0) {
 14713  098B  19BD               	btfsc	_Buz1^(0+128),3
 14714  098C  299D               	goto	l62
 14715                           
 14716                           ;Buzzer_B1.c: 33: Buz1.BufferStatus1 = 1;
 14717  098D  15BD               	bsf	_Buz1^(0+128),3
 14718                           
 14719                           ;Buzzer_B1.c: 34: Buz1.CountBuffer1 = count;
 14720  098E  0878               	movf	setBuz@count,w
 14721  098F  00F7               	movwf	??_setBuz
 14722  0990  0877               	movf	??_setBuz,w
 14723  0991  00C1               	movwf	(_Buz1^(0+128)+4)
 14724                           
 14725                           ;Buzzer_B1.c: 35: Buz1.TimeValueBuffer1 = time;
 14726  0992  0020               	movlb	0	; select bank0
 14727  0993  0825               	movf	setBuz@time+1,w
 14728  0994  0021               	movlb	1	; select bank1
 14729  0995  01C6               	clrf	((_Buz1+1)^(0+128)+8)
 14730  0996  07C6               	addwf	((_Buz1+1)^(0+128)+8),f
 14731  0997  0020               	movlb	0	; select bank0
 14732  0998  0824               	movf	setBuz@time,w
 14733  0999  0021               	movlb	1	; select bank1
 14734  099A  01C5               	clrf	(_Buz1^(0+128)+8)
 14735  099B  07C5               	addwf	(_Buz1^(0+128)+8),f
 14736                           
 14737                           ;Buzzer_B1.c: 36: } else if (Buz1.BufferStatus2 == 0) {
 14738  099C  0008               	return
 14739  099D                     l62:	
 14740  099D  1A3D               	btfsc	_Buz1^(0+128),4
 14741  099E  0008               	return
 14742                           
 14743                           ;Buzzer_B1.c: 37: Buz1.BufferStatus2 = 1;
 14744  099F  163D               	bsf	_Buz1^(0+128),4
 14745                           
 14746                           ;Buzzer_B1.c: 38: Buz1.CountBuffer2 = count;
 14747  09A0  0878               	movf	setBuz@count,w
 14748  09A1  00F7               	movwf	??_setBuz
 14749  09A2  0877               	movf	??_setBuz,w
 14750  09A3  00C2               	movwf	(_Buz1^(0+128)+5)
 14751                           
 14752                           ;Buzzer_B1.c: 39: Buz1.TimeValueBuffer2 = time;
 14753  09A4  0020               	movlb	0	; select bank0
 14754  09A5  0825               	movf	setBuz@time+1,w
 14755  09A6  0021               	movlb	1	; select bank1
 14756  09A7  01C8               	clrf	((_Buz1+1)^(0+128)+10)
 14757  09A8  07C8               	addwf	((_Buz1+1)^(0+128)+10),f
 14758  09A9  0020               	movlb	0	; select bank0
 14759  09AA  0824               	movf	setBuz@time,w
 14760  09AB  0021               	movlb	1	; select bank1
 14761  09AC  01C7               	clrf	(_Buz1^(0+128)+10)
 14762  09AD  07C7               	addwf	(_Buz1^(0+128)+10),f
 14763  09AE  0008               	return
 14764  09AF                     __end_of_setBuz:	
 14765                           
 14766                           	psect	text101
 14767  0A02                     __ptext101:	
 14768 ;; *************** function ___awdiv *****************
 14769 ;; Defined at:
 14770 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
 14771 ;; Parameters:    Size  Location     Type
 14772 ;;  divisor         2    2[COMMON] int 
 14773 ;;  dividend        2    4[COMMON] int 
 14774 ;; Auto vars:     Size  Location     Type
 14775 ;;  quotient        2    2[BANK0 ] int 
 14776 ;;  sign            1    1[BANK0 ] unsigned char 
 14777 ;;  counter         1    0[BANK0 ] unsigned char 
 14778 ;; Return value:  Size  Location     Type
 14779 ;;                  2    2[COMMON] int 
 14780 ;; Registers used:
 14781 ;;		wreg, status,2, status,0
 14782 ;; Tracked objects:
 14783 ;;		On entry : 0/0
 14784 ;;		On exit  : 0/0
 14785 ;;		Unchanged: 0/0
 14786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14787 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14788 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14789 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14790 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14791 ;;Total ram usage:        9 bytes
 14792 ;; Hardware stack levels used:    1
 14793 ;; Hardware stack levels required when called:    3
 14794 ;; This function calls:
 14795 ;;		Nothing
 14796 ;; This function is called by:
 14797 ;;		_setBuz
 14798 ;; This function uses a non-reentrant model
 14799 ;;
 14800                           
 14801                           
 14802                           ;psect for function ___awdiv
 14803  0A02                     ___awdiv:	
 14804                           
 14805                           ;incstack = 0
 14806                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 14807  0A02  0020               	movlb	0	; select bank0
 14808  0A03  01A1               	clrf	___awdiv@sign
 14809  0A04  1FF3               	btfss	___awdiv@divisor+1,7
 14810  0A05  2A0D               	goto	l6546
 14811  0A06  09F2               	comf	___awdiv@divisor,f
 14812  0A07  09F3               	comf	___awdiv@divisor+1,f
 14813  0A08  0AF2               	incf	___awdiv@divisor,f
 14814  0A09  1903               	skipnz
 14815  0A0A  0AF3               	incf	___awdiv@divisor+1,f
 14816  0A0B  01A1               	clrf	___awdiv@sign
 14817  0A0C  0AA1               	incf	___awdiv@sign,f
 14818  0A0D                     l6546:	
 14819  0A0D  1FF5               	btfss	___awdiv@dividend+1,7
 14820  0A0E  2A18               	goto	l6552
 14821  0A0F  09F4               	comf	___awdiv@dividend,f
 14822  0A10  09F5               	comf	___awdiv@dividend+1,f
 14823  0A11  0AF4               	incf	___awdiv@dividend,f
 14824  0A12  1903               	skipnz
 14825  0A13  0AF5               	incf	___awdiv@dividend+1,f
 14826  0A14  3001               	movlw	1
 14827  0A15  00F6               	movwf	??___awdiv
 14828  0A16  0876               	movf	??___awdiv,w
 14829  0A17  06A1               	xorwf	___awdiv@sign,f
 14830  0A18                     l6552:	
 14831  0A18  01A2               	clrf	___awdiv@quotient
 14832  0A19  01A3               	clrf	___awdiv@quotient+1
 14833  0A1A  0873               	movf	___awdiv@divisor+1,w
 14834  0A1B  0472               	iorwf	___awdiv@divisor,w
 14835  0A1C  1903               	skipnz
 14836  0A1D  2A47               	goto	l6574
 14837  0A1E  01A0               	clrf	___awdiv@counter
 14838  0A1F  0AA0               	incf	___awdiv@counter,f
 14839  0A20                     l6562:	
 14840  0A20  1BF3               	btfsc	___awdiv@divisor+1,7
 14841  0A21  2A2C               	goto	l6564
 14842  0A22  3001               	movlw	1
 14843  0A23                     u7225:	
 14844  0A23  35F2               	lslf	___awdiv@divisor,f
 14845  0A24  0DF3               	rlf	___awdiv@divisor+1,f
 14846  0A25  0B89               	decfsz	9,f
 14847  0A26  2A23               	goto	u7225
 14848  0A27  3001               	movlw	1
 14849  0A28  00F6               	movwf	??___awdiv
 14850  0A29  0876               	movf	??___awdiv,w
 14851  0A2A  07A0               	addwf	___awdiv@counter,f
 14852  0A2B  2A20               	goto	l6562
 14853  0A2C                     l6564:	
 14854  0A2C  3001               	movlw	1
 14855  0A2D                     u7245:	
 14856  0A2D  35A2               	lslf	___awdiv@quotient,f
 14857  0A2E  0DA3               	rlf	___awdiv@quotient+1,f
 14858  0A2F  0B89               	decfsz	9,f
 14859  0A30  2A2D               	goto	u7245
 14860  0A31  0873               	movf	___awdiv@divisor+1,w
 14861  0A32  0275               	subwf	___awdiv@dividend+1,w
 14862  0A33  1D03               	skipz
 14863  0A34  2A37               	goto	u7255
 14864  0A35  0872               	movf	___awdiv@divisor,w
 14865  0A36  0274               	subwf	___awdiv@dividend,w
 14866  0A37                     u7255:	
 14867  0A37  1C03               	skipc
 14868  0A38  2A3E               	goto	l6570
 14869  0A39  0872               	movf	___awdiv@divisor,w
 14870  0A3A  02F4               	subwf	___awdiv@dividend,f
 14871  0A3B  0873               	movf	___awdiv@divisor+1,w
 14872  0A3C  3BF5               	subwfb	___awdiv@dividend+1,f
 14873  0A3D  1422               	bsf	___awdiv@quotient,0
 14874  0A3E                     l6570:	
 14875  0A3E  3001               	movlw	1
 14876  0A3F                     u7265:	
 14877  0A3F  36F3               	lsrf	___awdiv@divisor+1,f
 14878  0A40  0CF2               	rrf	___awdiv@divisor,f
 14879  0A41  0B89               	decfsz	9,f
 14880  0A42  2A3F               	goto	u7265
 14881  0A43  3001               	movlw	1
 14882  0A44  02A0               	subwf	___awdiv@counter,f
 14883  0A45  1D03               	btfss	3,2
 14884  0A46  2A2C               	goto	l6564
 14885  0A47                     l6574:	
 14886  0A47  0821               	movf	___awdiv@sign,w
 14887  0A48  1903               	btfsc	3,2
 14888  0A49  2A4F               	goto	l6578
 14889  0A4A  09A2               	comf	___awdiv@quotient,f
 14890  0A4B  09A3               	comf	___awdiv@quotient+1,f
 14891  0A4C  0AA2               	incf	___awdiv@quotient,f
 14892  0A4D  1903               	skipnz
 14893  0A4E  0AA3               	incf	___awdiv@quotient+1,f
 14894  0A4F                     l6578:	
 14895  0A4F  0823               	movf	___awdiv@quotient+1,w
 14896  0A50  01F3               	clrf	?___awdiv+1
 14897  0A51  07F3               	addwf	?___awdiv+1,f
 14898  0A52  0822               	movf	___awdiv@quotient,w
 14899  0A53  01F2               	clrf	?___awdiv
 14900  0A54  07F2               	addwf	?___awdiv,f
 14901  0A55  0008               	return
 14902  0A56                     __end_of___awdiv:	
 14903                           
 14904                           	psect	text102
 14905  12E3                     __ptext102:	
 14906 ;; *************** function _getDimmerIntr_Dimming_Sw *****************
 14907 ;; Defined at:
 14908 ;;		line 269 in file "../src/Dimmer_B1.c"
 14909 ;; Parameters:    Size  Location     Type
 14910 ;;  lights          1    wreg     unsigned char 
 14911 ;; Auto vars:     Size  Location     Type
 14912 ;;  lights          1    2[COMMON] unsigned char 
 14913 ;;  status          1    3[COMMON] unsigned char 
 14914 ;; Return value:  Size  Location     Type
 14915 ;;                  1    wreg      unsigned char 
 14916 ;; Registers used:
 14917 ;;		wreg, status,2
 14918 ;; Tracked objects:
 14919 ;;		On entry : 0/0
 14920 ;;		On exit  : 0/0
 14921 ;;		Unchanged: 0/0
 14922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14924 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14926 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14927 ;;Total ram usage:        2 bytes
 14928 ;; Hardware stack levels used:    1
 14929 ;; Hardware stack levels required when called:    3
 14930 ;; This function calls:
 14931 ;;		Nothing
 14932 ;; This function is called by:
 14933 ;;		_setDimmerLights_SwOn
 14934 ;;		_setRF_AdjControl
 14935 ;; This function uses a non-reentrant model
 14936 ;;
 14937                           
 14938                           
 14939                           ;psect for function _getDimmerIntr_Dimming_Sw
 14940  12E3                     _getDimmerIntr_Dimming_Sw:	
 14941                           
 14942                           ;incstack = 0
 14943                           ; Regs used in _getDimmerIntr_Dimming_Sw: [wreg+status,2]
 14944                           ;getDimmerIntr_Dimming_Sw@lights stored from wreg
 14945  12E3  00F2               	movwf	getDimmerIntr_Dimming_Sw@lights
 14946                           
 14947                           ;Dimmer_B1.c: 270: char status = 0;
 14948  12E4  01F3               	clrf	getDimmerIntr_Dimming_Sw@status
 14949                           
 14950                           ;Dimmer_B1.c: 272: if (lights == 1) {
 14951  12E5  0872               	movf	getDimmerIntr_Dimming_Sw@lights,w
 14952  12E6  3A01               	xorlw	1
 14953  12E7  1D03               	skipz
 14954  12E8  2AEE               	goto	l4896
 14955                           
 14956                           ;Dimmer_B1.c: 273: status = DimmerIntr1.Dimming_Sw == 1 ? 1 : 0;
 14957  12E9  3000               	movlw	0
 14958  12EA  0021               	movlb	1	; select bank1
 14959  12EB  1A20               	btfsc	_DimmerIntr1^(0+128),4
 14960  12EC  3001               	movlw	1
 14961  12ED  00F3               	movwf	getDimmerIntr_Dimming_Sw@status
 14962  12EE                     l4896:	
 14963                           
 14964                           ;Dimmer_B1.c: 274: }
 14965                           ;Dimmer_B1.c: 287: return status;
 14966  12EE  0873               	movf	getDimmerIntr_Dimming_Sw@status,w
 14967  12EF  0008               	return
 14968  12F0                     __end_of_getDimmerIntr_Dimming_Sw:	
 14969                           
 14970                           	psect	text103
 14971  1785                     __ptext103:	
 14972 ;; *************** function _setDimmerLights_SwOff *****************
 14973 ;; Defined at:
 14974 ;;		line 819 in file "../src/Dimmer_B1.c"
 14975 ;; Parameters:    Size  Location     Type
 14976 ;;  sw              1    wreg     unsigned char 
 14977 ;; Auto vars:     Size  Location     Type
 14978 ;;  sw              1    4[COMMON] unsigned char 
 14979 ;; Return value:  Size  Location     Type
 14980 ;;		None               void
 14981 ;; Registers used:
 14982 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14983 ;; Tracked objects:
 14984 ;;		On entry : 0/0
 14985 ;;		On exit  : 0/0
 14986 ;;		Unchanged: 0/0
 14987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14989 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14991 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14992 ;;Total ram usage:        1 bytes
 14993 ;; Hardware stack levels used:    1
 14994 ;; Hardware stack levels required when called:    4
 14995 ;; This function calls:
 14996 ;;		_DimmerLights_SelectPointer
 14997 ;; This function is called by:
 14998 ;;		_DlyOff_Main
 14999 ;;		_Exception_Main
 15000 ;;		_setSw_Main
 15001 ;; This function uses a non-reentrant model
 15002 ;;
 15003                           
 15004                           
 15005                           ;psect for function _setDimmerLights_SwOff
 15006  1785                     _setDimmerLights_SwOff:	
 15007                           
 15008                           ;incstack = 0
 15009                           ; Regs used in _setDimmerLights_SwOff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15010                           ;setDimmerLights_SwOff@sw stored from wreg
 15011  1785  00F4               	movwf	setDimmerLights_SwOff@sw
 15012                           
 15013                           ;Dimmer_B1.c: 821: DimmerLights_SelectPointer(sw);
 15014  1786  0874               	movf	setDimmerLights_SwOff@sw,w
 15015  1787  3192  2270  3197   	fcall	_DimmerLights_SelectPointer
 15016                           
 15017                           ;Dimmer_B1.c: 823: if (DimmerLights->SwFlag == 1) {
 15018  178A  0020               	movlb	0	; select bank0
 15019  178B  086B               	movf	_DimmerLights,w
 15020  178C  0086               	movwf	6
 15021  178D  3001               	movlw	1	; select bank2/3
 15022  178E  0087               	movwf	7
 15023  178F  1C01               	btfss	1,0
 15024  1790  0008               	return
 15025                           
 15026                           ;Dimmer_B1.c: 824: DimmerLights->SwFlag = 0;
 15027  1791  086B               	movf	_DimmerLights,w
 15028  1792  0086               	movwf	6
 15029  1793  3001               	movlw	1	; select bank2/3
 15030  1794  0087               	movwf	7
 15031  1795  1001               	bcf	1,0
 15032                           
 15033                           ;Dimmer_B1.c: 825: if (DimmerLights->Status == 1) {
 15034  1796  0A6B               	incf	_DimmerLights,w
 15035  1797  0086               	movwf	6
 15036  1798  3001               	movlw	1	; select bank2/3
 15037  1799  0087               	movwf	7
 15038  179A  1C01               	btfss	1,0
 15039  179B  2FB2               	goto	l5020
 15040                           
 15041                           ;Dimmer_B1.c: 826: if (DimmerLights->DimmingSwFlag == 1) {
 15042  179C  086B               	movf	_DimmerLights,w
 15043  179D  0086               	movwf	6
 15044  179E  3001               	movlw	1	; select bank2/3
 15045  179F  0087               	movwf	7
 15046  17A0  1D81               	btfss	1,3
 15047  17A1  0008               	return
 15048                           
 15049                           ;Dimmer_B1.c: 827: DimmerLights->DimmingSwFlag = 0;
 15050  17A2  086B               	movf	_DimmerLights,w
 15051  17A3  0086               	movwf	6
 15052  17A4  3001               	movlw	1	; select bank2/3
 15053  17A5  0087               	movwf	7
 15054  17A6  1181               	bcf	1,3
 15055                           
 15056                           ;Dimmer_B1.c: 829: DimmerLights->DimmingTrigger = 1;
 15057  17A7  086B               	movf	_DimmerLights,w
 15058  17A8  0086               	movwf	6
 15059  17A9  3001               	movlw	1	; select bank2/3
 15060  17AA  0087               	movwf	7
 15061  17AB  1601               	bsf	1,4
 15062                           
 15063                           ;Dimmer_B1.c: 830: DimmerLights->DimmingSwitch = 0;
 15064  17AC  086B               	movf	_DimmerLights,w
 15065  17AD  0086               	movwf	6
 15066  17AE  3001               	movlw	1	; select bank2/3
 15067  17AF  0087               	movwf	7
 15068  17B0  1281               	bcf	1,5
 15069                           
 15070                           ;Dimmer_B1.c: 831: }
 15071                           ;Dimmer_B1.c: 832: } else {
 15072  17B1  0008               	return
 15073  17B2                     l5020:	
 15074                           
 15075                           ;Dimmer_B1.c: 838: DimmerLights->Phase = 1;
 15076  17B2  086B               	movf	_DimmerLights,w
 15077  17B3  3E02               	addlw	2
 15078  17B4  0086               	movwf	6
 15079  17B5  3001               	movlw	1	; select bank2/3
 15080  17B6  0087               	movwf	7
 15081  17B7  1401               	bsf	1,0
 15082                           
 15083                           ;Dimmer_B1.c: 839: DimmerLights->PhaseSwitch = 0;
 15084  17B8  086B               	movf	_DimmerLights,w
 15085  17B9  3E02               	addlw	2
 15086  17BA  0086               	movwf	6
 15087  17BB  3001               	movlw	1	; select bank2/3
 15088  17BC  0087               	movwf	7
 15089  17BD  1101               	bcf	1,2
 15090  17BE  0008               	return
 15091  17BF                     __end_of_setDimmerLights_SwOff:	
 15092                           
 15093                           	psect	text104
 15094  1335                     __ptext104:	
 15095 ;; *************** function _getDimmerLights_Status *****************
 15096 ;; Defined at:
 15097 ;;		line 1266 in file "../src/Dimmer_B1.c"
 15098 ;; Parameters:    Size  Location     Type
 15099 ;;  lights          1    wreg     unsigned char 
 15100 ;; Auto vars:     Size  Location     Type
 15101 ;;  lights          1    4[COMMON] unsigned char 
 15102 ;;  status          1    5[COMMON] unsigned char 
 15103 ;; Return value:  Size  Location     Type
 15104 ;;                  1    wreg      unsigned char 
 15105 ;; Registers used:
 15106 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15107 ;; Tracked objects:
 15108 ;;		On entry : 0/0
 15109 ;;		On exit  : 0/0
 15110 ;;		Unchanged: 0/0
 15111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15113 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15115 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15116 ;;Total ram usage:        2 bytes
 15117 ;; Hardware stack levels used:    1
 15118 ;; Hardware stack levels required when called:    4
 15119 ;; This function calls:
 15120 ;;		_DimmerLights_SelectPointer
 15121 ;; This function is called by:
 15122 ;;		_DlyOff_Main
 15123 ;;		_DimmerLights_AssignationDimming
 15124 ;;		_Exception_Main
 15125 ;;		_setRF_AdjControl
 15126 ;; This function uses a non-reentrant model
 15127 ;;
 15128                           
 15129                           
 15130                           ;psect for function _getDimmerLights_Status
 15131  1335                     _getDimmerLights_Status:	
 15132                           
 15133                           ;incstack = 0
 15134                           ; Regs used in _getDimmerLights_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 15135                           ;getDimmerLights_Status@lights stored from wreg
 15136  1335  00F4               	movwf	getDimmerLights_Status@lights
 15137                           
 15138                           ;Dimmer_B1.c: 1267: DimmerLights_SelectPointer(lights);
 15139  1336  0874               	movf	getDimmerLights_Status@lights,w
 15140  1337  3192  2270         	fcall	_DimmerLights_SelectPointer
 15141                           
 15142                           ;Dimmer_B1.c: 1268: char status = DimmerLights->Status == 1 ? 1 : 0;
 15143  1339  0020               	movlb	0	; select bank0
 15144  133A  0A6B               	incf	_DimmerLights,w
 15145  133B  0086               	movwf	6
 15146  133C  3001               	movlw	1	; select bank2/3
 15147  133D  0087               	movwf	7
 15148  133E  3000               	movlw	0
 15149  133F  1801               	btfsc	1,0
 15150  1340  3001               	movlw	1
 15151  1341  00F5               	movwf	getDimmerLights_Status@status
 15152                           
 15153                           ;Dimmer_B1.c: 1269: return status;
 15154  1342  0875               	movf	getDimmerLights_Status@status,w
 15155  1343  0008               	return
 15156  1344                     __end_of_getDimmerLights_Status:	
 15157                           
 15158                           	psect	text105
 15159  1270                     __ptext105:	
 15160 ;; *************** function _DimmerLights_SelectPointer *****************
 15161 ;; Defined at:
 15162 ;;		line 682 in file "../src/Dimmer_B1.c"
 15163 ;; Parameters:    Size  Location     Type
 15164 ;;  lights          1    wreg     unsigned char 
 15165 ;; Auto vars:     Size  Location     Type
 15166 ;;  lights          1    3[COMMON] unsigned char 
 15167 ;; Return value:  Size  Location     Type
 15168 ;;		None               void
 15169 ;; Registers used:
 15170 ;;		wreg
 15171 ;; Tracked objects:
 15172 ;;		On entry : 0/0
 15173 ;;		On exit  : 0/0
 15174 ;;		Unchanged: 0/0
 15175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15177 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15178 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15179 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15180 ;;Total ram usage:        2 bytes
 15181 ;; Hardware stack levels used:    1
 15182 ;; Hardware stack levels required when called:    3
 15183 ;; This function calls:
 15184 ;;		Nothing
 15185 ;; This function is called by:
 15186 ;;		_setDimmerLights_SwOn
 15187 ;;		_setDimmerLights_SwOff
 15188 ;;		_setDimmerLights_DimmingOn
 15189 ;;		_setDimmerLights_Main
 15190 ;;		_DimmerLights_TwoPhase_Main
 15191 ;;		_getDimmerLights_Status
 15192 ;;		_setDimmerLights_Status
 15193 ;;		_setDimmerLights_DimmingRun
 15194 ;;		_setRF_AdjControl
 15195 ;; This function uses a non-reentrant model
 15196 ;;
 15197                           
 15198                           
 15199                           ;psect for function _DimmerLights_SelectPointer
 15200  1270                     _DimmerLights_SelectPointer:	
 15201                           
 15202                           ;incstack = 0
 15203                           ; Regs used in _DimmerLights_SelectPointer: [wreg]
 15204                           ;DimmerLights_SelectPointer@lights stored from wreg
 15205  1270  00F3               	movwf	DimmerLights_SelectPointer@lights
 15206                           
 15207                           ;Dimmer_B1.c: 684: if (lights == 1) {
 15208  1271  0873               	movf	DimmerLights_SelectPointer@lights,w
 15209  1272  3A01               	xorlw	1
 15210  1273  1D03               	skipz
 15211  1274  0008               	return
 15212                           
 15213                           ;Dimmer_B1.c: 685: DimmerLights = &DimmerLights1;
 15214  1275  3058               	movlw	_DimmerLights1& (0+255)
 15215  1276  00F2               	movwf	??_DimmerLights_SelectPointer
 15216  1277  0872               	movf	??_DimmerLights_SelectPointer,w
 15217  1278  0020               	movlb	0	; select bank0
 15218  1279  00EB               	movwf	_DimmerLights
 15219  127A  0008               	return
 15220  127B                     __end_of_DimmerLights_SelectPointer:	
 15221                           
 15222                           	psect	text106
 15223  11C7                     __ptext106:	
 15224 ;; *************** function _DelayOff_Initialization *****************
 15225 ;; Defined at:
 15226 ;;		line 26 in file "../src/DelayOff_B1.c"
 15227 ;; Parameters:    Size  Location     Type
 15228 ;;		None
 15229 ;; Auto vars:     Size  Location     Type
 15230 ;;		None
 15231 ;; Return value:  Size  Location     Type
 15232 ;;		None               void
 15233 ;; Registers used:
 15234 ;;		wreg, status,2, status,0, pclath, cstack
 15235 ;; Tracked objects:
 15236 ;;		On entry : 0/0
 15237 ;;		On exit  : 0/0
 15238 ;;		Unchanged: 0/0
 15239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15244 ;;Total ram usage:        0 bytes
 15245 ;; Hardware stack levels used:    1
 15246 ;; Hardware stack levels required when called:    5
 15247 ;; This function calls:
 15248 ;;		_DlyOff_Initialization
 15249 ;; This function is called by:
 15250 ;;		_main
 15251 ;; This function uses a non-reentrant model
 15252 ;;
 15253                           
 15254                           
 15255                           ;psect for function _DelayOff_Initialization
 15256  11C7                     _DelayOff_Initialization:	
 15257                           
 15258                           ;DelayOff_B1.c: 28: DlyOff_Initialization(1);
 15259                           
 15260                           ;incstack = 0
 15261                           ; Regs used in _DelayOff_Initialization: [wreg+status,2+status,0+pclath+cstack]
 15262  11C7  3001               	movlw	1
 15263  11C8  3191  21DF         	fcall	_DlyOff_Initialization
 15264  11CA  0008               	return
 15265  11CB                     __end_of_DelayOff_Initialization:	
 15266                           
 15267                           	psect	text107
 15268  11DF                     __ptext107:	
 15269 ;; *************** function _DlyOff_Initialization *****************
 15270 ;; Defined at:
 15271 ;;		line 56 in file "../src/DelayOff_B1.c"
 15272 ;; Parameters:    Size  Location     Type
 15273 ;;  sw              1    wreg     unsigned char 
 15274 ;; Auto vars:     Size  Location     Type
 15275 ;;  sw              1    4[COMMON] unsigned char 
 15276 ;; Return value:  Size  Location     Type
 15277 ;;		None               void
 15278 ;; Registers used:
 15279 ;;		wreg, status,2, status,0, pclath, cstack
 15280 ;; Tracked objects:
 15281 ;;		On entry : 0/0
 15282 ;;		On exit  : 0/0
 15283 ;;		Unchanged: 0/0
 15284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15286 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15288 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15289 ;;Total ram usage:        1 bytes
 15290 ;; Hardware stack levels used:    1
 15291 ;; Hardware stack levels required when called:    4
 15292 ;; This function calls:
 15293 ;;		_DelayOffPointSelect
 15294 ;; This function is called by:
 15295 ;;		_DelayOff_Initialization
 15296 ;; This function uses a non-reentrant model
 15297 ;;
 15298                           
 15299                           
 15300                           ;psect for function _DlyOff_Initialization
 15301  11DF                     _DlyOff_Initialization:	
 15302                           
 15303                           ;incstack = 0
 15304                           ; Regs used in _DlyOff_Initialization: [wreg+status,2+status,0+pclath+cstack]
 15305                           ;DlyOff_Initialization@sw stored from wreg
 15306  11DF  00F4               	movwf	DlyOff_Initialization@sw
 15307                           
 15308                           ;DelayOff_B1.c: 57: DelayOffPointSelect(sw);
 15309  11E0  0874               	movf	DlyOff_Initialization@sw,w
 15310  11E1  3192  2265         	fcall	_DelayOffPointSelect
 15311  11E3  0008               	return
 15312  11E4                     __end_of_DlyOff_Initialization:	
 15313                           
 15314                           	psect	text108
 15315  1265                     __ptext108:	
 15316 ;; *************** function _DelayOffPointSelect *****************
 15317 ;; Defined at:
 15318 ;;		line 7 in file "../src/DelayOff_B1.c"
 15319 ;; Parameters:    Size  Location     Type
 15320 ;;  sw              1    wreg     unsigned char 
 15321 ;; Auto vars:     Size  Location     Type
 15322 ;;  sw              1    3[COMMON] unsigned char 
 15323 ;; Return value:  Size  Location     Type
 15324 ;;		None               void
 15325 ;; Registers used:
 15326 ;;		wreg
 15327 ;; Tracked objects:
 15328 ;;		On entry : 0/0
 15329 ;;		On exit  : 0/0
 15330 ;;		Unchanged: 0/0
 15331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15333 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15334 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15335 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15336 ;;Total ram usage:        2 bytes
 15337 ;; Hardware stack levels used:    1
 15338 ;; Hardware stack levels required when called:    3
 15339 ;; This function calls:
 15340 ;;		Nothing
 15341 ;; This function is called by:
 15342 ;;		_DlyOff_Initialization
 15343 ;;		_DlyOff_Main
 15344 ;;		_setDelayOff_GO
 15345 ;;		_getDelayOff_GO
 15346 ;; This function uses a non-reentrant model
 15347 ;;
 15348                           
 15349                           
 15350                           ;psect for function _DelayOffPointSelect
 15351  1265                     _DelayOffPointSelect:	
 15352                           
 15353                           ;incstack = 0
 15354                           ; Regs used in _DelayOffPointSelect: [wreg]
 15355                           ;DelayOffPointSelect@sw stored from wreg
 15356  1265  00F3               	movwf	DelayOffPointSelect@sw
 15357                           
 15358                           ;DelayOff_B1.c: 9: if (sw == 1) {
 15359  1266  0873               	movf	DelayOffPointSelect@sw,w
 15360  1267  3A01               	xorlw	1
 15361  1268  1D03               	skipz
 15362  1269  0008               	return
 15363                           
 15364                           ;DelayOff_B1.c: 10: DelayOff = &DlySw1;
 15365  126A  30E4               	movlw	_DlySw1& (0+255)
 15366  126B  00F2               	movwf	??_DelayOffPointSelect
 15367  126C  0872               	movf	??_DelayOffPointSelect,w
 15368  126D  0020               	movlb	0	; select bank0
 15369  126E  00EA               	movwf	_DelayOff
 15370  126F  0008               	return
 15371  1270                     __end_of_DelayOffPointSelect:	
 15372                           
 15373                           	psect	text109
 15374  0878                     __ptext109:	
 15375 ;; *************** function _Buzzer_Main *****************
 15376 ;; Defined at:
 15377 ;;		line 46 in file "../src/Buzzer_B1.c"
 15378 ;; Parameters:    Size  Location     Type
 15379 ;;		None
 15380 ;; Auto vars:     Size  Location     Type
 15381 ;;		None
 15382 ;; Return value:  Size  Location     Type
 15383 ;;		None               void
 15384 ;; Registers used:
 15385 ;;		wreg, status,2, status,0
 15386 ;; Tracked objects:
 15387 ;;		On entry : 0/0
 15388 ;;		On exit  : 0/0
 15389 ;;		Unchanged: 0/0
 15390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15393 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15394 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15395 ;;Total ram usage:        1 bytes
 15396 ;; Hardware stack levels used:    1
 15397 ;; Hardware stack levels required when called:    3
 15398 ;; This function calls:
 15399 ;;		Nothing
 15400 ;; This function is called by:
 15401 ;;		_main
 15402 ;; This function uses a non-reentrant model
 15403 ;;
 15404                           
 15405                           
 15406                           ;psect for function _Buzzer_Main
 15407  0878                     _Buzzer_Main:	
 15408                           
 15409                           ;Buzzer_B1.c: 47: if (Buz1.GO == 1) {
 15410                           
 15411                           ;incstack = 0
 15412                           ; Regs used in _Buzzer_Main: [wreg+status,2+status,0]
 15413  0878  0021               	movlb	1	; select bank1
 15414  0879  1CBD               	btfss	_Buz1^(0+128),1
 15415  087A  0008               	return
 15416                           
 15417                           ;Buzzer_B1.c: 48: Buz1.Counter++;
 15418  087B  3001               	movlw	1
 15419  087C  07BE               	addwf	(_Buz1^(0+128)+1),f
 15420  087D  3000               	movlw	0
 15421  087E  3DBF               	addwfc	((_Buz1+1)^(0+128)+1),f
 15422                           
 15423                           ;Buzzer_B1.c: 49: if (Buz1.Counter >= Buz1.TimeValue) {
 15424  087F  0844               	movf	((_Buz1+1)^(0+128)+6),w
 15425  0880  023F               	subwf	((_Buz1+1)^(0+128)+1),w
 15426  0881  1D03               	skipz
 15427  0882  2885               	goto	u6135
 15428  0883  0843               	movf	(_Buz1^(0+128)+6),w
 15429  0884  023E               	subwf	(_Buz1^(0+128)+1),w
 15430  0885                     u6135:	
 15431  0885  1C03               	skipc
 15432  0886  0008               	return
 15433                           
 15434                           ;Buzzer_B1.c: 50: Buz1.Counter = 0;
 15435  0887  01BE               	clrf	(_Buz1^(0+128)+1)
 15436  0888  01BF               	clrf	((_Buz1+1)^(0+128)+1)
 15437                           
 15438                           ;Buzzer_B1.c: 51: Buz1.Switch = (RB3 == 1) ? 1 : 0;
 15439  0889  12BD               	bcf	_Buz1^(0+128),5
 15440  088A  0020               	movlb	0	; select bank0
 15441  088B  1D8D               	btfss	13,3	;volatile
 15442  088C  288F               	goto	l5862
 15443  088D  0021               	movlb	1	; select bank1
 15444  088E  16BD               	bsf	_Buz1^(0+128),5
 15445  088F                     l5862:	
 15446                           
 15447                           ;Buzzer_B1.c: 52: if (Buz1.Switch == 0) {
 15448  088F  0021               	movlb	1	; select bank1
 15449  0890  1ABD               	btfsc	_Buz1^(0+128),5
 15450  0891  28B7               	goto	l70
 15451                           
 15452                           ;Buzzer_B1.c: 53: if (Buz1.Count == 0) {
 15453  0892  08C0               	movf	(_Buz1^(0+128)+3),f
 15454  0893  1D03               	skipz
 15455  0894  28B3               	goto	l71
 15456                           
 15457                           ;Buzzer_B1.c: 54: if (Buz1.BufferStatus1 == 1) {
 15458  0895  1DBD               	btfss	_Buz1^(0+128),3
 15459  0896  28A3               	goto	l72
 15460                           
 15461                           ;Buzzer_B1.c: 55: Buz1.BufferStatus1 = 0;
 15462  0897  11BD               	bcf	_Buz1^(0+128),3
 15463                           
 15464                           ;Buzzer_B1.c: 56: Buz1.Count = Buz1.CountBuffer1;
 15465  0898  0841               	movf	(_Buz1^(0+128)+4),w
 15466  0899  00F2               	movwf	??_Buzzer_Main
 15467  089A  0872               	movf	??_Buzzer_Main,w
 15468  089B  00C0               	movwf	(_Buz1^(0+128)+3)
 15469                           
 15470                           ;Buzzer_B1.c: 57: Buz1.TimeValue = Buz1.TimeValueBuffer1;
 15471  089C  0846               	movf	((_Buz1+1)^(0+128)+8),w
 15472  089D  01C4               	clrf	((_Buz1+1)^(0+128)+6)
 15473  089E  07C4               	addwf	((_Buz1+1)^(0+128)+6),f
 15474  089F  0845               	movf	(_Buz1^(0+128)+8),w
 15475  08A0  01C3               	clrf	(_Buz1^(0+128)+6)
 15476  08A1  07C3               	addwf	(_Buz1^(0+128)+6),f
 15477                           
 15478                           ;Buzzer_B1.c: 58: } else if (Buz1.BufferStatus2 == 1) {
 15479  08A2  0008               	return
 15480  08A3                     l72:	
 15481  08A3  1E3D               	btfss	_Buz1^(0+128),4
 15482  08A4  28B1               	goto	l74
 15483                           
 15484                           ;Buzzer_B1.c: 59: Buz1.BufferStatus2 = 0;
 15485  08A5  123D               	bcf	_Buz1^(0+128),4
 15486                           
 15487                           ;Buzzer_B1.c: 60: Buz1.Count = Buz1.CountBuffer2;
 15488  08A6  0842               	movf	(_Buz1^(0+128)+5),w
 15489  08A7  00F2               	movwf	??_Buzzer_Main
 15490  08A8  0872               	movf	??_Buzzer_Main,w
 15491  08A9  00C0               	movwf	(_Buz1^(0+128)+3)
 15492                           
 15493                           ;Buzzer_B1.c: 61: Buz1.TimeValue = Buz1.TimeValueBuffer2;
 15494  08AA  0848               	movf	((_Buz1+1)^(0+128)+10),w
 15495  08AB  01C4               	clrf	((_Buz1+1)^(0+128)+6)
 15496  08AC  07C4               	addwf	((_Buz1+1)^(0+128)+6),f
 15497  08AD  0847               	movf	(_Buz1^(0+128)+10),w
 15498  08AE  01C3               	clrf	(_Buz1^(0+128)+6)
 15499  08AF  07C3               	addwf	(_Buz1^(0+128)+6),f
 15500                           
 15501                           ;Buzzer_B1.c: 62: } else {
 15502  08B0  0008               	return
 15503  08B1                     l74:	
 15504                           
 15505                           ;Buzzer_B1.c: 63: Buz1.GO = 0;
 15506  08B1  10BD               	bcf	_Buz1^(0+128),1
 15507                           
 15508                           ;Buzzer_B1.c: 64: }
 15509                           ;Buzzer_B1.c: 65: } else {
 15510  08B2  0008               	return
 15511  08B3                     l71:	
 15512                           
 15513                           ;Buzzer_B1.c: 66: Buz1.Switch = 1;
 15514  08B3  16BD               	bsf	_Buz1^(0+128),5
 15515                           
 15516                           ;Buzzer_B1.c: 68: RB3 = 1;
 15517  08B4  0020               	movlb	0	; select bank0
 15518  08B5  158D               	bsf	13,3	;volatile
 15519                           
 15520                           ;Buzzer_B1.c: 69: }
 15521                           ;Buzzer_B1.c: 70: } else {
 15522  08B6  0008               	return
 15523  08B7                     l70:	
 15524                           
 15525                           ;Buzzer_B1.c: 71: Buz1.Switch = 0;
 15526  08B7  12BD               	bcf	_Buz1^(0+128),5
 15527                           
 15528                           ;Buzzer_B1.c: 73: RB3 = 0;
 15529  08B8  0020               	movlb	0	; select bank0
 15530  08B9  118D               	bcf	13,3	;volatile
 15531                           
 15532                           ;Buzzer_B1.c: 75: Buz1.Count--;
 15533  08BA  3001               	movlw	1
 15534  08BB  0021               	movlb	1	; select bank1
 15535  08BC  02C0               	subwf	(_Buz1^(0+128)+3),f
 15536  08BD  0008               	return
 15537  08BE                     __end_of_Buzzer_Main:	
 15538                           
 15539                           	psect	text110
 15540  11BE                     __ptext110:	
 15541 ;; *************** function _Buzzer_Initialization *****************
 15542 ;; Defined at:
 15543 ;;		line 11 in file "../src/Buzzer_B1.c"
 15544 ;; Parameters:    Size  Location     Type
 15545 ;;		None
 15546 ;; Auto vars:     Size  Location     Type
 15547 ;;		None
 15548 ;; Return value:  Size  Location     Type
 15549 ;;		None               void
 15550 ;; Registers used:
 15551 ;;		None
 15552 ;; Tracked objects:
 15553 ;;		On entry : 0/0
 15554 ;;		On exit  : 0/0
 15555 ;;		Unchanged: 0/0
 15556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15561 ;;Total ram usage:        0 bytes
 15562 ;; Hardware stack levels used:    1
 15563 ;; Hardware stack levels required when called:    3
 15564 ;; This function calls:
 15565 ;;		Nothing
 15566 ;; This function is called by:
 15567 ;;		_main
 15568 ;; This function uses a non-reentrant model
 15569 ;;
 15570                           
 15571                           
 15572                           ;psect for function _Buzzer_Initialization
 15573  11BE                     _Buzzer_Initialization:	
 15574                           
 15575                           ;Buzzer_B1.c: 13: Buz1.Enable = 1;
 15576                           
 15577                           ;incstack = 0
 15578                           ; Regs used in _Buzzer_Initialization: []
 15579  11BE  0021               	movlb	1	; select bank1
 15580  11BF  143D               	bsf	_Buz1^(0+128),0
 15581  11C0  0008               	return
 15582  11C1                     __end_of_Buzzer_Initialization:	
 15583                           
 15584                           	psect	intentry
 15585  0004                     __pintentry:	
 15586 ;; *************** function _ISR *****************
 15587 ;; Defined at:
 15588 ;;		line 116 in file "../src/MCU_B1.c"
 15589 ;; Parameters:    Size  Location     Type
 15590 ;;		None
 15591 ;; Auto vars:     Size  Location     Type
 15592 ;;		None
 15593 ;; Return value:  Size  Location     Type
 15594 ;;		None               void
 15595 ;; Registers used:
 15596 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15597 ;; Tracked objects:
 15598 ;;		On entry : 0/0
 15599 ;;		On exit  : 0/0
 15600 ;;		Unchanged: 0/0
 15601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15604 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15605 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15606 ;;Total ram usage:        1 bytes
 15607 ;; Hardware stack levels used:    1
 15608 ;; Hardware stack levels required when called:    2
 15609 ;; This function calls:
 15610 ;;		_IOC_ISR
 15611 ;;		_TMR1_ISR
 15612 ;; This function is called by:
 15613 ;;		Interrupt level 1
 15614 ;; This function uses a non-reentrant model
 15615 ;;
 15616                           
 15617  0004                     _ISR:	
 15618                           
 15619                           ;incstack = 0
 15620                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15621  0004  147E               	bsf	126,0	;set compiler interrupt flag
 15622  0005  3180               	pagesel	$
 15623  0006  0020               	movlb	0	; select bank0
 15624  0007  087F               	movf	127,w
 15625  0008  00F1               	movwf	??_ISR
 15626                           
 15627                           ;MCU_B1.c: 125: if (TMR1IE == 1 && TMR1IF == 1) {
 15628  0009  0021               	movlb	1	; select bank1
 15629  000A  1C11               	btfss	17,0	;volatile
 15630  000B  2812               	goto	i1l6414
 15631  000C  0020               	movlb	0	; select bank0
 15632  000D  1C11               	btfss	17,0	;volatile
 15633  000E  2812               	goto	i1l6414
 15634                           
 15635                           ;MCU_B1.c: 126: TMR1_ISR();
 15636  000F  3194  24FD  3180   	fcall	_TMR1_ISR
 15637  0012                     i1l6414:	
 15638                           
 15639                           ;MCU_B1.c: 127: }
 15640                           ;MCU_B1.c: 138: if (IOCIE == 1 && IOCIF == 1 && IOCBF2 == 1) {
 15641  0012  198B               	btfsc	11,3	;volatile
 15642  0013  1C0B               	btfss	11,0	;volatile
 15643  0014  281A               	goto	i1l888
 15644  0015  0027               	movlb	7	; select bank7
 15645  0016  1D16               	btfss	22,2	;volatile
 15646  0017  281A               	goto	i1l888
 15647                           
 15648                           ;MCU_B1.c: 139: IOC_ISR();
 15649  0018  3192  2237         	fcall	_IOC_ISR
 15650  001A                     i1l888:	
 15651                           ;MCU_B1.c: 140: }
 15652                           ;MCU_B1.c: 148: return;
 15653                           
 15654  001A  0871               	movf	??_ISR,w
 15655  001B  0020               	movlb	0	; select bank0
 15656  001C  00FF               	movwf	127
 15657  001D  107E               	bcf	126,0	;clear compiler interrupt flag
 15658  001E  0009               	retfie
 15659  001F                     __end_of_ISR:	
 15660                           
 15661                           	psect	text112
 15662  14FD                     __ptext112:	
 15663 ;; *************** function _TMR1_ISR *****************
 15664 ;; Defined at:
 15665 ;;		line 236 in file "../src/MCU_B1.c"
 15666 ;; Parameters:    Size  Location     Type
 15667 ;;		None
 15668 ;; Auto vars:     Size  Location     Type
 15669 ;;		None
 15670 ;; Return value:  Size  Location     Type
 15671 ;;		None               void
 15672 ;; Registers used:
 15673 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15674 ;; Tracked objects:
 15675 ;;		On entry : 0/0
 15676 ;;		On exit  : 0/0
 15677 ;;		Unchanged: 0/0
 15678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15683 ;;Total ram usage:        0 bytes
 15684 ;; Hardware stack levels used:    1
 15685 ;; Hardware stack levels required when called:    1
 15686 ;; This function calls:
 15687 ;;		_DimmerLights_TMR_1
 15688 ;; This function is called by:
 15689 ;;		_ISR
 15690 ;; This function uses a non-reentrant model
 15691 ;;
 15692                           
 15693                           
 15694                           ;psect for function _TMR1_ISR
 15695  14FD                     _TMR1_ISR:	
 15696                           
 15697                           ;MCU_B1.c: 254: DimmerLights_TMR_1();
 15698                           
 15699                           ;incstack = 0
 15700                           ; Regs used in _TMR1_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15701  14FD  3197  2715  3194   	fcall	_DimmerLights_TMR_1
 15702                           
 15703                           ;MCU_B1.c: 269: Timer1.Count++;
 15704  1500  3001               	movlw	1
 15705  1501  0021               	movlb	1	; select bank1
 15706  1502  07CF               	addwf	(_Timer1^(0+128)+1),f
 15707  1503  3000               	movlw	0
 15708  1504  3DD0               	addwfc	((_Timer1+1)^(0+128)+1),f
 15709                           
 15710                           ;MCU_B1.c: 270: if (Timer1.Count == (int)(20*10)) {
 15711  1505  3001               	movlw	1
 15712  1506  3ECE               	addlw	_Timer1& (0+255)
 15713  1507  0086               	movwf	6
 15714  1508  0187               	clrf	7
 15715  1509  3F40               	moviw [0]fsr1
 15716  150A  3AC8               	xorlw	200
 15717  150B  1D03               	skipz
 15718  150C  2D0F               	goto	u623_25
 15719  150D  3F41               	moviw [1]fsr1
 15720  150E  3A00               	xorlw	0
 15721  150F                     u623_25:	
 15722  150F  1D03               	skipz
 15723  1510  2D14               	goto	i1l5920
 15724                           
 15725                           ;MCU_B1.c: 271: Timer1.Count = 0;
 15726  1511  01CF               	clrf	(_Timer1^(0+128)+1)
 15727  1512  01D0               	clrf	((_Timer1+1)^(0+128)+1)
 15728                           
 15729                           ;MCU_B1.c: 272: Timer1.Timeout = 1;
 15730  1513  144E               	bsf	_Timer1^(0+128),0
 15731  1514                     i1l5920:	
 15732                           
 15733                           ;MCU_B1.c: 273: }
 15734                           ;MCU_B1.c: 275: TMR1H = (int)((65536-1480)/256);
 15735  1514  30FA               	movlw	250
 15736  1515  0020               	movlb	0	; select bank0
 15737  1516  0097               	movwf	23	;volatile
 15738                           
 15739                           ;MCU_B1.c: 276: TMR1L = (int)((65536-1480)%256);
 15740  1517  3038               	movlw	56
 15741  1518  0096               	movwf	22	;volatile
 15742                           
 15743                           ;MCU_B1.c: 277: TMR1IF = 0;
 15744  1519  1011               	bcf	17,0	;volatile
 15745  151A  0008               	return
 15746  151B                     __end_of_TMR1_ISR:	
 15747                           
 15748                           	psect	text113
 15749  1715                     __ptext113:	
 15750 ;; *************** function _DimmerLights_TMR_1 *****************
 15751 ;; Defined at:
 15752 ;;		line 1731 in file "../src/Dimmer_B1.c"
 15753 ;; Parameters:    Size  Location     Type
 15754 ;;		None
 15755 ;; Auto vars:     Size  Location     Type
 15756 ;;		None
 15757 ;; Return value:  Size  Location     Type
 15758 ;;		None               void
 15759 ;; Registers used:
 15760 ;;		wreg, status,2, status,0
 15761 ;; Tracked objects:
 15762 ;;		On entry : 0/0
 15763 ;;		On exit  : 0/0
 15764 ;;		Unchanged: 0/0
 15765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15768 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15769 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15770 ;;Total ram usage:        1 bytes
 15771 ;; Hardware stack levels used:    1
 15772 ;; This function calls:
 15773 ;;		Nothing
 15774 ;; This function is called by:
 15775 ;;		_TMR1_ISR
 15776 ;; This function uses a non-reentrant model
 15777 ;;
 15778                           
 15779                           
 15780                           ;psect for function _DimmerLights_TMR_1
 15781  1715                     _DimmerLights_TMR_1:	
 15782                           
 15783                           ;Dimmer_B1.c: 1734: if (DimmerIntr1.Start == 1) {
 15784                           
 15785                           ;incstack = 0
 15786                           ; Regs used in _DimmerLights_TMR_1: [wreg+status,2+status,0]
 15787  1715  0021               	movlb	1	; select bank1
 15788  1716  1D20               	btfss	_DimmerIntr1^(0+128),2
 15789  1717  2F3B               	goto	i1l561
 15790                           
 15791                           ;Dimmer_B1.c: 1735: DimmerIntr1.Count++;
 15792  1718  3001               	movlw	1
 15793  1719  00F0               	movwf	??_DimmerLights_TMR_1
 15794  171A  0870               	movf	??_DimmerLights_TMR_1,w
 15795  171B  07A2               	addwf	(_DimmerIntr1^(0+128)+2),f
 15796                           
 15797                           ;Dimmer_B1.c: 1737: if (DimmerIntr1.Count == DimmerIntr1.TuneEnd_Value) {
 15798  171C  0822               	movf	(_DimmerIntr1^(0+128)+2),w
 15799  171D  062F               	xorwf	(_DimmerIntr1^(0+128)+15),w
 15800  171E  1D03               	skipz
 15801  171F  2F22               	goto	i1l5468
 15802                           
 15803                           ;Dimmer_B1.c: 1738: DimmerIntr1.Count = 0;
 15804  1720  01A2               	clrf	(_DimmerIntr1^(0+128)+2)
 15805                           
 15806                           ;Dimmer_B1.c: 1739: DimmerIntr1.Start = 0;
 15807  1721  1120               	bcf	_DimmerIntr1^(0+128),2
 15808  1722                     i1l5468:	
 15809                           
 15810                           ;Dimmer_B1.c: 1740: }
 15811                           ;Dimmer_B1.c: 1744: if (DimmerIntr1.Count == DimmerIntr1.TuneValue2_Value) {
 15812  1722  0822               	movf	(_DimmerIntr1^(0+128)+2),w
 15813  1723  062C               	xorwf	(_DimmerIntr1^(0+128)+12),w
 15814  1724  1903               	btfsc	3,2
 15815                           
 15816                           ;Dimmer_B1.c: 1745: if (DimmerIntr1.ControlStatus == 1) {
 15817  1725  1DA0               	btfss	_DimmerIntr1^(0+128),3
 15818  1726  2F29               	goto	i1l5474
 15819                           
 15820                           ;Dimmer_B1.c: 1746: RB1 = 0;
 15821  1727  0020               	movlb	0	; select bank0
 15822  1728  108D               	bcf	13,1	;volatile
 15823  1729                     i1l5474:	
 15824                           
 15825                           ;Dimmer_B1.c: 1747: }
 15826                           ;Dimmer_B1.c: 1748: }
 15827                           ;Dimmer_B1.c: 1751: if (DimmerIntr1.Count == DimmerIntr1.TuneValue3_Value) {
 15828  1729  0021               	movlb	1	; select bank1
 15829  172A  0822               	movf	(_DimmerIntr1^(0+128)+2),w
 15830  172B  062D               	xorwf	(_DimmerIntr1^(0+128)+13),w
 15831  172C  1903               	btfsc	3,2
 15832                           
 15833                           ;Dimmer_B1.c: 1752: if (DimmerIntr1.ControlStatus == 1) {
 15834  172D  1DA0               	btfss	_DimmerIntr1^(0+128),3
 15835  172E  2F31               	goto	i1l5480
 15836                           
 15837                           ;Dimmer_B1.c: 1753: RB1 = 1;
 15838  172F  0020               	movlb	0	; select bank0
 15839  1730  148D               	bsf	13,1	;volatile
 15840  1731                     i1l5480:	
 15841                           
 15842                           ;Dimmer_B1.c: 1754: }
 15843                           ;Dimmer_B1.c: 1755: }
 15844                           ;Dimmer_B1.c: 1758: if (DimmerIntr1.Count == DimmerIntr1.TuneValue4_Value) {
 15845  1731  0021               	movlb	1	; select bank1
 15846  1732  0822               	movf	(_DimmerIntr1^(0+128)+2),w
 15847  1733  062E               	xorwf	(_DimmerIntr1^(0+128)+14),w
 15848  1734  1D03               	skipz
 15849  1735  0008               	return
 15850                           
 15851                           ;Dimmer_B1.c: 1759: if (DimmerIntr1.ControlStatus == 1) {
 15852  1736  1DA0               	btfss	_DimmerIntr1^(0+128),3
 15853  1737  0008               	return
 15854                           
 15855                           ;Dimmer_B1.c: 1760: RB1 = 0;
 15856  1738  0020               	movlb	0	; select bank0
 15857  1739  108D               	bcf	13,1	;volatile
 15858                           
 15859                           ;Dimmer_B1.c: 1761: }
 15860                           ;Dimmer_B1.c: 1764: }
 15861                           ;Dimmer_B1.c: 1766: } else {
 15862  173A  0008               	return
 15863  173B                     i1l561:	
 15864                           
 15865                           ;Dimmer_B1.c: 1767: if (DimmerIntr1.GO == 1) {
 15866  173B  1C20               	btfss	_DimmerIntr1^(0+128),0
 15867  173C  0008               	return
 15868                           
 15869                           ;Dimmer_B1.c: 1768: DimmerIntr1.Count++;
 15870  173D  3001               	movlw	1
 15871  173E  00F0               	movwf	??_DimmerLights_TMR_1
 15872  173F  0870               	movf	??_DimmerLights_TMR_1,w
 15873  1740  07A2               	addwf	(_DimmerIntr1^(0+128)+2),f
 15874                           
 15875                           ;Dimmer_B1.c: 1769: if (DimmerIntr1.Count == 7) {
 15876  1741  0822               	movf	(_DimmerIntr1^(0+128)+2),w
 15877  1742  3A07               	xorlw	7
 15878  1743  1D03               	skipz
 15879  1744  0008               	return
 15880                           
 15881                           ;Dimmer_B1.c: 1770: DimmerIntr1.Count = 0;
 15882  1745  01A2               	clrf	(_DimmerIntr1^(0+128)+2)
 15883                           
 15884                           ;Dimmer_B1.c: 1771: DimmerIntr1.GO = 0;
 15885  1746  1020               	bcf	_DimmerIntr1^(0+128),0
 15886                           
 15887                           ;Dimmer_B1.c: 1772: DimmerIntr1.Start = 1;
 15888  1747  1520               	bsf	_DimmerIntr1^(0+128),2
 15889                           
 15890                           ;Dimmer_B1.c: 1774: if (DimmerIntr1.ControlStatus == 1) {
 15891  1748  1DA0               	btfss	_DimmerIntr1^(0+128),3
 15892  1749  0008               	return
 15893                           
 15894                           ;Dimmer_B1.c: 1775: RB1 = 1;
 15895  174A  0020               	movlb	0	; select bank0
 15896  174B  148D               	bsf	13,1	;volatile
 15897  174C  0008               	return
 15898  174D                     __end_of_DimmerLights_TMR_1:	
 15899                           
 15900                           	psect	text114
 15901  1237                     __ptext114:	
 15902 ;; *************** function _IOC_ISR *****************
 15903 ;; Defined at:
 15904 ;;		line 396 in file "../src/MCU_B1.c"
 15905 ;; Parameters:    Size  Location     Type
 15906 ;;		None
 15907 ;; Auto vars:     Size  Location     Type
 15908 ;;		None
 15909 ;; Return value:  Size  Location     Type
 15910 ;;		None               void
 15911 ;; Registers used:
 15912 ;;		wreg, status,2, status,0, pclath, cstack
 15913 ;; Tracked objects:
 15914 ;;		On entry : 0/0
 15915 ;;		On exit  : 0/0
 15916 ;;		Unchanged: 0/0
 15917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15922 ;;Total ram usage:        0 bytes
 15923 ;; Hardware stack levels used:    1
 15924 ;; Hardware stack levels required when called:    1
 15925 ;; This function calls:
 15926 ;;		_DimmerLights_IOC_1
 15927 ;; This function is called by:
 15928 ;;		_ISR
 15929 ;; This function uses a non-reentrant model
 15930 ;;
 15931                           
 15932                           
 15933                           ;psect for function _IOC_ISR
 15934  1237                     _IOC_ISR:	
 15935                           
 15936                           ;MCU_B1.c: 398: if (myMain.PowerON == 1) {
 15937                           
 15938                           ;incstack = 0
 15939                           ; Regs used in _IOC_ISR: [wreg+status,2+status,0+pclath+cstack]
 15940  1237  0021               	movlb	1	; select bank1
 15941  1238  1C30               	btfss	_myMain^(0+128),0
 15942  1239  2A3C               	goto	i1l5930
 15943                           
 15944                           ;MCU_B1.c: 404: DimmerLights_IOC_1();
 15945  123A  3188  2003         	fcall	_DimmerLights_IOC_1
 15946  123C                     i1l5930:	
 15947                           
 15948                           ;MCU_B1.c: 418: }
 15949                           ;MCU_B1.c: 420: IOCBF2 = 0;
 15950  123C  0027               	movlb	7	; select bank7
 15951  123D  1116               	bcf	22,2	;volatile
 15952                           
 15953                           ;MCU_B1.c: 421: IOCIF = 0;
 15954  123E  100B               	bcf	11,0	;volatile
 15955  123F  0008               	return
 15956  1240                     __end_of_IOC_ISR:	
 15957                           
 15958                           	psect	text115
 15959  0803                     __ptext115:	
 15960 ;; *************** function _DimmerLights_IOC_1 *****************
 15961 ;; Defined at:
 15962 ;;		line 1817 in file "../src/Dimmer_B1.c"
 15963 ;; Parameters:    Size  Location     Type
 15964 ;;		None
 15965 ;; Auto vars:     Size  Location     Type
 15966 ;;		None
 15967 ;; Return value:  Size  Location     Type
 15968 ;;		None               void
 15969 ;; Registers used:
 15970 ;;		wreg, status,2, status,0
 15971 ;; Tracked objects:
 15972 ;;		On entry : 0/0
 15973 ;;		On exit  : 0/0
 15974 ;;		Unchanged: 0/0
 15975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15978 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15979 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15980 ;;Total ram usage:        1 bytes
 15981 ;; Hardware stack levels used:    1
 15982 ;; This function calls:
 15983 ;;		Nothing
 15984 ;; This function is called by:
 15985 ;;		_IOC_ISR
 15986 ;; This function uses a non-reentrant model
 15987 ;;
 15988                           
 15989                           
 15990                           ;psect for function _DimmerLights_IOC_1
 15991  0803                     _DimmerLights_IOC_1:	
 15992                           
 15993                           ;Dimmer_B1.c: 1831: if (DimmerIntr1.Start == 0 && DimmerIntr1.GO == 0) {
 15994                           
 15995                           ;incstack = 0
 15996                           ; Regs used in _DimmerLights_IOC_1: [wreg+status,2+status,0]
 15997  0803  0021               	movlb	1	; select bank1
 15998  0804  1920               	btfsc	_DimmerIntr1^(0+128),2
 15999  0805  0008               	return
 16000  0806  1820               	btfsc	_DimmerIntr1^(0+128),0
 16001  0807  0008               	return
 16002                           
 16003                           ;Dimmer_B1.c: 1833: if (RB2 != DimmerIntr1.Status) {
 16004  0808  0E21               	swapf	(_DimmerIntr1^(0+128)+1),w
 16005  0809  0C89               	rrf	9,f
 16006  080A  3901               	andlw	1
 16007  080B  00F0               	movwf	??_DimmerLights_IOC_1
 16008  080C  3000               	movlw	0
 16009  080D  0020               	movlb	0	; select bank0
 16010  080E  190D               	btfsc	13,2	;volatile
 16011  080F  3001               	movlw	1
 16012  0810  0670               	xorwf	??_DimmerLights_IOC_1,w
 16013  0811  1903               	skipnz
 16014  0812  0008               	return
 16015                           
 16016                           ;Dimmer_B1.c: 1836: DimmerIntr1.Count = 0;
 16017  0813  0021               	movlb	1	; select bank1
 16018  0814  01A2               	clrf	(_DimmerIntr1^(0+128)+2)
 16019                           
 16020                           ;Dimmer_B1.c: 1837: DimmerIntr1.GO = 1;
 16021  0815  1420               	bsf	_DimmerIntr1^(0+128),0
 16022                           
 16023                           ;Dimmer_B1.c: 1839: if (DimmerIntr1.Dimming_Sw == 1 || DimmerIntr1.Dimming_RF == 1) {
 16024  0816  1E20               	btfss	_DimmerIntr1^(0+128),4
 16025  0817  1B20               	btfsc	_DimmerIntr1^(0+128),6
 16026                           
 16027                           ;Dimmer_B1.c: 1840: DimmerIntr1.Tune = 1;
 16028  0818  14A0               	bsf	_DimmerIntr1^(0+128),1
 16029                           
 16030                           ;Dimmer_B1.c: 1841: }
 16031                           ;Dimmer_B1.c: 1843: if (DimmerIntr1.Calculate == 1) {
 16032  0819  1FA1               	btfss	(_DimmerIntr1^(0+128)+1),7
 16033  081A  282C               	goto	i1l5518
 16034                           
 16035                           ;Dimmer_B1.c: 1844: DimmerIntr1.Calculate = 0;
 16036  081B  13A1               	bcf	(_DimmerIntr1^(0+128)+1),7
 16037                           
 16038                           ;Dimmer_B1.c: 1845: DimmerIntr1.TuneEnd_Value = DimmerIntr1.TuneEnd;
 16039  081C  082B               	movf	(_DimmerIntr1^(0+128)+11),w
 16040  081D  00F0               	movwf	??_DimmerLights_IOC_1
 16041  081E  0870               	movf	??_DimmerLights_IOC_1,w
 16042  081F  00AF               	movwf	(_DimmerIntr1^(0+128)+15)
 16043                           
 16044                           ;Dimmer_B1.c: 1846: DimmerIntr1.TuneValue2_Value = DimmerIntr1.TuneValue2;
 16045  0820  0828               	movf	(_DimmerIntr1^(0+128)+8),w
 16046  0821  00F0               	movwf	??_DimmerLights_IOC_1
 16047  0822  0870               	movf	??_DimmerLights_IOC_1,w
 16048  0823  00AC               	movwf	(_DimmerIntr1^(0+128)+12)
 16049                           
 16050                           ;Dimmer_B1.c: 1847: DimmerIntr1.TuneValue3_Value = DimmerIntr1.TuneValue3;
 16051  0824  0829               	movf	(_DimmerIntr1^(0+128)+9),w
 16052  0825  00F0               	movwf	??_DimmerLights_IOC_1
 16053  0826  0870               	movf	??_DimmerLights_IOC_1,w
 16054  0827  00AD               	movwf	(_DimmerIntr1^(0+128)+13)
 16055                           
 16056                           ;Dimmer_B1.c: 1848: DimmerIntr1.TuneValue4_Value = DimmerIntr1.TuneValue4;
 16057  0828  082A               	movf	(_DimmerIntr1^(0+128)+10),w
 16058  0829  00F0               	movwf	??_DimmerLights_IOC_1
 16059  082A  0870               	movf	??_DimmerLights_IOC_1,w
 16060  082B  00AE               	movwf	(_DimmerIntr1^(0+128)+14)
 16061  082C                     i1l5518:	
 16062                           
 16063                           ;Dimmer_B1.c: 1849: }
 16064                           ;Dimmer_B1.c: 1854: DimmerIntr1.Status = RB2 == 1 ? 1 : 0;
 16065  082C  12A1               	bcf	(_DimmerIntr1^(0+128)+1),5
 16066  082D  0020               	movlb	0	; select bank0
 16067  082E  1D0D               	btfss	13,2	;volatile
 16068  082F  0008               	return
 16069  0830  0021               	movlb	1	; select bank1
 16070  0831  16A1               	bsf	(_DimmerIntr1^(0+128)+1),5
 16071  0832  0008               	return
 16072  0833                     __end_of_DimmerLights_IOC_1:	
 16073  007E                     btemp	set	126	;btemp
 16074  007E                     pic14e$flags	set	126
 16075  007E                     wtemp	set	126
 16076  007E                     wtemp0	set	126
 16077  0080                     wtemp1	set	128
 16078  0082                     wtemp2	set	130
 16079  0084                     wtemp3	set	132
 16080  0086                     wtemp4	set	134
 16081  0088                     wtemp5	set	136
 16082  007F                     wtemp6	set	127
 16083  007E                     ttemp	set	126
 16084  007E                     ttemp0	set	126
 16085  0081                     ttemp1	set	129
 16086  0084                     ttemp2	set	132
 16087  0087                     ttemp3	set	135
 16088  007F                     ttemp4	set	127
 16089  007E                     ltemp	set	126
 16090  007E                     ltemp0	set	126
 16091  0082                     ltemp1	set	130
 16092  0086                     ltemp2	set	134
 16093  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         193
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     74      78
    BANK1            80      0      77
    BANK2            80      4      78
    BANK3            80      0      69
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    DimmerIntr	PTR struct Dimmer_Interrupt size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    Sw	PTR struct Switch size(1) Largest target is 9
		 -> NULL(NULL[0]), Sw1(BANK2[9]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK1[4]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 9
		 -> NULL(NULL[0]), DimmerLights1(BANK2[9]), 

    product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), _product(BANK3[32]), 

    DelayOff	PTR struct DelayOff size(1) Largest target is 5
		 -> NULL(NULL[0]), DlySw1(BANK1[5]), 


Critical Paths under _main in COMMON

    _main->_Exception_Main
    _main->_getTemp_AD
    _main->_my_MainTimer
    _my_MainTimer->_setBuz
    _getTemp_AD->_getAD
    _getLoad_AD->_getAD
    _setTemp_Main->___lwdiv
    _setSw_Main->_setDimmerLights_SwOn
    _setDimmerLights_DimmingOn->_DimmerLights_SelectPointer
    _Switch_Initialization->_setSw_Initialization
    _setSw_Initialization->_setLED
    _Mcu_Initialization->_WDT_Set
    _Load_Main->___lwdiv
    _Load_Initialization->_setLoad_AH_AL_Restore
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Flash_Memory_Main->_Flash_Memory_Modify
    _Flash_Memory_Modify->_Flash_Memory_Read
    _Flash_Memory_Initialization->_Flash_Memory_Read
    _Exception_Main->_getMain_All_Error_Status
    _Exception_Main->_setBuz
    _setLED->_LedPointSelect
    _setDimmerLights_DimmingClose->_setDimmerIntr_Dimming_Sw
    _getDelayOff_GO->_DelayOffPointSelect
    _getDimmerLights_Allow_Condition->_getLoad_OK
    _DimmerIntr_ValueCalculate->_Division
    _DimmerIntr_Initialization->_Division
    ___ftmul->___ftpack
    ___ftdiv->___ftpack
    ___ftadd->___ftpack
    ___awtoft->___ftpack
    _Division->___lbdiv
    _DlyOff_Main->_setDimmerLights_SwOn
    _setDimmerLights_SwOn->_setBuz
    _setBuz->___awdiv
    _setDimmerLights_SwOff->_DimmerLights_SelectPointer
    _getDimmerLights_Status->_DimmerLights_SelectPointer
    _DelayOff_Initialization->_DlyOff_Initialization
    _DlyOff_Initialization->_DelayOffPointSelect

Critical Paths under _ISR in COMMON

    _TMR1_ISR->_DimmerLights_TMR_1
    _IOC_ISR->_DimmerLights_IOC_1

Critical Paths under _main in BANK0

    _my_MainTimer->_setBuz
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_setProductData
    _Switch_Main->_setSw_Main
    _setSw_Main->_setDimmerLights_SwOn
    _Exception_Main->_setBuz
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setDimmerLights_OnOff
    _setDimmerLights_OnOff->_setDelayOff_GO
    _setDelayOff_GO->_setProductData
    _setDimmerLights_Dimming->_setDimmerIntr_MaxmumValue
    _setDimmerLights_Dimming->_setProductData
    _DimmerLights_TwoPhase_Main->_DimmerLights_AssignationDimming
    _DimmerLights_AssignationDimming->_setDimmerIntr_MaxmumValue
    _setDimmerIntr_MaxmumValue->_getDimmerLights_PercentToValue
    _DimmerLights_DimmingFunction->_DimmerIntr_ValueCalculate
    _DimmerIntr_ValueCalculate->_Division
    _DimmerLights_Initialization->_DimmerIntr_Initialization
    _DimmerIntr_Initialization->_getDimmerLights_PercentToValue
    _DimmerIntr_Initialization->_getDimmerLights_ValueToPercent
    _getDimmerLights_ValueToPercent->___fttol
    _getDimmerLights_PercentToValue->___fttol
    ___fttol->___ftadd
    ___ftneg->___ftdiv
    ___ftneg->___ftmul
    ___ftmul->___awtoft
    ___ftdiv->___awtoft
    ___ftadd->___ftneg
    _DelayOff_Main->_DlyOff_Main
    _DlyOff_Main->_setProductData
    _setProductData->_getDimmerLights_ValueToPercent
    _setDimmerLights_SwOn->_setBuz
    _setBuz->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4  104139
                                              0 BANK2      4     0      4
              _Buzzer_Initialization
                        _Buzzer_Main
            _DelayOff_Initialization
                      _DelayOff_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
                     _Exception_Main
        _Flash_Memory_Initialization
                  _Flash_Memory_Main
                 _LED_Initialization
                           _LED_Main
                _Load_Initialization
                          _Load_Main
                 _Mcu_Initialization
              _Switch_Initialization
                        _Switch_Main
                _Temp_Initialization
                          _Temp_Main
                           _WDT_Main
                         _getLoad_AD
                         _getTemp_AD
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         1     1      0    1497
                                              9 COMMON     1     1      0
                             _setBuz
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           4     4      0     488
                                              6 COMMON     4     4      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getLoad_AD                                           8     8      0     585
                                              6 COMMON     2     2      0
                                              0 BANK0      6     6      0
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                4     1      3     222
                                              2 COMMON     4     1      3
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              2 COMMON     1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0    3576
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                        10    10      0    3576
                                             61 BANK0     10    10      0
                            ___lwdiv
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
                             _setBuz
            _setOverTemp_ADV_Restore
                     _setProductData
 ---------------------------------------------------------------------------------
 (3) _setOverTemp_ADV_Restore                              3     3      0      68
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Switch_Main                                          0     0      0    2172
                         _TouchPower
                         _setSw_Main
 ---------------------------------------------------------------------------------
 (2) _setSw_Main                                           3     3      0    2172
                                              9 BANK0      3     3      0
                      _SwPointSelect
           _getMain_All_Error_Status
                    _getSw_KeyStatus
          _setDimmerLights_DimmingOn
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_DimmingOn                            1     1      0      44
                                              4 COMMON     1     1      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (3) _getSw_KeyStatus                                      4     4      0      48
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _SwPointSelect                                        2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TouchPower                                           0     0      0       0
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Switch_Initialization                                0     0      0     865
               _setSw_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSw_Initialization                                 1     1      0     865
                                              6 COMMON     1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                            _IOC_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IOC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Load_Main                                           10    10      0    1776
                                              0 BANK0     10    10      0
                            ___lwdiv
                             ___wmul
    _getAll_DimmerIntr_Dimming_Sw_RF
                   _getDimmer_LoadGO
              _getDimmer_Load_Status
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
               _getMain_Lights_Count
              _setLoad_AH_AL_Restore
 ---------------------------------------------------------------------------------
 (2) _getMain_Lights_Count                                 3     3      0      47
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _getDimmer_Load_Status                                1     1      0      23
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getDimmer_LoadGO                                     1     1      0      23
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getAll_DimmerIntr_Dimming_Sw_RF                      1     1      0      24
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     270
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     696
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Load_Initialization                                  0     0      0      90
              _setLoad_AH_AL_Restore
 ---------------------------------------------------------------------------------
 (2) _setLoad_AH_AL_Restore                                2     2      0      90
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0      66
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0      66
                                              4 COMMON     3     3      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0     887
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0     887
                                              6 COMMON     1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Main                                    3     3      0    2251
                                              8 COMMON     1     1      0
                                              0 BANK0      2     2      0
                _Flash_Memory_Modify
                _getAll_Sw_KeyStatus
           _getMain_All_LightsStatus
 ---------------------------------------------------------------------------------
 (2) _getAll_Sw_KeyStatus                                  3     3      0      74
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Flash_Memory_Modify                                  2     2      0    2066
                                              6 COMMON     2     2      0
               _Flash_Memory_Erasing
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                     _setMemory_Data
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Erasing                                 0     0      0       0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Initialization                          2     2      0    1936
                                              6 COMMON     2     2      0
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                     _setMemory_Data
 ---------------------------------------------------------------------------------
 (3) _setMemory_Data                                       3     2      1    1726
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Write                                   2     2      0     133
                                              2 COMMON     2     2      0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (4) _Flash_Memory_Unlock                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Read                                    4     4      0      74
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _Exception_Main                                       9     9      0    3112
                                              9 COMMON     1     1      0
                                              6 BANK0      8     8      0
               _getDimmerLights_Line
             _getDimmerLights_Status
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
                             _setBuz
              _setDimmerLights_SwOff
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _getDimmerLights_Line                                 1     1      0      24
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0   54167
       _DimmerLights_DimmingFunction
         _DimmerLights_TwoPhase_Main
                         _getLoad_OK
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 1     1      0   37117
                                             73 BANK0      1     1      0
         _DimmerLights_SelectPointer
    _getDimmerLights_Allow_Condition
           _getMain_All_LightsStatus
            _setDimmerLights_Dimming
              _setDimmerLights_OnOff
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_OnOff                                4     3      1   21388
                                             69 BANK0      4     3      1
          _DimmerIntr_ValueCalculate
                      _getCmd_Status
                     _getDelayOff_GO
     _getDimmerLights_PercentToValue
           _getMain_All_LightsStatus
                      _setCmd_Status
                     _setDelayOff_GO
        _setDimmerIntr_ControlStatus
         _setDimmerIntr_DimmingValue
           _setDimmerIntr_Dimming_RF
          _setDimmerIntr_MaxmumValue
       _setDimmerLights_DimmingClose
               _setDimmerLights_Line
                             _setLED
                     _setProductData
 ---------------------------------------------------------------------------------
 (3) _setLED                                               2     1      1     821
                                              4 COMMON     2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (4) _LedPointSelect                                       2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_DimmingClose                         0     0      0     222
           _setDimmerIntr_Dimming_Sw
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_DimmingValue                           3     2      1     133
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_ControlStatus                          3     2      1     222
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (4) _setDelayOff_GO                                       8     6      2    1650
                                             61 BANK0      8     6      2
                _DelayOffPointSelect
                             ___bmul
                     _setProductData
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1     270
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _setCmd_Status                                        3     2      1     133
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (3) _getMain_All_LightsStatus                             1     1      0      37
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _getDelayOff_GO                                       2     2      0      67
                                              4 COMMON     2     2      0
                _DelayOffPointSelect
 ---------------------------------------------------------------------------------
 (4) _getCmd_Status                                        2     2      0      46
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Dimming                              4     3      1   15382
                                             61 BANK0      4     3      1
         _getDimmerIntr_DimmingValue
     _getDimmerLights_ValueToPercent
                             _setBuz
           _setDimmerIntr_Dimming_Sw
          _setDimmerIntr_MaxmumValue
               _setDimmerLights_Line
                   _setMemory_Modify
                     _setProductData
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Line                                 1     1      0      44
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _setDimmerIntr_Dimming_Sw                             3     2      1     222
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (4) _getDimmerIntr_DimmingValue                           3     3      0      46
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _getDimmerLights_Allow_Condition                      4     4      0      71
                                              3 COMMON     3     3      0
                         _getLoad_OK
 ---------------------------------------------------------------------------------
 (4) _getLoad_OK                                           1     1      0      23
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _getMain_All_Error_Status                             7     7      0     161
                                              2 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_TwoPhase_Main                           1     1      0   16118
                                             65 BANK0      1     1      0
    _DimmerLights_AssignationDimming
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (3) _DimmerLights_AssignationDimming                      4     4      0   16034
                                             61 BANK0      4     4      0
     _getDimmerLights_PercentToValue
             _getDimmerLights_Status
           _setDimmerIntr_Dimming_RF
          _setDimmerIntr_MaxmumValue
                   _setMemory_Modify
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_MaxmumValue                            3     2      1     311
                                             58 BANK0      3     2      1
     _getDimmerLights_PercentToValue (ARG)
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_Dimming_RF                             3     2      1     222
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_DimmingFunction                         2     2      0     711
                                              5 BANK0      2     2      0
          _DimmerIntr_ValueCalculate
 ---------------------------------------------------------------------------------
 (4) _DimmerIntr_ValueCalculate                            3     3      0     680
                                              2 BANK0      3     3      0
                           _Division
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          0     0      0   27796
          _DimmerIntr_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _DimmerIntr_Initialization                            2     2      0   27796
                                             58 BANK0      2     2      0
                           _Division
     _getDimmerLights_PercentToValue
     _getDimmerLights_ValueToPercent
                   _setMemory_Modify
 ---------------------------------------------------------------------------------
 (4) _setMemory_Modify                                     2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _getDimmerLights_ValueToPercent                       6     6      0   11874
                                             52 BANK0      6     6      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (4) _getDimmerLights_PercentToValue                       6     6      0   15251
                                             52 BANK0      6     6      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     430
                                             38 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftneg                                              3     0      3     223
                                             22 BANK0      3     0      3
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    3377
                                              6 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftdiv                                             16    10      6    3687
                                              6 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             13     7      6    4221
                                             25 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___awtoft                                             6     3      3    3214
                                              0 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2873
                                              2 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (5) _Division                                             5     4      1     649
                                              7 COMMON     3     2      1
                                              0 BANK0      2     2      0
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (6) ___lbdiv                                              5     4      1     345
                                              2 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Main                                        0     0      0    2831
                        _DlyOff_Main
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Main                                          3     3      0    2831
                                             61 BANK0      3     3      0
                _DelayOffPointSelect
             _getDimmerLights_Status
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
                     _setProductData
 ---------------------------------------------------------------------------------
 (3) _setProductData                                       3     2      1     845
                                             58 BANK0      3     2      1
     _getDimmerLights_ValueToPercent (ARG)
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOn                                 4     4      0    1698
                                              9 COMMON     1     1      0
                                              6 BANK0      3     3      0
         _DimmerLights_SelectPointer
           _getDimmerIntr_Dimming_Sw
                             _setBuz
 ---------------------------------------------------------------------------------
 (2) _setBuz                                               4     2      2    1497
                                              7 COMMON     2     2      0
                                              4 BANK0      2     0      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     653
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _getDimmerIntr_Dimming_Sw                             2     2      0      46
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOff                                1     1      0      44
                                              4 COMMON     1     1      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (2) _getDimmerLights_Status                               2     2      0      67
                                              4 COMMON     2     2      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (4) _DimmerLights_SelectPointer                           2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Initialization                              0     0      0      44
              _DlyOff_Initialization
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Initialization                                1     1      0      44
                                              4 COMMON     1     1      0
                _DelayOffPointSelect
 ---------------------------------------------------------------------------------
 (5) _DelayOffPointSelect                                  2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Main                                          1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  1     1      0       0
                                              1 COMMON     1     1      0
                            _IOC_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0       0
                 _DimmerLights_TMR_1
 ---------------------------------------------------------------------------------
 (9) _DimmerLights_TMR_1                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _IOC_ISR                                              0     0      0       0
                 _DimmerLights_IOC_1
 ---------------------------------------------------------------------------------
 (9) _DimmerLights_IOC_1                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Initialization
   _Buzzer_Main
   _DelayOff_Initialization
     _DlyOff_Initialization
       _DelayOffPointSelect
   _DelayOff_Main
     _DlyOff_Main
       _DelayOffPointSelect
       _getDimmerLights_Status
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOff
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOn
         _DimmerLights_SelectPointer
         _getDimmerIntr_Dimming_Sw
         _setBuz
           ___awdiv
       _setProductData
         _getDimmerLights_ValueToPercent (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
   _DimmerLights_Initialization
     _DimmerIntr_Initialization
       _Division
         ___lbdiv
       _getDimmerLights_PercentToValue
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
       _getDimmerLights_ValueToPercent
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
       _setMemory_Modify
     _setDimmerLights_Initialization
   _DimmerLights_Main
     _DimmerLights_DimmingFunction
       _DimmerIntr_ValueCalculate
         _Division
           ___lbdiv
     _DimmerLights_TwoPhase_Main
       _DimmerLights_AssignationDimming
         _getDimmerLights_PercentToValue
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _getDimmerLights_Status
           _DimmerLights_SelectPointer
         _setDimmerIntr_Dimming_RF
         _setDimmerIntr_MaxmumValue
           _getDimmerLights_PercentToValue (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
         _setMemory_Modify
       _DimmerLights_SelectPointer
     _getLoad_OK
     _getMain_All_Error_Status
     _getMain_All_LightsStatus
     _setDimmerLights_Main
       _DimmerLights_SelectPointer
       _getDimmerLights_Allow_Condition
         _getLoad_OK
       _getMain_All_LightsStatus
       _setDimmerLights_Dimming
         _getDimmerIntr_DimmingValue
         _getDimmerLights_ValueToPercent
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setBuz
           ___awdiv
         _setDimmerIntr_Dimming_Sw
         _setDimmerIntr_MaxmumValue
           _getDimmerLights_PercentToValue (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
         _setDimmerLights_Line
         _setMemory_Modify
         _setProductData
           _getDimmerLights_ValueToPercent (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
       _setDimmerLights_OnOff
         _DimmerIntr_ValueCalculate
           _Division
             ___lbdiv
         _getCmd_Status
         _getDelayOff_GO
           _DelayOffPointSelect
         _getDimmerLights_PercentToValue
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _getMain_All_LightsStatus
         _setCmd_Status
         _setDelayOff_GO
           _DelayOffPointSelect
           ___bmul
           _setProductData
             _getDimmerLights_ValueToPercent (ARG)
               ___awtoft
                 ___ftpack
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
         _setDimmerIntr_ControlStatus
         _setDimmerIntr_DimmingValue
         _setDimmerIntr_Dimming_RF
         _setDimmerIntr_MaxmumValue
           _getDimmerLights_PercentToValue (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
         _setDimmerLights_DimmingClose
           _setDimmerIntr_Dimming_Sw
         _setDimmerLights_Line
         _setLED
           _LedPointSelect
         _setProductData
           _getDimmerLights_ValueToPercent (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
   _Exception_Main
     _getDimmerLights_Line
     _getDimmerLights_Status
       _DimmerLights_SelectPointer
     _getMain_All_Error_Status
     _getMain_All_LightsStatus
     _setBuz
       ___awdiv
     _setDimmerLights_SwOff
       _DimmerLights_SelectPointer
     _setLED
       _LedPointSelect
   _Flash_Memory_Initialization
     _Flash_Memory_Read
     _Flash_Memory_Write
       _Flash_Memory_Unlock
     _setMemory_Data
   _Flash_Memory_Main
     _Flash_Memory_Modify
       _Flash_Memory_Erasing
         _Flash_Memory_Unlock
       _Flash_Memory_Read
       _Flash_Memory_Write
         _Flash_Memory_Unlock
       _setMemory_Data
     _getAll_Sw_KeyStatus
     _getMain_All_LightsStatus
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _Load_Initialization
     _setLoad_AH_AL_Restore
   _Load_Main
     ___lwdiv
     ___wmul
     _getAll_DimmerIntr_Dimming_Sw_RF
     _getDimmer_LoadGO
     _getDimmer_Load_Status
     _getMain_All_Error_Status
     _getMain_All_LightsStatus
     _getMain_Lights_Count
     _setLoad_AH_AL_Restore
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IOC_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _Switch_Initialization
     _setSw_Initialization
       _setLED
         _LedPointSelect
   _Switch_Main
     _TouchPower
       _Timeout_Counter
       _set_TimeoutCleared
     _setSw_Main
       _SwPointSelect
       _getMain_All_Error_Status
       _getSw_KeyStatus
       _setDimmerLights_DimmingOn
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOff
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOn
         _DimmerLights_SelectPointer
         _getDimmerIntr_Dimming_Sw
         _setBuz
           ___awdiv
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       ___lwdiv
       _getMain_All_Error_Status
       _getMain_All_LightsStatus
       _setBuz
         ___awdiv
       _setOverTemp_ADV_Restore
       _setProductData
         _getDimmerLights_ValueToPercent (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
   _WDT_Main
     _WDT_Clearing
   _getLoad_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getTemp_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_MainTimer
     _setBuz
       ___awdiv

 _ISR (ROOT)
   _IOC_ISR
     _DimmerLights_IOC_1
   _TMR1_ISR
     _DimmerLights_TMR_1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4A      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4D       7       96.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      4      4E       9       97.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      45      11       86.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     13A      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     13A      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Mar 30 11:36:52 2015

                    __size_of_Switch_Main 0007                     ?_Flash_Memory_Erasing 0070  
                              __CFG_CP$ON 0000                              _WDT_Clearing 0002  
                   __end_of_setCmd_Status 1410                            ___bmul@product 0074  
               getMain_Lights_Count@count 0074                                        l60 098B  
                                      l70 08B7                                        l62 099D  
                                      l71 08B3                                        l72 08A3  
                                      l74 08B1                                        _RD 0CA8  
                                      _WR 0CA9                              ___awdiv@sign 0021  
                                      _u1 0120                                        _Sw 006C  
                          setTemp_Main@AD 0065                       ___wmul@multiplicand 0074  
                    _getDimmerLights_Line 1227                    __end_of_setDelayOff_GO 0E47  
                            ___ftadd@exp1 0045                              ___ftadd@exp2 0044  
                    _setDimmerLights_Main 0CF1                      _setDimmerLights_Line 12FD  
                            ___ftadd@sign 0043                      _setDimmerLights_SwOn 08BE  
                                     l256 0B5C                                       l600 09E3  
                                     l507 07CE                                       l606 0A00  
                                     l393 12FB                                       l467 1594  
                                     l595 09E5                                       l597 09D7  
                                     l925 17FA                                       l939 15EC  
                                     l949 0F4F                                       _GIE 005F  
                                     _RA0 0060                                       _RB0 0068  
    __size_of_DimmerLights_Initialization 0007                                       _RB1 0069  
                                     _RB2 006A                                       _RA4 0064  
                                     _LED 007B                                       _RB3 006B  
                                     _RA6 0066                                       _RB5 006D  
                                     _RA7 0067                                       _ISR 0004  
                                     _WDT 00D1                                       _Cmd 007A  
            getDimmerLights_Status@lights 0074                                       _Sw1 0161  
              ??_setDimmerIntr_Dimming_RF 0073                ??_setDimmerIntr_Dimming_Sw 0073  
         setDimmerIntr_Dimming_RF@command 0072                     _Buzzer_Initialization 11BE  
                         __end_of_ADC_Set 1218                                       wreg 0009  
    setDimmerLights_Initialization@lights 0070              getDimmerLights_Status@status 0075  
     __end_of_setDimmerIntr_ControlStatus 144E               _setDimmerIntr_ControlStatus 1439  
                       ??_getSw_KeyStatus 0072                                      ?_ISR 0070  
                            ___ftdiv@cntr 0030                           __end_of_IOC_ISR 1240  
                   _setDimmerLights_OnOff 075C                                Load_Main@i 0028  
                            ___ftdiv@sign 0035                                      l1122 1647  
                                    l1117 1632                                      l1118 164B  
                                    l1149 05DC                                      l1245 01E7  
                                    l1158 140F                                      l1094 1783  
                                    l1255 01C3                                      l1247 0085  
                                    l2072 0BAC                                      l1256 01C1  
                                    l1248 0081                                      l1249 007C  
                                    l2066 0B95                                      l2095 03E5  
                                    l1391 0509                                      l5020 17B2  
                         __end_of_IOC_Set 129C                                      l1397 045E  
                                    l5040 162E                                      l1905 14E8  
                                    l4410 0B7C                                      l5050 1643  
                                    l5042 1636                                      l1754 146A  
                                    l4420 0BA2                                      l4412 0B81  
                                    l4404 0B6B                                      l1774 033C  
                                    l4408 0B72                                      l4600 03D7  
                                    l5064 13E3                                      l1776 0232  
                                    l4418 0B9A                                      l4610 0409  
                                    l4602 03E1                                      l6034 0D94  
                                    l6026 0D75                            _Load_Main$3845 0023  
                                    l4620 0424                                      l7100 021C  
                                    l4606 03F7                                      l4630 0F6E  
                                    l4702 072C                                      l7006 0F48  
                                    l5262 13BE                                      l6054 0DC3  
                                    l6038 0D9C                                      l6070 0BEB  
                                    l4560 036E                                      l5280 16F3  
                                    l7040 0470                                      l4570 0384  
                                    l4650 0FC5                                      l4706 0734  
                                    l4730 0E60                                      l4482 1393  
                                    l5442 122D                                      l7202 065F  
                                    l5290 170E                                      l7034 0461  
                                    l7042 0473                                      l6082 0C18  
                                    l6074 0BFA                                      l4564 0375  
                                    l4636 0F84                                      l7116 025F  
                                    l4590 03BB                                      l4582 039E  
                                    l4750 0E9E                                      l4486 1399  
                                    l5286 1705                                      l5278 16E7  
                                    l7134 02C0                                      l7126 0291  
                                    l7142 02EE                                      l6078 0C09  
                                    l4592 03C0                                      l4672 06BF  
                                    l4760 0EB7                                      l4824 0DFF  
                                    l7072 04E0                                      l4594 03C4  
                                    l4658 0FDE                                      l4690 0710  
                                    l4834 0E2C                                      l7330 00A8  
                                    l7314 0084                                      l7082 04F5  
                                    l6516 1542                                      l4588 03B1  
                                    l4764 0EC5                                      l4756 0EAB  
                                    l4748 0E90                                      l4932 16B8  
                                    l6700 07A6                                      l7228 17D9  
                                    l7084 04F7                     _setDimmerLights_SwOff 1785  
                                    l6518 154B                                      l4694 0718  
                                    l4678 06D5                                      l4758 0EB4  
                                    l4838 0E3D                                      l7182 1596  
                                    l5590 14B3                                      l6552 0A18  
                                    l6528 155A                                      l6720 07DA  
                                    l7504 05D2                                      l7336 00DA  
                                    l5592 14B6                                      l7264 1765  
                                    l6570 0A3E                                      l6562 0A20  
                                    l6546 0A0D                                      l4970 135B  
                                    l4946 16D6                                      l4938 16C2  
                                    l6706 07B0                                      l5842 14E2  
                                    l7362 014E                                      l5754 146F  
                                    l6564 0A2C                                      l4972 1360  
                                    l6900 0D43                                      l6804 15D7  
                                    l7428 01D6                                      l7372 0177  
                                    l5596 14BB                                      l7524 0928  
                                    l5862 088F                                      l6574 0A47  
                                    l6590 1567                                      l4966 1356  
                                    l4982 140A                                      l6902 0D49  
                                    l7462 0539                                      l7382 0193  
                                    l5758 1475                                      l4896 12EE  
                                    l6680 0902                                      l7456 052A  
                                    l7392 01A9                                      l7368 015D  
                                    l7376 0183                                      l7296 0063  
                                    l7528 0933                                      l6578 0A4F  
                                    l6930 09D9                                      l6738 084A  
                                    l4978 13FE                                      l7474 056F  
                                    l7466 0548                                      l6676 08F2  
                                    l7492 05B0                                      l7476 054B  
                                    l6678 08F8                                      l6942 09F5  
                                    l7494 058C                                      l7478 0577  
                                    l6960 0A94                                      l7496 05B8  
                                    l6698 079D                                      l6890 0D1D  
                                    l7498 05C2                                      l6980 13AD  
                   _myMain_Initialization 1362                                      l6958 0A83  
                                    l6888 0D17                                      l6992 0ED4  
                                    l6998 0EE8                                      _CFGS 0CAE  
                            __CFG_WDTE$ON 0000                                      _FREE 0CAC  
                                    _LATA 010C                                      _LATB 010D  
                                    _LATC 010E                                      u4025 03B2  
                                    u5005 1483                                      u4055 03C5  
                                    u4305 0735                                      u5105 16F4  
                                    u4155 0F96                                      u4315 073B  
                                    u4235 06E1                                      u5115 16FE  
                                    u3605 0B77                                      u4085 03D8  
                                    u4165 0FA6                                      u4245 06F1  
                                    u5125 1706                                      u4175 0FC6  
                                    u4415 0EAC                                      u3625 0B90  
                                    u4185 0FD5                                      u4265 0719  
                                    u6105 14EE                                      u4195 0FDF  
                                    u4275 071F                                      u4355 0E67  
                                    _PEIE 005E                                      u3645 0B9D  
                                    u4525 0E0B                                      u5085 16EA  
                                    u6135 0885                                      u4385 0E91  
                                    u3675 0BB3                                      u6095 14E9  
                                    u7225 0A23                                      u6505 0BF1  
                                    u6515 0C00                                      u7245 0A2D  
                                    u6445 0DB3                                      u6525 0C0F  
                                    u7255 0A37                                      u6535 0C1E  
                                    u7265 0A3F                                      u3995 039F  
                                    u6395 0D84                                      u8325 177B  
                                    u4975 145D                                      u6495 0BE2  
                                    u8275 17F1                                      u8700 0575  
                                    u8705 0554                                      u8465 00A6  
                                    u8730 05B6                                      u8475 00D8  
                                    u8565 018A                                      u8485 010D  
                                    u8735 0595                                      u7935 04B2  
                                    u7955 04C9                                      u7975 04E7  
                                    _LWLO 0CAD                                      _WREN 0CAA  
                                    _WPUB 020D                                      _Buz1 00BD  
                                    _Load 0130                                      _Temp 00D6  
                                    _main 090A                              ___ftpack@arg 0072  
                     __end_of_DlyOff_Main 0B63                              ___ftpack@exp 0075  
                                    fsr0h 0005                                      fsr1h 0007  
                                    fsr0l 0004                                      indf0 0000  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                           __end_of_WDT_Set 125B  
                                    ltemp 007E                                      start 001F  
                                    ttemp 007E                                      wtemp 007E  
       setDimmerLights_SwOn@dimmingStatus 0027      __end_of_DimmerLights_DimmingFunction 0A02  
   __size_of_DimmerLights_DimmingFunction 0053              _DimmerLights_DimmingFunction 09AF  
                       ___bmul@multiplier 0075                              ___ftmul@cntr 0034  
                            ___ftmul@sign 0035              __size_of_Temp_Initialization 0003  
    _getDimmerLights_Allow_Condition$2174 0075                         ?_getDimmer_LoadGO 0070  
                                   ??_ISR 0071                              ___fttol@exp1 0053  
              ?_DimmerIntr_ValueCalculate 0070                              ___fttol@lval 004F  
 __end_of_getDimmerLights_Allow_Condition 13E9  __size_of_getDimmerLights_Allow_Condition 0013  
       ??_getDimmerLights_Allow_Condition 0073          ?_getDimmerLights_Allow_Condition 0070  
         _getDimmerLights_Allow_Condition 13D6                    _getDimmerLights_Status 1335  
                      ??_getDimmer_LoadGO 0072                          __end_of_LED_Main 11D7  
                   ?_getDimmerLights_Line 0070                                _DimmerIntr 00D3  
                   ?_setDimmerLights_Main 0070                     ?_setDimmerLights_Line 0070  
                         ?_setDelayOff_GO 005D                     ?_setDimmerLights_SwOn 0070  
                                   ?_main 016A                           __end_of___awdiv 0A56  
                         __end_of___lbdiv 155C                           __end_of___ftadd 043C  
                         __end_of___ftdiv 1000                           __end_of___ftneg 1249  
                         __end_of___ftmul 075C                           ___awdiv@divisor 0072  
                                   _T1CON 0018                           __end_of___fttol 0ECE  
                                   _IOCBF 0396                                     _IOCBN 0395  
                                   _IOCBP 0394                                     _IOCIE 005B  
                                   _IOCIF 0058                           __end_of___lwdiv 1715  
                                   i1l561 173B                                     i1l888 001A  
                         ___awdiv@counter 0020                                     _TMR1H 0017  
                                   _TMR1L 0016                                     _PORTA 000C  
                                   _PORTB 000D                                     _PORTC 000E  
                            ?_setLED_Main 0070                                     _TRISA 008C  
                                   _TRISB 008D                                     _TRISC 008E  
                 __end_of_Timeout_Counter 1463                             __CFG_WRT$HALF 0000  
  __end_of_getDimmerLights_ValueToPercent 0CF1   __size_of_getDimmerLights_ValueToPercent 0065  
          _getDimmerLights_ValueToPercent 0C8C                                     _Light 00D4  
                        __end_of_TMR1_ISR 151B                   __size_of_setProductData 000C  
                        __end_of_TMR1_Set 12E3        DimmerLights_DimmingFunction@lights 0026  
                                   _getAD 14AB                             ___awtoft@sign 0025  
                           ___ftpack@sign 0076                             ??_Buzzer_Main 0072  
                        __end_of_WDT_Main 1391                            __CFG_BOREN$OFF 0000  
            __end_of_getMain_Lights_Count 12D7                        Flash_Memory_Read@i 0073  
                                   ltemp0 007E                                     ltemp1 0082  
                                   ltemp2 0086                                     ltemp3 0080  
          __size_of_setLED_Initialization 000E             __end_of_setLED_Initialization 1327  
                                   ttemp0 007E                                     ttemp1 0081  
                                   ttemp2 0084                                     ttemp3 0087  
                                   ttemp4 007F                                     status 0003  
                                   wtemp0 007E                                     wtemp1 0080  
                                   wtemp2 0082                                     wtemp3 0084  
                                   wtemp4 0086                                     wtemp5 0088  
                                   wtemp6 007F                       _getAll_Sw_KeyStatus 13A2  
                         ___lbdiv@divisor 0072               __size_of_Flash_Memory_Write 002A  
                         ___lbdiv@counter 0075          __size_of_DelayOff_Initialization 0004  
                  ?_setLoad_AH_AL_Restore 0070                         setTemp_Main@error 005F  
                  ??_Flash_Memory_Erasing 0072               ??_setDimmerLights_DimmingOn 0074  
                         __initialization 0021             ?_DimmerLights_DimmingFunction 0070  
                       ?_setMemory_Modify 0070                          __end_of_Division 1353  
                 __size_of_getDelayOff_GO 000E                              __end_of_main 095C  
                        __end_of_Fosc_Set 11DB            getMain_All_LightsStatus@status 0072  
                      ??_setMemory_Modify 0072              setDimmerLights_OnOff@command 0065  
                          _Exception_Main 050D         __end_of_DimmerIntr_ValueCalculate 161F  
                               ??_ADC_Set 0072                      _setSw_Initialization 1327  
                                  ??_main 007A                             ___fttol@sign1 004E  
                    ?_getAll_Sw_KeyStatus 0070               ?_setDimmerIntr_DimmingValue 0072  
            ??_DimmerLights_SelectPointer 0072                            _setMemory_Data 1286  
                  ?_Buzzer_Initialization 0070                   ??_DlyOff_Initialization 0074  
      setDimmerIntr_ControlStatus@command 0072                   _setDimmerLights_Dimming 0833  
                               ??_IOC_ISR 0071                                 ??_IOC_Set 0072  
                             _DimmerIntr1 00A0                  _getMain_All_LightsStatus 121F  
                 ??_Switch_Initialization 0077                    ?_setDimmerLights_OnOff 0065  
                                  ?_getAD 0072                    ?_setDimmerLights_SwOff 0070  
                             _DlyOff_Main 0B04                    ?_myMain_Initialization 0070  
                                  _ADCON0 009D                                    _ADCON1 009E  
        __end_of_getDimmerIntr_Dimming_Sw 12F0               ?_DimmerLights_TwoPhase_Main 0070  
                                  _ADRESH 009C                                    _ADRESL 009B  
                        ___awdiv@dividend 0074                     _getDimmer_Load_Status 120A  
                               ??_WDT_Set 0072                          __end_of___awtoft 157E  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  _ANSELC 018E                          __end_of___ftpack 0BC3  
                _getMain_All_Error_Status 161F                                    _IOCBF2 1CB2  
                                  i1l5518 082C                                    i1l6414 0012  
                                  i1l5480 1731                                    i1l5474 1729  
                                  i1l5468 1722                                    i1l5920 1514  
                                  i1l5930 123C                                    _FVRCON 0117  
    getDimmerLights_Allow_Condition@allow 0074                                    _PMADRH 0192  
                                  _PMADRL 0191                                    _PMDATH 0194  
                                  _PMDATL 0193                                    _PMCON2 0196  
                                  u623_25 150F                                    _OSCCON 0099  
                      __size_of_Load_Main 01A0                                    _TMR1IE 0488  
                                  _TMR1IF 0088                                    _IO_Set 1491  
                                  _WDTCON 0097      __end_of_setDimmerLights_DimmingClose 11E9  
   __size_of_setDimmerLights_DimmingClose 0005              _setDimmerLights_DimmingClose 11E4  
                    Exception_Main@i_3488 002B               ??_setDimmerIntr_MaxmumValue 005B  
                                  _Dimmer 00C9                                    _DlySw1 00E4  
                ?_setOverTemp_ADV_Restore 0070                     __end_of_getCmd_Status 1362  
              __end_of_Mcu_Initialization 13D6                       __end_of_Buzzer_Main 08BE  
                                  _Memory 01A0                                    _Timer1 00CE  
                                  ___bmul 1391                    __end_of_Exception_Main 05DD  
                    Exception_Main@lights 002D                                    ___wmul 14E0  
                               ??___awdiv 0076                                 ??___lbdiv 0073  
                               ??___ftadd 003F              __size_of_DelayOffPointSelect 000B  
                               ??___ftdiv 002C                                 ??___ftneg 007A  
                               ??___ftmul 002C                                 ??___fttol 004A  
            ?_Flash_Memory_Initialization 0070                    ??_getDimmerLights_Line 0072  
                               ??___lwdiv 0076                    ??_setDimmerLights_Main 007A  
                  ??_setDimmerLights_Line 0072                      Exception_Main@status 0026  
 __end_of_getAll_DimmerIntr_Dimming_Sw_RF 1237  __size_of_getAll_DimmerIntr_Dimming_Sw_RF 0008  
       ??_getAll_DimmerIntr_Dimming_Sw_RF 0072          ?_getAll_DimmerIntr_Dimming_Sw_RF 0070  
         _getAll_DimmerIntr_Dimming_Sw_RF 122F                    ??_setDimmerLights_SwOn 0079  
                                  _setLED 16AA                                    _myMain 00B0  
                  __end_of_setMemory_Data 1291                     ?_setSw_Initialization 0070  
                        ___awdiv@quotient 0022                                    _setBuz 095C  
                      __size_of_Temp_Main 0003                      Load_Main@LightsCount 0027  
             __end_of_Load_Initialization 11C4          ??_setDimmerLights_Initialization 0072  
         ?_setDimmerLights_Initialization 0070                     ??_getAll_Sw_KeyStatus 0072  
        __end_of_setDimmerIntr_Dimming_RF 1439          __end_of_setDimmerIntr_Dimming_Sw 13FC  
                   ___ftmul@f3_as_product 0031                 _setDimmerLights_DimmingOn 15A2  
                Flash_Memory_Read@address 0074                          ?_Timeout_Counter 0070  
             getMain_Lights_Count@status1 0073               __size_of_DimmerLights_IOC_1 0030  
                   __end_of_SwPointSelect 12A7               __size_of_DimmerLights_TMR_1 0038  
            __size_of_Flash_Memory_Modify 0089                   __size_of_LedPointSelect 000A  
         setDimmerIntr_Dimming_Sw@command 0072                        setTemp_Main@TempGO 0060  
                        ___lbdiv@dividend 0074                       Flash_Memory_Write@i 0073  
            __size_of_Flash_Memory_Unlock 0009                                _TouchPower 1463  
                 __end_of__initialization 0049           getDimmerIntr_DimmingValue@value 0074  
         setDimmerIntr_DimmingValue@value 0072                                 ?_LED_Main 0070  
                              ___ftadd@f1 0039                                ___ftadd@f2 003C  
                           ?_my_MainTimer 0070                                ___ftdiv@f1 0029  
                              ___ftdiv@f2 0026                                ___ftdiv@f3 0031  
           ?_setDimmerLights_DimmingClose 0070                                ___ftneg@f1 0036  
                              ___awtoft@c 0020                       ___bmul@multiplicand 0072  
            ?_DimmerLights_Initialization 0070                                ___ftmul@f1 0026  
                              ___ftmul@f2 0029                ?_DimmerIntr_Initialization 0070  
                              ___fttol@f1 0046                            __pcstackCOMMON 0070  
                         ?_Exception_Main 0070                              __pidataBANK3 151B  
                           __end_of_getAD 14C5                                 ?_TMR1_ISR 0070  
                               ?_TMR1_Set 0070                    setLoad_AH_AL_Restore@i 0073  
                      _LED_Initialization 11CF                           _getSw_KeyStatus 13B3  
   DimmerLights_AssignationDimming@status 005F                           ?_setMemory_Data 0072  
          ??_DimmerLights_DimmingFunction 0025          ??_getDimmerLights_PercentToValue 0054  
         ?_getDimmerLights_PercentToValue 0070                 ??_setDimmerLights_Dimming 005E  
           ??_Flash_Memory_Initialization 0076                          ___lbdiv@quotient 0076  
                    _getMain_Lights_Count 12CB                                 ?_WDT_Main 0070  
                       __end_of_Load_Main 01ED         setDimmerIntr_ControlStatus@lights 0074  
               _setDimmerIntr_MaxmumValue 12B3                __end_of_set_TimeoutCleared 0800  
         setDimmerIntr_MaxmumValue@lights 005C                       ?_LED_Initialization 0070  
                          _setProductData 12A7                      __size_of_setLED_Main 002E  
                  ?_getDimmer_Load_Status 0070                                   ??_getAD 0075  
                     _Temp_Initialization 11C4                                 ?_Division 0077  
                              __pbssBANK0 006A                                __pbssBANK1 00A0  
                              __pbssBANK2 0120                                __pbssBANK3 01A0  
                               ?_Fosc_Set 0070                               _Buzzer_Main 0878  
                       __end_of_Temp_Main 0803                                   ?_IO_Set 0070  
                          ??_my_MainTimer 0079                                ??_LED_Main 0077  
                         __CFG_VCAPEN$OFF 0000                   _DelayOff_Initialization 11C7  
                           ??_Switch_Main 007A                      ??_LED_Initialization 0077  
                            _DimmerLights 006B                         LedPointSelect@led 0073  
   getAll_DimmerIntr_Dimming_Sw_RF@status 0072                    __size_of_DelayOff_Main 0004  
                             setBuz@count 0078                   ?_getDimmerLights_Status 0070  
                              __pmaintext 090A                            _getDelayOff_GO 130B  
                    ?_Temp_Initialization 0070                                   ?___bmul 0072  
                        ??_setDelayOff_GO 005F         __end_of_DimmerIntr_Initialization 0B04  
           ??_DimmerLights_Initialization 007A                                   ?___wmul 0072  
                              ??_TMR1_ISR 0071                             ?_setTemp_Main 0070  
       __size_of_getDimmerIntr_Dimming_Sw 000D                                _getLoad_AD 0D56  
                              ??_TMR1_Set 0072                                __pintentry 0004  
                  ??_setSw_Initialization 0076                                _getLoad_OK 11FC  
               ?_getDimmerIntr_Dimming_Sw 0070               ??_DimmerIntr_ValueCalculate 0022  
                                 ?_setLED 0074       __size_of_DimmerLights_TwoPhase_Main 0054  
                   ?_getMain_Lights_Count 0070                                   _ADC_Set 1211  
                                 ?_setBuz 0024                                 ?___awtoft 0020  
                               ?___ftpack 0072                                _getTemp_AD 0BC3  
      __end_of_DimmerLights_SelectPointer 127B                _DimmerLights_SelectPointer 1270  
                              ??_WDT_Main 0072                    __end_of_setProductData 12B3  
           setDimmerLights_Dimming@lights 0060                                   _IOC_ISR 1237  
                                 _IOC_Set 1291             setDimmerLights_Dimming@status 005D  
   getDimmerLights_Allow_Condition@lights 0070                         _Flash_Memory_Main 17BF  
               __size_of_getDimmer_LoadGO 0007                         _Flash_Memory_Read 1410  
                      ?_Flash_Memory_Main 0070                        ?_Flash_Memory_Read 0070  
                              ??_Division 0078                                   _WDT_Set 1252  
                  __size_of_setCmd_Status 0014                                ??_Fosc_Set 0072  
                             ?_TouchPower 0070           __end_of_setDimmerLights_Dimming 0878  
                 ??_setLoad_AH_AL_Restore 0072                       getCmd_Status@number 0072  
                         __size_of_IO_Set 001A                       setCmd_Status@number 0074  
       __size_of_setDimmerIntr_Dimming_RF 0015         __size_of_setDimmerIntr_Dimming_Sw 0013  
               ?_setDimmerIntr_Dimming_RF 0072                       ??_Flash_Memory_Main 0078  
               ?_setDimmerIntr_Dimming_Sw 0072                       ??_Flash_Memory_Read 0072  
                  __end_of_getDelayOff_GO 1319            __end_of_getDimmerLights_Status 1344  
                 __end_of_getSw_KeyStatus 13C4                     ??_Temp_Initialization 0072  
                          ??_setTemp_Main 005D                           __size_of___bmul 0011  
                     setProductData@value 005A                                   ___awdiv 0A02  
          ??_setDimmerLights_DimmingClose 0075                                   ___lbdiv 153B  
                                 ___ftadd 0346                                   ___ftdiv 0F57  
                                 ___ftneg 1240                           __size_of___wmul 001D  
                                 ___ftmul 06A8                                   ___fttol 0E47  
                     __end_of_Switch_Main 121F                                   ___lwdiv 16DF  
              ??_getMain_All_LightsStatus 0072                   ??_Buzzer_Initialization 0072  
                              ??___awtoft 0023                                ??___ftpack 0077  
                         __size_of_setLED 0035           DimmerIntr_ValueCalculate@lights 0024  
                         __size_of_setBuz 0053                                   __ptext1 174D  
                                 __ptext2 1362                                   __ptext3 0BC3  
                                 __ptext4 0D56                                   __ptext5 14AB  
                                 __ptext6 1381                                   __ptext7 0002  
                                 __ptext8 0800                                   __ptext9 043C  
                            __size_of_ISR 001B                ??_getMain_All_Error_Status 0072  
                 ??_setDimmerLights_OnOff 0066                           ?_setProductData 005A  
               __end_of_Flash_Memory_Main 1800                 __end_of_Flash_Memory_Read 1424  
                 ??_setDimmerLights_SwOff 0074                   ??_myMain_Initialization 0072  
                           _DelayOff_Main 11CB                         _DimmerLights_Main 157E  
          __size_of_DlyOff_Initialization 0005                 __size_of_setMemory_Modify 0010  
           __end_of_DlyOff_Initialization 11E4                  ??_setTemp_Initialization 0072  
                            ?_DlyOff_Main 0070                        ?_DimmerLights_Main 0070  
                                 _product 006D                            _LedPointSelect 125B  
               getAll_Sw_KeyStatus@status 0073                           getTemp_AD@ADRES 0078  
                     _DelayOffPointSelect 1265                                   clrloop0 11F0  
          __size_of_Switch_Initialization 0004                 _DimmerIntr_ValueCalculate 15F3  
           __end_of_Switch_Initialization 11DF                      end_of_initialization 0049  
               ??_DelayOff_Initialization 0075                __end_of_Flash_Memory_Write 15F3  
      __size_of_setDimmerLights_DimmingOn 0027                                   init_ram 11E9  
                     ??_DimmerLights_Main 007A                      Flash_Memory_Read@ret 0075  
                                 initloop 11EA                                _setSw_Main 01ED  
                  setDimmerLights_SwOn@sw 0028                      Flash_Memory_Modify@i 0077  
                   _setLED_Initialization 1319                           ?_getDelayOff_GO 0070  
           __size_of_Flash_Memory_Erasing 000C                      ?_DelayOffPointSelect 0070  
                     _Flash_Memory_Modify 0ECE                               ?_getLoad_AD 0070  
                             ?_getLoad_OK 0070                    ??_getMain_Lights_Count 0072  
                           _setCmd_Status 13FC                       _Flash_Memory_Unlock 1249  
                             ?_getTemp_AD 0070                       __size_of_TouchPower 0015  
                setLED_Initialization@led 0076                   setTemp_Main@DangerValue 0063  
                  setSw_Initialization@sw 0076                 __end_of_DimmerLights_Main 15A2  
                      _Mcu_Initialization 13C4          __size_of_setOverTemp_ADV_Restore 0019  
                    __end_of_my_MainTimer 1785                            ?_DelayOff_Main 0070  
                        __CFG_FOSC$INTOSC 0000                    __end_of_LedPointSelect 1265  
                Load_Main@ErrorCountValue 0025          setDimmerIntr_DimmingValue@lights 0074  
        getDimmerIntr_DimmingValue@lights 0073                       ?_Mcu_Initialization 0070  
                    ?_Flash_Memory_Modify 0070         DimmerLights_AssignationDimming@sw 0060  
                    ?_Flash_Memory_Unlock 0070        __size_of_setDimmerIntr_MaxmumValue 000C  
          setDimmerIntr_Dimming_RF@lights 0074           getMain_All_Error_Status@command 0077  
                             ___ftdiv@exp 0034         __end_of_setDimmerLights_DimmingOn 15C9  
                        ??_Exception_Main 0079                            __end_of_IO_Set 14AB  
                             _Switch_Main 1218                         __size_of_LED_Main 0004  
                        ?_getSw_KeyStatus 0070                          ??_setMemory_Data 0073  
                             ___ftmul@exp 0030               ??_DimmerIntr_Initialization 005A  
                    ??_Mcu_Initialization 0073               __end_of_getAll_Sw_KeyStatus 13B3  
                   ??_DelayOffPointSelect 0072                             ?_WDT_Clearing 0070  
                          ?_setCmd_Status 0072                            __end_of___bmul 13A2  
     __size_of_getDimmerIntr_DimmingValue 000D          DimmerLights_TwoPhase_Main@lights 0061  
                          __end_of___wmul 14FD                         getSw_KeyStatus@sw 0070  
                       __size_of_TMR1_ISR 001E             __size_of_getDimmerLights_Line 0008  
        DimmerLights_SelectPointer@lights 0073                         __size_of_TMR1_Set 000C  
           __size_of_setDimmerLights_Main 0065                            __end_of_setLED 16DF  
           __size_of_setDimmerLights_Line 000E             __size_of_setDimmerLights_SwOn 004C  
                          __end_of_setBuz 09AF                __end_of_DimmerLights_IOC_1 0833  
                 ??_getDimmer_Load_Status 0072                __size_of_Flash_Memory_Main 0041  
              __size_of_Flash_Memory_Read 0014                         __size_of_WDT_Main 0010  
              __end_of_DimmerLights_TMR_1 174D                       start_initialization 0021  
                         ?_LedPointSelect 0070                                 _Load_Main 004D  
                             __end_of_ISR 001F                    __size_of_getCmd_Status 000F  
                        _getDimmer_LoadGO 1203                     ??_Flash_Memory_Modify 0076  
            __size_of_Load_Initialization 0003              ?_setDimmerIntr_ControlStatus 0072  
         __size_of_setTemp_Initialization 0001                     ??_Flash_Memory_Unlock 0072  
                    __end_of_setTemp_Main 050D    __end_of_getDimmerLights_PercentToValue 0C8C  
 __size_of_getDimmerLights_PercentToValue 0065            _getDimmerLights_PercentToValue 0C27  
                     __size_of_getLoad_AD 0072                              ?_Buzzer_Main 0070  
     getDimmerLights_PercentToValue@value 0056                       __size_of_getLoad_OK 0007  
                      _set_TimeoutCleared 07FB         __end_of_setDimmerIntr_MaxmumValue 12BF  
                                ??_IO_Set 0072                  __size_of_Timeout_Counter 0015  
                               _VarErrLED 00E9                         __size_of_Division 000F  
                             ?_setSw_Main 0070                       __size_of_getTemp_AD 0064  
                  ?_setLED_Initialization 0070                         __size_of_Fosc_Set 0004  
                               _Temp_Main 0800                       ?_set_TimeoutCleared 0070  
                          ??_WDT_Clearing 0072                     setProductData@address 005C  
                     Exception_Main@count 0027                       Exception_Main@error 0028  
                                ??___bmul 0073                                  ??___wmul 0076  
                  __size_of_SwPointSelect 000B          __end_of_getMain_All_LightsStatus 1227  
                             __pdataBANK3 01C5                                  ??_setLED 0075  
                                ?_ADC_Set 0070                                  ??_setBuz 0077  
                         ??_DelayOff_Main 007A               ?_DimmerLights_SelectPointer 0070  
        __end_of_getMain_All_Error_Status 164D                __size_of_DimmerLights_Main 0024  
                      setMemory_Data@data 0072            setDimmerIntr_Dimming_Sw@lights 0074  
          getDimmerIntr_Dimming_Sw@lights 0072                             ??_setLED_Main 0074  
                       __size_of___awtoft 0022                         __size_of___ftpack 0060  
                                ?_IOC_ISR 0070                               __pbssCOMMON 007A  
                                ?_IOC_Set 0070                   Load_Main@Load_RunStatus 0026  
          getDimmerIntr_Dimming_Sw@status 0073                                 ___latbits 0003  
                        _setMemory_Modify 1371                                ?_Load_Main 0070  
                           __pcstackBANK0 0020                             __pcstackBANK2 016A  
                    ??_set_TimeoutCleared 0072                 _DimmerIntr_Initialization 0AAA  
                           DlyOff_Main@sw 005F                                  ?_WDT_Set 0070  
           ??_setDimmerIntr_ControlStatus 0073                              ??_TouchPower 0072  
                    __size_of_DlyOff_Main 005F            setDimmerIntr_MaxmumValue@value 005A  
             setDimmerLights_DimmingOn@sw 0074                             _DimmerLights1 0158  
                   setDelayOff_GO@command 005D            __size_of_setLoad_AH_AL_Restore 001B  
           __end_of_setLoad_AH_AL_Restore 14E0                                 __pnvBANK0 006D  
             __size_of_LED_Initialization 0004                           Exception_Main@i 0029  
                              ?_Temp_Main 0070        __size_of_DimmerIntr_ValueCalculate 002C  
                        ___lwdiv@dividend 0074                     DelayOffPointSelect@sw 0073  
                           _getCmd_Status 1353                                setBuz@time 0024  
                         ??_setCmd_Status 0073                       setDelayOff_GO@value 005E  
                          Load_Main@error 0022                    _setTemp_Initialization 11BD  
                ?_setDimmerLights_Dimming 005D       __end_of_Flash_Memory_Initialization 06A8  
             _Flash_Memory_Initialization 05DD                                  ?___awdiv 0072  
                               __ptext100 095C                                 __ptext101 0A02  
                                ?___lbdiv 0072                                 __ptext110 11BE  
                               __ptext102 12E3                                 __ptext103 1785  
                               __ptext112 14FD                                 __ptext104 1335  
                               __ptext113 1715                                 __ptext105 1270  
                               __ptext114 1237                                 __ptext106 11C7  
                               __ptext115 0803                                 __ptext107 11DF  
                               __ptext108 1265                                 __ptext109 0878  
                                ?___ftadd 0039                                  ?___ftdiv 0026  
                                ?___ftneg 0036                                  ?___ftmul 0026  
                                ?___fttol 0046                     __size_of_my_MainTimer 0038  
                                ?___lwdiv 0072                          ??_setProductData 005B  
                 _setOverTemp_ADV_Restore 1478             __size_of_setSw_Initialization 000E  
          __size_of_Buzzer_Initialization 0003             __end_of_Buzzer_Initialization 11C1  
                getDimmerLights_Line@line 0072                        __end_of_TouchPower 1478  
                     __size_of_setSw_Main 0159        __end_of_getDimmerIntr_DimmingValue 12FD  
            ??_setDimmerIntr_DimmingValue 0073                _getDimmerIntr_DimmingValue 12F0  
          __size_of_setDimmerLights_OnOff 009F             __end_of_setDimmerLights_OnOff 07FB  
          __size_of_setDimmerLights_SwOff 003A            __size_of_myMain_Initialization 000F  
           __end_of_setDimmerLights_SwOff 17BF             __end_of_myMain_Initialization 1371  
                          __size_of_getAD 001A                          ___lwdiv@quotient 0077  
                           _SwPointSelect 129C                       __end_of_setLED_Main 167B  
            ??_DimmerLights_TwoPhase_Main 007A                          ??_getDelayOff_GO 0074  
             __end_of_Temp_Initialization 11C7                            ___wmul@product 0076  
                                _LED_Main 11D3                           SwPointSelect@sw 0073  
                               clear_ram0 11EF                              _my_MainTimer 174D  
                  _Flash_Memory_Main$3034 0021       __end_of_DimmerLights_Initialization 11FC  
             _DimmerLights_Initialization 11F5                            ?_getCmd_Status 0070  
                _getDimmerIntr_Dimming_Sw 12E3                                  _GO_nDONE 04E9  
                       ??_Timeout_Counter 0072      __size_of_setDimmerIntr_ControlStatus 0015  
     __size_of_setDimmerIntr_DimmingValue 000B                        _Flash_Memory_Write 15C9  
                            ??_getLoad_AD 0076                                  _TMR1_ISR 14FD  
                            ??_getLoad_OK 0072                                  _TMR1_Set 12D7  
                            ??_getTemp_AD 0076                                  _WDT_Main 1381  
                 DlyOff_Initialization@sw 0074                     getSw_KeyStatus@status 0073  
                        __size_of_ADC_Set 0007                         ___wmul@multiplier 0072  
                     ?_Flash_Memory_Write 0070                     __size_of_setTemp_Main 00D1  
                 __size_of_setDelayOff_GO 007F                                  _DelayOff 006A  
                            setSw_Main@sw 002B                               ??_Load_Main 0020  
                        __size_of_IOC_ISR 0009            getMain_All_Error_Status@status 0078  
                        __size_of_IOC_Set 000B              __end_of_Flash_Memory_Erasing 12CB  
                          ?_SwPointSelect 0070                               getAD@adcon0 0075  
                             getAD@adcon1 0072                            setLED_Main@led 0076  
                    __end_of_WDT_Clearing 0004                     _DlyOff_Initialization 11DF  
       __size_of_getMain_All_LightsStatus 0008                                  _Division 1344  
               ?_getMain_All_LightsStatus 0070                  _setDimmerIntr_Dimming_RF 1424  
             setDimmerLights_OnOff@lights 0068                  _setDimmerIntr_Dimming_Sw 13E9  
                                _Fosc_Set 11D7                          __size_of_WDT_Set 0009  
                      __end_of_getLoad_AD 0DC8                        __end_of_getLoad_OK 1203  
                   _Switch_Initialization 11DB         __size_of_getMain_All_Error_Status 002E  
                    ??_Flash_Memory_Write 0072                 ?_getMain_All_Error_Status 0070  
                    __size_of_Buzzer_Main 0046                        __end_of_getTemp_AD 0C27  
                            ?_Switch_Main 0070                         getLoad_AD@channel 0020  
     __size_of_DimmerLights_SelectPointer 000B                                  _SwDetect 00D5  
                             ??_Temp_Main 007A                          getCmd_Status@cmd 0073  
                        setCmd_Status@cmd 0072             _getMain_All_Error_Status$3476 0073  
           _getMain_All_Error_Status$3477 0075                  __end_of_getDimmer_LoadGO 120A  
                     _Load_Initialization 11C1          ??_getDimmerLights_ValueToPercent 0054  
         ?_getDimmerLights_ValueToPercent 0070                                 setLED@led 0075  
               ??_setOverTemp_ADV_Restore 0072                              _setTemp_Main 043C  
                        __size_of___awdiv 0054                          __size_of___lbdiv 0021  
                        __size_of___ftadd 00F6                          __size_of___ftdiv 00A9  
                        __size_of___ftneg 0009                          __size_of___ftmul 00B4  
                        __size_of___fttol 0087                          __size_of___lwdiv 0036  
                setDimmerLights_SwOn@idle 0026                                  ___awtoft 155C  
                        ??_LedPointSelect 0072                                  ___ftpack 0B63  
           __size_of_getMain_Lights_Count 000C                    getDimmer_LoadGO@loadgo 0072  
                       getTemp_AD@channel 0077                               _setLED_Main 164D  
          __size_of_getDimmer_Load_Status 0007                  ?_DelayOff_Initialization 0070  
                        getDelayOff_GO@go 0075                          getDelayOff_GO@sw 0074  
           __end_of_getDimmer_Load_Status 1211                          setDelayOff_GO@sw 0064  
                         ___lwdiv@divisor 0072                      ?_Load_Initialization 0070  
                         ___lwdiv@counter 0079                                  __ptext10 1478  
                                __ptext11 11C4                                  __ptext20 144E  
                                __ptext12 11BD                                  __ptext21 11DB  
                                __ptext13 1218                                  __ptext30 004D  
                                __ptext22 1327                                  __ptext14 01ED  
                                __ptext31 12CB                                  __ptext23 13C4  
                                __ptext15 15A2                                  __ptext40 164D  
                                __ptext32 120A                                  __ptext24 1252  
                                __ptext16 13B3                                  __ptext41 11CF  
                                __ptext33 1203                                  __ptext25 12D7  
                                __ptext17 129C                                  __ptext50 1249  
                                __ptext42 1319                                  __ptext34 122F  
                                __ptext26 1491                                  __ptext18 1463  
                                __ptext51 1410                                  __ptext43 17BF  
                                __ptext35 14E0                                  __ptext27 1291  
                                __ptext19 07FB                                  __ptext60 127B  
                                __ptext52 050D                                  __ptext44 13A2  
                                __ptext36 16DF                                  __ptext28 11D7  
                                __ptext61 1439                                  __ptext53 1227  
                                __ptext45 0ECE                                  __ptext37 11C1  
                                __ptext29 1211                                  __ptext70 13E9  
                                __ptext62 0DC8                                  __ptext54 157E  
                                __ptext46 12BF                                  __ptext38 14C5  
                                __ptext71 12F0                                  __ptext63 1391  
                                __ptext55 0CF1                                  __ptext47 05DD  
                                __ptext39 11D3                                  __ptext80 15F3  
                                __ptext72 13D6                                  __ptext64 13FC  
                                __ptext56 075C                                  __ptext48 1286  
                                __ptext81 11F5                                  __ptext73 11FC  
                                __ptext65 121F                                  __ptext57 16AA  
                                __ptext49 15C9                                  __ptext90 0F57  
                                __ptext82 11BC                                  __ptext74 161F  
                                __ptext66 130B                                  __ptext58 125B  
                                __ptext91 0346                                  __ptext83 0AAA  
                                __ptext75 0A56                                  __ptext67 1353  
                                __ptext59 11E4                                  __ptext92 155C  
                                __ptext84 1371                                  __ptext76 167B  
                                __ptext68 0833                                  __ptext93 0B63  
                                __ptext85 0C8C                                  __ptext77 12B3  
                                __ptext69 12FD                                  __ptext94 1344  
                                __ptext86 0C27                                  __ptext78 1424  
                                __ptext95 153B                                  __ptext87 0E47  
                                __ptext79 09AF                                  __ptext96 11CB  
                                __ptext88 1240                                  __ptext97 0B04  
                                __ptext89 06A8                                  __ptext98 12A7  
                                __ptext99 08BE                                  __product 01C5  
                 ??_setLED_Initialization 0076                  ??_getDimmerLights_Status 0074  
            __end_of_getDimmerLights_Line 122F              __end_of_setDimmerLights_Main 0D56  
            __end_of_setDimmerLights_Line 130B                        _DimmerLights_IOC_1 0803  
            __end_of_setDimmerLights_SwOn 090A                              ??_setSw_Main 0029  
                           setLED@command 0074                             __size_of_main 0052  
      __size_of_DimmerIntr_Initialization 005A                           ??_getCmd_Status 0072  
                      _DimmerLights_TMR_1 1715                setDimmerLights_Main@lights 0069  
             __end_of_DelayOffPointSelect 1270                  setOverTemp_ADV_Restore@i 0073  
              ?_setDimmerLights_DimmingOn 0070                  __end_of_setMemory_Modify 1381  
                     ?_DimmerLights_IOC_1 0070                       ?_DimmerLights_TMR_1 0070  
             __size_of_Mcu_Initialization 0012                              getLoad_OK@ok 0072  
             Flash_Memory_Main@key_Status 0020                  _getAll_Sw_KeyStatus$6154 0074  
                                main@argc 016A                                  main@argv 016C  
                    _getSw_KeyStatus$6151 0074       getDimmerLights_ValueToPercent@value 0056  
                __size_of_getSw_KeyStatus 0011              setDimmerLights_Dimming@value 005F  
      __end_of_setDimmerIntr_DimmingValue 1286                _setDimmerIntr_DimmingValue 127B  
             __end_of_Flash_Memory_Modify 0F57              __size_of_getAll_Sw_KeyStatus 0011  
             __end_of_Flash_Memory_Unlock 1252                           ??_SwPointSelect 0072  
                      __end_of_setSw_Main 0346                     ??_Load_Initialization 0074  
                    ??_DimmerLights_IOC_1 0070           getDimmerLights_PercentToValue@i 0057  
                  ?_DlyOff_Initialization 0070                      ??_DimmerLights_TMR_1 0070  
                          Division@result 0021           __end_of_setOverTemp_ADV_Restore 1491  
      __end_of_DimmerLights_TwoPhase_Main 0AAA                _DimmerLights_TwoPhase_Main 0A56  
                             pic14e$flags 007E              ??_getDimmerIntr_DimmingValue 0072  
              setDimmerLights_Line@lights 0072                   setDimmerLights_SwOff@sw 0074  
                                intlevel1 0000                    ?_Switch_Initialization 0070  
                         setDelayOff_GO@i 0061                           setDelayOff_GO@j 0062  
                         setDelayOff_GO@k 0063                     setTemp_Main@SafeValue 0061  
  __end_of_setDimmerLights_Initialization 11BD   __size_of_setDimmerLights_Initialization 0001  
          _setDimmerLights_Initialization 11BC                ?_setDimmerIntr_MaxmumValue 005A  
                 ?_setTemp_Initialization 0070                           getLoad_AD@ADRES 0023  
                             getLoad_AD@i 0025                               getLoad_AD@j 0022  
                             getLoad_AD@k 0021   __end_of_DimmerLights_AssignationDimming 16AA  
__size_of_DimmerLights_AssignationDimming 002F         ??_DimmerLights_AssignationDimming 005D  
        ?_DimmerLights_AssignationDimming 0070           _DimmerLights_AssignationDimming 167B  
                    _Flash_Memory_Erasing 12BF                   __size_of_Exception_Main 00D0  
                           Division@value 0020           __end_of_DelayOff_Initialization 11CB  
                   __size_of_WDT_Clearing 0002                     __end_of_DelayOff_Main 11CF  
                 __size_of_setMemory_Data 000B                            _setDelayOff_GO 0DC8  
             ?_getDimmerIntr_DimmingValue 0070          __size_of_setDimmerLights_Dimming 0045  
             getDimmer_Load_Status@status 0072      __size_of_Flash_Memory_Initialization 00CB  
             __size_of_set_TimeoutCleared 0005                             ??_DlyOff_Main 005D  
                   setMemory_Data@address 0074                ??_getDimmerIntr_Dimming_Sw 0072  
            __end_of_setSw_Initialization 1335                           _Timeout_Counter 144E  
         __size_of_getDimmerLights_Status 000F           getDimmerLights_ValueToPercent@i 0057  
        Flash_Memory_Initialization@value 0077                __end_of_LED_Initialization 11D3  
          __end_of_setTemp_Initialization 11BE                               Division@num 0077  
                 setMemory_Modify@command 0073                     _setLoad_AH_AL_Restore 14C5  
