

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Thu Mar 19 16:01:14 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,inline,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,inline,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,inline,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,inline,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,inline,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2
    67                           	psect	text50,local,class=CODE,merge=1,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,delta=2
    69                           	psect	text52,local,class=CODE,merge=1,delta=2
    70                           	psect	text53,local,class=CODE,merge=1,delta=2
    71                           	psect	text54,local,class=CODE,merge=1,delta=2
    72                           	psect	text55,local,class=CODE,merge=1,delta=2
    73                           	psect	text56,local,class=CODE,merge=1,delta=2
    74                           	psect	text57,local,class=CODE,merge=1,delta=2
    75                           	psect	text58,local,class=CODE,merge=1,delta=2
    76                           	psect	text59,local,class=CODE,merge=1,delta=2
    77                           	psect	text60,local,class=CODE,merge=1,delta=2
    78                           	psect	text61,local,class=CODE,merge=1,delta=2
    79                           	psect	text62,local,class=CODE,merge=1,delta=2
    80                           	psect	text63,local,class=CODE,merge=1,delta=2
    81                           	psect	text64,local,class=CODE,merge=1,delta=2
    82                           	psect	text65,local,class=CODE,merge=1,delta=2
    83                           	psect	text66,local,class=CODE,merge=1,delta=2
    84                           	psect	text67,local,class=CODE,merge=1,delta=2
    85                           	psect	text68,local,class=CODE,merge=1,delta=2
    86                           	psect	text69,local,class=CODE,merge=1,delta=2
    87                           	psect	text70,local,class=CODE,merge=1,delta=2
    88                           	psect	text71,local,class=CODE,merge=1,delta=2
    89                           	psect	text72,local,class=CODE,merge=1,delta=2
    90                           	psect	text73,local,class=CODE,merge=1,delta=2
    91                           	psect	text74,local,class=CODE,merge=1,delta=2
    92                           	psect	text75,local,class=CODE,merge=1,delta=2
    93                           	psect	text76,local,class=CODE,merge=1,delta=2
    94                           	psect	text77,local,class=CODE,merge=1,delta=2
    95                           	psect	text78,local,class=CODE,merge=1,delta=2
    96                           	psect	text79,local,class=CODE,merge=1,delta=2
    97                           	psect	text80,local,class=CODE,merge=1,delta=2
    98                           	psect	text81,local,class=CODE,merge=1,delta=2
    99                           	psect	text82,local,class=CODE,merge=1,delta=2
   100                           	psect	text83,local,class=CODE,merge=1,delta=2
   101                           	psect	text84,local,class=CODE,merge=1,delta=2
   102                           	psect	text85,local,class=CODE,merge=1,delta=2
   103                           	psect	text86,local,class=CODE,merge=1,delta=2
   104                           	psect	text87,local,class=CODE,merge=1,delta=2
   105                           	psect	text88,local,class=CODE,merge=1,delta=2
   106                           	psect	text89,local,class=CODE,merge=1,delta=2
   107                           	psect	text90,local,class=CODE,merge=1,delta=2
   108                           	psect	text91,local,class=CODE,merge=1,delta=2
   109                           	psect	text92,local,class=CODE,merge=1,delta=2
   110                           	psect	text93,local,class=CODE,merge=1,inline,delta=2
   111                           	psect	text94,local,class=CODE,merge=1,delta=2
   112                           	psect	text95,local,class=CODE,merge=1,inline,delta=2
   113                           	psect	text96,local,class=CODE,merge=1,delta=2
   114                           	psect	text97,local,class=CODE,merge=1,inline,delta=2
   115                           	psect	text98,local,class=CODE,merge=1,delta=2
   116                           	psect	text99,local,class=CODE,merge=1,delta=2
   117                           	psect	text100,local,class=CODE,merge=1,delta=2
   118                           	psect	text101,local,class=CODE,merge=1,delta=2
   119                           	psect	text102,local,class=CODE,merge=1,delta=2
   120                           	psect	text103,local,class=CODE,merge=1,delta=2
   121                           	psect	text104,local,class=CODE,merge=1,inline,delta=2
   122                           	psect	text105,local,class=CODE,merge=1,inline,delta=2
   123                           	psect	text106,local,class=CODE,merge=1,delta=2
   124                           	psect	text107,local,class=CODE,merge=1,delta=2
   125                           	psect	text108,local,class=CODE,merge=1,inline,delta=2
   126                           	psect	text109,local,class=CODE,merge=1,inline,delta=2
   127                           	psect	intentry,global,class=CODE,delta=2
   128                           	psect	text111,local,class=CODE,merge=1,inline,delta=2
   129                           	psect	text112,local,class=CODE,merge=1,inline,delta=2
   130                           	psect	text113,local,class=CODE,merge=1,inline,delta=2
   131                           	psect	text114,local,class=CODE,merge=1,inline,delta=2
   132                           	psect	text115,local,class=CODE,merge=1,inline,delta=2
   133                           	psect	text116,local,class=CODE,merge=1,delta=2
   134                           	dabs	1,0x7E,2
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  0090                     	;# 
   166  0091                     	;# 
   167  0092                     	;# 
   168  0095                     	;# 
   169  0096                     	;# 
   170  0097                     	;# 
   171  0099                     	;# 
   172  009A                     	;# 
   173  009B                     	;# 
   174  009B                     	;# 
   175  009C                     	;# 
   176  009D                     	;# 
   177  009E                     	;# 
   178  010C                     	;# 
   179  010D                     	;# 
   180  010E                     	;# 
   181  0116                     	;# 
   182  0117                     	;# 
   183  011D                     	;# 
   184  018C                     	;# 
   185  018D                     	;# 
   186  018E                     	;# 
   187  0191                     	;# 
   188  0191                     	;# 
   189  0192                     	;# 
   190  0193                     	;# 
   191  0193                     	;# 
   192  0194                     	;# 
   193  0195                     	;# 
   194  0196                     	;# 
   195  0197                     	;# 
   196  0199                     	;# 
   197  019A                     	;# 
   198  019B                     	;# 
   199  019B                     	;# 
   200  019B                     	;# 
   201  019B                     	;# 
   202  019C                     	;# 
   203  019C                     	;# 
   204  019D                     	;# 
   205  019E                     	;# 
   206  019F                     	;# 
   207  020D                     	;# 
   208  0210                     	;# 
   209  0211                     	;# 
   210  0211                     	;# 
   211  0212                     	;# 
   212  0212                     	;# 
   213  0213                     	;# 
   214  0213                     	;# 
   215  0214                     	;# 
   216  0214                     	;# 
   217  0215                     	;# 
   218  0215                     	;# 
   219  0215                     	;# 
   220  0216                     	;# 
   221  0216                     	;# 
   222  0217                     	;# 
   223  0217                     	;# 
   224  0291                     	;# 
   225  0291                     	;# 
   226  0292                     	;# 
   227  0293                     	;# 
   228  0298                     	;# 
   229  0298                     	;# 
   230  0299                     	;# 
   231  029A                     	;# 
   232  0394                     	;# 
   233  0395                     	;# 
   234  0396                     	;# 
   235  0FE4                     	;# 
   236  0FE5                     	;# 
   237  0FE6                     	;# 
   238  0FE7                     	;# 
   239  0FE8                     	;# 
   240  0FE9                     	;# 
   241  0FEA                     	;# 
   242  0FEB                     	;# 
   243  0FED                     	;# 
   244  0FEE                     	;# 
   245  0FEF                     	;# 
   246  0000                     	;# 
   247  0001                     	;# 
   248  0002                     	;# 
   249  0003                     	;# 
   250  0004                     	;# 
   251  0005                     	;# 
   252  0006                     	;# 
   253  0007                     	;# 
   254  0008                     	;# 
   255  0009                     	;# 
   256  000A                     	;# 
   257  000B                     	;# 
   258  000C                     	;# 
   259  000D                     	;# 
   260  000E                     	;# 
   261  0010                     	;# 
   262  0011                     	;# 
   263  0012                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0016                     	;# 
   267  0017                     	;# 
   268  0018                     	;# 
   269  0019                     	;# 
   270  001A                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  008C                     	;# 
   274  008D                     	;# 
   275  008E                     	;# 
   276  0090                     	;# 
   277  0091                     	;# 
   278  0092                     	;# 
   279  0095                     	;# 
   280  0096                     	;# 
   281  0097                     	;# 
   282  0099                     	;# 
   283  009A                     	;# 
   284  009B                     	;# 
   285  009B                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  0116                     	;# 
   293  0117                     	;# 
   294  011D                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  018E                     	;# 
   298  0191                     	;# 
   299  0191                     	;# 
   300  0192                     	;# 
   301  0193                     	;# 
   302  0193                     	;# 
   303  0194                     	;# 
   304  0195                     	;# 
   305  0196                     	;# 
   306  0197                     	;# 
   307  0199                     	;# 
   308  019A                     	;# 
   309  019B                     	;# 
   310  019B                     	;# 
   311  019B                     	;# 
   312  019B                     	;# 
   313  019C                     	;# 
   314  019C                     	;# 
   315  019D                     	;# 
   316  019E                     	;# 
   317  019F                     	;# 
   318  020D                     	;# 
   319  0210                     	;# 
   320  0211                     	;# 
   321  0211                     	;# 
   322  0212                     	;# 
   323  0212                     	;# 
   324  0213                     	;# 
   325  0213                     	;# 
   326  0214                     	;# 
   327  0214                     	;# 
   328  0215                     	;# 
   329  0215                     	;# 
   330  0215                     	;# 
   331  0216                     	;# 
   332  0216                     	;# 
   333  0217                     	;# 
   334  0217                     	;# 
   335  0291                     	;# 
   336  0291                     	;# 
   337  0292                     	;# 
   338  0293                     	;# 
   339  0298                     	;# 
   340  0298                     	;# 
   341  0299                     	;# 
   342  029A                     	;# 
   343  0394                     	;# 
   344  0395                     	;# 
   345  0396                     	;# 
   346  0FE4                     	;# 
   347  0FE5                     	;# 
   348  0FE6                     	;# 
   349  0FE7                     	;# 
   350  0FE8                     	;# 
   351  0FE9                     	;# 
   352  0FEA                     	;# 
   353  0FEB                     	;# 
   354  0FED                     	;# 
   355  0FEE                     	;# 
   356  0FEF                     	;# 
   357  0000                     	;# 
   358  0001                     	;# 
   359  0002                     	;# 
   360  0003                     	;# 
   361  0004                     	;# 
   362  0005                     	;# 
   363  0006                     	;# 
   364  0007                     	;# 
   365  0008                     	;# 
   366  0009                     	;# 
   367  000A                     	;# 
   368  000B                     	;# 
   369  000C                     	;# 
   370  000D                     	;# 
   371  000E                     	;# 
   372  0010                     	;# 
   373  0011                     	;# 
   374  0012                     	;# 
   375  0015                     	;# 
   376  0016                     	;# 
   377  0016                     	;# 
   378  0017                     	;# 
   379  0018                     	;# 
   380  0019                     	;# 
   381  001A                     	;# 
   382  001B                     	;# 
   383  001C                     	;# 
   384  008C                     	;# 
   385  008D                     	;# 
   386  008E                     	;# 
   387  0090                     	;# 
   388  0091                     	;# 
   389  0092                     	;# 
   390  0095                     	;# 
   391  0096                     	;# 
   392  0097                     	;# 
   393  0099                     	;# 
   394  009A                     	;# 
   395  009B                     	;# 
   396  009B                     	;# 
   397  009C                     	;# 
   398  009D                     	;# 
   399  009E                     	;# 
   400  010C                     	;# 
   401  010D                     	;# 
   402  010E                     	;# 
   403  0116                     	;# 
   404  0117                     	;# 
   405  011D                     	;# 
   406  018C                     	;# 
   407  018D                     	;# 
   408  018E                     	;# 
   409  0191                     	;# 
   410  0191                     	;# 
   411  0192                     	;# 
   412  0193                     	;# 
   413  0193                     	;# 
   414  0194                     	;# 
   415  0195                     	;# 
   416  0196                     	;# 
   417  0197                     	;# 
   418  0199                     	;# 
   419  019A                     	;# 
   420  019B                     	;# 
   421  019B                     	;# 
   422  019B                     	;# 
   423  019B                     	;# 
   424  019C                     	;# 
   425  019C                     	;# 
   426  019D                     	;# 
   427  019E                     	;# 
   428  019F                     	;# 
   429  020D                     	;# 
   430  0210                     	;# 
   431  0211                     	;# 
   432  0211                     	;# 
   433  0212                     	;# 
   434  0212                     	;# 
   435  0213                     	;# 
   436  0213                     	;# 
   437  0214                     	;# 
   438  0214                     	;# 
   439  0215                     	;# 
   440  0215                     	;# 
   441  0215                     	;# 
   442  0216                     	;# 
   443  0216                     	;# 
   444  0217                     	;# 
   445  0217                     	;# 
   446  0291                     	;# 
   447  0291                     	;# 
   448  0292                     	;# 
   449  0293                     	;# 
   450  0298                     	;# 
   451  0298                     	;# 
   452  0299                     	;# 
   453  029A                     	;# 
   454  0394                     	;# 
   455  0395                     	;# 
   456  0396                     	;# 
   457  0FE4                     	;# 
   458  0FE5                     	;# 
   459  0FE6                     	;# 
   460  0FE7                     	;# 
   461  0FE8                     	;# 
   462  0FE9                     	;# 
   463  0FEA                     	;# 
   464  0FEB                     	;# 
   465  0FED                     	;# 
   466  0FEE                     	;# 
   467  0FEF                     	;# 
   468  0000                     	;# 
   469  0001                     	;# 
   470  0002                     	;# 
   471  0003                     	;# 
   472  0004                     	;# 
   473  0005                     	;# 
   474  0006                     	;# 
   475  0007                     	;# 
   476  0008                     	;# 
   477  0009                     	;# 
   478  000A                     	;# 
   479  000B                     	;# 
   480  000C                     	;# 
   481  000D                     	;# 
   482  000E                     	;# 
   483  0010                     	;# 
   484  0011                     	;# 
   485  0012                     	;# 
   486  0015                     	;# 
   487  0016                     	;# 
   488  0016                     	;# 
   489  0017                     	;# 
   490  0018                     	;# 
   491  0019                     	;# 
   492  001A                     	;# 
   493  001B                     	;# 
   494  001C                     	;# 
   495  008C                     	;# 
   496  008D                     	;# 
   497  008E                     	;# 
   498  0090                     	;# 
   499  0091                     	;# 
   500  0092                     	;# 
   501  0095                     	;# 
   502  0096                     	;# 
   503  0097                     	;# 
   504  0099                     	;# 
   505  009A                     	;# 
   506  009B                     	;# 
   507  009B                     	;# 
   508  009C                     	;# 
   509  009D                     	;# 
   510  009E                     	;# 
   511  010C                     	;# 
   512  010D                     	;# 
   513  010E                     	;# 
   514  0116                     	;# 
   515  0117                     	;# 
   516  011D                     	;# 
   517  018C                     	;# 
   518  018D                     	;# 
   519  018E                     	;# 
   520  0191                     	;# 
   521  0191                     	;# 
   522  0192                     	;# 
   523  0193                     	;# 
   524  0193                     	;# 
   525  0194                     	;# 
   526  0195                     	;# 
   527  0196                     	;# 
   528  0197                     	;# 
   529  0199                     	;# 
   530  019A                     	;# 
   531  019B                     	;# 
   532  019B                     	;# 
   533  019B                     	;# 
   534  019B                     	;# 
   535  019C                     	;# 
   536  019C                     	;# 
   537  019D                     	;# 
   538  019E                     	;# 
   539  019F                     	;# 
   540  020D                     	;# 
   541  0210                     	;# 
   542  0211                     	;# 
   543  0211                     	;# 
   544  0212                     	;# 
   545  0212                     	;# 
   546  0213                     	;# 
   547  0213                     	;# 
   548  0214                     	;# 
   549  0214                     	;# 
   550  0215                     	;# 
   551  0215                     	;# 
   552  0215                     	;# 
   553  0216                     	;# 
   554  0216                     	;# 
   555  0217                     	;# 
   556  0217                     	;# 
   557  0291                     	;# 
   558  0291                     	;# 
   559  0292                     	;# 
   560  0293                     	;# 
   561  0298                     	;# 
   562  0298                     	;# 
   563  0299                     	;# 
   564  029A                     	;# 
   565  0394                     	;# 
   566  0395                     	;# 
   567  0396                     	;# 
   568  0FE4                     	;# 
   569  0FE5                     	;# 
   570  0FE6                     	;# 
   571  0FE7                     	;# 
   572  0FE8                     	;# 
   573  0FE9                     	;# 
   574  0FEA                     	;# 
   575  0FEB                     	;# 
   576  0FED                     	;# 
   577  0FEE                     	;# 
   578  0FEF                     	;# 
   579  0000                     	;# 
   580  0001                     	;# 
   581  0002                     	;# 
   582  0003                     	;# 
   583  0004                     	;# 
   584  0005                     	;# 
   585  0006                     	;# 
   586  0007                     	;# 
   587  0008                     	;# 
   588  0009                     	;# 
   589  000A                     	;# 
   590  000B                     	;# 
   591  000C                     	;# 
   592  000D                     	;# 
   593  000E                     	;# 
   594  0010                     	;# 
   595  0011                     	;# 
   596  0012                     	;# 
   597  0015                     	;# 
   598  0016                     	;# 
   599  0016                     	;# 
   600  0017                     	;# 
   601  0018                     	;# 
   602  0019                     	;# 
   603  001A                     	;# 
   604  001B                     	;# 
   605  001C                     	;# 
   606  008C                     	;# 
   607  008D                     	;# 
   608  008E                     	;# 
   609  0090                     	;# 
   610  0091                     	;# 
   611  0092                     	;# 
   612  0095                     	;# 
   613  0096                     	;# 
   614  0097                     	;# 
   615  0099                     	;# 
   616  009A                     	;# 
   617  009B                     	;# 
   618  009B                     	;# 
   619  009C                     	;# 
   620  009D                     	;# 
   621  009E                     	;# 
   622  010C                     	;# 
   623  010D                     	;# 
   624  010E                     	;# 
   625  0116                     	;# 
   626  0117                     	;# 
   627  011D                     	;# 
   628  018C                     	;# 
   629  018D                     	;# 
   630  018E                     	;# 
   631  0191                     	;# 
   632  0191                     	;# 
   633  0192                     	;# 
   634  0193                     	;# 
   635  0193                     	;# 
   636  0194                     	;# 
   637  0195                     	;# 
   638  0196                     	;# 
   639  0197                     	;# 
   640  0199                     	;# 
   641  019A                     	;# 
   642  019B                     	;# 
   643  019B                     	;# 
   644  019B                     	;# 
   645  019B                     	;# 
   646  019C                     	;# 
   647  019C                     	;# 
   648  019D                     	;# 
   649  019E                     	;# 
   650  019F                     	;# 
   651  020D                     	;# 
   652  0210                     	;# 
   653  0211                     	;# 
   654  0211                     	;# 
   655  0212                     	;# 
   656  0212                     	;# 
   657  0213                     	;# 
   658  0213                     	;# 
   659  0214                     	;# 
   660  0214                     	;# 
   661  0215                     	;# 
   662  0215                     	;# 
   663  0215                     	;# 
   664  0216                     	;# 
   665  0216                     	;# 
   666  0217                     	;# 
   667  0217                     	;# 
   668  0291                     	;# 
   669  0291                     	;# 
   670  0292                     	;# 
   671  0293                     	;# 
   672  0298                     	;# 
   673  0298                     	;# 
   674  0299                     	;# 
   675  029A                     	;# 
   676  0394                     	;# 
   677  0395                     	;# 
   678  0396                     	;# 
   679  0FE4                     	;# 
   680  0FE5                     	;# 
   681  0FE6                     	;# 
   682  0FE7                     	;# 
   683  0FE8                     	;# 
   684  0FE9                     	;# 
   685  0FEA                     	;# 
   686  0FEB                     	;# 
   687  0FED                     	;# 
   688  0FEE                     	;# 
   689  0FEF                     	;# 
   690  0000                     	;# 
   691  0001                     	;# 
   692  0002                     	;# 
   693  0003                     	;# 
   694  0004                     	;# 
   695  0005                     	;# 
   696  0006                     	;# 
   697  0007                     	;# 
   698  0008                     	;# 
   699  0009                     	;# 
   700  000A                     	;# 
   701  000B                     	;# 
   702  000C                     	;# 
   703  000D                     	;# 
   704  000E                     	;# 
   705  0010                     	;# 
   706  0011                     	;# 
   707  0012                     	;# 
   708  0015                     	;# 
   709  0016                     	;# 
   710  0016                     	;# 
   711  0017                     	;# 
   712  0018                     	;# 
   713  0019                     	;# 
   714  001A                     	;# 
   715  001B                     	;# 
   716  001C                     	;# 
   717  008C                     	;# 
   718  008D                     	;# 
   719  008E                     	;# 
   720  0090                     	;# 
   721  0091                     	;# 
   722  0092                     	;# 
   723  0095                     	;# 
   724  0096                     	;# 
   725  0097                     	;# 
   726  0099                     	;# 
   727  009A                     	;# 
   728  009B                     	;# 
   729  009B                     	;# 
   730  009C                     	;# 
   731  009D                     	;# 
   732  009E                     	;# 
   733  010C                     	;# 
   734  010D                     	;# 
   735  010E                     	;# 
   736  0116                     	;# 
   737  0117                     	;# 
   738  011D                     	;# 
   739  018C                     	;# 
   740  018D                     	;# 
   741  018E                     	;# 
   742  0191                     	;# 
   743  0191                     	;# 
   744  0192                     	;# 
   745  0193                     	;# 
   746  0193                     	;# 
   747  0194                     	;# 
   748  0195                     	;# 
   749  0196                     	;# 
   750  0197                     	;# 
   751  0199                     	;# 
   752  019A                     	;# 
   753  019B                     	;# 
   754  019B                     	;# 
   755  019B                     	;# 
   756  019B                     	;# 
   757  019C                     	;# 
   758  019C                     	;# 
   759  019D                     	;# 
   760  019E                     	;# 
   761  019F                     	;# 
   762  020D                     	;# 
   763  0210                     	;# 
   764  0211                     	;# 
   765  0211                     	;# 
   766  0212                     	;# 
   767  0212                     	;# 
   768  0213                     	;# 
   769  0213                     	;# 
   770  0214                     	;# 
   771  0214                     	;# 
   772  0215                     	;# 
   773  0215                     	;# 
   774  0215                     	;# 
   775  0216                     	;# 
   776  0216                     	;# 
   777  0217                     	;# 
   778  0217                     	;# 
   779  0291                     	;# 
   780  0291                     	;# 
   781  0292                     	;# 
   782  0293                     	;# 
   783  0298                     	;# 
   784  0298                     	;# 
   785  0299                     	;# 
   786  029A                     	;# 
   787  0394                     	;# 
   788  0395                     	;# 
   789  0396                     	;# 
   790  0FE4                     	;# 
   791  0FE5                     	;# 
   792  0FE6                     	;# 
   793  0FE7                     	;# 
   794  0FE8                     	;# 
   795  0FE9                     	;# 
   796  0FEA                     	;# 
   797  0FEB                     	;# 
   798  0FED                     	;# 
   799  0FEE                     	;# 
   800  0FEF                     	;# 
   801  0000                     	;# 
   802  0001                     	;# 
   803  0002                     	;# 
   804  0003                     	;# 
   805  0004                     	;# 
   806  0005                     	;# 
   807  0006                     	;# 
   808  0007                     	;# 
   809  0008                     	;# 
   810  0009                     	;# 
   811  000A                     	;# 
   812  000B                     	;# 
   813  000C                     	;# 
   814  000D                     	;# 
   815  000E                     	;# 
   816  0010                     	;# 
   817  0011                     	;# 
   818  0012                     	;# 
   819  0015                     	;# 
   820  0016                     	;# 
   821  0016                     	;# 
   822  0017                     	;# 
   823  0018                     	;# 
   824  0019                     	;# 
   825  001A                     	;# 
   826  001B                     	;# 
   827  001C                     	;# 
   828  008C                     	;# 
   829  008D                     	;# 
   830  008E                     	;# 
   831  0090                     	;# 
   832  0091                     	;# 
   833  0092                     	;# 
   834  0095                     	;# 
   835  0096                     	;# 
   836  0097                     	;# 
   837  0099                     	;# 
   838  009A                     	;# 
   839  009B                     	;# 
   840  009B                     	;# 
   841  009C                     	;# 
   842  009D                     	;# 
   843  009E                     	;# 
   844  010C                     	;# 
   845  010D                     	;# 
   846  010E                     	;# 
   847  0116                     	;# 
   848  0117                     	;# 
   849  011D                     	;# 
   850  018C                     	;# 
   851  018D                     	;# 
   852  018E                     	;# 
   853  0191                     	;# 
   854  0191                     	;# 
   855  0192                     	;# 
   856  0193                     	;# 
   857  0193                     	;# 
   858  0194                     	;# 
   859  0195                     	;# 
   860  0196                     	;# 
   861  0197                     	;# 
   862  0199                     	;# 
   863  019A                     	;# 
   864  019B                     	;# 
   865  019B                     	;# 
   866  019B                     	;# 
   867  019B                     	;# 
   868  019C                     	;# 
   869  019C                     	;# 
   870  019D                     	;# 
   871  019E                     	;# 
   872  019F                     	;# 
   873  020D                     	;# 
   874  0210                     	;# 
   875  0211                     	;# 
   876  0211                     	;# 
   877  0212                     	;# 
   878  0212                     	;# 
   879  0213                     	;# 
   880  0213                     	;# 
   881  0214                     	;# 
   882  0214                     	;# 
   883  0215                     	;# 
   884  0215                     	;# 
   885  0215                     	;# 
   886  0216                     	;# 
   887  0216                     	;# 
   888  0217                     	;# 
   889  0217                     	;# 
   890  0291                     	;# 
   891  0291                     	;# 
   892  0292                     	;# 
   893  0293                     	;# 
   894  0298                     	;# 
   895  0298                     	;# 
   896  0299                     	;# 
   897  029A                     	;# 
   898  0394                     	;# 
   899  0395                     	;# 
   900  0396                     	;# 
   901  0FE4                     	;# 
   902  0FE5                     	;# 
   903  0FE6                     	;# 
   904  0FE7                     	;# 
   905  0FE8                     	;# 
   906  0FE9                     	;# 
   907  0FEA                     	;# 
   908  0FEB                     	;# 
   909  0FED                     	;# 
   910  0FEE                     	;# 
   911  0FEF                     	;# 
   912  0000                     	;# 
   913  0001                     	;# 
   914  0002                     	;# 
   915  0003                     	;# 
   916  0004                     	;# 
   917  0005                     	;# 
   918  0006                     	;# 
   919  0007                     	;# 
   920  0008                     	;# 
   921  0009                     	;# 
   922  000A                     	;# 
   923  000B                     	;# 
   924  000C                     	;# 
   925  000D                     	;# 
   926  000E                     	;# 
   927  0010                     	;# 
   928  0011                     	;# 
   929  0012                     	;# 
   930  0015                     	;# 
   931  0016                     	;# 
   932  0016                     	;# 
   933  0017                     	;# 
   934  0018                     	;# 
   935  0019                     	;# 
   936  001A                     	;# 
   937  001B                     	;# 
   938  001C                     	;# 
   939  008C                     	;# 
   940  008D                     	;# 
   941  008E                     	;# 
   942  0090                     	;# 
   943  0091                     	;# 
   944  0092                     	;# 
   945  0095                     	;# 
   946  0096                     	;# 
   947  0097                     	;# 
   948  0099                     	;# 
   949  009A                     	;# 
   950  009B                     	;# 
   951  009B                     	;# 
   952  009C                     	;# 
   953  009D                     	;# 
   954  009E                     	;# 
   955  010C                     	;# 
   956  010D                     	;# 
   957  010E                     	;# 
   958  0116                     	;# 
   959  0117                     	;# 
   960  011D                     	;# 
   961  018C                     	;# 
   962  018D                     	;# 
   963  018E                     	;# 
   964  0191                     	;# 
   965  0191                     	;# 
   966  0192                     	;# 
   967  0193                     	;# 
   968  0193                     	;# 
   969  0194                     	;# 
   970  0195                     	;# 
   971  0196                     	;# 
   972  0197                     	;# 
   973  0199                     	;# 
   974  019A                     	;# 
   975  019B                     	;# 
   976  019B                     	;# 
   977  019B                     	;# 
   978  019B                     	;# 
   979  019C                     	;# 
   980  019C                     	;# 
   981  019D                     	;# 
   982  019E                     	;# 
   983  019F                     	;# 
   984  020D                     	;# 
   985  0210                     	;# 
   986  0211                     	;# 
   987  0211                     	;# 
   988  0212                     	;# 
   989  0212                     	;# 
   990  0213                     	;# 
   991  0213                     	;# 
   992  0214                     	;# 
   993  0214                     	;# 
   994  0215                     	;# 
   995  0215                     	;# 
   996  0215                     	;# 
   997  0216                     	;# 
   998  0216                     	;# 
   999  0217                     	;# 
  1000  0217                     	;# 
  1001  0291                     	;# 
  1002  0291                     	;# 
  1003  0292                     	;# 
  1004  0293                     	;# 
  1005  0298                     	;# 
  1006  0298                     	;# 
  1007  0299                     	;# 
  1008  029A                     	;# 
  1009  0394                     	;# 
  1010  0395                     	;# 
  1011  0396                     	;# 
  1012  0FE4                     	;# 
  1013  0FE5                     	;# 
  1014  0FE6                     	;# 
  1015  0FE7                     	;# 
  1016  0FE8                     	;# 
  1017  0FE9                     	;# 
  1018  0FEA                     	;# 
  1019  0FEB                     	;# 
  1020  0FED                     	;# 
  1021  0FEE                     	;# 
  1022  0FEF                     	;# 
  1023  0000                     	;# 
  1024  0001                     	;# 
  1025  0002                     	;# 
  1026  0003                     	;# 
  1027  0004                     	;# 
  1028  0005                     	;# 
  1029  0006                     	;# 
  1030  0007                     	;# 
  1031  0008                     	;# 
  1032  0009                     	;# 
  1033  000A                     	;# 
  1034  000B                     	;# 
  1035  000C                     	;# 
  1036  000D                     	;# 
  1037  000E                     	;# 
  1038  0010                     	;# 
  1039  0011                     	;# 
  1040  0012                     	;# 
  1041  0015                     	;# 
  1042  0016                     	;# 
  1043  0016                     	;# 
  1044  0017                     	;# 
  1045  0018                     	;# 
  1046  0019                     	;# 
  1047  001A                     	;# 
  1048  001B                     	;# 
  1049  001C                     	;# 
  1050  008C                     	;# 
  1051  008D                     	;# 
  1052  008E                     	;# 
  1053  0090                     	;# 
  1054  0091                     	;# 
  1055  0092                     	;# 
  1056  0095                     	;# 
  1057  0096                     	;# 
  1058  0097                     	;# 
  1059  0099                     	;# 
  1060  009A                     	;# 
  1061  009B                     	;# 
  1062  009B                     	;# 
  1063  009C                     	;# 
  1064  009D                     	;# 
  1065  009E                     	;# 
  1066  010C                     	;# 
  1067  010D                     	;# 
  1068  010E                     	;# 
  1069  0116                     	;# 
  1070  0117                     	;# 
  1071  011D                     	;# 
  1072  018C                     	;# 
  1073  018D                     	;# 
  1074  018E                     	;# 
  1075  0191                     	;# 
  1076  0191                     	;# 
  1077  0192                     	;# 
  1078  0193                     	;# 
  1079  0193                     	;# 
  1080  0194                     	;# 
  1081  0195                     	;# 
  1082  0196                     	;# 
  1083  0197                     	;# 
  1084  0199                     	;# 
  1085  019A                     	;# 
  1086  019B                     	;# 
  1087  019B                     	;# 
  1088  019B                     	;# 
  1089  019B                     	;# 
  1090  019C                     	;# 
  1091  019C                     	;# 
  1092  019D                     	;# 
  1093  019E                     	;# 
  1094  019F                     	;# 
  1095  020D                     	;# 
  1096  0210                     	;# 
  1097  0211                     	;# 
  1098  0211                     	;# 
  1099  0212                     	;# 
  1100  0212                     	;# 
  1101  0213                     	;# 
  1102  0213                     	;# 
  1103  0214                     	;# 
  1104  0214                     	;# 
  1105  0215                     	;# 
  1106  0215                     	;# 
  1107  0215                     	;# 
  1108  0216                     	;# 
  1109  0216                     	;# 
  1110  0217                     	;# 
  1111  0217                     	;# 
  1112  0291                     	;# 
  1113  0291                     	;# 
  1114  0292                     	;# 
  1115  0293                     	;# 
  1116  0298                     	;# 
  1117  0298                     	;# 
  1118  0299                     	;# 
  1119  029A                     	;# 
  1120  0394                     	;# 
  1121  0395                     	;# 
  1122  0396                     	;# 
  1123  0FE4                     	;# 
  1124  0FE5                     	;# 
  1125  0FE6                     	;# 
  1126  0FE7                     	;# 
  1127  0FE8                     	;# 
  1128  0FE9                     	;# 
  1129  0FEA                     	;# 
  1130  0FEB                     	;# 
  1131  0FED                     	;# 
  1132  0FEE                     	;# 
  1133  0FEF                     	;# 
  1134  0000                     	;# 
  1135  0001                     	;# 
  1136  0002                     	;# 
  1137  0003                     	;# 
  1138  0004                     	;# 
  1139  0005                     	;# 
  1140  0006                     	;# 
  1141  0007                     	;# 
  1142  0008                     	;# 
  1143  0009                     	;# 
  1144  000A                     	;# 
  1145  000B                     	;# 
  1146  000C                     	;# 
  1147  000D                     	;# 
  1148  000E                     	;# 
  1149  0010                     	;# 
  1150  0011                     	;# 
  1151  0012                     	;# 
  1152  0015                     	;# 
  1153  0016                     	;# 
  1154  0016                     	;# 
  1155  0017                     	;# 
  1156  0018                     	;# 
  1157  0019                     	;# 
  1158  001A                     	;# 
  1159  001B                     	;# 
  1160  001C                     	;# 
  1161  008C                     	;# 
  1162  008D                     	;# 
  1163  008E                     	;# 
  1164  0090                     	;# 
  1165  0091                     	;# 
  1166  0092                     	;# 
  1167  0095                     	;# 
  1168  0096                     	;# 
  1169  0097                     	;# 
  1170  0099                     	;# 
  1171  009A                     	;# 
  1172  009B                     	;# 
  1173  009B                     	;# 
  1174  009C                     	;# 
  1175  009D                     	;# 
  1176  009E                     	;# 
  1177  010C                     	;# 
  1178  010D                     	;# 
  1179  010E                     	;# 
  1180  0116                     	;# 
  1181  0117                     	;# 
  1182  011D                     	;# 
  1183  018C                     	;# 
  1184  018D                     	;# 
  1185  018E                     	;# 
  1186  0191                     	;# 
  1187  0191                     	;# 
  1188  0192                     	;# 
  1189  0193                     	;# 
  1190  0193                     	;# 
  1191  0194                     	;# 
  1192  0195                     	;# 
  1193  0196                     	;# 
  1194  0197                     	;# 
  1195  0199                     	;# 
  1196  019A                     	;# 
  1197  019B                     	;# 
  1198  019B                     	;# 
  1199  019B                     	;# 
  1200  019B                     	;# 
  1201  019C                     	;# 
  1202  019C                     	;# 
  1203  019D                     	;# 
  1204  019E                     	;# 
  1205  019F                     	;# 
  1206  020D                     	;# 
  1207  0210                     	;# 
  1208  0211                     	;# 
  1209  0211                     	;# 
  1210  0212                     	;# 
  1211  0212                     	;# 
  1212  0213                     	;# 
  1213  0213                     	;# 
  1214  0214                     	;# 
  1215  0214                     	;# 
  1216  0215                     	;# 
  1217  0215                     	;# 
  1218  0215                     	;# 
  1219  0216                     	;# 
  1220  0216                     	;# 
  1221  0217                     	;# 
  1222  0217                     	;# 
  1223  0291                     	;# 
  1224  0291                     	;# 
  1225  0292                     	;# 
  1226  0293                     	;# 
  1227  0298                     	;# 
  1228  0298                     	;# 
  1229  0299                     	;# 
  1230  029A                     	;# 
  1231  0394                     	;# 
  1232  0395                     	;# 
  1233  0396                     	;# 
  1234  0FE4                     	;# 
  1235  0FE5                     	;# 
  1236  0FE6                     	;# 
  1237  0FE7                     	;# 
  1238  0FE8                     	;# 
  1239  0FE9                     	;# 
  1240  0FEA                     	;# 
  1241  0FEB                     	;# 
  1242  0FED                     	;# 
  1243  0FEE                     	;# 
  1244  0FEF                     	;# 
  1245  0000                     	;# 
  1246  0001                     	;# 
  1247  0002                     	;# 
  1248  0003                     	;# 
  1249  0004                     	;# 
  1250  0005                     	;# 
  1251  0006                     	;# 
  1252  0007                     	;# 
  1253  0008                     	;# 
  1254  0009                     	;# 
  1255  000A                     	;# 
  1256  000B                     	;# 
  1257  000C                     	;# 
  1258  000D                     	;# 
  1259  000E                     	;# 
  1260  0010                     	;# 
  1261  0011                     	;# 
  1262  0012                     	;# 
  1263  0015                     	;# 
  1264  0016                     	;# 
  1265  0016                     	;# 
  1266  0017                     	;# 
  1267  0018                     	;# 
  1268  0019                     	;# 
  1269  001A                     	;# 
  1270  001B                     	;# 
  1271  001C                     	;# 
  1272  008C                     	;# 
  1273  008D                     	;# 
  1274  008E                     	;# 
  1275  0090                     	;# 
  1276  0091                     	;# 
  1277  0092                     	;# 
  1278  0095                     	;# 
  1279  0096                     	;# 
  1280  0097                     	;# 
  1281  0099                     	;# 
  1282  009A                     	;# 
  1283  009B                     	;# 
  1284  009B                     	;# 
  1285  009C                     	;# 
  1286  009D                     	;# 
  1287  009E                     	;# 
  1288  010C                     	;# 
  1289  010D                     	;# 
  1290  010E                     	;# 
  1291  0116                     	;# 
  1292  0117                     	;# 
  1293  011D                     	;# 
  1294  018C                     	;# 
  1295  018D                     	;# 
  1296  018E                     	;# 
  1297  0191                     	;# 
  1298  0191                     	;# 
  1299  0192                     	;# 
  1300  0193                     	;# 
  1301  0193                     	;# 
  1302  0194                     	;# 
  1303  0195                     	;# 
  1304  0196                     	;# 
  1305  0197                     	;# 
  1306  0199                     	;# 
  1307  019A                     	;# 
  1308  019B                     	;# 
  1309  019B                     	;# 
  1310  019B                     	;# 
  1311  019B                     	;# 
  1312  019C                     	;# 
  1313  019C                     	;# 
  1314  019D                     	;# 
  1315  019E                     	;# 
  1316  019F                     	;# 
  1317  020D                     	;# 
  1318  0210                     	;# 
  1319  0211                     	;# 
  1320  0211                     	;# 
  1321  0212                     	;# 
  1322  0212                     	;# 
  1323  0213                     	;# 
  1324  0213                     	;# 
  1325  0214                     	;# 
  1326  0214                     	;# 
  1327  0215                     	;# 
  1328  0215                     	;# 
  1329  0215                     	;# 
  1330  0216                     	;# 
  1331  0216                     	;# 
  1332  0217                     	;# 
  1333  0217                     	;# 
  1334  0291                     	;# 
  1335  0291                     	;# 
  1336  0292                     	;# 
  1337  0293                     	;# 
  1338  0298                     	;# 
  1339  0298                     	;# 
  1340  0299                     	;# 
  1341  029A                     	;# 
  1342  0394                     	;# 
  1343  0395                     	;# 
  1344  0396                     	;# 
  1345  0FE4                     	;# 
  1346  0FE5                     	;# 
  1347  0FE6                     	;# 
  1348  0FE7                     	;# 
  1349  0FE8                     	;# 
  1350  0FE9                     	;# 
  1351  0FEA                     	;# 
  1352  0FEB                     	;# 
  1353  0FED                     	;# 
  1354  0FEE                     	;# 
  1355  0FEF                     	;# 
  1356  0000                     	;# 
  1357  0001                     	;# 
  1358  0002                     	;# 
  1359  0003                     	;# 
  1360  0004                     	;# 
  1361  0005                     	;# 
  1362  0006                     	;# 
  1363  0007                     	;# 
  1364  0008                     	;# 
  1365  0009                     	;# 
  1366  000A                     	;# 
  1367  000B                     	;# 
  1368  000C                     	;# 
  1369  000D                     	;# 
  1370  000E                     	;# 
  1371  0010                     	;# 
  1372  0011                     	;# 
  1373  0012                     	;# 
  1374  0015                     	;# 
  1375  0016                     	;# 
  1376  0016                     	;# 
  1377  0017                     	;# 
  1378  0018                     	;# 
  1379  0019                     	;# 
  1380  001A                     	;# 
  1381  001B                     	;# 
  1382  001C                     	;# 
  1383  008C                     	;# 
  1384  008D                     	;# 
  1385  008E                     	;# 
  1386  0090                     	;# 
  1387  0091                     	;# 
  1388  0092                     	;# 
  1389  0095                     	;# 
  1390  0096                     	;# 
  1391  0097                     	;# 
  1392  0099                     	;# 
  1393  009A                     	;# 
  1394  009B                     	;# 
  1395  009B                     	;# 
  1396  009C                     	;# 
  1397  009D                     	;# 
  1398  009E                     	;# 
  1399  010C                     	;# 
  1400  010D                     	;# 
  1401  010E                     	;# 
  1402  0116                     	;# 
  1403  0117                     	;# 
  1404  011D                     	;# 
  1405  018C                     	;# 
  1406  018D                     	;# 
  1407  018E                     	;# 
  1408  0191                     	;# 
  1409  0191                     	;# 
  1410  0192                     	;# 
  1411  0193                     	;# 
  1412  0193                     	;# 
  1413  0194                     	;# 
  1414  0195                     	;# 
  1415  0196                     	;# 
  1416  0197                     	;# 
  1417  0199                     	;# 
  1418  019A                     	;# 
  1419  019B                     	;# 
  1420  019B                     	;# 
  1421  019B                     	;# 
  1422  019B                     	;# 
  1423  019C                     	;# 
  1424  019C                     	;# 
  1425  019D                     	;# 
  1426  019E                     	;# 
  1427  019F                     	;# 
  1428  020D                     	;# 
  1429  0210                     	;# 
  1430  0211                     	;# 
  1431  0211                     	;# 
  1432  0212                     	;# 
  1433  0212                     	;# 
  1434  0213                     	;# 
  1435  0213                     	;# 
  1436  0214                     	;# 
  1437  0214                     	;# 
  1438  0215                     	;# 
  1439  0215                     	;# 
  1440  0215                     	;# 
  1441  0216                     	;# 
  1442  0216                     	;# 
  1443  0217                     	;# 
  1444  0217                     	;# 
  1445  0291                     	;# 
  1446  0291                     	;# 
  1447  0292                     	;# 
  1448  0293                     	;# 
  1449  0298                     	;# 
  1450  0298                     	;# 
  1451  0299                     	;# 
  1452  029A                     	;# 
  1453  0394                     	;# 
  1454  0395                     	;# 
  1455  0396                     	;# 
  1456  0FE4                     	;# 
  1457  0FE5                     	;# 
  1458  0FE6                     	;# 
  1459  0FE7                     	;# 
  1460  0FE8                     	;# 
  1461  0FE9                     	;# 
  1462  0FEA                     	;# 
  1463  0FEB                     	;# 
  1464  0FED                     	;# 
  1465  0FEE                     	;# 
  1466  0FEF                     	;# 
  1467  0000                     	;# 
  1468  0001                     	;# 
  1469  0002                     	;# 
  1470  0003                     	;# 
  1471  0004                     	;# 
  1472  0005                     	;# 
  1473  0006                     	;# 
  1474  0007                     	;# 
  1475  0008                     	;# 
  1476  0009                     	;# 
  1477  000A                     	;# 
  1478  000B                     	;# 
  1479  000C                     	;# 
  1480  000D                     	;# 
  1481  000E                     	;# 
  1482  0010                     	;# 
  1483  0011                     	;# 
  1484  0012                     	;# 
  1485  0015                     	;# 
  1486  0016                     	;# 
  1487  0016                     	;# 
  1488  0017                     	;# 
  1489  0018                     	;# 
  1490  0019                     	;# 
  1491  001A                     	;# 
  1492  001B                     	;# 
  1493  001C                     	;# 
  1494  008C                     	;# 
  1495  008D                     	;# 
  1496  008E                     	;# 
  1497  0090                     	;# 
  1498  0091                     	;# 
  1499  0092                     	;# 
  1500  0095                     	;# 
  1501  0096                     	;# 
  1502  0097                     	;# 
  1503  0099                     	;# 
  1504  009A                     	;# 
  1505  009B                     	;# 
  1506  009B                     	;# 
  1507  009C                     	;# 
  1508  009D                     	;# 
  1509  009E                     	;# 
  1510  010C                     	;# 
  1511  010D                     	;# 
  1512  010E                     	;# 
  1513  0116                     	;# 
  1514  0117                     	;# 
  1515  011D                     	;# 
  1516  018C                     	;# 
  1517  018D                     	;# 
  1518  018E                     	;# 
  1519  0191                     	;# 
  1520  0191                     	;# 
  1521  0192                     	;# 
  1522  0193                     	;# 
  1523  0193                     	;# 
  1524  0194                     	;# 
  1525  0195                     	;# 
  1526  0196                     	;# 
  1527  0197                     	;# 
  1528  0199                     	;# 
  1529  019A                     	;# 
  1530  019B                     	;# 
  1531  019B                     	;# 
  1532  019B                     	;# 
  1533  019B                     	;# 
  1534  019C                     	;# 
  1535  019C                     	;# 
  1536  019D                     	;# 
  1537  019E                     	;# 
  1538  019F                     	;# 
  1539  020D                     	;# 
  1540  0210                     	;# 
  1541  0211                     	;# 
  1542  0211                     	;# 
  1543  0212                     	;# 
  1544  0212                     	;# 
  1545  0213                     	;# 
  1546  0213                     	;# 
  1547  0214                     	;# 
  1548  0214                     	;# 
  1549  0215                     	;# 
  1550  0215                     	;# 
  1551  0215                     	;# 
  1552  0216                     	;# 
  1553  0216                     	;# 
  1554  0217                     	;# 
  1555  0217                     	;# 
  1556  0291                     	;# 
  1557  0291                     	;# 
  1558  0292                     	;# 
  1559  0293                     	;# 
  1560  0298                     	;# 
  1561  0298                     	;# 
  1562  0299                     	;# 
  1563  029A                     	;# 
  1564  0394                     	;# 
  1565  0395                     	;# 
  1566  0396                     	;# 
  1567  0FE4                     	;# 
  1568  0FE5                     	;# 
  1569  0FE6                     	;# 
  1570  0FE7                     	;# 
  1571  0FE8                     	;# 
  1572  0FE9                     	;# 
  1573  0FEA                     	;# 
  1574  0FEB                     	;# 
  1575  0FED                     	;# 
  1576  0FEE                     	;# 
  1577  0FEF                     	;# 
  1578  0000                     	;# 
  1579  0001                     	;# 
  1580  0002                     	;# 
  1581  0003                     	;# 
  1582  0004                     	;# 
  1583  0005                     	;# 
  1584  0006                     	;# 
  1585  0007                     	;# 
  1586  0008                     	;# 
  1587  0009                     	;# 
  1588  000A                     	;# 
  1589  000B                     	;# 
  1590  000C                     	;# 
  1591  000D                     	;# 
  1592  000E                     	;# 
  1593  0010                     	;# 
  1594  0011                     	;# 
  1595  0012                     	;# 
  1596  0015                     	;# 
  1597  0016                     	;# 
  1598  0016                     	;# 
  1599  0017                     	;# 
  1600  0018                     	;# 
  1601  0019                     	;# 
  1602  001A                     	;# 
  1603  001B                     	;# 
  1604  001C                     	;# 
  1605  008C                     	;# 
  1606  008D                     	;# 
  1607  008E                     	;# 
  1608  0090                     	;# 
  1609  0091                     	;# 
  1610  0092                     	;# 
  1611  0095                     	;# 
  1612  0096                     	;# 
  1613  0097                     	;# 
  1614  0099                     	;# 
  1615  009A                     	;# 
  1616  009B                     	;# 
  1617  009B                     	;# 
  1618  009C                     	;# 
  1619  009D                     	;# 
  1620  009E                     	;# 
  1621  010C                     	;# 
  1622  010D                     	;# 
  1623  010E                     	;# 
  1624  0116                     	;# 
  1625  0117                     	;# 
  1626  011D                     	;# 
  1627  018C                     	;# 
  1628  018D                     	;# 
  1629  018E                     	;# 
  1630  0191                     	;# 
  1631  0191                     	;# 
  1632  0192                     	;# 
  1633  0193                     	;# 
  1634  0193                     	;# 
  1635  0194                     	;# 
  1636  0195                     	;# 
  1637  0196                     	;# 
  1638  0197                     	;# 
  1639  0199                     	;# 
  1640  019A                     	;# 
  1641  019B                     	;# 
  1642  019B                     	;# 
  1643  019B                     	;# 
  1644  019B                     	;# 
  1645  019C                     	;# 
  1646  019C                     	;# 
  1647  019D                     	;# 
  1648  019E                     	;# 
  1649  019F                     	;# 
  1650  020D                     	;# 
  1651  0210                     	;# 
  1652  0211                     	;# 
  1653  0211                     	;# 
  1654  0212                     	;# 
  1655  0212                     	;# 
  1656  0213                     	;# 
  1657  0213                     	;# 
  1658  0214                     	;# 
  1659  0214                     	;# 
  1660  0215                     	;# 
  1661  0215                     	;# 
  1662  0215                     	;# 
  1663  0216                     	;# 
  1664  0216                     	;# 
  1665  0217                     	;# 
  1666  0217                     	;# 
  1667  0291                     	;# 
  1668  0291                     	;# 
  1669  0292                     	;# 
  1670  0293                     	;# 
  1671  0298                     	;# 
  1672  0298                     	;# 
  1673  0299                     	;# 
  1674  029A                     	;# 
  1675  0394                     	;# 
  1676  0395                     	;# 
  1677  0396                     	;# 
  1678  0FE4                     	;# 
  1679  0FE5                     	;# 
  1680  0FE6                     	;# 
  1681  0FE7                     	;# 
  1682  0FE8                     	;# 
  1683  0FE9                     	;# 
  1684  0FEA                     	;# 
  1685  0FEB                     	;# 
  1686  0FED                     	;# 
  1687  0FEE                     	;# 
  1688  0FEF                     	;# 
  1689  0000                     	;# 
  1690  0001                     	;# 
  1691  0002                     	;# 
  1692  0003                     	;# 
  1693  0004                     	;# 
  1694  0005                     	;# 
  1695  0006                     	;# 
  1696  0007                     	;# 
  1697  0008                     	;# 
  1698  0009                     	;# 
  1699  000A                     	;# 
  1700  000B                     	;# 
  1701  000C                     	;# 
  1702  000D                     	;# 
  1703  000E                     	;# 
  1704  0010                     	;# 
  1705  0011                     	;# 
  1706  0012                     	;# 
  1707  0015                     	;# 
  1708  0016                     	;# 
  1709  0016                     	;# 
  1710  0017                     	;# 
  1711  0018                     	;# 
  1712  0019                     	;# 
  1713  001A                     	;# 
  1714  001B                     	;# 
  1715  001C                     	;# 
  1716  008C                     	;# 
  1717  008D                     	;# 
  1718  008E                     	;# 
  1719  0090                     	;# 
  1720  0091                     	;# 
  1721  0092                     	;# 
  1722  0095                     	;# 
  1723  0096                     	;# 
  1724  0097                     	;# 
  1725  0099                     	;# 
  1726  009A                     	;# 
  1727  009B                     	;# 
  1728  009B                     	;# 
  1729  009C                     	;# 
  1730  009D                     	;# 
  1731  009E                     	;# 
  1732  010C                     	;# 
  1733  010D                     	;# 
  1734  010E                     	;# 
  1735  0116                     	;# 
  1736  0117                     	;# 
  1737  011D                     	;# 
  1738  018C                     	;# 
  1739  018D                     	;# 
  1740  018E                     	;# 
  1741  0191                     	;# 
  1742  0191                     	;# 
  1743  0192                     	;# 
  1744  0193                     	;# 
  1745  0193                     	;# 
  1746  0194                     	;# 
  1747  0195                     	;# 
  1748  0196                     	;# 
  1749  0197                     	;# 
  1750  0199                     	;# 
  1751  019A                     	;# 
  1752  019B                     	;# 
  1753  019B                     	;# 
  1754  019B                     	;# 
  1755  019B                     	;# 
  1756  019C                     	;# 
  1757  019C                     	;# 
  1758  019D                     	;# 
  1759  019E                     	;# 
  1760  019F                     	;# 
  1761  020D                     	;# 
  1762  0210                     	;# 
  1763  0211                     	;# 
  1764  0211                     	;# 
  1765  0212                     	;# 
  1766  0212                     	;# 
  1767  0213                     	;# 
  1768  0213                     	;# 
  1769  0214                     	;# 
  1770  0214                     	;# 
  1771  0215                     	;# 
  1772  0215                     	;# 
  1773  0215                     	;# 
  1774  0216                     	;# 
  1775  0216                     	;# 
  1776  0217                     	;# 
  1777  0217                     	;# 
  1778  0291                     	;# 
  1779  0291                     	;# 
  1780  0292                     	;# 
  1781  0293                     	;# 
  1782  0298                     	;# 
  1783  0298                     	;# 
  1784  0299                     	;# 
  1785  029A                     	;# 
  1786  0394                     	;# 
  1787  0395                     	;# 
  1788  0396                     	;# 
  1789  0FE4                     	;# 
  1790  0FE5                     	;# 
  1791  0FE6                     	;# 
  1792  0FE7                     	;# 
  1793  0FE8                     	;# 
  1794  0FE9                     	;# 
  1795  0FEA                     	;# 
  1796  0FEB                     	;# 
  1797  0FED                     	;# 
  1798  0FEE                     	;# 
  1799  0FEF                     	;# 
  1800  0000                     	;# 
  1801  0001                     	;# 
  1802  0002                     	;# 
  1803  0003                     	;# 
  1804  0004                     	;# 
  1805  0005                     	;# 
  1806  0006                     	;# 
  1807  0007                     	;# 
  1808  0008                     	;# 
  1809  0009                     	;# 
  1810  000A                     	;# 
  1811  000B                     	;# 
  1812  000C                     	;# 
  1813  000D                     	;# 
  1814  000E                     	;# 
  1815  0010                     	;# 
  1816  0011                     	;# 
  1817  0012                     	;# 
  1818  0015                     	;# 
  1819  0016                     	;# 
  1820  0016                     	;# 
  1821  0017                     	;# 
  1822  0018                     	;# 
  1823  0019                     	;# 
  1824  001A                     	;# 
  1825  001B                     	;# 
  1826  001C                     	;# 
  1827  008C                     	;# 
  1828  008D                     	;# 
  1829  008E                     	;# 
  1830  0090                     	;# 
  1831  0091                     	;# 
  1832  0092                     	;# 
  1833  0095                     	;# 
  1834  0096                     	;# 
  1835  0097                     	;# 
  1836  0099                     	;# 
  1837  009A                     	;# 
  1838  009B                     	;# 
  1839  009B                     	;# 
  1840  009C                     	;# 
  1841  009D                     	;# 
  1842  009E                     	;# 
  1843  010C                     	;# 
  1844  010D                     	;# 
  1845  010E                     	;# 
  1846  0116                     	;# 
  1847  0117                     	;# 
  1848  011D                     	;# 
  1849  018C                     	;# 
  1850  018D                     	;# 
  1851  018E                     	;# 
  1852  0191                     	;# 
  1853  0191                     	;# 
  1854  0192                     	;# 
  1855  0193                     	;# 
  1856  0193                     	;# 
  1857  0194                     	;# 
  1858  0195                     	;# 
  1859  0196                     	;# 
  1860  0197                     	;# 
  1861  0199                     	;# 
  1862  019A                     	;# 
  1863  019B                     	;# 
  1864  019B                     	;# 
  1865  019B                     	;# 
  1866  019B                     	;# 
  1867  019C                     	;# 
  1868  019C                     	;# 
  1869  019D                     	;# 
  1870  019E                     	;# 
  1871  019F                     	;# 
  1872  020D                     	;# 
  1873  0210                     	;# 
  1874  0211                     	;# 
  1875  0211                     	;# 
  1876  0212                     	;# 
  1877  0212                     	;# 
  1878  0213                     	;# 
  1879  0213                     	;# 
  1880  0214                     	;# 
  1881  0214                     	;# 
  1882  0215                     	;# 
  1883  0215                     	;# 
  1884  0215                     	;# 
  1885  0216                     	;# 
  1886  0216                     	;# 
  1887  0217                     	;# 
  1888  0217                     	;# 
  1889  0291                     	;# 
  1890  0291                     	;# 
  1891  0292                     	;# 
  1892  0293                     	;# 
  1893  0298                     	;# 
  1894  0298                     	;# 
  1895  0299                     	;# 
  1896  029A                     	;# 
  1897  0394                     	;# 
  1898  0395                     	;# 
  1899  0396                     	;# 
  1900  0FE4                     	;# 
  1901  0FE5                     	;# 
  1902  0FE6                     	;# 
  1903  0FE7                     	;# 
  1904  0FE8                     	;# 
  1905  0FE9                     	;# 
  1906  0FEA                     	;# 
  1907  0FEB                     	;# 
  1908  0FED                     	;# 
  1909  0FEE                     	;# 
  1910  0FEF                     	;# 
  1911  0000                     	;# 
  1912  0001                     	;# 
  1913  0002                     	;# 
  1914  0003                     	;# 
  1915  0004                     	;# 
  1916  0005                     	;# 
  1917  0006                     	;# 
  1918  0007                     	;# 
  1919  0008                     	;# 
  1920  0009                     	;# 
  1921  000A                     	;# 
  1922  000B                     	;# 
  1923  000C                     	;# 
  1924  000D                     	;# 
  1925  000E                     	;# 
  1926  0010                     	;# 
  1927  0011                     	;# 
  1928  0012                     	;# 
  1929  0015                     	;# 
  1930  0016                     	;# 
  1931  0016                     	;# 
  1932  0017                     	;# 
  1933  0018                     	;# 
  1934  0019                     	;# 
  1935  001A                     	;# 
  1936  001B                     	;# 
  1937  001C                     	;# 
  1938  008C                     	;# 
  1939  008D                     	;# 
  1940  008E                     	;# 
  1941  0090                     	;# 
  1942  0091                     	;# 
  1943  0092                     	;# 
  1944  0095                     	;# 
  1945  0096                     	;# 
  1946  0097                     	;# 
  1947  0099                     	;# 
  1948  009A                     	;# 
  1949  009B                     	;# 
  1950  009B                     	;# 
  1951  009C                     	;# 
  1952  009D                     	;# 
  1953  009E                     	;# 
  1954  010C                     	;# 
  1955  010D                     	;# 
  1956  010E                     	;# 
  1957  0116                     	;# 
  1958  0117                     	;# 
  1959  011D                     	;# 
  1960  018C                     	;# 
  1961  018D                     	;# 
  1962  018E                     	;# 
  1963  0191                     	;# 
  1964  0191                     	;# 
  1965  0192                     	;# 
  1966  0193                     	;# 
  1967  0193                     	;# 
  1968  0194                     	;# 
  1969  0195                     	;# 
  1970  0196                     	;# 
  1971  0197                     	;# 
  1972  0199                     	;# 
  1973  019A                     	;# 
  1974  019B                     	;# 
  1975  019B                     	;# 
  1976  019B                     	;# 
  1977  019B                     	;# 
  1978  019C                     	;# 
  1979  019C                     	;# 
  1980  019D                     	;# 
  1981  019E                     	;# 
  1982  019F                     	;# 
  1983  020D                     	;# 
  1984  0210                     	;# 
  1985  0211                     	;# 
  1986  0211                     	;# 
  1987  0212                     	;# 
  1988  0212                     	;# 
  1989  0213                     	;# 
  1990  0213                     	;# 
  1991  0214                     	;# 
  1992  0214                     	;# 
  1993  0215                     	;# 
  1994  0215                     	;# 
  1995  0215                     	;# 
  1996  0216                     	;# 
  1997  0216                     	;# 
  1998  0217                     	;# 
  1999  0217                     	;# 
  2000  0291                     	;# 
  2001  0291                     	;# 
  2002  0292                     	;# 
  2003  0293                     	;# 
  2004  0298                     	;# 
  2005  0298                     	;# 
  2006  0299                     	;# 
  2007  029A                     	;# 
  2008  0394                     	;# 
  2009  0395                     	;# 
  2010  0396                     	;# 
  2011  0FE4                     	;# 
  2012  0FE5                     	;# 
  2013  0FE6                     	;# 
  2014  0FE7                     	;# 
  2015  0FE8                     	;# 
  2016  0FE9                     	;# 
  2017  0FEA                     	;# 
  2018  0FEB                     	;# 
  2019  0FED                     	;# 
  2020  0FEE                     	;# 
  2021  0FEF                     	;# 
  2022  0000                     	;# 
  2023  0001                     	;# 
  2024  0002                     	;# 
  2025  0003                     	;# 
  2026  0004                     	;# 
  2027  0005                     	;# 
  2028  0006                     	;# 
  2029  0007                     	;# 
  2030  0008                     	;# 
  2031  0009                     	;# 
  2032  000A                     	;# 
  2033  000B                     	;# 
  2034  000C                     	;# 
  2035  000D                     	;# 
  2036  000E                     	;# 
  2037  0010                     	;# 
  2038  0011                     	;# 
  2039  0012                     	;# 
  2040  0015                     	;# 
  2041  0016                     	;# 
  2042  0016                     	;# 
  2043  0017                     	;# 
  2044  0018                     	;# 
  2045  0019                     	;# 
  2046  001A                     	;# 
  2047  001B                     	;# 
  2048  001C                     	;# 
  2049  008C                     	;# 
  2050  008D                     	;# 
  2051  008E                     	;# 
  2052  0090                     	;# 
  2053  0091                     	;# 
  2054  0092                     	;# 
  2055  0095                     	;# 
  2056  0096                     	;# 
  2057  0097                     	;# 
  2058  0099                     	;# 
  2059  009A                     	;# 
  2060  009B                     	;# 
  2061  009B                     	;# 
  2062  009C                     	;# 
  2063  009D                     	;# 
  2064  009E                     	;# 
  2065  010C                     	;# 
  2066  010D                     	;# 
  2067  010E                     	;# 
  2068  0116                     	;# 
  2069  0117                     	;# 
  2070  011D                     	;# 
  2071  018C                     	;# 
  2072  018D                     	;# 
  2073  018E                     	;# 
  2074  0191                     	;# 
  2075  0191                     	;# 
  2076  0192                     	;# 
  2077  0193                     	;# 
  2078  0193                     	;# 
  2079  0194                     	;# 
  2080  0195                     	;# 
  2081  0196                     	;# 
  2082  0197                     	;# 
  2083  0199                     	;# 
  2084  019A                     	;# 
  2085  019B                     	;# 
  2086  019B                     	;# 
  2087  019B                     	;# 
  2088  019B                     	;# 
  2089  019C                     	;# 
  2090  019C                     	;# 
  2091  019D                     	;# 
  2092  019E                     	;# 
  2093  019F                     	;# 
  2094  020D                     	;# 
  2095  0210                     	;# 
  2096  0211                     	;# 
  2097  0211                     	;# 
  2098  0212                     	;# 
  2099  0212                     	;# 
  2100  0213                     	;# 
  2101  0213                     	;# 
  2102  0214                     	;# 
  2103  0214                     	;# 
  2104  0215                     	;# 
  2105  0215                     	;# 
  2106  0215                     	;# 
  2107  0216                     	;# 
  2108  0216                     	;# 
  2109  0217                     	;# 
  2110  0217                     	;# 
  2111  0291                     	;# 
  2112  0291                     	;# 
  2113  0292                     	;# 
  2114  0293                     	;# 
  2115  0298                     	;# 
  2116  0298                     	;# 
  2117  0299                     	;# 
  2118  029A                     	;# 
  2119  0394                     	;# 
  2120  0395                     	;# 
  2121  0396                     	;# 
  2122  0FE4                     	;# 
  2123  0FE5                     	;# 
  2124  0FE6                     	;# 
  2125  0FE7                     	;# 
  2126  0FE8                     	;# 
  2127  0FE9                     	;# 
  2128  0FEA                     	;# 
  2129  0FEB                     	;# 
  2130  0FED                     	;# 
  2131  0FEE                     	;# 
  2132  0FEF                     	;# 
  2133                           
  2134                           	psect	idataBANK3
  2135  1492                     __pidataBANK3:	
  2136                           
  2137                           ;initializer for __product
  2138  1492  3463               	retlw	99
  2139  1493  3402               	retlw	2
  2140  1494  3400               	retlw	0
  2141  1495  3400               	retlw	0
  2142  1496  3400               	retlw	0
  2143  1497  3400               	retlw	0
  2144  1498  3400               	retlw	0
  2145  1499  3400               	retlw	0
  2146  149A  3400               	retlw	0
  2147  149B  3400               	retlw	0
  2148  149C  3400               	retlw	0
  2149  149D  3400               	retlw	0
  2150  149E  34FF               	retlw	255
  2151  149F  34FF               	retlw	255
  2152  14A0  34FF               	retlw	255
  2153  14A1  3400               	retlw	0
  2154  14A2  3400               	retlw	0
  2155  14A3  3400               	retlw	0
  2156  14A4  3400               	retlw	0
  2157  14A5  3400               	retlw	0
  2158  14A6  3400               	retlw	0
  2159  14A7  3400               	retlw	0
  2160  14A8  3400               	retlw	0
  2161  14A9  3400               	retlw	0
  2162  14AA  3400               	retlw	0
  2163  14AB  3400               	retlw	0
  2164  14AC  3400               	retlw	0
  2165  14AD  3400               	retlw	0
  2166  14AE  3400               	retlw	0
  2167  14AF  3400               	retlw	0
  2168  14B0  3400               	retlw	0
  2169  14B1  3400               	retlw	0
  2170                           
  2171                           	psect	nvBANK1
  2172  00EE                     __pnvBANK1:	
  2173  00EE                     _product:	
  2174  00EE                     	ds	1
  2175  000C                     _PORTA	set	12
  2176  000D                     _PORTB	set	13
  2177  000E                     _PORTC	set	14
  2178  0018                     _T1CON	set	24
  2179  0017                     _TMR1H	set	23
  2180  0016                     _TMR1L	set	22
  2181  005F                     _GIE	set	95
  2182  005B                     _IOCIE	set	91
  2183  0058                     _IOCIF	set	88
  2184  005E                     _PEIE	set	94
  2185  0060                     _RA0	set	96
  2186  0064                     _RA4	set	100
  2187  0066                     _RA6	set	102
  2188  0067                     _RA7	set	103
  2189  0068                     _RB0	set	104
  2190  0069                     _RB1	set	105
  2191  006A                     _RB2	set	106
  2192  006B                     _RB3	set	107
  2193  006D                     _RB5	set	109
  2194  0088                     _TMR1IF	set	136
  2195  009D                     _ADCON0	set	157
  2196  009E                     _ADCON1	set	158
  2197  009C                     _ADRESH	set	156
  2198  009B                     _ADRESL	set	155
  2199  0099                     _OSCCON	set	153
  2200  008C                     _TRISA	set	140
  2201  008D                     _TRISB	set	141
  2202  008E                     _TRISC	set	142
  2203  0097                     _WDTCON	set	151
  2204  04E9                     _GO_nDONE	set	1257
  2205  0488                     _TMR1IE	set	1160
  2206  0117                     _FVRCON	set	279
  2207  010C                     _LATA	set	268
  2208  010D                     _LATB	set	269
  2209  010E                     _LATC	set	270
  2210  018C                     _ANSELA	set	396
  2211  018D                     _ANSELB	set	397
  2212  018E                     _ANSELC	set	398
  2213  0192                     _PMADRH	set	402
  2214  0191                     _PMADRL	set	401
  2215  0196                     _PMCON2	set	406
  2216  0194                     _PMDATH	set	404
  2217  0193                     _PMDATL	set	403
  2218  0CAE                     _CFGS	set	3246
  2219  0CAC                     _FREE	set	3244
  2220  0CAD                     _LWLO	set	3245
  2221  0CA8                     _RD	set	3240
  2222  0CA9                     _WR	set	3241
  2223  0CAA                     _WREN	set	3242
  2224  020D                     _WPUB	set	525
  2225  0396                     _IOCBF	set	918
  2226  0395                     _IOCBN	set	917
  2227  0394                     _IOCBP	set	916
  2228  1CB2                     _IOCBF2	set	7346
  2229                           
  2230                           ; #config settings
  2231  0000                     
  2232                           	psect	cinit
  2233  0021                     start_initialization:	
  2234  0021                     __initialization:	
  2235                           
  2236                           ; Clear objects allocated to COMMON
  2237  0021  01FD               	clrf	__pbssCOMMON& (0+127)
  2238                           
  2239                           ; Clear objects allocated to BANK1
  2240  0022  30A0               	movlw	low __pbssBANK1
  2241  0023  0084               	movwf	4
  2242  0024  3000               	movlw	high __pbssBANK1
  2243  0025  0085               	movwf	5
  2244  0026  3048               	movlw	72
  2245  0027  3191  2116  3180   	fcall	clear_ram0
  2246                           
  2247                           ; Clear objects allocated to BANK2
  2248  002A  3020               	movlw	low __pbssBANK2
  2249  002B  0084               	movwf	4
  2250  002C  3001               	movlw	high __pbssBANK2
  2251  002D  0085               	movwf	5
  2252  002E  303F               	movlw	63
  2253  002F  3191  2116  3180   	fcall	clear_ram0
  2254                           
  2255                           ; Clear objects allocated to BANK3
  2256  0032  30A0               	movlw	low __pbssBANK3
  2257  0033  0084               	movwf	4
  2258  0034  3001               	movlw	high __pbssBANK3
  2259  0035  0085               	movwf	5
  2260  0036  3025               	movlw	37
  2261  0037  3191  2116  3180   	fcall	clear_ram0
  2262                           
  2263                           ; Initialize objects allocated to BANK3
  2264  003A  3092               	movlw	low __pidataBANK3
  2265  003B  0084               	movwf	4
  2266  003C  3094               	movlw	(high __pidataBANK3)| (0+128)
  2267  003D  0085               	movwf	5
  2268  003E  30C5               	movlw	low __pdataBANK3
  2269  003F  0086               	movwf	6
  2270  0040  3001               	movlw	high __pdataBANK3
  2271  0041  0087               	movwf	7
  2272  0042  3020               	movlw	32
  2273  0043  3191  2110         	fcall	init_ram
  2274  0045                     end_of_initialization:	
  2275                           ;End of C runtime variable initialization code
  2276                           
  2277  0045                     __end_of__initialization:	
  2278  0045  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  2279  0046  0020               	movlb	0
  2280  0047  3188  28D6         	ljmp	_main	;jump to C main() function
  2281                           
  2282                           	psect	bssCOMMON
  2283  007D                     __pbssCOMMON:	
  2284  007D                     _DimmerLights:	
  2285  007D                     	ds	1
  2286                           
  2287                           	psect	bssBANK1
  2288  00A0                     __pbssBANK1:	
  2289  00A0                     _myMain:	
  2290  00A0                     	ds	13
  2291  00AD                     _Buz1:	
  2292  00AD                     	ds	12
  2293  00B9                     _DimmerIntr1:	
  2294  00B9                     	ds	12
  2295  00C5                     _Dimmer:	
  2296  00C5                     	ds	5
  2297  00CA                     _Timer1:	
  2298  00CA                     	ds	3
  2299  00CD                     _WDT:	
  2300  00CD                     	ds	2
  2301  00CF                     _Cmd:	
  2302  00CF                     	ds	1
  2303  00D0                     _DelayOff:	
  2304  00D0                     	ds	1
  2305  00D1                     _DimmerIntr:	
  2306  00D1                     	ds	1
  2307  00D2                     _LED:	
  2308  00D2                     	ds	1
  2309  00D3                     _Light:	
  2310  00D3                     	ds	1
  2311  00D4                     _Sw:	
  2312  00D4                     	ds	1
  2313  00D5                     _SwDetect:	
  2314  00D5                     	ds	1
  2315  00D6                     _Temp:	
  2316  00D6                     	ds	14
  2317  00E4                     _VarErrLED:	
  2318  00E4                     	ds	4
  2319                           
  2320                           	psect	bssBANK2
  2321  0120                     __pbssBANK2:	
  2322  0120                     _Load:	
  2323  0120                     	ds	40
  2324  0148                     _DimmerLights1:	
  2325  0148                     	ds	9
  2326  0151                     _Sw1:	
  2327  0151                     	ds	9
  2328  015A                     _DlySw1:	
  2329  015A                     	ds	5
  2330                           
  2331                           	psect	bssBANK3
  2332  01A0                     __pbssBANK3:	
  2333  01A0                     _Memory:	
  2334  01A0                     	ds	37
  2335                           
  2336                           	psect	dataBANK3
  2337  01C5                     __pdataBANK3:	
  2338  01C5                     __product:	
  2339  01C5                     	ds	32
  2340                           
  2341                           	psect	clrtext
  2342  1116                     clear_ram0:	
  2343                           ;	Called with FSR0 containing the base address, and
  2344                           ;	WREG with the size to clear
  2345                           
  2346  1116  0064               	clrwdt	;clear the watchdog before getting into this loop
  2347  1117                     clrloop0:	
  2348  1117  0180               	clrf	0	;clear RAM location pointed to by FSR
  2349  1118  3101               	addfsr 0,1
  2350  1119  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2351  111A  2917               	goto	clrloop0	;have we reached the end yet?
  2352  111B  3400               	retlw	0	;all done for this memory range, return
  2353                           
  2354                           	psect	inittext
  2355  1110                     init_ram:	
  2356  1110  00FE               	movwf	126
  2357  1111                     initloop:	
  2358  1111  0012               	moviw fsr0++
  2359  1112  001E               	movwi fsr1++
  2360  1113  0BFE               	decfsz	126,f
  2361  1114  2911               	goto	initloop
  2362  1115  3400               	retlw	0
  2363                           
  2364                           	psect	cstackBANK1
  2365  00E8                     __pcstackBANK1:	
  2366  00E8                     setDimmerLights_OnOff@lights:	
  2367                           
  2368                           ; 1 bytes @ 0x0
  2369  00E8                     	ds	1
  2370  00E9                     setDimmerLights_Main@lights:	
  2371                           
  2372                           ; 1 bytes @ 0x1
  2373  00E9                     	ds	1
  2374  00EA                     ?_main:	
  2375  00EA                     main@argc:	
  2376                           ; 2 bytes @ 0x2
  2377                           
  2378                           
  2379                           ; 2 bytes @ 0x2
  2380  00EA                     	ds	2
  2381  00EC                     main@argv:	
  2382                           
  2383                           ; 2 bytes @ 0x4
  2384  00EC                     	ds	2
  2385                           
  2386                           	psect	cstackCOMMON
  2387  0070                     __pcstackCOMMON:	
  2388  0070                     ?_DlyOff_Initialization:	
  2389  0070                     ?_DlyOff_Main:	
  2390                           ; 0 bytes @ 0x0
  2391                           
  2392  0070                     ?_setDimmerLights_SwOn:	
  2393                           ; 0 bytes @ 0x0
  2394                           
  2395  0070                     ?_setDimmerLights_SwOff:	
  2396                           ; 0 bytes @ 0x0
  2397                           
  2398  0070                     ?_setMemory_Modify:	
  2399                           ; 0 bytes @ 0x0
  2400                           
  2401  0070                     ?_setDimmerLights_Initialization:	
  2402                           ; 0 bytes @ 0x0
  2403                           
  2404  0070                     ?_setDimmerLights_Main:	
  2405                           ; 0 bytes @ 0x0
  2406                           
  2407  0070                     ?_DimmerLights_DimmingFunction:	
  2408                           ; 0 bytes @ 0x0
  2409                           
  2410  0070                     ?_DimmerLights_TwoPhase_Main:	
  2411                           ; 0 bytes @ 0x0
  2412                           
  2413  0070                     ?_DimmerLights_AssignationDimming:	
  2414                           ; 0 bytes @ 0x0
  2415                           
  2416  0070                     ?_setDimmerLights_Line:	
  2417                           ; 0 bytes @ 0x0
  2418                           
  2419  0070                     ?_setDimmerLights_DimmingClose:	
  2420                           ; 0 bytes @ 0x0
  2421                           
  2422  0070                     ?_setLED_Initialization:	
  2423                           ; 0 bytes @ 0x0
  2424                           
  2425  0070                     ?_setLED_Main:	
  2426                           ; 0 bytes @ 0x0
  2427                           
  2428  0070                     ?_Fosc_Set:	
  2429                           ; 0 bytes @ 0x0
  2430                           
  2431  0070                     ?_IO_Set:	
  2432                           ; 0 bytes @ 0x0
  2433                           
  2434  0070                     ?_TMR1_Set:	
  2435                           ; 0 bytes @ 0x0
  2436                           
  2437  0070                     ?_ADC_Set:	
  2438                           ; 0 bytes @ 0x0
  2439                           
  2440  0070                     ?_IOC_Set:	
  2441                           ; 0 bytes @ 0x0
  2442                           
  2443  0070                     ?_WDT_Set:	
  2444                           ; 0 bytes @ 0x0
  2445                           
  2446  0070                     ?_TMR1_ISR:	
  2447                           ; 0 bytes @ 0x0
  2448                           
  2449  0070                     ?_IOC_ISR:	
  2450                           ; 0 bytes @ 0x0
  2451                           
  2452  0070                     ?_Timeout_Counter:	
  2453                           ; 0 bytes @ 0x0
  2454                           
  2455  0070                     ?_set_TimeoutCleared:	
  2456                           ; 0 bytes @ 0x0
  2457                           
  2458  0070                     ?_Flash_Memory_Write:	
  2459                           ; 0 bytes @ 0x0
  2460                           
  2461  0070                     ?_Flash_Memory_Modify:	
  2462                           ; 0 bytes @ 0x0
  2463                           
  2464  0070                     ?_WDT_Clearing:	
  2465                           ; 0 bytes @ 0x0
  2466                           
  2467  0070                     ?_myMain_Initialization:	
  2468                           ; 0 bytes @ 0x0
  2469                           
  2470  0070                     ?_Temp_Initialization:	
  2471                           ; 0 bytes @ 0x0
  2472                           
  2473  0070                     ?_Load_Initialization:	
  2474                           ; 0 bytes @ 0x0
  2475                           
  2476  0070                     ?_Switch_Initialization:	
  2477                           ; 0 bytes @ 0x0
  2478                           
  2479  0070                     ?_getLoad_AD:	
  2480                           ; 0 bytes @ 0x0
  2481                           
  2482  0070                     ?_getTemp_AD:	
  2483                           ; 0 bytes @ 0x0
  2484                           
  2485  0070                     ?_my_MainTimer:	
  2486                           ; 0 bytes @ 0x0
  2487                           
  2488  0070                     ?_Temp_Main:	
  2489                           ; 0 bytes @ 0x0
  2490                           
  2491  0070                     ?_Load_Main:	
  2492                           ; 0 bytes @ 0x0
  2493                           
  2494  0070                     ?_Switch_Main:	
  2495                           ; 0 bytes @ 0x0
  2496                           
  2497  0070                     ?_Exception_Main:	
  2498                           ; 0 bytes @ 0x0
  2499                           
  2500  0070                     ?_setLoad_AH_AL_Restore:	
  2501                           ; 0 bytes @ 0x0
  2502                           
  2503  0070                     ?_setTemp_Initialization:	
  2504                           ; 0 bytes @ 0x0
  2505                           
  2506  0070                     ?_setTemp_Main:	
  2507                           ; 0 bytes @ 0x0
  2508                           
  2509  0070                     ?_setOverTemp_ADV_Restore:	
  2510                           ; 0 bytes @ 0x0
  2511                           
  2512  0070                     ?_setSw_Initialization:	
  2513                           ; 0 bytes @ 0x0
  2514                           
  2515  0070                     ?_setSw_Main:	
  2516                           ; 0 bytes @ 0x0
  2517                           
  2518  0070                     ?_Buzzer_Initialization:	
  2519                           ; 0 bytes @ 0x0
  2520                           
  2521  0070                     ?_Buzzer_Main:	
  2522                           ; 0 bytes @ 0x0
  2523                           
  2524  0070                     ?_DelayOffPointSelect:	
  2525                           ; 0 bytes @ 0x0
  2526                           
  2527  0070                     ?_DelayOff_Initialization:	
  2528                           ; 0 bytes @ 0x0
  2529                           
  2530  0070                     ?_DelayOff_Main:	
  2531                           ; 0 bytes @ 0x0
  2532                           
  2533  0070                     ?_DimmerIntr_Initialization:	
  2534                           ; 0 bytes @ 0x0
  2535                           
  2536  0070                     ?_DimmerLights_SelectPointer:	
  2537                           ; 0 bytes @ 0x0
  2538                           
  2539  0070                     ?_DimmerLights_Initialization:	
  2540                           ; 0 bytes @ 0x0
  2541                           
  2542  0070                     ?_setDimmerLights_DimmingOn:	
  2543                           ; 0 bytes @ 0x0
  2544                           
  2545  0070                     ?_DimmerLights_Main:	
  2546                           ; 0 bytes @ 0x0
  2547                           
  2548  0070                     ?_DimmerLights_TMR_1:	
  2549                           ; 0 bytes @ 0x0
  2550                           
  2551  0070                     ??_DimmerLights_TMR_1:	
  2552                           ; 0 bytes @ 0x0
  2553                           
  2554  0070                     ?_DimmerLights_IOC_1:	
  2555                           ; 0 bytes @ 0x0
  2556                           
  2557  0070                     ?_LedPointSelect:	
  2558                           ; 0 bytes @ 0x0
  2559                           
  2560  0070                     ?_LED_Initialization:	
  2561                           ; 0 bytes @ 0x0
  2562                           
  2563  0070                     ?_LED_Main:	
  2564                           ; 0 bytes @ 0x0
  2565                           
  2566  0070                     ?_Mcu_Initialization:	
  2567                           ; 0 bytes @ 0x0
  2568                           
  2569  0070                     ?_ISR:	
  2570                           ; 0 bytes @ 0x0
  2571                           
  2572  0070                     ?_Flash_Memory_Initialization:	
  2573                           ; 0 bytes @ 0x0
  2574                           
  2575  0070                     ?_Flash_Memory_Main:	
  2576                           ; 0 bytes @ 0x0
  2577                           
  2578  0070                     ?_Flash_Memory_Unlock:	
  2579                           ; 0 bytes @ 0x0
  2580                           
  2581  0070                     ?_Flash_Memory_Erasing:	
  2582                           ; 0 bytes @ 0x0
  2583                           
  2584  0070                     ?_WDT_Main:	
  2585                           ; 0 bytes @ 0x0
  2586                           
  2587  0070                     ?_TouchPower:	
  2588                           ; 0 bytes @ 0x0
  2589                           
  2590  0070                     ?_SwPointSelect:	
  2591                           ; 0 bytes @ 0x0
  2592                           
  2593  0070                     ?_getDimmerLights_Status:	
  2594                           ; 0 bytes @ 0x0
  2595                           
  2596  0070                     ?_getDimmerLights_ValueToPercent:	
  2597                           ; 1 bytes @ 0x0
  2598                           
  2599  0070                     ?_getDimmerLights_PercentToValue:	
  2600                           ; 1 bytes @ 0x0
  2601                           
  2602  0070                     ?_getLoad_OK:	
  2603                           ; 1 bytes @ 0x0
  2604                           
  2605  0070                     ?_getMain_All_Error_Status:	
  2606                           ; 1 bytes @ 0x0
  2607                           
  2608  0070                     ?_getMain_All_LightsStatus:	
  2609                           ; 1 bytes @ 0x0
  2610                           
  2611  0070                     ?_getDimmerLights_Allow_Condition:	
  2612                           ; 1 bytes @ 0x0
  2613                           
  2614  0070                     ?_getCmd_Status:	
  2615                           ; 1 bytes @ 0x0
  2616                           
  2617  0070                     ?_Flash_Memory_Read:	
  2618                           ; 1 bytes @ 0x0
  2619                           
  2620  0070                     ?_getAll_Sw_KeyStatus:	
  2621                           ; 1 bytes @ 0x0
  2622                           
  2623  0070                     ?_getSw_KeyStatus:	
  2624                           ; 1 bytes @ 0x0
  2625                           
  2626  0070                     ?_getDelayOff_GO:	
  2627                           ; 1 bytes @ 0x0
  2628                           
  2629  0070                     ?_getDimmerIntr_DimmingValue:	
  2630                           ; 1 bytes @ 0x0
  2631                           
  2632  0070                     ?_getDimmerIntr_Dimming_Sw:	
  2633                           ; 1 bytes @ 0x0
  2634                           
  2635  0070                     ?_getAll_DimmerIntr_Dimming_Sw_RF:	
  2636                           ; 1 bytes @ 0x0
  2637                           
  2638  0070                     ?_getDimmerLights_Line:	
  2639                           ; 1 bytes @ 0x0
  2640                           
  2641  0070                     ?_getDimmer_LoadGO:	
  2642                           ; 1 bytes @ 0x0
  2643                           
  2644  0070                     ?_getDimmer_Load_Status:	
  2645                           ; 1 bytes @ 0x0
  2646                           
  2647  0070                     ?_getMain_Lights_Count:	
  2648                           ; 1 bytes @ 0x0
  2649                           
  2650  0070                     ?i1___lbdiv:	
  2651                           ; 1 bytes @ 0x0
  2652                           
  2653  0070                     setDimmerLights_Initialization@lights:	
  2654                           ; 1 bytes @ 0x0
  2655                           
  2656  0070                     getDimmerLights_Allow_Condition@lights:	
  2657                           ; 1 bytes @ 0x0
  2658                           
  2659  0070                     getSw_KeyStatus@sw:	
  2660                           ; 1 bytes @ 0x0
  2661                           
  2662  0070                     i1___lbdiv@divisor:	
  2663                           ; 1 bytes @ 0x0
  2664                           
  2665                           
  2666                           ; 1 bytes @ 0x0
  2667  0070                     	ds	1
  2668  0071                     ??_TMR1_ISR:	
  2669  0071                     ??i1___lbdiv:	
  2670                           ; 0 bytes @ 0x1
  2671                           
  2672                           
  2673                           ; 0 bytes @ 0x1
  2674  0071                     	ds	1
  2675  0072                     i1___lbdiv@dividend:	
  2676                           
  2677                           ; 1 bytes @ 0x2
  2678  0072                     	ds	1
  2679  0073                     i1___lbdiv@counter:	
  2680                           
  2681                           ; 1 bytes @ 0x3
  2682  0073                     	ds	1
  2683  0074                     i1___lbdiv@quotient:	
  2684                           
  2685                           ; 1 bytes @ 0x4
  2686  0074                     	ds	1
  2687  0075                     ?i1_Division:	
  2688  0075                     i1Division@num:	
  2689                           ; 1 bytes @ 0x5
  2690                           
  2691                           
  2692                           ; 1 bytes @ 0x5
  2693  0075                     	ds	1
  2694  0076                     ??i1_Division:	
  2695                           
  2696                           ; 0 bytes @ 0x6
  2697  0076                     	ds	2
  2698  0078                     i1Division@value:	
  2699                           
  2700                           ; 1 bytes @ 0x8
  2701  0078                     	ds	1
  2702  0079                     i1Division@result:	
  2703                           
  2704                           ; 1 bytes @ 0x9
  2705  0079                     	ds	1
  2706  007A                     ??_DimmerLights_IOC_1:	
  2707                           
  2708                           ; 0 bytes @ 0xA
  2709  007A                     	ds	2
  2710  007C                     ??_IOC_ISR:	
  2711  007C                     ??_ISR:	
  2712                           ; 0 bytes @ 0xC
  2713                           
  2714                           
  2715                           ; 0 bytes @ 0xC
  2716  007C                     	ds	1
  2717                           
  2718                           	psect	cstackBANK0
  2719  0020                     __pcstackBANK0:	
  2720  0020                     ??_setMemory_Modify:	
  2721  0020                     ??_setDimmerLights_Initialization:	
  2722                           ; 0 bytes @ 0x0
  2723                           
  2724  0020                     ??_getLoad_OK:	
  2725                           ; 0 bytes @ 0x0
  2726                           
  2727  0020                     ??_getMain_All_Error_Status:	
  2728                           ; 0 bytes @ 0x0
  2729                           
  2730  0020                     ??_getMain_All_LightsStatus:	
  2731                           ; 0 bytes @ 0x0
  2732                           
  2733  0020                     ??_DimmerLights_DimmingFunction:	
  2734                           ; 0 bytes @ 0x0
  2735                           
  2736  0020                     ??_setDimmerLights_Line:	
  2737                           ; 0 bytes @ 0x0
  2738                           
  2739  0020                     ??_getCmd_Status:	
  2740                           ; 0 bytes @ 0x0
  2741                           
  2742  0020                     ?_setCmd_Status:	
  2743                           ; 0 bytes @ 0x0
  2744                           
  2745  0020                     ??_Fosc_Set:	
  2746                           ; 0 bytes @ 0x0
  2747                           
  2748  0020                     ??_IO_Set:	
  2749                           ; 0 bytes @ 0x0
  2750                           
  2751  0020                     ??_TMR1_Set:	
  2752                           ; 0 bytes @ 0x0
  2753                           
  2754  0020                     ??_ADC_Set:	
  2755                           ; 0 bytes @ 0x0
  2756                           
  2757  0020                     ??_IOC_Set:	
  2758                           ; 0 bytes @ 0x0
  2759                           
  2760  0020                     ??_WDT_Set:	
  2761                           ; 0 bytes @ 0x0
  2762                           
  2763  0020                     ??_Timeout_Counter:	
  2764                           ; 0 bytes @ 0x0
  2765                           
  2766  0020                     ??_set_TimeoutCleared:	
  2767                           ; 0 bytes @ 0x0
  2768                           
  2769  0020                     ??_Flash_Memory_Read:	
  2770                           ; 0 bytes @ 0x0
  2771                           
  2772  0020                     ?_setMemory_Data:	
  2773                           ; 0 bytes @ 0x0
  2774                           
  2775  0020                     ??_Flash_Memory_Write:	
  2776                           ; 0 bytes @ 0x0
  2777                           
  2778  0020                     ??_getAll_Sw_KeyStatus:	
  2779                           ; 0 bytes @ 0x0
  2780                           
  2781  0020                     ??_WDT_Clearing:	
  2782                           ; 0 bytes @ 0x0
  2783                           
  2784  0020                     ??_myMain_Initialization:	
  2785                           ; 0 bytes @ 0x0
  2786                           
  2787  0020                     ??_Temp_Initialization:	
  2788                           ; 0 bytes @ 0x0
  2789                           
  2790  0020                     ??_setLoad_AH_AL_Restore:	
  2791                           ; 0 bytes @ 0x0
  2792                           
  2793  0020                     ??_setTemp_Initialization:	
  2794                           ; 0 bytes @ 0x0
  2795                           
  2796  0020                     ??_setOverTemp_ADV_Restore:	
  2797                           ; 0 bytes @ 0x0
  2798                           
  2799  0020                     ??_getSw_KeyStatus:	
  2800                           ; 0 bytes @ 0x0
  2801                           
  2802  0020                     ??_Buzzer_Initialization:	
  2803                           ; 0 bytes @ 0x0
  2804                           
  2805  0020                     ??_Buzzer_Main:	
  2806                           ; 0 bytes @ 0x0
  2807                           
  2808  0020                     ??_DelayOffPointSelect:	
  2809                           ; 0 bytes @ 0x0
  2810                           
  2811  0020                     ?_setDimmerIntr_ControlStatus:	
  2812                           ; 0 bytes @ 0x0
  2813                           
  2814  0020                     ?_setDimmerIntr_DimmingValue:	
  2815                           ; 0 bytes @ 0x0
  2816                           
  2817  0020                     ??_getDimmerIntr_DimmingValue:	
  2818                           ; 0 bytes @ 0x0
  2819                           
  2820  0020                     ?_setDimmerIntr_Dimming_Sw:	
  2821                           ; 0 bytes @ 0x0
  2822                           
  2823  0020                     ??_getDimmerIntr_Dimming_Sw:	
  2824                           ; 0 bytes @ 0x0
  2825                           
  2826  0020                     ?_setDimmerIntr_Dimming_RF:	
  2827                           ; 0 bytes @ 0x0
  2828                           
  2829  0020                     ??_getAll_DimmerIntr_Dimming_Sw_RF:	
  2830                           ; 0 bytes @ 0x0
  2831                           
  2832  0020                     ??_DimmerLights_SelectPointer:	
  2833                           ; 0 bytes @ 0x0
  2834                           
  2835  0020                     ??_getDimmerLights_Line:	
  2836                           ; 0 bytes @ 0x0
  2837                           
  2838  0020                     ??_getDimmer_LoadGO:	
  2839                           ; 0 bytes @ 0x0
  2840                           
  2841  0020                     ??_getDimmer_Load_Status:	
  2842                           ; 0 bytes @ 0x0
  2843                           
  2844  0020                     ??_LedPointSelect:	
  2845                           ; 0 bytes @ 0x0
  2846                           
  2847  0020                     ??_Flash_Memory_Unlock:	
  2848                           ; 0 bytes @ 0x0
  2849                           
  2850  0020                     ??_Flash_Memory_Erasing:	
  2851                           ; 0 bytes @ 0x0
  2852                           
  2853  0020                     ??_WDT_Main:	
  2854                           ; 0 bytes @ 0x0
  2855                           
  2856  0020                     ??_getMain_Lights_Count:	
  2857                           ; 0 bytes @ 0x0
  2858                           
  2859  0020                     ??_TouchPower:	
  2860                           ; 0 bytes @ 0x0
  2861                           
  2862  0020                     ??_SwPointSelect:	
  2863                           ; 0 bytes @ 0x0
  2864                           
  2865  0020                     ?___bmul:	
  2866                           ; 0 bytes @ 0x0
  2867                           
  2868  0020                     ?___lbdiv:	
  2869                           ; 1 bytes @ 0x0
  2870                           
  2871  0020                     ?_getAD:	
  2872                           ; 1 bytes @ 0x0
  2873                           
  2874  0020                     ?___wmul:	
  2875                           ; 2 bytes @ 0x0
  2876                           
  2877  0020                     ?___awdiv:	
  2878                           ; 2 bytes @ 0x0
  2879                           
  2880  0020                     ?___lwdiv:	
  2881                           ; 2 bytes @ 0x0
  2882                           
  2883  0020                     ?___ftpack:	
  2884                           ; 2 bytes @ 0x0
  2885                           
  2886  0020                     setDimmerIntr_ControlStatus@command:	
  2887                           ; 3 bytes @ 0x0
  2888                           
  2889  0020                     setDimmerIntr_DimmingValue@value:	
  2890                           ; 1 bytes @ 0x0
  2891                           
  2892  0020                     setDimmerIntr_Dimming_Sw@command:	
  2893                           ; 1 bytes @ 0x0
  2894                           
  2895  0020                     getDimmerIntr_Dimming_Sw@lights:	
  2896                           ; 1 bytes @ 0x0
  2897                           
  2898  0020                     setDimmerIntr_Dimming_RF@command:	
  2899                           ; 1 bytes @ 0x0
  2900                           
  2901  0020                     getAll_DimmerIntr_Dimming_Sw_RF@status:	
  2902                           ; 1 bytes @ 0x0
  2903                           
  2904  0020                     setDimmerLights_Line@lights:	
  2905                           ; 1 bytes @ 0x0
  2906                           
  2907  0020                     getDimmerLights_Line@line:	
  2908                           ; 1 bytes @ 0x0
  2909                           
  2910  0020                     getDimmer_LoadGO@loadgo:	
  2911                           ; 1 bytes @ 0x0
  2912                           
  2913  0020                     getDimmer_Load_Status@status:	
  2914                           ; 1 bytes @ 0x0
  2915                           
  2916  0020                     getAD@adcon1:	
  2917                           ; 1 bytes @ 0x0
  2918                           
  2919  0020                     setMemory_Data@data:	
  2920                           ; 1 bytes @ 0x0
  2921                           
  2922  0020                     getMain_All_LightsStatus@status:	
  2923                           ; 1 bytes @ 0x0
  2924                           
  2925  0020                     getMain_Lights_Count@count:	
  2926                           ; 1 bytes @ 0x0
  2927                           
  2928  0020                     setCmd_Status@cmd:	
  2929                           ; 1 bytes @ 0x0
  2930                           
  2931  0020                     getCmd_Status@number:	
  2932                           ; 1 bytes @ 0x0
  2933                           
  2934  0020                     getLoad_OK@ok:	
  2935                           ; 1 bytes @ 0x0
  2936                           
  2937  0020                     ___bmul@multiplicand:	
  2938                           ; 1 bytes @ 0x0
  2939                           
  2940  0020                     ___lbdiv@divisor:	
  2941                           ; 1 bytes @ 0x0
  2942                           
  2943  0020                     ___wmul@multiplier:	
  2944                           ; 1 bytes @ 0x0
  2945                           
  2946  0020                     ___awdiv@divisor:	
  2947                           ; 2 bytes @ 0x0
  2948                           
  2949  0020                     ___lwdiv@divisor:	
  2950                           ; 2 bytes @ 0x0
  2951                           
  2952  0020                     ___ftpack@arg:	
  2953                           ; 2 bytes @ 0x0
  2954                           
  2955                           
  2956                           ; 3 bytes @ 0x0
  2957  0020                     	ds	1
  2958  0021                     ??_getDimmerLights_Allow_Condition:	
  2959  0021                     ??_setCmd_Status:	
  2960                           ; 0 bytes @ 0x1
  2961                           
  2962  0021                     ??_setMemory_Data:	
  2963                           ; 0 bytes @ 0x1
  2964                           
  2965  0021                     ??_setDimmerIntr_ControlStatus:	
  2966                           ; 0 bytes @ 0x1
  2967                           
  2968  0021                     ??_setDimmerIntr_DimmingValue:	
  2969                           ; 0 bytes @ 0x1
  2970                           
  2971  0021                     ??_setDimmerIntr_Dimming_Sw:	
  2972                           ; 0 bytes @ 0x1
  2973                           
  2974  0021                     ??_setDimmerIntr_Dimming_RF:	
  2975                           ; 0 bytes @ 0x1
  2976                           
  2977  0021                     ??_Mcu_Initialization:	
  2978                           ; 0 bytes @ 0x1
  2979                           
  2980  0021                     ??___bmul:	
  2981                           ; 0 bytes @ 0x1
  2982                           
  2983  0021                     ??___lbdiv:	
  2984                           ; 0 bytes @ 0x1
  2985                           
  2986  0021                     DelayOffPointSelect@sw:	
  2987                           ; 0 bytes @ 0x1
  2988                           
  2989  0021                     getDimmerIntr_DimmingValue@lights:	
  2990                           ; 1 bytes @ 0x1
  2991                           
  2992  0021                     getDimmerIntr_Dimming_Sw@status:	
  2993                           ; 1 bytes @ 0x1
  2994                           
  2995  0021                     DimmerLights_SelectPointer@lights:	
  2996                           ; 1 bytes @ 0x1
  2997                           
  2998  0021                     DimmerLights_DimmingFunction@lights:	
  2999                           ; 1 bytes @ 0x1
  3000                           
  3001  0021                     LedPointSelect@led:	
  3002                           ; 1 bytes @ 0x1
  3003                           
  3004  0021                     Flash_Memory_Read@i:	
  3005                           ; 1 bytes @ 0x1
  3006                           
  3007  0021                     Flash_Memory_Write@i:	
  3008                           ; 1 bytes @ 0x1
  3009                           
  3010  0021                     setMemory_Modify@command:	
  3011                           ; 1 bytes @ 0x1
  3012                           
  3013  0021                     getMain_Lights_Count@status1:	
  3014                           ; 1 bytes @ 0x1
  3015                           
  3016  0021                     getCmd_Status@cmd:	
  3017                           ; 1 bytes @ 0x1
  3018                           
  3019  0021                     setLoad_AH_AL_Restore@i:	
  3020                           ; 1 bytes @ 0x1
  3021                           
  3022  0021                     SwPointSelect@sw:	
  3023                           ; 1 bytes @ 0x1
  3024                           
  3025  0021                     getSw_KeyStatus@status:	
  3026                           ; 1 bytes @ 0x1
  3027                           
  3028  0021                     getAll_Sw_KeyStatus@status:	
  3029                           ; 1 bytes @ 0x1
  3030                           
  3031  0021                     _getMain_All_Error_Status$3186:	
  3032                           ; 1 bytes @ 0x1
  3033                           
  3034  0021                     setOverTemp_ADV_Restore@i:	
  3035                           ; 2 bytes @ 0x1
  3036                           
  3037                           
  3038                           ; 2 bytes @ 0x1
  3039  0021                     	ds	1
  3040  0022                     ??_DlyOff_Initialization:	
  3041  0022                     ??_getDimmerLights_Status:	
  3042                           ; 0 bytes @ 0x2
  3043                           
  3044  0022                     ??_setDimmerLights_SwOff:	
  3045                           ; 0 bytes @ 0x2
  3046                           
  3047  0022                     ?_setLED:	
  3048                           ; 0 bytes @ 0x2
  3049                           
  3050  0022                     ??_setLED_Main:	
  3051                           ; 0 bytes @ 0x2
  3052                           
  3053  0022                     ??_Load_Initialization:	
  3054                           ; 0 bytes @ 0x2
  3055                           
  3056  0022                     ??_getDelayOff_GO:	
  3057                           ; 0 bytes @ 0x2
  3058                           
  3059  0022                     ??_setDimmerLights_DimmingOn:	
  3060                           ; 0 bytes @ 0x2
  3061                           
  3062  0022                     DlyOff_Initialization@sw:	
  3063                           ; 0 bytes @ 0x2
  3064                           
  3065  0022                     getDelayOff_GO@sw:	
  3066                           ; 1 bytes @ 0x2
  3067                           
  3068  0022                     setDimmerIntr_ControlStatus@lights:	
  3069                           ; 1 bytes @ 0x2
  3070                           
  3071  0022                     setDimmerIntr_DimmingValue@lights:	
  3072                           ; 1 bytes @ 0x2
  3073                           
  3074  0022                     getDimmerIntr_DimmingValue@value:	
  3075                           ; 1 bytes @ 0x2
  3076                           
  3077  0022                     setDimmerIntr_Dimming_Sw@lights:	
  3078                           ; 1 bytes @ 0x2
  3079                           
  3080  0022                     setDimmerIntr_Dimming_RF@lights:	
  3081                           ; 1 bytes @ 0x2
  3082                           
  3083  0022                     setDimmerLights_SwOff@sw:	
  3084                           ; 1 bytes @ 0x2
  3085                           
  3086  0022                     setDimmerLights_DimmingOn@sw:	
  3087                           ; 1 bytes @ 0x2
  3088                           
  3089  0022                     getDimmerLights_Allow_Condition@allow:	
  3090                           ; 1 bytes @ 0x2
  3091                           
  3092  0022                     getDimmerLights_Status@lights:	
  3093                           ; 1 bytes @ 0x2
  3094                           
  3095  0022                     setLED@command:	
  3096                           ; 1 bytes @ 0x2
  3097                           
  3098  0022                     Flash_Memory_Read@address:	
  3099                           ; 1 bytes @ 0x2
  3100                           
  3101  0022                     setMemory_Data@address:	
  3102                           ; 1 bytes @ 0x2
  3103                           
  3104  0022                     setCmd_Status@number:	
  3105                           ; 1 bytes @ 0x2
  3106                           
  3107  0022                     _getSw_KeyStatus$5597:	
  3108                           ; 1 bytes @ 0x2
  3109                           
  3110  0022                     _getAll_Sw_KeyStatus$5600:	
  3111                           ; 1 bytes @ 0x2
  3112                           
  3113  0022                     ___bmul@product:	
  3114                           ; 1 bytes @ 0x2
  3115                           
  3116  0022                     ___lbdiv@dividend:	
  3117                           ; 1 bytes @ 0x2
  3118                           
  3119  0022                     ___wmul@multiplicand:	
  3120                           ; 1 bytes @ 0x2
  3121                           
  3122  0022                     ___awdiv@dividend:	
  3123                           ; 2 bytes @ 0x2
  3124                           
  3125  0022                     ___lwdiv@dividend:	
  3126                           ; 2 bytes @ 0x2
  3127                           
  3128                           
  3129                           ; 2 bytes @ 0x2
  3130  0022                     	ds	1
  3131  0023                     ??_setLED:	
  3132  0023                     ??_setDimmerLights_DimmingClose:	
  3133                           ; 0 bytes @ 0x3
  3134                           
  3135  0023                     ??_DelayOff_Initialization:	
  3136                           ; 0 bytes @ 0x3
  3137                           
  3138  0023                     ??_getAD:	
  3139                           ; 0 bytes @ 0x3
  3140                           
  3141  0023                     getDelayOff_GO@go:	
  3142                           ; 0 bytes @ 0x3
  3143                           
  3144  0023                     _getDimmerLights_Allow_Condition$1981:	
  3145                           ; 1 bytes @ 0x3
  3146                           
  3147  0023                     getDimmerLights_Status@status:	
  3148                           ; 1 bytes @ 0x3
  3149                           
  3150  0023                     setLED@led:	
  3151                           ; 1 bytes @ 0x3
  3152                           
  3153  0023                     getAD@adcon0:	
  3154                           ; 1 bytes @ 0x3
  3155                           
  3156  0023                     Flash_Memory_Read@ret:	
  3157                           ; 1 bytes @ 0x3
  3158                           
  3159  0023                     ___bmul@multiplier:	
  3160                           ; 1 bytes @ 0x3
  3161                           
  3162  0023                     ___ftpack@exp:	
  3163                           ; 1 bytes @ 0x3
  3164                           
  3165  0023                     ___lbdiv@counter:	
  3166                           ; 1 bytes @ 0x3
  3167                           
  3168  0023                     _getMain_All_Error_Status$3187:	
  3169                           ; 1 bytes @ 0x3
  3170                           
  3171                           
  3172                           ; 2 bytes @ 0x3
  3173  0023                     	ds	1
  3174  0024                     ??_setLED_Initialization:	
  3175  0024                     ??_Flash_Memory_Modify:	
  3176                           ; 0 bytes @ 0x4
  3177                           
  3178  0024                     ??_getLoad_AD:	
  3179                           ; 0 bytes @ 0x4
  3180                           
  3181  0024                     ??_getTemp_AD:	
  3182                           ; 0 bytes @ 0x4
  3183                           
  3184  0024                     ??_setSw_Initialization:	
  3185                           ; 0 bytes @ 0x4
  3186                           
  3187  0024                     ??_Flash_Memory_Initialization:	
  3188                           ; 0 bytes @ 0x4
  3189                           
  3190  0024                     ??___wmul:	
  3191                           ; 0 bytes @ 0x4
  3192                           
  3193  0024                     ??___awdiv:	
  3194                           ; 0 bytes @ 0x4
  3195                           
  3196  0024                     ??___lwdiv:	
  3197                           ; 0 bytes @ 0x4
  3198                           
  3199  0024                     setLED_Initialization@led:	
  3200                           ; 0 bytes @ 0x4
  3201                           
  3202  0024                     setLED_Main@led:	
  3203                           ; 1 bytes @ 0x4
  3204                           
  3205  0024                     setSw_Initialization@sw:	
  3206                           ; 1 bytes @ 0x4
  3207                           
  3208  0024                     ___ftpack@sign:	
  3209                           ; 1 bytes @ 0x4
  3210                           
  3211  0024                     ___lbdiv@quotient:	
  3212                           ; 1 bytes @ 0x4
  3213                           
  3214  0024                     ___wmul@product:	
  3215                           ; 1 bytes @ 0x4
  3216                           
  3217                           
  3218                           ; 2 bytes @ 0x4
  3219  0024                     	ds	1
  3220  0025                     ??_Switch_Initialization:	
  3221  0025                     ??___ftpack:	
  3222                           ; 0 bytes @ 0x5
  3223                           
  3224  0025                     ??_LED_Initialization:	
  3225                           ; 0 bytes @ 0x5
  3226                           
  3227  0025                     ??_LED_Main:	
  3228                           ; 0 bytes @ 0x5
  3229                           
  3230  0025                     ?_Division:	
  3231                           ; 0 bytes @ 0x5
  3232                           
  3233  0025                     Division@num:	
  3234                           ; 1 bytes @ 0x5
  3235                           
  3236  0025                     Flash_Memory_Initialization@value:	
  3237                           ; 1 bytes @ 0x5
  3238                           
  3239  0025                     Flash_Memory_Modify@i:	
  3240                           ; 1 bytes @ 0x5
  3241                           
  3242  0025                     getMain_All_Error_Status@command:	
  3243                           ; 1 bytes @ 0x5
  3244                           
  3245  0025                     getTemp_AD@channel:	
  3246                           ; 1 bytes @ 0x5
  3247                           
  3248  0025                     ___awdiv@counter:	
  3249                           ; 1 bytes @ 0x5
  3250                           
  3251  0025                     ___lwdiv@quotient:	
  3252                           ; 1 bytes @ 0x5
  3253                           
  3254                           
  3255                           ; 2 bytes @ 0x5
  3256  0025                     	ds	1
  3257  0026                     ??_Division:	
  3258  0026                     ??_Flash_Memory_Main:	
  3259                           ; 0 bytes @ 0x6
  3260                           
  3261  0026                     getMain_All_Error_Status@status:	
  3262                           ; 0 bytes @ 0x6
  3263                           
  3264  0026                     getLoad_AD@channel:	
  3265                           ; 1 bytes @ 0x6
  3266                           
  3267  0026                     ___awdiv@sign:	
  3268                           ; 1 bytes @ 0x6
  3269                           
  3270  0026                     getTemp_AD@ADRES:	
  3271                           ; 1 bytes @ 0x6
  3272                           
  3273                           
  3274                           ; 2 bytes @ 0x6
  3275  0026                     	ds	1
  3276  0027                     Flash_Memory_Main@key_Status:	
  3277  0027                     getLoad_AD@k:	
  3278                           ; 1 bytes @ 0x7
  3279                           
  3280  0027                     ___lwdiv@counter:	
  3281                           ; 1 bytes @ 0x7
  3282                           
  3283  0027                     ___awdiv@quotient:	
  3284                           ; 1 bytes @ 0x7
  3285                           
  3286                           
  3287                           ; 2 bytes @ 0x7
  3288  0027                     	ds	1
  3289  0028                     ??_Load_Main:	
  3290  0028                     ?___awtoft:	
  3291                           ; 0 bytes @ 0x8
  3292                           
  3293  0028                     Division@value:	
  3294                           ; 3 bytes @ 0x8
  3295                           
  3296  0028                     _Flash_Memory_Main$2776:	
  3297                           ; 1 bytes @ 0x8
  3298                           
  3299  0028                     getLoad_AD@j:	
  3300                           ; 1 bytes @ 0x8
  3301                           
  3302  0028                     ___awtoft@c:	
  3303                           ; 1 bytes @ 0x8
  3304                           
  3305                           
  3306                           ; 2 bytes @ 0x8
  3307  0028                     	ds	1
  3308  0029                     ?_setBuz:	
  3309  0029                     Division@result:	
  3310                           ; 0 bytes @ 0x9
  3311                           
  3312  0029                     setBuz@time:	
  3313                           ; 1 bytes @ 0x9
  3314                           
  3315  0029                     getLoad_AD@ADRES:	
  3316                           ; 2 bytes @ 0x9
  3317                           
  3318                           
  3319                           ; 2 bytes @ 0x9
  3320  0029                     	ds	1
  3321  002A                     _Load_Main$3523:	
  3322                           
  3323                           ; 2 bytes @ 0xA
  3324  002A                     	ds	1
  3325  002B                     ??_setBuz:	
  3326  002B                     ??___awtoft:	
  3327                           ; 0 bytes @ 0xB
  3328                           
  3329  002B                     getLoad_AD@i:	
  3330                           ; 0 bytes @ 0xB
  3331                           
  3332                           
  3333                           ; 1 bytes @ 0xB
  3334  002B                     	ds	1
  3335  002C                     setBuz@count:	
  3336  002C                     Load_Main@error:	
  3337                           ; 1 bytes @ 0xC
  3338                           
  3339                           
  3340                           ; 1 bytes @ 0xC
  3341  002C                     	ds	1
  3342  002D                     ??_setDimmerLights_SwOn:	
  3343  002D                     ??_my_MainTimer:	
  3344                           ; 0 bytes @ 0xD
  3345                           
  3346  002D                     ??_Exception_Main:	
  3347                           ; 0 bytes @ 0xD
  3348                           
  3349  002D                     Load_Main@ErrorCountValue:	
  3350                           ; 0 bytes @ 0xD
  3351                           
  3352  002D                     ___awtoft@sign:	
  3353                           ; 1 bytes @ 0xD
  3354                           
  3355                           
  3356                           ; 1 bytes @ 0xD
  3357  002D                     	ds	1
  3358  002E                     ?___ftdiv:	
  3359  002E                     ?___ftmul:	
  3360                           ; 3 bytes @ 0xE
  3361                           
  3362  002E                     setDimmerLights_SwOn@idle:	
  3363                           ; 3 bytes @ 0xE
  3364                           
  3365  002E                     Exception_Main@status:	
  3366                           ; 1 bytes @ 0xE
  3367                           
  3368  002E                     Load_Main@Load_RunStatus:	
  3369                           ; 1 bytes @ 0xE
  3370                           
  3371  002E                     ___ftdiv@f2:	
  3372                           ; 1 bytes @ 0xE
  3373                           
  3374  002E                     ___ftmul@f1:	
  3375                           ; 3 bytes @ 0xE
  3376                           
  3377                           
  3378                           ; 3 bytes @ 0xE
  3379  002E                     	ds	1
  3380  002F                     setDimmerLights_SwOn@dimmingStatus:	
  3381  002F                     Exception_Main@count:	
  3382                           ; 1 bytes @ 0xF
  3383                           
  3384  002F                     Load_Main@LightsCount:	
  3385                           ; 1 bytes @ 0xF
  3386                           
  3387                           
  3388                           ; 1 bytes @ 0xF
  3389  002F                     	ds	1
  3390  0030                     setDimmerLights_SwOn@sw:	
  3391  0030                     Exception_Main@i:	
  3392                           ; 1 bytes @ 0x10
  3393                           
  3394  0030                     Load_Main@i:	
  3395                           ; 2 bytes @ 0x10
  3396                           
  3397                           
  3398                           ; 2 bytes @ 0x10
  3399  0030                     	ds	1
  3400  0031                     ??_setSw_Main:	
  3401  0031                     ___ftdiv@f1:	
  3402                           ; 0 bytes @ 0x11
  3403                           
  3404  0031                     ___ftmul@f2:	
  3405                           ; 3 bytes @ 0x11
  3406                           
  3407                           
  3408                           ; 3 bytes @ 0x11
  3409  0031                     	ds	1
  3410  0032                     Exception_Main@i_3198:	
  3411                           
  3412                           ; 2 bytes @ 0x12
  3413  0032                     	ds	1
  3414  0033                     setSw_Main@sw:	
  3415                           
  3416                           ; 1 bytes @ 0x13
  3417  0033                     	ds	1
  3418  0034                     ??_Switch_Main:	
  3419  0034                     ??___ftdiv:	
  3420                           ; 0 bytes @ 0x14
  3421                           
  3422  0034                     ??___ftmul:	
  3423                           ; 0 bytes @ 0x14
  3424                           
  3425  0034                     Exception_Main@error:	
  3426                           ; 0 bytes @ 0x14
  3427                           
  3428                           
  3429                           ; 1 bytes @ 0x14
  3430  0034                     	ds	1
  3431  0035                     Exception_Main@lights:	
  3432                           
  3433                           ; 1 bytes @ 0x15
  3434  0035                     	ds	3
  3435  0038                     ___ftdiv@cntr:	
  3436  0038                     ___ftmul@exp:	
  3437                           ; 1 bytes @ 0x18
  3438                           
  3439                           
  3440                           ; 1 bytes @ 0x18
  3441  0038                     	ds	1
  3442  0039                     ___ftdiv@f3:	
  3443  0039                     ___ftmul@f3_as_product:	
  3444                           ; 3 bytes @ 0x19
  3445                           
  3446                           
  3447                           ; 3 bytes @ 0x19
  3448  0039                     	ds	3
  3449  003C                     ___ftdiv@exp:	
  3450  003C                     ___ftmul@cntr:	
  3451                           ; 1 bytes @ 0x1C
  3452                           
  3453                           
  3454                           ; 1 bytes @ 0x1C
  3455  003C                     	ds	1
  3456  003D                     ___ftdiv@sign:	
  3457  003D                     ___ftmul@sign:	
  3458                           ; 1 bytes @ 0x1D
  3459                           
  3460                           
  3461                           ; 1 bytes @ 0x1D
  3462  003D                     	ds	1
  3463  003E                     ?___ftneg:	
  3464  003E                     ___ftneg@f1:	
  3465                           ; 3 bytes @ 0x1E
  3466                           
  3467                           
  3468                           ; 3 bytes @ 0x1E
  3469  003E                     	ds	3
  3470  0041                     ??___ftneg:	
  3471  0041                     ?___ftadd:	
  3472                           ; 0 bytes @ 0x21
  3473                           
  3474  0041                     ___ftadd@f1:	
  3475                           ; 3 bytes @ 0x21
  3476                           
  3477                           
  3478                           ; 3 bytes @ 0x21
  3479  0041                     	ds	3
  3480  0044                     ___ftadd@f2:	
  3481                           
  3482                           ; 3 bytes @ 0x24
  3483  0044                     	ds	3
  3484  0047                     ??___ftadd:	
  3485                           
  3486                           ; 0 bytes @ 0x27
  3487  0047                     	ds	4
  3488  004B                     ___ftadd@sign:	
  3489                           
  3490                           ; 1 bytes @ 0x2B
  3491  004B                     	ds	1
  3492  004C                     ___ftadd@exp2:	
  3493                           
  3494                           ; 1 bytes @ 0x2C
  3495  004C                     	ds	1
  3496  004D                     ___ftadd@exp1:	
  3497                           
  3498                           ; 1 bytes @ 0x2D
  3499  004D                     	ds	1
  3500  004E                     ?___fttol:	
  3501  004E                     ___fttol@f1:	
  3502                           ; 4 bytes @ 0x2E
  3503                           
  3504                           
  3505                           ; 3 bytes @ 0x2E
  3506  004E                     	ds	4
  3507  0052                     ??___fttol:	
  3508                           
  3509                           ; 0 bytes @ 0x32
  3510  0052                     	ds	4
  3511  0056                     ___fttol@sign1:	
  3512                           
  3513                           ; 1 bytes @ 0x36
  3514  0056                     	ds	1
  3515  0057                     ___fttol@lval:	
  3516                           
  3517                           ; 4 bytes @ 0x37
  3518  0057                     	ds	4
  3519  005B                     ___fttol@exp1:	
  3520                           
  3521                           ; 1 bytes @ 0x3B
  3522  005B                     	ds	1
  3523  005C                     ??_getDimmerLights_ValueToPercent:	
  3524  005C                     ??_getDimmerLights_PercentToValue:	
  3525                           ; 0 bytes @ 0x3C
  3526                           
  3527                           
  3528                           ; 0 bytes @ 0x3C
  3529  005C                     	ds	2
  3530  005E                     getDimmerLights_PercentToValue@value:	
  3531  005E                     getDimmerLights_ValueToPercent@value:	
  3532                           ; 1 bytes @ 0x3E
  3533                           
  3534                           
  3535                           ; 1 bytes @ 0x3E
  3536  005E                     	ds	1
  3537  005F                     getDimmerLights_PercentToValue@i:	
  3538  005F                     getDimmerLights_ValueToPercent@i:	
  3539                           ; 3 bytes @ 0x3F
  3540                           
  3541                           
  3542                           ; 3 bytes @ 0x3F
  3543  005F                     	ds	3
  3544  0062                     ?_setProductData:	
  3545  0062                     ??_DimmerIntr_Initialization:	
  3546                           ; 0 bytes @ 0x42
  3547                           
  3548  0062                     ?_setDimmerIntr_MaxmumValue:	
  3549                           ; 0 bytes @ 0x42
  3550                           
  3551  0062                     setDimmerIntr_MaxmumValue@value:	
  3552                           ; 0 bytes @ 0x42
  3553                           
  3554  0062                     setProductData@value:	
  3555                           ; 1 bytes @ 0x42
  3556                           
  3557                           
  3558                           ; 1 bytes @ 0x42
  3559  0062                     	ds	1
  3560  0063                     ??_setProductData:	
  3561  0063                     ??_setDimmerIntr_MaxmumValue:	
  3562                           ; 0 bytes @ 0x43
  3563                           
  3564                           
  3565                           ; 0 bytes @ 0x43
  3566  0063                     	ds	1
  3567  0064                     ??_DimmerLights_Initialization:	
  3568  0064                     setDimmerIntr_MaxmumValue@lights:	
  3569                           ; 0 bytes @ 0x44
  3570                           
  3571  0064                     setProductData@address:	
  3572                           ; 1 bytes @ 0x44
  3573                           
  3574                           
  3575                           ; 1 bytes @ 0x44
  3576  0064                     	ds	1
  3577  0065                     ??_DlyOff_Main:	
  3578  0065                     ?_setDimmerLights_Dimming:	
  3579                           ; 0 bytes @ 0x45
  3580                           
  3581  0065                     ??_DimmerLights_AssignationDimming:	
  3582                           ; 0 bytes @ 0x45
  3583                           
  3584  0065                     ??_setTemp_Main:	
  3585                           ; 0 bytes @ 0x45
  3586                           
  3587  0065                     ?_setDelayOff_GO:	
  3588                           ; 0 bytes @ 0x45
  3589                           
  3590  0065                     setDelayOff_GO@command:	
  3591                           ; 0 bytes @ 0x45
  3592                           
  3593  0065                     setDimmerLights_Dimming@status:	
  3594                           ; 1 bytes @ 0x45
  3595                           
  3596                           
  3597                           ; 1 bytes @ 0x45
  3598  0065                     	ds	1
  3599  0066                     ??_setDimmerLights_Dimming:	
  3600  0066                     setDelayOff_GO@value:	
  3601                           ; 0 bytes @ 0x46
  3602                           
  3603  0066                     DimmerLights_AssignationDimming@status:	
  3604                           ; 1 bytes @ 0x46
  3605                           
  3606                           
  3607                           ; 1 bytes @ 0x46
  3608  0066                     	ds	1
  3609  0067                     ??_setDelayOff_GO:	
  3610  0067                     DlyOff_Main@sw:	
  3611                           ; 0 bytes @ 0x47
  3612                           
  3613  0067                     DimmerLights_AssignationDimming@sw:	
  3614                           ; 1 bytes @ 0x47
  3615                           
  3616  0067                     setDimmerLights_Dimming@value:	
  3617                           ; 1 bytes @ 0x47
  3618                           
  3619  0067                     setTemp_Main@error:	
  3620                           ; 1 bytes @ 0x47
  3621                           
  3622                           
  3623                           ; 1 bytes @ 0x47
  3624  0067                     	ds	1
  3625  0068                     ??_DimmerLights_TwoPhase_Main:	
  3626  0068                     ??_DelayOff_Main:	
  3627                           ; 0 bytes @ 0x48
  3628                           
  3629  0068                     DimmerLights_TwoPhase_Main@lights:	
  3630                           ; 0 bytes @ 0x48
  3631                           
  3632  0068                     setDimmerLights_Dimming@lights:	
  3633                           ; 1 bytes @ 0x48
  3634                           
  3635  0068                     setTemp_Main@SafeValue:	
  3636                           ; 1 bytes @ 0x48
  3637                           
  3638                           
  3639                           ; 2 bytes @ 0x48
  3640  0068                     	ds	1
  3641  0069                     setDelayOff_GO@i:	
  3642                           
  3643                           ; 1 bytes @ 0x49
  3644  0069                     	ds	1
  3645  006A                     setDelayOff_GO@j:	
  3646  006A                     setTemp_Main@DangerValue:	
  3647                           ; 1 bytes @ 0x4A
  3648                           
  3649                           
  3650                           ; 2 bytes @ 0x4A
  3651  006A                     	ds	1
  3652  006B                     setDelayOff_GO@k:	
  3653                           
  3654                           ; 1 bytes @ 0x4B
  3655  006B                     	ds	1
  3656  006C                     setDelayOff_GO@sw:	
  3657  006C                     setTemp_Main@TempGO:	
  3658                           ; 1 bytes @ 0x4C
  3659                           
  3660                           
  3661                           ; 1 bytes @ 0x4C
  3662  006C                     	ds	1
  3663  006D                     ?_setDimmerLights_OnOff:	
  3664  006D                     setDimmerLights_OnOff@command:	
  3665                           ; 0 bytes @ 0x4D
  3666                           
  3667  006D                     setTemp_Main@AD:	
  3668                           ; 1 bytes @ 0x4D
  3669                           
  3670                           
  3671                           ; 2 bytes @ 0x4D
  3672  006D                     	ds	1
  3673  006E                     ??_setDimmerLights_OnOff:	
  3674                           
  3675                           ; 0 bytes @ 0x4E
  3676  006E                     	ds	1
  3677  006F                     ??_Temp_Main:	
  3678                           
  3679                           ; 0 bytes @ 0x4F
  3680  006F                     	ds	1
  3681  0070                     ??_setDimmerLights_Main:	
  3682  0070                     ??_DimmerLights_Main:	
  3683                           ; 0 bytes @ 0x50
  3684                           
  3685  0070                     ??_main:	
  3686                           ; 0 bytes @ 0x50
  3687                           
  3688                           
  3689                           	psect	maintext
  3690  08D6                     __pmaintext:	
  3691                           ; 0 bytes @ 0x50
  3692 ;;
  3693 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3694 ;;
  3695 ;; *************** function _main *****************
  3696 ;; Defined at:
  3697 ;;		line 7 in file "../src/Main_B1.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;  argc            2    2[BANK1 ] int 
  3700 ;;  argv            2    4[BANK1 ] PTR PTR unsigned char 
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;		None
  3703 ;; Return value:  Size  Location     Type
  3704 ;;                  2    2[BANK1 ] int 
  3705 ;; Registers used:
  3706 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3707 ;; Tracked objects:
  3708 ;;		On entry : 17F/0
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3712 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3715 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3716 ;;Total ram usage:        4 bytes
  3717 ;; Hardware stack levels required when called:   11
  3718 ;; This function calls:
  3719 ;;		_Buzzer_Initialization
  3720 ;;		_Buzzer_Main
  3721 ;;		_DelayOff_Initialization
  3722 ;;		_DelayOff_Main
  3723 ;;		_DimmerLights_Initialization
  3724 ;;		_DimmerLights_Main
  3725 ;;		_Exception_Main
  3726 ;;		_Flash_Memory_Initialization
  3727 ;;		_Flash_Memory_Main
  3728 ;;		_LED_Initialization
  3729 ;;		_LED_Main
  3730 ;;		_Load_Initialization
  3731 ;;		_Load_Main
  3732 ;;		_Mcu_Initialization
  3733 ;;		_Switch_Initialization
  3734 ;;		_Switch_Main
  3735 ;;		_Temp_Initialization
  3736 ;;		_Temp_Main
  3737 ;;		_WDT_Main
  3738 ;;		_getLoad_AD
  3739 ;;		_getTemp_AD
  3740 ;;		_myMain_Initialization
  3741 ;;		_my_MainTimer
  3742 ;; This function is called by:
  3743 ;;		Startup code after reset
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           
  3748                           ;psect for function _main
  3749  08D6                     _main:	
  3750                           
  3751                           ;Main_B1.c: 8: myMain_Initialization();
  3752                           
  3753                           ;incstack = 0
  3754                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3755  08D6  3193  2319  3188   	fcall	_myMain_Initialization
  3756                           
  3757                           ;Main_B1.c: 9: Mcu_Initialization();
  3758  08D9  3192  22E2  3188   	fcall	_Mcu_Initialization
  3759                           
  3760                           ;Main_B1.c: 10: Flash_Memory_Initialization();
  3761  08DC  3186  2602  3188   	fcall	_Flash_Memory_Initialization
  3762                           
  3763                           ;Main_B1.c: 11: LED_Initialization();
  3764  08DF  3190  20EF  3188   	fcall	_LED_Initialization
  3765                           
  3766                           ;Main_B1.c: 12: Buzzer_Initialization();
  3767  08E2  3190  20DE  3188   	fcall	_Buzzer_Initialization
  3768                           
  3769                           ;Main_B1.c: 14: ;;
  3770                           ;Main_B1.c: 15: Temp_Initialization();
  3771  08E5  3190  20E4  3188   	fcall	_Temp_Initialization
  3772                           
  3773                           ;Main_B1.c: 16: Load_Initialization();
  3774  08E8  3190  20E1  3188   	fcall	_Load_Initialization
  3775                           
  3776                           ;Main_B1.c: 17: ;;
  3777                           ;Main_B1.c: 18: DelayOff_Initialization();
  3778  08EB  3190  20E7  3188   	fcall	_DelayOff_Initialization
  3779                           
  3780                           ;Main_B1.c: 20: DimmerLights_Initialization();
  3781  08EE  3191  211C  3188   	fcall	_DimmerLights_Initialization
  3782                           
  3783                           ;Main_B1.c: 21: ;;
  3784                           ;Main_B1.c: 22: ;;
  3785                           ;Main_B1.c: 23: ;;
  3786                           ;Main_B1.c: 24: Switch_Initialization();
  3787  08F1  3190  20FB  3188   	fcall	_Switch_Initialization
  3788  08F4                     l6395:	
  3789                           ;Main_B1.c: 25: ;;
  3790                           ;Main_B1.c: 26: ;;
  3791                           ;Main_B1.c: 27: ;;
  3792                           ;Main_B1.c: 28: ;;
  3793                           ;Main_B1.c: 30: while (1) {
  3794                           
  3795                           
  3796                           ;Main_B1.c: 32: if (myMain.PowerON == 1) {
  3797  08F4  0021               	movlb	1	; select bank1
  3798  08F5  1C20               	btfss	_myMain^(0+128),0
  3799  08F6  28FF               	goto	l6399
  3800                           
  3801                           ;Main_B1.c: 38: getLoad_AD(0x05);
  3802  08F7  3005               	movlw	5
  3803  08F8  3187  2780  3188   	fcall	_getLoad_AD
  3804                           
  3805                           ;Main_B1.c: 42: getTemp_AD(0x09);
  3806  08FB  3009               	movlw	9
  3807  08FC  318E  2622  3188   	fcall	_getTemp_AD
  3808  08FF                     l6399:	
  3809                           
  3810                           ;Main_B1.c: 57: }
  3811                           ;Main_B1.c: 93: if (Timer1.Timeout == 1) {
  3812  08FF  0021               	movlb	1	; select bank1
  3813  0900  1C4A               	btfss	_Timer1^(0+128),0
  3814  0901  28F4               	goto	l6395
  3815                           
  3816                           ;Main_B1.c: 94: Timer1.Timeout = 0;
  3817  0902  104A               	bcf	_Timer1^(0+128),0
  3818                           
  3819                           ;Main_B1.c: 96: my_MainTimer();
  3820  0903  3196  26F8  3188   	fcall	_my_MainTimer
  3821                           
  3822                           ;Main_B1.c: 97: WDT_Main();
  3823  0906  3192  22F4  3188   	fcall	_WDT_Main
  3824                           
  3825                           ;Main_B1.c: 98: ;;
  3826                           ;Main_B1.c: 99: ;;
  3827                           ;Main_B1.c: 100: if (myMain.PowerON == 1) {
  3828  0909  0021               	movlb	1	; select bank1
  3829  090A  1C20               	btfss	_myMain^(0+128),0
  3830  090B  28F4               	goto	l6395
  3831                           
  3832                           ;Main_B1.c: 101: Flash_Memory_Main();
  3833  090C  3197  2734  3188   	fcall	_Flash_Memory_Main
  3834                           
  3835                           ;Main_B1.c: 103: LED_Main();
  3836  090F  3190  20F3  3188   	fcall	_LED_Main
  3837                           
  3838                           ;Main_B1.c: 104: Buzzer_Main();
  3839  0912  3188  2040  3188   	fcall	_Buzzer_Main
  3840                           
  3841                           ;Main_B1.c: 106: ;;
  3842                           ;Main_B1.c: 107: Temp_Main();
  3843  0915  3188  2000  3188   	fcall	_Temp_Main
  3844                           
  3845                           ;Main_B1.c: 108: Load_Main();
  3846  0918  3180  2049  3188   	fcall	_Load_Main
  3847                           
  3848                           ;Main_B1.c: 109: ;;
  3849                           ;Main_B1.c: 111: ;;
  3850                           ;Main_B1.c: 112: DimmerLights_Main();
  3851  091B  3195  253A  3188   	fcall	_DimmerLights_Main
  3852                           
  3853                           ;Main_B1.c: 113: Switch_Main();
  3854  091E  3191  212A  3188   	fcall	_Switch_Main
  3855                           
  3856                           ;Main_B1.c: 114: ;;
  3857                           ;Main_B1.c: 115: ;;
  3858                           ;Main_B1.c: 117: ;;
  3859                           ;Main_B1.c: 118: DelayOff_Main();
  3860  0921  3190  20EB  3188   	fcall	_DelayOff_Main
  3861                           
  3862                           ;Main_B1.c: 119: ;;
  3863                           ;Main_B1.c: 120: ;;
  3864                           ;Main_B1.c: 121: Exception_Main();
  3865  0924  3185  2530  3188   	fcall	_Exception_Main
  3866  0927  28F4               	goto	l6395
  3867  0928                     __end_of_main:	
  3868                           ;Main_B1.c: 128: }
  3869                           ;Main_B1.c: 129: }
  3870                           ;Main_B1.c: 163: }
  3871                           ;Main_B1.c: 164: return (0);
  3872                           ;	Return value of _main is never used
  3873                           
  3874                           
  3875                           	psect	text1
  3876  16F8                     __ptext1:	
  3877 ;; *************** function _my_MainTimer *****************
  3878 ;; Defined at:
  3879 ;;		line 185 in file "../src/Main_B1.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;		None
  3882 ;; Auto vars:     Size  Location     Type
  3883 ;;		None
  3884 ;; Return value:  Size  Location     Type
  3885 ;;		None               void
  3886 ;; Registers used:
  3887 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3888 ;; Tracked objects:
  3889 ;;		On entry : 0/0
  3890 ;;		On exit  : 0/0
  3891 ;;		Unchanged: 0/0
  3892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3895 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3896 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3897 ;;Total ram usage:        1 bytes
  3898 ;; Hardware stack levels used:    1
  3899 ;; Hardware stack levels required when called:    7
  3900 ;; This function calls:
  3901 ;;		_setBuz
  3902 ;; This function is called by:
  3903 ;;		_main
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906                           
  3907                           
  3908                           ;psect for function _my_MainTimer
  3909  16F8                     _my_MainTimer:	
  3910                           
  3911                           ;Main_B1.c: 187: if (myMain.PowerON == 0) {
  3912                           
  3913                           ;incstack = 0
  3914                           ; Regs used in _my_MainTimer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3915  16F8  0021               	movlb	1	; select bank1
  3916  16F9  1820               	btfsc	_myMain^(0+128),0
  3917  16FA  2F12               	goto	l6051
  3918                           
  3919                           ;Main_B1.c: 188: myMain.PowerCount++;
  3920  16FB  3001               	movlw	1
  3921  16FC  0020               	movlb	0	; select bank0
  3922  16FD  00AD               	movwf	??_my_MainTimer
  3923  16FE  082D               	movf	??_my_MainTimer,w
  3924  16FF  0021               	movlb	1	; select bank1
  3925  1700  07A1               	addwf	(_myMain^(0+128)+1),f
  3926                           
  3927                           ;Main_B1.c: 189: if (myMain.PowerCount == (1500 / 20)) {
  3928  1701  0821               	movf	(_myMain^(0+128)+1),w
  3929  1702  3A4B               	xorlw	75
  3930  1703  1D03               	skipz
  3931  1704  0008               	return
  3932                           
  3933                           ;Main_B1.c: 190: myMain.PowerCount = 0;
  3934  1705  01A1               	clrf	(_myMain^(0+128)+1)
  3935                           
  3936                           ;Main_B1.c: 191: myMain.PowerON = 1;
  3937  1706  1420               	bsf	_myMain^(0+128),0
  3938                           
  3939                           ;Main_B1.c: 196: setBuz(3, 50);
  3940  1707  3032               	movlw	50
  3941  1708  0020               	movlb	0	; select bank0
  3942  1709  00A9               	movwf	setBuz@time
  3943  170A  3000               	movlw	0
  3944  170B  00AA               	movwf	setBuz@time+1
  3945  170C  3003               	movlw	3
  3946  170D  3189  21D0         	fcall	_setBuz
  3947                           
  3948                           ;Main_B1.c: 197: myMain.SelfTest = 1;
  3949  170F  0021               	movlb	1	; select bank1
  3950  1710  1620               	bsf	_myMain^(0+128),4
  3951                           
  3952                           ;Main_B1.c: 206: }
  3953                           ;Main_B1.c: 207: } else {
  3954  1711  0008               	return
  3955  1712                     l6051:	
  3956                           
  3957                           ;Main_B1.c: 208: myMain.PowerCount++;
  3958  1712  3001               	movlw	1
  3959  1713  0020               	movlb	0	; select bank0
  3960  1714  00AD               	movwf	??_my_MainTimer
  3961  1715  082D               	movf	??_my_MainTimer,w
  3962  1716  0021               	movlb	1	; select bank1
  3963  1717  07A1               	addwf	(_myMain^(0+128)+1),f
  3964                           
  3965                           ;Main_B1.c: 209: if (myMain.PowerCount == (1000 / 20)) {
  3966  1718  0821               	movf	(_myMain^(0+128)+1),w
  3967  1719  3A32               	xorlw	50
  3968  171A  1903               	btfsc	3,2
  3969                           
  3970                           ;Main_B1.c: 210: myMain.PowerCount = 0;
  3971  171B  01A1               	clrf	(_myMain^(0+128)+1)
  3972                           
  3973                           ;Main_B1.c: 226: }
  3974                           ;Main_B1.c: 228: myMain.Count1++;
  3975  171C  3001               	movlw	1
  3976  171D  07A4               	addwf	(_myMain^(0+128)+4),f
  3977  171E  3000               	movlw	0
  3978  171F  3DA5               	addwfc	((_myMain+1)^(0+128)+4),f
  3979                           
  3980                           ;Main_B1.c: 229: if (myMain.Count1 == (1000 / 20)) {
  3981  1720  3004               	movlw	4
  3982  1721  3EA0               	addlw	_myMain& (0+255)
  3983  1722  0086               	movwf	6
  3984  1723  0187               	clrf	7
  3985  1724  3F40               	moviw [0]fsr1
  3986  1725  3A32               	xorlw	50
  3987  1726  1D03               	skipz
  3988  1727  2F2A               	goto	u6635
  3989  1728  3F41               	moviw [1]fsr1
  3990  1729  3A00               	xorlw	0
  3991  172A                     u6635:	
  3992  172A  1D03               	skipz
  3993  172B  0008               	return
  3994                           
  3995                           ;Main_B1.c: 230: myMain.Count1 = 0;
  3996  172C  01A4               	clrf	(_myMain^(0+128)+4)
  3997  172D  01A5               	clrf	((_myMain+1)^(0+128)+4)
  3998                           
  3999                           ;Main_B1.c: 242: if (myMain.Flag) {
  4000  172E  1CA0               	btfss	_myMain^(0+128),1
  4001  172F  2F32               	goto	l1073
  4002                           
  4003                           ;Main_B1.c: 243: myMain.Flag = 0;
  4004  1730  10A0               	bcf	_myMain^(0+128),1
  4005                           
  4006                           ;Main_B1.c: 252: } else {
  4007  1731  0008               	return
  4008  1732                     l1073:	
  4009                           
  4010                           ;Main_B1.c: 253: myMain.Flag = 1;
  4011  1732  14A0               	bsf	_myMain^(0+128),1
  4012  1733  0008               	return
  4013  1734                     __end_of_my_MainTimer:	
  4014                           
  4015                           	psect	text2
  4016  1319                     __ptext2:	
  4017 ;; *************** function _myMain_Initialization *****************
  4018 ;; Defined at:
  4019 ;;		line 170 in file "../src/Main_B1.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;		None
  4022 ;; Auto vars:     Size  Location     Type
  4023 ;;		None
  4024 ;; Return value:  Size  Location     Type
  4025 ;;		None               void
  4026 ;; Registers used:
  4027 ;;		wreg, fsr1l, fsr1h
  4028 ;; Tracked objects:
  4029 ;;		On entry : 0/0
  4030 ;;		On exit  : 0/0
  4031 ;;		Unchanged: 0/0
  4032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4035 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4036 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4037 ;;Total ram usage:        1 bytes
  4038 ;; Hardware stack levels used:    1
  4039 ;; Hardware stack levels required when called:    5
  4040 ;; This function calls:
  4041 ;;		Nothing
  4042 ;; This function is called by:
  4043 ;;		_main
  4044 ;; This function uses a non-reentrant model
  4045 ;;
  4046                           
  4047                           
  4048                           ;psect for function _myMain_Initialization
  4049  1319                     _myMain_Initialization:	
  4050                           
  4051                           ;Main_B1.c: 173: product = &_product;
  4052                           
  4053                           ;incstack = 0
  4054                           ; Regs used in _myMain_Initialization: [wregfsr1]
  4055  1319  30C5               	movlw	__product& (0+255)
  4056  131A  0020               	movlb	0	; select bank0
  4057  131B  00A0               	movwf	??_myMain_Initialization
  4058  131C  0820               	movf	??_myMain_Initialization,w
  4059  131D  0021               	movlb	1	; select bank1
  4060  131E  00EE               	movwf	_product^(0+128)
  4061                           
  4062                           ;Main_B1.c: 174: product->Data[20] = 209;
  4063  131F  30D1               	movlw	209
  4064  1320  0020               	movlb	0	; select bank0
  4065  1321  00A0               	movwf	??_myMain_Initialization
  4066  1322  0021               	movlb	1	; select bank1
  4067  1323  086E               	movf	_product^(0+128),w
  4068  1324  3E14               	addlw	20
  4069  1325  0086               	movwf	6
  4070  1326  3001               	movlw	1	; select bank2/3
  4071  1327  0087               	movwf	7
  4072  1328  0020               	movlb	0	; select bank0
  4073  1329  0820               	movf	??_myMain_Initialization,w
  4074  132A  0081               	movwf	1
  4075  132B  0008               	return
  4076  132C                     __end_of_myMain_Initialization:	
  4077                           
  4078                           	psect	text3
  4079  0E22                     __ptext3:	
  4080 ;; *************** function _getTemp_AD *****************
  4081 ;; Defined at:
  4082 ;;		line 15 in file "../src/OverTemperature_B1.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;  channel         1    wreg     unsigned char 
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;  channel         1    5[BANK0 ] unsigned char 
  4087 ;;  ADRES           2    6[BANK0 ] unsigned int 
  4088 ;; Return value:  Size  Location     Type
  4089 ;;		None               void
  4090 ;; Registers used:
  4091 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4098 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4099 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4100 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4101 ;;Total ram usage:        4 bytes
  4102 ;; Hardware stack levels used:    1
  4103 ;; Hardware stack levels required when called:    7
  4104 ;; This function calls:
  4105 ;;		_getAD
  4106 ;; This function is called by:
  4107 ;;		_main
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           
  4112                           ;psect for function _getTemp_AD
  4113  0E22                     _getTemp_AD:	
  4114                           
  4115                           ;incstack = 0
  4116                           ; Regs used in _getTemp_AD: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4117                           ;getTemp_AD@channel stored from wreg
  4118  0E22  0020               	movlb	0	; select bank0
  4119  0E23  00A5               	movwf	getTemp_AD@channel
  4120                           
  4121                           ;OverTemperature_B1.c: 16: ADtype ADRES = 0;
  4122  0E24  01A6               	clrf	getTemp_AD@ADRES
  4123  0E25  01A7               	clrf	getTemp_AD@ADRES+1
  4124                           
  4125                           ;OverTemperature_B1.c: 19: if (Temp.ADtoGO == 1) {
  4126  0E26  0021               	movlb	1	; select bank1
  4127  0E27  1D56               	btfss	_Temp^(0+128),2
  4128  0E28  0008               	return
  4129                           
  4130                           ;OverTemperature_B1.c: 21: ADRES = getAD(channel, 0xf0);
  4131  0E29  30F0               	movlw	240
  4132  0E2A  0020               	movlb	0	; select bank0
  4133  0E2B  00A4               	movwf	??_getTemp_AD
  4134  0E2C  0824               	movf	??_getTemp_AD,w
  4135  0E2D  00A0               	movwf	getAD@adcon1
  4136  0E2E  0825               	movf	getTemp_AD@channel,w
  4137  0E2F  3194  2472  318E   	fcall	_getAD
  4138  0E32  0020               	movlb	0	; select bank0
  4139  0E33  0821               	movf	?_getAD+1,w
  4140  0E34  01A7               	clrf	getTemp_AD@ADRES+1
  4141  0E35  07A7               	addwf	getTemp_AD@ADRES+1,f
  4142  0E36  0820               	movf	?_getAD,w
  4143  0E37  01A6               	clrf	getTemp_AD@ADRES
  4144  0E38  07A6               	addwf	getTemp_AD@ADRES,f
  4145                           
  4146                           ;OverTemperature_B1.c: 29: if (ADRES > 0) {
  4147  0E39  0827               	movf	getTemp_AD@ADRES+1,w
  4148  0E3A  0426               	iorwf	getTemp_AD@ADRES,w
  4149  0E3B  1903               	skipnz
  4150  0E3C  0008               	return
  4151                           
  4152                           ;OverTemperature_B1.c: 30: if (Temp.ADV[0] < ADRES) {
  4153  0E3D  0827               	movf	getTemp_AD@ADRES+1,w
  4154  0E3E  0021               	movlb	1	; select bank1
  4155  0E3F  025B               	subwf	((_Temp+1)^(0+128)+4),w
  4156  0E40  1D03               	skipz
  4157  0E41  2E46               	goto	u6555
  4158  0E42  0020               	movlb	0	; select bank0
  4159  0E43  0826               	movf	getTemp_AD@ADRES,w
  4160  0E44  0021               	movlb	1	; select bank1
  4161  0E45  025A               	subwf	(_Temp^(0+128)+4),w
  4162  0E46                     u6555:	
  4163  0E46  1803               	skipnc
  4164  0E47  2E53               	goto	l6021
  4165                           
  4166                           ;OverTemperature_B1.c: 31: Temp.ADV[0] = ADRES;
  4167  0E48  0020               	movlb	0	; select bank0
  4168  0E49  0827               	movf	getTemp_AD@ADRES+1,w
  4169  0E4A  0021               	movlb	1	; select bank1
  4170  0E4B  01DB               	clrf	((_Temp+1)^(0+128)+4)
  4171  0E4C  07DB               	addwf	((_Temp+1)^(0+128)+4),f
  4172  0E4D  0020               	movlb	0	; select bank0
  4173  0E4E  0826               	movf	getTemp_AD@ADRES,w
  4174  0E4F  0021               	movlb	1	; select bank1
  4175  0E50  01DA               	clrf	(_Temp^(0+128)+4)
  4176  0E51  07DA               	addwf	(_Temp^(0+128)+4),f
  4177                           
  4178                           ;OverTemperature_B1.c: 32: } else if (Temp.ADV[1] < ADRES) {
  4179  0E52  0008               	return
  4180  0E53                     l6021:	
  4181  0E53  0020               	movlb	0	; select bank0
  4182  0E54  0827               	movf	getTemp_AD@ADRES+1,w
  4183  0E55  0021               	movlb	1	; select bank1
  4184  0E56  025D               	subwf	((_Temp+1)^(0+128)+6),w
  4185  0E57  1D03               	skipz
  4186  0E58  2E5D               	goto	u6565
  4187  0E59  0020               	movlb	0	; select bank0
  4188  0E5A  0826               	movf	getTemp_AD@ADRES,w
  4189  0E5B  0021               	movlb	1	; select bank1
  4190  0E5C  025C               	subwf	(_Temp^(0+128)+6),w
  4191  0E5D                     u6565:	
  4192  0E5D  1803               	skipnc
  4193  0E5E  2E6A               	goto	l6025
  4194                           
  4195                           ;OverTemperature_B1.c: 33: Temp.ADV[1] = ADRES;
  4196  0E5F  0020               	movlb	0	; select bank0
  4197  0E60  0827               	movf	getTemp_AD@ADRES+1,w
  4198  0E61  0021               	movlb	1	; select bank1
  4199  0E62  01DD               	clrf	((_Temp+1)^(0+128)+6)
  4200  0E63  07DD               	addwf	((_Temp+1)^(0+128)+6),f
  4201  0E64  0020               	movlb	0	; select bank0
  4202  0E65  0826               	movf	getTemp_AD@ADRES,w
  4203  0E66  0021               	movlb	1	; select bank1
  4204  0E67  01DC               	clrf	(_Temp^(0+128)+6)
  4205  0E68  07DC               	addwf	(_Temp^(0+128)+6),f
  4206                           
  4207                           ;OverTemperature_B1.c: 34: } else if (Temp.ADV[2] < ADRES) {
  4208  0E69  0008               	return
  4209  0E6A                     l6025:	
  4210  0E6A  0020               	movlb	0	; select bank0
  4211  0E6B  0827               	movf	getTemp_AD@ADRES+1,w
  4212  0E6C  0021               	movlb	1	; select bank1
  4213  0E6D  025F               	subwf	((_Temp+1)^(0+128)+8),w
  4214  0E6E  1D03               	skipz
  4215  0E6F  2E74               	goto	u6575
  4216  0E70  0020               	movlb	0	; select bank0
  4217  0E71  0826               	movf	getTemp_AD@ADRES,w
  4218  0E72  0021               	movlb	1	; select bank1
  4219  0E73  025E               	subwf	(_Temp^(0+128)+8),w
  4220  0E74                     u6575:	
  4221  0E74  1803               	skipnc
  4222  0E75  2E81               	goto	l6029
  4223                           
  4224                           ;OverTemperature_B1.c: 35: Temp.ADV[2] = ADRES;
  4225  0E76  0020               	movlb	0	; select bank0
  4226  0E77  0827               	movf	getTemp_AD@ADRES+1,w
  4227  0E78  0021               	movlb	1	; select bank1
  4228  0E79  01DF               	clrf	((_Temp+1)^(0+128)+8)
  4229  0E7A  07DF               	addwf	((_Temp+1)^(0+128)+8),f
  4230  0E7B  0020               	movlb	0	; select bank0
  4231  0E7C  0826               	movf	getTemp_AD@ADRES,w
  4232  0E7D  0021               	movlb	1	; select bank1
  4233  0E7E  01DE               	clrf	(_Temp^(0+128)+8)
  4234  0E7F  07DE               	addwf	(_Temp^(0+128)+8),f
  4235                           
  4236                           ;OverTemperature_B1.c: 36: } else if (Temp.ADV[3] < ADRES) {
  4237  0E80  0008               	return
  4238  0E81                     l6029:	
  4239  0E81  0020               	movlb	0	; select bank0
  4240  0E82  0827               	movf	getTemp_AD@ADRES+1,w
  4241  0E83  0021               	movlb	1	; select bank1
  4242  0E84  0261               	subwf	((_Temp+1)^(0+128)+10),w
  4243  0E85  1D03               	skipz
  4244  0E86  2E8B               	goto	u6585
  4245  0E87  0020               	movlb	0	; select bank0
  4246  0E88  0826               	movf	getTemp_AD@ADRES,w
  4247  0E89  0021               	movlb	1	; select bank1
  4248  0E8A  0260               	subwf	(_Temp^(0+128)+10),w
  4249  0E8B                     u6585:	
  4250  0E8B  1803               	skipnc
  4251  0E8C  2E98               	goto	l6033
  4252                           
  4253                           ;OverTemperature_B1.c: 37: Temp.ADV[3] = ADRES;
  4254  0E8D  0020               	movlb	0	; select bank0
  4255  0E8E  0827               	movf	getTemp_AD@ADRES+1,w
  4256  0E8F  0021               	movlb	1	; select bank1
  4257  0E90  01E1               	clrf	((_Temp+1)^(0+128)+10)
  4258  0E91  07E1               	addwf	((_Temp+1)^(0+128)+10),f
  4259  0E92  0020               	movlb	0	; select bank0
  4260  0E93  0826               	movf	getTemp_AD@ADRES,w
  4261  0E94  0021               	movlb	1	; select bank1
  4262  0E95  01E0               	clrf	(_Temp^(0+128)+10)
  4263  0E96  07E0               	addwf	(_Temp^(0+128)+10),f
  4264                           
  4265                           ;OverTemperature_B1.c: 38: } else if (Temp.ADV[4] < ADRES) {
  4266  0E97  0008               	return
  4267  0E98                     l6033:	
  4268  0E98  0020               	movlb	0	; select bank0
  4269  0E99  0827               	movf	getTemp_AD@ADRES+1,w
  4270  0E9A  0021               	movlb	1	; select bank1
  4271  0E9B  0263               	subwf	((_Temp+1)^(0+128)+12),w
  4272  0E9C  1D03               	skipz
  4273  0E9D  2EA2               	goto	u6595
  4274  0E9E  0020               	movlb	0	; select bank0
  4275  0E9F  0826               	movf	getTemp_AD@ADRES,w
  4276  0EA0  0021               	movlb	1	; select bank1
  4277  0EA1  0262               	subwf	(_Temp^(0+128)+12),w
  4278  0EA2                     u6595:	
  4279  0EA2  1803               	skipnc
  4280  0EA3  0008               	return
  4281                           
  4282                           ;OverTemperature_B1.c: 39: Temp.ADV[4] = ADRES;
  4283  0EA4  0020               	movlb	0	; select bank0
  4284  0EA5  0827               	movf	getTemp_AD@ADRES+1,w
  4285  0EA6  0021               	movlb	1	; select bank1
  4286  0EA7  01E3               	clrf	((_Temp+1)^(0+128)+12)
  4287  0EA8  07E3               	addwf	((_Temp+1)^(0+128)+12),f
  4288  0EA9  0020               	movlb	0	; select bank0
  4289  0EAA  0826               	movf	getTemp_AD@ADRES,w
  4290  0EAB  0021               	movlb	1	; select bank1
  4291  0EAC  01E2               	clrf	(_Temp^(0+128)+12)
  4292  0EAD  07E2               	addwf	(_Temp^(0+128)+12),f
  4293  0EAE  0008               	return
  4294  0EAF                     __end_of_getTemp_AD:	
  4295                           
  4296                           	psect	text4
  4297  0780                     __ptext4:	
  4298 ;; *************** function _getLoad_AD *****************
  4299 ;; Defined at:
  4300 ;;		line 16 in file "../src/OverLoad_B1.c"
  4301 ;; Parameters:    Size  Location     Type
  4302 ;;  channel         1    wreg     unsigned char 
  4303 ;; Auto vars:     Size  Location     Type
  4304 ;;  channel         1    6[BANK0 ] unsigned char 
  4305 ;;  ADRES           2    9[BANK0 ] unsigned int 
  4306 ;;  i               1   11[BANK0 ] unsigned char 
  4307 ;;  j               1    8[BANK0 ] unsigned char 
  4308 ;;  k               1    7[BANK0 ] unsigned char 
  4309 ;; Return value:  Size  Location     Type
  4310 ;;		None               void
  4311 ;; Registers used:
  4312 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4313 ;; Tracked objects:
  4314 ;;		On entry : 0/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4319 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4320 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4321 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4322 ;;Total ram usage:        8 bytes
  4323 ;; Hardware stack levels used:    1
  4324 ;; Hardware stack levels required when called:    7
  4325 ;; This function calls:
  4326 ;;		_getAD
  4327 ;; This function is called by:
  4328 ;;		_main
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332                           
  4333                           ;psect for function _getLoad_AD
  4334  0780                     _getLoad_AD:	
  4335                           
  4336                           ;incstack = 0
  4337                           ; Regs used in _getLoad_AD: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4338                           ;getLoad_AD@channel stored from wreg
  4339  0780  0020               	movlb	0	; select bank0
  4340  0781  00A6               	movwf	getLoad_AD@channel
  4341                           
  4342                           ;OverLoad_B1.c: 17: char i = 0, j = 0, k = 0;
  4343  0782  01AB               	clrf	getLoad_AD@i
  4344  0783  01A8               	clrf	getLoad_AD@j
  4345  0784  01A7               	clrf	getLoad_AD@k
  4346                           
  4347                           ;OverLoad_B1.c: 18: ADtype ADRES = 0;
  4348  0785  01A9               	clrf	getLoad_AD@ADRES
  4349  0786  01AA               	clrf	getLoad_AD@ADRES+1
  4350                           
  4351                           ;OverLoad_B1.c: 19: if (Load.ADtoGO == 1) {
  4352  0787  0022               	movlb	2	; select bank2
  4353  0788  1E20               	btfss	_Load^(0+256),4
  4354  0789  0008               	return
  4355                           
  4356                           ;OverLoad_B1.c: 21: ADRES = getAD(channel, 0xf3);
  4357  078A  30F3               	movlw	243
  4358  078B  0020               	movlb	0	; select bank0
  4359  078C  00A4               	movwf	??_getLoad_AD
  4360  078D  0824               	movf	??_getLoad_AD,w
  4361  078E  00A0               	movwf	getAD@adcon1
  4362  078F  0826               	movf	getLoad_AD@channel,w
  4363  0790  3194  2472  3187   	fcall	_getAD
  4364  0793  0020               	movlb	0	; select bank0
  4365  0794  0821               	movf	?_getAD+1,w
  4366  0795  01AA               	clrf	getLoad_AD@ADRES+1
  4367  0796  07AA               	addwf	getLoad_AD@ADRES+1,f
  4368  0797  0820               	movf	?_getAD,w
  4369  0798  01A9               	clrf	getLoad_AD@ADRES
  4370  0799  07A9               	addwf	getLoad_AD@ADRES,f
  4371                           
  4372                           ;OverLoad_B1.c: 22: for (i = 0; i < 4; i++) {
  4373  079A  01AB               	clrf	getLoad_AD@i
  4374  079B  3004               	movlw	4
  4375  079C  022B               	subwf	getLoad_AD@i,w
  4376  079D  1803               	btfsc	3,0
  4377  079E  2FC6               	goto	l5989
  4378  079F                     l5977:	
  4379                           
  4380                           ;OverLoad_B1.c: 23: if (Load.AH[i] < ADRES && j == 0) {
  4381  079F  352B               	lslf	getLoad_AD@i,w
  4382  07A0  3E2B               	addlw	(_Load+11)& (0+255)
  4383  07A1  0086               	movwf	6
  4384  07A2  3001               	movlw	1	; select bank2/3
  4385  07A3  0087               	movwf	7
  4386  07A4  3F40               	moviw [0]fsr1
  4387  07A5  00A4               	movwf	??_getLoad_AD
  4388  07A6  3F41               	moviw [1]fsr1
  4389  07A7  00A5               	movwf	??_getLoad_AD+1
  4390  07A8  082A               	movf	getLoad_AD@ADRES+1,w
  4391  07A9  0225               	subwf	??_getLoad_AD+1,w
  4392  07AA  1D03               	skipz
  4393  07AB  2FAE               	goto	u6455
  4394  07AC  0829               	movf	getLoad_AD@ADRES,w
  4395  07AD  0224               	subwf	??_getLoad_AD,w
  4396  07AE                     u6455:	
  4397  07AE  1803               	skipnc
  4398  07AF  2FBE               	goto	l5985
  4399  07B0  08A8               	movf	getLoad_AD@j,f
  4400  07B1  1D03               	skipz
  4401  07B2  2FBE               	goto	l5985
  4402                           
  4403                           ;OverLoad_B1.c: 24: Load.AH[i] = ADRES;
  4404  07B3  352B               	lslf	getLoad_AD@i,w
  4405  07B4  3E2B               	addlw	(_Load+11)& (0+255)
  4406  07B5  0086               	movwf	6
  4407  07B6  3001               	movlw	1	; select bank2/3
  4408  07B7  0087               	movwf	7
  4409  07B8  0829               	movf	getLoad_AD@ADRES,w
  4410  07B9  3FC0               	movwi [0]fsr1
  4411  07BA  082A               	movf	getLoad_AD@ADRES+1,w
  4412  07BB  3FC1               	movwi [1]fsr1
  4413                           
  4414                           ;OverLoad_B1.c: 25: j = 1;
  4415  07BC  01A8               	clrf	getLoad_AD@j
  4416  07BD  0AA8               	incf	getLoad_AD@j,f
  4417  07BE                     l5985:	
  4418  07BE  3001               	movlw	1
  4419  07BF  00A4               	movwf	??_getLoad_AD
  4420  07C0  0824               	movf	??_getLoad_AD,w
  4421  07C1  07AB               	addwf	getLoad_AD@i,f
  4422  07C2  3004               	movlw	4
  4423  07C3  022B               	subwf	getLoad_AD@i,w
  4424  07C4  1C03               	skipc
  4425  07C5  2F9F               	goto	l5977
  4426  07C6                     l5989:	
  4427                           
  4428                           ;OverLoad_B1.c: 26: }
  4429                           ;OverLoad_B1.c: 27: }
  4430                           ;OverLoad_B1.c: 28: if (j == 0) {
  4431  07C6  08A8               	movf	getLoad_AD@j,f
  4432  07C7  1D03               	skipz
  4433  07C8  0008               	return
  4434                           
  4435                           ;OverLoad_B1.c: 29: for (i = 0; i < 4; i++) {
  4436  07C9  01AB               	clrf	getLoad_AD@i
  4437  07CA                     L1:	
  4438  07CA  3004               	movlw	4
  4439  07CB  022B               	subwf	getLoad_AD@i,w
  4440  07CC  1803               	btfsc	3,0
  4441  07CD  0008               	return
  4442                           
  4443                           ;OverLoad_B1.c: 30: if (Load.AL[i] > ADRES && k == 0) {
  4444  07CE  352B               	lslf	getLoad_AD@i,w
  4445  07CF  3E35               	addlw	(_Load+21)& (0+255)
  4446  07D0  0086               	movwf	6
  4447  07D1  3001               	movlw	1	; select bank2/3
  4448  07D2  0087               	movwf	7
  4449  07D3  3F40               	moviw [0]fsr1
  4450  07D4  00A4               	movwf	??_getLoad_AD
  4451  07D5  3F41               	moviw [1]fsr1
  4452  07D6  00A5               	movwf	??_getLoad_AD+1
  4453  07D7  0825               	movf	??_getLoad_AD+1,w
  4454  07D8  022A               	subwf	getLoad_AD@ADRES+1,w
  4455  07D9  1D03               	skipz
  4456  07DA  2FDD               	goto	u6505
  4457  07DB  0824               	movf	??_getLoad_AD,w
  4458  07DC  0229               	subwf	getLoad_AD@ADRES,w
  4459  07DD                     u6505:	
  4460  07DD  1803               	skipnc
  4461  07DE  2FED               	goto	l6005
  4462  07DF  08A7               	movf	getLoad_AD@k,f
  4463  07E0  1D03               	skipz
  4464  07E1  2FED               	goto	l6005
  4465                           
  4466                           ;OverLoad_B1.c: 31: Load.AL[i] = ADRES;
  4467  07E2  352B               	lslf	getLoad_AD@i,w
  4468  07E3  3E35               	addlw	(_Load+21)& (0+255)
  4469  07E4  0086               	movwf	6
  4470  07E5  3001               	movlw	1	; select bank2/3
  4471  07E6  0087               	movwf	7
  4472  07E7  0829               	movf	getLoad_AD@ADRES,w
  4473  07E8  3FC0               	movwi [0]fsr1
  4474  07E9  082A               	movf	getLoad_AD@ADRES+1,w
  4475  07EA  3FC1               	movwi [1]fsr1
  4476                           
  4477                           ;OverLoad_B1.c: 32: k = 1;
  4478  07EB  01A7               	clrf	getLoad_AD@k
  4479  07EC  0AA7               	incf	getLoad_AD@k,f
  4480  07ED                     l6005:	
  4481  07ED  3001               	movlw	1
  4482  07EE  00A4               	movwf	??_getLoad_AD
  4483  07EF  0824               	movf	??_getLoad_AD,w
  4484  07F0  07AB               	addwf	getLoad_AD@i,f
  4485  07F1  2FCA               	goto	L1
  4486  07F2                     __end_of_getLoad_AD:	
  4487                           
  4488                           	psect	text5
  4489  1472                     __ptext5:	
  4490 ;; *************** function _getAD *****************
  4491 ;; Defined at:
  4492 ;;		line 461 in file "../src/MCU_B1.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;  adcon0          1    wreg     unsigned char 
  4495 ;;  adcon1          1    0[BANK0 ] unsigned char 
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;  adcon0          1    3[BANK0 ] unsigned char 
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  2    0[BANK0 ] int 
  4500 ;; Registers used:
  4501 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4502 ;; Tracked objects:
  4503 ;;		On entry : 0/0
  4504 ;;		On exit  : 0/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4507 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4508 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4510 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4511 ;;Total ram usage:        4 bytes
  4512 ;; Hardware stack levels used:    1
  4513 ;; Hardware stack levels required when called:    6
  4514 ;; This function calls:
  4515 ;;		_Timeout_Counter
  4516 ;;		_set_TimeoutCleared
  4517 ;; This function is called by:
  4518 ;;		_getLoad_AD
  4519 ;;		_getTemp_AD
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           
  4524                           ;psect for function _getAD
  4525  1472                     _getAD:	
  4526                           
  4527                           ;incstack = 0
  4528                           ; Regs used in _getAD: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4529                           ;getAD@adcon0 stored from wreg
  4530  1472  0020               	movlb	0	; select bank0
  4531  1473  00A3               	movwf	getAD@adcon0
  4532                           
  4533                           ;MCU_B1.c: 462: ADCON0 = adcon0;
  4534  1474  0823               	movf	getAD@adcon0,w
  4535  1475  0021               	movlb	1	; select bank1
  4536  1476  009D               	movwf	29	;volatile
  4537                           
  4538                           ;MCU_B1.c: 463: ADCON1 = adcon1;
  4539  1477  0020               	movlb	0	; select bank0
  4540  1478  0820               	movf	getAD@adcon1,w
  4541  1479  0021               	movlb	1	; select bank1
  4542  147A  009E               	movwf	30	;volatile
  4543                           
  4544                           ;MCU_B1.c: 464: GO_nDONE = 1;
  4545  147B  149D               	bsf	29,1	;volatile
  4546                           
  4547                           ;MCU_B1.c: 465: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  4548  147C  2C80               	goto	l5543
  4549  147D                     l5541:	
  4550                           
  4551                           ;MCU_B1.c: 466: Timeout_Counter();
  4552  147D  3193  232C  3194   	fcall	_Timeout_Counter
  4553  1480                     l5543:	
  4554  1480  0021               	movlb	1	; select bank1
  4555  1481  1C9D               	btfss	29,1	;volatile
  4556  1482  2C85               	goto	l5547
  4557  1483  1D2A               	btfss	(_myMain^(0+128)+10),2
  4558  1484  2C7D               	goto	l5541
  4559  1485                     l5547:	
  4560                           
  4561                           ;MCU_B1.c: 467: };
  4562                           ;MCU_B1.c: 468: set_TimeoutCleared();
  4563  1485  3190  20FF         	fcall	_set_TimeoutCleared
  4564                           
  4565                           ;MCU_B1.c: 469: return ((ADRESH*256)+ADRESL);
  4566  1487  0021               	movlb	1	; select bank1
  4567  1488  081C               	movf	28,w	;volatile
  4568  1489  0020               	movlb	0	; select bank0
  4569  148A  01A1               	clrf	?_getAD+1
  4570  148B  07A1               	addwf	?_getAD+1,f
  4571  148C  0021               	movlb	1	; select bank1
  4572  148D  081B               	movf	27,w	;volatile
  4573  148E  0020               	movlb	0	; select bank0
  4574  148F  01A0               	clrf	?_getAD
  4575  1490  07A0               	addwf	?_getAD,f
  4576  1491  0008               	return
  4577  1492                     __end_of_getAD:	
  4578                           
  4579                           	psect	text6
  4580  12F4                     __ptext6:	
  4581 ;; *************** function _WDT_Main *****************
  4582 ;; Defined at:
  4583 ;;		line 1116 in file "../src/MCU_B1.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;		None
  4586 ;; Auto vars:     Size  Location     Type
  4587 ;;		None
  4588 ;; Return value:  Size  Location     Type
  4589 ;;		None               void
  4590 ;; Registers used:
  4591 ;;		wreg, status,2, status,0, pclath, cstack
  4592 ;; Tracked objects:
  4593 ;;		On entry : 0/0
  4594 ;;		On exit  : 0/0
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4599 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4600 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4601 ;;Total ram usage:        1 bytes
  4602 ;; Hardware stack levels used:    1
  4603 ;; Hardware stack levels required when called:    6
  4604 ;; This function calls:
  4605 ;;		_WDT_Clearing
  4606 ;; This function is called by:
  4607 ;;		_main
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           
  4612                           ;psect for function _WDT_Main
  4613  12F4                     _WDT_Main:	
  4614                           
  4615                           ;MCU_B1.c: 1117: if (WDT.Enable == 1) {
  4616                           
  4617                           ;incstack = 0
  4618                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  4619  12F4  0021               	movlb	1	; select bank1
  4620  12F5  1C4D               	btfss	_WDT^(0+128),0
  4621  12F6  0008               	return
  4622                           
  4623                           ;MCU_B1.c: 1118: if (WDT.Timer-- > 0) {
  4624  12F7  3001               	movlw	1
  4625  12F8  02CE               	subwf	(_WDT^(0+128)+1),f
  4626  12F9  084E               	movf	(_WDT^(0+128)+1),w
  4627  12FA  3AFF               	xorlw	255
  4628  12FB  1903               	skipnz
  4629  12FC  0008               	return
  4630                           
  4631                           ;MCU_B1.c: 1119: WDT.Timer = 100;
  4632  12FD  3064               	movlw	100
  4633  12FE  0020               	movlb	0	; select bank0
  4634  12FF  00A0               	movwf	??_WDT_Main
  4635  1300  0820               	movf	??_WDT_Main,w
  4636  1301  0021               	movlb	1	; select bank1
  4637  1302  00CE               	movwf	(_WDT^(0+128)+1)
  4638                           
  4639                           ;MCU_B1.c: 1120: WDT_Clearing();
  4640  1303  3180  2002         	fcall	_WDT_Clearing
  4641  1305  0008               	return
  4642  1306                     __end_of_WDT_Main:	
  4643                           
  4644                           	psect	text7
  4645  0002                     __ptext7:	
  4646 ;; *************** function _WDT_Clearing *****************
  4647 ;; Defined at:
  4648 ;;		line 1126 in file "../src/MCU_B1.c"
  4649 ;; Parameters:    Size  Location     Type
  4650 ;;		None
  4651 ;; Auto vars:     Size  Location     Type
  4652 ;;		None
  4653 ;; Return value:  Size  Location     Type
  4654 ;;		None               void
  4655 ;; Registers used:
  4656 ;;		None
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4666 ;;Total ram usage:        0 bytes
  4667 ;; Hardware stack levels used:    1
  4668 ;; Hardware stack levels required when called:    5
  4669 ;; This function calls:
  4670 ;;		Nothing
  4671 ;; This function is called by:
  4672 ;;		_WDT_Main
  4673 ;; This function uses a non-reentrant model
  4674 ;;
  4675                           
  4676                           
  4677                           ;psect for function _WDT_Clearing
  4678  0002                     _WDT_Clearing:	
  4679                           
  4680                           ;incstack = 0
  4681                           ; Regs used in _WDT_Clearing: []
  4682  0002  0064               	clrwdt	;# 
  4683  0003  0008               	return
  4684  0004                     __end_of_WDT_Clearing:	
  4685                           
  4686                           	psect	text8
  4687  0800                     __ptext8:	
  4688 ;; *************** function _Temp_Main *****************
  4689 ;; Defined at:
  4690 ;;		line 65 in file "../src/OverTemperature_B1.c"
  4691 ;; Parameters:    Size  Location     Type
  4692 ;;		None
  4693 ;; Auto vars:     Size  Location     Type
  4694 ;;		None
  4695 ;; Return value:  Size  Location     Type
  4696 ;;		None               void
  4697 ;; Registers used:
  4698 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4699 ;; Tracked objects:
  4700 ;;		On entry : 0/0
  4701 ;;		On exit  : 0/0
  4702 ;;		Unchanged: 0/0
  4703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4708 ;;Total ram usage:        0 bytes
  4709 ;; Hardware stack levels used:    1
  4710 ;; Hardware stack levels required when called:    8
  4711 ;; This function calls:
  4712 ;;		_setTemp_Main
  4713 ;; This function is called by:
  4714 ;;		_main
  4715 ;; This function uses a non-reentrant model
  4716 ;;
  4717                           
  4718                           
  4719                           ;psect for function _Temp_Main
  4720  0800                     _Temp_Main:	
  4721                           
  4722                           ;OverTemperature_B1.c: 67: setTemp_Main();
  4723                           
  4724                           ;incstack = 0
  4725                           ; Regs used in _Temp_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4726  0800  3184  245D         	fcall	_setTemp_Main
  4727  0802  0008               	return
  4728  0803                     __end_of_Temp_Main:	
  4729                           
  4730                           	psect	text9
  4731  045D                     __ptext9:	
  4732 ;; *************** function _setTemp_Main *****************
  4733 ;; Defined at:
  4734 ;;		line 72 in file "../src/OverTemperature_B1.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;		None
  4737 ;; Auto vars:     Size  Location     Type
  4738 ;;  AD              2   77[BANK0 ] int 
  4739 ;;  DangerValue     2   74[BANK0 ] unsigned int 
  4740 ;;  SafeValue       2   72[BANK0 ] unsigned int 
  4741 ;;  TempGO          1   76[BANK0 ] unsigned char 
  4742 ;;  error           1   71[BANK0 ] unsigned char 
  4743 ;; Return value:  Size  Location     Type
  4744 ;;		None               void
  4745 ;; Registers used:
  4746 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4753 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4754 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4755 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4756 ;;Total ram usage:       10 bytes
  4757 ;; Hardware stack levels used:    1
  4758 ;; Hardware stack levels required when called:    7
  4759 ;; This function calls:
  4760 ;;		___lwdiv
  4761 ;;		_getMain_All_Error_Status
  4762 ;;		_getMain_All_LightsStatus
  4763 ;;		_setBuz
  4764 ;;		_setOverTemp_ADV_Restore
  4765 ;;		_setProductData
  4766 ;; This function is called by:
  4767 ;;		_Temp_Main
  4768 ;; This function uses a non-reentrant model
  4769 ;;
  4770                           
  4771                           
  4772                           ;psect for function _setTemp_Main
  4773  045D                     _setTemp_Main:	
  4774                           
  4775                           ;OverTemperature_B1.c: 73: char error = getMain_All_Error_Status(0);
  4776                           
  4777                           ;incstack = 0
  4778                           ; Regs used in _setTemp_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4779  045D  3000               	movlw	0
  4780  045E  3195  25E6  3184   	fcall	_getMain_All_Error_Status
  4781  0461  0020               	movlb	0	; select bank0
  4782  0462  00E5               	movwf	??_setTemp_Main
  4783  0463  0865               	movf	??_setTemp_Main,w
  4784  0464  00E7               	movwf	setTemp_Main@error
  4785                           
  4786                           ;OverTemperature_B1.c: 74: ADtype SafeValue = 0, DangerValue = 0;
  4787  0465  01E8               	clrf	setTemp_Main@SafeValue
  4788  0466  01E9               	clrf	setTemp_Main@SafeValue+1
  4789  0467  01EA               	clrf	setTemp_Main@DangerValue
  4790  0468  01EB               	clrf	setTemp_Main@DangerValue+1
  4791                           
  4792                           ;OverTemperature_B1.c: 75: int AD = 0;
  4793  0469  01ED               	clrf	setTemp_Main@AD
  4794  046A  01EE               	clrf	setTemp_Main@AD+1
  4795                           
  4796                           ;OverTemperature_B1.c: 76: char TempGO = getMain_All_LightsStatus();
  4797  046B  3191  2164  3184   	fcall	_getMain_All_LightsStatus
  4798  046E  0020               	movlb	0	; select bank0
  4799  046F  00E5               	movwf	??_setTemp_Main
  4800  0470  0865               	movf	??_setTemp_Main,w
  4801  0471  00EC               	movwf	setTemp_Main@TempGO
  4802                           
  4803                           ;OverTemperature_B1.c: 78: if (Temp.Enable == 1) {
  4804  0472  0021               	movlb	1	; select bank1
  4805  0473  1C56               	btfss	_Temp^(0+128),0
  4806  0474  2D2C               	goto	l1366
  4807                           
  4808                           ;OverTemperature_B1.c: 86: if (Temp.ADtoGO == 0) {
  4809  0475  1956               	btfsc	_Temp^(0+128),2
  4810  0476  2C94               	goto	l5649
  4811                           
  4812                           ;OverTemperature_B1.c: 87: if ((TempGO == 1 && Temp.ERROR == 0) || Temp.ERROR == 1) {
  4813  0477  0020               	movlb	0	; select bank0
  4814  0478  086C               	movf	setTemp_Main@TempGO,w
  4815  0479  3A01               	xorlw	1
  4816  047A  1D03               	skipz
  4817  047B  2C7F               	goto	l1372
  4818  047C  0021               	movlb	1	; select bank1
  4819  047D  1CD6               	btfss	_Temp^(0+128),1
  4820  047E  2C82               	goto	l5641
  4821  047F                     l1372:	
  4822  047F  0021               	movlb	1	; select bank1
  4823  0480  1CD6               	btfss	_Temp^(0+128),1
  4824  0481  2C91               	goto	l5647
  4825  0482                     l5641:	
  4826                           
  4827                           ;OverTemperature_B1.c: 88: Temp.Time++;
  4828  0482  3001               	movlw	1
  4829  0483  07D7               	addwf	(_Temp^(0+128)+1),f
  4830  0484  3000               	movlw	0
  4831  0485  3DD8               	addwfc	((_Temp+1)^(0+128)+1),f
  4832                           
  4833                           ;OverTemperature_B1.c: 89: if (Temp.Time >= (5000 / 20)) {
  4834  0486  3000               	movlw	0
  4835  0487  0258               	subwf	((_Temp+1)^(0+128)+1),w
  4836  0488  30FA               	movlw	250
  4837  0489  1903               	skipnz
  4838  048A  0257               	subwf	(_Temp^(0+128)+1),w
  4839  048B  1C03               	skipc
  4840  048C  0008               	return
  4841                           
  4842                           ;OverTemperature_B1.c: 90: Temp.Time = 0;
  4843  048D  01D7               	clrf	(_Temp^(0+128)+1)
  4844  048E  01D8               	clrf	((_Temp+1)^(0+128)+1)
  4845                           
  4846                           ;OverTemperature_B1.c: 91: Temp.ADtoGO = 1;
  4847  048F  1556               	bsf	_Temp^(0+128),2
  4848                           
  4849                           ;OverTemperature_B1.c: 92: }
  4850                           ;OverTemperature_B1.c: 93: } else {
  4851  0490  0008               	return
  4852  0491                     l5647:	
  4853                           
  4854                           ;OverTemperature_B1.c: 94: Temp.Time = 0;
  4855  0491  01D7               	clrf	(_Temp^(0+128)+1)
  4856  0492  01D8               	clrf	((_Temp+1)^(0+128)+1)
  4857                           
  4858                           ;OverTemperature_B1.c: 95: }
  4859                           ;OverTemperature_B1.c: 96: } else {
  4860  0493  0008               	return
  4861  0494                     l5649:	
  4862                           
  4863                           ;OverTemperature_B1.c: 97: Temp.Time++;
  4864  0494  3001               	movlw	1
  4865  0495  07D7               	addwf	(_Temp^(0+128)+1),f
  4866  0496  3000               	movlw	0
  4867  0497  3DD8               	addwfc	((_Temp+1)^(0+128)+1),f
  4868                           
  4869                           ;OverTemperature_B1.c: 98: if (Temp.Time >= (100 / 20)) {
  4870  0498  3000               	movlw	0
  4871  0499  0258               	subwf	((_Temp+1)^(0+128)+1),w
  4872  049A  3005               	movlw	5
  4873  049B  1903               	skipnz
  4874  049C  0257               	subwf	(_Temp^(0+128)+1),w
  4875  049D  1C03               	skipc
  4876  049E  0008               	return
  4877                           
  4878                           ;OverTemperature_B1.c: 99: Temp.Time = 0;
  4879  049F  01D7               	clrf	(_Temp^(0+128)+1)
  4880  04A0  01D8               	clrf	((_Temp+1)^(0+128)+1)
  4881                           
  4882                           ;OverTemperature_B1.c: 104: AD = (Temp.ADV[1] + Temp.ADV[2] + Temp.ADV[3]) / 3;
  4883  04A1  3003               	movlw	3
  4884  04A2  0020               	movlb	0	; select bank0
  4885  04A3  00A0               	movwf	___lwdiv@divisor
  4886  04A4  3000               	movlw	0
  4887  04A5  00A1               	movwf	___lwdiv@divisor+1
  4888  04A6  300A               	movlw	10
  4889  04A7  3ED6               	addlw	_Temp& (0+255)
  4890  04A8  0086               	movwf	6
  4891  04A9  0187               	clrf	7
  4892  04AA  3008               	movlw	8
  4893  04AB  3ED6               	addlw	_Temp& (0+255)
  4894  04AC  0084               	movwf	4
  4895  04AD  0185               	clrf	5
  4896  04AE  3F00               	moviw [0]fsr0
  4897  04AF  0021               	movlb	1	; select bank1
  4898  04B0  075C               	addwf	(_Temp^(0+128)+6),w
  4899  04B1  0020               	movlb	0	; select bank0
  4900  04B2  00E5               	movwf	??_setTemp_Main
  4901  04B3  3F01               	moviw [1]fsr0
  4902  04B4  0021               	movlb	1	; select bank1
  4903  04B5  3D5D               	addwfc	((_Temp+1)^(0+128)+6),w
  4904  04B6  0020               	movlb	0	; select bank0
  4905  04B7  00E6               	movwf	??_setTemp_Main+1
  4906  04B8  3F40               	moviw [0]fsr1
  4907  04B9  0765               	addwf	??_setTemp_Main,w
  4908  04BA  00A2               	movwf	___lwdiv@dividend
  4909  04BB  3F41               	moviw [1]fsr1
  4910  04BC  3D66               	addwfc	??_setTemp_Main+1,w
  4911  04BD  00A3               	movwf	___lwdiv@dividend+1
  4912  04BE  3196  264F  3184   	fcall	___lwdiv
  4913  04C1  0020               	movlb	0	; select bank0
  4914  04C2  0821               	movf	?___lwdiv+1,w
  4915  04C3  01EE               	clrf	setTemp_Main@AD+1
  4916  04C4  07EE               	addwf	setTemp_Main@AD+1,f
  4917  04C5  0820               	movf	?___lwdiv,w
  4918  04C6  01ED               	clrf	setTemp_Main@AD
  4919  04C7  07ED               	addwf	setTemp_Main@AD,f
  4920                           
  4921                           ;OverTemperature_B1.c: 105: setOverTemp_ADV_Restore();
  4922  04C8  3193  23FF  3184   	fcall	_setOverTemp_ADV_Restore
  4923                           
  4924                           ;OverTemperature_B1.c: 106: if (AD > 0) {
  4925  04CB  0020               	movlb	0	; select bank0
  4926  04CC  086E               	movf	setTemp_Main@AD+1,w
  4927  04CD  3A80               	xorlw	128
  4928  04CE  00E5               	movwf	??_setTemp_Main
  4929  04CF  3080               	movlw	128
  4930  04D0  0265               	subwf	??_setTemp_Main,w
  4931  04D1  1D03               	skipz
  4932  04D2  2CD5               	goto	u5885
  4933  04D3  3001               	movlw	1
  4934  04D4  026D               	subwf	setTemp_Main@AD,w
  4935  04D5                     u5885:	
  4936  04D5  1C03               	skipc
  4937  04D6  0008               	return
  4938                           
  4939                           ;OverTemperature_B1.c: 107: Temp.ADtoGO = 0;
  4940  04D7  0021               	movlb	1	; select bank1
  4941  04D8  1156               	bcf	_Temp^(0+128),2
  4942                           
  4943                           ;OverTemperature_B1.c: 123: SafeValue = 0x205;
  4944  04D9  3005               	movlw	5
  4945  04DA  0020               	movlb	0	; select bank0
  4946  04DB  00E8               	movwf	setTemp_Main@SafeValue
  4947  04DC  3002               	movlw	2
  4948  04DD  00E9               	movwf	setTemp_Main@SafeValue+1
  4949                           
  4950                           ;OverTemperature_B1.c: 124: DangerValue = 0x1ba;
  4951  04DE  30BA               	movlw	186
  4952  04DF  00EA               	movwf	setTemp_Main@DangerValue
  4953  04E0  3001               	movlw	1
  4954  04E1  00EB               	movwf	setTemp_Main@DangerValue+1
  4955                           
  4956                           ;OverTemperature_B1.c: 130: if (Temp.ERROR == 1) {
  4957  04E2  0021               	movlb	1	; select bank1
  4958  04E3  1CD6               	btfss	_Temp^(0+128),1
  4959  04E4  2D03               	goto	l5679
  4960                           
  4961                           ;OverTemperature_B1.c: 131: if (AD >= SafeValue) {
  4962  04E5  0020               	movlb	0	; select bank0
  4963  04E6  0869               	movf	setTemp_Main@SafeValue+1,w
  4964  04E7  026E               	subwf	setTemp_Main@AD+1,w
  4965  04E8  1D03               	skipz
  4966  04E9  2CEC               	goto	u5905
  4967  04EA  0868               	movf	setTemp_Main@SafeValue,w
  4968  04EB  026D               	subwf	setTemp_Main@AD,w
  4969  04EC                     u5905:	
  4970  04EC  1C03               	skipc
  4971  04ED  2D18               	goto	l5689
  4972                           
  4973                           ;OverTemperature_B1.c: 132: Temp.Count++;
  4974  04EE  3001               	movlw	1
  4975  04EF  00E5               	movwf	??_setTemp_Main
  4976  04F0  0865               	movf	??_setTemp_Main,w
  4977  04F1  0021               	movlb	1	; select bank1
  4978  04F2  07D9               	addwf	(_Temp^(0+128)+3),f
  4979                           
  4980                           ;OverTemperature_B1.c: 133: if (Temp.Count >= 3) {
  4981  04F3  3003               	movlw	3
  4982  04F4  0259               	subwf	(_Temp^(0+128)+3),w
  4983  04F5  1C03               	skipc
  4984  04F6  2D1A               	goto	l5691
  4985                           
  4986                           ;OverTemperature_B1.c: 134: Temp.Count = 0;
  4987  04F7  01D9               	clrf	(_Temp^(0+128)+3)
  4988                           
  4989                           ;OverTemperature_B1.c: 135: Temp.ERROR = 0;
  4990  04F8  10D6               	bcf	_Temp^(0+128),1
  4991                           
  4992                           ;OverTemperature_B1.c: 136: setBuz(2, 100);
  4993  04F9  3064               	movlw	100
  4994  04FA  0020               	movlb	0	; select bank0
  4995  04FB  00A9               	movwf	setBuz@time
  4996  04FC  3000               	movlw	0
  4997  04FD  00AA               	movwf	setBuz@time+1
  4998  04FE  3002               	movlw	2
  4999  04FF  3189  21D0  3184   	fcall	_setBuz
  5000                           
  5001                           ;OverTemperature_B1.c: 137: }
  5002                           ;OverTemperature_B1.c: 138: } else {
  5003  0502  2D1A               	goto	l5691
  5004  0503                     l5679:	
  5005                           ;OverTemperature_B1.c: 140: }
  5006                           ;OverTemperature_B1.c: 141: } else {
  5007                           
  5008                           ;OverTemperature_B1.c: 139: Temp.Count = 0;
  5009                           
  5010                           
  5011                           ;OverTemperature_B1.c: 142: if (AD <= DangerValue) {
  5012  0503  0020               	movlb	0	; select bank0
  5013  0504  086E               	movf	setTemp_Main@AD+1,w
  5014  0505  026B               	subwf	setTemp_Main@DangerValue+1,w
  5015  0506  1D03               	skipz
  5016  0507  2D0A               	goto	u5925
  5017  0508  086D               	movf	setTemp_Main@AD,w
  5018  0509  026A               	subwf	setTemp_Main@DangerValue,w
  5019  050A                     u5925:	
  5020  050A  1C03               	skipc
  5021  050B  2D18               	goto	l5689
  5022                           
  5023                           ;OverTemperature_B1.c: 143: Temp.Count++;
  5024  050C  3001               	movlw	1
  5025  050D  00E5               	movwf	??_setTemp_Main
  5026  050E  0865               	movf	??_setTemp_Main,w
  5027  050F  0021               	movlb	1	; select bank1
  5028  0510  07D9               	addwf	(_Temp^(0+128)+3),f
  5029                           
  5030                           ;OverTemperature_B1.c: 144: if (Temp.Count >= 3) {
  5031  0511  3003               	movlw	3
  5032  0512  0259               	subwf	(_Temp^(0+128)+3),w
  5033  0513  1C03               	skipc
  5034  0514  2D1A               	goto	l5691
  5035                           
  5036                           ;OverTemperature_B1.c: 145: Temp.Count = 0;
  5037  0515  01D9               	clrf	(_Temp^(0+128)+3)
  5038                           
  5039                           ;OverTemperature_B1.c: 146: Temp.ERROR = 1;
  5040  0516  14D6               	bsf	_Temp^(0+128),1
  5041                           
  5042                           ;OverTemperature_B1.c: 147: }
  5043                           ;OverTemperature_B1.c: 148: } else {
  5044  0517  2D1A               	goto	l5691
  5045  0518                     l5689:	
  5046                           
  5047                           ;OverTemperature_B1.c: 149: Temp.Count = 0;
  5048  0518  0021               	movlb	1	; select bank1
  5049  0519  01D9               	clrf	(_Temp^(0+128)+3)
  5050  051A                     l5691:	
  5051                           
  5052                           ;OverTemperature_B1.c: 150: }
  5053                           ;OverTemperature_B1.c: 151: }
  5054                           ;OverTemperature_B1.c: 152: setProductData(24, AD >> 8);
  5055  051A  0020               	movlb	0	; select bank0
  5056  051B  086E               	movf	setTemp_Main@AD+1,w
  5057  051C  00E5               	movwf	??_setTemp_Main
  5058  051D  0865               	movf	??_setTemp_Main,w
  5059  051E  00E2               	movwf	setProductData@value
  5060  051F  3018               	movlw	24
  5061  0520  3191  21BB  3184   	fcall	_setProductData
  5062                           
  5063                           ;OverTemperature_B1.c: 153: setProductData(25, AD);
  5064  0523  0020               	movlb	0	; select bank0
  5065  0524  086D               	movf	setTemp_Main@AD,w
  5066  0525  00E5               	movwf	??_setTemp_Main
  5067  0526  0865               	movf	??_setTemp_Main,w
  5068  0527  00E2               	movwf	setProductData@value
  5069  0528  3019               	movlw	25
  5070  0529  3191  21BB         	fcall	_setProductData
  5071                           
  5072                           ;OverTemperature_B1.c: 169: }
  5073                           ;OverTemperature_B1.c: 170: }
  5074                           ;OverTemperature_B1.c: 171: }
  5075                           ;OverTemperature_B1.c: 174: } else {
  5076  052B  0008               	return
  5077  052C                     l1366:	
  5078                           
  5079                           ;OverTemperature_B1.c: 175: if (myMain.PowerON == 1) {
  5080  052C  1C20               	btfss	_myMain^(0+128),0
  5081  052D  0008               	return
  5082                           
  5083                           ;OverTemperature_B1.c: 176: Temp.Enable = 1;
  5084  052E  1456               	bsf	_Temp^(0+128),0
  5085  052F  0008               	return
  5086  0530                     __end_of_setTemp_Main:	
  5087                           
  5088                           	psect	text10
  5089  13FF                     __ptext10:	
  5090 ;; *************** function _setOverTemp_ADV_Restore *****************
  5091 ;; Defined at:
  5092 ;;		line 182 in file "../src/OverTemperature_B1.c"
  5093 ;; Parameters:    Size  Location     Type
  5094 ;;		None
  5095 ;; Auto vars:     Size  Location     Type
  5096 ;;  i               2    1[BANK0 ] int 
  5097 ;; Return value:  Size  Location     Type
  5098 ;;		None               void
  5099 ;; Registers used:
  5100 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5101 ;; Tracked objects:
  5102 ;;		On entry : 0/0
  5103 ;;		On exit  : 0/0
  5104 ;;		Unchanged: 0/0
  5105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5107 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5108 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5109 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5110 ;;Total ram usage:        3 bytes
  5111 ;; Hardware stack levels used:    1
  5112 ;; Hardware stack levels required when called:    5
  5113 ;; This function calls:
  5114 ;;		Nothing
  5115 ;; This function is called by:
  5116 ;;		_setTemp_Main
  5117 ;; This function uses a non-reentrant model
  5118 ;;
  5119                           
  5120                           
  5121                           ;psect for function _setOverTemp_ADV_Restore
  5122  13FF                     _setOverTemp_ADV_Restore:	
  5123                           
  5124                           ;OverTemperature_B1.c: 183: for (int i = 0; i < 5; i++) {
  5125                           
  5126                           ;incstack = 0
  5127                           ; Regs used in _setOverTemp_ADV_Restore: [wreg+fsr1l+fsr1h+status,2+status,0]
  5128  13FF  0020               	movlb	0	; select bank0
  5129  1400  01A1               	clrf	setOverTemp_ADV_Restore@i
  5130  1401  01A2               	clrf	setOverTemp_ADV_Restore@i+1
  5131  1402                     L2:	
  5132  1402  0822               	movf	setOverTemp_ADV_Restore@i+1,w
  5133  1403  3A80               	xorlw	128
  5134  1404  00A0               	movwf	??_setOverTemp_ADV_Restore
  5135  1405  3080               	movlw	128
  5136  1406  0220               	subwf	??_setOverTemp_ADV_Restore,w
  5137  1407  1D03               	skipz
  5138  1408  2C0B               	goto	u5055
  5139  1409  3005               	movlw	5
  5140  140A  0221               	subwf	setOverTemp_ADV_Restore@i,w
  5141  140B                     u5055:	
  5142  140B  1803               	btfsc	3,0
  5143  140C  0008               	return
  5144                           
  5145                           ;OverTemperature_B1.c: 184: Temp.ADV[i] = 0;
  5146  140D  0020               	movlb	0	; select bank0
  5147  140E  3521               	lslf	setOverTemp_ADV_Restore@i,w
  5148  140F  3EDA               	addlw	(_Temp+4)& (0+255)
  5149  1410  0086               	movwf	6
  5150  1411  0187               	clrf	7
  5151  1412  3000               	movlw	0
  5152  1413  3FC0               	movwi [0]fsr1
  5153  1414  3FC1               	movwi [1]fsr1
  5154  1415  3001               	movlw	1
  5155  1416  07A1               	addwf	setOverTemp_ADV_Restore@i,f
  5156  1417  3000               	movlw	0
  5157  1418  3DA2               	addwfc	setOverTemp_ADV_Restore@i+1,f
  5158  1419  2C02               	goto	L2
  5159  141A                     __end_of_setOverTemp_ADV_Restore:	
  5160                           
  5161                           	psect	text11
  5162  10E4                     __ptext11:	
  5163 ;; *************** function _Temp_Initialization *****************
  5164 ;; Defined at:
  5165 ;;		line 8 in file "../src/OverTemperature_B1.c"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;		None
  5168 ;; Auto vars:     Size  Location     Type
  5169 ;;		None
  5170 ;; Return value:  Size  Location     Type
  5171 ;;		None               void
  5172 ;; Registers used:
  5173 ;;		status,2, status,0, pclath, cstack
  5174 ;; Tracked objects:
  5175 ;;		On entry : 0/0
  5176 ;;		On exit  : 0/0
  5177 ;;		Unchanged: 0/0
  5178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5183 ;;Total ram usage:        0 bytes
  5184 ;; Hardware stack levels used:    1
  5185 ;; Hardware stack levels required when called:    6
  5186 ;; This function calls:
  5187 ;;		_setTemp_Initialization
  5188 ;; This function is called by:
  5189 ;;		_main
  5190 ;; This function uses a non-reentrant model
  5191 ;;
  5192                           
  5193                           
  5194                           ;psect for function _Temp_Initialization
  5195  10E4                     _Temp_Initialization:	
  5196                           
  5197                           ;OverTemperature_B1.c: 10: setTemp_Initialization();
  5198                           
  5199                           ;incstack = 0
  5200                           ; Regs used in _Temp_Initialization: [status,2+status,0+pclath+cstack]
  5201  10E4  3187  27FF         	fcall	_setTemp_Initialization
  5202  10E6  0008               	return
  5203  10E7                     __end_of_Temp_Initialization:	
  5204                           
  5205                           	psect	text12
  5206  07FF                     __ptext12:	
  5207 ;; *************** function _setTemp_Initialization *****************
  5208 ;; Defined at:
  5209 ;;		line 60 in file "../src/OverTemperature_B1.c"
  5210 ;; Parameters:    Size  Location     Type
  5211 ;;		None
  5212 ;; Auto vars:     Size  Location     Type
  5213 ;;		None
  5214 ;; Return value:  Size  Location     Type
  5215 ;;		None               void
  5216 ;; Registers used:
  5217 ;;		None
  5218 ;; Tracked objects:
  5219 ;;		On entry : 0/0
  5220 ;;		On exit  : 0/0
  5221 ;;		Unchanged: 0/0
  5222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5227 ;;Total ram usage:        0 bytes
  5228 ;; Hardware stack levels used:    1
  5229 ;; Hardware stack levels required when called:    5
  5230 ;; This function calls:
  5231 ;;		Nothing
  5232 ;; This function is called by:
  5233 ;;		_Temp_Initialization
  5234 ;; This function uses a non-reentrant model
  5235 ;;
  5236                           
  5237                           
  5238                           ;psect for function _setTemp_Initialization
  5239  07FF                     _setTemp_Initialization:	
  5240                           
  5241                           ;incstack = 0
  5242                           ; Regs used in _setTemp_Initialization: []
  5243  07FF  0008               	return
  5244  0800                     __end_of_setTemp_Initialization:	
  5245                           
  5246                           	psect	text13
  5247  112A                     __ptext13:	
  5248 ;; *************** function _Switch_Main *****************
  5249 ;; Defined at:
  5250 ;;		line 76 in file "../src/Switch_B1.c"
  5251 ;; Parameters:    Size  Location     Type
  5252 ;;		None
  5253 ;; Auto vars:     Size  Location     Type
  5254 ;;		None
  5255 ;; Return value:  Size  Location     Type
  5256 ;;		None               void
  5257 ;; Registers used:
  5258 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5268 ;;Total ram usage:        0 bytes
  5269 ;; Hardware stack levels used:    1
  5270 ;; Hardware stack levels required when called:    9
  5271 ;; This function calls:
  5272 ;;		_TouchPower
  5273 ;;		_setSw_Main
  5274 ;; This function is called by:
  5275 ;;		_main
  5276 ;; This function uses a non-reentrant model
  5277 ;;
  5278                           
  5279                           
  5280                           ;psect for function _Switch_Main
  5281  112A                     _Switch_Main:	
  5282                           
  5283                           ;Switch_B1.c: 79: setSw_Main(1);
  5284                           
  5285                           ;incstack = 0
  5286                           ; Regs used in _Switch_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5287  112A  3001               	movlw	1
  5288  112B  3181  21FB  3191   	fcall	_setSw_Main
  5289                           
  5290                           ;Switch_B1.c: 91: TouchPower();
  5291  112E  3193  2341         	fcall	_TouchPower
  5292  1130  0008               	return
  5293  1131                     __end_of_Switch_Main:	
  5294                           
  5295                           	psect	text14
  5296  01FB                     __ptext14:	
  5297 ;; *************** function _setSw_Main *****************
  5298 ;; Defined at:
  5299 ;;		line 117 in file "../src/Switch_B1.c"
  5300 ;; Parameters:    Size  Location     Type
  5301 ;;  sw              1    wreg     unsigned char 
  5302 ;; Auto vars:     Size  Location     Type
  5303 ;;  sw              1   19[BANK0 ] unsigned char 
  5304 ;; Return value:  Size  Location     Type
  5305 ;;		None               void
  5306 ;; Registers used:
  5307 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5308 ;; Tracked objects:
  5309 ;;		On entry : 0/0
  5310 ;;		On exit  : 0/0
  5311 ;;		Unchanged: 0/0
  5312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5314 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5315 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5316 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5317 ;;Total ram usage:        3 bytes
  5318 ;; Hardware stack levels used:    1
  5319 ;; Hardware stack levels required when called:    8
  5320 ;; This function calls:
  5321 ;;		_SwPointSelect
  5322 ;;		_getMain_All_Error_Status
  5323 ;;		_getSw_KeyStatus
  5324 ;;		_setDimmerLights_DimmingOn
  5325 ;;		_setDimmerLights_SwOff
  5326 ;;		_setDimmerLights_SwOn
  5327 ;; This function is called by:
  5328 ;;		_Switch_Main
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332                           
  5333                           ;psect for function _setSw_Main
  5334  01FB                     _setSw_Main:	
  5335                           
  5336                           ;incstack = 0
  5337                           ; Regs used in _setSw_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5338                           ;setSw_Main@sw stored from wreg
  5339  01FB  0020               	movlb	0	; select bank0
  5340  01FC  00B3               	movwf	setSw_Main@sw
  5341                           
  5342                           ;Switch_B1.c: 118: SwPointSelect(sw);
  5343  01FD  0833               	movf	setSw_Main@sw,w
  5344  01FE  3192  220F  3181   	fcall	_SwPointSelect
  5345                           
  5346                           ;Switch_B1.c: 119: if (Sw->Enable == 1) {
  5347  0201  0021               	movlb	1	; select bank1
  5348  0202  0854               	movf	_Sw^(0+128),w
  5349  0203  0086               	movwf	6
  5350  0204  3001               	movlw	1	; select bank2/3
  5351  0205  0087               	movwf	7
  5352  0206  1C01               	btfss	1,0
  5353  0207  2B5F               	goto	l1725
  5354                           
  5355                           ;Switch_B1.c: 121: if (getMain_All_Error_Status(0) == 0) {
  5356  0208  3000               	movlw	0
  5357  0209  3195  25E6  3181   	fcall	_getMain_All_Error_Status
  5358  020C  3800               	iorlw	0
  5359  020D  1D03               	skipz
  5360  020E  2A2D               	goto	l5723
  5361                           
  5362                           ;Switch_B1.c: 122: Sw->Detect = 0;
  5363  020F  0021               	movlb	1	; select bank1
  5364  0210  0A54               	incf	_Sw^(0+128),w
  5365  0211  0086               	movwf	6
  5366  0212  3001               	movlw	1	; select bank2/3
  5367  0213  0087               	movwf	7
  5368  0214  1081               	bcf	1,1
  5369                           
  5370                           ;Switch_B1.c: 123: Sw->Touch = getSw_KeyStatus(sw) == 1 ? 1 : 0;
  5371  0215  0020               	movlb	0	; select bank0
  5372  0216  0833               	movf	setSw_Main@sw,w
  5373  0217  3192  229B  3181   	fcall	_getSw_KeyStatus
  5374  021A  3A01               	xorlw	1
  5375  021B  3000               	movlw	0
  5376  021C  1903               	skipnz
  5377  021D  3001               	movlw	1
  5378  021E  0020               	movlb	0	; select bank0
  5379  021F  00B1               	movwf	??_setSw_Main
  5380  0220  0021               	movlb	1	; select bank1
  5381  0221  0854               	movf	_Sw^(0+128),w
  5382  0222  0086               	movwf	6
  5383  0223  3001               	movlw	1	; select bank2/3
  5384  0224  0087               	movwf	7
  5385  0225  0020               	movlb	0	; select bank0
  5386  0226  0DB1               	rlf	??_setSw_Main,f
  5387  0227  0801               	movf	1,w
  5388  0228  0631               	xorwf	??_setSw_Main,w
  5389  0229  39FD               	andlw	-3
  5390  022A  0631               	xorwf	??_setSw_Main,w
  5391  022B  0081               	movwf	1
  5392                           
  5393                           ;Switch_B1.c: 124: } else {
  5394  022C  2A43               	goto	l1727
  5395  022D                     l5723:	
  5396                           
  5397                           ;Switch_B1.c: 125: if (Sw->Detect == 0) {
  5398  022D  0021               	movlb	1	; select bank1
  5399  022E  0A54               	incf	_Sw^(0+128),w
  5400  022F  0086               	movwf	6
  5401  0230  3001               	movlw	1	; select bank2/3
  5402  0231  0087               	movwf	7
  5403  0232  1881               	btfsc	1,1
  5404  0233  2A43               	goto	l1727
  5405                           
  5406                           ;Switch_B1.c: 126: Sw->Detect = 1;
  5407  0234  0A54               	incf	_Sw^(0+128),w
  5408  0235  0086               	movwf	6
  5409  0236  3001               	movlw	1	; select bank2/3
  5410  0237  0087               	movwf	7
  5411  0238  1481               	bsf	1,1
  5412                           
  5413                           ;Switch_B1.c: 128: Sw->Touch = 0;
  5414  0239  0854               	movf	_Sw^(0+128),w
  5415  023A  0086               	movwf	6
  5416  023B  3001               	movlw	1	; select bank2/3
  5417  023C  0087               	movwf	7
  5418  023D  1081               	bcf	1,1
  5419                           
  5420                           ;Switch_B1.c: 129: Sw->Debounce = 1;
  5421  023E  0854               	movf	_Sw^(0+128),w
  5422  023F  0086               	movwf	6
  5423  0240  3001               	movlw	1	; select bank2/3
  5424  0241  0087               	movwf	7
  5425  0242  1501               	bsf	1,2
  5426  0243                     l1727:	
  5427                           
  5428                           ;Switch_B1.c: 130: }
  5429                           ;Switch_B1.c: 131: }
  5430                           ;Switch_B1.c: 133: if (Sw->Touch == 1) {
  5431  0243  0021               	movlb	1	; select bank1
  5432  0244  0854               	movf	_Sw^(0+128),w
  5433  0245  0086               	movwf	6
  5434  0246  3001               	movlw	1	; select bank2/3
  5435  0247  0087               	movwf	7
  5436  0248  1C81               	btfss	1,1
  5437  0249  2B0C               	goto	l5765
  5438                           
  5439                           ;Switch_B1.c: 134: if (Sw->Debounce == 0) {
  5440  024A  0854               	movf	_Sw^(0+128),w
  5441  024B  0086               	movwf	6
  5442  024C  3001               	movlw	1	; select bank2/3
  5443  024D  0087               	movwf	7
  5444  024E  1901               	btfsc	1,2
  5445  024F  2A76               	goto	l5739
  5446                           
  5447                           ;Switch_B1.c: 135: Sw->DebounceTime++;
  5448  0250  3001               	movlw	1
  5449  0251  0020               	movlb	0	; select bank0
  5450  0252  00B1               	movwf	??_setSw_Main
  5451  0253  0021               	movlb	1	; select bank1
  5452  0254  0854               	movf	_Sw^(0+128),w
  5453  0255  3E02               	addlw	2
  5454  0256  0086               	movwf	6
  5455  0257  3001               	movlw	1	; select bank2/3
  5456  0258  0087               	movwf	7
  5457  0259  0020               	movlb	0	; select bank0
  5458  025A  0831               	movf	??_setSw_Main,w
  5459  025B  0781               	addwf	1,f
  5460                           
  5461                           ;Switch_B1.c: 136: if (Sw->DebounceTime >= (100 / 20)) {
  5462  025C  0021               	movlb	1	; select bank1
  5463  025D  0854               	movf	_Sw^(0+128),w
  5464  025E  3E02               	addlw	2
  5465  025F  0086               	movwf	6
  5466  0260  3001               	movlw	1	; select bank2/3
  5467  0261  0087               	movwf	7
  5468  0262  3005               	movlw	5
  5469  0263  0201               	subwf	1,w
  5470  0264  1C03               	skipc
  5471  0265  0008               	return
  5472                           
  5473                           ;Switch_B1.c: 137: Sw->DebounceTime = 0;
  5474  0266  0854               	movf	_Sw^(0+128),w
  5475  0267  3E02               	addlw	2
  5476  0268  0086               	movwf	6
  5477  0269  3001               	movlw	1	; select bank2/3
  5478  026A  0087               	movwf	7
  5479  026B  0181               	clrf	1
  5480                           
  5481                           ;Switch_B1.c: 138: Sw->Debounce = 1;
  5482  026C  0854               	movf	_Sw^(0+128),w
  5483  026D  0086               	movwf	6
  5484  026E  3001               	movlw	1	; select bank2/3
  5485  026F  0087               	movwf	7
  5486  0270  1501               	bsf	1,2
  5487                           
  5488                           ;Switch_B1.c: 144: setDimmerLights_SwOn(sw);
  5489  0271  0020               	movlb	0	; select bank0
  5490  0272  0833               	movf	setSw_Main@sw,w
  5491  0273  3188  208A         	fcall	_setDimmerLights_SwOn
  5492                           
  5493                           ;Switch_B1.c: 147: }
  5494                           ;Switch_B1.c: 148: } else {
  5495  0275  0008               	return
  5496  0276                     l5739:	
  5497                           
  5498                           ;Switch_B1.c: 149: if (Sw->Hold1 == 0) {
  5499  0276  0021               	movlb	1	; select bank1
  5500  0277  0854               	movf	_Sw^(0+128),w
  5501  0278  0086               	movwf	6
  5502  0279  3001               	movlw	1	; select bank2/3
  5503  027A  0087               	movwf	7
  5504  027B  1981               	btfsc	1,3
  5505  027C  2AAB               	goto	l5749
  5506                           
  5507                           ;Switch_B1.c: 150: Sw->Hold1Time++;
  5508  027D  0854               	movf	_Sw^(0+128),w
  5509  027E  3E03               	addlw	3
  5510  027F  0086               	movwf	6
  5511  0280  3001               	movlw	1	; select bank2/3
  5512  0281  0087               	movwf	7
  5513  0282  3001               	movlw	1
  5514  0283  0781               	addwf	1,f
  5515  0284  3141               	addfsr 1,1
  5516  0285  1803               	skipnc
  5517  0286  0A81               	incf	1,f
  5518                           
  5519                           ;Switch_B1.c: 151: if (Sw->Hold1Time >= (1500 / 20)) {
  5520  0287  0854               	movf	_Sw^(0+128),w
  5521  0288  3E03               	addlw	3
  5522  0289  0086               	movwf	6
  5523  028A  3001               	movlw	1	; select bank2/3
  5524  028B  0087               	movwf	7
  5525  028C  3F40               	moviw [0]fsr1
  5526  028D  0020               	movlb	0	; select bank0
  5527  028E  00B1               	movwf	??_setSw_Main
  5528  028F  3F41               	moviw [1]fsr1
  5529  0290  00B2               	movwf	??_setSw_Main+1
  5530  0291  3000               	movlw	0
  5531  0292  0232               	subwf	??_setSw_Main+1,w
  5532  0293  304B               	movlw	75
  5533  0294  1903               	skipnz
  5534  0295  0231               	subwf	??_setSw_Main,w
  5535  0296  1C03               	skipc
  5536  0297  0008               	return
  5537                           
  5538                           ;Switch_B1.c: 152: Sw->Hold1Time = 0;
  5539  0298  0021               	movlb	1	; select bank1
  5540  0299  0854               	movf	_Sw^(0+128),w
  5541  029A  3E03               	addlw	3
  5542  029B  0086               	movwf	6
  5543  029C  3001               	movlw	1	; select bank2/3
  5544  029D  0087               	movwf	7
  5545  029E  3000               	movlw	0
  5546  029F  3FC0               	movwi [0]fsr1
  5547  02A0  3FC1               	movwi [1]fsr1
  5548                           
  5549                           ;Switch_B1.c: 153: Sw->Hold1 = 1;
  5550  02A1  0854               	movf	_Sw^(0+128),w
  5551  02A2  0086               	movwf	6
  5552  02A3  3001               	movlw	1	; select bank2/3
  5553  02A4  0087               	movwf	7
  5554  02A5  1581               	bsf	1,3
  5555                           
  5556                           ;Switch_B1.c: 159: setDimmerLights_DimmingOn(sw);
  5557  02A6  0020               	movlb	0	; select bank0
  5558  02A7  0833               	movf	setSw_Main@sw,w
  5559  02A8  3195  255E         	fcall	_setDimmerLights_DimmingOn
  5560                           
  5561                           ;Switch_B1.c: 162: }
  5562                           ;Switch_B1.c: 163: } else {
  5563  02AA  0008               	return
  5564  02AB                     l5749:	
  5565                           
  5566                           ;Switch_B1.c: 165: if (Sw->Hold2 == 0) {
  5567  02AB  0021               	movlb	1	; select bank1
  5568  02AC  0854               	movf	_Sw^(0+128),w
  5569  02AD  0086               	movwf	6
  5570  02AE  3001               	movlw	1	; select bank2/3
  5571  02AF  0087               	movwf	7
  5572  02B0  1A01               	btfsc	1,4
  5573  02B1  2ADC               	goto	l5757
  5574                           
  5575                           ;Switch_B1.c: 166: Sw->Hold2Time++;
  5576  02B2  0854               	movf	_Sw^(0+128),w
  5577  02B3  3E05               	addlw	5
  5578  02B4  0086               	movwf	6
  5579  02B5  3001               	movlw	1	; select bank2/3
  5580  02B6  0087               	movwf	7
  5581  02B7  3001               	movlw	1
  5582  02B8  0781               	addwf	1,f
  5583  02B9  3141               	addfsr 1,1
  5584  02BA  1803               	skipnc
  5585  02BB  0A81               	incf	1,f
  5586                           
  5587                           ;Switch_B1.c: 167: if (Sw->Hold2Time >= (1500 / 20)) {
  5588  02BC  0854               	movf	_Sw^(0+128),w
  5589  02BD  3E05               	addlw	5
  5590  02BE  0086               	movwf	6
  5591  02BF  3001               	movlw	1	; select bank2/3
  5592  02C0  0087               	movwf	7
  5593  02C1  3F40               	moviw [0]fsr1
  5594  02C2  0020               	movlb	0	; select bank0
  5595  02C3  00B1               	movwf	??_setSw_Main
  5596  02C4  3F41               	moviw [1]fsr1
  5597  02C5  00B2               	movwf	??_setSw_Main+1
  5598  02C6  3000               	movlw	0
  5599  02C7  0232               	subwf	??_setSw_Main+1,w
  5600  02C8  304B               	movlw	75
  5601  02C9  1903               	skipnz
  5602  02CA  0231               	subwf	??_setSw_Main,w
  5603  02CB  1C03               	skipc
  5604  02CC  0008               	return
  5605                           
  5606                           ;Switch_B1.c: 168: Sw->Hold2Time = 0;
  5607  02CD  0021               	movlb	1	; select bank1
  5608  02CE  0854               	movf	_Sw^(0+128),w
  5609  02CF  3E05               	addlw	5
  5610  02D0  0086               	movwf	6
  5611  02D1  3001               	movlw	1	; select bank2/3
  5612  02D2  0087               	movwf	7
  5613  02D3  3000               	movlw	0
  5614  02D4  3FC0               	movwi [0]fsr1
  5615  02D5  3FC1               	movwi [1]fsr1
  5616                           
  5617                           ;Switch_B1.c: 169: Sw->Hold2 = 1;
  5618  02D6  0854               	movf	_Sw^(0+128),w
  5619  02D7  0086               	movwf	6
  5620  02D8  3001               	movlw	1	; select bank2/3
  5621  02D9  0087               	movwf	7
  5622  02DA  1601               	bsf	1,4
  5623                           
  5624                           ;Switch_B1.c: 179: }
  5625                           ;Switch_B1.c: 180: } else {
  5626  02DB  0008               	return
  5627  02DC                     l5757:	
  5628                           
  5629                           ;Switch_B1.c: 181: if (Sw->Hold3 == 0) {
  5630  02DC  0854               	movf	_Sw^(0+128),w
  5631  02DD  0086               	movwf	6
  5632  02DE  3001               	movlw	1	; select bank2/3
  5633  02DF  0087               	movwf	7
  5634  02E0  1A81               	btfsc	1,5
  5635  02E1  0008               	return
  5636                           
  5637                           ;Switch_B1.c: 182: Sw->Hold3Time++;
  5638  02E2  0854               	movf	_Sw^(0+128),w
  5639  02E3  3E07               	addlw	7
  5640  02E4  0086               	movwf	6
  5641  02E5  3001               	movlw	1	; select bank2/3
  5642  02E6  0087               	movwf	7
  5643  02E7  3001               	movlw	1
  5644  02E8  0781               	addwf	1,f
  5645  02E9  3141               	addfsr 1,1
  5646  02EA  1803               	skipnc
  5647  02EB  0A81               	incf	1,f
  5648                           
  5649                           ;Switch_B1.c: 183: if (Sw->Hold3Time >= (3000 / 20)) {
  5650  02EC  0854               	movf	_Sw^(0+128),w
  5651  02ED  3E07               	addlw	7
  5652  02EE  0086               	movwf	6
  5653  02EF  3001               	movlw	1	; select bank2/3
  5654  02F0  0087               	movwf	7
  5655  02F1  3F40               	moviw [0]fsr1
  5656  02F2  0020               	movlb	0	; select bank0
  5657  02F3  00B1               	movwf	??_setSw_Main
  5658  02F4  3F41               	moviw [1]fsr1
  5659  02F5  00B2               	movwf	??_setSw_Main+1
  5660  02F6  3000               	movlw	0
  5661  02F7  0232               	subwf	??_setSw_Main+1,w
  5662  02F8  3096               	movlw	150
  5663  02F9  1903               	skipnz
  5664  02FA  0231               	subwf	??_setSw_Main,w
  5665  02FB  1C03               	skipc
  5666  02FC  0008               	return
  5667                           
  5668                           ;Switch_B1.c: 184: Sw->Hold3Time = 0;
  5669  02FD  0021               	movlb	1	; select bank1
  5670  02FE  0854               	movf	_Sw^(0+128),w
  5671  02FF  3E07               	addlw	7
  5672  0300  0086               	movwf	6
  5673  0301  3001               	movlw	1	; select bank2/3
  5674  0302  0087               	movwf	7
  5675  0303  3000               	movlw	0
  5676  0304  3FC0               	movwi [0]fsr1
  5677  0305  3FC1               	movwi [1]fsr1
  5678                           
  5679                           ;Switch_B1.c: 185: Sw->Hold3 = 1;
  5680  0306  0854               	movf	_Sw^(0+128),w
  5681  0307  0086               	movwf	6
  5682  0308  3001               	movlw	1	; select bank2/3
  5683  0309  0087               	movwf	7
  5684  030A  1681               	bsf	1,5
  5685                           
  5686                           ;Switch_B1.c: 191: }
  5687                           ;Switch_B1.c: 192: }
  5688                           ;Switch_B1.c: 193: }
  5689                           ;Switch_B1.c: 195: }
  5690                           ;Switch_B1.c: 196: }
  5691                           ;Switch_B1.c: 197: } else {
  5692  030B  0008               	return
  5693  030C                     l5765:	
  5694                           
  5695                           ;Switch_B1.c: 198: if (Sw->Debounce == 1) {
  5696  030C  0854               	movf	_Sw^(0+128),w
  5697  030D  0086               	movwf	6
  5698  030E  3001               	movlw	1	; select bank2/3
  5699  030F  0087               	movwf	7
  5700  0310  1D01               	btfss	1,2
  5701  0311  0008               	return
  5702                           
  5703                           ;Switch_B1.c: 199: Sw->DebounceTime++;
  5704  0312  3001               	movlw	1
  5705  0313  0020               	movlb	0	; select bank0
  5706  0314  00B1               	movwf	??_setSw_Main
  5707  0315  0021               	movlb	1	; select bank1
  5708  0316  0854               	movf	_Sw^(0+128),w
  5709  0317  3E02               	addlw	2
  5710  0318  0086               	movwf	6
  5711  0319  3001               	movlw	1	; select bank2/3
  5712  031A  0087               	movwf	7
  5713  031B  0020               	movlb	0	; select bank0
  5714  031C  0831               	movf	??_setSw_Main,w
  5715  031D  0781               	addwf	1,f
  5716                           
  5717                           ;Switch_B1.c: 200: if (Sw->DebounceTime >= (100 / 20)) {
  5718  031E  0021               	movlb	1	; select bank1
  5719  031F  0854               	movf	_Sw^(0+128),w
  5720  0320  3E02               	addlw	2
  5721  0321  0086               	movwf	6
  5722  0322  3001               	movlw	1	; select bank2/3
  5723  0323  0087               	movwf	7
  5724  0324  3005               	movlw	5
  5725  0325  0201               	subwf	1,w
  5726  0326  1C03               	skipc
  5727  0327  0008               	return
  5728                           
  5729                           ;Switch_B1.c: 201: Sw->DebounceTime = 0;
  5730  0328  0854               	movf	_Sw^(0+128),w
  5731  0329  3E02               	addlw	2
  5732  032A  0086               	movwf	6
  5733  032B  3001               	movlw	1	; select bank2/3
  5734  032C  0087               	movwf	7
  5735  032D  0181               	clrf	1
  5736                           
  5737                           ;Switch_B1.c: 202: Sw->Debounce = 0;
  5738  032E  0854               	movf	_Sw^(0+128),w
  5739  032F  0086               	movwf	6
  5740  0330  3001               	movlw	1	; select bank2/3
  5741  0331  0087               	movwf	7
  5742  0332  1101               	bcf	1,2
  5743                           
  5744                           ;Switch_B1.c: 203: Sw->Hold1Time = 0;
  5745  0333  0854               	movf	_Sw^(0+128),w
  5746  0334  3E03               	addlw	3
  5747  0335  0086               	movwf	6
  5748  0336  3001               	movlw	1	; select bank2/3
  5749  0337  0087               	movwf	7
  5750  0338  3000               	movlw	0
  5751  0339  3FC0               	movwi [0]fsr1
  5752  033A  3FC1               	movwi [1]fsr1
  5753                           
  5754                           ;Switch_B1.c: 204: Sw->Hold1 = 0;
  5755  033B  0854               	movf	_Sw^(0+128),w
  5756  033C  0086               	movwf	6
  5757  033D  3001               	movlw	1	; select bank2/3
  5758  033E  0087               	movwf	7
  5759  033F  1181               	bcf	1,3
  5760                           
  5761                           ;Switch_B1.c: 206: Sw->Hold2 = 0;
  5762  0340  0854               	movf	_Sw^(0+128),w
  5763  0341  0086               	movwf	6
  5764  0342  3001               	movlw	1	; select bank2/3
  5765  0343  0087               	movwf	7
  5766  0344  1201               	bcf	1,4
  5767                           
  5768                           ;Switch_B1.c: 207: Sw->Hold3 = 0;
  5769  0345  0854               	movf	_Sw^(0+128),w
  5770  0346  0086               	movwf	6
  5771  0347  3001               	movlw	1	; select bank2/3
  5772  0348  0087               	movwf	7
  5773  0349  1281               	bcf	1,5
  5774                           
  5775                           ;Switch_B1.c: 208: Sw->Hold2Time = 0;
  5776  034A  0854               	movf	_Sw^(0+128),w
  5777  034B  3E05               	addlw	5
  5778  034C  0086               	movwf	6
  5779  034D  3001               	movlw	1	; select bank2/3
  5780  034E  0087               	movwf	7
  5781  034F  3000               	movlw	0
  5782  0350  3FC0               	movwi [0]fsr1
  5783  0351  3FC1               	movwi [1]fsr1
  5784                           
  5785                           ;Switch_B1.c: 209: Sw->Hold3Time = 0;
  5786  0352  0854               	movf	_Sw^(0+128),w
  5787  0353  3E07               	addlw	7
  5788  0354  0086               	movwf	6
  5789  0355  3001               	movlw	1	; select bank2/3
  5790  0356  0087               	movwf	7
  5791  0357  3000               	movlw	0
  5792  0358  3FC0               	movwi [0]fsr1
  5793  0359  3FC1               	movwi [1]fsr1
  5794                           
  5795                           ;Switch_B1.c: 216: setDimmerLights_SwOff(sw);
  5796  035A  0020               	movlb	0	; select bank0
  5797  035B  0833               	movf	setSw_Main@sw,w
  5798  035C  3196  26BE         	fcall	_setDimmerLights_SwOff
  5799                           
  5800                           ;Switch_B1.c: 222: }
  5801                           ;Switch_B1.c: 223: }
  5802                           ;Switch_B1.c: 224: }
  5803                           ;Switch_B1.c: 225: } else {
  5804  035E  0008               	return
  5805  035F                     l1725:	
  5806                           
  5807                           ;Switch_B1.c: 226: if (myMain.PowerON == 1) {
  5808  035F  1C20               	btfss	_myMain^(0+128),0
  5809  0360  0008               	return
  5810                           
  5811                           ;Switch_B1.c: 227: Sw->Enable = 1;
  5812  0361  0854               	movf	_Sw^(0+128),w
  5813  0362  0086               	movwf	6
  5814  0363  3001               	movlw	1	; select bank2/3
  5815  0364  0087               	movwf	7
  5816  0365  1401               	bsf	1,0
  5817  0366  0008               	return
  5818  0367                     __end_of_setSw_Main:	
  5819                           
  5820                           	psect	text15
  5821  155E                     __ptext15:	
  5822 ;; *************** function _setDimmerLights_DimmingOn *****************
  5823 ;; Defined at:
  5824 ;;		line 816 in file "../src/Dimmer_B1.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;  sw              1    wreg     unsigned char 
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;  sw              1    2[BANK0 ] unsigned char 
  5829 ;; Return value:  Size  Location     Type
  5830 ;;		None               void
  5831 ;; Registers used:
  5832 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/0
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5839 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5841 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5842 ;;Total ram usage:        1 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:    6
  5845 ;; This function calls:
  5846 ;;		_DimmerLights_SelectPointer
  5847 ;; This function is called by:
  5848 ;;		_setSw_Main
  5849 ;; This function uses a non-reentrant model
  5850 ;;
  5851                           
  5852                           
  5853                           ;psect for function _setDimmerLights_DimmingOn
  5854  155E                     _setDimmerLights_DimmingOn:	
  5855                           
  5856                           ;incstack = 0
  5857                           ; Regs used in _setDimmerLights_DimmingOn: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  5858                           ;setDimmerLights_DimmingOn@sw stored from wreg
  5859  155E  0020               	movlb	0	; select bank0
  5860  155F  00A2               	movwf	setDimmerLights_DimmingOn@sw
  5861                           
  5862                           ;Dimmer_B1.c: 822: DimmerLights_SelectPointer(sw);
  5863  1560  0822               	movf	setDimmerLights_DimmingOn@sw,w
  5864  1561  3191  2178  3195   	fcall	_DimmerLights_SelectPointer
  5865                           
  5866                           ;Dimmer_B1.c: 823: if (DimmerLights->Trigger == 0) {
  5867  1564  087D               	movf	_DimmerLights,w
  5868  1565  0086               	movwf	6
  5869  1566  3001               	movlw	1	; select bank2/3
  5870  1567  0087               	movwf	7
  5871  1568  1881               	btfsc	1,1
  5872  1569  0008               	return
  5873                           
  5874                           ;Dimmer_B1.c: 824: if (DimmerLights->SwFlag == 1) {
  5875  156A  087D               	movf	_DimmerLights,w
  5876  156B  0086               	movwf	6
  5877  156C  3001               	movlw	1	; select bank2/3
  5878  156D  0087               	movwf	7
  5879  156E  1C01               	btfss	1,0
  5880  156F  0008               	return
  5881                           
  5882                           ;Dimmer_B1.c: 825: DimmerLights->Status = 1;
  5883  1570  0A7D               	incf	_DimmerLights,w
  5884  1571  0086               	movwf	6
  5885  1572  3001               	movlw	1	; select bank2/3
  5886  1573  0087               	movwf	7
  5887  1574  1401               	bsf	1,0
  5888                           
  5889                           ;Dimmer_B1.c: 827: DimmerLights->DimmingSwFlag = 1;
  5890  1575  087D               	movf	_DimmerLights,w
  5891  1576  0086               	movwf	6
  5892  1577  3001               	movlw	1	; select bank2/3
  5893  1578  0087               	movwf	7
  5894  1579  1581               	bsf	1,3
  5895                           
  5896                           ;Dimmer_B1.c: 828: DimmerLights->DimmingTrigger = 1;
  5897  157A  087D               	movf	_DimmerLights,w
  5898  157B  0086               	movwf	6
  5899  157C  3001               	movlw	1	; select bank2/3
  5900  157D  0087               	movwf	7
  5901  157E  1601               	bsf	1,4
  5902                           
  5903                           ;Dimmer_B1.c: 829: DimmerLights->DimmingSwitch = 1;
  5904  157F  087D               	movf	_DimmerLights,w
  5905  1580  0086               	movwf	6
  5906  1581  3001               	movlw	1	; select bank2/3
  5907  1582  0087               	movwf	7
  5908  1583  1681               	bsf	1,5
  5909  1584  0008               	return
  5910  1585                     __end_of_setDimmerLights_DimmingOn:	
  5911                           
  5912                           	psect	text16
  5913  129B                     __ptext16:	
  5914 ;; *************** function _getSw_KeyStatus *****************
  5915 ;; Defined at:
  5916 ;;		line 238 in file "../src/Switch_B1.c"
  5917 ;; Parameters:    Size  Location     Type
  5918 ;;  sw              1    wreg     unsigned char 
  5919 ;; Auto vars:     Size  Location     Type
  5920 ;;  sw              1    0[COMMON] unsigned char 
  5921 ;;  status          1    1[BANK0 ] unsigned char 
  5922 ;; Return value:  Size  Location     Type
  5923 ;;                  1    wreg      unsigned char 
  5924 ;; Registers used:
  5925 ;;		wreg, status,2
  5926 ;; Tracked objects:
  5927 ;;		On entry : 0/0
  5928 ;;		On exit  : 0/0
  5929 ;;		Unchanged: 0/0
  5930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5932 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5933 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5934 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5935 ;;Total ram usage:        3 bytes
  5936 ;; Hardware stack levels used:    1
  5937 ;; Hardware stack levels required when called:    5
  5938 ;; This function calls:
  5939 ;;		Nothing
  5940 ;; This function is called by:
  5941 ;;		_setSw_Main
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           
  5946                           ;psect for function _getSw_KeyStatus
  5947  129B                     _getSw_KeyStatus:	
  5948                           
  5949                           ;Switch_B1.c: 239: char status = 0;
  5950                           
  5951                           ;incstack = 0
  5952                           ; Regs used in _getSw_KeyStatus: [wreg+status,2]
  5953  129B  0020               	movlb	0	; select bank0
  5954  129C  01A1               	clrf	getSw_KeyStatus@status
  5955                           
  5956                           ;Switch_B1.c: 272: status = RA6 == 1 || RA4 == 1 || RA0 == 1 || RA7 == 1 ? 1 : 0;
  5957  129D  01A2               	clrf	_getSw_KeyStatus$5597
  5958  129E  0AA2               	incf	_getSw_KeyStatus$5597,f
  5959  129F  1F0C               	btfss	12,6	;volatile
  5960  12A0  1A0C               	btfsc	12,4	;volatile
  5961  12A1  2AA6               	goto	l5211
  5962  12A2  1C0C               	btfss	12,0	;volatile
  5963  12A3  1B8C               	btfsc	12,7	;volatile
  5964  12A4  2AA6               	goto	l5211
  5965  12A5  01A2               	clrf	_getSw_KeyStatus$5597
  5966  12A6                     l5211:	
  5967  12A6  0822               	movf	_getSw_KeyStatus$5597,w
  5968  12A7  00A0               	movwf	??_getSw_KeyStatus
  5969  12A8  0820               	movf	??_getSw_KeyStatus,w
  5970  12A9  00A1               	movwf	getSw_KeyStatus@status
  5971                           
  5972                           ;Switch_B1.c: 276: return status;
  5973  12AA  0821               	movf	getSw_KeyStatus@status,w
  5974  12AB  0008               	return
  5975  12AC                     __end_of_getSw_KeyStatus:	
  5976                           
  5977                           	psect	text17
  5978  120F                     __ptext17:	
  5979 ;; *************** function _SwPointSelect *****************
  5980 ;; Defined at:
  5981 ;;		line 25 in file "../src/Switch_B1.c"
  5982 ;; Parameters:    Size  Location     Type
  5983 ;;  sw              1    wreg     unsigned char 
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;  sw              1    1[BANK0 ] unsigned char 
  5986 ;; Return value:  Size  Location     Type
  5987 ;;		None               void
  5988 ;; Registers used:
  5989 ;;		wreg
  5990 ;; Tracked objects:
  5991 ;;		On entry : 0/0
  5992 ;;		On exit  : 0/0
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5996 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5997 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5998 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5999 ;;Total ram usage:        2 bytes
  6000 ;; Hardware stack levels used:    1
  6001 ;; Hardware stack levels required when called:    5
  6002 ;; This function calls:
  6003 ;;		Nothing
  6004 ;; This function is called by:
  6005 ;;		_setSw_Main
  6006 ;; This function uses a non-reentrant model
  6007 ;;
  6008                           
  6009                           
  6010                           ;psect for function _SwPointSelect
  6011  120F                     _SwPointSelect:	
  6012                           
  6013                           ;incstack = 0
  6014                           ; Regs used in _SwPointSelect: [wreg]
  6015                           ;SwPointSelect@sw stored from wreg
  6016  120F  0020               	movlb	0	; select bank0
  6017  1210  00A1               	movwf	SwPointSelect@sw
  6018                           
  6019                           ;Switch_B1.c: 28: if (sw == 1) {
  6020  1211  0821               	movf	SwPointSelect@sw,w
  6021  1212  3A01               	xorlw	1
  6022  1213  1D03               	skipz
  6023  1214  0008               	return
  6024                           
  6025                           ;Switch_B1.c: 29: Sw = &Sw1;
  6026  1215  3051               	movlw	_Sw1& (0+255)
  6027  1216  00A0               	movwf	??_SwPointSelect
  6028  1217  0820               	movf	??_SwPointSelect,w
  6029  1218  0021               	movlb	1	; select bank1
  6030  1219  00D4               	movwf	_Sw^(0+128)
  6031  121A  0008               	return
  6032  121B                     __end_of_SwPointSelect:	
  6033                           
  6034                           	psect	text18
  6035  1341                     __ptext18:	
  6036 ;; *************** function _TouchPower *****************
  6037 ;; Defined at:
  6038 ;;		line 10 in file "../src/Switch_B1.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;		None
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;		None
  6043 ;; Return value:  Size  Location     Type
  6044 ;;		None               void
  6045 ;; Registers used:
  6046 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6047 ;; Tracked objects:
  6048 ;;		On entry : 0/0
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6056 ;;Total ram usage:        0 bytes
  6057 ;; Hardware stack levels used:    1
  6058 ;; Hardware stack levels required when called:    6
  6059 ;; This function calls:
  6060 ;;		_Timeout_Counter
  6061 ;;		_set_TimeoutCleared
  6062 ;; This function is called by:
  6063 ;;		_Switch_Main
  6064 ;; This function uses a non-reentrant model
  6065 ;;
  6066                           
  6067                           
  6068                           ;psect for function _TouchPower
  6069  1341                     _TouchPower:	
  6070                           
  6071                           ;Switch_B1.c: 11: if (myMain.PowerON == 1) {
  6072                           
  6073                           ;incstack = 0
  6074                           ; Regs used in _TouchPower: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6075  1341  0021               	movlb	1	; select bank1
  6076  1342  1C20               	btfss	_myMain^(0+128),0
  6077  1343  0008               	return
  6078                           
  6079                           ;Switch_B1.c: 12: if (RB0 == 0) {
  6080  1344  0020               	movlb	0	; select bank0
  6081  1345  180D               	btfsc	13,0	;volatile
  6082  1346  0008               	return
  6083  1347  2B4D               	goto	l5705
  6084  1348                     l1705:	
  6085                           ;Switch_B1.c: 13: while (RB0 == 0 && myMain.Timeout == 0) {
  6086                           
  6087                           
  6088                           ;Switch_B1.c: 14: RB0 = 1;
  6089  1348  0020               	movlb	0	; select bank0
  6090  1349  140D               	bsf	13,0	;volatile
  6091                           
  6092                           ;Switch_B1.c: 15: Timeout_Counter();
  6093  134A  3193  232C  3193   	fcall	_Timeout_Counter
  6094  134D                     l5705:	
  6095  134D  0020               	movlb	0	; select bank0
  6096  134E  180D               	btfsc	13,0	;volatile
  6097  134F  2B53               	goto	l5709
  6098  1350  0021               	movlb	1	; select bank1
  6099  1351  1D2A               	btfss	(_myMain^(0+128)+10),2
  6100  1352  2B48               	goto	l1705
  6101  1353                     l5709:	
  6102                           
  6103                           ;Switch_B1.c: 16: }
  6104                           ;Switch_B1.c: 17: set_TimeoutCleared();
  6105  1353  3190  20FF         	fcall	_set_TimeoutCleared
  6106  1355  0008               	return
  6107  1356                     __end_of_TouchPower:	
  6108                           
  6109                           	psect	text19
  6110  10FF                     __ptext19:	
  6111 ;; *************** function _set_TimeoutCleared *****************
  6112 ;; Defined at:
  6113 ;;		line 281 in file "../src/Main_B1.c"
  6114 ;; Parameters:    Size  Location     Type
  6115 ;;		None
  6116 ;; Auto vars:     Size  Location     Type
  6117 ;;		None
  6118 ;; Return value:  Size  Location     Type
  6119 ;;		None               void
  6120 ;; Registers used:
  6121 ;;		status,2
  6122 ;; Tracked objects:
  6123 ;;		On entry : 0/0
  6124 ;;		On exit  : 0/0
  6125 ;;		Unchanged: 0/0
  6126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6131 ;;Total ram usage:        0 bytes
  6132 ;; Hardware stack levels used:    1
  6133 ;; Hardware stack levels required when called:    5
  6134 ;; This function calls:
  6135 ;;		Nothing
  6136 ;; This function is called by:
  6137 ;;		_getAD
  6138 ;;		_TouchPower
  6139 ;; This function uses a non-reentrant model
  6140 ;;
  6141                           
  6142                           
  6143                           ;psect for function _set_TimeoutCleared
  6144  10FF                     _set_TimeoutCleared:	
  6145                           
  6146                           ;Main_B1.c: 282: myMain.Timeout = 0;
  6147                           
  6148                           ;incstack = 0
  6149                           ; Regs used in _set_TimeoutCleared: [status,2]
  6150  10FF  0021               	movlb	1	; select bank1
  6151  1100  112A               	bcf	(_myMain^(0+128)+10),2
  6152                           
  6153                           ;Main_B1.c: 283: myMain.Timeout_Counter = 0;
  6154  1101  01AB               	clrf	(_myMain^(0+128)+11)
  6155  1102  01AC               	clrf	((_myMain+1)^(0+128)+11)
  6156  1103  0008               	return
  6157  1104                     __end_of_set_TimeoutCleared:	
  6158                           
  6159                           	psect	text20
  6160  132C                     __ptext20:	
  6161 ;; *************** function _Timeout_Counter *****************
  6162 ;; Defined at:
  6163 ;;		line 272 in file "../src/Main_B1.c"
  6164 ;; Parameters:    Size  Location     Type
  6165 ;;		None
  6166 ;; Auto vars:     Size  Location     Type
  6167 ;;		None
  6168 ;; Return value:  Size  Location     Type
  6169 ;;		None               void
  6170 ;; Registers used:
  6171 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6172 ;; Tracked objects:
  6173 ;;		On entry : 0/0
  6174 ;;		On exit  : 0/0
  6175 ;;		Unchanged: 0/0
  6176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6181 ;;Total ram usage:        0 bytes
  6182 ;; Hardware stack levels used:    1
  6183 ;; Hardware stack levels required when called:    5
  6184 ;; This function calls:
  6185 ;;		Nothing
  6186 ;; This function is called by:
  6187 ;;		_getAD
  6188 ;;		_TouchPower
  6189 ;; This function uses a non-reentrant model
  6190 ;;
  6191                           
  6192                           
  6193                           ;psect for function _Timeout_Counter
  6194  132C                     _Timeout_Counter:	
  6195                           
  6196                           ;Main_B1.c: 273: myMain.Timeout_Counter++;
  6197                           
  6198                           ;incstack = 0
  6199                           ; Regs used in _Timeout_Counter: [wreg+fsr1l+fsr1h+status,2+status,0]
  6200  132C  3001               	movlw	1
  6201  132D  0021               	movlb	1	; select bank1
  6202  132E  07AB               	addwf	(_myMain^(0+128)+11),f
  6203  132F  3000               	movlw	0
  6204  1330  3DAC               	addwfc	((_myMain+1)^(0+128)+11),f
  6205                           
  6206                           ;Main_B1.c: 274: if (myMain.Timeout_Counter == 25000) {
  6207  1331  300B               	movlw	11
  6208  1332  3EA0               	addlw	_myMain& (0+255)
  6209  1333  0086               	movwf	6
  6210  1334  0187               	clrf	7
  6211  1335  3F40               	moviw [0]fsr1
  6212  1336  3AA8               	xorlw	168
  6213  1337  1D03               	skipz
  6214  1338  2B3B               	goto	u5025
  6215  1339  3F41               	moviw [1]fsr1
  6216  133A  3A61               	xorlw	97
  6217  133B                     u5025:	
  6218  133B  1D03               	skipz
  6219  133C  0008               	return
  6220                           
  6221                           ;Main_B1.c: 275: myMain.Timeout_Counter = 0;
  6222  133D  01AB               	clrf	(_myMain^(0+128)+11)
  6223  133E  01AC               	clrf	((_myMain+1)^(0+128)+11)
  6224                           
  6225                           ;Main_B1.c: 276: myMain.Timeout = 1;
  6226  133F  152A               	bsf	(_myMain^(0+128)+10),2
  6227  1340  0008               	return
  6228  1341                     __end_of_Timeout_Counter:	
  6229                           
  6230                           	psect	text21
  6231  10FB                     __ptext21:	
  6232 ;; *************** function _Switch_Initialization *****************
  6233 ;; Defined at:
  6234 ;;		line 46 in file "../src/Switch_B1.c"
  6235 ;; Parameters:    Size  Location     Type
  6236 ;;		None
  6237 ;; Auto vars:     Size  Location     Type
  6238 ;;		None
  6239 ;; Return value:  Size  Location     Type
  6240 ;;		None               void
  6241 ;; Registers used:
  6242 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6243 ;; Tracked objects:
  6244 ;;		On entry : 0/0
  6245 ;;		On exit  : 0/0
  6246 ;;		Unchanged: 0/0
  6247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6252 ;;Total ram usage:        0 bytes
  6253 ;; Hardware stack levels used:    1
  6254 ;; Hardware stack levels required when called:    8
  6255 ;; This function calls:
  6256 ;;		_setSw_Initialization
  6257 ;; This function is called by:
  6258 ;;		_main
  6259 ;; This function uses a non-reentrant model
  6260 ;;
  6261                           
  6262                           
  6263                           ;psect for function _Switch_Initialization
  6264  10FB                     _Switch_Initialization:	
  6265                           
  6266                           ;Switch_B1.c: 52: setSw_Initialization(1);
  6267                           
  6268                           ;incstack = 0
  6269                           ; Regs used in _Switch_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6270  10FB  3001               	movlw	1
  6271  10FC  3192  2258         	fcall	_setSw_Initialization
  6272  10FE  0008               	return
  6273  10FF                     __end_of_Switch_Initialization:	
  6274                           
  6275                           	psect	text22
  6276  1258                     __ptext22:	
  6277 ;; *************** function _setSw_Initialization *****************
  6278 ;; Defined at:
  6279 ;;		line 66 in file "../src/Switch_B1.c"
  6280 ;; Parameters:    Size  Location     Type
  6281 ;;  sw              1    wreg     unsigned char 
  6282 ;; Auto vars:     Size  Location     Type
  6283 ;;  sw              1    4[BANK0 ] unsigned char 
  6284 ;; Return value:  Size  Location     Type
  6285 ;;		None               void
  6286 ;; Registers used:
  6287 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6288 ;; Tracked objects:
  6289 ;;		On entry : 0/0
  6290 ;;		On exit  : 0/0
  6291 ;;		Unchanged: 0/0
  6292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6294 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6296 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6297 ;;Total ram usage:        1 bytes
  6298 ;; Hardware stack levels used:    1
  6299 ;; Hardware stack levels required when called:    7
  6300 ;; This function calls:
  6301 ;;		_setLED
  6302 ;; This function is called by:
  6303 ;;		_Switch_Initialization
  6304 ;; This function uses a non-reentrant model
  6305 ;;
  6306                           
  6307                           
  6308                           ;psect for function _setSw_Initialization
  6309  1258                     _setSw_Initialization:	
  6310                           
  6311                           ;incstack = 0
  6312                           ; Regs used in _setSw_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6313                           ;setSw_Initialization@sw stored from wreg
  6314  1258  0020               	movlb	0	; select bank0
  6315  1259  00A4               	movwf	setSw_Initialization@sw
  6316                           
  6317                           ;Switch_B1.c: 68: setLED(sw, 1);
  6318  125A  01A2               	clrf	setLED@command
  6319  125B  0AA2               	incf	setLED@command,f
  6320  125C  0824               	movf	setSw_Initialization@sw,w
  6321  125D  3196  2619  3192   	fcall	_setLED
  6322                           
  6323                           ;Switch_B1.c: 70: setLED(sw + 1, 1);
  6324  1260  0020               	movlb	0	; select bank0
  6325  1261  01A2               	clrf	setLED@command
  6326  1262  0AA2               	incf	setLED@command,f
  6327  1263  0824               	movf	setSw_Initialization@sw,w
  6328  1264  3E01               	addlw	1
  6329  1265  3196  2619         	fcall	_setLED
  6330  1267  0008               	return
  6331  1268                     __end_of_setSw_Initialization:	
  6332                           
  6333                           	psect	text23
  6334  12E2                     __ptext23:	
  6335 ;; *************** function _Mcu_Initialization *****************
  6336 ;; Defined at:
  6337 ;;		line 30 in file "../src/MCU_B1.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;		None
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;		None
  6342 ;; Return value:  Size  Location     Type
  6343 ;;		None               void
  6344 ;; Registers used:
  6345 ;;		wreg, status,2, status,0, pclath, cstack
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6355 ;;Total ram usage:        0 bytes
  6356 ;; Hardware stack levels used:    1
  6357 ;; Hardware stack levels required when called:    6
  6358 ;; This function calls:
  6359 ;;		_ADC_Set
  6360 ;;		_Fosc_Set
  6361 ;;		_IOC_Set
  6362 ;;		_IO_Set
  6363 ;;		_TMR1_Set
  6364 ;;		_WDT_Set
  6365 ;; This function is called by:
  6366 ;;		_main
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370                           
  6371                           ;psect for function _Mcu_Initialization
  6372  12E2                     _Mcu_Initialization:	
  6373                           
  6374                           ;MCU_B1.c: 32: Fosc_Set();
  6375                           
  6376                           ;incstack = 0
  6377                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  6378  12E2  3190  20F7  3192   	fcall	_Fosc_Set
  6379                           
  6380                           ;MCU_B1.c: 34: IO_Set();
  6381  12E5  3193  23E5  3192   	fcall	_IO_Set
  6382                           
  6383                           ;MCU_B1.c: 36: ;;
  6384                           ;MCU_B1.c: 38: TMR1_Set();
  6385  12E8  3192  2203  3192   	fcall	_TMR1_Set
  6386                           
  6387                           ;MCU_B1.c: 40: ADC_Set();
  6388  12EB  3191  2123  3192   	fcall	_ADC_Set
  6389                           
  6390                           ;MCU_B1.c: 42: ;;
  6391                           ;MCU_B1.c: 44: ;;
  6392                           ;MCU_B1.c: 46: IOC_Set();
  6393  12EE  3191  2199  3192   	fcall	_IOC_Set
  6394                           
  6395                           ;MCU_B1.c: 48: ;;
  6396                           ;MCU_B1.c: 50: ;;
  6397                           ;MCU_B1.c: 52: WDT_Set();
  6398  12F1  3191  21A4         	fcall	_WDT_Set
  6399  12F3  0008               	return
  6400  12F4                     __end_of_Mcu_Initialization:	
  6401                           
  6402                           	psect	text24
  6403  11A4                     __ptext24:	
  6404 ;; *************** function _WDT_Set *****************
  6405 ;; Defined at:
  6406 ;;		line 1102 in file "../src/MCU_B1.c"
  6407 ;; Parameters:    Size  Location     Type
  6408 ;;		None
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;		None
  6411 ;; Return value:  Size  Location     Type
  6412 ;;		None               void
  6413 ;; Registers used:
  6414 ;;		wreg
  6415 ;; Tracked objects:
  6416 ;;		On entry : 0/0
  6417 ;;		On exit  : 0/0
  6418 ;;		Unchanged: 0/0
  6419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6422 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6423 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6424 ;;Total ram usage:        1 bytes
  6425 ;; Hardware stack levels used:    1
  6426 ;; Hardware stack levels required when called:    5
  6427 ;; This function calls:
  6428 ;;		Nothing
  6429 ;; This function is called by:
  6430 ;;		_Mcu_Initialization
  6431 ;; This function uses a non-reentrant model
  6432 ;;
  6433                           
  6434                           
  6435                           ;psect for function _WDT_Set
  6436  11A4                     _WDT_Set:	
  6437                           
  6438                           ;MCU_B1.c: 1109: WDTCON = 0b00010111;;
  6439                           
  6440                           ;incstack = 0
  6441                           ; Regs used in _WDT_Set: [wreg]
  6442  11A4  3017               	movlw	23
  6443  11A5  0021               	movlb	1	; select bank1
  6444  11A6  0097               	movwf	23	;volatile
  6445                           
  6446                           ;MCU_B1.c: 1111: WDT.Enable = 1;
  6447  11A7  144D               	bsf	_WDT^(0+128),0
  6448                           
  6449                           ;MCU_B1.c: 1112: WDT.Timer = 10;
  6450  11A8  300A               	movlw	10
  6451  11A9  0020               	movlb	0	; select bank0
  6452  11AA  00A0               	movwf	??_WDT_Set
  6453  11AB  0820               	movf	??_WDT_Set,w
  6454  11AC  0021               	movlb	1	; select bank1
  6455  11AD  00CE               	movwf	(_WDT^(0+128)+1)
  6456  11AE  0008               	return
  6457  11AF                     __end_of_WDT_Set:	
  6458                           
  6459                           	psect	text25
  6460  1203                     __ptext25:	
  6461 ;; *************** function _TMR1_Set *****************
  6462 ;; Defined at:
  6463 ;;		line 226 in file "../src/MCU_B1.c"
  6464 ;; Parameters:    Size  Location     Type
  6465 ;;		None
  6466 ;; Auto vars:     Size  Location     Type
  6467 ;;		None
  6468 ;; Return value:  Size  Location     Type
  6469 ;;		None               void
  6470 ;; Registers used:
  6471 ;;		wreg
  6472 ;; Tracked objects:
  6473 ;;		On entry : 0/0
  6474 ;;		On exit  : 0/0
  6475 ;;		Unchanged: 0/0
  6476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6481 ;;Total ram usage:        0 bytes
  6482 ;; Hardware stack levels used:    1
  6483 ;; Hardware stack levels required when called:    5
  6484 ;; This function calls:
  6485 ;;		Nothing
  6486 ;; This function is called by:
  6487 ;;		_Mcu_Initialization
  6488 ;; This function uses a non-reentrant model
  6489 ;;
  6490                           
  6491                           
  6492                           ;psect for function _TMR1_Set
  6493  1203                     _TMR1_Set:	
  6494                           
  6495                           ;MCU_B1.c: 227: T1CON = (0x40 | 0x00 | 0x01);
  6496                           
  6497                           ;incstack = 0
  6498                           ; Regs used in _TMR1_Set: [wreg]
  6499  1203  3041               	movlw	65
  6500  1204  0020               	movlb	0	; select bank0
  6501  1205  0098               	movwf	24	;volatile
  6502                           
  6503                           ;MCU_B1.c: 228: TMR1H = (int)((65536-1480)/256);
  6504  1206  30FA               	movlw	250
  6505  1207  0097               	movwf	23	;volatile
  6506                           
  6507                           ;MCU_B1.c: 229: TMR1L = (int)((65536-1480)%256);
  6508  1208  3038               	movlw	56
  6509  1209  0096               	movwf	22	;volatile
  6510                           
  6511                           ;MCU_B1.c: 230: TMR1IE = 1;
  6512  120A  0021               	movlb	1	; select bank1
  6513  120B  1411               	bsf	17,0	;volatile
  6514                           
  6515                           ;MCU_B1.c: 231: PEIE = 1;
  6516  120C  170B               	bsf	11,6	;volatile
  6517                           
  6518                           ;MCU_B1.c: 232: GIE = 1;
  6519  120D  178B               	bsf	11,7	;volatile
  6520  120E  0008               	return
  6521  120F                     __end_of_TMR1_Set:	
  6522                           
  6523                           	psect	text26
  6524  13E5                     __ptext26:	
  6525 ;; *************** function _IO_Set *****************
  6526 ;; Defined at:
  6527 ;;		line 60 in file "../src/MCU_B1.c"
  6528 ;; Parameters:    Size  Location     Type
  6529 ;;		None
  6530 ;; Auto vars:     Size  Location     Type
  6531 ;;		None
  6532 ;; Return value:  Size  Location     Type
  6533 ;;		None               void
  6534 ;; Registers used:
  6535 ;;		wreg, status,2
  6536 ;; Tracked objects:
  6537 ;;		On entry : 0/0
  6538 ;;		On exit  : 0/0
  6539 ;;		Unchanged: 0/0
  6540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6545 ;;Total ram usage:        0 bytes
  6546 ;; Hardware stack levels used:    1
  6547 ;; Hardware stack levels required when called:    5
  6548 ;; This function calls:
  6549 ;;		Nothing
  6550 ;; This function is called by:
  6551 ;;		_Mcu_Initialization
  6552 ;; This function uses a non-reentrant model
  6553 ;;
  6554                           
  6555                           
  6556                           ;psect for function _IO_Set
  6557  13E5                     _IO_Set:	
  6558                           
  6559                           ;MCU_B1.c: 92: TRISA = 0b11110111;;
  6560                           
  6561                           ;incstack = 0
  6562                           ; Regs used in _IO_Set: [wreg+status,2]
  6563  13E5  30F7               	movlw	247
  6564  13E6  0021               	movlb	1	; select bank1
  6565  13E7  008C               	movwf	12	;volatile
  6566                           
  6567                           ;MCU_B1.c: 93: TRISB = 0b00000100;;
  6568  13E8  3004               	movlw	4
  6569  13E9  008D               	movwf	13	;volatile
  6570                           
  6571                           ;MCU_B1.c: 94: TRISC = 0b00100110;;
  6572  13EA  3026               	movlw	38
  6573  13EB  008E               	movwf	14	;volatile
  6574                           
  6575                           ;MCU_B1.c: 96: LATA = 0b00000000;;
  6576  13EC  0022               	movlb	2	; select bank2
  6577  13ED  018C               	clrf	12	;volatile
  6578                           
  6579                           ;MCU_B1.c: 97: LATB = 0b00000000;;
  6580  13EE  018D               	clrf	13	;volatile
  6581                           
  6582                           ;MCU_B1.c: 98: LATC = 0b00000000;;
  6583  13EF  018E               	clrf	14	;volatile
  6584                           
  6585                           ;MCU_B1.c: 100: ANSELA = 0b00001110;;
  6586  13F0  300E               	movlw	14
  6587  13F1  0023               	movlb	3	; select bank3
  6588  13F2  008C               	movwf	12	;volatile
  6589                           
  6590                           ;MCU_B1.c: 101: ANSELB = 0b00000000;;
  6591  13F3  018D               	clrf	13	;volatile
  6592                           
  6593                           ;MCU_B1.c: 102: ANSELC = 0b00000000;;
  6594  13F4  018E               	clrf	14	;volatile
  6595                           
  6596                           ;MCU_B1.c: 104: PORTA = 0b11110111;;
  6597  13F5  30F7               	movlw	247
  6598  13F6  0020               	movlb	0	; select bank0
  6599  13F7  008C               	movwf	12	;volatile
  6600                           
  6601                           ;MCU_B1.c: 105: PORTB = 0b00000100;;
  6602  13F8  3004               	movlw	4
  6603  13F9  008D               	movwf	13	;volatile
  6604                           
  6605                           ;MCU_B1.c: 106: PORTC = 0b00100110;;
  6606  13FA  3026               	movlw	38
  6607  13FB  008E               	movwf	14	;volatile
  6608                           
  6609                           ;MCU_B1.c: 108: WPUB = 0b00000000;;
  6610  13FC  0024               	movlb	4	; select bank4
  6611  13FD  018D               	clrf	13	;volatile
  6612  13FE  0008               	return
  6613  13FF                     __end_of_IO_Set:	
  6614                           
  6615                           	psect	text27
  6616  1199                     __ptext27:	
  6617 ;; *************** function _IOC_Set *****************
  6618 ;; Defined at:
  6619 ;;		line 380 in file "../src/MCU_B1.c"
  6620 ;; Parameters:    Size  Location     Type
  6621 ;;		None
  6622 ;; Auto vars:     Size  Location     Type
  6623 ;;		None
  6624 ;; Return value:  Size  Location     Type
  6625 ;;		None               void
  6626 ;; Registers used:
  6627 ;;		wreg, status,2
  6628 ;; Tracked objects:
  6629 ;;		On entry : 0/0
  6630 ;;		On exit  : 0/0
  6631 ;;		Unchanged: 0/0
  6632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6637 ;;Total ram usage:        0 bytes
  6638 ;; Hardware stack levels used:    1
  6639 ;; Hardware stack levels required when called:    5
  6640 ;; This function calls:
  6641 ;;		Nothing
  6642 ;; This function is called by:
  6643 ;;		_Mcu_Initialization
  6644 ;; This function uses a non-reentrant model
  6645 ;;
  6646                           
  6647                           
  6648                           ;psect for function _IOC_Set
  6649  1199                     _IOC_Set:	
  6650                           
  6651                           ;MCU_B1.c: 382: IOCBP = 0b00000100;;
  6652                           
  6653                           ;incstack = 0
  6654                           ; Regs used in _IOC_Set: [wreg+status,2]
  6655  1199  3004               	movlw	4
  6656  119A  0027               	movlb	7	; select bank7
  6657  119B  0094               	movwf	20	;volatile
  6658                           
  6659                           ;MCU_B1.c: 383: IOCBN = 0b00000100;;
  6660  119C  3004               	movlw	4
  6661  119D  0095               	movwf	21	;volatile
  6662                           
  6663                           ;MCU_B1.c: 385: IOCBF = 0b00000000;
  6664  119E  0196               	clrf	22	;volatile
  6665                           
  6666                           ;MCU_B1.c: 387: IOCIE = 1;
  6667  119F  158B               	bsf	11,3	;volatile
  6668                           
  6669                           ;MCU_B1.c: 388: IOCIF = 0;
  6670  11A0  100B               	bcf	11,0	;volatile
  6671                           
  6672                           ;MCU_B1.c: 389: PEIE = 1;
  6673  11A1  170B               	bsf	11,6	;volatile
  6674                           
  6675                           ;MCU_B1.c: 390: GIE = 1;
  6676  11A2  178B               	bsf	11,7	;volatile
  6677  11A3  0008               	return
  6678  11A4                     __end_of_IOC_Set:	
  6679                           
  6680                           	psect	text28
  6681  10F7                     __ptext28:	
  6682 ;; *************** function _Fosc_Set *****************
  6683 ;; Defined at:
  6684 ;;		line 56 in file "../src/MCU_B1.c"
  6685 ;; Parameters:    Size  Location     Type
  6686 ;;		None
  6687 ;; Auto vars:     Size  Location     Type
  6688 ;;		None
  6689 ;; Return value:  Size  Location     Type
  6690 ;;		None               void
  6691 ;; Registers used:
  6692 ;;		wreg
  6693 ;; Tracked objects:
  6694 ;;		On entry : 0/0
  6695 ;;		On exit  : 0/0
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6702 ;;Total ram usage:        0 bytes
  6703 ;; Hardware stack levels used:    1
  6704 ;; Hardware stack levels required when called:    5
  6705 ;; This function calls:
  6706 ;;		Nothing
  6707 ;; This function is called by:
  6708 ;;		_Mcu_Initialization
  6709 ;; This function uses a non-reentrant model
  6710 ;;
  6711                           
  6712                           
  6713                           ;psect for function _Fosc_Set
  6714  10F7                     _Fosc_Set:	
  6715                           
  6716                           ;MCU_B1.c: 57: OSCCON = 0x78;
  6717                           
  6718                           ;incstack = 0
  6719                           ; Regs used in _Fosc_Set: [wreg]
  6720  10F7  3078               	movlw	120
  6721  10F8  0021               	movlb	1	; select bank1
  6722  10F9  0099               	movwf	25	;volatile
  6723  10FA  0008               	return
  6724  10FB                     __end_of_Fosc_Set:	
  6725                           
  6726                           	psect	text29
  6727  1123                     __ptext29:	
  6728 ;; *************** function _ADC_Set *****************
  6729 ;; Defined at:
  6730 ;;		line 427 in file "../src/MCU_B1.c"
  6731 ;; Parameters:    Size  Location     Type
  6732 ;;		None
  6733 ;; Auto vars:     Size  Location     Type
  6734 ;;		None
  6735 ;; Return value:  Size  Location     Type
  6736 ;;		None               void
  6737 ;; Registers used:
  6738 ;;		wreg
  6739 ;; Tracked objects:
  6740 ;;		On entry : 0/0
  6741 ;;		On exit  : 0/0
  6742 ;;		Unchanged: 0/0
  6743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6748 ;;Total ram usage:        0 bytes
  6749 ;; Hardware stack levels used:    1
  6750 ;; Hardware stack levels required when called:    5
  6751 ;; This function calls:
  6752 ;;		Nothing
  6753 ;; This function is called by:
  6754 ;;		_Mcu_Initialization
  6755 ;; This function uses a non-reentrant model
  6756 ;;
  6757                           
  6758                           
  6759                           ;psect for function _ADC_Set
  6760  1123                     _ADC_Set:	
  6761                           
  6762                           ;MCU_B1.c: 428: ADCON1 = 0xf3;
  6763                           
  6764                           ;incstack = 0
  6765                           ; Regs used in _ADC_Set: [wreg]
  6766  1123  30F3               	movlw	243
  6767  1124  0021               	movlb	1	; select bank1
  6768  1125  009E               	movwf	30	;volatile
  6769                           
  6770                           ;MCU_B1.c: 429: FVRCON = 0xc1;
  6771  1126  30C1               	movlw	193
  6772  1127  0022               	movlb	2	; select bank2
  6773  1128  0097               	movwf	23	;volatile
  6774  1129  0008               	return
  6775  112A                     __end_of_ADC_Set:	
  6776                           
  6777                           	psect	text30
  6778  0049                     __ptext30:	
  6779 ;; *************** function _Load_Main *****************
  6780 ;; Defined at:
  6781 ;;		line 40 in file "../src/OverLoad_B1.c"
  6782 ;; Parameters:    Size  Location     Type
  6783 ;;		None
  6784 ;; Auto vars:     Size  Location     Type
  6785 ;;  i               2   16[BANK0 ] int 
  6786 ;;  LightsCount     1   15[BANK0 ] unsigned char 
  6787 ;;  Load_RunStat    1   14[BANK0 ] unsigned char 
  6788 ;;  ErrorCountVa    1   13[BANK0 ] unsigned char 
  6789 ;;  error           1   12[BANK0 ] unsigned char 
  6790 ;; Return value:  Size  Location     Type
  6791 ;;		None               void
  6792 ;; Registers used:
  6793 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6794 ;; Tracked objects:
  6795 ;;		On entry : 0/0
  6796 ;;		On exit  : 0/0
  6797 ;;		Unchanged: 0/0
  6798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6800 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6801 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6802 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6803 ;;Total ram usage:       10 bytes
  6804 ;; Hardware stack levels used:    1
  6805 ;; Hardware stack levels required when called:    6
  6806 ;; This function calls:
  6807 ;;		___lwdiv
  6808 ;;		___wmul
  6809 ;;		_getAll_DimmerIntr_Dimming_Sw_RF
  6810 ;;		_getDimmer_LoadGO
  6811 ;;		_getDimmer_Load_Status
  6812 ;;		_getMain_All_Error_Status
  6813 ;;		_getMain_All_LightsStatus
  6814 ;;		_getMain_Lights_Count
  6815 ;;		_setLoad_AH_AL_Restore
  6816 ;; This function is called by:
  6817 ;;		_main
  6818 ;; This function uses a non-reentrant model
  6819 ;;
  6820                           
  6821                           
  6822                           ;psect for function _Load_Main
  6823  0049                     _Load_Main:	
  6824                           
  6825                           ;OverLoad_B1.c: 41: char error = getMain_All_Error_Status(0);
  6826                           
  6827                           ;incstack = 0
  6828                           ; Regs used in _Load_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6829  0049  3000               	movlw	0
  6830  004A  3195  25E6  3180   	fcall	_getMain_All_Error_Status
  6831  004D  0020               	movlb	0	; select bank0
  6832  004E  00A8               	movwf	??_Load_Main
  6833  004F  0828               	movf	??_Load_Main,w
  6834  0050  00AC               	movwf	Load_Main@error
  6835                           
  6836                           ;OverLoad_B1.c: 42: char Load_RunStatus = 0, ErrorCountValue = 0, LightsCount = 0;
  6837  0051  01AE               	clrf	Load_Main@Load_RunStatus
  6838  0052  01AD               	clrf	Load_Main@ErrorCountValue
  6839  0053  01AF               	clrf	Load_Main@LightsCount
  6840                           
  6841                           ;OverLoad_B1.c: 43: if (Load.Enable == 1) {
  6842  0054  0022               	movlb	2	; select bank2
  6843  0055  1C20               	btfss	_Load^(0+256),0
  6844  0056  29F5               	goto	l1222
  6845                           
  6846                           ;OverLoad_B1.c: 45: if (getMain_All_LightsStatus() == 0) {
  6847  0057  3191  2164  3180   	fcall	_getMain_All_LightsStatus
  6848  005A  3800               	iorlw	0
  6849  005B  1D03               	skipz
  6850  005C  285F               	goto	l6083
  6851                           
  6852                           ;OverLoad_B1.c: 46: Load.GO = 0;
  6853  005D  0022               	movlb	2	; select bank2
  6854  005E  2880               	goto	l6101
  6855  005F                     l6083:	
  6856                           ;OverLoad_B1.c: 47: } else {
  6857                           
  6858                           
  6859                           ;OverLoad_B1.c: 50: if (error == 0 && getAll_DimmerIntr_Dimming_Sw_RF() == 0) {
  6860  005F  0020               	movlb	0	; select bank0
  6861  0060  08AC               	movf	Load_Main@error,f
  6862  0061  1D03               	skipz
  6863  0062  287D               	goto	l1225
  6864  0063  3191  216E  3180   	fcall	_getAll_DimmerIntr_Dimming_Sw_RF
  6865  0066  3800               	iorlw	0
  6866  0067  1D03               	skipz
  6867  0068  287D               	goto	l1225
  6868                           
  6869                           ;OverLoad_B1.c: 51: Load.GO = 1;
  6870  0069  0022               	movlb	2	; select bank2
  6871  006A  14A0               	bsf	_Load^(0+256),1
  6872                           
  6873                           ;OverLoad_B1.c: 53: if (getDimmer_LoadGO() == 1) {
  6874  006B  3191  2139  3180   	fcall	_getDimmer_LoadGO
  6875  006E  3A01               	xorlw	1
  6876  006F  1D03               	skipz
  6877  0070  2878               	goto	l1226
  6878                           
  6879                           ;OverLoad_B1.c: 54: if (Load.Run == 0 && Load.OK == 0) {
  6880  0071  0022               	movlb	2	; select bank2
  6881  0072  1DA0               	btfss	_Load^(0+256),3
  6882  0073  1BA0               	btfsc	_Load^(0+256),7
  6883  0074  2881               	goto	l1224
  6884                           
  6885                           ;OverLoad_B1.c: 55: Load.Run = 1;
  6886  0075  15A0               	bsf	_Load^(0+256),3
  6887                           
  6888                           ;OverLoad_B1.c: 56: Load.Count = 0;
  6889  0076  01C5               	clrf	(_Load^(0+256)+37)
  6890                           
  6891                           ;OverLoad_B1.c: 57: }
  6892                           ;OverLoad_B1.c: 58: } else {
  6893  0077  2881               	goto	l1224
  6894  0078                     l1226:	
  6895                           
  6896                           ;OverLoad_B1.c: 59: if (Load.OK == 1) {
  6897  0078  0022               	movlb	2	; select bank2
  6898  0079  1FA0               	btfss	_Load^(0+256),7
  6899  007A  2881               	goto	l1224
  6900                           
  6901                           ;OverLoad_B1.c: 60: Load.OK = 0;
  6902  007B  13A0               	bcf	_Load^(0+256),7
  6903                           
  6904                           ;OverLoad_B1.c: 61: }
  6905                           ;OverLoad_B1.c: 62: }
  6906                           ;OverLoad_B1.c: 63: } else {
  6907  007C  2881               	goto	l1224
  6908  007D                     l1225:	
  6909                           
  6910                           ;OverLoad_B1.c: 64: if (Load.GO == 1) {
  6911  007D  0022               	movlb	2	; select bank2
  6912  007E  1CA0               	btfss	_Load^(0+256),1
  6913  007F  2881               	goto	l1224
  6914  0080                     l6101:	
  6915                           
  6916                           ;OverLoad_B1.c: 65: Load.GO = 0;
  6917  0080  10A0               	bcf	_Load^(0+256),1
  6918  0081                     l1224:	
  6919                           
  6920                           ;OverLoad_B1.c: 66: }
  6921                           ;OverLoad_B1.c: 67: }
  6922                           ;OverLoad_B1.c: 89: }
  6923                           ;OverLoad_B1.c: 92: if (Load.GO == 1) {
  6924  0081  1CA0               	btfss	_Load^(0+256),1
  6925  0082  29D1               	goto	l1232
  6926                           
  6927                           ;OverLoad_B1.c: 93: Load.LightsON = 1;
  6928  0083  1520               	bsf	_Load^(0+256),2
  6929                           
  6930                           ;OverLoad_B1.c: 95: if (Load.ADtoGO == 1) {
  6931  0084  1E20               	btfss	_Load^(0+256),4
  6932  0085  29CF               	goto	l1233
  6933                           
  6934                           ;OverLoad_B1.c: 96: Load.Time++;
  6935  0086  3001               	movlw	1
  6936  0087  07A1               	addwf	(_Load^(0+256)+1),f
  6937  0088  3000               	movlw	0
  6938  0089  3DA2               	addwfc	((_Load+1)^(0+256)+1),f
  6939                           
  6940                           ;OverLoad_B1.c: 97: if (Load.Time >= (40 / 20)) {
  6941  008A  3000               	movlw	0
  6942  008B  0222               	subwf	((_Load+1)^(0+256)+1),w
  6943  008C  3002               	movlw	2
  6944  008D  1903               	skipnz
  6945  008E  0221               	subwf	(_Load^(0+256)+1),w
  6946  008F  1C03               	skipc
  6947  0090  0008               	return
  6948                           
  6949                           ;OverLoad_B1.c: 98: Load.Time = 0;
  6950  0091  01A1               	clrf	(_Load^(0+256)+1)
  6951  0092  01A2               	clrf	((_Load+1)^(0+256)+1)
  6952                           
  6953                           ;OverLoad_B1.c: 99: Load.ADtoGO = 0;
  6954  0093  1220               	bcf	_Load^(0+256),4
  6955                           
  6956                           ;OverLoad_B1.c: 101: for (int i = 1; i < 4; i++) {
  6957  0094  3001               	movlw	1
  6958  0095  0020               	movlb	0	; select bank0
  6959  0096  00B0               	movwf	Load_Main@i
  6960  0097  3000               	movlw	0
  6961  0098  00B1               	movwf	Load_Main@i+1
  6962  0099  0831               	movf	Load_Main@i+1,w
  6963  009A  3A80               	xorlw	128
  6964  009B  00A8               	movwf	??_Load_Main
  6965  009C  3080               	movlw	128
  6966  009D  0228               	subwf	??_Load_Main,w
  6967  009E  1D03               	skipz
  6968  009F  28A2               	goto	u6775
  6969  00A0  3004               	movlw	4
  6970  00A1  0230               	subwf	Load_Main@i,w
  6971  00A2                     u6775:	
  6972  00A2  1803               	btfsc	3,0
  6973  00A3  28D6               	goto	l6123
  6974  00A4                     l6117:	
  6975                           
  6976                           ;OverLoad_B1.c: 102: Load.ADH += Load.AH[i];
  6977  00A4  0020               	movlb	0	; select bank0
  6978  00A5  3530               	lslf	Load_Main@i,w
  6979  00A6  3E2B               	addlw	(_Load+11)& (0+255)
  6980  00A7  0086               	movwf	6
  6981  00A8  3001               	movlw	1	; select bank2/3
  6982  00A9  0087               	movwf	7
  6983  00AA  3F40               	moviw [0]fsr1
  6984  00AB  00A8               	movwf	??_Load_Main
  6985  00AC  3F41               	moviw [1]fsr1
  6986  00AD  00A9               	movwf	??_Load_Main+1
  6987  00AE  0828               	movf	??_Load_Main,w
  6988  00AF  0022               	movlb	2	; select bank2
  6989  00B0  07A5               	addwf	(_Load^(0+256)+5),f
  6990  00B1  0020               	movlb	0	; select bank0
  6991  00B2  0829               	movf	??_Load_Main+1,w
  6992  00B3  0022               	movlb	2	; select bank2
  6993  00B4  3DA6               	addwfc	((_Load+1)^(0+256)+5),f
  6994                           
  6995                           ;OverLoad_B1.c: 103: Load.ADL += Load.AL[i];
  6996  00B5  0020               	movlb	0	; select bank0
  6997  00B6  3530               	lslf	Load_Main@i,w
  6998  00B7  3E35               	addlw	(_Load+21)& (0+255)
  6999  00B8  0086               	movwf	6
  7000  00B9  3001               	movlw	1	; select bank2/3
  7001  00BA  0087               	movwf	7
  7002  00BB  3F40               	moviw [0]fsr1
  7003  00BC  00A8               	movwf	??_Load_Main
  7004  00BD  3F41               	moviw [1]fsr1
  7005  00BE  00A9               	movwf	??_Load_Main+1
  7006  00BF  0828               	movf	??_Load_Main,w
  7007  00C0  0022               	movlb	2	; select bank2
  7008  00C1  07A7               	addwf	(_Load^(0+256)+7),f
  7009  00C2  0020               	movlb	0	; select bank0
  7010  00C3  0829               	movf	??_Load_Main+1,w
  7011  00C4  0022               	movlb	2	; select bank2
  7012  00C5  3DA8               	addwfc	((_Load+1)^(0+256)+7),f
  7013  00C6  3001               	movlw	1
  7014  00C7  0020               	movlb	0	; select bank0
  7015  00C8  07B0               	addwf	Load_Main@i,f
  7016  00C9  3000               	movlw	0
  7017  00CA  3DB1               	addwfc	Load_Main@i+1,f
  7018  00CB  0831               	movf	Load_Main@i+1,w
  7019  00CC  3A80               	xorlw	128
  7020  00CD  00A8               	movwf	??_Load_Main
  7021  00CE  3080               	movlw	128
  7022  00CF  0228               	subwf	??_Load_Main,w
  7023  00D0  1D03               	skipz
  7024  00D1  28D4               	goto	u6785
  7025  00D2  3004               	movlw	4
  7026  00D3  0230               	subwf	Load_Main@i,w
  7027  00D4                     u6785:	
  7028  00D4  1C03               	skipc
  7029  00D5  28A4               	goto	l6117
  7030  00D6                     l6123:	
  7031                           
  7032                           ;OverLoad_B1.c: 104: }
  7033                           ;OverLoad_B1.c: 105: Load.ADH /= 3;
  7034  00D6  3003               	movlw	3
  7035  00D7  0020               	movlb	0	; select bank0
  7036  00D8  00A0               	movwf	___lwdiv@divisor
  7037  00D9  3000               	movlw	0
  7038  00DA  00A1               	movwf	___lwdiv@divisor+1
  7039  00DB  0022               	movlb	2	; select bank2
  7040  00DC  0826               	movf	((_Load+1)^(0+256)+5),w
  7041  00DD  0020               	movlb	0	; select bank0
  7042  00DE  01A3               	clrf	___lwdiv@dividend+1
  7043  00DF  07A3               	addwf	___lwdiv@dividend+1,f
  7044  00E0  0022               	movlb	2	; select bank2
  7045  00E1  0825               	movf	(_Load^(0+256)+5),w
  7046  00E2  0020               	movlb	0	; select bank0
  7047  00E3  01A2               	clrf	___lwdiv@dividend
  7048  00E4  07A2               	addwf	___lwdiv@dividend,f
  7049  00E5  3196  264F  3180   	fcall	___lwdiv
  7050  00E8  0020               	movlb	0	; select bank0
  7051  00E9  0821               	movf	?___lwdiv+1,w
  7052  00EA  0022               	movlb	2	; select bank2
  7053  00EB  01A6               	clrf	((_Load+1)^(0+256)+5)
  7054  00EC  07A6               	addwf	((_Load+1)^(0+256)+5),f
  7055  00ED  0020               	movlb	0	; select bank0
  7056  00EE  0820               	movf	?___lwdiv,w
  7057  00EF  0022               	movlb	2	; select bank2
  7058  00F0  01A5               	clrf	(_Load^(0+256)+5)
  7059  00F1  07A5               	addwf	(_Load^(0+256)+5),f
  7060                           
  7061                           ;OverLoad_B1.c: 106: Load.ADL /= 3;
  7062  00F2  3003               	movlw	3
  7063  00F3  0020               	movlb	0	; select bank0
  7064  00F4  00A0               	movwf	___lwdiv@divisor
  7065  00F5  3000               	movlw	0
  7066  00F6  00A1               	movwf	___lwdiv@divisor+1
  7067  00F7  0022               	movlb	2	; select bank2
  7068  00F8  0828               	movf	((_Load+1)^(0+256)+7),w
  7069  00F9  0020               	movlb	0	; select bank0
  7070  00FA  01A3               	clrf	___lwdiv@dividend+1
  7071  00FB  07A3               	addwf	___lwdiv@dividend+1,f
  7072  00FC  0022               	movlb	2	; select bank2
  7073  00FD  0827               	movf	(_Load^(0+256)+7),w
  7074  00FE  0020               	movlb	0	; select bank0
  7075  00FF  01A2               	clrf	___lwdiv@dividend
  7076  0100  07A2               	addwf	___lwdiv@dividend,f
  7077  0101  3196  264F  3180   	fcall	___lwdiv
  7078  0104  0020               	movlb	0	; select bank0
  7079  0105  0821               	movf	?___lwdiv+1,w
  7080  0106  0022               	movlb	2	; select bank2
  7081  0107  01A8               	clrf	((_Load+1)^(0+256)+7)
  7082  0108  07A8               	addwf	((_Load+1)^(0+256)+7),f
  7083  0109  0020               	movlb	0	; select bank0
  7084  010A  0820               	movf	?___lwdiv,w
  7085  010B  0022               	movlb	2	; select bank2
  7086  010C  01A7               	clrf	(_Load^(0+256)+7)
  7087  010D  07A7               	addwf	(_Load^(0+256)+7),f
  7088                           
  7089                           ;OverLoad_B1.c: 108: setLoad_AH_AL_Restore();
  7090  010E  3194  241A  3180   	fcall	_setLoad_AH_AL_Restore
  7091                           
  7092                           ;OverLoad_B1.c: 110: if (Load.ADH >= Load.ADL) {
  7093  0111  0022               	movlb	2	; select bank2
  7094  0112  0828               	movf	((_Load+1)^(0+256)+7),w
  7095  0113  0226               	subwf	((_Load+1)^(0+256)+5),w
  7096  0114  1D03               	skipz
  7097  0115  2918               	goto	u6795
  7098  0116  0827               	movf	(_Load^(0+256)+7),w
  7099  0117  0225               	subwf	(_Load^(0+256)+5),w
  7100  0118                     u6795:	
  7101  0118  1C03               	skipc
  7102  0119  0008               	return
  7103                           
  7104                           ;OverLoad_B1.c: 111: Load.AD = Load.ADH - Load.ADL;
  7105  011A  3005               	movlw	5
  7106  011B  3E20               	addlw	_Load& (0+255)
  7107  011C  0086               	movwf	6
  7108  011D  3001               	movlw	1	; select bank2/3
  7109  011E  0087               	movwf	7
  7110  011F  0927               	comf	(_Load^(0+256)+7),w
  7111  0120  0020               	movlb	0	; select bank0
  7112  0121  00A8               	movwf	??_Load_Main
  7113  0122  0022               	movlb	2	; select bank2
  7114  0123  0928               	comf	((_Load+1)^(0+256)+7),w
  7115  0124  0020               	movlb	0	; select bank0
  7116  0125  00A9               	movwf	??_Load_Main+1
  7117  0126  0AA8               	incf	??_Load_Main,f
  7118  0127  1903               	skipnz
  7119  0128  0AA9               	incf	??_Load_Main+1,f
  7120  0129  3F40               	moviw [0]fsr1
  7121  012A  0728               	addwf	??_Load_Main,w
  7122  012B  0022               	movlb	2	; select bank2
  7123  012C  00BF               	movwf	(_Load^(0+256)+31)
  7124  012D  3F41               	moviw [1]fsr1
  7125  012E  0020               	movlb	0	; select bank0
  7126  012F  3D29               	addwfc	??_Load_Main+1,w
  7127  0130  0022               	movlb	2	; select bank2
  7128  0131  00C0               	movwf	(_Load^(0+256)+32)
  7129                           
  7130                           ;OverLoad_B1.c: 112: Load.ADH = 0;
  7131  0132  01A5               	clrf	(_Load^(0+256)+5)
  7132  0133  01A6               	clrf	((_Load+1)^(0+256)+5)
  7133                           
  7134                           ;OverLoad_B1.c: 113: Load.ADL = 0;
  7135  0134  01A7               	clrf	(_Load^(0+256)+7)
  7136  0135  01A8               	clrf	((_Load+1)^(0+256)+7)
  7137                           
  7138                           ;OverLoad_B1.c: 115: if (Load.Run == 1) {
  7139  0136  1DA0               	btfss	_Load^(0+256),3
  7140  0137  2991               	goto	l6163
  7141                           
  7142                           ;OverLoad_B1.c: 116: if (Load.Count < 2) {
  7143  0138  3002               	movlw	2
  7144  0139  0245               	subwf	(_Load^(0+256)+37),w
  7145  013A  1803               	skipnc
  7146  013B  2991               	goto	l6163
  7147                           
  7148                           ;OverLoad_B1.c: 117: Load.Count++;
  7149  013C  3001               	movlw	1
  7150  013D  0020               	movlb	0	; select bank0
  7151  013E  00A8               	movwf	??_Load_Main
  7152  013F  0828               	movf	??_Load_Main,w
  7153  0140  0022               	movlb	2	; select bank2
  7154  0141  07C5               	addwf	(_Load^(0+256)+37),f
  7155                           
  7156                           ;OverLoad_B1.c: 119: Load_RunStatus = getDimmer_Load_Status();
  7157  0142  3191  2141  3180   	fcall	_getDimmer_Load_Status
  7158  0145  0020               	movlb	0	; select bank0
  7159  0146  00A8               	movwf	??_Load_Main
  7160  0147  0828               	movf	??_Load_Main,w
  7161  0148  00AE               	movwf	Load_Main@Load_RunStatus
  7162                           
  7163                           ;OverLoad_B1.c: 124: LightsCount = getMain_Lights_Count();
  7164  0149  3191  218E  3180   	fcall	_getMain_Lights_Count
  7165  014C  0020               	movlb	0	; select bank0
  7166  014D  00A8               	movwf	??_Load_Main
  7167  014E  0828               	movf	??_Load_Main,w
  7168  014F  00AF               	movwf	Load_Main@LightsCount
  7169                           
  7170                           ;OverLoad_B1.c: 126: if (Load.Count == 1) {
  7171  0150  0022               	movlb	2	; select bank2
  7172  0151  0845               	movf	(_Load^(0+256)+37),w
  7173  0152  3A01               	xorlw	1
  7174  0153  1D03               	skipz
  7175  0154  2959               	goto	l6149
  7176                           
  7177                           ;OverLoad_B1.c: 128: Load.JudgeValue = (20*65);
  7178  0155  3014               	movlw	20
  7179  0156  00C3               	movwf	(_Load^(0+256)+35)
  7180  0157  3005               	movlw	5
  7181  0158  2966               	goto	L3
  7182  0159                     l6149:	
  7183                           ;OverLoad_B1.c: 129: } else if (Load.Count == 2) {
  7184                           
  7185  0159  0845               	movf	(_Load^(0+256)+37),w
  7186  015A  3A02               	xorlw	2
  7187  015B  1D03               	skipz
  7188  015C  2991               	goto	l6163
  7189                           
  7190                           ;OverLoad_B1.c: 130: if (LightsCount == 1) {
  7191  015D  0020               	movlb	0	; select bank0
  7192  015E  082F               	movf	Load_Main@LightsCount,w
  7193  015F  3A01               	xorlw	1
  7194  0160  1D03               	skipz
  7195  0161  2968               	goto	l6155
  7196                           
  7197                           ;OverLoad_B1.c: 131: Load.JudgeValue = (int)(1.8*65);
  7198  0162  3075               	movlw	117
  7199  0163  0022               	movlb	2	; select bank2
  7200  0164  00C3               	movwf	(_Load^(0+256)+35)
  7201  0165  3000               	movlw	0
  7202  0166                     L3:	
  7203  0166  00C4               	movwf	(_Load^(0+256)+36)
  7204                           
  7205                           ;OverLoad_B1.c: 132: } else {
  7206  0167  2991               	goto	l6163
  7207  0168                     l6155:	
  7208                           
  7209                           ;OverLoad_B1.c: 133: if (Load_RunStatus == 0) {
  7210  0168  0020               	movlb	0	; select bank0
  7211  0169  08AE               	movf	Load_Main@Load_RunStatus,f
  7212  016A  1D03               	skipz
  7213  016B  2985               	goto	l6159
  7214                           
  7215                           ;OverLoad_B1.c: 134: Load.JudgeValue = (int)(1.8*65) * LightsCount;
  7216  016C  082F               	movf	Load_Main@LightsCount,w
  7217  016D  00A8               	movwf	??_Load_Main
  7218  016E  01A9               	clrf	??_Load_Main+1
  7219  016F  0828               	movf	??_Load_Main,w
  7220  0170  00A0               	movwf	___wmul@multiplier
  7221  0171  0829               	movf	??_Load_Main+1,w
  7222  0172  00A1               	movwf	___wmul@multiplier+1
  7223  0173  3075               	movlw	117
  7224  0174  00A2               	movwf	___wmul@multiplicand
  7225  0175  3000               	movlw	0
  7226  0176  00A3               	movwf	___wmul@multiplicand+1
  7227  0177  3194  2454  3180   	fcall	___wmul
  7228  017A  0020               	movlb	0	; select bank0
  7229  017B  0821               	movf	?___wmul+1,w
  7230  017C  0022               	movlb	2	; select bank2
  7231  017D  01C4               	clrf	((_Load+1)^(0+256)+35)
  7232  017E  07C4               	addwf	((_Load+1)^(0+256)+35),f
  7233  017F  0020               	movlb	0	; select bank0
  7234  0180  0820               	movf	?___wmul,w
  7235  0181  0022               	movlb	2	; select bank2
  7236  0182  01C3               	clrf	(_Load^(0+256)+35)
  7237  0183  07C3               	addwf	(_Load^(0+256)+35),f
  7238                           
  7239                           ;OverLoad_B1.c: 135: } else if (Load_RunStatus == 1) {
  7240  0184  2991               	goto	l6163
  7241  0185                     l6159:	
  7242  0185  0020               	movlb	0	; select bank0
  7243  0186  082E               	movf	Load_Main@Load_RunStatus,w
  7244  0187  3A01               	xorlw	1
  7245  0188  1D03               	skipz
  7246  0189  2991               	goto	l6163
  7247                           
  7248                           ;OverLoad_B1.c: 136: Load.JudgeValue = (int)(1.8*65) + Load.TotalLoad;
  7249  018A  0022               	movlb	2	; select bank2
  7250  018B  0829               	movf	(_Load^(0+256)+9),w
  7251  018C  3E75               	addlw	117
  7252  018D  00C3               	movwf	(_Load^(0+256)+35)
  7253  018E  3000               	movlw	0
  7254  018F  3D2A               	addwfc	((_Load+1)^(0+256)+9),w
  7255  0190  00C4               	movwf	((_Load+1)^(0+256)+35)
  7256  0191                     l6163:	
  7257                           
  7258                           ;OverLoad_B1.c: 137: }
  7259                           ;OverLoad_B1.c: 138: }
  7260                           ;OverLoad_B1.c: 139: }
  7261                           ;OverLoad_B1.c: 140: }
  7262                           ;OverLoad_B1.c: 141: }
  7263                           ;OverLoad_B1.c: 143: if (Load.AD >= Load.JudgeValue) {
  7264  0191  0022               	movlb	2	; select bank2
  7265  0192  0844               	movf	((_Load+1)^(0+256)+35),w
  7266  0193  0240               	subwf	((_Load+1)^(0+256)+31),w
  7267  0194  1D03               	skipz
  7268  0195  2998               	goto	u6875
  7269  0196  0843               	movf	(_Load^(0+256)+35),w
  7270  0197  023F               	subwf	(_Load^(0+256)+31),w
  7271  0198                     u6875:	
  7272  0198  1C03               	skipc
  7273  0199  29B7               	goto	l6179
  7274                           
  7275                           ;OverLoad_B1.c: 144: ErrorCountValue = LightsCount == 1 ? 2 : 3;
  7276  019A  0020               	movlb	0	; select bank0
  7277  019B  082F               	movf	Load_Main@LightsCount,w
  7278  019C  3A01               	xorlw	1
  7279  019D  1903               	skipnz
  7280  019E  29A1               	goto	l6169
  7281  019F  3003               	movlw	3
  7282  01A0  29A2               	goto	L4
  7283  01A1                     l6169:	
  7284  01A1  3002               	movlw	2
  7285  01A2                     L4:	
  7286  01A2  00AA               	movwf	_Load_Main$3523
  7287  01A3  3000               	movlw	0
  7288  01A4  00AB               	movwf	_Load_Main$3523+1
  7289  01A5  082A               	movf	_Load_Main$3523,w
  7290  01A6  00A8               	movwf	??_Load_Main
  7291  01A7  0828               	movf	??_Load_Main,w
  7292  01A8  00AD               	movwf	Load_Main@ErrorCountValue
  7293                           
  7294                           ;OverLoad_B1.c: 145: Load.ErrorCount++;
  7295  01A9  3001               	movlw	1
  7296  01AA  00A8               	movwf	??_Load_Main
  7297  01AB  0828               	movf	??_Load_Main,w
  7298  01AC  0022               	movlb	2	; select bank2
  7299  01AD  07C6               	addwf	(_Load^(0+256)+38),f
  7300                           
  7301                           ;OverLoad_B1.c: 146: if (Load.ErrorCount > ErrorCountValue) {
  7302  01AE  0846               	movf	(_Load^(0+256)+38),w
  7303  01AF  0020               	movlb	0	; select bank0
  7304  01B0  022D               	subwf	Load_Main@ErrorCountValue,w
  7305  01B1  1803               	skipnc
  7306  01B2  0008               	return
  7307                           
  7308                           ;OverLoad_B1.c: 147: Load.ErrorCount = 0;
  7309  01B3  0022               	movlb	2	; select bank2
  7310  01B4  01C6               	clrf	(_Load^(0+256)+38)
  7311                           
  7312                           ;OverLoad_B1.c: 148: Load.ERROR = 1;
  7313  01B5  16A0               	bsf	_Load^(0+256),5
  7314                           
  7315                           ;OverLoad_B1.c: 170: }
  7316                           ;OverLoad_B1.c: 171: } else {
  7317  01B6  0008               	return
  7318  01B7                     l6179:	
  7319                           
  7320                           ;OverLoad_B1.c: 172: Load.ErrorCount = 0;
  7321  01B7  01C6               	clrf	(_Load^(0+256)+38)
  7322                           
  7323                           ;OverLoad_B1.c: 173: if (Load.Run == 1) {
  7324  01B8  1DA0               	btfss	_Load^(0+256),3
  7325  01B9  0008               	return
  7326                           
  7327                           ;OverLoad_B1.c: 174: Load.SafeCount++;
  7328  01BA  3001               	movlw	1
  7329  01BB  0020               	movlb	0	; select bank0
  7330  01BC  00A8               	movwf	??_Load_Main
  7331  01BD  0828               	movf	??_Load_Main,w
  7332  01BE  0022               	movlb	2	; select bank2
  7333  01BF  07C7               	addwf	(_Load^(0+256)+39),f
  7334                           
  7335                           ;OverLoad_B1.c: 175: if (Load.SafeCount >= 3) {
  7336  01C0  3003               	movlw	3
  7337  01C1  0247               	subwf	(_Load^(0+256)+39),w
  7338  01C2  1C03               	skipc
  7339  01C3  0008               	return
  7340                           
  7341                           ;OverLoad_B1.c: 176: Load.SafeCount = 0;
  7342  01C4  01C7               	clrf	(_Load^(0+256)+39)
  7343                           
  7344                           ;OverLoad_B1.c: 177: Load.OK = 1;
  7345  01C5  17A0               	bsf	_Load^(0+256),7
  7346                           
  7347                           ;OverLoad_B1.c: 178: Load.Run = 0;
  7348  01C6  11A0               	bcf	_Load^(0+256),3
  7349                           
  7350                           ;OverLoad_B1.c: 179: Load.Count = 0;
  7351  01C7  01C5               	clrf	(_Load^(0+256)+37)
  7352                           
  7353                           ;OverLoad_B1.c: 180: Load.TotalLoad = Load.AD;
  7354  01C8  0840               	movf	((_Load+1)^(0+256)+31),w
  7355  01C9  01AA               	clrf	((_Load+1)^(0+256)+9)
  7356  01CA  07AA               	addwf	((_Load+1)^(0+256)+9),f
  7357  01CB  083F               	movf	(_Load^(0+256)+31),w
  7358  01CC  01A9               	clrf	(_Load^(0+256)+9)
  7359  01CD  07A9               	addwf	(_Load^(0+256)+9),f
  7360                           
  7361                           ;OverLoad_B1.c: 184: }
  7362                           ;OverLoad_B1.c: 185: }
  7363                           ;OverLoad_B1.c: 208: }
  7364                           ;OverLoad_B1.c: 209: }
  7365                           ;OverLoad_B1.c: 210: }
  7366                           ;OverLoad_B1.c: 211: } else {
  7367  01CE  0008               	return
  7368  01CF                     l1233:	
  7369                           
  7370                           ;OverLoad_B1.c: 212: Load.ADtoGO = 1;
  7371  01CF  1620               	bsf	_Load^(0+256),4
  7372                           
  7373                           ;OverLoad_B1.c: 213: }
  7374                           ;OverLoad_B1.c: 214: } else {
  7375  01D0  0008               	return
  7376  01D1                     l1232:	
  7377                           
  7378                           ;OverLoad_B1.c: 216: if (Load.LightsON == 1) {
  7379  01D1  1D20               	btfss	_Load^(0+256),2
  7380  01D2  29E4               	goto	l6215
  7381                           
  7382                           ;OverLoad_B1.c: 217: Load.LightsON = 0;
  7383  01D3  1120               	bcf	_Load^(0+256),2
  7384                           
  7385                           ;OverLoad_B1.c: 219: Load.ADtoGO = 0;
  7386  01D4  1220               	bcf	_Load^(0+256),4
  7387                           
  7388                           ;OverLoad_B1.c: 220: Load.Time = 0;
  7389  01D5  01A1               	clrf	(_Load^(0+256)+1)
  7390  01D6  01A2               	clrf	((_Load+1)^(0+256)+1)
  7391                           
  7392                           ;OverLoad_B1.c: 221: setLoad_AH_AL_Restore();
  7393  01D7  3194  241A  3180   	fcall	_setLoad_AH_AL_Restore
  7394                           
  7395                           ;OverLoad_B1.c: 223: Load.ErrorCount = 0;
  7396  01DA  0022               	movlb	2	; select bank2
  7397  01DB  01C6               	clrf	(_Load^(0+256)+38)
  7398                           
  7399                           ;OverLoad_B1.c: 224: Load.SafeCount = 0;
  7400  01DC  01C7               	clrf	(_Load^(0+256)+39)
  7401                           
  7402                           ;OverLoad_B1.c: 226: Load.ADH = 0;
  7403  01DD  01A5               	clrf	(_Load^(0+256)+5)
  7404  01DE  01A6               	clrf	((_Load+1)^(0+256)+5)
  7405                           
  7406                           ;OverLoad_B1.c: 227: Load.ADL = 0;
  7407  01DF  01A7               	clrf	(_Load^(0+256)+7)
  7408  01E0  01A8               	clrf	((_Load+1)^(0+256)+7)
  7409                           
  7410                           ;OverLoad_B1.c: 233: Load.Run = 0;
  7411  01E1  11A0               	bcf	_Load^(0+256),3
  7412                           
  7413                           ;OverLoad_B1.c: 234: Load.Count = 0;
  7414  01E2  01C5               	clrf	(_Load^(0+256)+37)
  7415                           
  7416                           ;OverLoad_B1.c: 235: Load.OK = 0;
  7417  01E3  13A0               	bcf	_Load^(0+256),7
  7418  01E4                     l6215:	
  7419                           
  7420                           ;OverLoad_B1.c: 257: }
  7421                           ;OverLoad_B1.c: 258: if (Load.ERROR == 1) {
  7422  01E4  1EA0               	btfss	_Load^(0+256),5
  7423  01E5  0008               	return
  7424                           
  7425                           ;OverLoad_B1.c: 259: Load.ErrorTime++;
  7426  01E6  3001               	movlw	1
  7427  01E7  07A3               	addwf	(_Load^(0+256)+3),f
  7428  01E8  3000               	movlw	0
  7429  01E9  3DA4               	addwfc	((_Load+1)^(0+256)+3),f
  7430                           
  7431                           ;OverLoad_B1.c: 260: if (Load.ErrorTime >= (10000 / 20)) {
  7432  01EA  3001               	movlw	1
  7433  01EB  0224               	subwf	((_Load+1)^(0+256)+3),w
  7434  01EC  30F4               	movlw	244
  7435  01ED  1903               	skipnz
  7436  01EE  0223               	subwf	(_Load^(0+256)+3),w
  7437  01EF  1C03               	skipc
  7438  01F0  0008               	return
  7439                           
  7440                           ;OverLoad_B1.c: 261: Load.ErrorTime = 0;
  7441  01F1  01A3               	clrf	(_Load^(0+256)+3)
  7442  01F2  01A4               	clrf	((_Load+1)^(0+256)+3)
  7443                           
  7444                           ;OverLoad_B1.c: 262: Load.ERROR = 0;
  7445  01F3  12A0               	bcf	_Load^(0+256),5
  7446                           
  7447                           ;OverLoad_B1.c: 263: }
  7448                           ;OverLoad_B1.c: 264: }
  7449                           ;OverLoad_B1.c: 265: }
  7450                           ;OverLoad_B1.c: 266: } else {
  7451  01F4  0008               	return
  7452  01F5                     l1222:	
  7453                           
  7454                           ;OverLoad_B1.c: 267: if (myMain.PowerON == 1) {
  7455  01F5  0021               	movlb	1	; select bank1
  7456  01F6  1C20               	btfss	_myMain^(0+128),0
  7457  01F7  0008               	return
  7458                           
  7459                           ;OverLoad_B1.c: 268: Load.Enable = 1;
  7460  01F8  0022               	movlb	2	; select bank2
  7461  01F9  1420               	bsf	_Load^(0+256),0
  7462  01FA  0008               	return
  7463  01FB                     __end_of_Load_Main:	
  7464                           
  7465                           	psect	text31
  7466  118E                     __ptext31:	
  7467 ;; *************** function _getMain_Lights_Count *****************
  7468 ;; Defined at:
  7469 ;;		line 459 in file "../src/Main_B1.c"
  7470 ;; Parameters:    Size  Location     Type
  7471 ;;		None
  7472 ;; Auto vars:     Size  Location     Type
  7473 ;;  status1         1    1[BANK0 ] unsigned char 
  7474 ;;  count           1    0[BANK0 ] unsigned char 
  7475 ;; Return value:  Size  Location     Type
  7476 ;;                  1    wreg      unsigned char 
  7477 ;; Registers used:
  7478 ;;		wreg, status,2
  7479 ;; Tracked objects:
  7480 ;;		On entry : 0/0
  7481 ;;		On exit  : 0/0
  7482 ;;		Unchanged: 0/0
  7483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7485 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7487 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7488 ;;Total ram usage:        2 bytes
  7489 ;; Hardware stack levels used:    1
  7490 ;; Hardware stack levels required when called:    5
  7491 ;; This function calls:
  7492 ;;		Nothing
  7493 ;; This function is called by:
  7494 ;;		_Load_Main
  7495 ;; This function uses a non-reentrant model
  7496 ;;
  7497                           
  7498                           
  7499                           ;psect for function _getMain_Lights_Count
  7500  118E                     _getMain_Lights_Count:	
  7501                           
  7502                           ;Main_B1.c: 460: char count = 0;
  7503                           
  7504                           ;incstack = 0
  7505                           ; Regs used in _getMain_Lights_Count: [wreg+status,2]
  7506  118E  0020               	movlb	0	; select bank0
  7507  118F  01A0               	clrf	getMain_Lights_Count@count
  7508                           
  7509                           ;Main_B1.c: 464: char status1 = DimmerIntr1.ControlStatus == 1 ? 1 : 0;
  7510  1190  3000               	movlw	0
  7511  1191  0021               	movlb	1	; select bank1
  7512  1192  19B9               	btfsc	_DimmerIntr1^(0+128),3
  7513  1193  3001               	movlw	1
  7514  1194  0020               	movlb	0	; select bank0
  7515  1195  00A1               	movwf	getMain_Lights_Count@status1
  7516                           
  7517                           ;Main_B1.c: 487: return count = status1;
  7518  1196  0821               	movf	getMain_Lights_Count@status1,w
  7519  1197  00A0               	movwf	getMain_Lights_Count@count
  7520  1198  0008               	return
  7521  1199                     __end_of_getMain_Lights_Count:	
  7522                           
  7523                           	psect	text32
  7524  1141                     __ptext32:	
  7525 ;; *************** function _getDimmer_Load_Status *****************
  7526 ;; Defined at:
  7527 ;;		line 1275 in file "../src/Dimmer_B1.c"
  7528 ;; Parameters:    Size  Location     Type
  7529 ;;		None
  7530 ;; Auto vars:     Size  Location     Type
  7531 ;;  status          1    0[BANK0 ] unsigned char 
  7532 ;; Return value:  Size  Location     Type
  7533 ;;                  1    wreg      unsigned char 
  7534 ;; Registers used:
  7535 ;;		wreg, status,2
  7536 ;; Tracked objects:
  7537 ;;		On entry : 0/0
  7538 ;;		On exit  : 0/0
  7539 ;;		Unchanged: 0/0
  7540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7542 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7544 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7545 ;;Total ram usage:        1 bytes
  7546 ;; Hardware stack levels used:    1
  7547 ;; Hardware stack levels required when called:    5
  7548 ;; This function calls:
  7549 ;;		Nothing
  7550 ;; This function is called by:
  7551 ;;		_Load_Main
  7552 ;; This function uses a non-reentrant model
  7553 ;;
  7554                           
  7555                           
  7556                           ;psect for function _getDimmer_Load_Status
  7557  1141                     _getDimmer_Load_Status:	
  7558                           
  7559                           ;Dimmer_B1.c: 1276: char status = Dimmer.Load_Status == 1 ? 1 : 0;
  7560                           
  7561                           ;incstack = 0
  7562                           ; Regs used in _getDimmer_Load_Status: [wreg+status,2]
  7563  1141  3000               	movlw	0
  7564  1142  0021               	movlb	1	; select bank1
  7565  1143  1945               	btfsc	_Dimmer^(0+128),2
  7566  1144  3001               	movlw	1
  7567  1145  0020               	movlb	0	; select bank0
  7568  1146  00A0               	movwf	getDimmer_Load_Status@status
  7569                           
  7570                           ;Dimmer_B1.c: 1277: return status;
  7571  1147  0820               	movf	getDimmer_Load_Status@status,w
  7572  1148  0008               	return
  7573  1149                     __end_of_getDimmer_Load_Status:	
  7574                           
  7575                           	psect	text33
  7576  1139                     __ptext33:	
  7577 ;; *************** function _getDimmer_LoadGO *****************
  7578 ;; Defined at:
  7579 ;;		line 1269 in file "../src/Dimmer_B1.c"
  7580 ;; Parameters:    Size  Location     Type
  7581 ;;		None
  7582 ;; Auto vars:     Size  Location     Type
  7583 ;;  loadgo          1    0[BANK0 ] unsigned char 
  7584 ;; Return value:  Size  Location     Type
  7585 ;;                  1    wreg      unsigned char 
  7586 ;; Registers used:
  7587 ;;		wreg, status,2
  7588 ;; Tracked objects:
  7589 ;;		On entry : 0/0
  7590 ;;		On exit  : 0/0
  7591 ;;		Unchanged: 0/0
  7592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7594 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7596 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7597 ;;Total ram usage:        1 bytes
  7598 ;; Hardware stack levels used:    1
  7599 ;; Hardware stack levels required when called:    5
  7600 ;; This function calls:
  7601 ;;		Nothing
  7602 ;; This function is called by:
  7603 ;;		_Load_Main
  7604 ;; This function uses a non-reentrant model
  7605 ;;
  7606                           
  7607                           
  7608                           ;psect for function _getDimmer_LoadGO
  7609  1139                     _getDimmer_LoadGO:	
  7610                           
  7611                           ;Dimmer_B1.c: 1270: char loadgo = Dimmer.LoadGO == 1 ? 1 : 0;
  7612                           
  7613                           ;incstack = 0
  7614                           ; Regs used in _getDimmer_LoadGO: [wreg+status,2]
  7615  1139  3000               	movlw	0
  7616  113A  0021               	movlb	1	; select bank1
  7617  113B  18C5               	btfsc	_Dimmer^(0+128),1
  7618  113C  3001               	movlw	1
  7619  113D  0020               	movlb	0	; select bank0
  7620  113E  00A0               	movwf	getDimmer_LoadGO@loadgo
  7621                           
  7622                           ;Dimmer_B1.c: 1271: return loadgo;
  7623  113F  0820               	movf	getDimmer_LoadGO@loadgo,w
  7624  1140  0008               	return
  7625  1141                     __end_of_getDimmer_LoadGO:	
  7626                           
  7627                           	psect	text34
  7628  116E                     __ptext34:	
  7629 ;; *************** function _getAll_DimmerIntr_Dimming_Sw_RF *****************
  7630 ;; Defined at:
  7631 ;;		line 318 in file "../src/Dimmer_B1.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;		None
  7634 ;; Auto vars:     Size  Location     Type
  7635 ;;  status          1    0[BANK0 ] unsigned char 
  7636 ;; Return value:  Size  Location     Type
  7637 ;;                  1    wreg      unsigned char 
  7638 ;; Registers used:
  7639 ;;		wreg, status,2
  7640 ;; Tracked objects:
  7641 ;;		On entry : 0/0
  7642 ;;		On exit  : 0/0
  7643 ;;		Unchanged: 0/0
  7644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7646 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7648 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7649 ;;Total ram usage:        1 bytes
  7650 ;; Hardware stack levels used:    1
  7651 ;; Hardware stack levels required when called:    5
  7652 ;; This function calls:
  7653 ;;		Nothing
  7654 ;; This function is called by:
  7655 ;;		_Load_Main
  7656 ;; This function uses a non-reentrant model
  7657 ;;
  7658                           
  7659                           
  7660                           ;psect for function _getAll_DimmerIntr_Dimming_Sw_RF
  7661  116E                     _getAll_DimmerIntr_Dimming_Sw_RF:	
  7662                           
  7663                           ;Dimmer_B1.c: 319: char status = 0;
  7664                           
  7665                           ;incstack = 0
  7666                           ; Regs used in _getAll_DimmerIntr_Dimming_Sw_RF: [wreg+status,2]
  7667  116E  0020               	movlb	0	; select bank0
  7668  116F  01A0               	clrf	getAll_DimmerIntr_Dimming_Sw_RF@status
  7669                           
  7670                           ;Dimmer_B1.c: 330: status = (DimmerIntr1.Dimming_Sw == 1) ? 1 : 0;
  7671  1170  3000               	movlw	0
  7672  1171  0021               	movlb	1	; select bank1
  7673  1172  1A39               	btfsc	_DimmerIntr1^(0+128),4
  7674  1173  3001               	movlw	1
  7675  1174  0020               	movlb	0	; select bank0
  7676  1175  00A0               	movwf	getAll_DimmerIntr_Dimming_Sw_RF@status
  7677                           
  7678                           ;Dimmer_B1.c: 348: return status;
  7679  1176  0820               	movf	getAll_DimmerIntr_Dimming_Sw_RF@status,w
  7680  1177  0008               	return
  7681  1178                     __end_of_getAll_DimmerIntr_Dimming_Sw_RF:	
  7682                           
  7683                           	psect	text35
  7684  1454                     __ptext35:	
  7685 ;; *************** function ___wmul *****************
  7686 ;; Defined at:
  7687 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul16.c"
  7688 ;; Parameters:    Size  Location     Type
  7689 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7690 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7691 ;; Auto vars:     Size  Location     Type
  7692 ;;  product         2    4[BANK0 ] unsigned int 
  7693 ;; Return value:  Size  Location     Type
  7694 ;;                  2    0[BANK0 ] unsigned int 
  7695 ;; Registers used:
  7696 ;;		wreg, status,2, status,0
  7697 ;; Tracked objects:
  7698 ;;		On entry : 0/0
  7699 ;;		On exit  : 0/0
  7700 ;;		Unchanged: 0/0
  7701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7702 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7703 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7705 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7706 ;;Total ram usage:        6 bytes
  7707 ;; Hardware stack levels used:    1
  7708 ;; Hardware stack levels required when called:    5
  7709 ;; This function calls:
  7710 ;;		Nothing
  7711 ;; This function is called by:
  7712 ;;		_Load_Main
  7713 ;; This function uses a non-reentrant model
  7714 ;;
  7715                           
  7716                           
  7717                           ;psect for function ___wmul
  7718  1454                     ___wmul:	
  7719                           
  7720                           ;incstack = 0
  7721                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7722  1454  0020               	movlb	0	; select bank0
  7723  1455  01A4               	clrf	___wmul@product
  7724  1456  01A5               	clrf	___wmul@product+1
  7725  1457                     l5793:	
  7726  1457  1C20               	btfss	___wmul@multiplier,0
  7727  1458  2C5D               	goto	l1852
  7728  1459  0822               	movf	___wmul@multiplicand,w
  7729  145A  07A4               	addwf	___wmul@product,f
  7730  145B  0823               	movf	___wmul@multiplicand+1,w
  7731  145C  3DA5               	addwfc	___wmul@product+1,f
  7732  145D                     l1852:	
  7733  145D  3001               	movlw	1
  7734  145E                     u6155:	
  7735  145E  35A2               	lslf	___wmul@multiplicand,f
  7736  145F  0DA3               	rlf	___wmul@multiplicand+1,f
  7737  1460  0B89               	decfsz	9,f
  7738  1461  2C5E               	goto	u6155
  7739  1462  3001               	movlw	1
  7740  1463                     u6165:	
  7741  1463  36A1               	lsrf	___wmul@multiplier+1,f
  7742  1464  0CA0               	rrf	___wmul@multiplier,f
  7743  1465  0B89               	decfsz	9,f
  7744  1466  2C63               	goto	u6165
  7745  1467  0821               	movf	___wmul@multiplier+1,w
  7746  1468  0420               	iorwf	___wmul@multiplier,w
  7747  1469  1D03               	skipz
  7748  146A  2C57               	goto	l5793
  7749  146B  0825               	movf	___wmul@product+1,w
  7750  146C  01A1               	clrf	?___wmul+1
  7751  146D  07A1               	addwf	?___wmul+1,f
  7752  146E  0824               	movf	___wmul@product,w
  7753  146F  01A0               	clrf	?___wmul
  7754  1470  07A0               	addwf	?___wmul,f
  7755  1471  0008               	return
  7756  1472                     __end_of___wmul:	
  7757                           
  7758                           	psect	text36
  7759  164F                     __ptext36:	
  7760 ;; *************** function ___lwdiv *****************
  7761 ;; Defined at:
  7762 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  7763 ;; Parameters:    Size  Location     Type
  7764 ;;  divisor         2    0[BANK0 ] unsigned int 
  7765 ;;  dividend        2    2[BANK0 ] unsigned int 
  7766 ;; Auto vars:     Size  Location     Type
  7767 ;;  quotient        2    5[BANK0 ] unsigned int 
  7768 ;;  counter         1    7[BANK0 ] unsigned char 
  7769 ;; Return value:  Size  Location     Type
  7770 ;;                  2    0[BANK0 ] unsigned int 
  7771 ;; Registers used:
  7772 ;;		wreg, status,2, status,0
  7773 ;; Tracked objects:
  7774 ;;		On entry : 0/0
  7775 ;;		On exit  : 0/0
  7776 ;;		Unchanged: 0/0
  7777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7778 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7779 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7780 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7781 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7782 ;;Total ram usage:        8 bytes
  7783 ;; Hardware stack levels used:    1
  7784 ;; Hardware stack levels required when called:    5
  7785 ;; This function calls:
  7786 ;;		Nothing
  7787 ;; This function is called by:
  7788 ;;		_Load_Main
  7789 ;;		_setTemp_Main
  7790 ;; This function uses a non-reentrant model
  7791 ;;
  7792                           
  7793                           
  7794                           ;psect for function ___lwdiv
  7795  164F                     ___lwdiv:	
  7796                           
  7797                           ;incstack = 0
  7798                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7799  164F  0020               	movlb	0	; select bank0
  7800  1650  01A5               	clrf	___lwdiv@quotient
  7801  1651  01A6               	clrf	___lwdiv@quotient+1
  7802  1652  0821               	movf	___lwdiv@divisor+1,w
  7803  1653  0420               	iorwf	___lwdiv@divisor,w
  7804  1654  1903               	skipnz
  7805  1655  2E7F               	goto	l5239
  7806  1656  01A7               	clrf	___lwdiv@counter
  7807  1657  0AA7               	incf	___lwdiv@counter,f
  7808  1658                     l5227:	
  7809  1658  1BA1               	btfsc	___lwdiv@divisor+1,7
  7810  1659  2E64               	goto	l5229
  7811  165A  3001               	movlw	1
  7812  165B                     u5135:	
  7813  165B  35A0               	lslf	___lwdiv@divisor,f
  7814  165C  0DA1               	rlf	___lwdiv@divisor+1,f
  7815  165D  0B89               	decfsz	9,f
  7816  165E  2E5B               	goto	u5135
  7817  165F  3001               	movlw	1
  7818  1660  00A4               	movwf	??___lwdiv
  7819  1661  0824               	movf	??___lwdiv,w
  7820  1662  07A7               	addwf	___lwdiv@counter,f
  7821  1663  2E58               	goto	l5227
  7822  1664                     l5229:	
  7823  1664  3001               	movlw	1
  7824  1665                     u5155:	
  7825  1665  35A5               	lslf	___lwdiv@quotient,f
  7826  1666  0DA6               	rlf	___lwdiv@quotient+1,f
  7827  1667  0B89               	decfsz	9,f
  7828  1668  2E65               	goto	u5155
  7829  1669  0821               	movf	___lwdiv@divisor+1,w
  7830  166A  0223               	subwf	___lwdiv@dividend+1,w
  7831  166B  1D03               	skipz
  7832  166C  2E6F               	goto	u5165
  7833  166D  0820               	movf	___lwdiv@divisor,w
  7834  166E  0222               	subwf	___lwdiv@dividend,w
  7835  166F                     u5165:	
  7836  166F  1C03               	skipc
  7837  1670  2E76               	goto	l5235
  7838  1671  0820               	movf	___lwdiv@divisor,w
  7839  1672  02A2               	subwf	___lwdiv@dividend,f
  7840  1673  0821               	movf	___lwdiv@divisor+1,w
  7841  1674  3BA3               	subwfb	___lwdiv@dividend+1,f
  7842  1675  1425               	bsf	___lwdiv@quotient,0
  7843  1676                     l5235:	
  7844  1676  3001               	movlw	1
  7845  1677                     u5175:	
  7846  1677  36A1               	lsrf	___lwdiv@divisor+1,f
  7847  1678  0CA0               	rrf	___lwdiv@divisor,f
  7848  1679  0B89               	decfsz	9,f
  7849  167A  2E77               	goto	u5175
  7850  167B  3001               	movlw	1
  7851  167C  02A7               	subwf	___lwdiv@counter,f
  7852  167D  1D03               	btfss	3,2
  7853  167E  2E64               	goto	l5229
  7854  167F                     l5239:	
  7855  167F  0826               	movf	___lwdiv@quotient+1,w
  7856  1680  01A1               	clrf	?___lwdiv+1
  7857  1681  07A1               	addwf	?___lwdiv+1,f
  7858  1682  0825               	movf	___lwdiv@quotient,w
  7859  1683  01A0               	clrf	?___lwdiv
  7860  1684  07A0               	addwf	?___lwdiv,f
  7861  1685  0008               	return
  7862  1686                     __end_of___lwdiv:	
  7863                           
  7864                           	psect	text37
  7865  10E1                     __ptext37:	
  7866 ;; *************** function _Load_Initialization *****************
  7867 ;; Defined at:
  7868 ;;		line 9 in file "../src/OverLoad_B1.c"
  7869 ;; Parameters:    Size  Location     Type
  7870 ;;		None
  7871 ;; Auto vars:     Size  Location     Type
  7872 ;;		None
  7873 ;; Return value:  Size  Location     Type
  7874 ;;		None               void
  7875 ;; Registers used:
  7876 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7877 ;; Tracked objects:
  7878 ;;		On entry : 0/0
  7879 ;;		On exit  : 0/0
  7880 ;;		Unchanged: 0/0
  7881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7886 ;;Total ram usage:        0 bytes
  7887 ;; Hardware stack levels used:    1
  7888 ;; Hardware stack levels required when called:    6
  7889 ;; This function calls:
  7890 ;;		_setLoad_AH_AL_Restore
  7891 ;; This function is called by:
  7892 ;;		_main
  7893 ;; This function uses a non-reentrant model
  7894 ;;
  7895                           
  7896                           
  7897                           ;psect for function _Load_Initialization
  7898  10E1                     _Load_Initialization:	
  7899                           
  7900                           ;OverLoad_B1.c: 11: setLoad_AH_AL_Restore();
  7901                           
  7902                           ;incstack = 0
  7903                           ; Regs used in _Load_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7904  10E1  3194  241A         	fcall	_setLoad_AH_AL_Restore
  7905  10E3  0008               	return
  7906  10E4                     __end_of_Load_Initialization:	
  7907                           
  7908                           	psect	text38
  7909  141A                     __ptext38:	
  7910 ;; *************** function _setLoad_AH_AL_Restore *****************
  7911 ;; Defined at:
  7912 ;;		line 294 in file "../src/OverLoad_B1.c"
  7913 ;; Parameters:    Size  Location     Type
  7914 ;;		None
  7915 ;; Auto vars:     Size  Location     Type
  7916 ;;  i               1    1[BANK0 ] unsigned char 
  7917 ;; Return value:  Size  Location     Type
  7918 ;;		None               void
  7919 ;; Registers used:
  7920 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7921 ;; Tracked objects:
  7922 ;;		On entry : 0/0
  7923 ;;		On exit  : 0/0
  7924 ;;		Unchanged: 0/0
  7925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7927 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7928 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7929 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7930 ;;Total ram usage:        2 bytes
  7931 ;; Hardware stack levels used:    1
  7932 ;; Hardware stack levels required when called:    5
  7933 ;; This function calls:
  7934 ;;		Nothing
  7935 ;; This function is called by:
  7936 ;;		_Load_Initialization
  7937 ;;		_Load_Main
  7938 ;; This function uses a non-reentrant model
  7939 ;;
  7940                           
  7941                           
  7942                           ;psect for function _setLoad_AH_AL_Restore
  7943  141A                     _setLoad_AH_AL_Restore:	
  7944                           
  7945                           ;OverLoad_B1.c: 295: char i;
  7946                           ;OverLoad_B1.c: 296: for (i = 0; i < 5; i++) {
  7947                           
  7948                           ;incstack = 0
  7949                           ; Regs used in _setLoad_AH_AL_Restore: [wreg+fsr1l+fsr1h+status,2+status,0]
  7950  141A  0020               	movlb	0	; select bank0
  7951  141B  01A1               	clrf	setLoad_AH_AL_Restore@i
  7952  141C                     L5:	
  7953  141C  3005               	movlw	5
  7954  141D  0221               	subwf	setLoad_AH_AL_Restore@i,w
  7955  141E  1803               	btfsc	3,0
  7956  141F  0008               	return
  7957                           
  7958                           ;OverLoad_B1.c: 297: Load.AH[i] = 0;
  7959  1420  3521               	lslf	setLoad_AH_AL_Restore@i,w
  7960  1421  3E2B               	addlw	(_Load+11)& (0+255)
  7961  1422  0086               	movwf	6
  7962  1423  3001               	movlw	1	; select bank2/3
  7963  1424  0087               	movwf	7
  7964  1425  3000               	movlw	0
  7965  1426  3FC0               	movwi [0]fsr1
  7966  1427  3FC1               	movwi [1]fsr1
  7967                           
  7968                           ;OverLoad_B1.c: 298: Load.AL[i] = 0xffff;
  7969  1428  3521               	lslf	setLoad_AH_AL_Restore@i,w
  7970  1429  3E35               	addlw	(_Load+21)& (0+255)
  7971  142A  0086               	movwf	6
  7972  142B  3001               	movlw	1	; select bank2/3
  7973  142C  0087               	movwf	7
  7974  142D  30FF               	movlw	255
  7975  142E  3FC0               	movwi [0]fsr1
  7976  142F  30FF               	movlw	255
  7977  1430  3FC1               	movwi [1]fsr1
  7978  1431  3001               	movlw	1
  7979  1432  00A0               	movwf	??_setLoad_AH_AL_Restore
  7980  1433  0820               	movf	??_setLoad_AH_AL_Restore,w
  7981  1434  07A1               	addwf	setLoad_AH_AL_Restore@i,f
  7982  1435  2C1C               	goto	L5
  7983  1436                     __end_of_setLoad_AH_AL_Restore:	
  7984                           
  7985                           	psect	text39
  7986  10F3                     __ptext39:	
  7987 ;; *************** function _LED_Main *****************
  7988 ;; Defined at:
  7989 ;;		line 47 in file "../src/LED_B1.c"
  7990 ;; Parameters:    Size  Location     Type
  7991 ;;		None
  7992 ;; Auto vars:     Size  Location     Type
  7993 ;;		None
  7994 ;; Return value:  Size  Location     Type
  7995 ;;		None               void
  7996 ;; Registers used:
  7997 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7998 ;; Tracked objects:
  7999 ;;		On entry : 0/0
  8000 ;;		On exit  : 0/0
  8001 ;;		Unchanged: 0/0
  8002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8007 ;;Total ram usage:        0 bytes
  8008 ;; Hardware stack levels used:    1
  8009 ;; Hardware stack levels required when called:    7
  8010 ;; This function calls:
  8011 ;;		_setLED_Main
  8012 ;; This function is called by:
  8013 ;;		_main
  8014 ;; This function uses a non-reentrant model
  8015 ;;
  8016                           
  8017                           
  8018                           ;psect for function _LED_Main
  8019  10F3                     _LED_Main:	
  8020                           
  8021                           ;LED_B1.c: 67: setLED_Main(99);
  8022                           
  8023                           ;incstack = 0
  8024                           ; Regs used in _LED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8025  10F3  3063               	movlw	99
  8026  10F4  3195  25B4         	fcall	_setLED_Main
  8027  10F6  0008               	return
  8028  10F7                     __end_of_LED_Main:	
  8029                           
  8030                           	psect	text40
  8031  15B4                     __ptext40:	
  8032 ;; *************** function _setLED_Main *****************
  8033 ;; Defined at:
  8034 ;;		line 229 in file "../src/LED_B1.c"
  8035 ;; Parameters:    Size  Location     Type
  8036 ;;  led             1    wreg     unsigned char 
  8037 ;; Auto vars:     Size  Location     Type
  8038 ;;  led             1    4[BANK0 ] unsigned char 
  8039 ;; Return value:  Size  Location     Type
  8040 ;;		None               void
  8041 ;; Registers used:
  8042 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8043 ;; Tracked objects:
  8044 ;;		On entry : 0/0
  8045 ;;		On exit  : 0/0
  8046 ;;		Unchanged: 0/0
  8047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8049 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8050 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8051 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8052 ;;Total ram usage:        3 bytes
  8053 ;; Hardware stack levels used:    1
  8054 ;; Hardware stack levels required when called:    6
  8055 ;; This function calls:
  8056 ;;		_LedPointSelect
  8057 ;; This function is called by:
  8058 ;;		_LED_Main
  8059 ;; This function uses a non-reentrant model
  8060 ;;
  8061                           
  8062                           
  8063                           ;psect for function _setLED_Main
  8064  15B4                     _setLED_Main:	
  8065                           
  8066                           ;incstack = 0
  8067                           ; Regs used in _setLED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8068                           ;setLED_Main@led stored from wreg
  8069  15B4  0020               	movlb	0	; select bank0
  8070  15B5  00A4               	movwf	setLED_Main@led
  8071                           
  8072                           ;LED_B1.c: 230: LedPointSelect(led);
  8073  15B6  0824               	movf	setLED_Main@led,w
  8074  15B7  3191  21DF  3195   	fcall	_LedPointSelect
  8075                           
  8076                           ;LED_B1.c: 231: if (LED->GO == 1) {
  8077  15BA  0021               	movlb	1	; select bank1
  8078  15BB  0852               	movf	_LED^(0+128),w
  8079  15BC  0086               	movwf	6
  8080  15BD  0187               	clrf	7
  8081  15BE  1C81               	btfss	1,1
  8082  15BF  0008               	return
  8083                           
  8084                           ;LED_B1.c: 232: LED->Time++;
  8085  15C0  0A52               	incf	_LED^(0+128),w
  8086  15C1  0086               	movwf	6
  8087  15C2  0187               	clrf	7
  8088  15C3  3001               	movlw	1
  8089  15C4  0781               	addwf	1,f
  8090  15C5  3141               	addfsr 1,1
  8091  15C6  1803               	skipnc
  8092  15C7  0A81               	incf	1,f
  8093                           
  8094                           ;LED_B1.c: 233: if (LED->Time >= (500 / 20)) {
  8095  15C8  0A52               	incf	_LED^(0+128),w
  8096  15C9  0086               	movwf	6
  8097  15CA  0187               	clrf	7
  8098  15CB  3F40               	moviw [0]fsr1
  8099  15CC  0020               	movlb	0	; select bank0
  8100  15CD  00A2               	movwf	??_setLED_Main
  8101  15CE  3F41               	moviw [1]fsr1
  8102  15CF  00A3               	movwf	??_setLED_Main+1
  8103  15D0  3000               	movlw	0
  8104  15D1  0223               	subwf	??_setLED_Main+1,w
  8105  15D2  3019               	movlw	25
  8106  15D3  1903               	skipnz
  8107  15D4  0222               	subwf	??_setLED_Main,w
  8108  15D5  1C03               	skipc
  8109  15D6  0008               	return
  8110                           
  8111                           ;LED_B1.c: 234: LED->Time = 0;
  8112  15D7  0021               	movlb	1	; select bank1
  8113  15D8  0A52               	incf	_LED^(0+128),w
  8114  15D9  0086               	movwf	6
  8115  15DA  0187               	clrf	7
  8116  15DB  3000               	movlw	0
  8117  15DC  3FC0               	movwi [0]fsr1
  8118  15DD  3FC1               	movwi [1]fsr1
  8119                           
  8120                           ;LED_B1.c: 252: if (led == 99) {
  8121  15DE  0020               	movlb	0	; select bank0
  8122  15DF  0824               	movf	setLED_Main@led,w
  8123  15E0  3A63               	xorlw	99
  8124  15E1  1D03               	skipz
  8125  15E2  0008               	return
  8126                           
  8127                           ;LED_B1.c: 253: RB5 = RB5 == 1 ? 0 : 1;
  8128  15E3  3020               	movlw	32
  8129  15E4  068D               	xorwf	13,f
  8130  15E5  0008               	return
  8131  15E6                     __end_of_setLED_Main:	
  8132                           
  8133                           	psect	text41
  8134  10EF                     __ptext41:	
  8135 ;; *************** function _LED_Initialization *****************
  8136 ;; Defined at:
  8137 ;;		line 31 in file "../src/LED_B1.c"
  8138 ;; Parameters:    Size  Location     Type
  8139 ;;		None
  8140 ;; Auto vars:     Size  Location     Type
  8141 ;;		None
  8142 ;; Return value:  Size  Location     Type
  8143 ;;		None               void
  8144 ;; Registers used:
  8145 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8146 ;; Tracked objects:
  8147 ;;		On entry : 0/0
  8148 ;;		On exit  : 0/0
  8149 ;;		Unchanged: 0/0
  8150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8155 ;;Total ram usage:        0 bytes
  8156 ;; Hardware stack levels used:    1
  8157 ;; Hardware stack levels required when called:    8
  8158 ;; This function calls:
  8159 ;;		_setLED_Initialization
  8160 ;; This function is called by:
  8161 ;;		_main
  8162 ;; This function uses a non-reentrant model
  8163 ;;
  8164                           
  8165                           
  8166                           ;psect for function _LED_Initialization
  8167  10EF                     _LED_Initialization:	
  8168                           
  8169                           ;LED_B1.c: 42: setLED_Initialization(99);
  8170                           
  8171                           ;incstack = 0
  8172                           ; Regs used in _LED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8173  10EF  3063               	movlw	99
  8174  10F0  3192  228A         	fcall	_setLED_Initialization
  8175  10F2  0008               	return
  8176  10F3                     __end_of_LED_Initialization:	
  8177                           
  8178                           	psect	text42
  8179  128A                     __ptext42:	
  8180 ;; *************** function _setLED_Initialization *****************
  8181 ;; Defined at:
  8182 ;;		line 74 in file "../src/LED_B1.c"
  8183 ;; Parameters:    Size  Location     Type
  8184 ;;  led             1    wreg     unsigned char 
  8185 ;; Auto vars:     Size  Location     Type
  8186 ;;  led             1    4[BANK0 ] unsigned char 
  8187 ;; Return value:  Size  Location     Type
  8188 ;;		None               void
  8189 ;; Registers used:
  8190 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8191 ;; Tracked objects:
  8192 ;;		On entry : 0/0
  8193 ;;		On exit  : 0/0
  8194 ;;		Unchanged: 0/0
  8195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8197 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8199 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8200 ;;Total ram usage:        1 bytes
  8201 ;; Hardware stack levels used:    1
  8202 ;; Hardware stack levels required when called:    7
  8203 ;; This function calls:
  8204 ;;		_LedPointSelect
  8205 ;;		_setLED
  8206 ;; This function is called by:
  8207 ;;		_LED_Initialization
  8208 ;; This function uses a non-reentrant model
  8209 ;;
  8210                           
  8211                           
  8212                           ;psect for function _setLED_Initialization
  8213  128A                     _setLED_Initialization:	
  8214                           
  8215                           ;incstack = 0
  8216                           ; Regs used in _setLED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8217                           ;setLED_Initialization@led stored from wreg
  8218  128A  0020               	movlb	0	; select bank0
  8219  128B  00A4               	movwf	setLED_Initialization@led
  8220                           
  8221                           ;LED_B1.c: 75: LedPointSelect(led);
  8222  128C  0824               	movf	setLED_Initialization@led,w
  8223  128D  3191  21DF  3192   	fcall	_LedPointSelect
  8224                           
  8225                           ;LED_B1.c: 76: LED->Enable = 1;
  8226  1290  0021               	movlb	1	; select bank1
  8227  1291  0852               	movf	_LED^(0+128),w
  8228  1292  0086               	movwf	6
  8229  1293  0187               	clrf	7
  8230  1294  1401               	bsf	1,0
  8231                           
  8232                           ;LED_B1.c: 77: setLED(led, 0);
  8233  1295  0020               	movlb	0	; select bank0
  8234  1296  01A2               	clrf	setLED@command
  8235  1297  0824               	movf	setLED_Initialization@led,w
  8236  1298  3196  2619         	fcall	_setLED
  8237  129A  0008               	return
  8238  129B                     __end_of_setLED_Initialization:	
  8239                           
  8240                           	psect	text43
  8241  1734                     __ptext43:	
  8242 ;; *************** function _Flash_Memory_Main *****************
  8243 ;; Defined at:
  8244 ;;		line 976 in file "../src/MCU_B1.c"
  8245 ;; Parameters:    Size  Location     Type
  8246 ;;		None
  8247 ;; Auto vars:     Size  Location     Type
  8248 ;;  key_Status      1    7[BANK0 ] unsigned char 
  8249 ;; Return value:  Size  Location     Type
  8250 ;;		None               void
  8251 ;; Registers used:
  8252 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8253 ;; Tracked objects:
  8254 ;;		On entry : 0/0
  8255 ;;		On exit  : 0/0
  8256 ;;		Unchanged: 0/0
  8257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8259 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8260 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8261 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8262 ;;Total ram usage:        3 bytes
  8263 ;; Hardware stack levels used:    1
  8264 ;; Hardware stack levels required when called:    8
  8265 ;; This function calls:
  8266 ;;		_Flash_Memory_Modify
  8267 ;;		_getAll_Sw_KeyStatus
  8268 ;;		_getMain_All_LightsStatus
  8269 ;; This function is called by:
  8270 ;;		_main
  8271 ;; This function uses a non-reentrant model
  8272 ;;
  8273                           
  8274                           
  8275                           ;psect for function _Flash_Memory_Main
  8276  1734                     _Flash_Memory_Main:	
  8277                           
  8278                           ;MCU_B1.c: 977: char key_Status = 0;
  8279                           
  8280                           ;incstack = 0
  8281                           ; Regs used in _Flash_Memory_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8282  1734  0020               	movlb	0	; select bank0
  8283  1735  01A7               	clrf	Flash_Memory_Main@key_Status
  8284                           
  8285                           ;MCU_B1.c: 979: key_Status = getAll_Sw_KeyStatus();
  8286  1736  3192  2279  3197   	fcall	_getAll_Sw_KeyStatus
  8287  1739  0020               	movlb	0	; select bank0
  8288  173A  00A6               	movwf	??_Flash_Memory_Main
  8289  173B  0826               	movf	??_Flash_Memory_Main,w
  8290  173C  00A7               	movwf	Flash_Memory_Main@key_Status
  8291                           
  8292                           ;MCU_B1.c: 981: if (Memory.Modify == 1) {
  8293  173D  0023               	movlb	3	; select bank3
  8294  173E  1C44               	btfss	(_Memory^(0+384)+36),0
  8295  173F  0008               	return
  8296                           
  8297                           ;MCU_B1.c: 982: Memory.GO = getMain_All_LightsStatus() == 0 && key_Status == 0 ? 1 : 0;
  8298  1740  0020               	movlb	0	; select bank0
  8299  1741  01A8               	clrf	_Flash_Memory_Main$2776
  8300  1742  3191  2164  3197   	fcall	_getMain_All_LightsStatus
  8301  1745  3800               	iorlw	0
  8302  1746  1D03               	skipz
  8303  1747  2F4E               	goto	l5925
  8304  1748  0020               	movlb	0	; select bank0
  8305  1749  08A7               	movf	Flash_Memory_Main@key_Status,f
  8306  174A  1D03               	skipz
  8307  174B  2F4E               	goto	l5925
  8308  174C  01A8               	clrf	_Flash_Memory_Main$2776
  8309  174D  0AA8               	incf	_Flash_Memory_Main$2776,f
  8310  174E                     l5925:	
  8311  174E  0020               	movlb	0	; select bank0
  8312  174F  0828               	movf	_Flash_Memory_Main$2776,w
  8313  1750  0023               	movlb	3	; select bank3
  8314  1751  10C4               	bcf	(_Memory^(0+384)+36),1
  8315  1752  1D03               	skipz
  8316  1753  14C4               	bsf	(_Memory^(0+384)+36),1
  8317                           
  8318                           ;MCU_B1.c: 983: if (Memory.GO == 1) {
  8319  1754  1CC4               	btfss	(_Memory^(0+384)+36),1
  8320  1755  2F6F               	goto	l906
  8321                           
  8322                           ;MCU_B1.c: 984: Memory.Runtime = 1;
  8323  1756  15C4               	bsf	(_Memory^(0+384)+36),3
  8324                           
  8325                           ;MCU_B1.c: 985: Memory.Time++;
  8326  1757  3001               	movlw	1
  8327  1758  07C2               	addwf	(_Memory^(0+384)+34),f
  8328  1759  3000               	movlw	0
  8329  175A  3DC3               	addwfc	((_Memory+1)^(0+384)+34),f
  8330                           
  8331                           ;MCU_B1.c: 986: if (Memory.Time == (200 / 20)) {
  8332  175B  3022               	movlw	34
  8333  175C  3EA0               	addlw	_Memory& (0+255)
  8334  175D  0086               	movwf	6
  8335  175E  3001               	movlw	1	; select bank3/4
  8336  175F  0087               	movwf	7
  8337  1760  3F40               	moviw [0]fsr1
  8338  1761  3A0A               	xorlw	10
  8339  1762  1D03               	skipz
  8340  1763  2F66               	goto	u6395
  8341  1764  3F41               	moviw [1]fsr1
  8342  1765  3A00               	xorlw	0
  8343  1766                     u6395:	
  8344  1766  1D03               	skipz
  8345  1767  0008               	return
  8346                           
  8347                           ;MCU_B1.c: 987: Memory.Time = 0;
  8348  1768  01C2               	clrf	(_Memory^(0+384)+34)
  8349  1769  01C3               	clrf	((_Memory+1)^(0+384)+34)
  8350                           
  8351                           ;MCU_B1.c: 988: Memory.Modify = 0;
  8352  176A  1044               	bcf	(_Memory^(0+384)+36),0
  8353                           
  8354                           ;MCU_B1.c: 989: Memory.GO = 0;
  8355  176B  10C4               	bcf	(_Memory^(0+384)+36),1
  8356                           
  8357                           ;MCU_B1.c: 990: Flash_Memory_Modify();
  8358  176C  318C  2489         	fcall	_Flash_Memory_Modify
  8359                           
  8360                           ;MCU_B1.c: 991: }
  8361                           ;MCU_B1.c: 992: } else {
  8362  176E  0008               	return
  8363  176F                     l906:	
  8364                           
  8365                           ;MCU_B1.c: 993: if (Memory.Runtime == 1) {
  8366  176F  1DC4               	btfss	(_Memory^(0+384)+36),3
  8367  1770  0008               	return
  8368                           
  8369                           ;MCU_B1.c: 994: Memory.Runtime = 0;
  8370  1771  11C4               	bcf	(_Memory^(0+384)+36),3
  8371                           
  8372                           ;MCU_B1.c: 995: Memory.Time = 0;
  8373  1772  01C2               	clrf	(_Memory^(0+384)+34)
  8374  1773  01C3               	clrf	((_Memory+1)^(0+384)+34)
  8375  1774  0008               	return
  8376  1775                     __end_of_Flash_Memory_Main:	
  8377                           
  8378                           	psect	text44
  8379  1279                     __ptext44:	
  8380 ;; *************** function _getAll_Sw_KeyStatus *****************
  8381 ;; Defined at:
  8382 ;;		line 279 in file "../src/Switch_B1.c"
  8383 ;; Parameters:    Size  Location     Type
  8384 ;;		None
  8385 ;; Auto vars:     Size  Location     Type
  8386 ;;  status          1    1[BANK0 ] unsigned char 
  8387 ;; Return value:  Size  Location     Type
  8388 ;;                  1    wreg      unsigned char 
  8389 ;; Registers used:
  8390 ;;		wreg, status,2
  8391 ;; Tracked objects:
  8392 ;;		On entry : 0/0
  8393 ;;		On exit  : 0/0
  8394 ;;		Unchanged: 0/0
  8395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8397 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8398 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8399 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8400 ;;Total ram usage:        3 bytes
  8401 ;; Hardware stack levels used:    1
  8402 ;; Hardware stack levels required when called:    5
  8403 ;; This function calls:
  8404 ;;		Nothing
  8405 ;; This function is called by:
  8406 ;;		_Flash_Memory_Main
  8407 ;; This function uses a non-reentrant model
  8408 ;;
  8409                           
  8410                           
  8411                           ;psect for function _getAll_Sw_KeyStatus
  8412  1279                     _getAll_Sw_KeyStatus:	
  8413                           
  8414                           ;Switch_B1.c: 280: char status = 0;
  8415                           
  8416                           ;incstack = 0
  8417                           ; Regs used in _getAll_Sw_KeyStatus: [wreg+status,2]
  8418  1279  0020               	movlb	0	; select bank0
  8419  127A  01A1               	clrf	getAll_Sw_KeyStatus@status
  8420                           
  8421                           ;Switch_B1.c: 299: status = RA6 == 1 || RA4 == 1 || RA0 == 1 || RA7 == 1 ? 1 : 0;
  8422  127B  01A2               	clrf	_getAll_Sw_KeyStatus$5600
  8423  127C  0AA2               	incf	_getAll_Sw_KeyStatus$5600,f
  8424  127D  1F0C               	btfss	12,6	;volatile
  8425  127E  1A0C               	btfsc	12,4	;volatile
  8426  127F  2A84               	goto	l5567
  8427  1280  1C0C               	btfss	12,0	;volatile
  8428  1281  1B8C               	btfsc	12,7	;volatile
  8429  1282  2A84               	goto	l5567
  8430  1283  01A2               	clrf	_getAll_Sw_KeyStatus$5600
  8431  1284                     l5567:	
  8432  1284  0822               	movf	_getAll_Sw_KeyStatus$5600,w
  8433  1285  00A0               	movwf	??_getAll_Sw_KeyStatus
  8434  1286  0820               	movf	??_getAll_Sw_KeyStatus,w
  8435  1287  00A1               	movwf	getAll_Sw_KeyStatus@status
  8436                           
  8437                           ;Switch_B1.c: 303: return status;
  8438  1288  0821               	movf	getAll_Sw_KeyStatus@status,w
  8439  1289  0008               	return
  8440  128A                     __end_of_getAll_Sw_KeyStatus:	
  8441                           
  8442                           	psect	text45
  8443  0C89                     __ptext45:	
  8444 ;; *************** function _Flash_Memory_Modify *****************
  8445 ;; Defined at:
  8446 ;;		line 1053 in file "../src/MCU_B1.c"
  8447 ;; Parameters:    Size  Location     Type
  8448 ;;		None
  8449 ;; Auto vars:     Size  Location     Type
  8450 ;;  i               1    5[BANK0 ] unsigned char 
  8451 ;; Return value:  Size  Location     Type
  8452 ;;		None               void
  8453 ;; Registers used:
  8454 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8455 ;; Tracked objects:
  8456 ;;		On entry : 0/0
  8457 ;;		On exit  : 0/0
  8458 ;;		Unchanged: 0/0
  8459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8461 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8462 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8463 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8464 ;;Total ram usage:        2 bytes
  8465 ;; Hardware stack levels used:    1
  8466 ;; Hardware stack levels required when called:    7
  8467 ;; This function calls:
  8468 ;;		_Flash_Memory_Erasing
  8469 ;;		_Flash_Memory_Read
  8470 ;;		_Flash_Memory_Write
  8471 ;;		_setMemory_Data
  8472 ;; This function is called by:
  8473 ;;		_Flash_Memory_Main
  8474 ;; This function uses a non-reentrant model
  8475 ;;
  8476                           
  8477                           
  8478                           ;psect for function _Flash_Memory_Modify
  8479  0C89                     _Flash_Memory_Modify:	
  8480                           
  8481                           ;MCU_B1.c: 1054: char i = 0;
  8482                           
  8483                           ;incstack = 0
  8484                           ; Regs used in _Flash_Memory_Modify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8485  0C89  0020               	movlb	0	; select bank0
  8486  0C8A  01A5               	clrf	Flash_Memory_Modify@i
  8487                           
  8488                           ;MCU_B1.c: 1055: for (i = 0; i < 32; i++) {
  8489  0C8B  01A5               	clrf	Flash_Memory_Modify@i
  8490  0C8C  3020               	movlw	32
  8491  0C8D  0225               	subwf	Flash_Memory_Modify@i,w
  8492  0C8E  1803               	btfsc	3,0
  8493  0C8F  2CA5               	goto	l5585
  8494  0C90                     l5579:	
  8495                           
  8496                           ;MCU_B1.c: 1056: Memory.Data[i] = Flash_Memory_Read(i);
  8497  0C90  0825               	movf	Flash_Memory_Modify@i,w
  8498  0C91  3193  23CB  318C   	fcall	_Flash_Memory_Read
  8499  0C94  0020               	movlb	0	; select bank0
  8500  0C95  00A4               	movwf	??_Flash_Memory_Modify
  8501  0C96  0825               	movf	Flash_Memory_Modify@i,w
  8502  0C97  3EA0               	addlw	_Memory& (0+255)
  8503  0C98  0086               	movwf	6
  8504  0C99  3001               	movlw	1	; select bank3/4
  8505  0C9A  0087               	movwf	7
  8506  0C9B  0824               	movf	??_Flash_Memory_Modify,w
  8507  0C9C  0081               	movwf	1
  8508  0C9D  3001               	movlw	1
  8509  0C9E  00A4               	movwf	??_Flash_Memory_Modify
  8510  0C9F  0824               	movf	??_Flash_Memory_Modify,w
  8511  0CA0  07A5               	addwf	Flash_Memory_Modify@i,f
  8512  0CA1  3020               	movlw	32
  8513  0CA2  0225               	subwf	Flash_Memory_Modify@i,w
  8514  0CA3  1C03               	skipc
  8515  0CA4  2C90               	goto	l5579
  8516  0CA5                     l5585:	
  8517                           
  8518                           ;MCU_B1.c: 1057: }
  8519                           ;MCU_B1.c: 1058: setMemory_Data(0, product->Data[12]);
  8520  0CA5  0021               	movlb	1	; select bank1
  8521  0CA6  086E               	movf	_product^(0+128),w
  8522  0CA7  0086               	movwf	6
  8523  0CA8  3001               	movlw	1	; select bank2/3
  8524  0CA9  0087               	movwf	7
  8525  0CAA  3001               	movlw	1	; select bank2/3
  8526  0CAB  3F4C               	moviw [12]fsr1
  8527  0CAC  0020               	movlb	0	; select bank0
  8528  0CAD  00A0               	movwf	setMemory_Data@data
  8529  0CAE  3000               	movlw	0
  8530  0CAF  3191  21EB  318C   	fcall	_setMemory_Data
  8531                           
  8532                           ;MCU_B1.c: 1059: setMemory_Data(1, product->Data[13]);
  8533  0CB2  0021               	movlb	1	; select bank1
  8534  0CB3  086E               	movf	_product^(0+128),w
  8535  0CB4  0086               	movwf	6
  8536  0CB5  3001               	movlw	1	; select bank2/3
  8537  0CB6  0087               	movwf	7
  8538  0CB7  3001               	movlw	1	; select bank2/3
  8539  0CB8  3F4D               	moviw [13]fsr1
  8540  0CB9  0020               	movlb	0	; select bank0
  8541  0CBA  00A0               	movwf	setMemory_Data@data
  8542  0CBB  3001               	movlw	1
  8543  0CBC  3191  21EB  318C   	fcall	_setMemory_Data
  8544                           
  8545                           ;MCU_B1.c: 1060: setMemory_Data(2, product->Data[14]);
  8546  0CBF  0021               	movlb	1	; select bank1
  8547  0CC0  086E               	movf	_product^(0+128),w
  8548  0CC1  0086               	movwf	6
  8549  0CC2  3001               	movlw	1	; select bank2/3
  8550  0CC3  0087               	movwf	7
  8551  0CC4  3001               	movlw	1	; select bank2/3
  8552  0CC5  3F4E               	moviw [14]fsr1
  8553  0CC6  0020               	movlb	0	; select bank0
  8554  0CC7  00A0               	movwf	setMemory_Data@data
  8555  0CC8  3002               	movlw	2
  8556  0CC9  3191  21EB  318C   	fcall	_setMemory_Data
  8557                           
  8558                           ;MCU_B1.c: 1062: setMemory_Data(3, product->Data[21]);
  8559  0CCC  0021               	movlb	1	; select bank1
  8560  0CCD  086E               	movf	_product^(0+128),w
  8561  0CCE  0086               	movwf	6
  8562  0CCF  3001               	movlw	1	; select bank2/3
  8563  0CD0  0087               	movwf	7
  8564  0CD1  3001               	movlw	1	; select bank2/3
  8565  0CD2  3F55               	moviw [21]fsr1
  8566  0CD3  0020               	movlb	0	; select bank0
  8567  0CD4  00A0               	movwf	setMemory_Data@data
  8568  0CD5  3003               	movlw	3
  8569  0CD6  3191  21EB  318C   	fcall	_setMemory_Data
  8570                           
  8571                           ;MCU_B1.c: 1063: setMemory_Data(4, product->Data[22]);
  8572  0CD9  0021               	movlb	1	; select bank1
  8573  0CDA  086E               	movf	_product^(0+128),w
  8574  0CDB  0086               	movwf	6
  8575  0CDC  3001               	movlw	1	; select bank2/3
  8576  0CDD  0087               	movwf	7
  8577  0CDE  3001               	movlw	1	; select bank2/3
  8578  0CDF  3F56               	moviw [22]fsr1
  8579  0CE0  0020               	movlb	0	; select bank0
  8580  0CE1  00A0               	movwf	setMemory_Data@data
  8581  0CE2  3004               	movlw	4
  8582  0CE3  3191  21EB  318C   	fcall	_setMemory_Data
  8583                           
  8584                           ;MCU_B1.c: 1064: setMemory_Data(5, product->Data[23]);
  8585  0CE6  0021               	movlb	1	; select bank1
  8586  0CE7  086E               	movf	_product^(0+128),w
  8587  0CE8  0086               	movwf	6
  8588  0CE9  3001               	movlw	1	; select bank2/3
  8589  0CEA  0087               	movwf	7
  8590  0CEB  3001               	movlw	1	; select bank2/3
  8591  0CEC  3F57               	moviw [23]fsr1
  8592  0CED  0020               	movlb	0	; select bank0
  8593  0CEE  00A0               	movwf	setMemory_Data@data
  8594  0CEF  3005               	movlw	5
  8595  0CF0  3191  21EB  318C   	fcall	_setMemory_Data
  8596                           
  8597                           ;MCU_B1.c: 1065: if (myMain.SaveDimmer == 1) {
  8598  0CF3  0021               	movlb	1	; select bank1
  8599  0CF4  1EAA               	btfss	(_myMain^(0+128)+10),5
  8600  0CF5  2D00               	goto	l5593
  8601                           
  8602                           ;MCU_B1.c: 1066: myMain.SaveDimmer = 0;
  8603  0CF6  12AA               	bcf	(_myMain^(0+128)+10),5
  8604                           
  8605                           ;MCU_B1.c: 1067: setMemory_Data(30, 0xaa);
  8606  0CF7  30AA               	movlw	170
  8607  0CF8  0020               	movlb	0	; select bank0
  8608  0CF9  00A4               	movwf	??_Flash_Memory_Modify
  8609  0CFA  0824               	movf	??_Flash_Memory_Modify,w
  8610  0CFB  00A0               	movwf	setMemory_Data@data
  8611  0CFC  301E               	movlw	30
  8612  0CFD  3191  21EB  318C   	fcall	_setMemory_Data
  8613  0D00                     l5593:	
  8614                           
  8615                           ;MCU_B1.c: 1068: }
  8616                           ;MCU_B1.c: 1070: if (Memory.LoopSave == 1) {
  8617  0D00  0023               	movlb	3	; select bank3
  8618  0D01  1D44               	btfss	(_Memory^(0+384)+36),2
  8619  0D02  2D07               	goto	l930
  8620                           
  8621                           ;MCU_B1.c: 1071: Memory.LoopSave = 0;
  8622  0D03  1144               	bcf	(_Memory^(0+384)+36),2
  8623                           
  8624                           ;MCU_B1.c: 1072: myMain.FirstOpen = 0;
  8625  0D04  0021               	movlb	1	; select bank1
  8626  0D05  11A0               	bcf	_myMain^(0+128),3
  8627                           
  8628                           ;MCU_B1.c: 1073: myMain.First = 0;
  8629  0D06  12A0               	bcf	_myMain^(0+128),5
  8630  0D07                     l930:	
  8631                           
  8632                           ;MCU_B1.c: 1075: }
  8633                           ;MCU_B1.c: 1076: GIE = 0;
  8634  0D07  138B               	bcf	11,7	;volatile
  8635                           
  8636                           ;MCU_B1.c: 1077: Flash_Memory_Erasing();
  8637  0D08  3191  21F7  318C   	fcall	_Flash_Memory_Erasing
  8638                           
  8639                           ;MCU_B1.c: 1078: Flash_Memory_Write();
  8640  0D0B  3195  2585         	fcall	_Flash_Memory_Write
  8641                           
  8642                           ;MCU_B1.c: 1079: GIE = 1;
  8643  0D0D  178B               	bsf	11,7	;volatile
  8644  0D0E  0008               	return
  8645  0D0F                     __end_of_Flash_Memory_Modify:	
  8646                           
  8647                           	psect	text46
  8648  11F7                     __ptext46:	
  8649 ;; *************** function _Flash_Memory_Erasing *****************
  8650 ;; Defined at:
  8651 ;;		line 1042 in file "../src/MCU_B1.c"
  8652 ;; Parameters:    Size  Location     Type
  8653 ;;		None
  8654 ;; Auto vars:     Size  Location     Type
  8655 ;;		None
  8656 ;; Return value:  Size  Location     Type
  8657 ;;		None               void
  8658 ;; Registers used:
  8659 ;;		wreg, status,2, status,0, pclath, cstack
  8660 ;; Tracked objects:
  8661 ;;		On entry : 0/0
  8662 ;;		On exit  : 0/0
  8663 ;;		Unchanged: 0/0
  8664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8669 ;;Total ram usage:        0 bytes
  8670 ;; Hardware stack levels used:    1
  8671 ;; Hardware stack levels required when called:    6
  8672 ;; This function calls:
  8673 ;;		_Flash_Memory_Unlock
  8674 ;; This function is called by:
  8675 ;;		_Flash_Memory_Modify
  8676 ;; This function uses a non-reentrant model
  8677 ;;
  8678                           
  8679                           
  8680                           ;psect for function _Flash_Memory_Erasing
  8681  11F7                     _Flash_Memory_Erasing:	
  8682                           
  8683                           ;MCU_B1.c: 1043: CFGS = 0;
  8684                           
  8685                           ;incstack = 0
  8686                           ; Regs used in _Flash_Memory_Erasing: [wreg+status,2+status,0+pclath+cstack]
  8687  11F7  0023               	movlb	3	; select bank3
  8688  11F8  1315               	bcf	21,6	;volatile
  8689                           
  8690                           ;MCU_B1.c: 1044: PMADRH = 0x30;
  8691  11F9  3030               	movlw	48
  8692  11FA  0092               	movwf	18	;volatile
  8693                           
  8694                           ;MCU_B1.c: 1045: PMADRL = 0x00;
  8695  11FB  0191               	clrf	17	;volatile
  8696                           
  8697                           ;MCU_B1.c: 1046: FREE = 1;
  8698  11FC  1615               	bsf	21,4	;volatile
  8699                           
  8700                           ;MCU_B1.c: 1047: WREN = 1;
  8701  11FD  1515               	bsf	21,2	;volatile
  8702                           
  8703                           ;MCU_B1.c: 1048: Flash_Memory_Unlock();
  8704  11FE  3191  215B         	fcall	_Flash_Memory_Unlock
  8705                           
  8706                           ;MCU_B1.c: 1049: WREN = 0;
  8707  1200  0023               	movlb	3	; select bank3
  8708  1201  1115               	bcf	21,2	;volatile
  8709  1202  0008               	return
  8710  1203                     __end_of_Flash_Memory_Erasing:	
  8711                           
  8712                           	psect	text47
  8713  0602                     __ptext47:	
  8714 ;; *************** function _Flash_Memory_Initialization *****************
  8715 ;; Defined at:
  8716 ;;		line 932 in file "../src/MCU_B1.c"
  8717 ;; Parameters:    Size  Location     Type
  8718 ;;		None
  8719 ;; Auto vars:     Size  Location     Type
  8720 ;;  value           1    5[BANK0 ] unsigned char 
  8721 ;; Return value:  Size  Location     Type
  8722 ;;		None               void
  8723 ;; Registers used:
  8724 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8725 ;; Tracked objects:
  8726 ;;		On entry : 0/0
  8727 ;;		On exit  : 0/0
  8728 ;;		Unchanged: 0/0
  8729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8731 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8732 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8733 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8734 ;;Total ram usage:        2 bytes
  8735 ;; Hardware stack levels used:    1
  8736 ;; Hardware stack levels required when called:    7
  8737 ;; This function calls:
  8738 ;;		_Flash_Memory_Read
  8739 ;;		_Flash_Memory_Write
  8740 ;;		_setMemory_Data
  8741 ;; This function is called by:
  8742 ;;		_main
  8743 ;; This function uses a non-reentrant model
  8744 ;;
  8745                           
  8746                           
  8747                           ;psect for function _Flash_Memory_Initialization
  8748  0602                     _Flash_Memory_Initialization:	
  8749                           
  8750                           ;MCU_B1.c: 933: char value = 0;
  8751                           
  8752                           ;incstack = 0
  8753                           ; Regs used in _Flash_Memory_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  8754  0602  0020               	movlb	0	; select bank0
  8755  0603  01A5               	clrf	Flash_Memory_Initialization@value
  8756                           
  8757                           ;MCU_B1.c: 934: if (Flash_Memory_Read(31) == 0xaa) {
  8758  0604  301F               	movlw	31
  8759  0605  3193  23CB  3186   	fcall	_Flash_Memory_Read
  8760  0608  3AAA               	xorlw	170
  8761  0609  1D03               	skipz
  8762  060A  2E84               	goto	l5899
  8763                           
  8764                           ;MCU_B1.c: 935: product->Data[12] = Flash_Memory_Read(0);
  8765  060B  3000               	movlw	0
  8766  060C  3193  23CB  3186   	fcall	_Flash_Memory_Read
  8767  060F  0020               	movlb	0	; select bank0
  8768  0610  00A4               	movwf	??_Flash_Memory_Initialization
  8769  0611  0021               	movlb	1	; select bank1
  8770  0612  086E               	movf	_product^(0+128),w
  8771  0613  3E0C               	addlw	12
  8772  0614  0086               	movwf	6
  8773  0615  3001               	movlw	1	; select bank2/3
  8774  0616  0087               	movwf	7
  8775  0617  0020               	movlb	0	; select bank0
  8776  0618  0824               	movf	??_Flash_Memory_Initialization,w
  8777  0619  0081               	movwf	1
  8778                           
  8779                           ;MCU_B1.c: 936: product->Data[13] = Flash_Memory_Read(1);
  8780  061A  3001               	movlw	1
  8781  061B  3193  23CB  3186   	fcall	_Flash_Memory_Read
  8782  061E  0020               	movlb	0	; select bank0
  8783  061F  00A4               	movwf	??_Flash_Memory_Initialization
  8784  0620  0021               	movlb	1	; select bank1
  8785  0621  086E               	movf	_product^(0+128),w
  8786  0622  3E0D               	addlw	13
  8787  0623  0086               	movwf	6
  8788  0624  3001               	movlw	1	; select bank2/3
  8789  0625  0087               	movwf	7
  8790  0626  0020               	movlb	0	; select bank0
  8791  0627  0824               	movf	??_Flash_Memory_Initialization,w
  8792  0628  0081               	movwf	1
  8793                           
  8794                           ;MCU_B1.c: 937: product->Data[14] = Flash_Memory_Read(2);
  8795  0629  3002               	movlw	2
  8796  062A  3193  23CB  3186   	fcall	_Flash_Memory_Read
  8797  062D  0020               	movlb	0	; select bank0
  8798  062E  00A4               	movwf	??_Flash_Memory_Initialization
  8799  062F  0021               	movlb	1	; select bank1
  8800  0630  086E               	movf	_product^(0+128),w
  8801  0631  3E0E               	addlw	14
  8802  0632  0086               	movwf	6
  8803  0633  3001               	movlw	1	; select bank2/3
  8804  0634  0087               	movwf	7
  8805  0635  0020               	movlb	0	; select bank0
  8806  0636  0824               	movf	??_Flash_Memory_Initialization,w
  8807  0637  0081               	movwf	1
  8808                           
  8809                           ;MCU_B1.c: 940: product->Data[21] = Flash_Memory_Read(3);
  8810  0638  3003               	movlw	3
  8811  0639  3193  23CB  3186   	fcall	_Flash_Memory_Read
  8812  063C  0020               	movlb	0	; select bank0
  8813  063D  00A4               	movwf	??_Flash_Memory_Initialization
  8814  063E  0021               	movlb	1	; select bank1
  8815  063F  086E               	movf	_product^(0+128),w
  8816  0640  3E15               	addlw	21
  8817  0641  0086               	movwf	6
  8818  0642  3001               	movlw	1	; select bank2/3
  8819  0643  0087               	movwf	7
  8820  0644  0020               	movlb	0	; select bank0
  8821  0645  0824               	movf	??_Flash_Memory_Initialization,w
  8822  0646  0081               	movwf	1
  8823                           
  8824                           ;MCU_B1.c: 941: product->Data[22] = Flash_Memory_Read(4);
  8825  0647  3004               	movlw	4
  8826  0648  3193  23CB  3186   	fcall	_Flash_Memory_Read
  8827  064B  0020               	movlb	0	; select bank0
  8828  064C  00A4               	movwf	??_Flash_Memory_Initialization
  8829  064D  0021               	movlb	1	; select bank1
  8830  064E  086E               	movf	_product^(0+128),w
  8831  064F  3E16               	addlw	22
  8832  0650  0086               	movwf	6
  8833  0651  3001               	movlw	1	; select bank2/3
  8834  0652  0087               	movwf	7
  8835  0653  0020               	movlb	0	; select bank0
  8836  0654  0824               	movf	??_Flash_Memory_Initialization,w
  8837  0655  0081               	movwf	1
  8838                           
  8839                           ;MCU_B1.c: 942: product->Data[23] = Flash_Memory_Read(5);
  8840  0656  3005               	movlw	5
  8841  0657  3193  23CB  3186   	fcall	_Flash_Memory_Read
  8842  065A  0020               	movlb	0	; select bank0
  8843  065B  00A4               	movwf	??_Flash_Memory_Initialization
  8844  065C  0021               	movlb	1	; select bank1
  8845  065D  086E               	movf	_product^(0+128),w
  8846  065E  3E17               	addlw	23
  8847  065F  0086               	movwf	6
  8848  0660  3001               	movlw	1	; select bank2/3
  8849  0661  0087               	movwf	7
  8850  0662  0020               	movlb	0	; select bank0
  8851  0663  0824               	movf	??_Flash_Memory_Initialization,w
  8852  0664  0081               	movwf	1
  8853                           
  8854                           ;MCU_B1.c: 949: if (product->Data[12] == 0xff && product->Data[13] == 0xff && product->D
      +                          ata[14] == 0xff) {
  8855  0665  0021               	movlb	1	; select bank1
  8856  0666  086E               	movf	_product^(0+128),w
  8857  0667  3E0C               	addlw	12
  8858  0668  0086               	movwf	6
  8859  0669  3001               	movlw	1	; select bank2/3
  8860  066A  0087               	movwf	7
  8861  066B  0801               	movf	1,w
  8862  066C  3AFF               	xorlw	255
  8863  066D  1D03               	skipz
  8864  066E  0008               	return
  8865  066F  086E               	movf	_product^(0+128),w
  8866  0670  3E0D               	addlw	13
  8867  0671  0086               	movwf	6
  8868  0672  3001               	movlw	1	; select bank2/3
  8869  0673  0087               	movwf	7
  8870  0674  0801               	movf	1,w
  8871  0675  3AFF               	xorlw	255
  8872  0676  1D03               	skipz
  8873  0677  0008               	return
  8874  0678  086E               	movf	_product^(0+128),w
  8875  0679  3E0E               	addlw	14
  8876  067A  0086               	movwf	6
  8877  067B  3001               	movlw	1	; select bank2/3
  8878  067C  0087               	movwf	7
  8879  067D  0801               	movf	1,w
  8880  067E  3AFF               	xorlw	255
  8881  067F  1D03               	skipz
  8882  0680  0008               	return
  8883                           
  8884                           ;MCU_B1.c: 950: myMain.FirstOpen = 1;
  8885  0681  15A0               	bsf	_myMain^(0+128),3
  8886                           
  8887                           ;MCU_B1.c: 951: myMain.First = 1;
  8888  0682  16A0               	bsf	_myMain^(0+128),5
  8889                           
  8890                           ;MCU_B1.c: 952: }
  8891                           ;MCU_B1.c: 953: } else {
  8892  0683  0008               	return
  8893  0684                     l5899:	
  8894                           
  8895                           ;MCU_B1.c: 955: setMemory_Data(0, 0xff);
  8896  0684  30FF               	movlw	255
  8897  0685  0020               	movlb	0	; select bank0
  8898  0686  00A4               	movwf	??_Flash_Memory_Initialization
  8899  0687  0824               	movf	??_Flash_Memory_Initialization,w
  8900  0688  00A0               	movwf	setMemory_Data@data
  8901  0689  3000               	movlw	0
  8902  068A  3191  21EB  3186   	fcall	_setMemory_Data
  8903                           
  8904                           ;MCU_B1.c: 956: setMemory_Data(1, 0xff);
  8905  068D  30FF               	movlw	255
  8906  068E  0020               	movlb	0	; select bank0
  8907  068F  00A4               	movwf	??_Flash_Memory_Initialization
  8908  0690  0824               	movf	??_Flash_Memory_Initialization,w
  8909  0691  00A0               	movwf	setMemory_Data@data
  8910  0692  3001               	movlw	1
  8911  0693  3191  21EB  3186   	fcall	_setMemory_Data
  8912                           
  8913                           ;MCU_B1.c: 957: setMemory_Data(2, 0xff);
  8914  0696  30FF               	movlw	255
  8915  0697  0020               	movlb	0	; select bank0
  8916  0698  00A4               	movwf	??_Flash_Memory_Initialization
  8917  0699  0824               	movf	??_Flash_Memory_Initialization,w
  8918  069A  00A0               	movwf	setMemory_Data@data
  8919  069B  3002               	movlw	2
  8920  069C  3191  21EB  3186   	fcall	_setMemory_Data
  8921                           
  8922                           ;MCU_B1.c: 958: setMemory_Data(3, 0xff);
  8923  069F  30FF               	movlw	255
  8924  06A0  0020               	movlb	0	; select bank0
  8925  06A1  00A4               	movwf	??_Flash_Memory_Initialization
  8926  06A2  0824               	movf	??_Flash_Memory_Initialization,w
  8927  06A3  00A0               	movwf	setMemory_Data@data
  8928  06A4  3003               	movlw	3
  8929  06A5  3191  21EB  3186   	fcall	_setMemory_Data
  8930                           
  8931                           ;MCU_B1.c: 959: setMemory_Data(4, 0xff);
  8932  06A8  30FF               	movlw	255
  8933  06A9  0020               	movlb	0	; select bank0
  8934  06AA  00A4               	movwf	??_Flash_Memory_Initialization
  8935  06AB  0824               	movf	??_Flash_Memory_Initialization,w
  8936  06AC  00A0               	movwf	setMemory_Data@data
  8937  06AD  3004               	movlw	4
  8938  06AE  3191  21EB  3186   	fcall	_setMemory_Data
  8939                           
  8940                           ;MCU_B1.c: 960: setMemory_Data(5, 0xff);
  8941  06B1  30FF               	movlw	255
  8942  06B2  0020               	movlb	0	; select bank0
  8943  06B3  00A4               	movwf	??_Flash_Memory_Initialization
  8944  06B4  0824               	movf	??_Flash_Memory_Initialization,w
  8945  06B5  00A0               	movwf	setMemory_Data@data
  8946  06B6  3005               	movlw	5
  8947  06B7  3191  21EB  3186   	fcall	_setMemory_Data
  8948                           
  8949                           ;MCU_B1.c: 961: setMemory_Data(31, 0xaa);
  8950  06BA  30AA               	movlw	170
  8951  06BB  0020               	movlb	0	; select bank0
  8952  06BC  00A4               	movwf	??_Flash_Memory_Initialization
  8953  06BD  0824               	movf	??_Flash_Memory_Initialization,w
  8954  06BE  00A0               	movwf	setMemory_Data@data
  8955  06BF  301F               	movlw	31
  8956  06C0  3191  21EB  3186   	fcall	_setMemory_Data
  8957                           
  8958                           ;MCU_B1.c: 966: GIE = 0;
  8959  06C3  138B               	bcf	11,7	;volatile
  8960                           
  8961                           ;MCU_B1.c: 967: Flash_Memory_Write();
  8962  06C4  3195  2585         	fcall	_Flash_Memory_Write
  8963                           
  8964                           ;MCU_B1.c: 968: GIE = 1;
  8965  06C6  178B               	bsf	11,7	;volatile
  8966                           
  8967                           ;MCU_B1.c: 969: myMain.FirstOpen = 1;
  8968  06C7  0021               	movlb	1	; select bank1
  8969  06C8  15A0               	bsf	_myMain^(0+128),3
  8970                           
  8971                           ;MCU_B1.c: 970: myMain.First = 1;
  8972  06C9  16A0               	bsf	_myMain^(0+128),5
  8973                           
  8974                           ;MCU_B1.c: 971: myMain.InitDimmer = 1;
  8975  06CA  162A               	bsf	(_myMain^(0+128)+10),4
  8976  06CB  0008               	return
  8977  06CC                     __end_of_Flash_Memory_Initialization:	
  8978                           
  8979                           	psect	text48
  8980  11EB                     __ptext48:	
  8981 ;; *************** function _setMemory_Data *****************
  8982 ;; Defined at:
  8983 ;;		line 1094 in file "../src/MCU_B1.c"
  8984 ;; Parameters:    Size  Location     Type
  8985 ;;  address         1    wreg     unsigned char 
  8986 ;;  data            1    0[BANK0 ] unsigned char 
  8987 ;; Auto vars:     Size  Location     Type
  8988 ;;  address         1    2[BANK0 ] unsigned char 
  8989 ;; Return value:  Size  Location     Type
  8990 ;;		None               void
  8991 ;; Registers used:
  8992 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8993 ;; Tracked objects:
  8994 ;;		On entry : 0/0
  8995 ;;		On exit  : 0/0
  8996 ;;		Unchanged: 0/0
  8997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8998 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8999 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9000 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9001 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9002 ;;Total ram usage:        3 bytes
  9003 ;; Hardware stack levels used:    1
  9004 ;; Hardware stack levels required when called:    5
  9005 ;; This function calls:
  9006 ;;		Nothing
  9007 ;; This function is called by:
  9008 ;;		_Flash_Memory_Initialization
  9009 ;;		_Flash_Memory_Modify
  9010 ;; This function uses a non-reentrant model
  9011 ;;
  9012                           
  9013                           
  9014                           ;psect for function _setMemory_Data
  9015  11EB                     _setMemory_Data:	
  9016                           
  9017                           ;incstack = 0
  9018                           ; Regs used in _setMemory_Data: [wreg+fsr1l+fsr1h+status,2+status,0]
  9019                           ;setMemory_Data@address stored from wreg
  9020  11EB  0020               	movlb	0	; select bank0
  9021  11EC  00A2               	movwf	setMemory_Data@address
  9022                           
  9023                           ;MCU_B1.c: 1095: Memory.Data[address] = data;
  9024  11ED  0820               	movf	setMemory_Data@data,w
  9025  11EE  00A1               	movwf	??_setMemory_Data
  9026  11EF  0822               	movf	setMemory_Data@address,w
  9027  11F0  3EA0               	addlw	_Memory& (0+255)
  9028  11F1  0086               	movwf	6
  9029  11F2  3001               	movlw	1	; select bank3/4
  9030  11F3  0087               	movwf	7
  9031  11F4  0821               	movf	??_setMemory_Data,w
  9032  11F5  0081               	movwf	1
  9033  11F6  0008               	return
  9034  11F7                     __end_of_setMemory_Data:	
  9035                           
  9036                           	psect	text49
  9037  1585                     __ptext49:	
  9038 ;; *************** function _Flash_Memory_Write *****************
  9039 ;; Defined at:
  9040 ;;		line 1023 in file "../src/MCU_B1.c"
  9041 ;; Parameters:    Size  Location     Type
  9042 ;;		None
  9043 ;; Auto vars:     Size  Location     Type
  9044 ;;  i               1    1[BANK0 ] unsigned char 
  9045 ;; Return value:  Size  Location     Type
  9046 ;;		None               void
  9047 ;; Registers used:
  9048 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9049 ;; Tracked objects:
  9050 ;;		On entry : 0/0
  9051 ;;		On exit  : 0/0
  9052 ;;		Unchanged: 0/0
  9053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9055 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9056 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9057 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9058 ;;Total ram usage:        2 bytes
  9059 ;; Hardware stack levels used:    1
  9060 ;; Hardware stack levels required when called:    6
  9061 ;; This function calls:
  9062 ;;		_Flash_Memory_Unlock
  9063 ;; This function is called by:
  9064 ;;		_Flash_Memory_Initialization
  9065 ;;		_Flash_Memory_Modify
  9066 ;; This function uses a non-reentrant model
  9067 ;;
  9068                           
  9069                           
  9070                           ;psect for function _Flash_Memory_Write
  9071  1585                     _Flash_Memory_Write:	
  9072                           
  9073                           ;MCU_B1.c: 1024: char i = 0;
  9074                           
  9075                           ;incstack = 0
  9076                           ; Regs used in _Flash_Memory_Write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9077  1585  0020               	movlb	0	; select bank0
  9078  1586  01A1               	clrf	Flash_Memory_Write@i
  9079                           
  9080                           ;MCU_B1.c: 1025: CFGS = 0;
  9081  1587  0023               	movlb	3	; select bank3
  9082  1588  1315               	bcf	21,6	;volatile
  9083                           
  9084                           ;MCU_B1.c: 1026: PMADRH = 0x30;
  9085  1589  3030               	movlw	48
  9086  158A  0092               	movwf	18	;volatile
  9087                           
  9088                           ;MCU_B1.c: 1027: PMDATH = 0;
  9089  158B  0194               	clrf	20	;volatile
  9090                           
  9091                           ;MCU_B1.c: 1028: FREE = 0;
  9092  158C  1215               	bcf	21,4	;volatile
  9093                           
  9094                           ;MCU_B1.c: 1029: LWLO = 1;
  9095  158D  1695               	bsf	21,5	;volatile
  9096                           
  9097                           ;MCU_B1.c: 1030: WREN = 1;
  9098  158E  1515               	bsf	21,2	;volatile
  9099                           
  9100                           ;MCU_B1.c: 1031: for (i = 0; i < 32; i++) {
  9101  158F  0020               	movlb	0	; select bank0
  9102  1590  01A1               	clrf	Flash_Memory_Write@i
  9103  1591  3020               	movlw	32
  9104  1592  0221               	subwf	Flash_Memory_Write@i,w
  9105  1593  1803               	btfsc	3,0
  9106  1594  2DAD               	goto	l920
  9107  1595                     l5153:	
  9108                           
  9109                           ;MCU_B1.c: 1032: PMADRL = i;
  9110  1595  0821               	movf	Flash_Memory_Write@i,w
  9111  1596  0023               	movlb	3	; select bank3
  9112  1597  0091               	movwf	17	;volatile
  9113                           
  9114                           ;MCU_B1.c: 1033: PMDATL = Memory.Data[i];
  9115  1598  0020               	movlb	0	; select bank0
  9116  1599  0821               	movf	Flash_Memory_Write@i,w
  9117  159A  3EA0               	addlw	_Memory& (0+255)
  9118  159B  0086               	movwf	6
  9119  159C  3001               	movlw	1	; select bank3/4
  9120  159D  0087               	movwf	7
  9121  159E  0801               	movf	1,w
  9122  159F  0023               	movlb	3	; select bank3
  9123  15A0  0093               	movwf	19	;volatile
  9124                           
  9125                           ;MCU_B1.c: 1034: Flash_Memory_Unlock();
  9126  15A1  3191  215B  3195   	fcall	_Flash_Memory_Unlock
  9127  15A4  3001               	movlw	1
  9128  15A5  0020               	movlb	0	; select bank0
  9129  15A6  00A0               	movwf	??_Flash_Memory_Write
  9130  15A7  0820               	movf	??_Flash_Memory_Write,w
  9131  15A8  07A1               	addwf	Flash_Memory_Write@i,f
  9132  15A9  3020               	movlw	32
  9133  15AA  0221               	subwf	Flash_Memory_Write@i,w
  9134  15AB  1C03               	skipc
  9135  15AC  2D95               	goto	l5153
  9136  15AD                     l920:	
  9137                           
  9138                           ;MCU_B1.c: 1035: }
  9139                           ;MCU_B1.c: 1036: LWLO = 0;
  9140  15AD  0023               	movlb	3	; select bank3
  9141  15AE  1295               	bcf	21,5	;volatile
  9142                           
  9143                           ;MCU_B1.c: 1037: Flash_Memory_Unlock();
  9144  15AF  3191  215B         	fcall	_Flash_Memory_Unlock
  9145                           
  9146                           ;MCU_B1.c: 1038: WREN = 0;
  9147  15B1  0023               	movlb	3	; select bank3
  9148  15B2  1115               	bcf	21,2	;volatile
  9149  15B3  0008               	return
  9150  15B4                     __end_of_Flash_Memory_Write:	
  9151                           
  9152                           	psect	text50
  9153  115B                     __ptext50:	
  9154 ;; *************** function _Flash_Memory_Unlock *****************
  9155 ;; Defined at:
  9156 ;;		line 1002 in file "../src/MCU_B1.c"
  9157 ;; Parameters:    Size  Location     Type
  9158 ;;		None
  9159 ;; Auto vars:     Size  Location     Type
  9160 ;;		None
  9161 ;; Return value:  Size  Location     Type
  9162 ;;		None               void
  9163 ;; Registers used:
  9164 ;;		wreg
  9165 ;; Tracked objects:
  9166 ;;		On entry : 0/0
  9167 ;;		On exit  : 0/0
  9168 ;;		Unchanged: 0/0
  9169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9174 ;;Total ram usage:        0 bytes
  9175 ;; Hardware stack levels used:    1
  9176 ;; Hardware stack levels required when called:    5
  9177 ;; This function calls:
  9178 ;;		Nothing
  9179 ;; This function is called by:
  9180 ;;		_Flash_Memory_Write
  9181 ;;		_Flash_Memory_Erasing
  9182 ;; This function uses a non-reentrant model
  9183 ;;
  9184                           
  9185                           
  9186                           ;psect for function _Flash_Memory_Unlock
  9187  115B                     _Flash_Memory_Unlock:	
  9188                           
  9189                           ;MCU_B1.c: 1003: PMCON2 = 0x55;
  9190                           
  9191                           ;incstack = 0
  9192                           ; Regs used in _Flash_Memory_Unlock: [wreg]
  9193  115B  3055               	movlw	85
  9194  115C  0023               	movlb	3	; select bank3
  9195  115D  0096               	movwf	22	;volatile
  9196                           
  9197                           ;MCU_B1.c: 1004: PMCON2 = 0xaa;
  9198  115E  30AA               	movlw	170
  9199  115F  0096               	movwf	22	;volatile
  9200                           
  9201                           ;MCU_B1.c: 1005: WR = 1;
  9202  1160  1495               	bsf	21,1	;volatile
  9203                           
  9204                           ;MCU_B1.c: 1006: __nop();
  9205  1161  0000               	nop
  9206                           
  9207                           ;MCU_B1.c: 1007: __nop();
  9208  1162  0000               	nop
  9209  1163  0008               	return
  9210  1164                     __end_of_Flash_Memory_Unlock:	
  9211                           
  9212                           	psect	text51
  9213  13CB                     __ptext51:	
  9214 ;; *************** function _Flash_Memory_Read *****************
  9215 ;; Defined at:
  9216 ;;		line 1011 in file "../src/MCU_B1.c"
  9217 ;; Parameters:    Size  Location     Type
  9218 ;;  address         1    wreg     unsigned char 
  9219 ;; Auto vars:     Size  Location     Type
  9220 ;;  address         1    2[BANK0 ] unsigned char 
  9221 ;;  ret             1    3[BANK0 ] unsigned char 
  9222 ;;  i               1    1[BANK0 ] unsigned char 
  9223 ;; Return value:  Size  Location     Type
  9224 ;;                  1    wreg      unsigned char 
  9225 ;; Registers used:
  9226 ;;		wreg, status,2
  9227 ;; Tracked objects:
  9228 ;;		On entry : 0/0
  9229 ;;		On exit  : 0/0
  9230 ;;		Unchanged: 0/0
  9231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9233 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9234 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9235 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9236 ;;Total ram usage:        4 bytes
  9237 ;; Hardware stack levels used:    1
  9238 ;; Hardware stack levels required when called:    5
  9239 ;; This function calls:
  9240 ;;		Nothing
  9241 ;; This function is called by:
  9242 ;;		_Flash_Memory_Initialization
  9243 ;;		_Flash_Memory_Modify
  9244 ;; This function uses a non-reentrant model
  9245 ;;
  9246                           
  9247                           
  9248                           ;psect for function _Flash_Memory_Read
  9249  13CB                     _Flash_Memory_Read:	
  9250                           
  9251                           ;incstack = 0
  9252                           ; Regs used in _Flash_Memory_Read: [wreg+status,2]
  9253                           ;Flash_Memory_Read@address stored from wreg
  9254  13CB  0020               	movlb	0	; select bank0
  9255  13CC  00A2               	movwf	Flash_Memory_Read@address
  9256                           
  9257                           ;MCU_B1.c: 1012: char i = 0, ret = 0;
  9258  13CD  01A1               	clrf	Flash_Memory_Read@i
  9259  13CE  01A3               	clrf	Flash_Memory_Read@ret
  9260                           
  9261                           ;MCU_B1.c: 1013: PMADRH = 0x30;
  9262  13CF  3030               	movlw	48
  9263  13D0  0023               	movlb	3	; select bank3
  9264  13D1  0092               	movwf	18	;volatile
  9265                           
  9266                           ;MCU_B1.c: 1014: PMADRL = address;
  9267  13D2  0020               	movlb	0	; select bank0
  9268  13D3  0822               	movf	Flash_Memory_Read@address,w
  9269  13D4  0023               	movlb	3	; select bank3
  9270  13D5  0091               	movwf	17	;volatile
  9271                           
  9272                           ;MCU_B1.c: 1015: CFGS = 0;
  9273  13D6  1315               	bcf	21,6	;volatile
  9274                           
  9275                           ;MCU_B1.c: 1016: RD = 1;
  9276  13D7  1415               	bsf	21,0	;volatile
  9277                           
  9278                           ;MCU_B1.c: 1017: i = PMDATH;
  9279  13D8  0814               	movf	20,w	;volatile
  9280  13D9  0020               	movlb	0	; select bank0
  9281  13DA  00A0               	movwf	??_Flash_Memory_Read
  9282  13DB  0820               	movf	??_Flash_Memory_Read,w
  9283  13DC  00A1               	movwf	Flash_Memory_Read@i
  9284                           
  9285                           ;MCU_B1.c: 1018: ret = PMDATL;
  9286  13DD  0023               	movlb	3	; select bank3
  9287  13DE  0813               	movf	19,w	;volatile
  9288  13DF  0020               	movlb	0	; select bank0
  9289  13E0  00A0               	movwf	??_Flash_Memory_Read
  9290  13E1  0820               	movf	??_Flash_Memory_Read,w
  9291  13E2  00A3               	movwf	Flash_Memory_Read@ret
  9292                           
  9293                           ;MCU_B1.c: 1019: return ret;
  9294  13E3  0823               	movf	Flash_Memory_Read@ret,w
  9295  13E4  0008               	return
  9296  13E5                     __end_of_Flash_Memory_Read:	
  9297                           
  9298                           	psect	text52
  9299  0530                     __ptext52:	
  9300 ;; *************** function _Exception_Main *****************
  9301 ;; Defined at:
  9302 ;;		line 499 in file "../src/Main_B1.c"
  9303 ;; Parameters:    Size  Location     Type
  9304 ;;		None
  9305 ;; Auto vars:     Size  Location     Type
  9306 ;;  i               2   18[BANK0 ] int 
  9307 ;;  i               2   16[BANK0 ] int 
  9308 ;;  lights          1   21[BANK0 ] unsigned char 
  9309 ;;  error           1   20[BANK0 ] unsigned char 
  9310 ;;  count           1   15[BANK0 ] unsigned char 
  9311 ;;  status          1   14[BANK0 ] unsigned char 
  9312 ;; Return value:  Size  Location     Type
  9313 ;;		None               void
  9314 ;; Registers used:
  9315 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9316 ;; Tracked objects:
  9317 ;;		On entry : 0/0
  9318 ;;		On exit  : 0/0
  9319 ;;		Unchanged: 0/0
  9320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9322 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9323 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9324 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9325 ;;Total ram usage:        9 bytes
  9326 ;; Hardware stack levels used:    1
  9327 ;; Hardware stack levels required when called:    7
  9328 ;; This function calls:
  9329 ;;		_getDimmerLights_Line
  9330 ;;		_getDimmerLights_Status
  9331 ;;		_getMain_All_Error_Status
  9332 ;;		_getMain_All_LightsStatus
  9333 ;;		_setBuz
  9334 ;;		_setDimmerLights_SwOff
  9335 ;;		_setLED
  9336 ;; This function is called by:
  9337 ;;		_main
  9338 ;; This function uses a non-reentrant model
  9339 ;;
  9340                           
  9341                           
  9342                           ;psect for function _Exception_Main
  9343  0530                     _Exception_Main:	
  9344                           
  9345                           ;Main_B1.c: 500: char error = getMain_All_Error_Status(0);
  9346                           
  9347                           ;incstack = 0
  9348                           ; Regs used in _Exception_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9349  0530  3000               	movlw	0
  9350  0531  3195  25E6  3185   	fcall	_getMain_All_Error_Status
  9351  0534  0020               	movlb	0	; select bank0
  9352  0535  00AD               	movwf	??_Exception_Main
  9353  0536  082D               	movf	??_Exception_Main,w
  9354  0537  00B4               	movwf	Exception_Main@error
  9355                           
  9356                           ;Main_B1.c: 501: char lights = 0, count = 1;
  9357  0538  01B5               	clrf	Exception_Main@lights
  9358  0539  01AF               	clrf	Exception_Main@count
  9359  053A  0AAF               	incf	Exception_Main@count,f
  9360                           
  9361                           ;Main_B1.c: 502: char status = 0;
  9362  053B  01AE               	clrf	Exception_Main@status
  9363                           
  9364                           ;Main_B1.c: 504: if (myMain.Error_Run == 1) {
  9365  053C  0021               	movlb	1	; select bank1
  9366  053D  1DAA               	btfss	(_myMain^(0+128)+10),3
  9367  053E  2D4E               	goto	l6243
  9368                           
  9369                           ;Main_B1.c: 505: if (error == 0) {
  9370  053F  0020               	movlb	0	; select bank0
  9371  0540  08B4               	movf	Exception_Main@error,f
  9372  0541  1D03               	skipz
  9373  0542  0008               	return
  9374                           
  9375                           ;Main_B1.c: 506: myMain.Error_Run = 0;
  9376  0543  0021               	movlb	1	; select bank1
  9377  0544  11AA               	bcf	(_myMain^(0+128)+10),3
  9378                           
  9379                           ;Main_B1.c: 509: setLED(99, 10);
  9380  0545  300A               	movlw	10
  9381  0546  0020               	movlb	0	; select bank0
  9382  0547  00AD               	movwf	??_Exception_Main
  9383  0548  082D               	movf	??_Exception_Main,w
  9384  0549  00A2               	movwf	setLED@command
  9385  054A  3063               	movlw	99
  9386  054B  3196  2619         	fcall	_setLED
  9387                           
  9388                           ;Main_B1.c: 522: }
  9389                           ;Main_B1.c: 523: } else {
  9390  054D  0008               	return
  9391  054E                     l6243:	
  9392                           
  9393                           ;Main_B1.c: 524: if (error != 0) {
  9394  054E  0020               	movlb	0	; select bank0
  9395  054F  0834               	movf	Exception_Main@error,w
  9396  0550  1903               	btfsc	3,2
  9397  0551  0008               	return
  9398                           
  9399                           ;Main_B1.c: 525: myMain.Error_Run = 1;
  9400  0552  0021               	movlb	1	; select bank1
  9401  0553  15AA               	bsf	(_myMain^(0+128)+10),3
  9402                           
  9403                           ;Main_B1.c: 527: setLED(99, 11);
  9404  0554  300B               	movlw	11
  9405  0555  0020               	movlb	0	; select bank0
  9406  0556  00AD               	movwf	??_Exception_Main
  9407  0557  082D               	movf	??_Exception_Main,w
  9408  0558  00A2               	movwf	setLED@command
  9409  0559  3063               	movlw	99
  9410  055A  3196  2619  3185   	fcall	_setLED
  9411                           
  9412                           ;Main_B1.c: 538: switch (error) {
  9413  055D  2DF7               	goto	l6291
  9414  055E                     l6249:	
  9415                           ;Main_B1.c: 539: case 2:
  9416                           
  9417                           
  9418                           ;Main_B1.c: 546: if (getMain_All_LightsStatus() == 1) {
  9419  055E  3191  2164  3185   	fcall	_getMain_All_LightsStatus
  9420  0561  3A01               	xorlw	1
  9421  0562  1D03               	skipz
  9422  0563  2D6D               	goto	l6253
  9423                           
  9424                           ;Main_B1.c: 547: setBuz(10, 300);
  9425  0564  302C               	movlw	44
  9426  0565  0020               	movlb	0	; select bank0
  9427  0566  00A9               	movwf	setBuz@time
  9428  0567  3001               	movlw	1
  9429  0568  00AA               	movwf	setBuz@time+1
  9430  0569  300A               	movlw	10
  9431  056A  3189  21D0  3185   	fcall	_setBuz
  9432  056D                     l6253:	
  9433                           
  9434                           ;Main_B1.c: 548: }
  9435                           ;Main_B1.c: 550: for (int i = 0; i < count; i++) {
  9436  056D  0020               	movlb	0	; select bank0
  9437  056E  01B0               	clrf	Exception_Main@i
  9438  056F  01B1               	clrf	Exception_Main@i+1
  9439  0570                     l6263:	
  9440  0570  0831               	movf	Exception_Main@i+1,w
  9441  0571  3A80               	xorlw	128
  9442  0572  00AD               	movwf	??_Exception_Main
  9443  0573  3080               	movlw	128
  9444  0574  022D               	subwf	??_Exception_Main,w
  9445  0575  1D03               	skipz
  9446  0576  2D79               	goto	u7015
  9447  0577  082F               	movf	Exception_Main@count,w
  9448  0578  0230               	subwf	Exception_Main@i,w
  9449  0579                     u7015:	
  9450  0579  1803               	btfsc	3,0
  9451  057A  2D9A               	goto	u7010
  9452                           
  9453                           ;Main_B1.c: 552: if (getDimmerLights_Status(i + 1) == 1) {
  9454  057B  0020               	movlb	0	; select bank0
  9455  057C  0830               	movf	Exception_Main@i,w
  9456  057D  3E01               	addlw	1
  9457  057E  3192  2248  3185   	fcall	_getDimmerLights_Status
  9458  0581  3A01               	xorlw	1
  9459  0582  1D03               	skipz
  9460  0583  2D94               	goto	l6261
  9461                           
  9462                           ;Main_B1.c: 553: DimmerLights->SwFlag = 1;
  9463  0584  087D               	movf	_DimmerLights,w
  9464  0585  0086               	movwf	6
  9465  0586  3001               	movlw	1	; select bank2/3
  9466  0587  0087               	movwf	7
  9467  0588  1401               	bsf	1,0
  9468                           
  9469                           ;Main_B1.c: 554: DimmerLights->Status = 0;
  9470  0589  0A7D               	incf	_DimmerLights,w
  9471  058A  0086               	movwf	6
  9472  058B  3001               	movlw	1	; select bank2/3
  9473  058C  0087               	movwf	7
  9474  058D  1001               	bcf	1,0
  9475                           
  9476                           ;Main_B1.c: 555: setDimmerLights_SwOff(i + 1);
  9477  058E  0020               	movlb	0	; select bank0
  9478  058F  0830               	movf	Exception_Main@i,w
  9479  0590  3E01               	addlw	1
  9480  0591  3196  26BE  3185   	fcall	_setDimmerLights_SwOff
  9481  0594                     l6261:	
  9482  0594  3001               	movlw	1
  9483  0595  0020               	movlb	0	; select bank0
  9484  0596  07B0               	addwf	Exception_Main@i,f
  9485  0597  3000               	movlw	0
  9486  0598  3DB1               	addwfc	Exception_Main@i+1,f
  9487  0599  2D70               	goto	l6263
  9488  059A                     u7010:	
  9489  059A  0020               	movlb	0	; select bank0
  9490  059B  0008               	return
  9491  059C                     l6265:	
  9492                           ;Main_B1.c: 561: case 3:
  9493                           
  9494                           ;Main_B1.c: 556: }
  9495                           ;Main_B1.c: 557: }
  9496                           ;Main_B1.c: 560: break;
  9497                           
  9498                           
  9499                           ;Main_B1.c: 563: setBuz(5, 300);
  9500  059C  302C               	movlw	44
  9501  059D  0020               	movlb	0	; select bank0
  9502  059E  00A9               	movwf	setBuz@time
  9503  059F  3001               	movlw	1
  9504  05A0  00AA               	movwf	setBuz@time+1
  9505  05A1  3005               	movlw	5
  9506  05A2  3189  21D0  3185   	fcall	_setBuz
  9507                           
  9508                           ;Main_B1.c: 564: lights = getDimmerLights_Line();
  9509  05A5  3191  2183  3185   	fcall	_getDimmerLights_Line
  9510  05A8  0020               	movlb	0	; select bank0
  9511  05A9  00AD               	movwf	??_Exception_Main
  9512  05AA  082D               	movf	??_Exception_Main,w
  9513  05AB  00B5               	movwf	Exception_Main@lights
  9514                           
  9515                           ;Main_B1.c: 565: if (lights == 0) {
  9516  05AC  08B5               	movf	Exception_Main@lights,f
  9517  05AD  1D03               	skipz
  9518  05AE  2DDD               	goto	l6283
  9519                           
  9520                           ;Main_B1.c: 567: for (int i = 0; i < count; i++) {
  9521  05AF  01B2               	clrf	Exception_Main@i_3198
  9522  05B0  01B3               	clrf	Exception_Main@i_3198+1
  9523  05B1                     l6281:	
  9524  05B1  0833               	movf	Exception_Main@i_3198+1,w
  9525  05B2  3A80               	xorlw	128
  9526  05B3  00AD               	movwf	??_Exception_Main
  9527  05B4  3080               	movlw	128
  9528  05B5  022D               	subwf	??_Exception_Main,w
  9529  05B6  1D03               	skipz
  9530  05B7  2DBA               	goto	u7045
  9531  05B8  082F               	movf	Exception_Main@count,w
  9532  05B9  0232               	subwf	Exception_Main@i_3198,w
  9533  05BA                     u7045:	
  9534  05BA  1803               	btfsc	3,0
  9535  05BB  2DDB               	goto	u7040
  9536                           
  9537                           ;Main_B1.c: 569: if (getDimmerLights_Status(i + 1) == 1) {
  9538  05BC  0020               	movlb	0	; select bank0
  9539  05BD  0832               	movf	Exception_Main@i_3198,w
  9540  05BE  3E01               	addlw	1
  9541  05BF  3192  2248  3185   	fcall	_getDimmerLights_Status
  9542  05C2  3A01               	xorlw	1
  9543  05C3  1D03               	skipz
  9544  05C4  2DD5               	goto	l6279
  9545                           
  9546                           ;Main_B1.c: 570: DimmerLights->SwFlag = 1;
  9547  05C5  087D               	movf	_DimmerLights,w
  9548  05C6  0086               	movwf	6
  9549  05C7  3001               	movlw	1	; select bank2/3
  9550  05C8  0087               	movwf	7
  9551  05C9  1401               	bsf	1,0
  9552                           
  9553                           ;Main_B1.c: 571: DimmerLights->Status = 0;
  9554  05CA  0A7D               	incf	_DimmerLights,w
  9555  05CB  0086               	movwf	6
  9556  05CC  3001               	movlw	1	; select bank2/3
  9557  05CD  0087               	movwf	7
  9558  05CE  1001               	bcf	1,0
  9559                           
  9560                           ;Main_B1.c: 572: setDimmerLights_SwOff(i + 1);
  9561  05CF  0020               	movlb	0	; select bank0
  9562  05D0  0832               	movf	Exception_Main@i_3198,w
  9563  05D1  3E01               	addlw	1
  9564  05D2  3196  26BE  3185   	fcall	_setDimmerLights_SwOff
  9565  05D5                     l6279:	
  9566  05D5  3001               	movlw	1
  9567  05D6  0020               	movlb	0	; select bank0
  9568  05D7  07B2               	addwf	Exception_Main@i_3198,f
  9569  05D8  3000               	movlw	0
  9570  05D9  3DB3               	addwfc	Exception_Main@i_3198+1,f
  9571  05DA  2DB1               	goto	l6281
  9572  05DB                     u7040:	
  9573  05DB  0020               	movlb	0	; select bank0
  9574  05DC  0008               	return
  9575  05DD                     l6283:	
  9576                           ;Main_B1.c: 573: }
  9577                           ;Main_B1.c: 574: }
  9578                           ;Main_B1.c: 575: } else {
  9579                           
  9580                           
  9581                           ;Main_B1.c: 577: if (getDimmerLights_Status(lights) == 1) {
  9582  05DD  0020               	movlb	0	; select bank0
  9583  05DE  0835               	movf	Exception_Main@lights,w
  9584  05DF  3192  2248  3185   	fcall	_getDimmerLights_Status
  9585  05E2  3A01               	xorlw	1
  9586  05E3  1903               	btfsc	3,2
  9587  05E4  2DE7               	goto	l6285
  9588  05E5  0020               	movlb	0	; select bank0
  9589  05E6  0008               	return
  9590  05E7                     l6285:	
  9591                           
  9592                           ;Main_B1.c: 579: DimmerLights->SwFlag = 1;
  9593  05E7  087D               	movf	_DimmerLights,w
  9594  05E8  0086               	movwf	6
  9595  05E9  3001               	movlw	1	; select bank2/3
  9596  05EA  0087               	movwf	7
  9597  05EB  1401               	bsf	1,0
  9598                           
  9599                           ;Main_B1.c: 580: DimmerLights->Status = 0;
  9600  05EC  0A7D               	incf	_DimmerLights,w
  9601  05ED  0086               	movwf	6
  9602  05EE  3001               	movlw	1	; select bank2/3
  9603  05EF  0087               	movwf	7
  9604  05F0  1001               	bcf	1,0
  9605                           
  9606                           ;Main_B1.c: 581: setDimmerLights_SwOff(lights);
  9607  05F1  0020               	movlb	0	; select bank0
  9608  05F2  0835               	movf	Exception_Main@lights,w
  9609  05F3  3196  26BE         	fcall	_setDimmerLights_SwOff
  9610  05F5  0020               	movlb	0	; select bank0
  9611  05F6  0008               	return
  9612  05F7                     l6291:	
  9613                           ;Main_B1.c: 586: }
  9614                           
  9615                           ;Main_B1.c: 582: }
  9616                           ;Main_B1.c: 583: }
  9617                           ;Main_B1.c: 585: break;
  9618                           
  9619  05F7  0020               	movlb	0	; select bank0
  9620  05F8  0834               	movf	Exception_Main@error,w
  9621                           
  9622                           ; Switch size 1, requested type "space"
  9623                           ; Number of cases is 2, Range of values is 2 to 3
  9624                           ; switch strategies available:
  9625                           ; Name         Instructions Cycles
  9626                           ; simple_byte            7     4 (average)
  9627                           ; direct_byte           13     9 (fixed)
  9628                           ; jumptable            263     9 (fixed)
  9629                           ;	Chosen strategy is simple_byte
  9630  05F9  3A02               	xorlw	2	; case 2
  9631  05FA  1903               	skipnz
  9632  05FB  2D5E               	goto	l6249
  9633  05FC  3A01               	xorlw	1	; case 3
  9634  05FD  1903               	skipnz
  9635  05FE  2D9C               	goto	l6265
  9636  05FF  2E01               	goto	l1128
  9637  0600  0008               	return
  9638  0601                     l1128:	
  9639  0601  0008               	return
  9640  0602                     __end_of_Exception_Main:	
  9641                           
  9642                           	psect	text53
  9643  1183                     __ptext53:	
  9644 ;; *************** function _getDimmerLights_Line *****************
  9645 ;; Defined at:
  9646 ;;		line 1169 in file "../src/Dimmer_B1.c"
  9647 ;; Parameters:    Size  Location     Type
  9648 ;;		None
  9649 ;; Auto vars:     Size  Location     Type
  9650 ;;  line            1    0[BANK0 ] unsigned char 
  9651 ;; Return value:  Size  Location     Type
  9652 ;;                  1    wreg      unsigned char 
  9653 ;; Registers used:
  9654 ;;		wreg, status,2
  9655 ;; Tracked objects:
  9656 ;;		On entry : 0/0
  9657 ;;		On exit  : 0/0
  9658 ;;		Unchanged: 0/0
  9659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9661 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9663 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9664 ;;Total ram usage:        1 bytes
  9665 ;; Hardware stack levels used:    1
  9666 ;; Hardware stack levels required when called:    5
  9667 ;; This function calls:
  9668 ;;		Nothing
  9669 ;; This function is called by:
  9670 ;;		_Exception_Main
  9671 ;; This function uses a non-reentrant model
  9672 ;;
  9673                           
  9674                           
  9675                           ;psect for function _getDimmerLights_Line
  9676  1183                     _getDimmerLights_Line:	
  9677                           
  9678                           ;Dimmer_B1.c: 1170: char line = 0;
  9679                           
  9680                           ;incstack = 0
  9681                           ; Regs used in _getDimmerLights_Line: [wreg+status,2]
  9682  1183  0020               	movlb	0	; select bank0
  9683  1184  01A0               	clrf	getDimmerLights_Line@line
  9684                           
  9685                           ;Dimmer_B1.c: 1172: if (DimmerLights1.Line == 1) {
  9686  1185  0022               	movlb	2	; select bank2
  9687  1186  1CC9               	btfss	(_DimmerLights1^(0+256)+1),1
  9688  1187  298B               	goto	l5387
  9689                           
  9690                           ;Dimmer_B1.c: 1173: line = 1;
  9691  1188  0020               	movlb	0	; select bank0
  9692  1189  01A0               	clrf	getDimmerLights_Line@line
  9693  118A  0AA0               	incf	getDimmerLights_Line@line,f
  9694  118B                     l5387:	
  9695                           
  9696                           ;Dimmer_B1.c: 1174: }
  9697                           ;Dimmer_B1.c: 1186: return line;
  9698  118B  0020               	movlb	0	; select bank0
  9699  118C  0820               	movf	getDimmerLights_Line@line,w
  9700  118D  0008               	return
  9701  118E                     __end_of_getDimmerLights_Line:	
  9702                           
  9703                           	psect	text54
  9704  153A                     __ptext54:	
  9705 ;; *************** function _DimmerLights_Main *****************
  9706 ;; Defined at:
  9707 ;;		line 837 in file "../src/Dimmer_B1.c"
  9708 ;; Parameters:    Size  Location     Type
  9709 ;;		None
  9710 ;; Auto vars:     Size  Location     Type
  9711 ;;		None
  9712 ;; Return value:  Size  Location     Type
  9713 ;;		None               void
  9714 ;; Registers used:
  9715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9716 ;; Tracked objects:
  9717 ;;		On entry : 0/0
  9718 ;;		On exit  : 0/0
  9719 ;;		Unchanged: 0/0
  9720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9725 ;;Total ram usage:        0 bytes
  9726 ;; Hardware stack levels used:    1
  9727 ;; Hardware stack levels required when called:   10
  9728 ;; This function calls:
  9729 ;;		_DimmerLights_DimmingFunction
  9730 ;;		_DimmerLights_TwoPhase_Main
  9731 ;;		_getLoad_OK
  9732 ;;		_getMain_All_Error_Status
  9733 ;;		_getMain_All_LightsStatus
  9734 ;;		_setDimmerLights_Main
  9735 ;; This function is called by:
  9736 ;;		_main
  9737 ;; This function uses a non-reentrant model
  9738 ;;
  9739                           
  9740                           
  9741                           ;psect for function _DimmerLights_Main
  9742  153A                     _DimmerLights_Main:	
  9743                           
  9744                           ;Dimmer_B1.c: 840: if (Dimmer.LoadGO == 1) {
  9745                           
  9746                           ;incstack = 0
  9747                           ; Regs used in _DimmerLights_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9748  153A  0021               	movlb	1	; select bank1
  9749  153B  1CC5               	btfss	_Dimmer^(0+128),1
  9750  153C  2D52               	goto	l5849
  9751                           
  9752                           ;Dimmer_B1.c: 841: if (getLoad_OK() == 1 || getMain_All_Error_Status(0) != 0 || getMain_
      +                          All_LightsStatus() == 0) {
  9753  153D  3191  2131  3195   	fcall	_getLoad_OK
  9754  1540  3A01               	xorlw	1
  9755  1541  1903               	skipnz
  9756  1542  2D50               	goto	l456
  9757  1543  3000               	movlw	0
  9758  1544  3195  25E6  3195   	fcall	_getMain_All_Error_Status
  9759  1547  3800               	iorlw	0
  9760  1548  1D03               	skipz
  9761  1549  2D50               	goto	l456
  9762  154A  3191  2164  3195   	fcall	_getMain_All_LightsStatus
  9763  154D  3800               	iorlw	0
  9764  154E  1D03               	skipz
  9765  154F  2D52               	goto	l5849
  9766  1550                     l456:	
  9767                           
  9768                           ;Dimmer_B1.c: 842: Dimmer.LoadGO = 0;
  9769  1550  0021               	movlb	1	; select bank1
  9770  1551  10C5               	bcf	_Dimmer^(0+128),1
  9771  1552                     l5849:	
  9772                           
  9773                           ;Dimmer_B1.c: 843: }
  9774                           ;Dimmer_B1.c: 844: }
  9775                           ;Dimmer_B1.c: 849: setDimmerLights_Main(1);
  9776  1552  3001               	movlw	1
  9777  1553  318B  23B2  3195   	fcall	_setDimmerLights_Main
  9778                           
  9779                           ;Dimmer_B1.c: 852: DimmerLights_DimmingFunction(1);
  9780  1556  3001               	movlw	1
  9781  1557  3197  27BA  3195   	fcall	_DimmerLights_DimmingFunction
  9782                           
  9783                           ;Dimmer_B1.c: 856: DimmerLights_TwoPhase_Main(1);
  9784  155A  3001               	movlw	1
  9785  155B  3189  217C         	fcall	_DimmerLights_TwoPhase_Main
  9786  155D  0008               	return
  9787  155E                     __end_of_DimmerLights_Main:	
  9788                           
  9789                           	psect	text55
  9790  0BB2                     __ptext55:	
  9791 ;; *************** function _setDimmerLights_Main *****************
  9792 ;; Defined at:
  9793 ;;		line 879 in file "../src/Dimmer_B1.c"
  9794 ;; Parameters:    Size  Location     Type
  9795 ;;  lights          1    wreg     unsigned char 
  9796 ;; Auto vars:     Size  Location     Type
  9797 ;;  lights          1    1[BANK1 ] unsigned char 
  9798 ;; Return value:  Size  Location     Type
  9799 ;;		None               void
  9800 ;; Registers used:
  9801 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9802 ;; Tracked objects:
  9803 ;;		On entry : 0/0
  9804 ;;		On exit  : 0/0
  9805 ;;		Unchanged: 0/0
  9806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9808 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9810 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9811 ;;Total ram usage:        1 bytes
  9812 ;; Hardware stack levels used:    1
  9813 ;; Hardware stack levels required when called:    9
  9814 ;; This function calls:
  9815 ;;		_DimmerLights_SelectPointer
  9816 ;;		_getDimmerLights_Allow_Condition
  9817 ;;		_getMain_All_LightsStatus
  9818 ;;		_setDimmerLights_Dimming
  9819 ;;		_setDimmerLights_OnOff
  9820 ;; This function is called by:
  9821 ;;		_DimmerLights_Main
  9822 ;; This function uses a non-reentrant model
  9823 ;;
  9824                           
  9825                           
  9826                           ;psect for function _setDimmerLights_Main
  9827  0BB2                     _setDimmerLights_Main:	
  9828                           
  9829                           ;incstack = 0
  9830                           ; Regs used in _setDimmerLights_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9831                           ;setDimmerLights_Main@lights stored from wreg
  9832  0BB2  0021               	movlb	1	; select bank1
  9833  0BB3  00E9               	movwf	setDimmerLights_Main@lights^(0+128)
  9834                           
  9835                           ;Dimmer_B1.c: 881: DimmerLights_SelectPointer(lights);
  9836  0BB4  0869               	movf	setDimmerLights_Main@lights^(0+128),w
  9837  0BB5  3191  2178  318B   	fcall	_DimmerLights_SelectPointer
  9838                           
  9839                           ;Dimmer_B1.c: 882: if (DimmerLights->Trigger == 1) {
  9840  0BB8  087D               	movf	_DimmerLights,w
  9841  0BB9  0086               	movwf	6
  9842  0BBA  3001               	movlw	1	; select bank2/3
  9843  0BBB  0087               	movwf	7
  9844  0BBC  1C81               	btfss	1,1
  9845  0BBD  2BE0               	goto	l5313
  9846                           
  9847                           ;Dimmer_B1.c: 883: if (getDimmerLights_Allow_Condition(lights) == 0) {
  9848  0BBE  0021               	movlb	1	; select bank1
  9849  0BBF  0869               	movf	setDimmerLights_Main@lights^(0+128),w
  9850  0BC0  3193  2356  318B   	fcall	_getDimmerLights_Allow_Condition
  9851  0BC3  3800               	iorlw	0
  9852  0BC4  1D03               	skipz
  9853  0BC5  0008               	return
  9854                           
  9855                           ;Dimmer_B1.c: 884: DimmerLights->Trigger = 0;
  9856  0BC6  087D               	movf	_DimmerLights,w
  9857  0BC7  0086               	movwf	6
  9858  0BC8  3001               	movlw	1	; select bank2/3
  9859  0BC9  0087               	movwf	7
  9860  0BCA  1081               	bcf	1,1
  9861                           
  9862                           ;Dimmer_B1.c: 885: if (DimmerLights->Switch == 1) {
  9863  0BCB  087D               	movf	_DimmerLights,w
  9864  0BCC  0086               	movwf	6
  9865  0BCD  3001               	movlw	1	; select bank2/3
  9866  0BCE  0087               	movwf	7
  9867  0BCF  1D01               	btfss	1,2
  9868  0BD0  2BD9               	goto	l5311
  9869                           
  9870                           ;Dimmer_B1.c: 886: setDimmerLights_OnOff(lights, 1);
  9871  0BD1  0020               	movlb	0	; select bank0
  9872  0BD2  01ED               	clrf	setDimmerLights_OnOff@command
  9873  0BD3  0AED               	incf	setDimmerLights_OnOff@command,f
  9874  0BD4  0021               	movlb	1	; select bank1
  9875  0BD5  0869               	movf	setDimmerLights_Main@lights^(0+128),w
  9876  0BD6  318E  26AF         	fcall	_setDimmerLights_OnOff
  9877                           
  9878                           ;Dimmer_B1.c: 887: } else {
  9879  0BD8  0008               	return
  9880  0BD9                     l5311:	
  9881                           
  9882                           ;Dimmer_B1.c: 888: setDimmerLights_OnOff(lights, 0);
  9883  0BD9  0020               	movlb	0	; select bank0
  9884  0BDA  01ED               	clrf	setDimmerLights_OnOff@command
  9885  0BDB  0021               	movlb	1	; select bank1
  9886  0BDC  0869               	movf	setDimmerLights_Main@lights^(0+128),w
  9887  0BDD  318E  26AF         	fcall	_setDimmerLights_OnOff
  9888                           
  9889                           ;Dimmer_B1.c: 889: }
  9890                           ;Dimmer_B1.c: 890: }
  9891                           ;Dimmer_B1.c: 891: } else {
  9892  0BDF  0008               	return
  9893  0BE0                     l5313:	
  9894                           
  9895                           ;Dimmer_B1.c: 892: if (getMain_All_LightsStatus() == 1) {
  9896  0BE0  3191  2164  318B   	fcall	_getMain_All_LightsStatus
  9897  0BE3  3A01               	xorlw	1
  9898  0BE4  1D03               	skipz
  9899  0BE5  2C0E               	goto	l5325
  9900                           
  9901                           ;Dimmer_B1.c: 893: if (DimmerLights->DimmingTrigger == 1) {
  9902  0BE6  087D               	movf	_DimmerLights,w
  9903  0BE7  0086               	movwf	6
  9904  0BE8  3001               	movlw	1	; select bank2/3
  9905  0BE9  0087               	movwf	7
  9906  0BEA  1E01               	btfss	1,4
  9907  0BEB  0008               	return
  9908                           
  9909                           ;Dimmer_B1.c: 894: if (getDimmerLights_Allow_Condition(lights) == 0) {
  9910  0BEC  0021               	movlb	1	; select bank1
  9911  0BED  0869               	movf	setDimmerLights_Main@lights^(0+128),w
  9912  0BEE  3193  2356  318B   	fcall	_getDimmerLights_Allow_Condition
  9913  0BF1  3800               	iorlw	0
  9914  0BF2  1D03               	skipz
  9915  0BF3  0008               	return
  9916                           
  9917                           ;Dimmer_B1.c: 895: DimmerLights->DimmingTrigger = 0;
  9918  0BF4  087D               	movf	_DimmerLights,w
  9919  0BF5  0086               	movwf	6
  9920  0BF6  3001               	movlw	1	; select bank2/3
  9921  0BF7  0087               	movwf	7
  9922  0BF8  1201               	bcf	1,4
  9923                           
  9924                           ;Dimmer_B1.c: 896: if (DimmerLights->DimmingSwitch == 1) {
  9925  0BF9  087D               	movf	_DimmerLights,w
  9926  0BFA  0086               	movwf	6
  9927  0BFB  3001               	movlw	1	; select bank2/3
  9928  0BFC  0087               	movwf	7
  9929  0BFD  1E81               	btfss	1,5
  9930  0BFE  2C07               	goto	l5323
  9931                           
  9932                           ;Dimmer_B1.c: 897: setDimmerLights_Dimming(lights, 1);
  9933  0BFF  0020               	movlb	0	; select bank0
  9934  0C00  01E5               	clrf	setDimmerLights_Dimming@status
  9935  0C01  0AE5               	incf	setDimmerLights_Dimming@status,f
  9936  0C02  0021               	movlb	1	; select bank1
  9937  0C03  0869               	movf	setDimmerLights_Main@lights^(0+128),w
  9938  0C04  3197  2775         	fcall	_setDimmerLights_Dimming
  9939                           
  9940                           ;Dimmer_B1.c: 898: } else {
  9941  0C06  0008               	return
  9942  0C07                     l5323:	
  9943                           
  9944                           ;Dimmer_B1.c: 899: setDimmerLights_Dimming(lights, 0);
  9945  0C07  0020               	movlb	0	; select bank0
  9946  0C08  01E5               	clrf	setDimmerLights_Dimming@status
  9947  0C09  0021               	movlb	1	; select bank1
  9948  0C0A  0869               	movf	setDimmerLights_Main@lights^(0+128),w
  9949  0C0B  3197  2775         	fcall	_setDimmerLights_Dimming
  9950                           
  9951                           ;Dimmer_B1.c: 900: }
  9952                           ;Dimmer_B1.c: 901: }
  9953                           ;Dimmer_B1.c: 902: }
  9954                           ;Dimmer_B1.c: 903: } else {
  9955  0C0D  0008               	return
  9956  0C0E                     l5325:	
  9957                           
  9958                           ;Dimmer_B1.c: 904: if (DimmerLights->DimmingTrigger == 1) {
  9959  0C0E  087D               	movf	_DimmerLights,w
  9960  0C0F  0086               	movwf	6
  9961  0C10  3001               	movlw	1	; select bank2/3
  9962  0C11  0087               	movwf	7
  9963  0C12  1E01               	btfss	1,4
  9964  0C13  0008               	return
  9965                           
  9966                           ;Dimmer_B1.c: 905: DimmerLights->DimmingTrigger = 0;
  9967  0C14  087D               	movf	_DimmerLights,w
  9968  0C15  0086               	movwf	6
  9969  0C16  3001               	movlw	1	; select bank2/3
  9970  0C17  0087               	movwf	7
  9971  0C18  1201               	bcf	1,4
  9972  0C19  0008               	return
  9973  0C1A                     __end_of_setDimmerLights_Main:	
  9974                           
  9975                           	psect	text56
  9976  0EAF                     __ptext56:	
  9977 ;; *************** function _setDimmerLights_OnOff *****************
  9978 ;; Defined at:
  9979 ;;		line 956 in file "../src/Dimmer_B1.c"
  9980 ;; Parameters:    Size  Location     Type
  9981 ;;  lights          1    wreg     unsigned char 
  9982 ;;  command         1   77[BANK0 ] unsigned char 
  9983 ;; Auto vars:     Size  Location     Type
  9984 ;;  lights          1    0[BANK1 ] unsigned char 
  9985 ;; Return value:  Size  Location     Type
  9986 ;;		None               void
  9987 ;; Registers used:
  9988 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9989 ;; Tracked objects:
  9990 ;;		On entry : 0/0
  9991 ;;		On exit  : 0/0
  9992 ;;		Unchanged: 0/0
  9993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9994 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9995 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9996 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9997 ;;      Totals:         0       3       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9998 ;;Total ram usage:        4 bytes
  9999 ;; Hardware stack levels used:    1
 10000 ;; Hardware stack levels required when called:    8
 10001 ;; This function calls:
 10002 ;;		_getCmd_Status
 10003 ;;		_getDelayOff_GO
 10004 ;;		_getDimmerLights_PercentToValue
 10005 ;;		_getMain_All_LightsStatus
 10006 ;;		_setCmd_Status
 10007 ;;		_setDelayOff_GO
 10008 ;;		_setDimmerIntr_ControlStatus
 10009 ;;		_setDimmerIntr_DimmingValue
 10010 ;;		_setDimmerIntr_Dimming_RF
 10011 ;;		_setDimmerIntr_MaxmumValue
 10012 ;;		_setDimmerLights_DimmingClose
 10013 ;;		_setDimmerLights_Line
 10014 ;;		_setLED
 10015 ;;		_setProductData
 10016 ;; This function is called by:
 10017 ;;		_setDimmerLights_Main
 10018 ;; This function uses a non-reentrant model
 10019 ;;
 10020                           
 10021                           
 10022                           ;psect for function _setDimmerLights_OnOff
 10023  0EAF                     _setDimmerLights_OnOff:	
 10024                           
 10025                           ;incstack = 0
 10026                           ; Regs used in _setDimmerLights_OnOff: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10027                           ;setDimmerLights_OnOff@lights stored from wreg
 10028  0EAF  0021               	movlb	1	; select bank1
 10029  0EB0  00E8               	movwf	setDimmerLights_OnOff@lights^(0+128)
 10030                           
 10031                           ;Dimmer_B1.c: 958: if (command == 1) {
 10032  0EB1  0020               	movlb	0	; select bank0
 10033  0EB2  086D               	movf	setDimmerLights_OnOff@command,w
 10034  0EB3  3A01               	xorlw	1
 10035  0EB4  1D03               	skipz
 10036  0EB5  2F06               	goto	l5045
 10037                           
 10038                           ;Dimmer_B1.c: 960: setDimmerIntr_ControlStatus(lights, 1);
 10039  0EB6  01A0               	clrf	setDimmerIntr_ControlStatus@command
 10040  0EB7  0AA0               	incf	setDimmerIntr_ControlStatus@command,f
 10041  0EB8  0021               	movlb	1	; select bank1
 10042  0EB9  0868               	movf	setDimmerLights_OnOff@lights^(0+128),w
 10043  0EBA  3193  239A  318E   	fcall	_setDimmerIntr_ControlStatus
 10044                           
 10045                           ;Dimmer_B1.c: 963: Dimmer.Load_Status = 1;
 10046  0EBD  0021               	movlb	1	; select bank1
 10047  0EBE  1545               	bsf	_Dimmer^(0+128),2
 10048                           
 10049                           ;Dimmer_B1.c: 964: setDimmerLights_Line(lights);
 10050  0EBF  0868               	movf	setDimmerLights_OnOff@lights^(0+128),w
 10051  0EC0  3192  22AC  318E   	fcall	_setDimmerLights_Line
 10052                           
 10053                           ;Dimmer_B1.c: 970: setLED(lights, 0);
 10054  0EC3  0020               	movlb	0	; select bank0
 10055  0EC4  01A2               	clrf	setLED@command
 10056  0EC5  0021               	movlb	1	; select bank1
 10057  0EC6  0868               	movf	setDimmerLights_OnOff@lights^(0+128),w
 10058  0EC7  3196  2619  318E   	fcall	_setLED
 10059                           
 10060                           ;Dimmer_B1.c: 971: ;;
 10061                           ;Dimmer_B1.c: 991: if (DimmerLights->DimmingRun == 1) {
 10062  0ECA  0A7D               	incf	_DimmerLights,w
 10063  0ECB  0086               	movwf	6
 10064  0ECC  3001               	movlw	1	; select bank2/3
 10065  0ECD  0087               	movwf	7
 10066  0ECE  1F01               	btfss	1,6
 10067  0ECF  2EF5               	goto	l5037
 10068                           
 10069                           ;Dimmer_B1.c: 992: DimmerLights->DimmingRun = 0;
 10070  0ED0  0A7D               	incf	_DimmerLights,w
 10071  0ED1  0086               	movwf	6
 10072  0ED2  3001               	movlw	1	; select bank2/3
 10073  0ED3  0087               	movwf	7
 10074  0ED4  1301               	bcf	1,6
 10075                           
 10076                           ;Dimmer_B1.c: 993: setDimmerIntr_MaxmumValue(lights, getDimmerLights_PercentToValue(prod
      +                          uct->Data[20 + lights]));
 10077  0ED5  0021               	movlb	1	; select bank1
 10078  0ED6  0868               	movf	setDimmerLights_OnOff@lights^(0+128),w
 10079  0ED7  3E14               	addlw	20
 10080  0ED8  076E               	addwf	_product^(0+128),w
 10081  0ED9  0020               	movlb	0	; select bank0
 10082  0EDA  00EE               	movwf	??_setDimmerLights_OnOff
 10083  0EDB  086E               	movf	??_setDimmerLights_OnOff,w
 10084  0EDC  0086               	movwf	6
 10085  0EDD  3001               	movlw	1	; select bank2/3
 10086  0EDE  0087               	movwf	7
 10087  0EDF  0801               	movf	1,w
 10088  0EE0  318A  22E8  318E   	fcall	_getDimmerLights_PercentToValue
 10089  0EE3  0020               	movlb	0	; select bank0
 10090  0EE4  00EF               	movwf	??_setDimmerLights_OnOff+1
 10091  0EE5  086F               	movf	??_setDimmerLights_OnOff+1,w
 10092  0EE6  00E2               	movwf	setDimmerIntr_MaxmumValue@value
 10093  0EE7  0021               	movlb	1	; select bank1
 10094  0EE8  0868               	movf	setDimmerLights_OnOff@lights^(0+128),w
 10095  0EE9  3191  21C7  318E   	fcall	_setDimmerIntr_MaxmumValue
 10096                           
 10097                           ;Dimmer_B1.c: 994: setDimmerIntr_Dimming_RF(lights, 1);
 10098  0EEC  0020               	movlb	0	; select bank0
 10099  0EED  01A0               	clrf	setDimmerIntr_Dimming_RF@command
 10100  0EEE  0AA0               	incf	setDimmerIntr_Dimming_RF@command,f
 10101  0EEF  0021               	movlb	1	; select bank1
 10102  0EF0  0868               	movf	setDimmerLights_OnOff@lights^(0+128),w
 10103  0EF1  3193  2382  318E   	fcall	_setDimmerIntr_Dimming_RF
 10104                           
 10105                           ;Dimmer_B1.c: 995: } else {
 10106  0EF4  2EFF               	goto	l5039
 10107  0EF5                     l5037:	
 10108                           
 10109                           ;Dimmer_B1.c: 999: setDimmerIntr_DimmingValue(lights, ((char)(10*0.6))+((((char)(82*0.6)
      +                          )-((char)(10*0.6)))/2));
 10110  0EF5  301B               	movlw	27
 10111  0EF6  0020               	movlb	0	; select bank0
 10112  0EF7  00EE               	movwf	??_setDimmerLights_OnOff
 10113  0EF8  086E               	movf	??_setDimmerLights_OnOff,w
 10114  0EF9  00A0               	movwf	setDimmerIntr_DimmingValue@value
 10115  0EFA  0021               	movlb	1	; select bank1
 10116  0EFB  0868               	movf	setDimmerLights_OnOff@lights^(0+128),w
 10117  0EFC  3191  21D3  318E   	fcall	_setDimmerIntr_DimmingValue
 10118  0EFF                     l5039:	
 10119                           
 10120                           ;Dimmer_B1.c: 1003: }
 10121                           ;Dimmer_B1.c: 1005: if (lights == 1) {
 10122  0EFF  0021               	movlb	1	; select bank1
 10123  0F00  0868               	movf	setDimmerLights_OnOff@lights^(0+128),w
 10124  0F01  3A01               	xorlw	1
 10125  0F02  1D03               	skipz
 10126  0F03  2F35               	goto	l5059
 10127                           
 10128                           ;Dimmer_B1.c: 1007: DimmerIntr1.TuneGO = 1;
 10129  0F04  173A               	bsf	(_DimmerIntr1^(0+128)+1),6
 10130                           
 10131                           ;Dimmer_B1.c: 1013: }
 10132                           ;Dimmer_B1.c: 1019: } else if (command == 0) {
 10133                           
 10134                           ;Dimmer_B1.c: 1009: } else if (lights == 2) {
 10135  0F05  2F35               	goto	l5059
 10136  0F06                     l5045:	
 10137  0F06  0020               	movlb	0	; select bank0
 10138  0F07  08ED               	movf	setDimmerLights_OnOff@command,f
 10139  0F08  1D03               	skipz
 10140  0F09  2F35               	goto	l5059
 10141                           
 10142                           ;Dimmer_B1.c: 1021: setDimmerIntr_ControlStatus(lights, 0);
 10143  0F0A  01A0               	clrf	setDimmerIntr_ControlStatus@command
 10144  0F0B  0021               	movlb	1	; select bank1
 10145  0F0C  0868               	movf	setDimmerLights_OnOff@lights^(0+128),w
 10146  0F0D  3193  239A  318E   	fcall	_setDimmerIntr_ControlStatus
 10147                           
 10148                           ;Dimmer_B1.c: 1023: Dimmer.Load_Status = 0;
 10149  0F10  0021               	movlb	1	; select bank1
 10150  0F11  1145               	bcf	_Dimmer^(0+128),2
 10151                           
 10152                           ;Dimmer_B1.c: 1024: setDimmerLights_Line(0);
 10153  0F12  3000               	movlw	0
 10154  0F13  3192  22AC  318E   	fcall	_setDimmerLights_Line
 10155                           
 10156                           ;Dimmer_B1.c: 1028: if (getDelayOff_GO(lights) == 1) {
 10157  0F16  0021               	movlb	1	; select bank1
 10158  0F17  0868               	movf	setDimmerLights_OnOff@lights^(0+128),w
 10159  0F18  3192  2268  318E   	fcall	_getDelayOff_GO
 10160  0F1B  3A01               	xorlw	1
 10161  0F1C  1D03               	skipz
 10162  0F1D  2F26               	goto	l496
 10163                           
 10164                           ;Dimmer_B1.c: 1029: setDelayOff_GO(lights, 0, 0);
 10165  0F1E  0020               	movlb	0	; select bank0
 10166  0F1F  01E5               	clrf	setDelayOff_GO@command
 10167  0F20  01E6               	clrf	setDelayOff_GO@value
 10168  0F21  0021               	movlb	1	; select bank1
 10169  0F22  0868               	movf	setDimmerLights_OnOff@lights^(0+128),w
 10170  0F23  318D  2596  318E   	fcall	_setDelayOff_GO
 10171  0F26                     l496:	
 10172                           
 10173                           ;Dimmer_B1.c: 1030: }
 10174                           ;Dimmer_B1.c: 1035: setLED(lights, 1);
 10175  0F26  0020               	movlb	0	; select bank0
 10176  0F27  01A2               	clrf	setLED@command
 10177  0F28  0AA2               	incf	setLED@command,f
 10178  0F29  0021               	movlb	1	; select bank1
 10179  0F2A  0868               	movf	setDimmerLights_OnOff@lights^(0+128),w
 10180  0F2B  3196  2619  318E   	fcall	_setLED
 10181                           
 10182                           ;Dimmer_B1.c: 1036: ;;
 10183                           ;Dimmer_B1.c: 1040: if (lights == 1) {
 10184  0F2E  0021               	movlb	1	; select bank1
 10185  0F2F  0868               	movf	setDimmerLights_OnOff@lights^(0+128),w
 10186  0F30  3A01               	xorlw	1
 10187  0F31  1D03               	skipz
 10188  0F32  2F35               	goto	l5059
 10189                           
 10190                           ;Dimmer_B1.c: 1041: RB1 = 0;
 10191  0F33  0020               	movlb	0	; select bank0
 10192  0F34  108D               	bcf	13,1	;volatile
 10193  0F35                     l5059:	
 10194                           
 10195                           ;Dimmer_B1.c: 1043: }
 10196                           ;Dimmer_B1.c: 1054: }
 10197                           ;Dimmer_B1.c: 1056: setDimmerLights_DimmingClose();
 10198  0F35  3191  210A  318E   	fcall	_setDimmerLights_DimmingClose
 10199                           
 10200                           ;Dimmer_B1.c: 1058: ;;
 10201                           ;Dimmer_B1.c: 1060: if (getCmd_Status(1) == 1) {
 10202  0F38  3001               	movlw	1
 10203  0F39  3192  22BE  318E   	fcall	_getCmd_Status
 10204  0F3C  3A01               	xorlw	1
 10205  0F3D  1D03               	skipz
 10206  0F3E  0008               	return
 10207                           
 10208                           ;Dimmer_B1.c: 1061: if (getMain_All_LightsStatus() == 0) {
 10209  0F3F  3191  2164  318E   	fcall	_getMain_All_LightsStatus
 10210  0F42  3800               	iorlw	0
 10211  0F43  1D03               	skipz
 10212  0F44  0008               	return
 10213                           
 10214                           ;Dimmer_B1.c: 1062: setCmd_Status(1, 0);
 10215  0F45  0020               	movlb	0	; select bank0
 10216  0F46  01A0               	clrf	setCmd_Status@cmd
 10217  0F47  3001               	movlw	1
 10218  0F48  3193  23B2  318E   	fcall	_setCmd_Status
 10219                           
 10220                           ;Dimmer_B1.c: 1063: setProductData(11, 0);
 10221  0F4B  0020               	movlb	0	; select bank0
 10222  0F4C  01E2               	clrf	setProductData@value
 10223  0F4D  300B               	movlw	11
 10224  0F4E  3191  21BB  318E   	fcall	_setProductData
 10225                           
 10226                           ;Dimmer_B1.c: 1064: setProductData(17, 0);
 10227  0F51  0020               	movlb	0	; select bank0
 10228  0F52  01E2               	clrf	setProductData@value
 10229  0F53  3011               	movlw	17
 10230  0F54  3191  21BB         	fcall	_setProductData
 10231                           
 10232                           ;Dimmer_B1.c: 1066: }
 10233                           ;Dimmer_B1.c: 1067: } else {
 10234                           
 10235                           ;Dimmer_B1.c: 1065: ;;
 10236  0F56  0008               	return
 10237  0F57                     __end_of_setDimmerLights_OnOff:	
 10238                           ;Dimmer_B1.c: 1068: ;;
 10239                           
 10240                           
 10241                           	psect	text57
 10242  1619                     __ptext57:	
 10243 ;; *************** function _setLED *****************
 10244 ;; Defined at:
 10245 ;;		line 81 in file "../src/LED_B1.c"
 10246 ;; Parameters:    Size  Location     Type
 10247 ;;  led             1    wreg     unsigned char 
 10248 ;;  command         1    2[BANK0 ] unsigned char 
 10249 ;; Auto vars:     Size  Location     Type
 10250 ;;  led             1    3[BANK0 ] unsigned char 
 10251 ;; Return value:  Size  Location     Type
 10252 ;;		None               void
 10253 ;; Registers used:
 10254 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10255 ;; Tracked objects:
 10256 ;;		On entry : 0/0
 10257 ;;		On exit  : 0/0
 10258 ;;		Unchanged: 0/0
 10259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10260 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10261 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10263 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10264 ;;Total ram usage:        2 bytes
 10265 ;; Hardware stack levels used:    1
 10266 ;; Hardware stack levels required when called:    6
 10267 ;; This function calls:
 10268 ;;		_LedPointSelect
 10269 ;; This function is called by:
 10270 ;;		_setDimmerLights_OnOff
 10271 ;;		_setLED_Initialization
 10272 ;;		_Exception_Main
 10273 ;;		_setSw_Initialization
 10274 ;; This function uses a non-reentrant model
 10275 ;;
 10276                           
 10277                           
 10278                           ;psect for function _setLED
 10279  1619                     _setLED:	
 10280                           
 10281                           ;incstack = 0
 10282                           ; Regs used in _setLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10283                           ;setLED@led stored from wreg
 10284  1619  0020               	movlb	0	; select bank0
 10285  161A  00A3               	movwf	setLED@led
 10286                           
 10287                           ;LED_B1.c: 82: LedPointSelect(led);
 10288  161B  0823               	movf	setLED@led,w
 10289  161C  3191  21DF  3196   	fcall	_LedPointSelect
 10290                           
 10291                           ;LED_B1.c: 83: if (command == 0) {
 10292  161F  0020               	movlb	0	; select bank0
 10293  1620  08A2               	movf	setLED@command,f
 10294  1621  1D03               	skipz
 10295  1622  2E28               	goto	l4837
 10296                           
 10297                           ;LED_B1.c: 112: if (led == 99) {
 10298  1623  0823               	movf	setLED@led,w
 10299  1624  3A63               	xorlw	99
 10300  1625  1D03               	skipz
 10301  1626  2E28               	goto	l4837
 10302                           
 10303                           ;LED_B1.c: 116: RB5 = 1;
 10304  1627  168D               	bsf	13,5	;volatile
 10305  1628                     l4837:	
 10306                           
 10307                           ;LED_B1.c: 118: }
 10308                           ;LED_B1.c: 120: }
 10309                           ;LED_B1.c: 121: if (command == 1) {
 10310  1628  0822               	movf	setLED@command,w
 10311  1629  3A01               	xorlw	1
 10312  162A  1D03               	skipz
 10313  162B  2E31               	goto	l4843
 10314                           
 10315                           ;LED_B1.c: 150: if (led == 99) {
 10316  162C  0823               	movf	setLED@led,w
 10317  162D  3A63               	xorlw	99
 10318  162E  1D03               	skipz
 10319  162F  2E31               	goto	l4843
 10320                           
 10321                           ;LED_B1.c: 154: RB5 = 0;
 10322  1630  128D               	bcf	13,5	;volatile
 10323  1631                     l4843:	
 10324                           
 10325                           ;LED_B1.c: 156: }
 10326                           ;LED_B1.c: 158: }
 10327                           ;LED_B1.c: 159: if (command == 10) {
 10328  1631  0822               	movf	setLED@command,w
 10329  1632  3A0A               	xorlw	10
 10330  1633  1D03               	skipz
 10331  1634  2E45               	goto	l4851
 10332                           
 10333                           ;LED_B1.c: 160: LED->GO = 0;
 10334  1635  0021               	movlb	1	; select bank1
 10335  1636  0852               	movf	_LED^(0+128),w
 10336  1637  0086               	movwf	6
 10337  1638  0187               	clrf	7
 10338  1639  1081               	bcf	1,1
 10339                           
 10340                           ;LED_B1.c: 161: LED->Time = 0;
 10341  163A  0A52               	incf	_LED^(0+128),w
 10342  163B  0086               	movwf	6
 10343  163C  0187               	clrf	7
 10344  163D  3000               	movlw	0
 10345  163E  3FC0               	movwi [0]fsr1
 10346  163F  3FC1               	movwi [1]fsr1
 10347                           
 10348                           ;LED_B1.c: 190: if (led == 99) {
 10349  1640  0020               	movlb	0	; select bank0
 10350  1641  0823               	movf	setLED@led,w
 10351  1642  3A63               	xorlw	99
 10352  1643  1903               	btfsc	3,2
 10353                           
 10354                           ;LED_B1.c: 194: RB5 = 1;
 10355  1644  168D               	bsf	13,5	;volatile
 10356  1645                     l4851:	
 10357                           
 10358                           ;LED_B1.c: 196: }
 10359                           ;LED_B1.c: 198: }
 10360                           ;LED_B1.c: 199: if (command == 11) {
 10361  1645  0822               	movf	setLED@command,w
 10362  1646  3A0B               	xorlw	11
 10363  1647  1D03               	skipz
 10364  1648  0008               	return
 10365                           
 10366                           ;LED_B1.c: 200: LED->GO = 1;
 10367  1649  0021               	movlb	1	; select bank1
 10368  164A  0852               	movf	_LED^(0+128),w
 10369  164B  0086               	movwf	6
 10370  164C  0187               	clrf	7
 10371  164D  1481               	bsf	1,1
 10372  164E  0008               	return
 10373  164F                     __end_of_setLED:	
 10374                           
 10375                           	psect	text58
 10376  11DF                     __ptext58:	
 10377 ;; *************** function _LedPointSelect *****************
 10378 ;; Defined at:
 10379 ;;		line 7 in file "../src/LED_B1.c"
 10380 ;; Parameters:    Size  Location     Type
 10381 ;;  led             1    wreg     unsigned char 
 10382 ;; Auto vars:     Size  Location     Type
 10383 ;;  led             1    1[BANK0 ] unsigned char 
 10384 ;; Return value:  Size  Location     Type
 10385 ;;		None               void
 10386 ;; Registers used:
 10387 ;;		wreg
 10388 ;; Tracked objects:
 10389 ;;		On entry : 0/0
 10390 ;;		On exit  : 0/0
 10391 ;;		Unchanged: 0/0
 10392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10394 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10395 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10396 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10397 ;;Total ram usage:        2 bytes
 10398 ;; Hardware stack levels used:    1
 10399 ;; Hardware stack levels required when called:    5
 10400 ;; This function calls:
 10401 ;;		Nothing
 10402 ;; This function is called by:
 10403 ;;		_setLED_Initialization
 10404 ;;		_setLED
 10405 ;;		_setLED_Main
 10406 ;; This function uses a non-reentrant model
 10407 ;;
 10408                           
 10409                           
 10410                           ;psect for function _LedPointSelect
 10411  11DF                     _LedPointSelect:	
 10412                           
 10413                           ;incstack = 0
 10414                           ; Regs used in _LedPointSelect: [wreg]
 10415                           ;LedPointSelect@led stored from wreg
 10416  11DF  0020               	movlb	0	; select bank0
 10417  11E0  00A1               	movwf	LedPointSelect@led
 10418                           
 10419                           ;LED_B1.c: 24: if (led == 99) {
 10420  11E1  0821               	movf	LedPointSelect@led,w
 10421  11E2  3A63               	xorlw	99
 10422  11E3  1D03               	skipz
 10423  11E4  0008               	return
 10424                           
 10425                           ;LED_B1.c: 25: LED = &VarErrLED;
 10426  11E5  30E4               	movlw	_VarErrLED& (0+255)
 10427  11E6  00A0               	movwf	??_LedPointSelect
 10428  11E7  0820               	movf	??_LedPointSelect,w
 10429  11E8  0021               	movlb	1	; select bank1
 10430  11E9  00D2               	movwf	_LED^(0+128)
 10431  11EA  0008               	return
 10432  11EB                     __end_of_LedPointSelect:	
 10433                           
 10434                           	psect	text59
 10435  110A                     __ptext59:	
 10436 ;; *************** function _setDimmerLights_DimmingClose *****************
 10437 ;; Defined at:
 10438 ;;		line 1837 in file "../src/Dimmer_B1.c"
 10439 ;; Parameters:    Size  Location     Type
 10440 ;;		None
 10441 ;; Auto vars:     Size  Location     Type
 10442 ;;		None
 10443 ;; Return value:  Size  Location     Type
 10444 ;;		None               void
 10445 ;; Registers used:
 10446 ;;		wreg, status,2, status,0, pclath, cstack
 10447 ;; Tracked objects:
 10448 ;;		On entry : 0/0
 10449 ;;		On exit  : 0/0
 10450 ;;		Unchanged: 0/0
 10451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10456 ;;Total ram usage:        0 bytes
 10457 ;; Hardware stack levels used:    1
 10458 ;; Hardware stack levels required when called:    6
 10459 ;; This function calls:
 10460 ;;		_setDimmerIntr_Dimming_Sw
 10461 ;; This function is called by:
 10462 ;;		_setDimmerLights_OnOff
 10463 ;; This function uses a non-reentrant model
 10464 ;;
 10465                           
 10466                           
 10467                           ;psect for function _setDimmerLights_DimmingClose
 10468  110A                     _setDimmerLights_DimmingClose:	
 10469                           
 10470                           ;Dimmer_B1.c: 1839: setDimmerIntr_Dimming_Sw(1, 0);
 10471                           
 10472                           ;incstack = 0
 10473                           ; Regs used in _setDimmerLights_DimmingClose: [wreg+status,2+status,0+pclath+cstack]
 10474  110A  0020               	movlb	0	; select bank0
 10475  110B  01A0               	clrf	setDimmerIntr_Dimming_Sw@command
 10476  110C  3001               	movlw	1
 10477  110D  3193  236C         	fcall	_setDimmerIntr_Dimming_Sw
 10478  110F  0008               	return
 10479  1110                     __end_of_setDimmerLights_DimmingClose:	
 10480                           
 10481                           	psect	text60
 10482  11D3                     __ptext60:	
 10483 ;; *************** function _setDimmerIntr_DimmingValue *****************
 10484 ;; Defined at:
 10485 ;;		line 107 in file "../src/Dimmer_B1.c"
 10486 ;; Parameters:    Size  Location     Type
 10487 ;;  lights          1    wreg     unsigned char 
 10488 ;;  value           1    0[BANK0 ] unsigned char 
 10489 ;; Auto vars:     Size  Location     Type
 10490 ;;  lights          1    2[BANK0 ] unsigned char 
 10491 ;; Return value:  Size  Location     Type
 10492 ;;		None               void
 10493 ;; Registers used:
 10494 ;;		wreg
 10495 ;; Tracked objects:
 10496 ;;		On entry : 0/0
 10497 ;;		On exit  : 0/0
 10498 ;;		Unchanged: 0/0
 10499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10500 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10501 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10502 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10503 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10504 ;;Total ram usage:        3 bytes
 10505 ;; Hardware stack levels used:    1
 10506 ;; Hardware stack levels required when called:    5
 10507 ;; This function calls:
 10508 ;;		Nothing
 10509 ;; This function is called by:
 10510 ;;		_setDimmerLights_OnOff
 10511 ;; This function uses a non-reentrant model
 10512 ;;
 10513                           
 10514                           
 10515                           ;psect for function _setDimmerIntr_DimmingValue
 10516  11D3                     _setDimmerIntr_DimmingValue:	
 10517                           
 10518                           ;incstack = 0
 10519                           ; Regs used in _setDimmerIntr_DimmingValue: [wreg]
 10520                           ;setDimmerIntr_DimmingValue@lights stored from wreg
 10521  11D3  0020               	movlb	0	; select bank0
 10522  11D4  00A2               	movwf	setDimmerIntr_DimmingValue@lights
 10523                           
 10524                           ;Dimmer_B1.c: 109: if (lights == 1) {
 10525  11D5  0822               	movf	setDimmerIntr_DimmingValue@lights,w
 10526  11D6  3A01               	xorlw	1
 10527  11D7  1D03               	skipz
 10528  11D8  0008               	return
 10529                           
 10530                           ;Dimmer_B1.c: 110: DimmerIntr1.DimmingValue = value;
 10531  11D9  0820               	movf	setDimmerIntr_DimmingValue@value,w
 10532  11DA  00A1               	movwf	??_setDimmerIntr_DimmingValue
 10533  11DB  0821               	movf	??_setDimmerIntr_DimmingValue,w
 10534  11DC  0021               	movlb	1	; select bank1
 10535  11DD  00BE               	movwf	(_DimmerIntr1^(0+128)+5)
 10536  11DE  0008               	return
 10537  11DF                     __end_of_setDimmerIntr_DimmingValue:	
 10538                           
 10539                           	psect	text61
 10540  139A                     __ptext61:	
 10541 ;; *************** function _setDimmerIntr_ControlStatus *****************
 10542 ;; Defined at:
 10543 ;;		line 89 in file "../src/Dimmer_B1.c"
 10544 ;; Parameters:    Size  Location     Type
 10545 ;;  lights          1    wreg     unsigned char 
 10546 ;;  command         1    0[BANK0 ] unsigned char 
 10547 ;; Auto vars:     Size  Location     Type
 10548 ;;  lights          1    2[BANK0 ] unsigned char 
 10549 ;; Return value:  Size  Location     Type
 10550 ;;		None               void
 10551 ;; Registers used:
 10552 ;;		wreg, status,2, status,0
 10553 ;; Tracked objects:
 10554 ;;		On entry : 0/0
 10555 ;;		On exit  : 0/0
 10556 ;;		Unchanged: 0/0
 10557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10558 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10559 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10560 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10561 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10562 ;;Total ram usage:        3 bytes
 10563 ;; Hardware stack levels used:    1
 10564 ;; Hardware stack levels required when called:    5
 10565 ;; This function calls:
 10566 ;;		Nothing
 10567 ;; This function is called by:
 10568 ;;		_setDimmerLights_OnOff
 10569 ;; This function uses a non-reentrant model
 10570 ;;
 10571                           
 10572                           
 10573                           ;psect for function _setDimmerIntr_ControlStatus
 10574  139A                     _setDimmerIntr_ControlStatus:	
 10575                           
 10576                           ;incstack = 0
 10577                           ; Regs used in _setDimmerIntr_ControlStatus: [wreg+status,2+status,0]
 10578                           ;setDimmerIntr_ControlStatus@lights stored from wreg
 10579  139A  0020               	movlb	0	; select bank0
 10580  139B  00A2               	movwf	setDimmerIntr_ControlStatus@lights
 10581                           
 10582                           ;Dimmer_B1.c: 91: if (lights == 1) {
 10583  139C  0822               	movf	setDimmerIntr_ControlStatus@lights,w
 10584  139D  3A01               	xorlw	1
 10585  139E  1D03               	skipz
 10586  139F  0008               	return
 10587                           
 10588                           ;Dimmer_B1.c: 92: DimmerIntr1.ControlStatus = command == 1 ? 1 : 0;
 10589  13A0  0820               	movf	setDimmerIntr_ControlStatus@command,w
 10590  13A1  3A01               	xorlw	1
 10591  13A2  3000               	movlw	0
 10592  13A3  1903               	skipnz
 10593  13A4  3001               	movlw	1
 10594  13A5  00A1               	movwf	??_setDimmerIntr_ControlStatus
 10595  13A6  0DA1               	rlf	??_setDimmerIntr_ControlStatus,f
 10596  13A7  0DA1               	rlf	??_setDimmerIntr_ControlStatus,f
 10597  13A8  0DA1               	rlf	??_setDimmerIntr_ControlStatus,f
 10598  13A9  0021               	movlb	1	; select bank1
 10599  13AA  0839               	movf	_DimmerIntr1^(0+128),w
 10600  13AB  0020               	movlb	0	; select bank0
 10601  13AC  0621               	xorwf	??_setDimmerIntr_ControlStatus,w
 10602  13AD  39F7               	andlw	-9
 10603  13AE  0621               	xorwf	??_setDimmerIntr_ControlStatus,w
 10604  13AF  0021               	movlb	1	; select bank1
 10605  13B0  00B9               	movwf	_DimmerIntr1^(0+128)
 10606  13B1  0008               	return
 10607  13B2                     __end_of_setDimmerIntr_ControlStatus:	
 10608                           
 10609                           	psect	text62
 10610  0D96                     __ptext62:	
 10611 ;; *************** function _setDelayOff_GO *****************
 10612 ;; Defined at:
 10613 ;;		line 87 in file "../src/DelayOff_B1.c"
 10614 ;; Parameters:    Size  Location     Type
 10615 ;;  sw              1    wreg     unsigned char 
 10616 ;;  command         1   69[BANK0 ] unsigned char 
 10617 ;;  value           1   70[BANK0 ] unsigned char 
 10618 ;; Auto vars:     Size  Location     Type
 10619 ;;  sw              1   76[BANK0 ] unsigned char 
 10620 ;;  k               1   75[BANK0 ] unsigned char 
 10621 ;;  j               1   74[BANK0 ] unsigned char 
 10622 ;;  i               1   73[BANK0 ] unsigned char 
 10623 ;; Return value:  Size  Location     Type
 10624 ;;		None               void
 10625 ;; Registers used:
 10626 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10627 ;; Tracked objects:
 10628 ;;		On entry : 0/0
 10629 ;;		On exit  : 0/0
 10630 ;;		Unchanged: 0/0
 10631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10632 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10633 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10634 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10635 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10636 ;;Total ram usage:        8 bytes
 10637 ;; Hardware stack levels used:    1
 10638 ;; Hardware stack levels required when called:    6
 10639 ;; This function calls:
 10640 ;;		_DelayOffPointSelect
 10641 ;;		___bmul
 10642 ;;		_setProductData
 10643 ;; This function is called by:
 10644 ;;		_setDimmerLights_OnOff
 10645 ;; This function uses a non-reentrant model
 10646 ;;
 10647                           
 10648                           
 10649                           ;psect for function _setDelayOff_GO
 10650  0D96                     _setDelayOff_GO:	
 10651                           
 10652                           ;incstack = 0
 10653                           ; Regs used in _setDelayOff_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10654                           ;setDelayOff_GO@sw stored from wreg
 10655  0D96  0020               	movlb	0	; select bank0
 10656  0D97  00EC               	movwf	setDelayOff_GO@sw
 10657                           
 10658                           ;DelayOff_B1.c: 89: DelayOffPointSelect(sw);
 10659  0D98  086C               	movf	setDelayOff_GO@sw,w
 10660  0D99  3191  21AF  318D   	fcall	_DelayOffPointSelect
 10661                           
 10662                           ;DelayOff_B1.c: 90: DelayOff->GO = command == 1 ? 1 : 0;
 10663  0D9C  0020               	movlb	0	; select bank0
 10664  0D9D  0865               	movf	setDelayOff_GO@command,w
 10665  0D9E  3A01               	xorlw	1
 10666  0D9F  3000               	movlw	0
 10667  0DA0  1903               	skipnz
 10668  0DA1  3001               	movlw	1
 10669  0DA2  00E7               	movwf	??_setDelayOff_GO
 10670  0DA3  0021               	movlb	1	; select bank1
 10671  0DA4  0850               	movf	_DelayOff^(0+128),w
 10672  0DA5  0086               	movwf	6
 10673  0DA6  3001               	movlw	1	; select bank2/3
 10674  0DA7  0087               	movwf	7
 10675  0DA8  0020               	movlb	0	; select bank0
 10676  0DA9  0DE7               	rlf	??_setDelayOff_GO,f
 10677  0DAA  0801               	movf	1,w
 10678  0DAB  0667               	xorwf	??_setDelayOff_GO,w
 10679  0DAC  39FD               	andlw	-3
 10680  0DAD  0667               	xorwf	??_setDelayOff_GO,w
 10681  0DAE  0081               	movwf	1
 10682                           
 10683                           ;DelayOff_B1.c: 91: DelayOff->SecondTime = 0;
 10684  0DAF  0021               	movlb	1	; select bank1
 10685  0DB0  0850               	movf	_DelayOff^(0+128),w
 10686  0DB1  3E02               	addlw	2
 10687  0DB2  0086               	movwf	6
 10688  0DB3  3001               	movlw	1	; select bank2/3
 10689  0DB4  0087               	movwf	7
 10690  0DB5  3000               	movlw	0
 10691  0DB6  3FC0               	movwi [0]fsr1
 10692  0DB7  3FC1               	movwi [1]fsr1
 10693                           
 10694                           ;DelayOff_B1.c: 92: DelayOff->MinuteTime = 0;
 10695  0DB8  0850               	movf	_DelayOff^(0+128),w
 10696  0DB9  3E04               	addlw	4
 10697  0DBA  0086               	movwf	6
 10698  0DBB  3001               	movlw	1	; select bank2/3
 10699  0DBC  0087               	movwf	7
 10700  0DBD  0181               	clrf	1
 10701                           
 10702                           ;DelayOff_B1.c: 94: if (command == 1) {
 10703  0DBE  0020               	movlb	0	; select bank0
 10704  0DBF  0865               	movf	setDelayOff_GO@command,w
 10705  0DC0  3A01               	xorlw	1
 10706  0DC1  1D03               	skipz
 10707  0DC2  2E18               	goto	l4743
 10708                           
 10709                           ;DelayOff_B1.c: 96: char i = 5, j = 0, k = 0;
 10710  0DC3  3005               	movlw	5
 10711  0DC4  00E7               	movwf	??_setDelayOff_GO
 10712  0DC5  0867               	movf	??_setDelayOff_GO,w
 10713  0DC6  00E9               	movwf	setDelayOff_GO@i
 10714  0DC7  01EA               	clrf	setDelayOff_GO@j
 10715  0DC8  01EB               	clrf	setDelayOff_GO@k
 10716                           
 10717                           ;DelayOff_B1.c: 97: if (((value % 16) == 5 || (value % 16) == 0) && value <= 0x30) {
 10718  0DC9  300F               	movlw	15
 10719  0DCA  0566               	andwf	setDelayOff_GO@value,w
 10720  0DCB  00E7               	movwf	??_setDelayOff_GO
 10721  0DCC  0867               	movf	??_setDelayOff_GO,w
 10722  0DCD  3A05               	xorlw	5
 10723  0DCE  1903               	skipnz
 10724  0DCF  2DD4               	goto	l4729
 10725  0DD0  0866               	movf	setDelayOff_GO@value,w
 10726  0DD1  390F               	andlw	15
 10727  0DD2  1D03               	btfss	3,2
 10728  0DD3  2E04               	goto	l4739
 10729  0DD4                     l4729:	
 10730  0DD4  3031               	movlw	49
 10731  0DD5  0266               	subwf	setDelayOff_GO@value,w
 10732  0DD6  1803               	skipnc
 10733  0DD7  2E04               	goto	l4739
 10734                           
 10735                           ;DelayOff_B1.c: 98: j = value & 0x0f;
 10736  0DD8  0866               	movf	setDelayOff_GO@value,w
 10737  0DD9  390F               	andlw	15
 10738  0DDA  00E7               	movwf	??_setDelayOff_GO
 10739  0DDB  0867               	movf	??_setDelayOff_GO,w
 10740  0DDC  00EA               	movwf	setDelayOff_GO@j
 10741                           
 10742                           ;DelayOff_B1.c: 99: k = (value >> 4) & 0x0f;
 10743  0DDD  0866               	movf	setDelayOff_GO@value,w
 10744  0DDE  00E7               	movwf	??_setDelayOff_GO
 10745  0DDF  3004               	movlw	4
 10746  0DE0                     u4505:	
 10747  0DE0  36E7               	lsrf	??_setDelayOff_GO,f
 10748  0DE1  0B89               	decfsz	9,f
 10749  0DE2  2DE0               	goto	u4505
 10750  0DE3  0867               	movf	??_setDelayOff_GO,w
 10751  0DE4  390F               	andlw	15
 10752  0DE5  00E8               	movwf	??_setDelayOff_GO+1
 10753  0DE6  0868               	movf	??_setDelayOff_GO+1,w
 10754  0DE7  00EB               	movwf	setDelayOff_GO@k
 10755                           
 10756                           ;DelayOff_B1.c: 100: DelayOff->Value = j + (k * 10);
 10757  0DE8  300A               	movlw	10
 10758  0DE9  00E7               	movwf	??_setDelayOff_GO
 10759  0DEA  0867               	movf	??_setDelayOff_GO,w
 10760  0DEB  00A0               	movwf	___bmul@multiplicand
 10761  0DEC  086B               	movf	setDelayOff_GO@k,w
 10762  0DED  3192  22D0  318D   	fcall	___bmul
 10763  0DF0  0020               	movlb	0	; select bank0
 10764  0DF1  076A               	addwf	setDelayOff_GO@j,w
 10765  0DF2  00E8               	movwf	??_setDelayOff_GO+1
 10766  0DF3  0021               	movlb	1	; select bank1
 10767  0DF4  0A50               	incf	_DelayOff^(0+128),w
 10768  0DF5  0086               	movwf	6
 10769  0DF6  3001               	movlw	1	; select bank2/3
 10770  0DF7  0087               	movwf	7
 10771  0DF8  0020               	movlb	0	; select bank0
 10772  0DF9  0868               	movf	??_setDelayOff_GO+1,w
 10773  0DFA  0081               	movwf	1
 10774                           
 10775                           ;DelayOff_B1.c: 102: setProductData(26 + sw, value);
 10776  0DFB  0866               	movf	setDelayOff_GO@value,w
 10777  0DFC  00E7               	movwf	??_setDelayOff_GO
 10778  0DFD  0867               	movf	??_setDelayOff_GO,w
 10779  0DFE  00E2               	movwf	setProductData@value
 10780  0DFF  086C               	movf	setDelayOff_GO@sw,w
 10781  0E00  3E1A               	addlw	26
 10782  0E01  3191  21BB         	fcall	_setProductData
 10783                           
 10784                           ;DelayOff_B1.c: 103: } else {
 10785  0E03  0008               	return
 10786  0E04                     l4739:	
 10787                           
 10788                           ;DelayOff_B1.c: 104: DelayOff->Value = 0x05;
 10789  0E04  3005               	movlw	5
 10790  0E05  0020               	movlb	0	; select bank0
 10791  0E06  00E7               	movwf	??_setDelayOff_GO
 10792  0E07  0021               	movlb	1	; select bank1
 10793  0E08  0A50               	incf	_DelayOff^(0+128),w
 10794  0E09  0086               	movwf	6
 10795  0E0A  3001               	movlw	1	; select bank2/3
 10796  0E0B  0087               	movwf	7
 10797  0E0C  0020               	movlb	0	; select bank0
 10798  0E0D  0867               	movf	??_setDelayOff_GO,w
 10799  0E0E  0081               	movwf	1
 10800                           
 10801                           ;DelayOff_B1.c: 105: setProductData(26 + sw, 0x05);
 10802  0E0F  3005               	movlw	5
 10803  0E10  00E7               	movwf	??_setDelayOff_GO
 10804  0E11  0867               	movf	??_setDelayOff_GO,w
 10805  0E12  00E2               	movwf	setProductData@value
 10806  0E13  086C               	movf	setDelayOff_GO@sw,w
 10807  0E14  3E1A               	addlw	26
 10808  0E15  3191  21BB         	fcall	_setProductData
 10809                           
 10810                           ;DelayOff_B1.c: 106: }
 10811                           ;DelayOff_B1.c: 108: } else if (command == 0) {
 10812  0E17  0008               	return
 10813  0E18                     l4743:	
 10814  0E18  0020               	movlb	0	; select bank0
 10815  0E19  08E5               	movf	setDelayOff_GO@command,f
 10816  0E1A  1D03               	skipz
 10817  0E1B  0008               	return
 10818                           
 10819                           ;DelayOff_B1.c: 109: setProductData(26 + sw, 0);
 10820  0E1C  01E2               	clrf	setProductData@value
 10821  0E1D  086C               	movf	setDelayOff_GO@sw,w
 10822  0E1E  3E1A               	addlw	26
 10823  0E1F  3191  21BB         	fcall	_setProductData
 10824  0E21  0008               	return
 10825  0E22                     __end_of_setDelayOff_GO:	
 10826                           
 10827                           	psect	text63
 10828  12D0                     __ptext63:	
 10829 ;; *************** function ___bmul *****************
 10830 ;; Defined at:
 10831 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul8.c"
 10832 ;; Parameters:    Size  Location     Type
 10833 ;;  multiplier      1    wreg     unsigned char 
 10834 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 10835 ;; Auto vars:     Size  Location     Type
 10836 ;;  multiplier      1    3[BANK0 ] unsigned char 
 10837 ;;  product         1    2[BANK0 ] unsigned char 
 10838 ;; Return value:  Size  Location     Type
 10839 ;;                  1    wreg      unsigned char 
 10840 ;; Registers used:
 10841 ;;		wreg, status,2, status,0
 10842 ;; Tracked objects:
 10843 ;;		On entry : 0/0
 10844 ;;		On exit  : 0/0
 10845 ;;		Unchanged: 0/0
 10846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10847 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10848 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10849 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10850 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10851 ;;Total ram usage:        4 bytes
 10852 ;; Hardware stack levels used:    1
 10853 ;; Hardware stack levels required when called:    5
 10854 ;; This function calls:
 10855 ;;		Nothing
 10856 ;; This function is called by:
 10857 ;;		_setDelayOff_GO
 10858 ;;		_DelayTimejudge
 10859 ;; This function uses a non-reentrant model
 10860 ;;
 10861                           
 10862                           
 10863                           ;psect for function ___bmul
 10864  12D0                     ___bmul:	
 10865                           
 10866                           ;incstack = 0
 10867                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 10868                           ;___bmul@multiplier stored from wreg
 10869  12D0  0020               	movlb	0	; select bank0
 10870  12D1  00A3               	movwf	___bmul@multiplier
 10871  12D2  01A2               	clrf	___bmul@product
 10872  12D3                     l4387:	
 10873  12D3  1C23               	btfss	___bmul@multiplier,0
 10874  12D4  2AD9               	goto	l4391
 10875  12D5  0820               	movf	___bmul@multiplicand,w
 10876  12D6  00A1               	movwf	??___bmul
 10877  12D7  0821               	movf	??___bmul,w
 10878  12D8  07A2               	addwf	___bmul@product,f
 10879  12D9                     l4391:	
 10880  12D9  1003               	clrc
 10881  12DA  0DA0               	rlf	___bmul@multiplicand,f
 10882  12DB  1003               	clrc
 10883  12DC  0CA3               	rrf	___bmul@multiplier,f
 10884  12DD  08A3               	movf	___bmul@multiplier,f
 10885  12DE  1D03               	skipz
 10886  12DF  2AD3               	goto	l4387
 10887  12E0  0822               	movf	___bmul@product,w
 10888  12E1  0008               	return
 10889  12E2                     __end_of___bmul:	
 10890                           
 10891                           	psect	text64
 10892  13B2                     __ptext64:	
 10893 ;; *************** function _setCmd_Status *****************
 10894 ;; Defined at:
 10895 ;;		line 651 in file "../src/Main_B1.c"
 10896 ;; Parameters:    Size  Location     Type
 10897 ;;  number          1    wreg     unsigned char 
 10898 ;;  cmd             1    0[BANK0 ] unsigned char 
 10899 ;; Auto vars:     Size  Location     Type
 10900 ;;  number          1    2[BANK0 ] unsigned char 
 10901 ;; Return value:  Size  Location     Type
 10902 ;;		None               void
 10903 ;; Registers used:
 10904 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10905 ;; Tracked objects:
 10906 ;;		On entry : 0/0
 10907 ;;		On exit  : 0/0
 10908 ;;		Unchanged: 0/0
 10909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10910 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10911 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10912 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10913 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10914 ;;Total ram usage:        3 bytes
 10915 ;; Hardware stack levels used:    1
 10916 ;; Hardware stack levels required when called:    5
 10917 ;; This function calls:
 10918 ;;		Nothing
 10919 ;; This function is called by:
 10920 ;;		_setDimmerLights_OnOff
 10921 ;; This function uses a non-reentrant model
 10922 ;;
 10923                           
 10924                           
 10925                           ;psect for function _setCmd_Status
 10926  13B2                     _setCmd_Status:	
 10927                           
 10928                           ;incstack = 0
 10929                           ; Regs used in _setCmd_Status: [wreg-fsr0h+status,2+status,0]
 10930                           ;setCmd_Status@number stored from wreg
 10931  13B2  0020               	movlb	0	; select bank0
 10932  13B3  00A2               	movwf	setCmd_Status@number
 10933                           
 10934                           ;Main_B1.c: 652: switch (number) {
 10935  13B4  2BC4               	goto	l4875
 10936  13B5                     l4871:	
 10937                           ;Main_B1.c: 653: case 1:
 10938                           
 10939                           
 10940                           ;Main_B1.c: 654: Cmd.all_off = cmd == 1 ? 1 : 0;
 10941  13B5  0820               	movf	setCmd_Status@cmd,w
 10942  13B6  3A01               	xorlw	1
 10943  13B7  3000               	movlw	0
 10944  13B8  1903               	skipnz
 10945  13B9  3001               	movlw	1
 10946  13BA  00A1               	movwf	??_setCmd_Status
 10947  13BB  0021               	movlb	1	; select bank1
 10948  13BC  084F               	movf	_Cmd^(0+128),w
 10949  13BD  0020               	movlb	0	; select bank0
 10950  13BE  0621               	xorwf	??_setCmd_Status,w
 10951  13BF  39FE               	andlw	-2
 10952  13C0  0621               	xorwf	??_setCmd_Status,w
 10953  13C1  0021               	movlb	1	; select bank1
 10954  13C2  00CF               	movwf	_Cmd^(0+128)
 10955                           
 10956                           ;Main_B1.c: 656: }
 10957                           
 10958                           ;Main_B1.c: 655: break;
 10959  13C3  0008               	return
 10960  13C4                     l4875:	
 10961  13C4  0020               	movlb	0	; select bank0
 10962  13C5  0822               	movf	setCmd_Status@number,w
 10963                           
 10964                           ; Switch size 1, requested type "space"
 10965                           ; Number of cases is 1, Range of values is 1 to 1
 10966                           ; switch strategies available:
 10967                           ; Name         Instructions Cycles
 10968                           ; simple_byte            4     3 (average)
 10969                           ; direct_byte           11     9 (fixed)
 10970                           ; jumptable            263     9 (fixed)
 10971                           ;	Chosen strategy is simple_byte
 10972  13C6  3A01               	xorlw	1	; case 1
 10973  13C7  1903               	skipnz
 10974  13C8  2BB5               	goto	l4871
 10975  13C9  2BCA               	goto	l1137
 10976  13CA                     l1137:	
 10977  13CA  0008               	return
 10978  13CB                     __end_of_setCmd_Status:	
 10979                           
 10980                           	psect	text65
 10981  1164                     __ptext65:	
 10982 ;; *************** function _getMain_All_LightsStatus *****************
 10983 ;; Defined at:
 10984 ;;		line 373 in file "../src/Main_B1.c"
 10985 ;; Parameters:    Size  Location     Type
 10986 ;;		None
 10987 ;; Auto vars:     Size  Location     Type
 10988 ;;  status          1    0[BANK0 ] unsigned char 
 10989 ;; Return value:  Size  Location     Type
 10990 ;;                  1    wreg      unsigned char 
 10991 ;; Registers used:
 10992 ;;		wreg, status,2
 10993 ;; Tracked objects:
 10994 ;;		On entry : 0/0
 10995 ;;		On exit  : 0/0
 10996 ;;		Unchanged: 0/0
 10997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10999 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11001 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11002 ;;Total ram usage:        1 bytes
 11003 ;; Hardware stack levels used:    1
 11004 ;; Hardware stack levels required when called:    5
 11005 ;; This function calls:
 11006 ;;		Nothing
 11007 ;; This function is called by:
 11008 ;;		_DimmerLights_Main
 11009 ;;		_setDimmerLights_Main
 11010 ;;		_setDimmerLights_OnOff
 11011 ;;		_Flash_Memory_Main
 11012 ;;		_Exception_Main
 11013 ;;		_Load_Main
 11014 ;;		_setTemp_Main
 11015 ;; This function uses a non-reentrant model
 11016 ;;
 11017                           
 11018                           
 11019                           ;psect for function _getMain_All_LightsStatus
 11020  1164                     _getMain_All_LightsStatus:	
 11021                           
 11022                           ;Main_B1.c: 374: char status = 0;
 11023                           
 11024                           ;incstack = 0
 11025                           ; Regs used in _getMain_All_LightsStatus: [wreg+status,2]
 11026  1164  0020               	movlb	0	; select bank0
 11027  1165  01A0               	clrf	getMain_All_LightsStatus@status
 11028                           
 11029                           ;Main_B1.c: 381: status = DimmerLights1.Status == 1 ? 1 : 0;
 11030  1166  3000               	movlw	0
 11031  1167  0022               	movlb	2	; select bank2
 11032  1168  1849               	btfsc	(_DimmerLights1^(0+256)+1),0
 11033  1169  3001               	movlw	1
 11034  116A  0020               	movlb	0	; select bank0
 11035  116B  00A0               	movwf	getMain_All_LightsStatus@status
 11036                           
 11037                           ;Main_B1.c: 420: return status;
 11038  116C  0820               	movf	getMain_All_LightsStatus@status,w
 11039  116D  0008               	return
 11040  116E                     __end_of_getMain_All_LightsStatus:	
 11041                           
 11042                           	psect	text66
 11043  1268                     __ptext66:	
 11044 ;; *************** function _getDelayOff_GO *****************
 11045 ;; Defined at:
 11046 ;;		line 114 in file "../src/DelayOff_B1.c"
 11047 ;; Parameters:    Size  Location     Type
 11048 ;;  sw              1    wreg     unsigned char 
 11049 ;; Auto vars:     Size  Location     Type
 11050 ;;  sw              1    2[BANK0 ] unsigned char 
 11051 ;;  go              1    3[BANK0 ] unsigned char 
 11052 ;; Return value:  Size  Location     Type
 11053 ;;                  1    wreg      unsigned char 
 11054 ;; Registers used:
 11055 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11056 ;; Tracked objects:
 11057 ;;		On entry : 0/0
 11058 ;;		On exit  : 0/0
 11059 ;;		Unchanged: 0/0
 11060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11062 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11064 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11065 ;;Total ram usage:        2 bytes
 11066 ;; Hardware stack levels used:    1
 11067 ;; Hardware stack levels required when called:    6
 11068 ;; This function calls:
 11069 ;;		_DelayOffPointSelect
 11070 ;; This function is called by:
 11071 ;;		_setDimmerLights_OnOff
 11072 ;; This function uses a non-reentrant model
 11073 ;;
 11074                           
 11075                           
 11076                           ;psect for function _getDelayOff_GO
 11077  1268                     _getDelayOff_GO:	
 11078                           
 11079                           ;incstack = 0
 11080                           ; Regs used in _getDelayOff_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11081                           ;getDelayOff_GO@sw stored from wreg
 11082  1268  0020               	movlb	0	; select bank0
 11083  1269  00A2               	movwf	getDelayOff_GO@sw
 11084                           
 11085                           ;DelayOff_B1.c: 115: DelayOffPointSelect(sw);
 11086  126A  0822               	movf	getDelayOff_GO@sw,w
 11087  126B  3191  21AF         	fcall	_DelayOffPointSelect
 11088                           
 11089                           ;DelayOff_B1.c: 116: char go = DelayOff->GO == 1 ? 1 : 0;
 11090  126D  0021               	movlb	1	; select bank1
 11091  126E  0850               	movf	_DelayOff^(0+128),w
 11092  126F  0086               	movwf	6
 11093  1270  3001               	movlw	1	; select bank2/3
 11094  1271  0087               	movwf	7
 11095  1272  3000               	movlw	0
 11096  1273  1881               	btfsc	1,1
 11097  1274  3001               	movlw	1
 11098  1275  0020               	movlb	0	; select bank0
 11099  1276  00A3               	movwf	getDelayOff_GO@go
 11100                           
 11101                           ;DelayOff_B1.c: 117: return go;
 11102  1277  0823               	movf	getDelayOff_GO@go,w
 11103  1278  0008               	return
 11104  1279                     __end_of_getDelayOff_GO:	
 11105                           
 11106                           	psect	text67
 11107  12BE                     __ptext67:	
 11108 ;; *************** function _getCmd_Status *****************
 11109 ;; Defined at:
 11110 ;;		line 659 in file "../src/Main_B1.c"
 11111 ;; Parameters:    Size  Location     Type
 11112 ;;  number          1    wreg     unsigned char 
 11113 ;; Auto vars:     Size  Location     Type
 11114 ;;  number          1    0[BANK0 ] unsigned char 
 11115 ;;  cmd             1    1[BANK0 ] unsigned char 
 11116 ;; Return value:  Size  Location     Type
 11117 ;;                  1    wreg      unsigned char 
 11118 ;; Registers used:
 11119 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11120 ;; Tracked objects:
 11121 ;;		On entry : 0/0
 11122 ;;		On exit  : 0/0
 11123 ;;		Unchanged: 0/0
 11124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11126 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11128 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11129 ;;Total ram usage:        2 bytes
 11130 ;; Hardware stack levels used:    1
 11131 ;; Hardware stack levels required when called:    5
 11132 ;; This function calls:
 11133 ;;		Nothing
 11134 ;; This function is called by:
 11135 ;;		_setDimmerLights_OnOff
 11136 ;; This function uses a non-reentrant model
 11137 ;;
 11138                           
 11139                           
 11140                           ;psect for function _getCmd_Status
 11141  12BE                     _getCmd_Status:	
 11142                           
 11143                           ;incstack = 0
 11144                           ; Regs used in _getCmd_Status: [wreg-fsr0h+status,2+status,0]
 11145                           ;getCmd_Status@number stored from wreg
 11146  12BE  0020               	movlb	0	; select bank0
 11147  12BF  00A0               	movwf	getCmd_Status@number
 11148                           
 11149                           ;Main_B1.c: 660: char cmd = 0;
 11150  12C0  01A1               	clrf	getCmd_Status@cmd
 11151                           
 11152                           ;Main_B1.c: 661: switch (number) {
 11153  12C1  2AC9               	goto	l4863
 11154  12C2                     l4859:	
 11155                           ;Main_B1.c: 662: case 1:
 11156                           
 11157                           
 11158                           ;Main_B1.c: 663: cmd = Cmd.all_off == 1 ? 1 : 0;
 11159  12C2  3000               	movlw	0
 11160  12C3  0021               	movlb	1	; select bank1
 11161  12C4  184F               	btfsc	_Cmd^(0+128),0
 11162  12C5  3001               	movlw	1
 11163  12C6  0020               	movlb	0	; select bank0
 11164  12C7  00A1               	movwf	getCmd_Status@cmd
 11165                           
 11166                           ;Main_B1.c: 665: }
 11167                           
 11168                           ;Main_B1.c: 664: break;
 11169  12C8  2ACE               	goto	l4865
 11170  12C9                     l4863:	
 11171  12C9  0820               	movf	getCmd_Status@number,w
 11172                           
 11173                           ; Switch size 1, requested type "space"
 11174                           ; Number of cases is 1, Range of values is 1 to 1
 11175                           ; switch strategies available:
 11176                           ; Name         Instructions Cycles
 11177                           ; simple_byte            4     3 (average)
 11178                           ; direct_byte           11     9 (fixed)
 11179                           ; jumptable            263     9 (fixed)
 11180                           ;	Chosen strategy is simple_byte
 11181  12CA  3A01               	xorlw	1	; case 1
 11182  12CB  1903               	skipnz
 11183  12CC  2AC2               	goto	l4859
 11184  12CD  2ACE               	goto	l4865
 11185  12CE                     l4865:	
 11186                           
 11187                           ;Main_B1.c: 666: return cmd;
 11188  12CE  0821               	movf	getCmd_Status@cmd,w
 11189  12CF  0008               	return
 11190  12D0                     __end_of_getCmd_Status:	
 11191                           
 11192                           	psect	text68
 11193  1775                     __ptext68:	
 11194 ;; *************** function _setDimmerLights_Dimming *****************
 11195 ;; Defined at:
 11196 ;;		line 1074 in file "../src/Dimmer_B1.c"
 11197 ;; Parameters:    Size  Location     Type
 11198 ;;  lights          1    wreg     unsigned char 
 11199 ;;  status          1   69[BANK0 ] unsigned char 
 11200 ;; Auto vars:     Size  Location     Type
 11201 ;;  lights          1   72[BANK0 ] unsigned char 
 11202 ;;  value           1   71[BANK0 ] unsigned char 
 11203 ;; Return value:  Size  Location     Type
 11204 ;;		None               void
 11205 ;; Registers used:
 11206 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11207 ;; Tracked objects:
 11208 ;;		On entry : 0/0
 11209 ;;		On exit  : 0/0
 11210 ;;		Unchanged: 0/0
 11211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11212 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11213 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11214 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11215 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11216 ;;Total ram usage:        4 bytes
 11217 ;; Hardware stack levels used:    1
 11218 ;; Hardware stack levels required when called:    8
 11219 ;; This function calls:
 11220 ;;		_getDimmerIntr_DimmingValue
 11221 ;;		_getDimmerLights_ValueToPercent
 11222 ;;		_setBuz
 11223 ;;		_setDimmerIntr_Dimming_Sw
 11224 ;;		_setDimmerIntr_MaxmumValue
 11225 ;;		_setDimmerLights_Line
 11226 ;;		_setMemory_Modify
 11227 ;;		_setProductData
 11228 ;; This function is called by:
 11229 ;;		_setDimmerLights_Main
 11230 ;; This function uses a non-reentrant model
 11231 ;;
 11232                           
 11233                           
 11234                           ;psect for function _setDimmerLights_Dimming
 11235  1775                     _setDimmerLights_Dimming:	
 11236                           
 11237                           ;incstack = 0
 11238                           ; Regs used in _setDimmerLights_Dimming: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 11239                           ;setDimmerLights_Dimming@lights stored from wreg
 11240  1775  0020               	movlb	0	; select bank0
 11241  1776  00E8               	movwf	setDimmerLights_Dimming@lights
 11242                           
 11243                           ;Dimmer_B1.c: 1075: setDimmerIntr_Dimming_Sw(lights, status);
 11244  1777  0865               	movf	setDimmerLights_Dimming@status,w
 11245  1778  00E6               	movwf	??_setDimmerLights_Dimming
 11246  1779  0866               	movf	??_setDimmerLights_Dimming,w
 11247  177A  00A0               	movwf	setDimmerIntr_Dimming_Sw@command
 11248  177B  0868               	movf	setDimmerLights_Dimming@lights,w
 11249  177C  3193  236C  3197   	fcall	_setDimmerIntr_Dimming_Sw
 11250                           
 11251                           ;Dimmer_B1.c: 1076: if (status == 1) {
 11252  177F  0020               	movlb	0	; select bank0
 11253  1780  0865               	movf	setDimmerLights_Dimming@status,w
 11254  1781  3A01               	xorlw	1
 11255  1782  1D03               	skipz
 11256  1783  2F8C               	goto	l5077
 11257                           
 11258                           ;Dimmer_B1.c: 1080: setBuz(1, 100);
 11259  1784  3064               	movlw	100
 11260  1785  00A9               	movwf	setBuz@time
 11261  1786  3000               	movlw	0
 11262  1787  00AA               	movwf	setBuz@time+1
 11263  1788  3001               	movlw	1
 11264  1789  3189  21D0         	fcall	_setBuz
 11265                           
 11266                           ;Dimmer_B1.c: 1081: } else if (status == 0) {
 11267  178B  0008               	return
 11268  178C                     l5077:	
 11269  178C  0020               	movlb	0	; select bank0
 11270  178D  08E5               	movf	setDimmerLights_Dimming@status,f
 11271  178E  1D03               	skipz
 11272  178F  0008               	return
 11273                           
 11274                           ;Dimmer_B1.c: 1084: Dimmer.Load_Status = 0;
 11275  1790  0021               	movlb	1	; select bank1
 11276  1791  1145               	bcf	_Dimmer^(0+128),2
 11277                           
 11278                           ;Dimmer_B1.c: 1085: setDimmerLights_Line(lights);
 11279  1792  0020               	movlb	0	; select bank0
 11280  1793  0868               	movf	setDimmerLights_Dimming@lights,w
 11281  1794  3192  22AC  3197   	fcall	_setDimmerLights_Line
 11282                           
 11283                           ;Dimmer_B1.c: 1087: char value = getDimmerIntr_DimmingValue(lights);
 11284  1797  0020               	movlb	0	; select bank0
 11285  1798  0868               	movf	setDimmerLights_Dimming@lights,w
 11286  1799  3192  2239  3197   	fcall	_getDimmerIntr_DimmingValue
 11287  179C  0020               	movlb	0	; select bank0
 11288  179D  00E6               	movwf	??_setDimmerLights_Dimming
 11289  179E  0866               	movf	??_setDimmerLights_Dimming,w
 11290  179F  00E7               	movwf	setDimmerLights_Dimming@value
 11291                           
 11292                           ;Dimmer_B1.c: 1088: setDimmerIntr_MaxmumValue(lights, value);
 11293  17A0  0867               	movf	setDimmerLights_Dimming@value,w
 11294  17A1  00E6               	movwf	??_setDimmerLights_Dimming
 11295  17A2  0866               	movf	??_setDimmerLights_Dimming,w
 11296  17A3  00E2               	movwf	setDimmerIntr_MaxmumValue@value
 11297  17A4  0868               	movf	setDimmerLights_Dimming@lights,w
 11298  17A5  3191  21C7  3197   	fcall	_setDimmerIntr_MaxmumValue
 11299                           
 11300                           ;Dimmer_B1.c: 1089: setProductData((20 + lights), getDimmerLights_ValueToPercent(value))
      +                          ;
 11301  17A8  0020               	movlb	0	; select bank0
 11302  17A9  0867               	movf	setDimmerLights_Dimming@value,w
 11303  17AA  318B  234D  3197   	fcall	_getDimmerLights_ValueToPercent
 11304  17AD  0020               	movlb	0	; select bank0
 11305  17AE  00E6               	movwf	??_setDimmerLights_Dimming
 11306  17AF  0866               	movf	??_setDimmerLights_Dimming,w
 11307  17B0  00E2               	movwf	setProductData@value
 11308  17B1  0868               	movf	setDimmerLights_Dimming@lights,w
 11309  17B2  3E14               	addlw	20
 11310  17B3  3191  21BB  3197   	fcall	_setProductData
 11311                           
 11312                           ;Dimmer_B1.c: 1096: setMemory_Modify(1);
 11313  17B6  3001               	movlw	1
 11314  17B7  3193  2306         	fcall	_setMemory_Modify
 11315                           
 11316                           ;Dimmer_B1.c: 1100: ;;
 11317                           ;Dimmer_B1.c: 1101: ;;
 11318  17B9  0008               	return
 11319  17BA                     __end_of_setDimmerLights_Dimming:	
 11320                           
 11321                           	psect	text69
 11322  12AC                     __ptext69:	
 11323 ;; *************** function _setDimmerLights_Line *****************
 11324 ;; Defined at:
 11325 ;;		line 1146 in file "../src/Dimmer_B1.c"
 11326 ;; Parameters:    Size  Location     Type
 11327 ;;  lights          1    wreg     unsigned char 
 11328 ;; Auto vars:     Size  Location     Type
 11329 ;;  lights          1    0[BANK0 ] unsigned char 
 11330 ;; Return value:  Size  Location     Type
 11331 ;;		None               void
 11332 ;; Registers used:
 11333 ;;		wreg
 11334 ;; Tracked objects:
 11335 ;;		On entry : 0/0
 11336 ;;		On exit  : 0/0
 11337 ;;		Unchanged: 0/0
 11338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11340 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11342 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11343 ;;Total ram usage:        1 bytes
 11344 ;; Hardware stack levels used:    1
 11345 ;; Hardware stack levels required when called:    5
 11346 ;; This function calls:
 11347 ;;		Nothing
 11348 ;; This function is called by:
 11349 ;;		_setDimmerLights_OnOff
 11350 ;;		_setDimmerLights_Dimming
 11351 ;; This function uses a non-reentrant model
 11352 ;;
 11353                           
 11354                           
 11355                           ;psect for function _setDimmerLights_Line
 11356  12AC                     _setDimmerLights_Line:	
 11357                           
 11358                           ;incstack = 0
 11359                           ; Regs used in _setDimmerLights_Line: [wreg]
 11360                           ;setDimmerLights_Line@lights stored from wreg
 11361  12AC  0020               	movlb	0	; select bank0
 11362  12AD  00A0               	movwf	setDimmerLights_Line@lights
 11363                           
 11364                           ;Dimmer_B1.c: 1147: Dimmer.LoadGO = 1;
 11365  12AE  0021               	movlb	1	; select bank1
 11366  12AF  14C5               	bsf	_Dimmer^(0+128),1
 11367                           
 11368                           ;Dimmer_B1.c: 1149: DimmerLights1.Line = 0;
 11369  12B0  0022               	movlb	2	; select bank2
 11370  12B1  10C9               	bcf	(_DimmerLights1^(0+256)+1),1
 11371                           
 11372                           ;Dimmer_B1.c: 1150: if (lights == 1 && lights != 0) {
 11373  12B2  0020               	movlb	0	; select bank0
 11374  12B3  0820               	movf	setDimmerLights_Line@lights,w
 11375  12B4  3A01               	xorlw	1
 11376  12B5  1D03               	skipz
 11377  12B6  0008               	return
 11378  12B7  0820               	movf	setDimmerLights_Line@lights,w
 11379  12B8  1903               	btfsc	3,2
 11380  12B9  0008               	return
 11381                           
 11382                           ;Dimmer_B1.c: 1151: DimmerLights1.Line = 1;
 11383  12BA  0022               	movlb	2	; select bank2
 11384  12BB  14C9               	bsf	(_DimmerLights1^(0+256)+1),1
 11385  12BC  0020               	movlb	0	; select bank0
 11386  12BD  0008               	return
 11387  12BE                     __end_of_setDimmerLights_Line:	
 11388                           
 11389                           	psect	text70
 11390  136C                     __ptext70:	
 11391 ;; *************** function _setDimmerIntr_Dimming_Sw *****************
 11392 ;; Defined at:
 11393 ;;		line 221 in file "../src/Dimmer_B1.c"
 11394 ;; Parameters:    Size  Location     Type
 11395 ;;  lights          1    wreg     unsigned char 
 11396 ;;  command         1    0[BANK0 ] unsigned char 
 11397 ;; Auto vars:     Size  Location     Type
 11398 ;;  lights          1    2[BANK0 ] unsigned char 
 11399 ;; Return value:  Size  Location     Type
 11400 ;;		None               void
 11401 ;; Registers used:
 11402 ;;		wreg, status,2, status,0
 11403 ;; Tracked objects:
 11404 ;;		On entry : 0/0
 11405 ;;		On exit  : 0/0
 11406 ;;		Unchanged: 0/0
 11407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11408 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11409 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11410 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11411 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11412 ;;Total ram usage:        3 bytes
 11413 ;; Hardware stack levels used:    1
 11414 ;; Hardware stack levels required when called:    5
 11415 ;; This function calls:
 11416 ;;		Nothing
 11417 ;; This function is called by:
 11418 ;;		_setDimmerLights_Dimming
 11419 ;;		_setDimmerLights_DimmingClose
 11420 ;; This function uses a non-reentrant model
 11421 ;;
 11422                           
 11423                           
 11424                           ;psect for function _setDimmerIntr_Dimming_Sw
 11425  136C                     _setDimmerIntr_Dimming_Sw:	
 11426                           
 11427                           ;incstack = 0
 11428                           ; Regs used in _setDimmerIntr_Dimming_Sw: [wreg+status,2+status,0]
 11429                           ;setDimmerIntr_Dimming_Sw@lights stored from wreg
 11430  136C  0020               	movlb	0	; select bank0
 11431  136D  00A2               	movwf	setDimmerIntr_Dimming_Sw@lights
 11432                           
 11433                           ;Dimmer_B1.c: 223: if (lights == 1) {
 11434  136E  0822               	movf	setDimmerIntr_Dimming_Sw@lights,w
 11435  136F  3A01               	xorlw	1
 11436  1370  1D03               	skipz
 11437  1371  0008               	return
 11438                           
 11439                           ;Dimmer_B1.c: 224: DimmerIntr1.Dimming_Sw = command == 1 ? 1 : 0;
 11440  1372  0820               	movf	setDimmerIntr_Dimming_Sw@command,w
 11441  1373  3A01               	xorlw	1
 11442  1374  3000               	movlw	0
 11443  1375  1903               	skipnz
 11444  1376  3001               	movlw	1
 11445  1377  00A1               	movwf	??_setDimmerIntr_Dimming_Sw
 11446  1378  0EA1               	swapf	??_setDimmerIntr_Dimming_Sw,f
 11447  1379  0021               	movlb	1	; select bank1
 11448  137A  0839               	movf	_DimmerIntr1^(0+128),w
 11449  137B  0020               	movlb	0	; select bank0
 11450  137C  0621               	xorwf	??_setDimmerIntr_Dimming_Sw,w
 11451  137D  39EF               	andlw	-17
 11452  137E  0621               	xorwf	??_setDimmerIntr_Dimming_Sw,w
 11453  137F  0021               	movlb	1	; select bank1
 11454  1380  00B9               	movwf	_DimmerIntr1^(0+128)
 11455  1381  0008               	return
 11456  1382                     __end_of_setDimmerIntr_Dimming_Sw:	
 11457                           
 11458                           	psect	text71
 11459  1239                     __ptext71:	
 11460 ;; *************** function _getDimmerIntr_DimmingValue *****************
 11461 ;; Defined at:
 11462 ;;		line 125 in file "../src/Dimmer_B1.c"
 11463 ;; Parameters:    Size  Location     Type
 11464 ;;  lights          1    wreg     unsigned char 
 11465 ;; Auto vars:     Size  Location     Type
 11466 ;;  lights          1    1[BANK0 ] unsigned char 
 11467 ;;  value           1    2[BANK0 ] unsigned char 
 11468 ;; Return value:  Size  Location     Type
 11469 ;;                  1    wreg      unsigned char 
 11470 ;; Registers used:
 11471 ;;		wreg, status,2
 11472 ;; Tracked objects:
 11473 ;;		On entry : 0/0
 11474 ;;		On exit  : 0/0
 11475 ;;		Unchanged: 0/0
 11476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11478 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11479 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11480 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11481 ;;Total ram usage:        3 bytes
 11482 ;; Hardware stack levels used:    1
 11483 ;; Hardware stack levels required when called:    5
 11484 ;; This function calls:
 11485 ;;		Nothing
 11486 ;; This function is called by:
 11487 ;;		_setDimmerLights_Dimming
 11488 ;; This function uses a non-reentrant model
 11489 ;;
 11490                           
 11491                           
 11492                           ;psect for function _getDimmerIntr_DimmingValue
 11493  1239                     _getDimmerIntr_DimmingValue:	
 11494                           
 11495                           ;incstack = 0
 11496                           ; Regs used in _getDimmerIntr_DimmingValue: [wreg+status,2]
 11497                           ;getDimmerIntr_DimmingValue@lights stored from wreg
 11498  1239  0020               	movlb	0	; select bank0
 11499  123A  00A1               	movwf	getDimmerIntr_DimmingValue@lights
 11500                           
 11501                           ;Dimmer_B1.c: 126: char value = 0;
 11502  123B  01A2               	clrf	getDimmerIntr_DimmingValue@value
 11503                           
 11504                           ;Dimmer_B1.c: 128: if (lights == 1) {
 11505  123C  0821               	movf	getDimmerIntr_DimmingValue@lights,w
 11506  123D  3A01               	xorlw	1
 11507  123E  1D03               	skipz
 11508  123F  2A46               	goto	l382
 11509                           
 11510                           ;Dimmer_B1.c: 129: value = DimmerIntr1.DimmingValue;
 11511  1240  0021               	movlb	1	; select bank1
 11512  1241  083E               	movf	(_DimmerIntr1^(0+128)+5),w
 11513  1242  0020               	movlb	0	; select bank0
 11514  1243  00A0               	movwf	??_getDimmerIntr_DimmingValue
 11515  1244  0820               	movf	??_getDimmerIntr_DimmingValue,w
 11516  1245  00A2               	movwf	getDimmerIntr_DimmingValue@value
 11517  1246                     l382:	
 11518                           
 11519                           ;Dimmer_B1.c: 130: }
 11520                           ;Dimmer_B1.c: 142: return value;
 11521  1246  0822               	movf	getDimmerIntr_DimmingValue@value,w
 11522  1247  0008               	return
 11523  1248                     __end_of_getDimmerIntr_DimmingValue:	
 11524                           
 11525                           	psect	text72
 11526  1356                     __ptext72:	
 11527 ;; *************** function _getDimmerLights_Allow_Condition *****************
 11528 ;; Defined at:
 11529 ;;		line 1107 in file "../src/Dimmer_B1.c"
 11530 ;; Parameters:    Size  Location     Type
 11531 ;;  lights          1    wreg     unsigned char 
 11532 ;; Auto vars:     Size  Location     Type
 11533 ;;  lights          1    0[COMMON] unsigned char 
 11534 ;;  allow           1    2[BANK0 ] unsigned char 
 11535 ;; Return value:  Size  Location     Type
 11536 ;;                  1    wreg      unsigned char 
 11537 ;; Registers used:
 11538 ;;		wreg, status,2, pclath, cstack
 11539 ;; Tracked objects:
 11540 ;;		On entry : 0/0
 11541 ;;		On exit  : 0/0
 11542 ;;		Unchanged: 0/0
 11543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11545 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11546 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11547 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11548 ;;Total ram usage:        3 bytes
 11549 ;; Hardware stack levels used:    1
 11550 ;; Hardware stack levels required when called:    6
 11551 ;; This function calls:
 11552 ;;		_getLoad_OK
 11553 ;; This function is called by:
 11554 ;;		_setDimmerLights_Main
 11555 ;; This function uses a non-reentrant model
 11556 ;;
 11557                           
 11558                           
 11559                           ;psect for function _getDimmerLights_Allow_Condition
 11560  1356                     _getDimmerLights_Allow_Condition:	
 11561                           
 11562                           ;Dimmer_B1.c: 1108: char allow = 0;
 11563                           
 11564                           ;incstack = 0
 11565                           ; Regs used in _getDimmerLights_Allow_Condition: [wreg+status,2+pclath+cstack]
 11566  1356  0020               	movlb	0	; select bank0
 11567  1357  01A2               	clrf	getDimmerLights_Allow_Condition@allow
 11568                           
 11569                           ;Dimmer_B1.c: 1114: allow = getLoad_OK() == 0 && Dimmer.LoadGO == 0 ? 0 : 1;
 11570  1358  01A3               	clrf	_getDimmerLights_Allow_Condition$1981
 11571  1359  0AA3               	incf	_getDimmerLights_Allow_Condition$1981,f
 11572  135A  3191  2131  3193   	fcall	_getLoad_OK
 11573  135D  3800               	iorlw	0
 11574  135E  1D03               	skipz
 11575  135F  2B65               	goto	l5015
 11576  1360  0021               	movlb	1	; select bank1
 11577  1361  18C5               	btfsc	_Dimmer^(0+128),1
 11578  1362  2B65               	goto	l5015
 11579  1363  0020               	movlb	0	; select bank0
 11580  1364  01A3               	clrf	_getDimmerLights_Allow_Condition$1981
 11581  1365                     l5015:	
 11582  1365  0020               	movlb	0	; select bank0
 11583  1366  0823               	movf	_getDimmerLights_Allow_Condition$1981,w
 11584  1367  00A1               	movwf	??_getDimmerLights_Allow_Condition
 11585  1368  0821               	movf	??_getDimmerLights_Allow_Condition,w
 11586  1369  00A2               	movwf	getDimmerLights_Allow_Condition@allow
 11587                           
 11588                           ;Dimmer_B1.c: 1141: return allow;
 11589  136A  0822               	movf	getDimmerLights_Allow_Condition@allow,w
 11590  136B  0008               	return
 11591  136C                     __end_of_getDimmerLights_Allow_Condition:	
 11592                           
 11593                           	psect	text73
 11594  1131                     __ptext73:	
 11595 ;; *************** function _getLoad_OK *****************
 11596 ;; Defined at:
 11597 ;;		line 274 in file "../src/OverLoad_B1.c"
 11598 ;; Parameters:    Size  Location     Type
 11599 ;;		None
 11600 ;; Auto vars:     Size  Location     Type
 11601 ;;  ok              1    0[BANK0 ] unsigned char 
 11602 ;; Return value:  Size  Location     Type
 11603 ;;                  1    wreg      unsigned char 
 11604 ;; Registers used:
 11605 ;;		wreg, status,2
 11606 ;; Tracked objects:
 11607 ;;		On entry : 0/0
 11608 ;;		On exit  : 0/0
 11609 ;;		Unchanged: 0/0
 11610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11612 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11614 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11615 ;;Total ram usage:        1 bytes
 11616 ;; Hardware stack levels used:    1
 11617 ;; Hardware stack levels required when called:    5
 11618 ;; This function calls:
 11619 ;;		Nothing
 11620 ;; This function is called by:
 11621 ;;		_DimmerLights_Main
 11622 ;;		_getDimmerLights_Allow_Condition
 11623 ;; This function uses a non-reentrant model
 11624 ;;
 11625                           
 11626                           
 11627                           ;psect for function _getLoad_OK
 11628  1131                     _getLoad_OK:	
 11629                           
 11630                           ;OverLoad_B1.c: 275: char ok = Load.OK == 1 ? 1 : 0;
 11631                           
 11632                           ;incstack = 0
 11633                           ; Regs used in _getLoad_OK: [wreg+status,2]
 11634  1131  3000               	movlw	0
 11635  1132  0022               	movlb	2	; select bank2
 11636  1133  1BA0               	btfsc	_Load^(0+256),7
 11637  1134  3001               	movlw	1
 11638  1135  0020               	movlb	0	; select bank0
 11639  1136  00A0               	movwf	getLoad_OK@ok
 11640                           
 11641                           ;OverLoad_B1.c: 276: return ok;
 11642  1137  0820               	movf	getLoad_OK@ok,w
 11643  1138  0008               	return
 11644  1139                     __end_of_getLoad_OK:	
 11645                           
 11646                           	psect	text74
 11647  15E6                     __ptext74:	
 11648 ;; *************** function _getMain_All_Error_Status *****************
 11649 ;; Defined at:
 11650 ;;		line 424 in file "../src/Main_B1.c"
 11651 ;; Parameters:    Size  Location     Type
 11652 ;;  command         1    wreg     unsigned char 
 11653 ;; Auto vars:     Size  Location     Type
 11654 ;;  command         1    5[BANK0 ] unsigned char 
 11655 ;;  status          1    6[BANK0 ] unsigned char 
 11656 ;; Return value:  Size  Location     Type
 11657 ;;                  1    wreg      unsigned char 
 11658 ;; Registers used:
 11659 ;;		wreg, status,2, status,0
 11660 ;; Tracked objects:
 11661 ;;		On entry : 0/0
 11662 ;;		On exit  : 0/0
 11663 ;;		Unchanged: 0/0
 11664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11666 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11667 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11668 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11669 ;;Total ram usage:        7 bytes
 11670 ;; Hardware stack levels used:    1
 11671 ;; Hardware stack levels required when called:    5
 11672 ;; This function calls:
 11673 ;;		Nothing
 11674 ;; This function is called by:
 11675 ;;		_DimmerLights_Main
 11676 ;;		_Exception_Main
 11677 ;;		_Load_Main
 11678 ;;		_setTemp_Main
 11679 ;;		_setSw_Main
 11680 ;; This function uses a non-reentrant model
 11681 ;;
 11682                           
 11683                           
 11684                           ;psect for function _getMain_All_Error_Status
 11685  15E6                     _getMain_All_Error_Status:	
 11686                           
 11687                           ;incstack = 0
 11688                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2+status,0]
 11689                           ;getMain_All_Error_Status@command stored from wreg
 11690  15E6  0020               	movlb	0	; select bank0
 11691  15E7  00A5               	movwf	getMain_All_Error_Status@command
 11692                           
 11693                           ;Main_B1.c: 425: char status = 0;
 11694  15E8  01A6               	clrf	getMain_All_Error_Status@status
 11695                           
 11696                           ;Main_B1.c: 436: if (status == 0 && command != 2) {
 11697  15E9  08A6               	movf	getMain_All_Error_Status@status,f
 11698  15EA  1D03               	skipz
 11699  15EB  2E00               	goto	l4993
 11700  15EC  0825               	movf	getMain_All_Error_Status@command,w
 11701  15ED  3A02               	xorlw	2
 11702  15EE  1903               	skipnz
 11703  15EF  2E00               	goto	l4993
 11704                           
 11705                           ;Main_B1.c: 437: status = Temp.ERROR == 1 ? 2 : 0;
 11706  15F0  0021               	movlb	1	; select bank1
 11707  15F1  18D6               	btfsc	_Temp^(0+128),1
 11708  15F2  2DF7               	goto	l4991
 11709  15F3  0020               	movlb	0	; select bank0
 11710  15F4  01A1               	clrf	_getMain_All_Error_Status$3186
 11711  15F5  01A2               	clrf	_getMain_All_Error_Status$3186+1
 11712  15F6  2DFC               	goto	l1096
 11713  15F7                     l4991:	
 11714  15F7  3002               	movlw	2
 11715  15F8  0020               	movlb	0	; select bank0
 11716  15F9  00A1               	movwf	_getMain_All_Error_Status$3186
 11717  15FA  3000               	movlw	0
 11718  15FB  00A2               	movwf	_getMain_All_Error_Status$3186+1
 11719  15FC                     l1096:	
 11720  15FC  0821               	movf	_getMain_All_Error_Status$3186,w
 11721  15FD  00A0               	movwf	??_getMain_All_Error_Status
 11722  15FE  0820               	movf	??_getMain_All_Error_Status,w
 11723  15FF  00A6               	movwf	getMain_All_Error_Status@status
 11724  1600                     l4993:	
 11725                           
 11726                           ;Main_B1.c: 438: }
 11727                           ;Main_B1.c: 443: if (status == 0 && command != 3) {
 11728  1600  08A6               	movf	getMain_All_Error_Status@status,f
 11729  1601  1D03               	skipz
 11730  1602  2E17               	goto	l1097
 11731  1603  0825               	movf	getMain_All_Error_Status@command,w
 11732  1604  3A03               	xorlw	3
 11733  1605  1903               	skipnz
 11734  1606  2E17               	goto	l1097
 11735                           
 11736                           ;Main_B1.c: 444: status = Load.ERROR == 1 ? 3 : 0;
 11737  1607  0022               	movlb	2	; select bank2
 11738  1608  1AA0               	btfsc	_Load^(0+256),5
 11739  1609  2E0E               	goto	l5001
 11740  160A  0020               	movlb	0	; select bank0
 11741  160B  01A3               	clrf	_getMain_All_Error_Status$3187
 11742  160C  01A4               	clrf	_getMain_All_Error_Status$3187+1
 11743  160D  2E13               	goto	l1101
 11744  160E                     l5001:	
 11745  160E  3003               	movlw	3
 11746  160F  0020               	movlb	0	; select bank0
 11747  1610  00A3               	movwf	_getMain_All_Error_Status$3187
 11748  1611  3000               	movlw	0
 11749  1612  00A4               	movwf	_getMain_All_Error_Status$3187+1
 11750  1613                     l1101:	
 11751  1613  0823               	movf	_getMain_All_Error_Status$3187,w
 11752  1614  00A0               	movwf	??_getMain_All_Error_Status
 11753  1615  0820               	movf	??_getMain_All_Error_Status,w
 11754  1616  00A6               	movwf	getMain_All_Error_Status@status
 11755  1617                     l1097:	
 11756                           
 11757                           ;Main_B1.c: 445: }
 11758                           ;Main_B1.c: 455: return status;
 11759  1617  0826               	movf	getMain_All_Error_Status@status,w
 11760  1618  0008               	return
 11761  1619                     __end_of_getMain_All_Error_Status:	
 11762                           
 11763                           	psect	text75
 11764  097C                     __ptext75:	
 11765 ;; *************** function _DimmerLights_TwoPhase_Main *****************
 11766 ;; Defined at:
 11767 ;;		line 912 in file "../src/Dimmer_B1.c"
 11768 ;; Parameters:    Size  Location     Type
 11769 ;;  lights          1    wreg     unsigned char 
 11770 ;; Auto vars:     Size  Location     Type
 11771 ;;  lights          1   72[BANK0 ] unsigned char 
 11772 ;; Return value:  Size  Location     Type
 11773 ;;		None               void
 11774 ;; Registers used:
 11775 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11776 ;; Tracked objects:
 11777 ;;		On entry : 0/0
 11778 ;;		On exit  : 0/0
 11779 ;;		Unchanged: 0/0
 11780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11782 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11784 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11785 ;;Total ram usage:        1 bytes
 11786 ;; Hardware stack levels used:    1
 11787 ;; Hardware stack levels required when called:    8
 11788 ;; This function calls:
 11789 ;;		_DimmerLights_AssignationDimming
 11790 ;;		_DimmerLights_SelectPointer
 11791 ;; This function is called by:
 11792 ;;		_DimmerLights_Main
 11793 ;; This function uses a non-reentrant model
 11794 ;;
 11795                           
 11796                           
 11797                           ;psect for function _DimmerLights_TwoPhase_Main
 11798  097C                     _DimmerLights_TwoPhase_Main:	
 11799                           
 11800                           ;incstack = 0
 11801                           ; Regs used in _DimmerLights_TwoPhase_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 11802                           ;DimmerLights_TwoPhase_Main@lights stored from wreg
 11803  097C  0020               	movlb	0	; select bank0
 11804  097D  00E8               	movwf	DimmerLights_TwoPhase_Main@lights
 11805                           
 11806                           ;Dimmer_B1.c: 914: DimmerLights_SelectPointer(lights);
 11807  097E  0868               	movf	DimmerLights_TwoPhase_Main@lights,w
 11808  097F  3191  2178  3189   	fcall	_DimmerLights_SelectPointer
 11809                           
 11810                           ;Dimmer_B1.c: 915: if (DimmerLights->Phase == 1) {
 11811  0982  087D               	movf	_DimmerLights,w
 11812  0983  3E02               	addlw	2
 11813  0984  0086               	movwf	6
 11814  0985  3001               	movlw	1	; select bank2/3
 11815  0986  0087               	movwf	7
 11816  0987  1C01               	btfss	1,0
 11817  0988  0008               	return
 11818                           
 11819                           ;Dimmer_B1.c: 916: if (DimmerLights->PhaseFirst == 0) {
 11820  0989  087D               	movf	_DimmerLights,w
 11821  098A  3E02               	addlw	2
 11822  098B  0086               	movwf	6
 11823  098C  3001               	movlw	1	; select bank2/3
 11824  098D  0087               	movwf	7
 11825  098E  1881               	btfsc	1,1
 11826  098F  29B9               	goto	l5375
 11827                           
 11828                           ;Dimmer_B1.c: 918: if (DimmerLights->PhaseSwitch == 1) {
 11829  0990  087D               	movf	_DimmerLights,w
 11830  0991  3E02               	addlw	2
 11831  0992  0086               	movwf	6
 11832  0993  3001               	movlw	1	; select bank2/3
 11833  0994  0087               	movwf	7
 11834  0995  1D01               	btfss	1,2
 11835  0996  29A8               	goto	l5373
 11836                           
 11837                           ;Dimmer_B1.c: 919: DimmerLights->PhaseFirst = 1;
 11838  0997  087D               	movf	_DimmerLights,w
 11839  0998  3E02               	addlw	2
 11840  0999  0086               	movwf	6
 11841  099A  3001               	movlw	1	; select bank2/3
 11842  099B  0087               	movwf	7
 11843  099C  1481               	bsf	1,1
 11844                           
 11845                           ;Dimmer_B1.c: 920: DimmerLights->Trigger = 1;
 11846  099D  087D               	movf	_DimmerLights,w
 11847  099E  0086               	movwf	6
 11848  099F  3001               	movlw	1	; select bank2/3
 11849  09A0  0087               	movwf	7
 11850  09A1  1481               	bsf	1,1
 11851                           
 11852                           ;Dimmer_B1.c: 921: DimmerLights->Switch = 1;
 11853  09A2  087D               	movf	_DimmerLights,w
 11854  09A3  0086               	movwf	6
 11855  09A4  3001               	movlw	1	; select bank2/3
 11856  09A5  0087               	movwf	7
 11857  09A6  1501               	bsf	1,2
 11858                           
 11859                           ;Dimmer_B1.c: 922: } else {
 11860  09A7  0008               	return
 11861  09A8                     l5373:	
 11862                           
 11863                           ;Dimmer_B1.c: 923: DimmerLights->Phase = 0;
 11864  09A8  087D               	movf	_DimmerLights,w
 11865  09A9  3E02               	addlw	2
 11866  09AA  0086               	movwf	6
 11867  09AB  3001               	movlw	1	; select bank2/3
 11868  09AC  0087               	movwf	7
 11869  09AD  1001               	bcf	1,0
 11870                           
 11871                           ;Dimmer_B1.c: 924: DimmerLights->Trigger = 1;
 11872  09AE  087D               	movf	_DimmerLights,w
 11873  09AF  0086               	movwf	6
 11874  09B0  3001               	movlw	1	; select bank2/3
 11875  09B1  0087               	movwf	7
 11876  09B2  1481               	bsf	1,1
 11877                           
 11878                           ;Dimmer_B1.c: 925: DimmerLights->Switch = 0;
 11879  09B3  087D               	movf	_DimmerLights,w
 11880  09B4  0086               	movwf	6
 11881  09B5  3001               	movlw	1	; select bank2/3
 11882  09B6  0087               	movwf	7
 11883  09B7  1101               	bcf	1,2
 11884                           
 11885                           ;Dimmer_B1.c: 926: }
 11886                           ;Dimmer_B1.c: 927: } else {
 11887  09B8  0008               	return
 11888  09B9                     l5375:	
 11889                           
 11890                           ;Dimmer_B1.c: 928: if (DimmerLights->Trigger == 0) {
 11891  09B9  087D               	movf	_DimmerLights,w
 11892  09BA  0086               	movwf	6
 11893  09BB  3001               	movlw	1	; select bank2/3
 11894  09BC  0087               	movwf	7
 11895  09BD  1881               	btfsc	1,1
 11896  09BE  0008               	return
 11897                           
 11898                           ;Dimmer_B1.c: 929: DimmerLights->PhaseFirst = 0;
 11899  09BF  087D               	movf	_DimmerLights,w
 11900  09C0  3E02               	addlw	2
 11901  09C1  0086               	movwf	6
 11902  09C2  3001               	movlw	1	; select bank2/3
 11903  09C3  0087               	movwf	7
 11904  09C4  1081               	bcf	1,1
 11905                           
 11906                           ;Dimmer_B1.c: 930: DimmerLights->Phase = 0;
 11907  09C5  087D               	movf	_DimmerLights,w
 11908  09C6  3E02               	addlw	2
 11909  09C7  0086               	movwf	6
 11910  09C8  3001               	movlw	1	; select bank2/3
 11911  09C9  0087               	movwf	7
 11912  09CA  1001               	bcf	1,0
 11913                           
 11914                           ;Dimmer_B1.c: 931: DimmerLights_AssignationDimming(lights);
 11915  09CB  0020               	movlb	0	; select bank0
 11916  09CC  0868               	movf	DimmerLights_TwoPhase_Main@lights,w
 11917  09CD  3195  2517         	fcall	_DimmerLights_AssignationDimming
 11918  09CF  0008               	return
 11919  09D0                     __end_of_DimmerLights_TwoPhase_Main:	
 11920                           
 11921                           	psect	text76
 11922  1517                     __ptext76:	
 11923 ;; *************** function _DimmerLights_AssignationDimming *****************
 11924 ;; Defined at:
 11925 ;;		line 938 in file "../src/Dimmer_B1.c"
 11926 ;; Parameters:    Size  Location     Type
 11927 ;;  sw              1    wreg     unsigned char 
 11928 ;; Auto vars:     Size  Location     Type
 11929 ;;  sw              1   71[BANK0 ] unsigned char 
 11930 ;;  status          1   70[BANK0 ] unsigned char 
 11931 ;; Return value:  Size  Location     Type
 11932 ;;		None               void
 11933 ;; Registers used:
 11934 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11935 ;; Tracked objects:
 11936 ;;		On entry : 0/0
 11937 ;;		On exit  : 0/0
 11938 ;;		Unchanged: 0/0
 11939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11941 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11942 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11943 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11944 ;;Total ram usage:        3 bytes
 11945 ;; Hardware stack levels used:    1
 11946 ;; Hardware stack levels required when called:    7
 11947 ;; This function calls:
 11948 ;;		_getDimmerLights_Status
 11949 ;;		_setDimmerIntr_Dimming_RF
 11950 ;;		_setDimmerIntr_MaxmumValue
 11951 ;;		_setMemory_Modify
 11952 ;; This function is called by:
 11953 ;;		_DimmerLights_TwoPhase_Main
 11954 ;; This function uses a non-reentrant model
 11955 ;;
 11956                           
 11957                           
 11958                           ;psect for function _DimmerLights_AssignationDimming
 11959  1517                     _DimmerLights_AssignationDimming:	
 11960                           
 11961                           ;incstack = 0
 11962                           ; Regs used in _DimmerLights_AssignationDimming: [wreg+fsr1l+fsr1h+status,2+status,0+pcl
      +                          ath+cstack]
 11963                           ;DimmerLights_AssignationDimming@sw stored from wreg
 11964  1517  0020               	movlb	0	; select bank0
 11965  1518  00E7               	movwf	DimmerLights_AssignationDimming@sw
 11966                           
 11967                           ;Dimmer_B1.c: 939: char status = 0;
 11968  1519  01E6               	clrf	DimmerLights_AssignationDimming@status
 11969                           
 11970                           ;Dimmer_B1.c: 941: status = getDimmerLights_Status(sw);
 11971  151A  0867               	movf	DimmerLights_AssignationDimming@sw,w
 11972  151B  3192  2248  3195   	fcall	_getDimmerLights_Status
 11973  151E  0020               	movlb	0	; select bank0
 11974  151F  00E5               	movwf	??_DimmerLights_AssignationDimming
 11975  1520  0865               	movf	??_DimmerLights_AssignationDimming,w
 11976  1521  00E6               	movwf	DimmerLights_AssignationDimming@status
 11977                           
 11978                           ;Dimmer_B1.c: 945: setMemory_Modify(1);
 11979  1522  3001               	movlw	1
 11980  1523  3193  2306  3195   	fcall	_setMemory_Modify
 11981                           
 11982                           ;Dimmer_B1.c: 949: if (status == 1) {
 11983  1526  0020               	movlb	0	; select bank0
 11984  1527  0866               	movf	DimmerLights_AssignationDimming@status,w
 11985  1528  3A01               	xorlw	1
 11986  1529  1D03               	skipz
 11987  152A  0008               	return
 11988                           
 11989                           ;Dimmer_B1.c: 950: setDimmerIntr_MaxmumValue(sw, ((char)(82*0.6)));
 11990  152B  3031               	movlw	49
 11991  152C  00E5               	movwf	??_DimmerLights_AssignationDimming
 11992  152D  0865               	movf	??_DimmerLights_AssignationDimming,w
 11993  152E  00E2               	movwf	setDimmerIntr_MaxmumValue@value
 11994  152F  0867               	movf	DimmerLights_AssignationDimming@sw,w
 11995  1530  3191  21C7  3195   	fcall	_setDimmerIntr_MaxmumValue
 11996                           
 11997                           ;Dimmer_B1.c: 951: setDimmerIntr_Dimming_RF(sw, 1);
 11998  1533  0020               	movlb	0	; select bank0
 11999  1534  01A0               	clrf	setDimmerIntr_Dimming_RF@command
 12000  1535  0AA0               	incf	setDimmerIntr_Dimming_RF@command,f
 12001  1536  0867               	movf	DimmerLights_AssignationDimming@sw,w
 12002  1537  3193  2382         	fcall	_setDimmerIntr_Dimming_RF
 12003  1539  0008               	return
 12004  153A                     __end_of_DimmerLights_AssignationDimming:	
 12005                           
 12006                           	psect	text77
 12007  11C7                     __ptext77:	
 12008 ;; *************** function _setDimmerIntr_MaxmumValue *****************
 12009 ;; Defined at:
 12010 ;;		line 145 in file "../src/Dimmer_B1.c"
 12011 ;; Parameters:    Size  Location     Type
 12012 ;;  lights          1    wreg     unsigned char 
 12013 ;;  value           1   66[BANK0 ] unsigned char 
 12014 ;; Auto vars:     Size  Location     Type
 12015 ;;  lights          1   68[BANK0 ] unsigned char 
 12016 ;; Return value:  Size  Location     Type
 12017 ;;		None               void
 12018 ;; Registers used:
 12019 ;;		wreg
 12020 ;; Tracked objects:
 12021 ;;		On entry : 0/0
 12022 ;;		On exit  : 0/0
 12023 ;;		Unchanged: 0/0
 12024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12025 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12026 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12027 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12028 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12029 ;;Total ram usage:        3 bytes
 12030 ;; Hardware stack levels used:    1
 12031 ;; Hardware stack levels required when called:    5
 12032 ;; This function calls:
 12033 ;;		Nothing
 12034 ;; This function is called by:
 12035 ;;		_DimmerLights_AssignationDimming
 12036 ;;		_setDimmerLights_OnOff
 12037 ;;		_setDimmerLights_Dimming
 12038 ;; This function uses a non-reentrant model
 12039 ;;
 12040                           
 12041                           
 12042                           ;psect for function _setDimmerIntr_MaxmumValue
 12043  11C7                     _setDimmerIntr_MaxmumValue:	
 12044                           
 12045                           ;incstack = 0
 12046                           ; Regs used in _setDimmerIntr_MaxmumValue: [wreg]
 12047                           ;setDimmerIntr_MaxmumValue@lights stored from wreg
 12048  11C7  0020               	movlb	0	; select bank0
 12049  11C8  00E4               	movwf	setDimmerIntr_MaxmumValue@lights
 12050                           
 12051                           ;Dimmer_B1.c: 147: if (lights == 1) {
 12052  11C9  0864               	movf	setDimmerIntr_MaxmumValue@lights,w
 12053  11CA  3A01               	xorlw	1
 12054  11CB  1D03               	skipz
 12055  11CC  0008               	return
 12056                           
 12057                           ;Dimmer_B1.c: 148: DimmerIntr1.MaxmumValue = value;
 12058  11CD  0862               	movf	setDimmerIntr_MaxmumValue@value,w
 12059  11CE  00E3               	movwf	??_setDimmerIntr_MaxmumValue
 12060  11CF  0863               	movf	??_setDimmerIntr_MaxmumValue,w
 12061  11D0  0021               	movlb	1	; select bank1
 12062  11D1  00BF               	movwf	(_DimmerIntr1^(0+128)+6)
 12063  11D2  0008               	return
 12064  11D3                     __end_of_setDimmerIntr_MaxmumValue:	
 12065                           
 12066                           	psect	text78
 12067  1382                     __ptext78:	
 12068 ;; *************** function _setDimmerIntr_Dimming_RF *****************
 12069 ;; Defined at:
 12070 ;;		line 260 in file "../src/Dimmer_B1.c"
 12071 ;; Parameters:    Size  Location     Type
 12072 ;;  lights          1    wreg     unsigned char 
 12073 ;;  command         1    0[BANK0 ] unsigned char 
 12074 ;; Auto vars:     Size  Location     Type
 12075 ;;  lights          1    2[BANK0 ] unsigned char 
 12076 ;; Return value:  Size  Location     Type
 12077 ;;		None               void
 12078 ;; Registers used:
 12079 ;;		wreg, status,2, status,0
 12080 ;; Tracked objects:
 12081 ;;		On entry : 0/0
 12082 ;;		On exit  : 0/0
 12083 ;;		Unchanged: 0/0
 12084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12085 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12086 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12087 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12088 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12089 ;;Total ram usage:        3 bytes
 12090 ;; Hardware stack levels used:    1
 12091 ;; Hardware stack levels required when called:    5
 12092 ;; This function calls:
 12093 ;;		Nothing
 12094 ;; This function is called by:
 12095 ;;		_DimmerLights_AssignationDimming
 12096 ;;		_setDimmerLights_OnOff
 12097 ;; This function uses a non-reentrant model
 12098 ;;
 12099                           
 12100                           
 12101                           ;psect for function _setDimmerIntr_Dimming_RF
 12102  1382                     _setDimmerIntr_Dimming_RF:	
 12103                           
 12104                           ;incstack = 0
 12105                           ; Regs used in _setDimmerIntr_Dimming_RF: [wreg+status,2+status,0]
 12106                           ;setDimmerIntr_Dimming_RF@lights stored from wreg
 12107  1382  0020               	movlb	0	; select bank0
 12108  1383  00A2               	movwf	setDimmerIntr_Dimming_RF@lights
 12109                           
 12110                           ;Dimmer_B1.c: 262: if (lights == 1) {
 12111  1384  0822               	movf	setDimmerIntr_Dimming_RF@lights,w
 12112  1385  3A01               	xorlw	1
 12113  1386  1D03               	skipz
 12114  1387  0008               	return
 12115                           
 12116                           ;Dimmer_B1.c: 263: DimmerIntr1.Dimming_RF = command == 1 ? 1 : 0;
 12117  1388  0820               	movf	setDimmerIntr_Dimming_RF@command,w
 12118  1389  3A01               	xorlw	1
 12119  138A  3000               	movlw	0
 12120  138B  1903               	skipnz
 12121  138C  3001               	movlw	1
 12122  138D  00A1               	movwf	??_setDimmerIntr_Dimming_RF
 12123  138E  0EA1               	swapf	??_setDimmerIntr_Dimming_RF,f
 12124  138F  0DA1               	rlf	??_setDimmerIntr_Dimming_RF,f
 12125  1390  0DA1               	rlf	??_setDimmerIntr_Dimming_RF,f
 12126  1391  0021               	movlb	1	; select bank1
 12127  1392  0839               	movf	_DimmerIntr1^(0+128),w
 12128  1393  0020               	movlb	0	; select bank0
 12129  1394  0621               	xorwf	??_setDimmerIntr_Dimming_RF,w
 12130  1395  39BF               	andlw	-65
 12131  1396  0621               	xorwf	??_setDimmerIntr_Dimming_RF,w
 12132  1397  0021               	movlb	1	; select bank1
 12133  1398  00B9               	movwf	_DimmerIntr1^(0+128)
 12134  1399  0008               	return
 12135  139A                     __end_of_setDimmerIntr_Dimming_RF:	
 12136                           
 12137                           	psect	text79
 12138  17BA                     __ptext79:	
 12139 ;; *************** function _DimmerLights_DimmingFunction *****************
 12140 ;; Defined at:
 12141 ;;		line 1852 in file "../src/Dimmer_B1.c"
 12142 ;; Parameters:    Size  Location     Type
 12143 ;;  lights          1    wreg     unsigned char 
 12144 ;; Auto vars:     Size  Location     Type
 12145 ;;  lights          1    1[BANK0 ] unsigned char 
 12146 ;; Return value:  Size  Location     Type
 12147 ;;		None               void
 12148 ;; Registers used:
 12149 ;;		wreg, status,2, status,0
 12150 ;; Tracked objects:
 12151 ;;		On entry : 0/0
 12152 ;;		On exit  : 0/0
 12153 ;;		Unchanged: 0/0
 12154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12156 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12157 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12158 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12159 ;;Total ram usage:        2 bytes
 12160 ;; Hardware stack levels used:    1
 12161 ;; Hardware stack levels required when called:    5
 12162 ;; This function calls:
 12163 ;;		Nothing
 12164 ;; This function is called by:
 12165 ;;		_DimmerLights_Main
 12166 ;; This function uses a non-reentrant model
 12167 ;;
 12168                           
 12169                           
 12170                           ;psect for function _DimmerLights_DimmingFunction
 12171  17BA                     _DimmerLights_DimmingFunction:	
 12172                           
 12173                           ;incstack = 0
 12174                           ; Regs used in _DimmerLights_DimmingFunction: [wreg+status,2+status,0]
 12175                           ;DimmerLights_DimmingFunction@lights stored from wreg
 12176  17BA  0020               	movlb	0	; select bank0
 12177  17BB  00A1               	movwf	DimmerLights_DimmingFunction@lights
 12178                           
 12179                           ;Dimmer_B1.c: 1854: if (lights == 1) {
 12180  17BC  0821               	movf	DimmerLights_DimmingFunction@lights,w
 12181  17BD  3A01               	xorlw	1
 12182  17BE  1D03               	skipz
 12183  17BF  0008               	return
 12184                           
 12185                           ;Dimmer_B1.c: 1855: if (DimmerIntr1.Tune == 1) {
 12186  17C0  0021               	movlb	1	; select bank1
 12187  17C1  1CB9               	btfss	_DimmerIntr1^(0+128),1
 12188  17C2  0008               	return
 12189                           
 12190                           ;Dimmer_B1.c: 1856: DimmerIntr1.Tune = 0;
 12191  17C3  10B9               	bcf	_DimmerIntr1^(0+128),1
 12192                           
 12193                           ;Dimmer_B1.c: 1857: DimmerIntr1.TuneTime++;
 12194  17C4  3001               	movlw	1
 12195  17C5  0020               	movlb	0	; select bank0
 12196  17C6  00A0               	movwf	??_DimmerLights_DimmingFunction
 12197  17C7  0820               	movf	??_DimmerLights_DimmingFunction,w
 12198  17C8  0021               	movlb	1	; select bank1
 12199  17C9  07BC               	addwf	(_DimmerIntr1^(0+128)+3),f
 12200                           
 12201                           ;Dimmer_B1.c: 1858: if (DimmerIntr1.TuneTime >= DimmerIntr1.TuneTimeValue) {
 12202  17CA  083D               	movf	(_DimmerIntr1^(0+128)+4),w
 12203  17CB  023C               	subwf	(_DimmerIntr1^(0+128)+3),w
 12204  17CC  1C03               	skipc
 12205  17CD  0008               	return
 12206                           
 12207                           ;Dimmer_B1.c: 1859: DimmerIntr1.TuneTime = 0;
 12208  17CE  01BC               	clrf	(_DimmerIntr1^(0+128)+3)
 12209                           
 12210                           ;Dimmer_B1.c: 1860: DimmerIntr1.TuneGO = 1;
 12211  17CF  173A               	bsf	(_DimmerIntr1^(0+128)+1),6
 12212                           
 12213                           ;Dimmer_B1.c: 1861: if (DimmerIntr1.Dimming_Sw == 1) {
 12214  17D0  1E39               	btfss	_DimmerIntr1^(0+128),4
 12215  17D1  2FEA               	goto	l583
 12216                           
 12217                           ;Dimmer_B1.c: 1862: if (DimmerIntr1.Dimming_Status == 0) {
 12218  17D2  1AB9               	btfsc	_DimmerIntr1^(0+128),5
 12219  17D3  2FE1               	goto	l5351
 12220                           
 12221                           ;Dimmer_B1.c: 1863: if (DimmerIntr1.DimmingValue < ((char)(82*0.6))) {
 12222  17D4  3031               	movlw	49
 12223  17D5  023E               	subwf	(_DimmerIntr1^(0+128)+5),w
 12224  17D6  1803               	skipnc
 12225  17D7  2FDF               	goto	l585
 12226                           
 12227                           ;Dimmer_B1.c: 1864: DimmerIntr1.DimmingValue++;
 12228  17D8  3001               	movlw	1
 12229  17D9  0020               	movlb	0	; select bank0
 12230  17DA  00A0               	movwf	??_DimmerLights_DimmingFunction
 12231  17DB  0820               	movf	??_DimmerLights_DimmingFunction,w
 12232  17DC  0021               	movlb	1	; select bank1
 12233  17DD  07BE               	addwf	(_DimmerIntr1^(0+128)+5),f
 12234                           
 12235                           ;Dimmer_B1.c: 1865: } else {
 12236  17DE  0008               	return
 12237  17DF                     l585:	
 12238                           
 12239                           ;Dimmer_B1.c: 1866: DimmerIntr1.Dimming_Status = 1;
 12240  17DF  16B9               	bsf	_DimmerIntr1^(0+128),5
 12241                           
 12242                           ;Dimmer_B1.c: 1867: }
 12243                           ;Dimmer_B1.c: 1868: } else {
 12244  17E0  0008               	return
 12245  17E1                     l5351:	
 12246                           
 12247                           ;Dimmer_B1.c: 1869: if (DimmerIntr1.DimmingValue > ((char)(10*0.6))) {
 12248  17E1  3007               	movlw	7
 12249  17E2  023E               	subwf	(_DimmerIntr1^(0+128)+5),w
 12250  17E3  1C03               	skipc
 12251  17E4  2FE8               	goto	l588
 12252                           
 12253                           ;Dimmer_B1.c: 1870: DimmerIntr1.DimmingValue--;
 12254  17E5  3001               	movlw	1
 12255  17E6  02BE               	subwf	(_DimmerIntr1^(0+128)+5),f
 12256                           
 12257                           ;Dimmer_B1.c: 1871: } else {
 12258  17E7  0008               	return
 12259  17E8                     l588:	
 12260                           
 12261                           ;Dimmer_B1.c: 1872: DimmerIntr1.Dimming_Status = 0;
 12262  17E8  12B9               	bcf	_DimmerIntr1^(0+128),5
 12263                           
 12264                           ;Dimmer_B1.c: 1873: }
 12265                           ;Dimmer_B1.c: 1874: }
 12266                           ;Dimmer_B1.c: 1875: } else if (DimmerIntr1.Dimming_RF == 1) {
 12267  17E9  0008               	return
 12268  17EA                     l583:	
 12269  17EA  1F39               	btfss	_DimmerIntr1^(0+128),6
 12270  17EB  0008               	return
 12271                           
 12272                           ;Dimmer_B1.c: 1876: if (DimmerIntr1.DimmingValue < DimmerIntr1.MaxmumValue) {
 12273  17EC  083F               	movf	(_DimmerIntr1^(0+128)+6),w
 12274  17ED  023E               	subwf	(_DimmerIntr1^(0+128)+5),w
 12275  17EE  1803               	skipnc
 12276  17EF  2FF7               	goto	l5359
 12277                           
 12278                           ;Dimmer_B1.c: 1877: DimmerIntr1.DimmingValue++;
 12279  17F0  3001               	movlw	1
 12280  17F1  0020               	movlb	0	; select bank0
 12281  17F2  00A0               	movwf	??_DimmerLights_DimmingFunction
 12282  17F3  0820               	movf	??_DimmerLights_DimmingFunction,w
 12283  17F4  0021               	movlb	1	; select bank1
 12284  17F5  07BE               	addwf	(_DimmerIntr1^(0+128)+5),f
 12285                           
 12286                           ;Dimmer_B1.c: 1878: } else if (DimmerIntr1.DimmingValue > DimmerIntr1.MaxmumValue) {
 12287  17F6  0008               	return
 12288  17F7                     l5359:	
 12289  17F7  083E               	movf	(_DimmerIntr1^(0+128)+5),w
 12290  17F8  023F               	subwf	(_DimmerIntr1^(0+128)+6),w
 12291  17F9  1803               	skipnc
 12292  17FA  2FFE               	goto	l594
 12293                           
 12294                           ;Dimmer_B1.c: 1879: DimmerIntr1.DimmingValue--;
 12295  17FB  3001               	movlw	1
 12296  17FC  02BE               	subwf	(_DimmerIntr1^(0+128)+5),f
 12297                           
 12298                           ;Dimmer_B1.c: 1880: } else {
 12299  17FD  0008               	return
 12300  17FE                     l594:	
 12301                           
 12302                           ;Dimmer_B1.c: 1881: DimmerIntr1.Dimming_RF = 0;
 12303  17FE  1339               	bcf	_DimmerIntr1^(0+128),6
 12304  17FF  0008               	return
 12305  1800                     __end_of_DimmerLights_DimmingFunction:	
 12306                           
 12307                           	psect	text80
 12308  111C                     __ptext80:	
 12309 ;; *************** function _DimmerLights_Initialization *****************
 12310 ;; Defined at:
 12311 ;;		line 673 in file "../src/Dimmer_B1.c"
 12312 ;; Parameters:    Size  Location     Type
 12313 ;;		None
 12314 ;; Auto vars:     Size  Location     Type
 12315 ;;		None
 12316 ;; Return value:  Size  Location     Type
 12317 ;;		None               void
 12318 ;; Registers used:
 12319 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12320 ;; Tracked objects:
 12321 ;;		On entry : 0/0
 12322 ;;		On exit  : 0/0
 12323 ;;		Unchanged: 0/0
 12324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12329 ;;Total ram usage:        0 bytes
 12330 ;; Hardware stack levels used:    1
 12331 ;; Hardware stack levels required when called:    9
 12332 ;; This function calls:
 12333 ;;		_DimmerIntr_Initialization
 12334 ;;		_setDimmerLights_Initialization
 12335 ;; This function is called by:
 12336 ;;		_main
 12337 ;; This function uses a non-reentrant model
 12338 ;;
 12339                           
 12340                           
 12341                           ;psect for function _DimmerLights_Initialization
 12342  111C                     _DimmerLights_Initialization:	
 12343                           
 12344                           ;Dimmer_B1.c: 675: setDimmerLights_Initialization(1);
 12345                           
 12346                           ;incstack = 0
 12347                           ; Regs used in _DimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 12348  111C  3001               	movlw	1
 12349  111D  3190  20DD  3191   	fcall	_setDimmerLights_Initialization
 12350                           
 12351                           ;Dimmer_B1.c: 685: DimmerIntr_Initialization();
 12352  1120  318A  2229         	fcall	_DimmerIntr_Initialization
 12353  1122  0008               	return
 12354  1123                     __end_of_DimmerLights_Initialization:	
 12355                           
 12356                           	psect	text81
 12357  10DD                     __ptext81:	
 12358 ;; *************** function _setDimmerLights_Initialization *****************
 12359 ;; Defined at:
 12360 ;;		line 689 in file "../src/Dimmer_B1.c"
 12361 ;; Parameters:    Size  Location     Type
 12362 ;;  lights          1    wreg     unsigned char 
 12363 ;; Auto vars:     Size  Location     Type
 12364 ;;  lights          1    0[COMMON] unsigned char 
 12365 ;; Return value:  Size  Location     Type
 12366 ;;		None               void
 12367 ;; Registers used:
 12368 ;;		wreg
 12369 ;; Tracked objects:
 12370 ;;		On entry : 0/0
 12371 ;;		On exit  : 0/0
 12372 ;;		Unchanged: 0/0
 12373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12378 ;;Total ram usage:        0 bytes
 12379 ;; Hardware stack levels used:    1
 12380 ;; Hardware stack levels required when called:    5
 12381 ;; This function calls:
 12382 ;;		Nothing
 12383 ;; This function is called by:
 12384 ;;		_DimmerLights_Initialization
 12385 ;; This function uses a non-reentrant model
 12386 ;;
 12387                           
 12388                           
 12389                           ;psect for function _setDimmerLights_Initialization
 12390  10DD                     _setDimmerLights_Initialization:	
 12391                           
 12392                           ;incstack = 0
 12393                           ; Regs used in _setDimmerLights_Initialization: [wreg]
 12394  10DD  0008               	return
 12395  10DE                     __end_of_setDimmerLights_Initialization:	
 12396                           
 12397                           	psect	text82
 12398  0A29                     __ptext82:	
 12399 ;; *************** function _DimmerIntr_Initialization *****************
 12400 ;; Defined at:
 12401 ;;		line 7 in file "../src/Dimmer_B1.c"
 12402 ;; Parameters:    Size  Location     Type
 12403 ;;		None
 12404 ;; Auto vars:     Size  Location     Type
 12405 ;;		None
 12406 ;; Return value:  Size  Location     Type
 12407 ;;		None               void
 12408 ;; Registers used:
 12409 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12410 ;; Tracked objects:
 12411 ;;		On entry : 0/0
 12412 ;;		On exit  : 0/0
 12413 ;;		Unchanged: 0/0
 12414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12417 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12418 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12419 ;;Total ram usage:        2 bytes
 12420 ;; Hardware stack levels used:    1
 12421 ;; Hardware stack levels required when called:    8
 12422 ;; This function calls:
 12423 ;;		_Division
 12424 ;;		_getDimmerLights_PercentToValue
 12425 ;;		_getDimmerLights_ValueToPercent
 12426 ;;		_setMemory_Modify
 12427 ;; This function is called by:
 12428 ;;		_DimmerLights_Initialization
 12429 ;; This function uses a non-reentrant model
 12430 ;;
 12431                           
 12432                           
 12433                           ;psect for function _DimmerIntr_Initialization
 12434  0A29                     _DimmerIntr_Initialization:	
 12435                           
 12436                           ;Dimmer_B1.c: 10: DimmerIntr1.TuneTimeValue = 3;
 12437                           
 12438                           ;incstack = 0
 12439                           ; Regs used in _DimmerIntr_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 12440  0A29  3003               	movlw	3
 12441  0A2A  0020               	movlb	0	; select bank0
 12442  0A2B  00E2               	movwf	??_DimmerIntr_Initialization
 12443  0A2C  0862               	movf	??_DimmerIntr_Initialization,w
 12444  0A2D  0021               	movlb	1	; select bank1
 12445  0A2E  00BD               	movwf	(_DimmerIntr1^(0+128)+4)
 12446                           
 12447                           ;Dimmer_B1.c: 11: DimmerIntr1.MaxmumValue = ((char)(82*0.6));
 12448  0A2F  3031               	movlw	49
 12449  0A30  0020               	movlb	0	; select bank0
 12450  0A31  00E2               	movwf	??_DimmerIntr_Initialization
 12451  0A32  0862               	movf	??_DimmerIntr_Initialization,w
 12452  0A33  0021               	movlb	1	; select bank1
 12453  0A34  00BF               	movwf	(_DimmerIntr1^(0+128)+6)
 12454                           
 12455                           ;Dimmer_B1.c: 12: DimmerIntr1.MinimumValue = ((char)(10*0.6));
 12456  0A35  3006               	movlw	6
 12457  0A36  0020               	movlb	0	; select bank0
 12458  0A37  00E2               	movwf	??_DimmerIntr_Initialization
 12459  0A38  0862               	movf	??_DimmerIntr_Initialization,w
 12460  0A39  0021               	movlb	1	; select bank1
 12461  0A3A  00C0               	movwf	(_DimmerIntr1^(0+128)+7)
 12462                           
 12463                           ;Dimmer_B1.c: 13: DimmerIntr1.Tune = 0;
 12464  0A3B  10B9               	bcf	_DimmerIntr1^(0+128),1
 12465                           
 12466                           ;Dimmer_B1.c: 17: if (myMain.InitDimmer == 1) {
 12467  0A3C  1E2A               	btfss	(_myMain^(0+128)+10),4
 12468  0A3D  2A4D               	goto	l369
 12469                           
 12470                           ;Dimmer_B1.c: 18: product->Data[21] = getDimmerLights_ValueToPercent(((char)(82*0.6)));
 12471  0A3E  3031               	movlw	49
 12472  0A3F  318B  234D  318A   	fcall	_getDimmerLights_ValueToPercent
 12473  0A42  0020               	movlb	0	; select bank0
 12474  0A43  00E2               	movwf	??_DimmerIntr_Initialization
 12475  0A44  0021               	movlb	1	; select bank1
 12476  0A45  086E               	movf	_product^(0+128),w
 12477  0A46  3E15               	addlw	21
 12478  0A47  0086               	movwf	6
 12479  0A48  3001               	movlw	1	; select bank2/3
 12480  0A49  0087               	movwf	7
 12481  0A4A  0020               	movlb	0	; select bank0
 12482  0A4B  0862               	movf	??_DimmerIntr_Initialization,w
 12483  0A4C  0081               	movwf	1
 12484  0A4D                     l369:	
 12485                           
 12486                           ;Dimmer_B1.c: 19: }
 12487                           ;Dimmer_B1.c: 21: DimmerIntr1.DimmingValue = getDimmerLights_PercentToValue(product->Dat
      +                          a[21]);
 12488  0A4D  0021               	movlb	1	; select bank1
 12489  0A4E  086E               	movf	_product^(0+128),w
 12490  0A4F  3E15               	addlw	21
 12491  0A50  0086               	movwf	6
 12492  0A51  3001               	movlw	1	; select bank2/3
 12493  0A52  0087               	movwf	7
 12494  0A53  0801               	movf	1,w
 12495  0A54  318A  22E8  318A   	fcall	_getDimmerLights_PercentToValue
 12496  0A57  0020               	movlb	0	; select bank0
 12497  0A58  00E2               	movwf	??_DimmerIntr_Initialization
 12498  0A59  0862               	movf	??_DimmerIntr_Initialization,w
 12499  0A5A  0021               	movlb	1	; select bank1
 12500  0A5B  00BE               	movwf	(_DimmerIntr1^(0+128)+5)
 12501                           
 12502                           ;Dimmer_B1.c: 28: DimmerIntr1.TuneValue2 = Division(((char)(82*0.6)), 2);
 12503  0A5C  3002               	movlw	2
 12504  0A5D  0020               	movlb	0	; select bank0
 12505  0A5E  00E2               	movwf	??_DimmerIntr_Initialization
 12506  0A5F  0862               	movf	??_DimmerIntr_Initialization,w
 12507  0A60  00A5               	movwf	Division@num
 12508  0A61  3031               	movlw	49
 12509  0A62  3192  222A  318A   	fcall	_Division
 12510  0A65  0020               	movlb	0	; select bank0
 12511  0A66  00E3               	movwf	??_DimmerIntr_Initialization+1
 12512  0A67  0863               	movf	??_DimmerIntr_Initialization+1,w
 12513  0A68  0021               	movlb	1	; select bank1
 12514  0A69  00C1               	movwf	(_DimmerIntr1^(0+128)+8)
 12515                           
 12516                           ;Dimmer_B1.c: 29: DimmerIntr1.TuneValue3 = DimmerIntr1.TuneValue2 + (60 - ((char)(82*0.6
      +                          )));
 12517  0A6A  0841               	movf	(_DimmerIntr1^(0+128)+8),w
 12518  0A6B  3E0B               	addlw	11
 12519  0A6C  0020               	movlb	0	; select bank0
 12520  0A6D  00E2               	movwf	??_DimmerIntr_Initialization
 12521  0A6E  0862               	movf	??_DimmerIntr_Initialization,w
 12522  0A6F  0021               	movlb	1	; select bank1
 12523  0A70  00C2               	movwf	(_DimmerIntr1^(0+128)+9)
 12524                           
 12525                           ;Dimmer_B1.c: 30: DimmerIntr1.TuneValue4 = DimmerIntr1.TuneValue3 + DimmerIntr1.TuneValu
      +                          e2;
 12526  0A71  0842               	movf	(_DimmerIntr1^(0+128)+9),w
 12527  0A72  0741               	addwf	(_DimmerIntr1^(0+128)+8),w
 12528  0A73  0020               	movlb	0	; select bank0
 12529  0A74  00E2               	movwf	??_DimmerIntr_Initialization
 12530  0A75  0862               	movf	??_DimmerIntr_Initialization,w
 12531  0A76  0021               	movlb	1	; select bank1
 12532  0A77  00C3               	movwf	(_DimmerIntr1^(0+128)+10)
 12533                           
 12534                           ;Dimmer_B1.c: 31: DimmerIntr1.TuneEnd = DimmerIntr1.TuneValue4 + 1;
 12535  0A78  0843               	movf	(_DimmerIntr1^(0+128)+10),w
 12536  0A79  3E01               	addlw	1
 12537  0A7A  0020               	movlb	0	; select bank0
 12538  0A7B  00E2               	movwf	??_DimmerIntr_Initialization
 12539  0A7C  0862               	movf	??_DimmerIntr_Initialization,w
 12540  0A7D  0021               	movlb	1	; select bank1
 12541  0A7E  00C4               	movwf	(_DimmerIntr1^(0+128)+11)
 12542                           
 12543                           ;Dimmer_B1.c: 81: if (myMain.InitDimmer == 1) {
 12544  0A7F  1E2A               	btfss	(_myMain^(0+128)+10),4
 12545  0A80  0008               	return
 12546                           
 12547                           ;Dimmer_B1.c: 82: myMain.InitDimmer = 0;
 12548  0A81  122A               	bcf	(_myMain^(0+128)+10),4
 12549                           
 12550                           ;Dimmer_B1.c: 83: myMain.SaveDimmer = 1;
 12551  0A82  16AA               	bsf	(_myMain^(0+128)+10),5
 12552                           
 12553                           ;Dimmer_B1.c: 84: setMemory_Modify(1);
 12554  0A83  3001               	movlw	1
 12555  0A84  3193  2306         	fcall	_setMemory_Modify
 12556  0A86  0008               	return
 12557  0A87                     __end_of_DimmerIntr_Initialization:	
 12558                           
 12559                           	psect	text83
 12560  1306                     __ptext83:	
 12561 ;; *************** function _setMemory_Modify *****************
 12562 ;; Defined at:
 12563 ;;		line 1083 in file "../src/MCU_B1.c"
 12564 ;; Parameters:    Size  Location     Type
 12565 ;;  command         1    wreg     unsigned char 
 12566 ;; Auto vars:     Size  Location     Type
 12567 ;;  command         1    1[BANK0 ] unsigned char 
 12568 ;; Return value:  Size  Location     Type
 12569 ;;		None               void
 12570 ;; Registers used:
 12571 ;;		wreg, status,2, status,0
 12572 ;; Tracked objects:
 12573 ;;		On entry : 0/0
 12574 ;;		On exit  : 0/0
 12575 ;;		Unchanged: 0/0
 12576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12578 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12579 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12580 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12581 ;;Total ram usage:        2 bytes
 12582 ;; Hardware stack levels used:    1
 12583 ;; Hardware stack levels required when called:    5
 12584 ;; This function calls:
 12585 ;;		Nothing
 12586 ;; This function is called by:
 12587 ;;		_DimmerIntr_Initialization
 12588 ;;		_DimmerLights_AssignationDimming
 12589 ;;		_setDimmerLights_Dimming
 12590 ;; This function uses a non-reentrant model
 12591 ;;
 12592                           
 12593                           
 12594                           ;psect for function _setMemory_Modify
 12595  1306                     _setMemory_Modify:	
 12596                           
 12597                           ;incstack = 0
 12598                           ; Regs used in _setMemory_Modify: [wreg+status,2+status,0]
 12599                           ;setMemory_Modify@command stored from wreg
 12600  1306  0020               	movlb	0	; select bank0
 12601  1307  00A1               	movwf	setMemory_Modify@command
 12602                           
 12603                           ;MCU_B1.c: 1084: Memory.Modify = command == 1 ? 1 : 0;
 12604  1308  0821               	movf	setMemory_Modify@command,w
 12605  1309  3A01               	xorlw	1
 12606  130A  3000               	movlw	0
 12607  130B  1903               	skipnz
 12608  130C  3001               	movlw	1
 12609  130D  00A0               	movwf	??_setMemory_Modify
 12610  130E  0023               	movlb	3	; select bank3
 12611  130F  0844               	movf	(_Memory^(0+384)+36),w
 12612  1310  0020               	movlb	0	; select bank0
 12613  1311  0620               	xorwf	??_setMemory_Modify,w
 12614  1312  39FE               	andlw	-2
 12615  1313  0620               	xorwf	??_setMemory_Modify,w
 12616  1314  0023               	movlb	3	; select bank3
 12617  1315  00C4               	movwf	(_Memory^(0+384)+36)
 12618                           
 12619                           ;MCU_B1.c: 1085: Memory.Time = 0;
 12620  1316  01C2               	clrf	(_Memory^(0+384)+34)
 12621  1317  01C3               	clrf	((_Memory+1)^(0+384)+34)
 12622  1318  0008               	return
 12623  1319                     __end_of_setMemory_Modify:	
 12624                           
 12625                           	psect	text84
 12626  0B4D                     __ptext84:	
 12627 ;; *************** function _getDimmerLights_ValueToPercent *****************
 12628 ;; Defined at:
 12629 ;;		line 1246 in file "../src/Dimmer_B1.c"
 12630 ;; Parameters:    Size  Location     Type
 12631 ;;  value           1    wreg     unsigned char 
 12632 ;; Auto vars:     Size  Location     Type
 12633 ;;  value           1   62[BANK0 ] unsigned char 
 12634 ;;  i               3   63[BANK0 ] float 
 12635 ;; Return value:  Size  Location     Type
 12636 ;;                  1    wreg      unsigned char 
 12637 ;; Registers used:
 12638 ;;		wreg, status,2, status,0, pclath, cstack
 12639 ;; Tracked objects:
 12640 ;;		On entry : 0/0
 12641 ;;		On exit  : 0/0
 12642 ;;		Unchanged: 0/0
 12643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12645 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12646 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12647 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12648 ;;Total ram usage:        6 bytes
 12649 ;; Hardware stack levels used:    1
 12650 ;; Hardware stack levels required when called:    7
 12651 ;; This function calls:
 12652 ;;		___awtoft
 12653 ;;		___ftadd
 12654 ;;		___ftdiv
 12655 ;;		___ftneg
 12656 ;;		___fttol
 12657 ;; This function is called by:
 12658 ;;		_DimmerIntr_Initialization
 12659 ;;		_setDimmerLights_Dimming
 12660 ;; This function uses a non-reentrant model
 12661 ;;
 12662                           
 12663                           
 12664                           ;psect for function _getDimmerLights_ValueToPercent
 12665  0B4D                     _getDimmerLights_ValueToPercent:	
 12666                           
 12667                           ;incstack = 0
 12668                           ; Regs used in _getDimmerLights_ValueToPercent: [wreg+status,2+status,0+pclath+cstack]
 12669                           ;getDimmerLights_ValueToPercent@value stored from wreg
 12670  0B4D  0020               	movlb	0	; select bank0
 12671  0B4E  00DE               	movwf	getDimmerLights_ValueToPercent@value
 12672                           
 12673                           ;Dimmer_B1.c: 1254: float i = ((char)(82*0.6)) - ((char)(10*0.6));
 12674  0B4F  3000               	movlw	0
 12675  0B50  00DF               	movwf	getDimmerLights_ValueToPercent@i
 12676  0B51  302C               	movlw	44
 12677  0B52  00E0               	movwf	getDimmerLights_ValueToPercent@i+1
 12678  0B53  3042               	movlw	66
 12679  0B54  00E1               	movwf	getDimmerLights_ValueToPercent@i+2
 12680                           
 12681                           ;Dimmer_B1.c: 1255: i /= 100;
 12682  0B55  3000               	movlw	0
 12683  0B56  00AE               	movwf	___ftdiv@f2
 12684  0B57  30C8               	movlw	200
 12685  0B58  00AF               	movwf	___ftdiv@f2+1
 12686  0B59  3042               	movlw	66
 12687  0B5A  00B0               	movwf	___ftdiv@f2+2
 12688  0B5B  085F               	movf	getDimmerLights_ValueToPercent@i,w
 12689  0B5C  00B1               	movwf	___ftdiv@f1
 12690  0B5D  0860               	movf	getDimmerLights_ValueToPercent@i+1,w
 12691  0B5E  00B2               	movwf	___ftdiv@f1+1
 12692  0B5F  0861               	movf	getDimmerLights_ValueToPercent@i+2,w
 12693  0B60  00B3               	movwf	___ftdiv@f1+2
 12694  0B61  318F  2757  318B   	fcall	___ftdiv
 12695  0B64  0020               	movlb	0	; select bank0
 12696  0B65  082E               	movf	?___ftdiv,w
 12697  0B66  00DF               	movwf	getDimmerLights_ValueToPercent@i
 12698  0B67  082F               	movf	?___ftdiv+1,w
 12699  0B68  00E0               	movwf	getDimmerLights_ValueToPercent@i+1
 12700  0B69  0830               	movf	?___ftdiv+2,w
 12701  0B6A  00E1               	movwf	getDimmerLights_ValueToPercent@i+2
 12702                           
 12703                           ;Dimmer_B1.c: 1257: return (char) (100 - ((((char)(82*0.6)) - value) / i));
 12704  0B6B  085E               	movf	getDimmerLights_ValueToPercent@value,w
 12705  0B6C  00DC               	movwf	??_getDimmerLights_ValueToPercent
 12706  0B6D  01DD               	clrf	??_getDimmerLights_ValueToPercent+1
 12707  0B6E  09DC               	comf	??_getDimmerLights_ValueToPercent,f
 12708  0B6F  09DD               	comf	??_getDimmerLights_ValueToPercent+1,f
 12709  0B70  0ADC               	incf	??_getDimmerLights_ValueToPercent,f
 12710  0B71  1903               	skipnz
 12711  0B72  0ADD               	incf	??_getDimmerLights_ValueToPercent+1,f
 12712  0B73  085C               	movf	??_getDimmerLights_ValueToPercent,w
 12713  0B74  3E31               	addlw	49
 12714  0B75  00A8               	movwf	___awtoft@c
 12715  0B76  3000               	movlw	0
 12716  0B77  3D5D               	addwfc	??_getDimmerLights_ValueToPercent+1,w
 12717  0B78  00A9               	movwf	___awtoft@c+1
 12718  0B79  3194  24F5  318B   	fcall	___awtoft
 12719  0B7C  0020               	movlb	0	; select bank0
 12720  0B7D  0828               	movf	?___awtoft,w
 12721  0B7E  00B1               	movwf	___ftdiv@f1
 12722  0B7F  0829               	movf	?___awtoft+1,w
 12723  0B80  00B2               	movwf	___ftdiv@f1+1
 12724  0B81  082A               	movf	?___awtoft+2,w
 12725  0B82  00B3               	movwf	___ftdiv@f1+2
 12726  0B83  085F               	movf	getDimmerLights_ValueToPercent@i,w
 12727  0B84  00AE               	movwf	___ftdiv@f2
 12728  0B85  0860               	movf	getDimmerLights_ValueToPercent@i+1,w
 12729  0B86  00AF               	movwf	___ftdiv@f2+1
 12730  0B87  0861               	movf	getDimmerLights_ValueToPercent@i+2,w
 12731  0B88  00B0               	movwf	___ftdiv@f2+2
 12732  0B89  318F  2757  318B   	fcall	___ftdiv
 12733  0B8C  0020               	movlb	0	; select bank0
 12734  0B8D  082E               	movf	?___ftdiv,w
 12735  0B8E  00BE               	movwf	___ftneg@f1
 12736  0B8F  082F               	movf	?___ftdiv+1,w
 12737  0B90  00BF               	movwf	___ftneg@f1+1
 12738  0B91  0830               	movf	?___ftdiv+2,w
 12739  0B92  00C0               	movwf	___ftneg@f1+2
 12740  0B93  3191  2152  318B   	fcall	___ftneg
 12741  0B96  0020               	movlb	0	; select bank0
 12742  0B97  083E               	movf	?___ftneg,w
 12743  0B98  00C4               	movwf	___ftadd@f2
 12744  0B99  083F               	movf	?___ftneg+1,w
 12745  0B9A  00C5               	movwf	___ftadd@f2+1
 12746  0B9B  0840               	movf	?___ftneg+2,w
 12747  0B9C  00C6               	movwf	___ftadd@f2+2
 12748  0B9D  3000               	movlw	0
 12749  0B9E  00C1               	movwf	___ftadd@f1
 12750  0B9F  30C8               	movlw	200
 12751  0BA0  00C2               	movwf	___ftadd@f1+1
 12752  0BA1  3042               	movlw	66
 12753  0BA2  00C3               	movwf	___ftadd@f1+2
 12754  0BA3  3183  2367  318B   	fcall	___ftadd
 12755  0BA6  0020               	movlb	0	; select bank0
 12756  0BA7  0841               	movf	?___ftadd,w
 12757  0BA8  00CE               	movwf	___fttol@f1
 12758  0BA9  0842               	movf	?___ftadd+1,w
 12759  0BAA  00CF               	movwf	___fttol@f1+1
 12760  0BAB  0843               	movf	?___ftadd+2,w
 12761  0BAC  00D0               	movwf	___fttol@f1+2
 12762  0BAD  318D  250F         	fcall	___fttol
 12763  0BAF  0020               	movlb	0	; select bank0
 12764  0BB0  084E               	movf	?___fttol,w
 12765  0BB1  0008               	return
 12766  0BB2                     __end_of_getDimmerLights_ValueToPercent:	
 12767                           
 12768                           	psect	text85
 12769  0AE8                     __ptext85:	
 12770 ;; *************** function _getDimmerLights_PercentToValue *****************
 12771 ;; Defined at:
 12772 ;;		line 1230 in file "../src/Dimmer_B1.c"
 12773 ;; Parameters:    Size  Location     Type
 12774 ;;  value           1    wreg     unsigned char 
 12775 ;; Auto vars:     Size  Location     Type
 12776 ;;  value           1   62[BANK0 ] unsigned char 
 12777 ;;  i               3   63[BANK0 ] float 
 12778 ;; Return value:  Size  Location     Type
 12779 ;;                  1    wreg      unsigned char 
 12780 ;; Registers used:
 12781 ;;		wreg, status,2, status,0, pclath, cstack
 12782 ;; Tracked objects:
 12783 ;;		On entry : 0/0
 12784 ;;		On exit  : 0/0
 12785 ;;		Unchanged: 0/0
 12786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12788 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12789 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12790 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12791 ;;Total ram usage:        6 bytes
 12792 ;; Hardware stack levels used:    1
 12793 ;; Hardware stack levels required when called:    7
 12794 ;; This function calls:
 12795 ;;		___awtoft
 12796 ;;		___ftadd
 12797 ;;		___ftdiv
 12798 ;;		___ftmul
 12799 ;;		___ftneg
 12800 ;;		___fttol
 12801 ;; This function is called by:
 12802 ;;		_DimmerIntr_Initialization
 12803 ;;		_setDimmerLights_OnOff
 12804 ;; This function uses a non-reentrant model
 12805 ;;
 12806                           
 12807                           
 12808                           ;psect for function _getDimmerLights_PercentToValue
 12809  0AE8                     _getDimmerLights_PercentToValue:	
 12810                           
 12811                           ;incstack = 0
 12812                           ; Regs used in _getDimmerLights_PercentToValue: [wreg+status,2+status,0+pclath+cstack]
 12813                           ;getDimmerLights_PercentToValue@value stored from wreg
 12814  0AE8  0020               	movlb	0	; select bank0
 12815  0AE9  00DE               	movwf	getDimmerLights_PercentToValue@value
 12816                           
 12817                           ;Dimmer_B1.c: 1238: float i = ((char)(82*0.6)) - ((char)(10*0.6));
 12818  0AEA  3000               	movlw	0
 12819  0AEB  00DF               	movwf	getDimmerLights_PercentToValue@i
 12820  0AEC  302C               	movlw	44
 12821  0AED  00E0               	movwf	getDimmerLights_PercentToValue@i+1
 12822  0AEE  3042               	movlw	66
 12823  0AEF  00E1               	movwf	getDimmerLights_PercentToValue@i+2
 12824                           
 12825                           ;Dimmer_B1.c: 1239: i /= 100;
 12826  0AF0  3000               	movlw	0
 12827  0AF1  00AE               	movwf	___ftdiv@f2
 12828  0AF2  30C8               	movlw	200
 12829  0AF3  00AF               	movwf	___ftdiv@f2+1
 12830  0AF4  3042               	movlw	66
 12831  0AF5  00B0               	movwf	___ftdiv@f2+2
 12832  0AF6  085F               	movf	getDimmerLights_PercentToValue@i,w
 12833  0AF7  00B1               	movwf	___ftdiv@f1
 12834  0AF8  0860               	movf	getDimmerLights_PercentToValue@i+1,w
 12835  0AF9  00B2               	movwf	___ftdiv@f1+1
 12836  0AFA  0861               	movf	getDimmerLights_PercentToValue@i+2,w
 12837  0AFB  00B3               	movwf	___ftdiv@f1+2
 12838  0AFC  318F  2757  318A   	fcall	___ftdiv
 12839  0AFF  0020               	movlb	0	; select bank0
 12840  0B00  082E               	movf	?___ftdiv,w
 12841  0B01  00DF               	movwf	getDimmerLights_PercentToValue@i
 12842  0B02  082F               	movf	?___ftdiv+1,w
 12843  0B03  00E0               	movwf	getDimmerLights_PercentToValue@i+1
 12844  0B04  0830               	movf	?___ftdiv+2,w
 12845  0B05  00E1               	movwf	getDimmerLights_PercentToValue@i+2
 12846                           
 12847                           ;Dimmer_B1.c: 1241: return (char) (((char)(82*0.6)) - ((100 - value) * i));
 12848  0B06  085E               	movf	getDimmerLights_PercentToValue@value,w
 12849  0B07  00DC               	movwf	??_getDimmerLights_PercentToValue
 12850  0B08  01DD               	clrf	??_getDimmerLights_PercentToValue+1
 12851  0B09  09DC               	comf	??_getDimmerLights_PercentToValue,f
 12852  0B0A  09DD               	comf	??_getDimmerLights_PercentToValue+1,f
 12853  0B0B  0ADC               	incf	??_getDimmerLights_PercentToValue,f
 12854  0B0C  1903               	skipnz
 12855  0B0D  0ADD               	incf	??_getDimmerLights_PercentToValue+1,f
 12856  0B0E  085C               	movf	??_getDimmerLights_PercentToValue,w
 12857  0B0F  3E64               	addlw	100
 12858  0B10  00A8               	movwf	___awtoft@c
 12859  0B11  3000               	movlw	0
 12860  0B12  3D5D               	addwfc	??_getDimmerLights_PercentToValue+1,w
 12861  0B13  00A9               	movwf	___awtoft@c+1
 12862  0B14  3194  24F5  318A   	fcall	___awtoft
 12863  0B17  0020               	movlb	0	; select bank0
 12864  0B18  0828               	movf	?___awtoft,w
 12865  0B19  00B1               	movwf	___ftmul@f2
 12866  0B1A  0829               	movf	?___awtoft+1,w
 12867  0B1B  00B2               	movwf	___ftmul@f2+1
 12868  0B1C  082A               	movf	?___awtoft+2,w
 12869  0B1D  00B3               	movwf	___ftmul@f2+2
 12870  0B1E  085F               	movf	getDimmerLights_PercentToValue@i,w
 12871  0B1F  00AE               	movwf	___ftmul@f1
 12872  0B20  0860               	movf	getDimmerLights_PercentToValue@i+1,w
 12873  0B21  00AF               	movwf	___ftmul@f1+1
 12874  0B22  0861               	movf	getDimmerLights_PercentToValue@i+2,w
 12875  0B23  00B0               	movwf	___ftmul@f1+2
 12876  0B24  3186  26CC  318A   	fcall	___ftmul
 12877  0B27  0020               	movlb	0	; select bank0
 12878  0B28  082E               	movf	?___ftmul,w
 12879  0B29  00BE               	movwf	___ftneg@f1
 12880  0B2A  082F               	movf	?___ftmul+1,w
 12881  0B2B  00BF               	movwf	___ftneg@f1+1
 12882  0B2C  0830               	movf	?___ftmul+2,w
 12883  0B2D  00C0               	movwf	___ftneg@f1+2
 12884  0B2E  3191  2152  318A   	fcall	___ftneg
 12885  0B31  0020               	movlb	0	; select bank0
 12886  0B32  083E               	movf	?___ftneg,w
 12887  0B33  00C4               	movwf	___ftadd@f2
 12888  0B34  083F               	movf	?___ftneg+1,w
 12889  0B35  00C5               	movwf	___ftadd@f2+1
 12890  0B36  0840               	movf	?___ftneg+2,w
 12891  0B37  00C6               	movwf	___ftadd@f2+2
 12892  0B38  3000               	movlw	0
 12893  0B39  00C1               	movwf	___ftadd@f1
 12894  0B3A  3044               	movlw	68
 12895  0B3B  00C2               	movwf	___ftadd@f1+1
 12896  0B3C  3042               	movlw	66
 12897  0B3D  00C3               	movwf	___ftadd@f1+2
 12898  0B3E  3183  2367  318A   	fcall	___ftadd
 12899  0B41  0020               	movlb	0	; select bank0
 12900  0B42  0841               	movf	?___ftadd,w
 12901  0B43  00CE               	movwf	___fttol@f1
 12902  0B44  0842               	movf	?___ftadd+1,w
 12903  0B45  00CF               	movwf	___fttol@f1+1
 12904  0B46  0843               	movf	?___ftadd+2,w
 12905  0B47  00D0               	movwf	___fttol@f1+2
 12906  0B48  318D  250F         	fcall	___fttol
 12907  0B4A  0020               	movlb	0	; select bank0
 12908  0B4B  084E               	movf	?___fttol,w
 12909  0B4C  0008               	return
 12910  0B4D                     __end_of_getDimmerLights_PercentToValue:	
 12911                           
 12912                           	psect	text86
 12913  0D0F                     __ptext86:	
 12914 ;; *************** function ___fttol *****************
 12915 ;; Defined at:
 12916 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
 12917 ;; Parameters:    Size  Location     Type
 12918 ;;  f1              3   46[BANK0 ] float 
 12919 ;; Auto vars:     Size  Location     Type
 12920 ;;  lval            4   55[BANK0 ] unsigned long 
 12921 ;;  exp1            1   59[BANK0 ] unsigned char 
 12922 ;;  sign1           1   54[BANK0 ] unsigned char 
 12923 ;; Return value:  Size  Location     Type
 12924 ;;                  4   46[BANK0 ] long 
 12925 ;; Registers used:
 12926 ;;		wreg, status,2, status,0
 12927 ;; Tracked objects:
 12928 ;;		On entry : 0/0
 12929 ;;		On exit  : 0/0
 12930 ;;		Unchanged: 0/0
 12931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12932 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12933 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12934 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12935 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12936 ;;Total ram usage:       14 bytes
 12937 ;; Hardware stack levels used:    1
 12938 ;; Hardware stack levels required when called:    5
 12939 ;; This function calls:
 12940 ;;		Nothing
 12941 ;; This function is called by:
 12942 ;;		_getDimmerLights_PercentToValue
 12943 ;;		_getDimmerLights_ValueToPercent
 12944 ;; This function uses a non-reentrant model
 12945 ;;
 12946                           
 12947                           
 12948                           ;psect for function ___fttol
 12949  0D0F                     ___fttol:	
 12950                           
 12951                           ;incstack = 0
 12952                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 12953  0D0F  0020               	movlb	0	; select bank0
 12954  0D10  084E               	movf	___fttol@f1,w
 12955  0D11  00D2               	movwf	??___fttol
 12956  0D12  084F               	movf	___fttol@f1+1,w
 12957  0D13  00D3               	movwf	??___fttol+1
 12958  0D14  0850               	movf	___fttol@f1+2,w
 12959  0D15  00D4               	movwf	??___fttol+2
 12960  0D16  1003               	clrc
 12961  0D17  0D53               	rlf	??___fttol+1,w
 12962  0D18  0D54               	rlf	??___fttol+2,w
 12963  0D19  00D5               	movwf	??___fttol+3
 12964  0D1A  0855               	movf	??___fttol+3,w
 12965  0D1B  00DB               	movwf	___fttol@exp1
 12966  0D1C  08DB               	movf	___fttol@exp1,f
 12967  0D1D  1D03               	skipz
 12968  0D1E  2D28               	goto	l4635
 12969  0D1F  3000               	movlw	0
 12970  0D20  00D1               	movwf	?___fttol+3
 12971  0D21  3000               	movlw	0
 12972  0D22  00D0               	movwf	?___fttol+2
 12973  0D23  3000               	movlw	0
 12974  0D24  00CF               	movwf	?___fttol+1
 12975  0D25  3000               	movlw	0
 12976  0D26  00CE               	movwf	?___fttol
 12977  0D27  0008               	return
 12978  0D28                     l4635:	
 12979  0D28  084E               	movf	___fttol@f1,w
 12980  0D29  00D2               	movwf	??___fttol
 12981  0D2A  084F               	movf	___fttol@f1+1,w
 12982  0D2B  00D3               	movwf	??___fttol+1
 12983  0D2C  0850               	movf	___fttol@f1+2,w
 12984  0D2D  00D4               	movwf	??___fttol+2
 12985  0D2E  3017               	movlw	23
 12986  0D2F                     u4335:	
 12987  0D2F  36D4               	lsrf	??___fttol+2,f
 12988  0D30  0CD3               	rrf	??___fttol+1,f
 12989  0D31  0CD2               	rrf	??___fttol,f
 12990  0D32  0B89               	decfsz	9,f
 12991  0D33  2D2F               	goto	u4335
 12992  0D34  0852               	movf	??___fttol,w
 12993  0D35  00D5               	movwf	??___fttol+3
 12994  0D36  0855               	movf	??___fttol+3,w
 12995  0D37  00D6               	movwf	___fttol@sign1
 12996  0D38  17CF               	bsf	___fttol@f1+1,7
 12997  0D39  30FF               	movlw	255
 12998  0D3A  05CE               	andwf	___fttol@f1,f
 12999  0D3B  30FF               	movlw	255
 13000  0D3C  05CF               	andwf	___fttol@f1+1,f
 13001  0D3D  3000               	movlw	0
 13002  0D3E  05D0               	andwf	___fttol@f1+2,f
 13003  0D3F  084E               	movf	___fttol@f1,w
 13004  0D40  00D7               	movwf	___fttol@lval
 13005  0D41  084F               	movf	___fttol@f1+1,w
 13006  0D42  00D8               	movwf	___fttol@lval+1
 13007  0D43  0850               	movf	___fttol@f1+2,w
 13008  0D44  00D9               	movwf	___fttol@lval+2
 13009  0D45  01DA               	clrf	___fttol@lval+3
 13010  0D46  308E               	movlw	142
 13011  0D47  02DB               	subwf	___fttol@exp1,f
 13012  0D48  1FDB               	btfss	___fttol@exp1,7
 13013  0D49  2D66               	goto	l4655
 13014  0D4A  085B               	movf	___fttol@exp1,w
 13015  0D4B  3A80               	xorlw	128
 13016  0D4C  3E8F               	addlw	143
 13017  0D4D  1803               	skipnc
 13018  0D4E  2D58               	goto	l4653
 13019  0D4F  3000               	movlw	0
 13020  0D50  00D1               	movwf	?___fttol+3
 13021  0D51  3000               	movlw	0
 13022  0D52  00D0               	movwf	?___fttol+2
 13023  0D53  3000               	movlw	0
 13024  0D54  00CF               	movwf	?___fttol+1
 13025  0D55  3000               	movlw	0
 13026  0D56  00CE               	movwf	?___fttol
 13027  0D57  0008               	return
 13028  0D58                     l4653:	
 13029  0D58  3001               	movlw	1
 13030  0D59                     u4365:	
 13031  0D59  36DA               	lsrf	___fttol@lval+3,f
 13032  0D5A  0CD9               	rrf	___fttol@lval+2,f
 13033  0D5B  0CD8               	rrf	___fttol@lval+1,f
 13034  0D5C  0CD7               	rrf	___fttol@lval,f
 13035  0D5D  0B89               	decfsz	9,f
 13036  0D5E  2D59               	goto	u4365
 13037  0D5F  3001               	movlw	1
 13038  0D60  00D2               	movwf	??___fttol
 13039  0D61  0852               	movf	??___fttol,w
 13040  0D62  07DB               	addwf	___fttol@exp1,f
 13041  0D63  1903               	btfsc	3,2
 13042  0D64  2D7F               	goto	l4665
 13043  0D65  2D58               	goto	l4653
 13044  0D66                     l4655:	
 13045  0D66  3018               	movlw	24
 13046  0D67  025B               	subwf	___fttol@exp1,w
 13047  0D68  1C03               	skipc
 13048  0D69  2D7C               	goto	l4663
 13049  0D6A  3000               	movlw	0
 13050  0D6B  00D1               	movwf	?___fttol+3
 13051  0D6C  3000               	movlw	0
 13052  0D6D  00D0               	movwf	?___fttol+2
 13053  0D6E  3000               	movlw	0
 13054  0D6F  00CF               	movwf	?___fttol+1
 13055  0D70  3000               	movlw	0
 13056  0D71  00CE               	movwf	?___fttol
 13057  0D72  0008               	return
 13058  0D73                     l4661:	
 13059  0D73  3001               	movlw	1
 13060  0D74                     u4395:	
 13061  0D74  35D7               	lslf	___fttol@lval,f
 13062  0D75  0DD8               	rlf	___fttol@lval+1,f
 13063  0D76  0DD9               	rlf	___fttol@lval+2,f
 13064  0D77  0DDA               	rlf	___fttol@lval+3,f
 13065  0D78  0B89               	decfsz	9,f
 13066  0D79  2D74               	goto	u4395
 13067  0D7A  3001               	movlw	1
 13068  0D7B  02DB               	subwf	___fttol@exp1,f
 13069  0D7C                     l4663:	
 13070  0D7C  08DB               	movf	___fttol@exp1,f
 13071  0D7D  1D03               	skipz
 13072  0D7E  2D73               	goto	l4661
 13073  0D7F                     l4665:	
 13074  0D7F  0856               	movf	___fttol@sign1,w
 13075  0D80  1903               	btfsc	3,2
 13076  0D81  2D8D               	goto	l4669
 13077  0D82  09D7               	comf	___fttol@lval,f
 13078  0D83  09D8               	comf	___fttol@lval+1,f
 13079  0D84  09D9               	comf	___fttol@lval+2,f
 13080  0D85  09DA               	comf	___fttol@lval+3,f
 13081  0D86  0AD7               	incf	___fttol@lval,f
 13082  0D87  1903               	skipnz
 13083  0D88  0AD8               	incf	___fttol@lval+1,f
 13084  0D89  1903               	skipnz
 13085  0D8A  0AD9               	incf	___fttol@lval+2,f
 13086  0D8B  1903               	skipnz
 13087  0D8C  0ADA               	incf	___fttol@lval+3,f
 13088  0D8D                     l4669:	
 13089  0D8D  085A               	movf	___fttol@lval+3,w
 13090  0D8E  00D1               	movwf	?___fttol+3
 13091  0D8F  0859               	movf	___fttol@lval+2,w
 13092  0D90  00D0               	movwf	?___fttol+2
 13093  0D91  0858               	movf	___fttol@lval+1,w
 13094  0D92  00CF               	movwf	?___fttol+1
 13095  0D93  0857               	movf	___fttol@lval,w
 13096  0D94  00CE               	movwf	?___fttol
 13097  0D95  0008               	return
 13098  0D96                     __end_of___fttol:	
 13099                           
 13100                           	psect	text87
 13101  1152                     __ptext87:	
 13102 ;; *************** function ___ftneg *****************
 13103 ;; Defined at:
 13104 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftneg.c"
 13105 ;; Parameters:    Size  Location     Type
 13106 ;;  f1              3   30[BANK0 ] float 
 13107 ;; Auto vars:     Size  Location     Type
 13108 ;;		None
 13109 ;; Return value:  Size  Location     Type
 13110 ;;                  3   30[BANK0 ] float 
 13111 ;; Registers used:
 13112 ;;		wreg
 13113 ;; Tracked objects:
 13114 ;;		On entry : 0/0
 13115 ;;		On exit  : 0/0
 13116 ;;		Unchanged: 0/0
 13117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13118 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13121 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13122 ;;Total ram usage:        3 bytes
 13123 ;; Hardware stack levels used:    1
 13124 ;; Hardware stack levels required when called:    5
 13125 ;; This function calls:
 13126 ;;		Nothing
 13127 ;; This function is called by:
 13128 ;;		_getDimmerLights_PercentToValue
 13129 ;;		_getDimmerLights_ValueToPercent
 13130 ;; This function uses a non-reentrant model
 13131 ;;
 13132                           
 13133                           
 13134                           ;psect for function ___ftneg
 13135  1152                     ___ftneg:	
 13136                           
 13137                           ;incstack = 0
 13138                           ; Regs used in ___ftneg: [wreg]
 13139  1152  0020               	movlb	0	; select bank0
 13140  1153  0840               	movf	___ftneg@f1+2,w
 13141  1154  043F               	iorwf	___ftneg@f1+1,w
 13142  1155  043E               	iorwf	___ftneg@f1,w
 13143  1156  1903               	skipnz
 13144  1157  0008               	return
 13145  1158  3080               	movlw	128
 13146  1159  06C0               	xorwf	___ftneg@f1+2,f
 13147  115A  0008               	return
 13148  115B                     __end_of___ftneg:	
 13149                           
 13150                           	psect	text88
 13151  06CC                     __ptext88:	
 13152 ;; *************** function ___ftmul *****************
 13153 ;; Defined at:
 13154 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftmul.c"
 13155 ;; Parameters:    Size  Location     Type
 13156 ;;  f1              3   14[BANK0 ] float 
 13157 ;;  f2              3   17[BANK0 ] float 
 13158 ;; Auto vars:     Size  Location     Type
 13159 ;;  f3_as_produc    3   25[BANK0 ] unsigned um
 13160 ;;  sign            1   29[BANK0 ] unsigned char 
 13161 ;;  cntr            1   28[BANK0 ] unsigned char 
 13162 ;;  exp             1   24[BANK0 ] unsigned char 
 13163 ;; Return value:  Size  Location     Type
 13164 ;;                  3   14[BANK0 ] float 
 13165 ;; Registers used:
 13166 ;;		wreg, status,2, status,0, pclath, cstack
 13167 ;; Tracked objects:
 13168 ;;		On entry : 0/0
 13169 ;;		On exit  : 0/0
 13170 ;;		Unchanged: 0/0
 13171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13172 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13173 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13174 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13175 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13176 ;;Total ram usage:       16 bytes
 13177 ;; Hardware stack levels used:    1
 13178 ;; Hardware stack levels required when called:    6
 13179 ;; This function calls:
 13180 ;;		___ftpack
 13181 ;; This function is called by:
 13182 ;;		_getDimmerLights_PercentToValue
 13183 ;; This function uses a non-reentrant model
 13184 ;;
 13185                           
 13186                           
 13187                           ;psect for function ___ftmul
 13188  06CC                     ___ftmul:	
 13189                           
 13190                           ;incstack = 0
 13191                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 13192  06CC  0020               	movlb	0	; select bank0
 13193  06CD  082E               	movf	___ftmul@f1,w
 13194  06CE  00B4               	movwf	??___ftmul
 13195  06CF  082F               	movf	___ftmul@f1+1,w
 13196  06D0  00B5               	movwf	??___ftmul+1
 13197  06D1  0830               	movf	___ftmul@f1+2,w
 13198  06D2  00B6               	movwf	??___ftmul+2
 13199  06D3  1003               	clrc
 13200  06D4  0D35               	rlf	??___ftmul+1,w
 13201  06D5  0D36               	rlf	??___ftmul+2,w
 13202  06D6  00B7               	movwf	??___ftmul+3
 13203  06D7  0837               	movf	??___ftmul+3,w
 13204  06D8  00B8               	movwf	___ftmul@exp
 13205  06D9  08B8               	movf	___ftmul@exp,f
 13206  06DA  1D03               	skipz
 13207  06DB  2EE3               	goto	l4577
 13208  06DC  3000               	movlw	0
 13209  06DD  00AE               	movwf	?___ftmul
 13210  06DE  3000               	movlw	0
 13211  06DF  00AF               	movwf	?___ftmul+1
 13212  06E0  3000               	movlw	0
 13213  06E1  00B0               	movwf	?___ftmul+2
 13214  06E2  0008               	return
 13215  06E3                     l4577:	
 13216  06E3  0831               	movf	___ftmul@f2,w
 13217  06E4  00B4               	movwf	??___ftmul
 13218  06E5  0832               	movf	___ftmul@f2+1,w
 13219  06E6  00B5               	movwf	??___ftmul+1
 13220  06E7  0833               	movf	___ftmul@f2+2,w
 13221  06E8  00B6               	movwf	??___ftmul+2
 13222  06E9  1003               	clrc
 13223  06EA  0D35               	rlf	??___ftmul+1,w
 13224  06EB  0D36               	rlf	??___ftmul+2,w
 13225  06EC  00B7               	movwf	??___ftmul+3
 13226  06ED  0837               	movf	??___ftmul+3,w
 13227  06EE  00BD               	movwf	___ftmul@sign
 13228  06EF  08BD               	movf	___ftmul@sign,f
 13229  06F0  1D03               	skipz
 13230  06F1  2EF9               	goto	l4583
 13231  06F2  3000               	movlw	0
 13232  06F3  00AE               	movwf	?___ftmul
 13233  06F4  3000               	movlw	0
 13234  06F5  00AF               	movwf	?___ftmul+1
 13235  06F6  3000               	movlw	0
 13236  06F7  00B0               	movwf	?___ftmul+2
 13237  06F8  0008               	return
 13238  06F9                     l4583:	
 13239  06F9  083D               	movf	___ftmul@sign,w
 13240  06FA  3E7B               	addlw	123
 13241  06FB  00B4               	movwf	??___ftmul
 13242  06FC  0834               	movf	??___ftmul,w
 13243  06FD  07B8               	addwf	___ftmul@exp,f
 13244  06FE  082E               	movf	___ftmul@f1,w
 13245  06FF  00B4               	movwf	??___ftmul
 13246  0700  082F               	movf	___ftmul@f1+1,w
 13247  0701  00B5               	movwf	??___ftmul+1
 13248  0702  0830               	movf	___ftmul@f1+2,w
 13249  0703  00B6               	movwf	??___ftmul+2
 13250  0704  3010               	movlw	16
 13251  0705                     u4215:	
 13252  0705  36B6               	lsrf	??___ftmul+2,f
 13253  0706  0CB5               	rrf	??___ftmul+1,f
 13254  0707  0CB4               	rrf	??___ftmul,f
 13255  0708  0B89               	decfsz	9,f
 13256  0709  2F05               	goto	u4215
 13257  070A  0834               	movf	??___ftmul,w
 13258  070B  00B7               	movwf	??___ftmul+3
 13259  070C  0837               	movf	??___ftmul+3,w
 13260  070D  00BD               	movwf	___ftmul@sign
 13261  070E  0831               	movf	___ftmul@f2,w
 13262  070F  00B4               	movwf	??___ftmul
 13263  0710  0832               	movf	___ftmul@f2+1,w
 13264  0711  00B5               	movwf	??___ftmul+1
 13265  0712  0833               	movf	___ftmul@f2+2,w
 13266  0713  00B6               	movwf	??___ftmul+2
 13267  0714  3010               	movlw	16
 13268  0715                     u4225:	
 13269  0715  36B6               	lsrf	??___ftmul+2,f
 13270  0716  0CB5               	rrf	??___ftmul+1,f
 13271  0717  0CB4               	rrf	??___ftmul,f
 13272  0718  0B89               	decfsz	9,f
 13273  0719  2F15               	goto	u4225
 13274  071A  0834               	movf	??___ftmul,w
 13275  071B  00B7               	movwf	??___ftmul+3
 13276  071C  0837               	movf	??___ftmul+3,w
 13277  071D  06BD               	xorwf	___ftmul@sign,f
 13278  071E  3080               	movlw	128
 13279  071F  00B4               	movwf	??___ftmul
 13280  0720  0834               	movf	??___ftmul,w
 13281  0721  05BD               	andwf	___ftmul@sign,f
 13282  0722  17AF               	bsf	___ftmul@f1+1,7
 13283  0723  17B2               	bsf	___ftmul@f2+1,7
 13284  0724  30FF               	movlw	255
 13285  0725  05B1               	andwf	___ftmul@f2,f
 13286  0726  30FF               	movlw	255
 13287  0727  05B2               	andwf	___ftmul@f2+1,f
 13288  0728  3000               	movlw	0
 13289  0729  05B3               	andwf	___ftmul@f2+2,f
 13290  072A  3000               	movlw	0
 13291  072B  00B9               	movwf	___ftmul@f3_as_product
 13292  072C  3000               	movlw	0
 13293  072D  00BA               	movwf	___ftmul@f3_as_product+1
 13294  072E  3000               	movlw	0
 13295  072F  00BB               	movwf	___ftmul@f3_as_product+2
 13296  0730  3007               	movlw	7
 13297  0731  00B4               	movwf	??___ftmul
 13298  0732  0834               	movf	??___ftmul,w
 13299  0733  00BC               	movwf	___ftmul@cntr
 13300  0734                     l4595:	
 13301  0734  1C2E               	btfss	___ftmul@f1,0
 13302  0735  2F3C               	goto	l4599
 13303  0736  0831               	movf	___ftmul@f2,w
 13304  0737  07B9               	addwf	___ftmul@f3_as_product,f
 13305  0738  0832               	movf	___ftmul@f2+1,w
 13306  0739  3DBA               	addwfc	___ftmul@f3_as_product+1,f
 13307  073A  0833               	movf	___ftmul@f2+2,w
 13308  073B  3DBB               	addwfc	___ftmul@f3_as_product+2,f
 13309  073C                     l4599:	
 13310  073C  3001               	movlw	1
 13311  073D                     u4245:	
 13312  073D  36B0               	lsrf	___ftmul@f1+2,f
 13313  073E  0CAF               	rrf	___ftmul@f1+1,f
 13314  073F  0CAE               	rrf	___ftmul@f1,f
 13315  0740  0B89               	decfsz	9,f
 13316  0741  2F3D               	goto	u4245
 13317  0742  3001               	movlw	1
 13318  0743                     u4255:	
 13319  0743  35B1               	lslf	___ftmul@f2,f
 13320  0744  0DB2               	rlf	___ftmul@f2+1,f
 13321  0745  0DB3               	rlf	___ftmul@f2+2,f
 13322  0746  0B89               	decfsz	9,f
 13323  0747  2F43               	goto	u4255
 13324  0748  3001               	movlw	1
 13325  0749  02BC               	subwf	___ftmul@cntr,f
 13326  074A  1D03               	btfss	3,2
 13327  074B  2F34               	goto	l4595
 13328  074C  3009               	movlw	9
 13329  074D  00B4               	movwf	??___ftmul
 13330  074E  0834               	movf	??___ftmul,w
 13331  074F  00BC               	movwf	___ftmul@cntr
 13332  0750                     l4607:	
 13333  0750  1C2E               	btfss	___ftmul@f1,0
 13334  0751  2F58               	goto	l4611
 13335  0752  0831               	movf	___ftmul@f2,w
 13336  0753  07B9               	addwf	___ftmul@f3_as_product,f
 13337  0754  0832               	movf	___ftmul@f2+1,w
 13338  0755  3DBA               	addwfc	___ftmul@f3_as_product+1,f
 13339  0756  0833               	movf	___ftmul@f2+2,w
 13340  0757  3DBB               	addwfc	___ftmul@f3_as_product+2,f
 13341  0758                     l4611:	
 13342  0758  3001               	movlw	1
 13343  0759                     u4285:	
 13344  0759  36B0               	lsrf	___ftmul@f1+2,f
 13345  075A  0CAF               	rrf	___ftmul@f1+1,f
 13346  075B  0CAE               	rrf	___ftmul@f1,f
 13347  075C  0B89               	decfsz	9,f
 13348  075D  2F59               	goto	u4285
 13349  075E  3001               	movlw	1
 13350  075F                     u4295:	
 13351  075F  36BB               	lsrf	___ftmul@f3_as_product+2,f
 13352  0760  0CBA               	rrf	___ftmul@f3_as_product+1,f
 13353  0761  0CB9               	rrf	___ftmul@f3_as_product,f
 13354  0762  0B89               	decfsz	9,f
 13355  0763  2F5F               	goto	u4295
 13356  0764  3001               	movlw	1
 13357  0765  02BC               	subwf	___ftmul@cntr,f
 13358  0766  1D03               	btfss	3,2
 13359  0767  2F50               	goto	l4607
 13360  0768  0839               	movf	___ftmul@f3_as_product,w
 13361  0769  00A0               	movwf	___ftpack@arg
 13362  076A  083A               	movf	___ftmul@f3_as_product+1,w
 13363  076B  00A1               	movwf	___ftpack@arg+1
 13364  076C  083B               	movf	___ftmul@f3_as_product+2,w
 13365  076D  00A2               	movwf	___ftpack@arg+2
 13366  076E  0838               	movf	___ftmul@exp,w
 13367  076F  00B4               	movwf	??___ftmul
 13368  0770  0834               	movf	??___ftmul,w
 13369  0771  00A3               	movwf	___ftpack@exp
 13370  0772  083D               	movf	___ftmul@sign,w
 13371  0773  00B5               	movwf	??___ftmul+1
 13372  0774  0835               	movf	??___ftmul+1,w
 13373  0775  00A4               	movwf	___ftpack@sign
 13374  0776  318A  2287         	fcall	___ftpack
 13375  0778  0020               	movlb	0	; select bank0
 13376  0779  0820               	movf	?___ftpack,w
 13377  077A  00AE               	movwf	?___ftmul
 13378  077B  0821               	movf	?___ftpack+1,w
 13379  077C  00AF               	movwf	?___ftmul+1
 13380  077D  0822               	movf	?___ftpack+2,w
 13381  077E  00B0               	movwf	?___ftmul+2
 13382  077F  0008               	return
 13383  0780                     __end_of___ftmul:	
 13384                           
 13385                           	psect	text89
 13386  0F57                     __ptext89:	
 13387 ;; *************** function ___ftdiv *****************
 13388 ;; Defined at:
 13389 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
 13390 ;; Parameters:    Size  Location     Type
 13391 ;;  f2              3   14[BANK0 ] float 
 13392 ;;  f1              3   17[BANK0 ] float 
 13393 ;; Auto vars:     Size  Location     Type
 13394 ;;  f3              3   25[BANK0 ] float 
 13395 ;;  sign            1   29[BANK0 ] unsigned char 
 13396 ;;  exp             1   28[BANK0 ] unsigned char 
 13397 ;;  cntr            1   24[BANK0 ] unsigned char 
 13398 ;; Return value:  Size  Location     Type
 13399 ;;                  3   14[BANK0 ] float 
 13400 ;; Registers used:
 13401 ;;		wreg, status,2, status,0, pclath, cstack
 13402 ;; Tracked objects:
 13403 ;;		On entry : 0/0
 13404 ;;		On exit  : 0/0
 13405 ;;		Unchanged: 0/0
 13406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13407 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13408 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13409 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13410 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13411 ;;Total ram usage:       16 bytes
 13412 ;; Hardware stack levels used:    1
 13413 ;; Hardware stack levels required when called:    6
 13414 ;; This function calls:
 13415 ;;		___ftpack
 13416 ;; This function is called by:
 13417 ;;		_getDimmerLights_PercentToValue
 13418 ;;		_getDimmerLights_ValueToPercent
 13419 ;; This function uses a non-reentrant model
 13420 ;;
 13421                           
 13422                           
 13423                           ;psect for function ___ftdiv
 13424  0F57                     ___ftdiv:	
 13425                           
 13426                           ;incstack = 0
 13427                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 13428  0F57  0020               	movlb	0	; select bank0
 13429  0F58  0831               	movf	___ftdiv@f1,w
 13430  0F59  00B4               	movwf	??___ftdiv
 13431  0F5A  0832               	movf	___ftdiv@f1+1,w
 13432  0F5B  00B5               	movwf	??___ftdiv+1
 13433  0F5C  0833               	movf	___ftdiv@f1+2,w
 13434  0F5D  00B6               	movwf	??___ftdiv+2
 13435  0F5E  1003               	clrc
 13436  0F5F  0D35               	rlf	??___ftdiv+1,w
 13437  0F60  0D36               	rlf	??___ftdiv+2,w
 13438  0F61  00B7               	movwf	??___ftdiv+3
 13439  0F62  0837               	movf	??___ftdiv+3,w
 13440  0F63  00BC               	movwf	___ftdiv@exp
 13441  0F64  08BC               	movf	___ftdiv@exp,f
 13442  0F65  1D03               	skipz
 13443  0F66  2F6E               	goto	l4535
 13444  0F67  3000               	movlw	0
 13445  0F68  00AE               	movwf	?___ftdiv
 13446  0F69  3000               	movlw	0
 13447  0F6A  00AF               	movwf	?___ftdiv+1
 13448  0F6B  3000               	movlw	0
 13449  0F6C  00B0               	movwf	?___ftdiv+2
 13450  0F6D  0008               	return
 13451  0F6E                     l4535:	
 13452  0F6E  082E               	movf	___ftdiv@f2,w
 13453  0F6F  00B4               	movwf	??___ftdiv
 13454  0F70  082F               	movf	___ftdiv@f2+1,w
 13455  0F71  00B5               	movwf	??___ftdiv+1
 13456  0F72  0830               	movf	___ftdiv@f2+2,w
 13457  0F73  00B6               	movwf	??___ftdiv+2
 13458  0F74  1003               	clrc
 13459  0F75  0D35               	rlf	??___ftdiv+1,w
 13460  0F76  0D36               	rlf	??___ftdiv+2,w
 13461  0F77  00B7               	movwf	??___ftdiv+3
 13462  0F78  0837               	movf	??___ftdiv+3,w
 13463  0F79  00BD               	movwf	___ftdiv@sign
 13464  0F7A  08BD               	movf	___ftdiv@sign,f
 13465  0F7B  1D03               	skipz
 13466  0F7C  2F84               	goto	l4541
 13467  0F7D  3000               	movlw	0
 13468  0F7E  00AE               	movwf	?___ftdiv
 13469  0F7F  3000               	movlw	0
 13470  0F80  00AF               	movwf	?___ftdiv+1
 13471  0F81  3000               	movlw	0
 13472  0F82  00B0               	movwf	?___ftdiv+2
 13473  0F83  0008               	return
 13474  0F84                     l4541:	
 13475  0F84  3000               	movlw	0
 13476  0F85  00B9               	movwf	___ftdiv@f3
 13477  0F86  3000               	movlw	0
 13478  0F87  00BA               	movwf	___ftdiv@f3+1
 13479  0F88  3000               	movlw	0
 13480  0F89  00BB               	movwf	___ftdiv@f3+2
 13481  0F8A  3089               	movlw	137
 13482  0F8B  073D               	addwf	___ftdiv@sign,w
 13483  0F8C  00B4               	movwf	??___ftdiv
 13484  0F8D  0834               	movf	??___ftdiv,w
 13485  0F8E  02BC               	subwf	___ftdiv@exp,f
 13486  0F8F  0831               	movf	___ftdiv@f1,w
 13487  0F90  00B4               	movwf	??___ftdiv
 13488  0F91  0832               	movf	___ftdiv@f1+1,w
 13489  0F92  00B5               	movwf	??___ftdiv+1
 13490  0F93  0833               	movf	___ftdiv@f1+2,w
 13491  0F94  00B6               	movwf	??___ftdiv+2
 13492  0F95  3010               	movlw	16
 13493  0F96                     u4135:	
 13494  0F96  36B6               	lsrf	??___ftdiv+2,f
 13495  0F97  0CB5               	rrf	??___ftdiv+1,f
 13496  0F98  0CB4               	rrf	??___ftdiv,f
 13497  0F99  0B89               	decfsz	9,f
 13498  0F9A  2F96               	goto	u4135
 13499  0F9B  0834               	movf	??___ftdiv,w
 13500  0F9C  00B7               	movwf	??___ftdiv+3
 13501  0F9D  0837               	movf	??___ftdiv+3,w
 13502  0F9E  00BD               	movwf	___ftdiv@sign
 13503  0F9F  082E               	movf	___ftdiv@f2,w
 13504  0FA0  00B4               	movwf	??___ftdiv
 13505  0FA1  082F               	movf	___ftdiv@f2+1,w
 13506  0FA2  00B5               	movwf	??___ftdiv+1
 13507  0FA3  0830               	movf	___ftdiv@f2+2,w
 13508  0FA4  00B6               	movwf	??___ftdiv+2
 13509  0FA5  3010               	movlw	16
 13510  0FA6                     u4145:	
 13511  0FA6  36B6               	lsrf	??___ftdiv+2,f
 13512  0FA7  0CB5               	rrf	??___ftdiv+1,f
 13513  0FA8  0CB4               	rrf	??___ftdiv,f
 13514  0FA9  0B89               	decfsz	9,f
 13515  0FAA  2FA6               	goto	u4145
 13516  0FAB  0834               	movf	??___ftdiv,w
 13517  0FAC  00B7               	movwf	??___ftdiv+3
 13518  0FAD  0837               	movf	??___ftdiv+3,w
 13519  0FAE  06BD               	xorwf	___ftdiv@sign,f
 13520  0FAF  3080               	movlw	128
 13521  0FB0  00B4               	movwf	??___ftdiv
 13522  0FB1  0834               	movf	??___ftdiv,w
 13523  0FB2  05BD               	andwf	___ftdiv@sign,f
 13524  0FB3  17B2               	bsf	___ftdiv@f1+1,7
 13525  0FB4  30FF               	movlw	255
 13526  0FB5  05B1               	andwf	___ftdiv@f1,f
 13527  0FB6  30FF               	movlw	255
 13528  0FB7  05B2               	andwf	___ftdiv@f1+1,f
 13529  0FB8  3000               	movlw	0
 13530  0FB9  05B3               	andwf	___ftdiv@f1+2,f
 13531  0FBA  17AF               	bsf	___ftdiv@f2+1,7
 13532  0FBB  30FF               	movlw	255
 13533  0FBC  05AE               	andwf	___ftdiv@f2,f
 13534  0FBD  30FF               	movlw	255
 13535  0FBE  05AF               	andwf	___ftdiv@f2+1,f
 13536  0FBF  3000               	movlw	0
 13537  0FC0  05B0               	andwf	___ftdiv@f2+2,f
 13538  0FC1  3018               	movlw	24
 13539  0FC2  00B4               	movwf	??___ftdiv
 13540  0FC3  0834               	movf	??___ftdiv,w
 13541  0FC4  00B8               	movwf	___ftdiv@cntr
 13542  0FC5                     l4555:	
 13543  0FC5  3001               	movlw	1
 13544  0FC6                     u4155:	
 13545  0FC6  35B9               	lslf	___ftdiv@f3,f
 13546  0FC7  0DBA               	rlf	___ftdiv@f3+1,f
 13547  0FC8  0DBB               	rlf	___ftdiv@f3+2,f
 13548  0FC9  0B89               	decfsz	9,f
 13549  0FCA  2FC6               	goto	u4155
 13550  0FCB  0830               	movf	___ftdiv@f2+2,w
 13551  0FCC  0233               	subwf	___ftdiv@f1+2,w
 13552  0FCD  1D03               	skipz
 13553  0FCE  2FD5               	goto	u4165
 13554  0FCF  082F               	movf	___ftdiv@f2+1,w
 13555  0FD0  0232               	subwf	___ftdiv@f1+1,w
 13556  0FD1  1D03               	skipz
 13557  0FD2  2FD5               	goto	u4165
 13558  0FD3  082E               	movf	___ftdiv@f2,w
 13559  0FD4  0231               	subwf	___ftdiv@f1,w
 13560  0FD5                     u4165:	
 13561  0FD5  1C03               	skipc
 13562  0FD6  2FDE               	goto	l4563
 13563  0FD7  082E               	movf	___ftdiv@f2,w
 13564  0FD8  02B1               	subwf	___ftdiv@f1,f
 13565  0FD9  082F               	movf	___ftdiv@f2+1,w
 13566  0FDA  3BB2               	subwfb	___ftdiv@f1+1,f
 13567  0FDB  0830               	movf	___ftdiv@f2+2,w
 13568  0FDC  3BB3               	subwfb	___ftdiv@f1+2,f
 13569  0FDD  1439               	bsf	___ftdiv@f3,0
 13570  0FDE                     l4563:	
 13571  0FDE  3001               	movlw	1
 13572  0FDF                     u4175:	
 13573  0FDF  35B1               	lslf	___ftdiv@f1,f
 13574  0FE0  0DB2               	rlf	___ftdiv@f1+1,f
 13575  0FE1  0DB3               	rlf	___ftdiv@f1+2,f
 13576  0FE2  0B89               	decfsz	9,f
 13577  0FE3  2FDF               	goto	u4175
 13578  0FE4  3001               	movlw	1
 13579  0FE5  02B8               	subwf	___ftdiv@cntr,f
 13580  0FE6  1D03               	btfss	3,2
 13581  0FE7  2FC5               	goto	l4555
 13582  0FE8  0839               	movf	___ftdiv@f3,w
 13583  0FE9  00A0               	movwf	___ftpack@arg
 13584  0FEA  083A               	movf	___ftdiv@f3+1,w
 13585  0FEB  00A1               	movwf	___ftpack@arg+1
 13586  0FEC  083B               	movf	___ftdiv@f3+2,w
 13587  0FED  00A2               	movwf	___ftpack@arg+2
 13588  0FEE  083C               	movf	___ftdiv@exp,w
 13589  0FEF  00B4               	movwf	??___ftdiv
 13590  0FF0  0834               	movf	??___ftdiv,w
 13591  0FF1  00A3               	movwf	___ftpack@exp
 13592  0FF2  083D               	movf	___ftdiv@sign,w
 13593  0FF3  00B5               	movwf	??___ftdiv+1
 13594  0FF4  0835               	movf	??___ftdiv+1,w
 13595  0FF5  00A4               	movwf	___ftpack@sign
 13596  0FF6  318A  2287         	fcall	___ftpack
 13597  0FF8  0020               	movlb	0	; select bank0
 13598  0FF9  0820               	movf	?___ftpack,w
 13599  0FFA  00AE               	movwf	?___ftdiv
 13600  0FFB  0821               	movf	?___ftpack+1,w
 13601  0FFC  00AF               	movwf	?___ftdiv+1
 13602  0FFD  0822               	movf	?___ftpack+2,w
 13603  0FFE  00B0               	movwf	?___ftdiv+2
 13604  0FFF  0008               	return
 13605  1000                     __end_of___ftdiv:	
 13606                           
 13607                           	psect	text90
 13608  0367                     __ptext90:	
 13609 ;; *************** function ___ftadd *****************
 13610 ;; Defined at:
 13611 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftadd.c"
 13612 ;; Parameters:    Size  Location     Type
 13613 ;;  f1              3   33[BANK0 ] float 
 13614 ;;  f2              3   36[BANK0 ] float 
 13615 ;; Auto vars:     Size  Location     Type
 13616 ;;  exp1            1   45[BANK0 ] unsigned char 
 13617 ;;  exp2            1   44[BANK0 ] unsigned char 
 13618 ;;  sign            1   43[BANK0 ] unsigned char 
 13619 ;; Return value:  Size  Location     Type
 13620 ;;                  3   33[BANK0 ] float 
 13621 ;; Registers used:
 13622 ;;		wreg, status,2, status,0, pclath, cstack
 13623 ;; Tracked objects:
 13624 ;;		On entry : 0/0
 13625 ;;		On exit  : 0/0
 13626 ;;		Unchanged: 0/0
 13627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13628 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13629 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13630 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13631 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13632 ;;Total ram usage:       13 bytes
 13633 ;; Hardware stack levels used:    1
 13634 ;; Hardware stack levels required when called:    6
 13635 ;; This function calls:
 13636 ;;		___ftpack
 13637 ;; This function is called by:
 13638 ;;		_getDimmerLights_PercentToValue
 13639 ;;		_getDimmerLights_ValueToPercent
 13640 ;; This function uses a non-reentrant model
 13641 ;;
 13642                           
 13643                           
 13644                           ;psect for function ___ftadd
 13645  0367                     ___ftadd:	
 13646                           
 13647                           ;incstack = 0
 13648                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 13649  0367  0020               	movlb	0	; select bank0
 13650  0368  0841               	movf	___ftadd@f1,w
 13651  0369  00C7               	movwf	??___ftadd
 13652  036A  0842               	movf	___ftadd@f1+1,w
 13653  036B  00C8               	movwf	??___ftadd+1
 13654  036C  0843               	movf	___ftadd@f1+2,w
 13655  036D  00C9               	movwf	??___ftadd+2
 13656  036E  1003               	clrc
 13657  036F  0D48               	rlf	??___ftadd+1,w
 13658  0370  0D49               	rlf	??___ftadd+2,w
 13659  0371  00CA               	movwf	??___ftadd+3
 13660  0372  084A               	movf	??___ftadd+3,w
 13661  0373  00CD               	movwf	___ftadd@exp1
 13662  0374  0844               	movf	___ftadd@f2,w
 13663  0375  00C7               	movwf	??___ftadd
 13664  0376  0845               	movf	___ftadd@f2+1,w
 13665  0377  00C8               	movwf	??___ftadd+1
 13666  0378  0846               	movf	___ftadd@f2+2,w
 13667  0379  00C9               	movwf	??___ftadd+2
 13668  037A  1003               	clrc
 13669  037B  0D48               	rlf	??___ftadd+1,w
 13670  037C  0D49               	rlf	??___ftadd+2,w
 13671  037D  00CA               	movwf	??___ftadd+3
 13672  037E  084A               	movf	??___ftadd+3,w
 13673  037F  00CC               	movwf	___ftadd@exp2
 13674  0380  084D               	movf	___ftadd@exp1,w
 13675  0381  1903               	btfsc	3,2
 13676  0382  2B8F               	goto	l4465
 13677  0383  084C               	movf	___ftadd@exp2,w
 13678  0384  024D               	subwf	___ftadd@exp1,w
 13679  0385  1803               	skipnc
 13680  0386  2B96               	goto	l4469
 13681  0387  034D               	decf	___ftadd@exp1,w
 13682  0388  3AFF               	xorlw	255
 13683  0389  074C               	addwf	___ftadd@exp2,w
 13684  038A  00C7               	movwf	??___ftadd
 13685  038B  3019               	movlw	25
 13686  038C  0247               	subwf	??___ftadd,w
 13687  038D  1C03               	skipc
 13688  038E  2B96               	goto	l4469
 13689  038F                     l4465:	
 13690  038F  0844               	movf	___ftadd@f2,w
 13691  0390  00C1               	movwf	?___ftadd
 13692  0391  0845               	movf	___ftadd@f2+1,w
 13693  0392  00C2               	movwf	?___ftadd+1
 13694  0393  0846               	movf	___ftadd@f2+2,w
 13695  0394  00C3               	movwf	?___ftadd+2
 13696  0395  0008               	return
 13697  0396                     l4469:	
 13698  0396  084C               	movf	___ftadd@exp2,w
 13699  0397  1903               	btfsc	3,2
 13700  0398  0008               	return
 13701  0399  084D               	movf	___ftadd@exp1,w
 13702  039A  024C               	subwf	___ftadd@exp2,w
 13703  039B  1803               	skipnc
 13704  039C  2BA5               	goto	l4475
 13705  039D  034C               	decf	___ftadd@exp2,w
 13706  039E  3AFF               	xorlw	255
 13707  039F  074D               	addwf	___ftadd@exp1,w
 13708  03A0  00C7               	movwf	??___ftadd
 13709  03A1  3019               	movlw	25
 13710  03A2  0247               	subwf	??___ftadd,w
 13711  03A3  1803               	btfsc	3,0
 13712  03A4  0008               	return
 13713  03A5                     l4475:	
 13714  03A5  3006               	movlw	6
 13715  03A6  00C7               	movwf	??___ftadd
 13716  03A7  0847               	movf	??___ftadd,w
 13717  03A8  00CB               	movwf	___ftadd@sign
 13718  03A9  1BC3               	btfsc	___ftadd@f1+2,7
 13719  03AA  17CB               	bsf	___ftadd@sign,7
 13720  03AB  1BC6               	btfsc	___ftadd@f2+2,7
 13721  03AC  174B               	bsf	___ftadd@sign,6
 13722  03AD  17C2               	bsf	___ftadd@f1+1,7
 13723  03AE  30FF               	movlw	255
 13724  03AF  05C1               	andwf	___ftadd@f1,f
 13725  03B0  30FF               	movlw	255
 13726  03B1  05C2               	andwf	___ftadd@f1+1,f
 13727  03B2  3000               	movlw	0
 13728  03B3  05C3               	andwf	___ftadd@f1+2,f
 13729  03B4  17C5               	bsf	___ftadd@f2+1,7
 13730  03B5  30FF               	movlw	255
 13731  03B6  05C4               	andwf	___ftadd@f2,f
 13732  03B7  30FF               	movlw	255
 13733  03B8  05C5               	andwf	___ftadd@f2+1,f
 13734  03B9  3000               	movlw	0
 13735  03BA  05C6               	andwf	___ftadd@f2+2,f
 13736  03BB  084C               	movf	___ftadd@exp2,w
 13737  03BC  024D               	subwf	___ftadd@exp1,w
 13738  03BD  1803               	skipnc
 13739  03BE  2BE1               	goto	l4497
 13740  03BF                     l4487:	
 13741  03BF  3001               	movlw	1
 13742  03C0                     u3975:	
 13743  03C0  35C4               	lslf	___ftadd@f2,f
 13744  03C1  0DC5               	rlf	___ftadd@f2+1,f
 13745  03C2  0DC6               	rlf	___ftadd@f2+2,f
 13746  03C3  0B89               	decfsz	9,f
 13747  03C4  2BC0               	goto	u3975
 13748  03C5  3001               	movlw	1
 13749  03C6  02CC               	subwf	___ftadd@exp2,f
 13750  03C7  084C               	movf	___ftadd@exp2,w
 13751  03C8  064D               	xorwf	___ftadd@exp1,w
 13752  03C9  1903               	skipnz
 13753  03CA  2BDC               	goto	l4495
 13754  03CB  3001               	movlw	1
 13755  03CC  02CB               	subwf	___ftadd@sign,f
 13756  03CD  084B               	movf	___ftadd@sign,w
 13757  03CE  3907               	andlw	7
 13758  03CF  1903               	btfsc	3,2
 13759  03D0  2BDC               	goto	l4495
 13760  03D1  2BBF               	goto	l4487
 13761  03D2                     l4493:	
 13762  03D2  3001               	movlw	1
 13763  03D3                     u4005:	
 13764  03D3  36C3               	lsrf	___ftadd@f1+2,f
 13765  03D4  0CC2               	rrf	___ftadd@f1+1,f
 13766  03D5  0CC1               	rrf	___ftadd@f1,f
 13767  03D6  0B89               	decfsz	9,f
 13768  03D7  2BD3               	goto	u4005
 13769  03D8  3001               	movlw	1
 13770  03D9  00C7               	movwf	??___ftadd
 13771  03DA  0847               	movf	??___ftadd,w
 13772  03DB  07CD               	addwf	___ftadd@exp1,f
 13773  03DC                     l4495:	
 13774  03DC  084D               	movf	___ftadd@exp1,w
 13775  03DD  064C               	xorwf	___ftadd@exp2,w
 13776  03DE  1903               	btfsc	3,2
 13777  03DF  2C06               	goto	l2042
 13778  03E0  2BD2               	goto	l4493
 13779  03E1                     l4497:	
 13780  03E1  084D               	movf	___ftadd@exp1,w
 13781  03E2  024C               	subwf	___ftadd@exp2,w
 13782  03E3  1803               	skipnc
 13783  03E4  2C06               	goto	l2042
 13784  03E5                     l4499:	
 13785  03E5  3001               	movlw	1
 13786  03E6                     u4035:	
 13787  03E6  35C1               	lslf	___ftadd@f1,f
 13788  03E7  0DC2               	rlf	___ftadd@f1+1,f
 13789  03E8  0DC3               	rlf	___ftadd@f1+2,f
 13790  03E9  0B89               	decfsz	9,f
 13791  03EA  2BE6               	goto	u4035
 13792  03EB  3001               	movlw	1
 13793  03EC  02CD               	subwf	___ftadd@exp1,f
 13794  03ED  084C               	movf	___ftadd@exp2,w
 13795  03EE  064D               	xorwf	___ftadd@exp1,w
 13796  03EF  1903               	skipnz
 13797  03F0  2C02               	goto	l4507
 13798  03F1  3001               	movlw	1
 13799  03F2  02CB               	subwf	___ftadd@sign,f
 13800  03F3  084B               	movf	___ftadd@sign,w
 13801  03F4  3907               	andlw	7
 13802  03F5  1903               	btfsc	3,2
 13803  03F6  2C02               	goto	l4507
 13804  03F7  2BE5               	goto	l4499
 13805  03F8                     l4505:	
 13806  03F8  3001               	movlw	1
 13807  03F9                     u4065:	
 13808  03F9  36C6               	lsrf	___ftadd@f2+2,f
 13809  03FA  0CC5               	rrf	___ftadd@f2+1,f
 13810  03FB  0CC4               	rrf	___ftadd@f2,f
 13811  03FC  0B89               	decfsz	9,f
 13812  03FD  2BF9               	goto	u4065
 13813  03FE  3001               	movlw	1
 13814  03FF  00C7               	movwf	??___ftadd
 13815  0400  0847               	movf	??___ftadd,w
 13816  0401  07CC               	addwf	___ftadd@exp2,f
 13817  0402                     l4507:	
 13818  0402  084D               	movf	___ftadd@exp1,w
 13819  0403  064C               	xorwf	___ftadd@exp2,w
 13820  0404  1D03               	skipz
 13821  0405  2BF8               	goto	l4505
 13822  0406                     l2042:	
 13823  0406  1FCB               	btfss	___ftadd@sign,7
 13824  0407  2C18               	goto	l4511
 13825  0408  30FF               	movlw	255
 13826  0409  06C1               	xorwf	___ftadd@f1,f
 13827  040A  30FF               	movlw	255
 13828  040B  06C2               	xorwf	___ftadd@f1+1,f
 13829  040C  30FF               	movlw	255
 13830  040D  06C3               	xorwf	___ftadd@f1+2,f
 13831  040E  3001               	movlw	1
 13832  040F  07C1               	addwf	___ftadd@f1,f
 13833  0410  3000               	movlw	0
 13834  0411  1803               	skipnc
 13835  0412  3001               	movlw	1
 13836  0413  07C2               	addwf	___ftadd@f1+1,f
 13837  0414  3000               	movlw	0
 13838  0415  1803               	skipnc
 13839  0416  3001               	movlw	1
 13840  0417  07C3               	addwf	___ftadd@f1+2,f
 13841  0418                     l4511:	
 13842  0418  1F4B               	btfss	___ftadd@sign,6
 13843  0419  2C2A               	goto	l4515
 13844  041A  30FF               	movlw	255
 13845  041B  06C4               	xorwf	___ftadd@f2,f
 13846  041C  30FF               	movlw	255
 13847  041D  06C5               	xorwf	___ftadd@f2+1,f
 13848  041E  30FF               	movlw	255
 13849  041F  06C6               	xorwf	___ftadd@f2+2,f
 13850  0420  3001               	movlw	1
 13851  0421  07C4               	addwf	___ftadd@f2,f
 13852  0422  3000               	movlw	0
 13853  0423  1803               	skipnc
 13854  0424  3001               	movlw	1
 13855  0425  07C5               	addwf	___ftadd@f2+1,f
 13856  0426  3000               	movlw	0
 13857  0427  1803               	skipnc
 13858  0428  3001               	movlw	1
 13859  0429  07C6               	addwf	___ftadd@f2+2,f
 13860  042A                     l4515:	
 13861  042A  01CB               	clrf	___ftadd@sign
 13862  042B  0841               	movf	___ftadd@f1,w
 13863  042C  07C4               	addwf	___ftadd@f2,f
 13864  042D  0842               	movf	___ftadd@f1+1,w
 13865  042E  3DC5               	addwfc	___ftadd@f2+1,f
 13866  042F  0843               	movf	___ftadd@f1+2,w
 13867  0430  3DC6               	addwfc	___ftadd@f2+2,f
 13868  0431  1FC6               	btfss	___ftadd@f2+2,7
 13869  0432  2C45               	goto	l4525
 13870  0433  30FF               	movlw	255
 13871  0434  06C4               	xorwf	___ftadd@f2,f
 13872  0435  30FF               	movlw	255
 13873  0436  06C5               	xorwf	___ftadd@f2+1,f
 13874  0437  30FF               	movlw	255
 13875  0438  06C6               	xorwf	___ftadd@f2+2,f
 13876  0439  3001               	movlw	1
 13877  043A  07C4               	addwf	___ftadd@f2,f
 13878  043B  3000               	movlw	0
 13879  043C  1803               	skipnc
 13880  043D  3001               	movlw	1
 13881  043E  07C5               	addwf	___ftadd@f2+1,f
 13882  043F  3000               	movlw	0
 13883  0440  1803               	skipnc
 13884  0441  3001               	movlw	1
 13885  0442  07C6               	addwf	___ftadd@f2+2,f
 13886  0443  01CB               	clrf	___ftadd@sign
 13887  0444  0ACB               	incf	___ftadd@sign,f
 13888  0445                     l4525:	
 13889  0445  0844               	movf	___ftadd@f2,w
 13890  0446  00A0               	movwf	___ftpack@arg
 13891  0447  0845               	movf	___ftadd@f2+1,w
 13892  0448  00A1               	movwf	___ftpack@arg+1
 13893  0449  0846               	movf	___ftadd@f2+2,w
 13894  044A  00A2               	movwf	___ftpack@arg+2
 13895  044B  084D               	movf	___ftadd@exp1,w
 13896  044C  00C7               	movwf	??___ftadd
 13897  044D  0847               	movf	??___ftadd,w
 13898  044E  00A3               	movwf	___ftpack@exp
 13899  044F  084B               	movf	___ftadd@sign,w
 13900  0450  00C8               	movwf	??___ftadd+1
 13901  0451  0848               	movf	??___ftadd+1,w
 13902  0452  00A4               	movwf	___ftpack@sign
 13903  0453  318A  2287         	fcall	___ftpack
 13904  0455  0020               	movlb	0	; select bank0
 13905  0456  0820               	movf	?___ftpack,w
 13906  0457  00C1               	movwf	?___ftadd
 13907  0458  0821               	movf	?___ftpack+1,w
 13908  0459  00C2               	movwf	?___ftadd+1
 13909  045A  0822               	movf	?___ftpack+2,w
 13910  045B  00C3               	movwf	?___ftadd+2
 13911  045C  0008               	return
 13912  045D                     __end_of___ftadd:	
 13913                           
 13914                           	psect	text91
 13915  14F5                     __ptext91:	
 13916 ;; *************** function ___awtoft *****************
 13917 ;; Defined at:
 13918 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c"
 13919 ;; Parameters:    Size  Location     Type
 13920 ;;  c               2    8[BANK0 ] int 
 13921 ;; Auto vars:     Size  Location     Type
 13922 ;;  sign            1   13[BANK0 ] unsigned char 
 13923 ;; Return value:  Size  Location     Type
 13924 ;;                  3    8[BANK0 ] float 
 13925 ;; Registers used:
 13926 ;;		wreg, status,2, status,0, pclath, cstack
 13927 ;; Tracked objects:
 13928 ;;		On entry : 0/0
 13929 ;;		On exit  : 0/0
 13930 ;;		Unchanged: 0/0
 13931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13932 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13933 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13934 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13935 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13936 ;;Total ram usage:        6 bytes
 13937 ;; Hardware stack levels used:    1
 13938 ;; Hardware stack levels required when called:    6
 13939 ;; This function calls:
 13940 ;;		___ftpack
 13941 ;; This function is called by:
 13942 ;;		_getDimmerLights_PercentToValue
 13943 ;;		_getDimmerLights_ValueToPercent
 13944 ;; This function uses a non-reentrant model
 13945 ;;
 13946                           
 13947                           
 13948                           ;psect for function ___awtoft
 13949  14F5                     ___awtoft:	
 13950                           
 13951                           ;incstack = 0
 13952                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 13953  14F5  0020               	movlb	0	; select bank0
 13954  14F6  01AD               	clrf	___awtoft@sign
 13955  14F7  1FA9               	btfss	___awtoft@c+1,7
 13956  14F8  2D00               	goto	l4453
 13957  14F9  09A8               	comf	___awtoft@c,f
 13958  14FA  09A9               	comf	___awtoft@c+1,f
 13959  14FB  0AA8               	incf	___awtoft@c,f
 13960  14FC  1903               	skipnz
 13961  14FD  0AA9               	incf	___awtoft@c+1,f
 13962  14FE  01AD               	clrf	___awtoft@sign
 13963  14FF  0AAD               	incf	___awtoft@sign,f
 13964  1500                     l4453:	
 13965  1500  0828               	movf	___awtoft@c,w
 13966  1501  00A0               	movwf	___ftpack@arg
 13967  1502  0829               	movf	___awtoft@c+1,w
 13968  1503  00A1               	movwf	___ftpack@arg+1
 13969  1504  01A2               	clrf	___ftpack@arg+2
 13970  1505  308E               	movlw	142
 13971  1506  00AB               	movwf	??___awtoft
 13972  1507  082B               	movf	??___awtoft,w
 13973  1508  00A3               	movwf	___ftpack@exp
 13974  1509  082D               	movf	___awtoft@sign,w
 13975  150A  00AC               	movwf	??___awtoft+1
 13976  150B  082C               	movf	??___awtoft+1,w
 13977  150C  00A4               	movwf	___ftpack@sign
 13978  150D  318A  2287         	fcall	___ftpack
 13979  150F  0020               	movlb	0	; select bank0
 13980  1510  0820               	movf	?___ftpack,w
 13981  1511  00A8               	movwf	?___awtoft
 13982  1512  0821               	movf	?___ftpack+1,w
 13983  1513  00A9               	movwf	?___awtoft+1
 13984  1514  0822               	movf	?___ftpack+2,w
 13985  1515  00AA               	movwf	?___awtoft+2
 13986  1516  0008               	return
 13987  1517                     __end_of___awtoft:	
 13988                           
 13989                           	psect	text92
 13990  0A87                     __ptext92:	
 13991 ;; *************** function ___ftpack *****************
 13992 ;; Defined at:
 13993 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
 13994 ;; Parameters:    Size  Location     Type
 13995 ;;  arg             3    0[BANK0 ] unsigned um
 13996 ;;  exp             1    3[BANK0 ] unsigned char 
 13997 ;;  sign            1    4[BANK0 ] unsigned char 
 13998 ;; Auto vars:     Size  Location     Type
 13999 ;;		None
 14000 ;; Return value:  Size  Location     Type
 14001 ;;                  3    0[BANK0 ] float 
 14002 ;; Registers used:
 14003 ;;		wreg, status,2, status,0
 14004 ;; Tracked objects:
 14005 ;;		On entry : 0/0
 14006 ;;		On exit  : 0/0
 14007 ;;		Unchanged: 0/0
 14008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14009 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14011 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14012 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14013 ;;Total ram usage:        8 bytes
 14014 ;; Hardware stack levels used:    1
 14015 ;; Hardware stack levels required when called:    5
 14016 ;; This function calls:
 14017 ;;		Nothing
 14018 ;; This function is called by:
 14019 ;;		___awtoft
 14020 ;;		___ftadd
 14021 ;;		___ftdiv
 14022 ;;		___ftmul
 14023 ;; This function uses a non-reentrant model
 14024 ;;
 14025                           
 14026                           
 14027                           ;psect for function ___ftpack
 14028  0A87                     ___ftpack:	
 14029                           
 14030                           ;incstack = 0
 14031                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 14032  0A87  0020               	movlb	0	; select bank0
 14033  0A88  0823               	movf	___ftpack@exp,w
 14034  0A89  1903               	btfsc	3,2
 14035  0A8A  2A90               	goto	l4341
 14036  0A8B  0822               	movf	___ftpack@arg+2,w
 14037  0A8C  0421               	iorwf	___ftpack@arg+1,w
 14038  0A8D  0420               	iorwf	___ftpack@arg,w
 14039  0A8E  1D03               	skipz
 14040  0A8F  2AA1               	goto	l4347
 14041  0A90                     l4341:	
 14042  0A90  3000               	movlw	0
 14043  0A91  00A0               	movwf	?___ftpack
 14044  0A92  3000               	movlw	0
 14045  0A93  00A1               	movwf	?___ftpack+1
 14046  0A94  3000               	movlw	0
 14047  0A95  00A2               	movwf	?___ftpack+2
 14048  0A96  0008               	return
 14049  0A97                     l4345:	
 14050  0A97  3001               	movlw	1
 14051  0A98  00A5               	movwf	??___ftpack
 14052  0A99  0825               	movf	??___ftpack,w
 14053  0A9A  07A3               	addwf	___ftpack@exp,f
 14054  0A9B  3001               	movlw	1
 14055  0A9C                     u3625:	
 14056  0A9C  36A2               	lsrf	___ftpack@arg+2,f
 14057  0A9D  0CA1               	rrf	___ftpack@arg+1,f
 14058  0A9E  0CA0               	rrf	___ftpack@arg,f
 14059  0A9F  0B89               	decfsz	9,f
 14060  0AA0  2A9C               	goto	u3625
 14061  0AA1                     l4347:	
 14062  0AA1  30FE               	movlw	254
 14063  0AA2  0522               	andwf	___ftpack@arg+2,w
 14064  0AA3  1903               	btfsc	3,2
 14065  0AA4  2ABA               	goto	l2013
 14066  0AA5  2A97               	goto	l4345
 14067  0AA6                     l4349:	
 14068  0AA6  3001               	movlw	1
 14069  0AA7  00A5               	movwf	??___ftpack
 14070  0AA8  0825               	movf	??___ftpack,w
 14071  0AA9  07A3               	addwf	___ftpack@exp,f
 14072  0AAA  3001               	movlw	1
 14073  0AAB  07A0               	addwf	___ftpack@arg,f
 14074  0AAC  3000               	movlw	0
 14075  0AAD  1803               	skipnc
 14076  0AAE  3001               	movlw	1
 14077  0AAF  07A1               	addwf	___ftpack@arg+1,f
 14078  0AB0  3000               	movlw	0
 14079  0AB1  1803               	skipnc
 14080  0AB2  3001               	movlw	1
 14081  0AB3  07A2               	addwf	___ftpack@arg+2,f
 14082  0AB4  3001               	movlw	1
 14083  0AB5                     u3645:	
 14084  0AB5  36A2               	lsrf	___ftpack@arg+2,f
 14085  0AB6  0CA1               	rrf	___ftpack@arg+1,f
 14086  0AB7  0CA0               	rrf	___ftpack@arg,f
 14087  0AB8  0B89               	decfsz	9,f
 14088  0AB9  2AB5               	goto	u3645
 14089  0ABA                     l2013:	
 14090  0ABA  30FF               	movlw	255
 14091  0ABB  0522               	andwf	___ftpack@arg+2,w
 14092  0ABC  1903               	btfsc	3,2
 14093  0ABD  2AC7               	goto	l4357
 14094  0ABE  2AA6               	goto	l4349
 14095  0ABF                     l4355:	
 14096  0ABF  3001               	movlw	1
 14097  0AC0  02A3               	subwf	___ftpack@exp,f
 14098  0AC1  3001               	movlw	1
 14099  0AC2                     u3665:	
 14100  0AC2  35A0               	lslf	___ftpack@arg,f
 14101  0AC3  0DA1               	rlf	___ftpack@arg+1,f
 14102  0AC4  0DA2               	rlf	___ftpack@arg+2,f
 14103  0AC5  0B89               	decfsz	9,f
 14104  0AC6  2AC2               	goto	u3665
 14105  0AC7                     l4357:	
 14106  0AC7  1FA1               	btfss	___ftpack@arg+1,7
 14107  0AC8  2ABF               	goto	l4355
 14108  0AC9  1823               	btfsc	___ftpack@exp,0
 14109  0ACA  2AD1               	goto	l2019
 14110  0ACB  30FF               	movlw	255
 14111  0ACC  05A0               	andwf	___ftpack@arg,f
 14112  0ACD  307F               	movlw	127
 14113  0ACE  05A1               	andwf	___ftpack@arg+1,f
 14114  0ACF  30FF               	movlw	255
 14115  0AD0  05A2               	andwf	___ftpack@arg+2,f
 14116  0AD1                     l2019:	
 14117  0AD1  1003               	clrc
 14118  0AD2  0CA3               	rrf	___ftpack@exp,f
 14119  0AD3  0823               	movf	___ftpack@exp,w
 14120  0AD4  00A5               	movwf	??___ftpack
 14121  0AD5  01A6               	clrf	??___ftpack+1
 14122  0AD6  01A7               	clrf	??___ftpack+2
 14123  0AD7  3010               	movlw	16
 14124  0AD8                     u3695:	
 14125  0AD8  35A5               	lslf	??___ftpack,f
 14126  0AD9  0DA6               	rlf	??___ftpack+1,f
 14127  0ADA  0DA7               	rlf	??___ftpack+2,f
 14128  0ADB  0B89               	decfsz	9,f
 14129  0ADC  2AD8               	goto	u3695
 14130  0ADD  0825               	movf	??___ftpack,w
 14131  0ADE  04A0               	iorwf	___ftpack@arg,f
 14132  0ADF  0826               	movf	??___ftpack+1,w
 14133  0AE0  04A1               	iorwf	___ftpack@arg+1,f
 14134  0AE1  0827               	movf	??___ftpack+2,w
 14135  0AE2  04A2               	iorwf	___ftpack@arg+2,f
 14136  0AE3  0824               	movf	___ftpack@sign,w
 14137  0AE4  1903               	btfsc	3,2
 14138  0AE5  0008               	return
 14139  0AE6  17A2               	bsf	___ftpack@arg+2,7
 14140  0AE7  0008               	return
 14141  0AE8                     __end_of___ftpack:	
 14142                           
 14143                           	psect	text93
 14144  122A                     __ptext93:	
 14145 ;; *************** function _Division *****************
 14146 ;; Defined at:
 14147 ;;		line 1499 in file "../src/Dimmer_B1.c"
 14148 ;; Parameters:    Size  Location     Type
 14149 ;;  value           1    wreg     unsigned char 
 14150 ;;  num             1    5[BANK0 ] unsigned char 
 14151 ;; Auto vars:     Size  Location     Type
 14152 ;;  value           1    8[BANK0 ] unsigned char 
 14153 ;;  result          1    9[BANK0 ] unsigned char 
 14154 ;; Return value:  Size  Location     Type
 14155 ;;                  1    wreg      unsigned char 
 14156 ;; Registers used:
 14157 ;;		wreg, status,2, status,0, pclath, cstack
 14158 ;; Tracked objects:
 14159 ;;		On entry : 0/0
 14160 ;;		On exit  : 0/0
 14161 ;;		Unchanged: 0/0
 14162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14163 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14164 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14165 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14166 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14167 ;;Total ram usage:        5 bytes
 14168 ;; Hardware stack levels used:    1
 14169 ;; Hardware stack levels required when called:    6
 14170 ;; This function calls:
 14171 ;;		___lbdiv
 14172 ;; This function is called by:
 14173 ;;		_DimmerIntr_Initialization
 14174 ;; This function uses a non-reentrant model
 14175 ;;
 14176                           
 14177                           
 14178                           ;psect for function _Division
 14179  122A                     _Division:	
 14180                           
 14181                           ;incstack = 0
 14182                           ; Regs used in _Division: [wreg+status,2+status,0+pclath+cstack]
 14183                           ;Division@value stored from wreg
 14184  122A  0020               	movlb	0	; select bank0
 14185  122B  00A8               	movwf	Division@value
 14186                           
 14187                           ;Dimmer_B1.c: 1500: char result = (char) (value / num);
 14188  122C  0825               	movf	Division@num,w
 14189  122D  00A6               	movwf	??_Division
 14190  122E  0826               	movf	??_Division,w
 14191  122F  00A0               	movwf	___lbdiv@divisor
 14192  1230  0828               	movf	Division@value,w
 14193  1231  3194  24D3         	fcall	___lbdiv
 14194  1233  0020               	movlb	0	; select bank0
 14195  1234  00A7               	movwf	??_Division+1
 14196  1235  0827               	movf	??_Division+1,w
 14197  1236  00A9               	movwf	Division@result
 14198                           
 14199                           ;Dimmer_B1.c: 1501: return result;
 14200  1237  0829               	movf	Division@result,w
 14201  1238  0008               	return
 14202  1239                     __end_of_Division:	
 14203                           
 14204                           	psect	text94
 14205  14D3                     __ptext94:	
 14206 ;; *************** function ___lbdiv *****************
 14207 ;; Defined at:
 14208 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lbdiv.c"
 14209 ;; Parameters:    Size  Location     Type
 14210 ;;  dividend        1    wreg     unsigned char 
 14211 ;;  divisor         1    0[BANK0 ] unsigned char 
 14212 ;; Auto vars:     Size  Location     Type
 14213 ;;  dividend        1    2[BANK0 ] unsigned char 
 14214 ;;  quotient        1    4[BANK0 ] unsigned char 
 14215 ;;  counter         1    3[BANK0 ] unsigned char 
 14216 ;; Return value:  Size  Location     Type
 14217 ;;                  1    wreg      unsigned char 
 14218 ;; Registers used:
 14219 ;;		wreg, status,2, status,0
 14220 ;; Tracked objects:
 14221 ;;		On entry : 0/0
 14222 ;;		On exit  : 0/0
 14223 ;;		Unchanged: 0/0
 14224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14225 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14226 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14227 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14228 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14229 ;;Total ram usage:        5 bytes
 14230 ;; Hardware stack levels used:    1
 14231 ;; Hardware stack levels required when called:    5
 14232 ;; This function calls:
 14233 ;;		Nothing
 14234 ;; This function is called by:
 14235 ;;		_Division
 14236 ;; This function uses a non-reentrant model
 14237 ;;
 14238                           
 14239                           
 14240                           ;psect for function ___lbdiv
 14241  14D3                     ___lbdiv:	
 14242                           
 14243                           ;incstack = 0
 14244                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
 14245                           ;___lbdiv@dividend stored from wreg
 14246  14D3  0020               	movlb	0	; select bank0
 14247  14D4  00A2               	movwf	___lbdiv@dividend
 14248  14D5  01A4               	clrf	___lbdiv@quotient
 14249  14D6  0820               	movf	___lbdiv@divisor,w
 14250  14D7  1903               	btfsc	3,2
 14251  14D8  2CF3               	goto	l4907
 14252  14D9  01A3               	clrf	___lbdiv@counter
 14253  14DA  0AA3               	incf	___lbdiv@counter,f
 14254  14DB                     l4895:	
 14255  14DB  1BA0               	btfsc	___lbdiv@divisor,7
 14256  14DC  2CE4               	goto	l4897
 14257  14DD  1003               	clrc
 14258  14DE  0DA0               	rlf	___lbdiv@divisor,f
 14259  14DF  3001               	movlw	1
 14260  14E0  00A1               	movwf	??___lbdiv
 14261  14E1  0821               	movf	??___lbdiv,w
 14262  14E2  07A3               	addwf	___lbdiv@counter,f
 14263  14E3  2CDB               	goto	l4895
 14264  14E4                     l4897:	
 14265  14E4  1003               	clrc
 14266  14E5  0DA4               	rlf	___lbdiv@quotient,f
 14267  14E6  0820               	movf	___lbdiv@divisor,w
 14268  14E7  0222               	subwf	___lbdiv@dividend,w
 14269  14E8  1C03               	skipc
 14270  14E9  2CEE               	goto	L6
 14271  14EA  0820               	movf	___lbdiv@divisor,w
 14272  14EB  02A2               	subwf	___lbdiv@dividend,f
 14273  14EC  1424               	bsf	___lbdiv@quotient,0
 14274  14ED  1003               	clrc
 14275  14EE                     L6:	
 14276  14EE  0CA0               	rrf	___lbdiv@divisor,f
 14277  14EF  3001               	movlw	1
 14278  14F0  02A3               	subwf	___lbdiv@counter,f
 14279  14F1  1D03               	btfss	3,2
 14280  14F2  2CE4               	goto	l4897
 14281  14F3                     l4907:	
 14282  14F3  0824               	movf	___lbdiv@quotient,w
 14283  14F4  0008               	return
 14284  14F5                     __end_of___lbdiv:	
 14285                           
 14286                           	psect	text95
 14287  10EB                     __ptext95:	
 14288 ;; *************** function _DelayOff_Main *****************
 14289 ;; Defined at:
 14290 ;;		line 41 in file "../src/DelayOff_B1.c"
 14291 ;; Parameters:    Size  Location     Type
 14292 ;;		None
 14293 ;; Auto vars:     Size  Location     Type
 14294 ;;		None
 14295 ;; Return value:  Size  Location     Type
 14296 ;;		None               void
 14297 ;; Registers used:
 14298 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14299 ;; Tracked objects:
 14300 ;;		On entry : 0/0
 14301 ;;		On exit  : 0/0
 14302 ;;		Unchanged: 0/0
 14303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14308 ;;Total ram usage:        0 bytes
 14309 ;; Hardware stack levels used:    1
 14310 ;; Hardware stack levels required when called:    9
 14311 ;; This function calls:
 14312 ;;		_DlyOff_Main
 14313 ;; This function is called by:
 14314 ;;		_main
 14315 ;; This function uses a non-reentrant model
 14316 ;;
 14317                           
 14318                           
 14319                           ;psect for function _DelayOff_Main
 14320  10EB                     _DelayOff_Main:	
 14321                           
 14322                           ;DelayOff_B1.c: 43: DlyOff_Main(1);
 14323                           
 14324                           ;incstack = 0
 14325                           ; Regs used in _DelayOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14326  10EB  3001               	movlw	1
 14327  10EC  318C  241A         	fcall	_DlyOff_Main
 14328  10EE  0008               	return
 14329  10EF                     __end_of_DelayOff_Main:	
 14330                           
 14331                           	psect	text96
 14332  0C1A                     __ptext96:	
 14333 ;; *************** function _DlyOff_Main *****************
 14334 ;; Defined at:
 14335 ;;		line 61 in file "../src/DelayOff_B1.c"
 14336 ;; Parameters:    Size  Location     Type
 14337 ;;  sw              1    wreg     unsigned char 
 14338 ;; Auto vars:     Size  Location     Type
 14339 ;;  sw              1   71[BANK0 ] unsigned char 
 14340 ;; Return value:  Size  Location     Type
 14341 ;;		None               void
 14342 ;; Registers used:
 14343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14344 ;; Tracked objects:
 14345 ;;		On entry : 0/0
 14346 ;;		On exit  : 0/0
 14347 ;;		Unchanged: 0/0
 14348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14350 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14351 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14352 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14353 ;;Total ram usage:        3 bytes
 14354 ;; Hardware stack levels used:    1
 14355 ;; Hardware stack levels required when called:    8
 14356 ;; This function calls:
 14357 ;;		_DelayOffPointSelect
 14358 ;;		_getDimmerLights_Status
 14359 ;;		_setDimmerLights_SwOff
 14360 ;;		_setDimmerLights_SwOn
 14361 ;;		_setProductData
 14362 ;; This function is called by:
 14363 ;;		_DelayOff_Main
 14364 ;; This function uses a non-reentrant model
 14365 ;;
 14366                           
 14367                           
 14368                           ;psect for function _DlyOff_Main
 14369  0C1A                     _DlyOff_Main:	
 14370                           
 14371                           ;incstack = 0
 14372                           ; Regs used in _DlyOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14373                           ;DlyOff_Main@sw stored from wreg
 14374  0C1A  0020               	movlb	0	; select bank0
 14375  0C1B  00E7               	movwf	DlyOff_Main@sw
 14376                           
 14377                           ;DelayOff_B1.c: 63: DelayOffPointSelect(sw);
 14378  0C1C  0867               	movf	DlyOff_Main@sw,w
 14379  0C1D  3191  21AF  318C   	fcall	_DelayOffPointSelect
 14380                           
 14381                           ;DelayOff_B1.c: 64: if (DelayOff->GO == 1) {
 14382  0C20  0021               	movlb	1	; select bank1
 14383  0C21  0850               	movf	_DelayOff^(0+128),w
 14384  0C22  0086               	movwf	6
 14385  0C23  3001               	movlw	1	; select bank2/3
 14386  0C24  0087               	movwf	7
 14387  0C25  1C81               	btfss	1,1
 14388  0C26  0008               	return
 14389                           
 14390                           ;DelayOff_B1.c: 65: DelayOff->SecondTime++;
 14391  0C27  0850               	movf	_DelayOff^(0+128),w
 14392  0C28  3E02               	addlw	2
 14393  0C29  0086               	movwf	6
 14394  0C2A  3001               	movlw	1	; select bank2/3
 14395  0C2B  0087               	movwf	7
 14396  0C2C  3001               	movlw	1
 14397  0C2D  0781               	addwf	1,f
 14398  0C2E  3141               	addfsr 1,1
 14399  0C2F  1803               	skipnc
 14400  0C30  0A81               	incf	1,f
 14401                           
 14402                           ;DelayOff_B1.c: 66: if (DelayOff->SecondTime >= 60000/20) {
 14403  0C31  0850               	movf	_DelayOff^(0+128),w
 14404  0C32  3E02               	addlw	2
 14405  0C33  0086               	movwf	6
 14406  0C34  3001               	movlw	1	; select bank2/3
 14407  0C35  0087               	movwf	7
 14408  0C36  3F40               	moviw [0]fsr1
 14409  0C37  0020               	movlb	0	; select bank0
 14410  0C38  00E5               	movwf	??_DlyOff_Main
 14411  0C39  3F41               	moviw [1]fsr1
 14412  0C3A  00E6               	movwf	??_DlyOff_Main+1
 14413  0C3B  300B               	movlw	11
 14414  0C3C  0266               	subwf	??_DlyOff_Main+1,w
 14415  0C3D  30B8               	movlw	184
 14416  0C3E  1903               	skipnz
 14417  0C3F  0265               	subwf	??_DlyOff_Main,w
 14418  0C40  1C03               	skipc
 14419  0C41  0008               	return
 14420                           
 14421                           ;DelayOff_B1.c: 67: DelayOff->SecondTime = 0;
 14422  0C42  0021               	movlb	1	; select bank1
 14423  0C43  0850               	movf	_DelayOff^(0+128),w
 14424  0C44  3E02               	addlw	2
 14425  0C45  0086               	movwf	6
 14426  0C46  3001               	movlw	1	; select bank2/3
 14427  0C47  0087               	movwf	7
 14428  0C48  3000               	movlw	0
 14429  0C49  3FC0               	movwi [0]fsr1
 14430  0C4A  3FC1               	movwi [1]fsr1
 14431                           
 14432                           ;DelayOff_B1.c: 68: DelayOff->MinuteTime++;
 14433  0C4B  3001               	movlw	1
 14434  0C4C  0020               	movlb	0	; select bank0
 14435  0C4D  00E5               	movwf	??_DlyOff_Main
 14436  0C4E  0021               	movlb	1	; select bank1
 14437  0C4F  0850               	movf	_DelayOff^(0+128),w
 14438  0C50  3E04               	addlw	4
 14439  0C51  0086               	movwf	6
 14440  0C52  3001               	movlw	1	; select bank2/3
 14441  0C53  0087               	movwf	7
 14442  0C54  0020               	movlb	0	; select bank0
 14443  0C55  0865               	movf	??_DlyOff_Main,w
 14444  0C56  0781               	addwf	1,f
 14445                           
 14446                           ;DelayOff_B1.c: 69: if (DelayOff->MinuteTime >= DelayOff->Value) {
 14447  0C57  0021               	movlb	1	; select bank1
 14448  0C58  0850               	movf	_DelayOff^(0+128),w
 14449  0C59  3E04               	addlw	4
 14450  0C5A  0086               	movwf	6
 14451  0C5B  3001               	movlw	1	; select bank2/3
 14452  0C5C  0087               	movwf	7
 14453  0C5D  0A50               	incf	_DelayOff^(0+128),w
 14454  0C5E  0084               	movwf	4
 14455  0C5F  3001               	movlw	1	; select bank2/3
 14456  0C60  0085               	movwf	5
 14457  0C61  0800               	movf	0,w
 14458  0C62  0201               	subwf	1,w
 14459  0C63  1C03               	skipc
 14460  0C64  0008               	return
 14461                           
 14462                           ;DelayOff_B1.c: 70: DelayOff->MinuteTime = 0;
 14463  0C65  0850               	movf	_DelayOff^(0+128),w
 14464  0C66  3E04               	addlw	4
 14465  0C67  0086               	movwf	6
 14466  0C68  3001               	movlw	1	; select bank2/3
 14467  0C69  0087               	movwf	7
 14468  0C6A  0181               	clrf	1
 14469                           
 14470                           ;DelayOff_B1.c: 71: DelayOff->GO = 0;
 14471  0C6B  0850               	movf	_DelayOff^(0+128),w
 14472  0C6C  0086               	movwf	6
 14473  0C6D  3001               	movlw	1	; select bank2/3
 14474  0C6E  0087               	movwf	7
 14475  0C6F  1081               	bcf	1,1
 14476                           
 14477                           ;DelayOff_B1.c: 75: if (getDimmerLights_Status(sw) == 1) {
 14478  0C70  0020               	movlb	0	; select bank0
 14479  0C71  0867               	movf	DlyOff_Main@sw,w
 14480  0C72  3192  2248  318C   	fcall	_getDimmerLights_Status
 14481  0C75  3A01               	xorlw	1
 14482  0C76  1D03               	skipz
 14483  0C77  2C82               	goto	l248
 14484                           
 14485                           ;DelayOff_B1.c: 76: setDimmerLights_SwOn(sw);
 14486  0C78  0020               	movlb	0	; select bank0
 14487  0C79  0867               	movf	DlyOff_Main@sw,w
 14488  0C7A  3188  208A  318C   	fcall	_setDimmerLights_SwOn
 14489                           
 14490                           ;DelayOff_B1.c: 77: setDimmerLights_SwOff(sw);
 14491  0C7D  0020               	movlb	0	; select bank0
 14492  0C7E  0867               	movf	DlyOff_Main@sw,w
 14493  0C7F  3196  26BE  318C   	fcall	_setDimmerLights_SwOff
 14494  0C82                     l248:	
 14495                           
 14496                           ;DelayOff_B1.c: 78: }
 14497                           ;DelayOff_B1.c: 80: setProductData(26 + sw, 0);
 14498  0C82  0020               	movlb	0	; select bank0
 14499  0C83  01E2               	clrf	setProductData@value
 14500  0C84  0867               	movf	DlyOff_Main@sw,w
 14501  0C85  3E1A               	addlw	26
 14502  0C86  3191  21BB         	fcall	_setProductData
 14503  0C88  0008               	return
 14504  0C89                     __end_of_DlyOff_Main:	
 14505                           
 14506                           	psect	text97
 14507  11BB                     __ptext97:	
 14508 ;; *************** function _setProductData *****************
 14509 ;; Defined at:
 14510 ;;		line 645 in file "../src/Main_B1.c"
 14511 ;; Parameters:    Size  Location     Type
 14512 ;;  address         1    wreg     unsigned char 
 14513 ;;  value           1   66[BANK0 ] unsigned char 
 14514 ;; Auto vars:     Size  Location     Type
 14515 ;;  address         1   68[BANK0 ] unsigned char 
 14516 ;; Return value:  Size  Location     Type
 14517 ;;		None               void
 14518 ;; Registers used:
 14519 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14520 ;; Tracked objects:
 14521 ;;		On entry : 0/0
 14522 ;;		On exit  : 0/0
 14523 ;;		Unchanged: 0/0
 14524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14525 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14526 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14527 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14528 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14529 ;;Total ram usage:        3 bytes
 14530 ;; Hardware stack levels used:    1
 14531 ;; Hardware stack levels required when called:    5
 14532 ;; This function calls:
 14533 ;;		Nothing
 14534 ;; This function is called by:
 14535 ;;		_DlyOff_Main
 14536 ;;		_setDelayOff_GO
 14537 ;;		_setDimmerLights_OnOff
 14538 ;;		_setDimmerLights_Dimming
 14539 ;;		_setTemp_Main
 14540 ;; This function uses a non-reentrant model
 14541 ;;
 14542                           
 14543                           
 14544                           ;psect for function _setProductData
 14545  11BB                     _setProductData:	
 14546                           
 14547                           ;incstack = 0
 14548                           ; Regs used in _setProductData: [wreg+fsr1l+fsr1h+status,2+status,0]
 14549                           ;setProductData@address stored from wreg
 14550  11BB  0020               	movlb	0	; select bank0
 14551  11BC  00E4               	movwf	setProductData@address
 14552                           
 14553                           ;Main_B1.c: 646: _product.Data[address] = value;
 14554  11BD  0862               	movf	setProductData@value,w
 14555  11BE  00E3               	movwf	??_setProductData
 14556  11BF  0864               	movf	setProductData@address,w
 14557  11C0  3EC5               	addlw	__product& (0+255)
 14558  11C1  0086               	movwf	6
 14559  11C2  3001               	movlw	1	; select bank3/4
 14560  11C3  0087               	movwf	7
 14561  11C4  0863               	movf	??_setProductData,w
 14562  11C5  0081               	movwf	1
 14563  11C6  0008               	return
 14564  11C7                     __end_of_setProductData:	
 14565                           
 14566                           	psect	text98
 14567  088A                     __ptext98:	
 14568 ;; *************** function _setDimmerLights_SwOn *****************
 14569 ;; Defined at:
 14570 ;;		line 729 in file "../src/Dimmer_B1.c"
 14571 ;; Parameters:    Size  Location     Type
 14572 ;;  sw              1    wreg     unsigned char 
 14573 ;; Auto vars:     Size  Location     Type
 14574 ;;  sw              1   16[BANK0 ] unsigned char 
 14575 ;;  dimmingStatu    1   15[BANK0 ] unsigned char 
 14576 ;;  idle            1   14[BANK0 ] unsigned char 
 14577 ;; Return value:  Size  Location     Type
 14578 ;;		None               void
 14579 ;; Registers used:
 14580 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14581 ;; Tracked objects:
 14582 ;;		On entry : 0/0
 14583 ;;		On exit  : 0/0
 14584 ;;		Unchanged: 0/0
 14585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14587 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14588 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14589 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14590 ;;Total ram usage:        4 bytes
 14591 ;; Hardware stack levels used:    1
 14592 ;; Hardware stack levels required when called:    7
 14593 ;; This function calls:
 14594 ;;		_DimmerLights_SelectPointer
 14595 ;;		_getDimmerIntr_Dimming_Sw
 14596 ;;		_setBuz
 14597 ;; This function is called by:
 14598 ;;		_DlyOff_Main
 14599 ;;		_setSw_Main
 14600 ;; This function uses a non-reentrant model
 14601 ;;
 14602                           
 14603                           
 14604                           ;psect for function _setDimmerLights_SwOn
 14605  088A                     _setDimmerLights_SwOn:	
 14606                           
 14607                           ;incstack = 0
 14608                           ; Regs used in _setDimmerLights_SwOn: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14609                           ;setDimmerLights_SwOn@sw stored from wreg
 14610  088A  0020               	movlb	0	; select bank0
 14611  088B  00B0               	movwf	setDimmerLights_SwOn@sw
 14612                           
 14613                           ;Dimmer_B1.c: 730: char idle = 0;
 14614  088C  01AE               	clrf	setDimmerLights_SwOn@idle
 14615                           
 14616                           ;Dimmer_B1.c: 732: char dimmingStatus = 0;
 14617  088D  01AF               	clrf	setDimmerLights_SwOn@dimmingStatus
 14618                           
 14619                           ;Dimmer_B1.c: 733: dimmingStatus = getDimmerIntr_Dimming_Sw(sw);
 14620  088E  0830               	movf	setDimmerLights_SwOn@sw,w
 14621  088F  3192  221B  3188   	fcall	_getDimmerIntr_Dimming_Sw
 14622  0892  0020               	movlb	0	; select bank0
 14623  0893  00AD               	movwf	??_setDimmerLights_SwOn
 14624  0894  082D               	movf	??_setDimmerLights_SwOn,w
 14625  0895  00AF               	movwf	setDimmerLights_SwOn@dimmingStatus
 14626                           
 14627                           ;Dimmer_B1.c: 760: DimmerLights_SelectPointer(sw);
 14628  0896  0830               	movf	setDimmerLights_SwOn@sw,w
 14629  0897  3191  2178  3188   	fcall	_DimmerLights_SelectPointer
 14630                           
 14631                           ;Dimmer_B1.c: 761: if (idle == 0) {
 14632  089A  0020               	movlb	0	; select bank0
 14633  089B  08AE               	movf	setDimmerLights_SwOn@idle,f
 14634  089C  1D03               	skipz
 14635  089D  0008               	return
 14636                           
 14637                           ;Dimmer_B1.c: 763: if (dimmingStatus == 0) {
 14638  089E  08AF               	movf	setDimmerLights_SwOn@dimmingStatus,f
 14639  089F  1D03               	skipz
 14640  08A0  28C4               	goto	l4951
 14641                           
 14642                           ;Dimmer_B1.c: 764: DimmerLights->SwFlag = 1;
 14643  08A1  087D               	movf	_DimmerLights,w
 14644  08A2  0086               	movwf	6
 14645  08A3  3001               	movlw	1	; select bank2/3
 14646  08A4  0087               	movwf	7
 14647  08A5  1401               	bsf	1,0
 14648                           
 14649                           ;Dimmer_B1.c: 765: if (DimmerLights->Status == 0) {
 14650  08A6  0A7D               	incf	_DimmerLights,w
 14651  08A7  0086               	movwf	6
 14652  08A8  3001               	movlw	1	; select bank2/3
 14653  08A9  0087               	movwf	7
 14654  08AA  1801               	btfsc	1,0
 14655  08AB  28BE               	goto	l4949
 14656                           
 14657                           ;Dimmer_B1.c: 766: DimmerLights->Status = 1;
 14658  08AC  0A7D               	incf	_DimmerLights,w
 14659  08AD  0086               	movwf	6
 14660  08AE  3001               	movlw	1	; select bank2/3
 14661  08AF  0087               	movwf	7
 14662  08B0  1401               	bsf	1,0
 14663                           
 14664                           ;Dimmer_B1.c: 772: DimmerLights->Phase = 1;
 14665  08B1  087D               	movf	_DimmerLights,w
 14666  08B2  3E02               	addlw	2
 14667  08B3  0086               	movwf	6
 14668  08B4  3001               	movlw	1	; select bank2/3
 14669  08B5  0087               	movwf	7
 14670  08B6  1401               	bsf	1,0
 14671                           
 14672                           ;Dimmer_B1.c: 773: DimmerLights->PhaseSwitch = 1;
 14673  08B7  087D               	movf	_DimmerLights,w
 14674  08B8  3E02               	addlw	2
 14675  08B9  0086               	movwf	6
 14676  08BA  3001               	movlw	1	; select bank2/3
 14677  08BB  0087               	movwf	7
 14678  08BC  1501               	bsf	1,2
 14679                           
 14680                           ;Dimmer_B1.c: 777: } else {
 14681  08BD  28CE               	goto	l4953
 14682  08BE                     l4949:	
 14683                           
 14684                           ;Dimmer_B1.c: 778: DimmerLights->Status = 0;
 14685  08BE  0A7D               	incf	_DimmerLights,w
 14686  08BF  0086               	movwf	6
 14687  08C0  3001               	movlw	1	; select bank2/3
 14688  08C1  0087               	movwf	7
 14689  08C2  1001               	bcf	1,0
 14690                           
 14691                           ;Dimmer_B1.c: 779: }
 14692                           ;Dimmer_B1.c: 780: } else {
 14693  08C3  28CE               	goto	l4953
 14694  08C4                     l4951:	
 14695                           
 14696                           ;Dimmer_B1.c: 781: DimmerLights->DimmingTrigger = 1;
 14697  08C4  087D               	movf	_DimmerLights,w
 14698  08C5  0086               	movwf	6
 14699  08C6  3001               	movlw	1	; select bank2/3
 14700  08C7  0087               	movwf	7
 14701  08C8  1601               	bsf	1,4
 14702                           
 14703                           ;Dimmer_B1.c: 782: DimmerLights->DimmingSwitch = 0;
 14704  08C9  087D               	movf	_DimmerLights,w
 14705  08CA  0086               	movwf	6
 14706  08CB  3001               	movlw	1	; select bank2/3
 14707  08CC  0087               	movwf	7
 14708  08CD  1281               	bcf	1,5
 14709  08CE                     l4953:	
 14710                           
 14711                           ;Dimmer_B1.c: 783: }
 14712                           ;Dimmer_B1.c: 784: setBuz(1, 100);
 14713  08CE  3064               	movlw	100
 14714  08CF  00A9               	movwf	setBuz@time
 14715  08D0  3000               	movlw	0
 14716  08D1  00AA               	movwf	setBuz@time+1
 14717  08D2  3001               	movlw	1
 14718  08D3  3189  21D0         	fcall	_setBuz
 14719  08D5  0008               	return
 14720  08D6                     __end_of_setDimmerLights_SwOn:	
 14721                           
 14722                           	psect	text99
 14723  09D0                     __ptext99:	
 14724 ;; *************** function _setBuz *****************
 14725 ;; Defined at:
 14726 ;;		line 22 in file "../src/Buzzer_B1.c"
 14727 ;; Parameters:    Size  Location     Type
 14728 ;;  count           1    wreg     unsigned char 
 14729 ;;  time            2    9[BANK0 ] int 
 14730 ;; Auto vars:     Size  Location     Type
 14731 ;;  count           1   12[BANK0 ] unsigned char 
 14732 ;; Return value:  Size  Location     Type
 14733 ;;		None               void
 14734 ;; Registers used:
 14735 ;;		wreg, status,2, status,0, pclath, cstack
 14736 ;; Tracked objects:
 14737 ;;		On entry : 0/0
 14738 ;;		On exit  : 0/0
 14739 ;;		Unchanged: 0/0
 14740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14741 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14742 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14743 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14744 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14745 ;;Total ram usage:        4 bytes
 14746 ;; Hardware stack levels used:    1
 14747 ;; Hardware stack levels required when called:    6
 14748 ;; This function calls:
 14749 ;;		___awdiv
 14750 ;; This function is called by:
 14751 ;;		_setDimmerLights_SwOn
 14752 ;;		_setDimmerLights_Dimming
 14753 ;;		_my_MainTimer
 14754 ;;		_Exception_Main
 14755 ;;		_setTemp_Main
 14756 ;; This function uses a non-reentrant model
 14757 ;;
 14758                           
 14759                           
 14760                           ;psect for function _setBuz
 14761  09D0                     _setBuz:	
 14762                           
 14763                           ;incstack = 0
 14764                           ; Regs used in _setBuz: [wreg+status,2+status,0+pclath+cstack]
 14765                           ;setBuz@count stored from wreg
 14766  09D0  0020               	movlb	0	; select bank0
 14767  09D1  00AC               	movwf	setBuz@count
 14768                           
 14769                           ;Buzzer_B1.c: 23: time /= 20;
 14770  09D2  3014               	movlw	20
 14771  09D3  00A0               	movwf	___awdiv@divisor
 14772  09D4  3000               	movlw	0
 14773  09D5  00A1               	movwf	___awdiv@divisor+1
 14774  09D6  082A               	movf	setBuz@time+1,w
 14775  09D7  01A3               	clrf	___awdiv@dividend+1
 14776  09D8  07A3               	addwf	___awdiv@dividend+1,f
 14777  09D9  0829               	movf	setBuz@time,w
 14778  09DA  01A2               	clrf	___awdiv@dividend
 14779  09DB  07A2               	addwf	___awdiv@dividend,f
 14780  09DC  3189  2128  3189   	fcall	___awdiv
 14781  09DF  0020               	movlb	0	; select bank0
 14782  09E0  0821               	movf	?___awdiv+1,w
 14783  09E1  01AA               	clrf	setBuz@time+1
 14784  09E2  07AA               	addwf	setBuz@time+1,f
 14785  09E3  0820               	movf	?___awdiv,w
 14786  09E4  01A9               	clrf	setBuz@time
 14787  09E5  07A9               	addwf	setBuz@time,f
 14788                           
 14789                           ;Buzzer_B1.c: 24: if (Buz1.Enable == 1) {
 14790  09E6  0021               	movlb	1	; select bank1
 14791  09E7  1C2D               	btfss	_Buz1^(0+128),0
 14792  09E8  0008               	return
 14793                           
 14794                           ;Buzzer_B1.c: 25: if (Buz1.GO == 0) {
 14795  09E9  18AD               	btfsc	_Buz1^(0+128),1
 14796  09EA  2A01               	goto	l58
 14797                           
 14798                           ;Buzzer_B1.c: 26: Buz1.GO = 1;
 14799  09EB  14AD               	bsf	_Buz1^(0+128),1
 14800                           
 14801                           ;Buzzer_B1.c: 27: Buz1.Counter = 0;
 14802  09EC  01AE               	clrf	(_Buz1^(0+128)+1)
 14803  09ED  01AF               	clrf	((_Buz1+1)^(0+128)+1)
 14804                           
 14805                           ;Buzzer_B1.c: 28: Buz1.Count = count;
 14806  09EE  0020               	movlb	0	; select bank0
 14807  09EF  082C               	movf	setBuz@count,w
 14808  09F0  00AB               	movwf	??_setBuz
 14809  09F1  082B               	movf	??_setBuz,w
 14810  09F2  0021               	movlb	1	; select bank1
 14811  09F3  00B0               	movwf	(_Buz1^(0+128)+3)
 14812                           
 14813                           ;Buzzer_B1.c: 29: Buz1.TimeValue = time;
 14814  09F4  0020               	movlb	0	; select bank0
 14815  09F5  082A               	movf	setBuz@time+1,w
 14816  09F6  0021               	movlb	1	; select bank1
 14817  09F7  01B4               	clrf	((_Buz1+1)^(0+128)+6)
 14818  09F8  07B4               	addwf	((_Buz1+1)^(0+128)+6),f
 14819  09F9  0020               	movlb	0	; select bank0
 14820  09FA  0829               	movf	setBuz@time,w
 14821  09FB  0021               	movlb	1	; select bank1
 14822  09FC  01B3               	clrf	(_Buz1^(0+128)+6)
 14823  09FD  07B3               	addwf	(_Buz1^(0+128)+6),f
 14824                           
 14825                           ;Buzzer_B1.c: 30: RB3 = 1;
 14826  09FE  0020               	movlb	0	; select bank0
 14827  09FF  158D               	bsf	13,3	;volatile
 14828                           
 14829                           ;Buzzer_B1.c: 31: } else {
 14830  0A00  0008               	return
 14831  0A01                     l58:	
 14832                           
 14833                           ;Buzzer_B1.c: 32: if (Buz1.BufferStatus1 == 0) {
 14834  0A01  19AD               	btfsc	_Buz1^(0+128),3
 14835  0A02  2A15               	goto	l60
 14836                           
 14837                           ;Buzzer_B1.c: 33: Buz1.BufferStatus1 = 1;
 14838  0A03  15AD               	bsf	_Buz1^(0+128),3
 14839                           
 14840                           ;Buzzer_B1.c: 34: Buz1.CountBuffer1 = count;
 14841  0A04  0020               	movlb	0	; select bank0
 14842  0A05  082C               	movf	setBuz@count,w
 14843  0A06  00AB               	movwf	??_setBuz
 14844  0A07  082B               	movf	??_setBuz,w
 14845  0A08  0021               	movlb	1	; select bank1
 14846  0A09  00B1               	movwf	(_Buz1^(0+128)+4)
 14847                           
 14848                           ;Buzzer_B1.c: 35: Buz1.TimeValueBuffer1 = time;
 14849  0A0A  0020               	movlb	0	; select bank0
 14850  0A0B  082A               	movf	setBuz@time+1,w
 14851  0A0C  0021               	movlb	1	; select bank1
 14852  0A0D  01B6               	clrf	((_Buz1+1)^(0+128)+8)
 14853  0A0E  07B6               	addwf	((_Buz1+1)^(0+128)+8),f
 14854  0A0F  0020               	movlb	0	; select bank0
 14855  0A10  0829               	movf	setBuz@time,w
 14856  0A11  0021               	movlb	1	; select bank1
 14857  0A12  01B5               	clrf	(_Buz1^(0+128)+8)
 14858  0A13  07B5               	addwf	(_Buz1^(0+128)+8),f
 14859                           
 14860                           ;Buzzer_B1.c: 36: } else if (Buz1.BufferStatus2 == 0) {
 14861  0A14  0008               	return
 14862  0A15                     l60:	
 14863  0A15  1A2D               	btfsc	_Buz1^(0+128),4
 14864  0A16  0008               	return
 14865                           
 14866                           ;Buzzer_B1.c: 37: Buz1.BufferStatus2 = 1;
 14867  0A17  162D               	bsf	_Buz1^(0+128),4
 14868                           
 14869                           ;Buzzer_B1.c: 38: Buz1.CountBuffer2 = count;
 14870  0A18  0020               	movlb	0	; select bank0
 14871  0A19  082C               	movf	setBuz@count,w
 14872  0A1A  00AB               	movwf	??_setBuz
 14873  0A1B  082B               	movf	??_setBuz,w
 14874  0A1C  0021               	movlb	1	; select bank1
 14875  0A1D  00B2               	movwf	(_Buz1^(0+128)+5)
 14876                           
 14877                           ;Buzzer_B1.c: 39: Buz1.TimeValueBuffer2 = time;
 14878  0A1E  0020               	movlb	0	; select bank0
 14879  0A1F  082A               	movf	setBuz@time+1,w
 14880  0A20  0021               	movlb	1	; select bank1
 14881  0A21  01B8               	clrf	((_Buz1+1)^(0+128)+10)
 14882  0A22  07B8               	addwf	((_Buz1+1)^(0+128)+10),f
 14883  0A23  0020               	movlb	0	; select bank0
 14884  0A24  0829               	movf	setBuz@time,w
 14885  0A25  0021               	movlb	1	; select bank1
 14886  0A26  01B7               	clrf	(_Buz1^(0+128)+10)
 14887  0A27  07B7               	addwf	(_Buz1^(0+128)+10),f
 14888  0A28  0008               	return
 14889  0A29                     __end_of_setBuz:	
 14890                           
 14891                           	psect	text100
 14892  0928                     __ptext100:	
 14893 ;; *************** function ___awdiv *****************
 14894 ;; Defined at:
 14895 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
 14896 ;; Parameters:    Size  Location     Type
 14897 ;;  divisor         2    0[BANK0 ] int 
 14898 ;;  dividend        2    2[BANK0 ] int 
 14899 ;; Auto vars:     Size  Location     Type
 14900 ;;  quotient        2    7[BANK0 ] int 
 14901 ;;  sign            1    6[BANK0 ] unsigned char 
 14902 ;;  counter         1    5[BANK0 ] unsigned char 
 14903 ;; Return value:  Size  Location     Type
 14904 ;;                  2    0[BANK0 ] int 
 14905 ;; Registers used:
 14906 ;;		wreg, status,2, status,0
 14907 ;; Tracked objects:
 14908 ;;		On entry : 0/0
 14909 ;;		On exit  : 0/0
 14910 ;;		Unchanged: 0/0
 14911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14912 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14913 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14914 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14915 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14916 ;;Total ram usage:        9 bytes
 14917 ;; Hardware stack levels used:    1
 14918 ;; Hardware stack levels required when called:    5
 14919 ;; This function calls:
 14920 ;;		Nothing
 14921 ;; This function is called by:
 14922 ;;		_setBuz
 14923 ;; This function uses a non-reentrant model
 14924 ;;
 14925                           
 14926                           
 14927                           ;psect for function ___awdiv
 14928  0928                     ___awdiv:	
 14929                           
 14930                           ;incstack = 0
 14931                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 14932  0928  0020               	movlb	0	; select bank0
 14933  0929  01A6               	clrf	___awdiv@sign
 14934  092A  1FA1               	btfss	___awdiv@divisor+1,7
 14935  092B  2933               	goto	l4409
 14936  092C  09A0               	comf	___awdiv@divisor,f
 14937  092D  09A1               	comf	___awdiv@divisor+1,f
 14938  092E  0AA0               	incf	___awdiv@divisor,f
 14939  092F  1903               	skipnz
 14940  0930  0AA1               	incf	___awdiv@divisor+1,f
 14941  0931  01A6               	clrf	___awdiv@sign
 14942  0932  0AA6               	incf	___awdiv@sign,f
 14943  0933                     l4409:	
 14944  0933  1FA3               	btfss	___awdiv@dividend+1,7
 14945  0934  293E               	goto	l4415
 14946  0935  09A2               	comf	___awdiv@dividend,f
 14947  0936  09A3               	comf	___awdiv@dividend+1,f
 14948  0937  0AA2               	incf	___awdiv@dividend,f
 14949  0938  1903               	skipnz
 14950  0939  0AA3               	incf	___awdiv@dividend+1,f
 14951  093A  3001               	movlw	1
 14952  093B  00A4               	movwf	??___awdiv
 14953  093C  0824               	movf	??___awdiv,w
 14954  093D  06A6               	xorwf	___awdiv@sign,f
 14955  093E                     l4415:	
 14956  093E  01A7               	clrf	___awdiv@quotient
 14957  093F  01A8               	clrf	___awdiv@quotient+1
 14958  0940  0821               	movf	___awdiv@divisor+1,w
 14959  0941  0420               	iorwf	___awdiv@divisor,w
 14960  0942  1903               	skipnz
 14961  0943  296D               	goto	l4437
 14962  0944  01A5               	clrf	___awdiv@counter
 14963  0945  0AA5               	incf	___awdiv@counter,f
 14964  0946                     l4425:	
 14965  0946  1BA1               	btfsc	___awdiv@divisor+1,7
 14966  0947  2952               	goto	l4427
 14967  0948  3001               	movlw	1
 14968  0949                     u3805:	
 14969  0949  35A0               	lslf	___awdiv@divisor,f
 14970  094A  0DA1               	rlf	___awdiv@divisor+1,f
 14971  094B  0B89               	decfsz	9,f
 14972  094C  2949               	goto	u3805
 14973  094D  3001               	movlw	1
 14974  094E  00A4               	movwf	??___awdiv
 14975  094F  0824               	movf	??___awdiv,w
 14976  0950  07A5               	addwf	___awdiv@counter,f
 14977  0951  2946               	goto	l4425
 14978  0952                     l4427:	
 14979  0952  3001               	movlw	1
 14980  0953                     u3825:	
 14981  0953  35A7               	lslf	___awdiv@quotient,f
 14982  0954  0DA8               	rlf	___awdiv@quotient+1,f
 14983  0955  0B89               	decfsz	9,f
 14984  0956  2953               	goto	u3825
 14985  0957  0821               	movf	___awdiv@divisor+1,w
 14986  0958  0223               	subwf	___awdiv@dividend+1,w
 14987  0959  1D03               	skipz
 14988  095A  295D               	goto	u3835
 14989  095B  0820               	movf	___awdiv@divisor,w
 14990  095C  0222               	subwf	___awdiv@dividend,w
 14991  095D                     u3835:	
 14992  095D  1C03               	skipc
 14993  095E  2964               	goto	l4433
 14994  095F  0820               	movf	___awdiv@divisor,w
 14995  0960  02A2               	subwf	___awdiv@dividend,f
 14996  0961  0821               	movf	___awdiv@divisor+1,w
 14997  0962  3BA3               	subwfb	___awdiv@dividend+1,f
 14998  0963  1427               	bsf	___awdiv@quotient,0
 14999  0964                     l4433:	
 15000  0964  3001               	movlw	1
 15001  0965                     u3845:	
 15002  0965  36A1               	lsrf	___awdiv@divisor+1,f
 15003  0966  0CA0               	rrf	___awdiv@divisor,f
 15004  0967  0B89               	decfsz	9,f
 15005  0968  2965               	goto	u3845
 15006  0969  3001               	movlw	1
 15007  096A  02A5               	subwf	___awdiv@counter,f
 15008  096B  1D03               	btfss	3,2
 15009  096C  2952               	goto	l4427
 15010  096D                     l4437:	
 15011  096D  0826               	movf	___awdiv@sign,w
 15012  096E  1903               	btfsc	3,2
 15013  096F  2975               	goto	l4441
 15014  0970  09A7               	comf	___awdiv@quotient,f
 15015  0971  09A8               	comf	___awdiv@quotient+1,f
 15016  0972  0AA7               	incf	___awdiv@quotient,f
 15017  0973  1903               	skipnz
 15018  0974  0AA8               	incf	___awdiv@quotient+1,f
 15019  0975                     l4441:	
 15020  0975  0828               	movf	___awdiv@quotient+1,w
 15021  0976  01A1               	clrf	?___awdiv+1
 15022  0977  07A1               	addwf	?___awdiv+1,f
 15023  0978  0827               	movf	___awdiv@quotient,w
 15024  0979  01A0               	clrf	?___awdiv
 15025  097A  07A0               	addwf	?___awdiv,f
 15026  097B  0008               	return
 15027  097C                     __end_of___awdiv:	
 15028                           
 15029                           	psect	text101
 15030  121B                     __ptext101:	
 15031 ;; *************** function _getDimmerIntr_Dimming_Sw *****************
 15032 ;; Defined at:
 15033 ;;		line 239 in file "../src/Dimmer_B1.c"
 15034 ;; Parameters:    Size  Location     Type
 15035 ;;  lights          1    wreg     unsigned char 
 15036 ;; Auto vars:     Size  Location     Type
 15037 ;;  lights          1    0[BANK0 ] unsigned char 
 15038 ;;  status          1    1[BANK0 ] unsigned char 
 15039 ;; Return value:  Size  Location     Type
 15040 ;;                  1    wreg      unsigned char 
 15041 ;; Registers used:
 15042 ;;		wreg, status,2
 15043 ;; Tracked objects:
 15044 ;;		On entry : 0/0
 15045 ;;		On exit  : 0/0
 15046 ;;		Unchanged: 0/0
 15047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15049 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15051 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15052 ;;Total ram usage:        2 bytes
 15053 ;; Hardware stack levels used:    1
 15054 ;; Hardware stack levels required when called:    5
 15055 ;; This function calls:
 15056 ;;		Nothing
 15057 ;; This function is called by:
 15058 ;;		_setDimmerLights_SwOn
 15059 ;; This function uses a non-reentrant model
 15060 ;;
 15061                           
 15062                           
 15063                           ;psect for function _getDimmerIntr_Dimming_Sw
 15064  121B                     _getDimmerIntr_Dimming_Sw:	
 15065                           
 15066                           ;incstack = 0
 15067                           ; Regs used in _getDimmerIntr_Dimming_Sw: [wreg+status,2]
 15068                           ;getDimmerIntr_Dimming_Sw@lights stored from wreg
 15069  121B  0020               	movlb	0	; select bank0
 15070  121C  00A0               	movwf	getDimmerIntr_Dimming_Sw@lights
 15071                           
 15072                           ;Dimmer_B1.c: 240: char status = 0;
 15073  121D  01A1               	clrf	getDimmerIntr_Dimming_Sw@status
 15074                           
 15075                           ;Dimmer_B1.c: 242: if (lights == 1) {
 15076  121E  0820               	movf	getDimmerIntr_Dimming_Sw@lights,w
 15077  121F  3A01               	xorlw	1
 15078  1220  1D03               	skipz
 15079  1221  2A28               	goto	l4801
 15080                           
 15081                           ;Dimmer_B1.c: 243: status = DimmerIntr1.Dimming_Sw == 1 ? 1 : 0;
 15082  1222  3000               	movlw	0
 15083  1223  0021               	movlb	1	; select bank1
 15084  1224  1A39               	btfsc	_DimmerIntr1^(0+128),4
 15085  1225  3001               	movlw	1
 15086  1226  0020               	movlb	0	; select bank0
 15087  1227  00A1               	movwf	getDimmerIntr_Dimming_Sw@status
 15088  1228                     l4801:	
 15089                           
 15090                           ;Dimmer_B1.c: 244: }
 15091                           ;Dimmer_B1.c: 257: return status;
 15092  1228  0821               	movf	getDimmerIntr_Dimming_Sw@status,w
 15093  1229  0008               	return
 15094  122A                     __end_of_getDimmerIntr_Dimming_Sw:	
 15095                           
 15096                           	psect	text102
 15097  16BE                     __ptext102:	
 15098 ;; *************** function _setDimmerLights_SwOff *****************
 15099 ;; Defined at:
 15100 ;;		line 789 in file "../src/Dimmer_B1.c"
 15101 ;; Parameters:    Size  Location     Type
 15102 ;;  sw              1    wreg     unsigned char 
 15103 ;; Auto vars:     Size  Location     Type
 15104 ;;  sw              1    2[BANK0 ] unsigned char 
 15105 ;; Return value:  Size  Location     Type
 15106 ;;		None               void
 15107 ;; Registers used:
 15108 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15109 ;; Tracked objects:
 15110 ;;		On entry : 0/0
 15111 ;;		On exit  : 0/0
 15112 ;;		Unchanged: 0/0
 15113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15115 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15117 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15118 ;;Total ram usage:        1 bytes
 15119 ;; Hardware stack levels used:    1
 15120 ;; Hardware stack levels required when called:    6
 15121 ;; This function calls:
 15122 ;;		_DimmerLights_SelectPointer
 15123 ;; This function is called by:
 15124 ;;		_DlyOff_Main
 15125 ;;		_Exception_Main
 15126 ;;		_setSw_Main
 15127 ;; This function uses a non-reentrant model
 15128 ;;
 15129                           
 15130                           
 15131                           ;psect for function _setDimmerLights_SwOff
 15132  16BE                     _setDimmerLights_SwOff:	
 15133                           
 15134                           ;incstack = 0
 15135                           ; Regs used in _setDimmerLights_SwOff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15136                           ;setDimmerLights_SwOff@sw stored from wreg
 15137  16BE  0020               	movlb	0	; select bank0
 15138  16BF  00A2               	movwf	setDimmerLights_SwOff@sw
 15139                           
 15140                           ;Dimmer_B1.c: 791: DimmerLights_SelectPointer(sw);
 15141  16C0  0822               	movf	setDimmerLights_SwOff@sw,w
 15142  16C1  3191  2178  3196   	fcall	_DimmerLights_SelectPointer
 15143                           
 15144                           ;Dimmer_B1.c: 793: if (DimmerLights->SwFlag == 1) {
 15145  16C4  087D               	movf	_DimmerLights,w
 15146  16C5  0086               	movwf	6
 15147  16C6  3001               	movlw	1	; select bank2/3
 15148  16C7  0087               	movwf	7
 15149  16C8  1C01               	btfss	1,0
 15150  16C9  0008               	return
 15151                           
 15152                           ;Dimmer_B1.c: 794: DimmerLights->SwFlag = 0;
 15153  16CA  087D               	movf	_DimmerLights,w
 15154  16CB  0086               	movwf	6
 15155  16CC  3001               	movlw	1	; select bank2/3
 15156  16CD  0087               	movwf	7
 15157  16CE  1001               	bcf	1,0
 15158                           
 15159                           ;Dimmer_B1.c: 795: if (DimmerLights->Status == 1) {
 15160  16CF  0A7D               	incf	_DimmerLights,w
 15161  16D0  0086               	movwf	6
 15162  16D1  3001               	movlw	1	; select bank2/3
 15163  16D2  0087               	movwf	7
 15164  16D3  1C01               	btfss	1,0
 15165  16D4  2EEB               	goto	l4965
 15166                           
 15167                           ;Dimmer_B1.c: 796: if (DimmerLights->DimmingSwFlag == 1) {
 15168  16D5  087D               	movf	_DimmerLights,w
 15169  16D6  0086               	movwf	6
 15170  16D7  3001               	movlw	1	; select bank2/3
 15171  16D8  0087               	movwf	7
 15172  16D9  1D81               	btfss	1,3
 15173  16DA  0008               	return
 15174                           
 15175                           ;Dimmer_B1.c: 797: DimmerLights->DimmingSwFlag = 0;
 15176  16DB  087D               	movf	_DimmerLights,w
 15177  16DC  0086               	movwf	6
 15178  16DD  3001               	movlw	1	; select bank2/3
 15179  16DE  0087               	movwf	7
 15180  16DF  1181               	bcf	1,3
 15181                           
 15182                           ;Dimmer_B1.c: 799: DimmerLights->DimmingTrigger = 1;
 15183  16E0  087D               	movf	_DimmerLights,w
 15184  16E1  0086               	movwf	6
 15185  16E2  3001               	movlw	1	; select bank2/3
 15186  16E3  0087               	movwf	7
 15187  16E4  1601               	bsf	1,4
 15188                           
 15189                           ;Dimmer_B1.c: 800: DimmerLights->DimmingSwitch = 0;
 15190  16E5  087D               	movf	_DimmerLights,w
 15191  16E6  0086               	movwf	6
 15192  16E7  3001               	movlw	1	; select bank2/3
 15193  16E8  0087               	movwf	7
 15194  16E9  1281               	bcf	1,5
 15195                           
 15196                           ;Dimmer_B1.c: 801: }
 15197                           ;Dimmer_B1.c: 802: } else {
 15198  16EA  0008               	return
 15199  16EB                     l4965:	
 15200                           
 15201                           ;Dimmer_B1.c: 808: DimmerLights->Phase = 1;
 15202  16EB  087D               	movf	_DimmerLights,w
 15203  16EC  3E02               	addlw	2
 15204  16ED  0086               	movwf	6
 15205  16EE  3001               	movlw	1	; select bank2/3
 15206  16EF  0087               	movwf	7
 15207  16F0  1401               	bsf	1,0
 15208                           
 15209                           ;Dimmer_B1.c: 809: DimmerLights->PhaseSwitch = 0;
 15210  16F1  087D               	movf	_DimmerLights,w
 15211  16F2  3E02               	addlw	2
 15212  16F3  0086               	movwf	6
 15213  16F4  3001               	movlw	1	; select bank2/3
 15214  16F5  0087               	movwf	7
 15215  16F6  1101               	bcf	1,2
 15216  16F7  0008               	return
 15217  16F8                     __end_of_setDimmerLights_SwOff:	
 15218                           
 15219                           	psect	text103
 15220  1248                     __ptext103:	
 15221 ;; *************** function _getDimmerLights_Status *****************
 15222 ;; Defined at:
 15223 ;;		line 1197 in file "../src/Dimmer_B1.c"
 15224 ;; Parameters:    Size  Location     Type
 15225 ;;  lights          1    wreg     unsigned char 
 15226 ;; Auto vars:     Size  Location     Type
 15227 ;;  lights          1    2[BANK0 ] unsigned char 
 15228 ;;  status          1    3[BANK0 ] unsigned char 
 15229 ;; Return value:  Size  Location     Type
 15230 ;;                  1    wreg      unsigned char 
 15231 ;; Registers used:
 15232 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15233 ;; Tracked objects:
 15234 ;;		On entry : 0/0
 15235 ;;		On exit  : 0/0
 15236 ;;		Unchanged: 0/0
 15237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15239 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15241 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15242 ;;Total ram usage:        2 bytes
 15243 ;; Hardware stack levels used:    1
 15244 ;; Hardware stack levels required when called:    6
 15245 ;; This function calls:
 15246 ;;		_DimmerLights_SelectPointer
 15247 ;; This function is called by:
 15248 ;;		_DlyOff_Main
 15249 ;;		_DimmerLights_AssignationDimming
 15250 ;;		_Exception_Main
 15251 ;; This function uses a non-reentrant model
 15252 ;;
 15253                           
 15254                           
 15255                           ;psect for function _getDimmerLights_Status
 15256  1248                     _getDimmerLights_Status:	
 15257                           
 15258                           ;incstack = 0
 15259                           ; Regs used in _getDimmerLights_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 15260                           ;getDimmerLights_Status@lights stored from wreg
 15261  1248  0020               	movlb	0	; select bank0
 15262  1249  00A2               	movwf	getDimmerLights_Status@lights
 15263                           
 15264                           ;Dimmer_B1.c: 1198: DimmerLights_SelectPointer(lights);
 15265  124A  0822               	movf	getDimmerLights_Status@lights,w
 15266  124B  3191  2178         	fcall	_DimmerLights_SelectPointer
 15267                           
 15268                           ;Dimmer_B1.c: 1199: char status = DimmerLights->Status == 1 ? 1 : 0;
 15269  124D  0A7D               	incf	_DimmerLights,w
 15270  124E  0086               	movwf	6
 15271  124F  3001               	movlw	1	; select bank2/3
 15272  1250  0087               	movwf	7
 15273  1251  3000               	movlw	0
 15274  1252  1801               	btfsc	1,0
 15275  1253  3001               	movlw	1
 15276  1254  0020               	movlb	0	; select bank0
 15277  1255  00A3               	movwf	getDimmerLights_Status@status
 15278                           
 15279                           ;Dimmer_B1.c: 1200: return status;
 15280  1256  0823               	movf	getDimmerLights_Status@status,w
 15281  1257  0008               	return
 15282  1258                     __end_of_getDimmerLights_Status:	
 15283                           
 15284                           	psect	text104
 15285  1178                     __ptext104:	
 15286 ;; *************** function _DimmerLights_SelectPointer *****************
 15287 ;; Defined at:
 15288 ;;		line 652 in file "../src/Dimmer_B1.c"
 15289 ;; Parameters:    Size  Location     Type
 15290 ;;  lights          1    wreg     unsigned char 
 15291 ;; Auto vars:     Size  Location     Type
 15292 ;;  lights          1    1[BANK0 ] unsigned char 
 15293 ;; Return value:  Size  Location     Type
 15294 ;;		None               void
 15295 ;; Registers used:
 15296 ;;		wreg
 15297 ;; Tracked objects:
 15298 ;;		On entry : 0/0
 15299 ;;		On exit  : 0/0
 15300 ;;		Unchanged: 0/0
 15301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15303 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15304 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15305 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15306 ;;Total ram usage:        2 bytes
 15307 ;; Hardware stack levels used:    1
 15308 ;; Hardware stack levels required when called:    5
 15309 ;; This function calls:
 15310 ;;		Nothing
 15311 ;; This function is called by:
 15312 ;;		_setDimmerLights_SwOn
 15313 ;;		_setDimmerLights_SwOff
 15314 ;;		_setDimmerLights_DimmingOn
 15315 ;;		_setDimmerLights_Main
 15316 ;;		_DimmerLights_TwoPhase_Main
 15317 ;;		_getDimmerLights_Status
 15318 ;;		_setDimmerLights_Status
 15319 ;;		_setDimmerLights_DimmingRun
 15320 ;; This function uses a non-reentrant model
 15321 ;;
 15322                           
 15323                           
 15324                           ;psect for function _DimmerLights_SelectPointer
 15325  1178                     _DimmerLights_SelectPointer:	
 15326                           
 15327                           ;incstack = 0
 15328                           ; Regs used in _DimmerLights_SelectPointer: [wreg]
 15329                           ;DimmerLights_SelectPointer@lights stored from wreg
 15330  1178  0020               	movlb	0	; select bank0
 15331  1179  00A1               	movwf	DimmerLights_SelectPointer@lights
 15332                           
 15333                           ;Dimmer_B1.c: 654: if (lights == 1) {
 15334  117A  0821               	movf	DimmerLights_SelectPointer@lights,w
 15335  117B  3A01               	xorlw	1
 15336  117C  1D03               	skipz
 15337  117D  0008               	return
 15338                           
 15339                           ;Dimmer_B1.c: 655: DimmerLights = &DimmerLights1;
 15340  117E  3048               	movlw	_DimmerLights1& (0+255)
 15341  117F  00A0               	movwf	??_DimmerLights_SelectPointer
 15342  1180  0820               	movf	??_DimmerLights_SelectPointer,w
 15343  1181  00FD               	movwf	_DimmerLights
 15344  1182  0008               	return
 15345  1183                     __end_of_DimmerLights_SelectPointer:	
 15346                           
 15347                           	psect	text105
 15348  10E7                     __ptext105:	
 15349 ;; *************** function _DelayOff_Initialization *****************
 15350 ;; Defined at:
 15351 ;;		line 26 in file "../src/DelayOff_B1.c"
 15352 ;; Parameters:    Size  Location     Type
 15353 ;;		None
 15354 ;; Auto vars:     Size  Location     Type
 15355 ;;		None
 15356 ;; Return value:  Size  Location     Type
 15357 ;;		None               void
 15358 ;; Registers used:
 15359 ;;		wreg, status,2, status,0, pclath, cstack
 15360 ;; Tracked objects:
 15361 ;;		On entry : 0/0
 15362 ;;		On exit  : 0/0
 15363 ;;		Unchanged: 0/0
 15364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15369 ;;Total ram usage:        0 bytes
 15370 ;; Hardware stack levels used:    1
 15371 ;; Hardware stack levels required when called:    7
 15372 ;; This function calls:
 15373 ;;		_DlyOff_Initialization
 15374 ;; This function is called by:
 15375 ;;		_main
 15376 ;; This function uses a non-reentrant model
 15377 ;;
 15378                           
 15379                           
 15380                           ;psect for function _DelayOff_Initialization
 15381  10E7                     _DelayOff_Initialization:	
 15382                           
 15383                           ;DelayOff_B1.c: 28: DlyOff_Initialization(1);
 15384                           
 15385                           ;incstack = 0
 15386                           ; Regs used in _DelayOff_Initialization: [wreg+status,2+status,0+pclath+cstack]
 15387  10E7  3001               	movlw	1
 15388  10E8  3191  2104         	fcall	_DlyOff_Initialization
 15389  10EA  0008               	return
 15390  10EB                     __end_of_DelayOff_Initialization:	
 15391                           
 15392                           	psect	text106
 15393  1104                     __ptext106:	
 15394 ;; *************** function _DlyOff_Initialization *****************
 15395 ;; Defined at:
 15396 ;;		line 56 in file "../src/DelayOff_B1.c"
 15397 ;; Parameters:    Size  Location     Type
 15398 ;;  sw              1    wreg     unsigned char 
 15399 ;; Auto vars:     Size  Location     Type
 15400 ;;  sw              1    2[BANK0 ] unsigned char 
 15401 ;; Return value:  Size  Location     Type
 15402 ;;		None               void
 15403 ;; Registers used:
 15404 ;;		wreg, status,2, status,0, pclath, cstack
 15405 ;; Tracked objects:
 15406 ;;		On entry : 0/0
 15407 ;;		On exit  : 0/0
 15408 ;;		Unchanged: 0/0
 15409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15411 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15413 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15414 ;;Total ram usage:        1 bytes
 15415 ;; Hardware stack levels used:    1
 15416 ;; Hardware stack levels required when called:    6
 15417 ;; This function calls:
 15418 ;;		_DelayOffPointSelect
 15419 ;; This function is called by:
 15420 ;;		_DelayOff_Initialization
 15421 ;; This function uses a non-reentrant model
 15422 ;;
 15423                           
 15424                           
 15425                           ;psect for function _DlyOff_Initialization
 15426  1104                     _DlyOff_Initialization:	
 15427                           
 15428                           ;incstack = 0
 15429                           ; Regs used in _DlyOff_Initialization: [wreg+status,2+status,0+pclath+cstack]
 15430                           ;DlyOff_Initialization@sw stored from wreg
 15431  1104  0020               	movlb	0	; select bank0
 15432  1105  00A2               	movwf	DlyOff_Initialization@sw
 15433                           
 15434                           ;DelayOff_B1.c: 57: DelayOffPointSelect(sw);
 15435  1106  0822               	movf	DlyOff_Initialization@sw,w
 15436  1107  3191  21AF         	fcall	_DelayOffPointSelect
 15437  1109  0008               	return
 15438  110A                     __end_of_DlyOff_Initialization:	
 15439                           
 15440                           	psect	text107
 15441  11AF                     __ptext107:	
 15442 ;; *************** function _DelayOffPointSelect *****************
 15443 ;; Defined at:
 15444 ;;		line 7 in file "../src/DelayOff_B1.c"
 15445 ;; Parameters:    Size  Location     Type
 15446 ;;  sw              1    wreg     unsigned char 
 15447 ;; Auto vars:     Size  Location     Type
 15448 ;;  sw              1    1[BANK0 ] unsigned char 
 15449 ;; Return value:  Size  Location     Type
 15450 ;;		None               void
 15451 ;; Registers used:
 15452 ;;		wreg
 15453 ;; Tracked objects:
 15454 ;;		On entry : 0/0
 15455 ;;		On exit  : 0/0
 15456 ;;		Unchanged: 0/0
 15457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15459 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15460 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15461 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15462 ;;Total ram usage:        2 bytes
 15463 ;; Hardware stack levels used:    1
 15464 ;; Hardware stack levels required when called:    5
 15465 ;; This function calls:
 15466 ;;		Nothing
 15467 ;; This function is called by:
 15468 ;;		_DlyOff_Initialization
 15469 ;;		_DlyOff_Main
 15470 ;;		_setDelayOff_GO
 15471 ;;		_getDelayOff_GO
 15472 ;; This function uses a non-reentrant model
 15473 ;;
 15474                           
 15475                           
 15476                           ;psect for function _DelayOffPointSelect
 15477  11AF                     _DelayOffPointSelect:	
 15478                           
 15479                           ;incstack = 0
 15480                           ; Regs used in _DelayOffPointSelect: [wreg]
 15481                           ;DelayOffPointSelect@sw stored from wreg
 15482  11AF  0020               	movlb	0	; select bank0
 15483  11B0  00A1               	movwf	DelayOffPointSelect@sw
 15484                           
 15485                           ;DelayOff_B1.c: 9: if (sw == 1) {
 15486  11B1  0821               	movf	DelayOffPointSelect@sw,w
 15487  11B2  3A01               	xorlw	1
 15488  11B3  1D03               	skipz
 15489  11B4  0008               	return
 15490                           
 15491                           ;DelayOff_B1.c: 10: DelayOff = &DlySw1;
 15492  11B5  305A               	movlw	_DlySw1& (0+255)
 15493  11B6  00A0               	movwf	??_DelayOffPointSelect
 15494  11B7  0820               	movf	??_DelayOffPointSelect,w
 15495  11B8  0021               	movlb	1	; select bank1
 15496  11B9  00D0               	movwf	_DelayOff^(0+128)
 15497  11BA  0008               	return
 15498  11BB                     __end_of_DelayOffPointSelect:	
 15499                           
 15500                           	psect	text108
 15501  0840                     __ptext108:	
 15502 ;; *************** function _Buzzer_Main *****************
 15503 ;; Defined at:
 15504 ;;		line 46 in file "../src/Buzzer_B1.c"
 15505 ;; Parameters:    Size  Location     Type
 15506 ;;		None
 15507 ;; Auto vars:     Size  Location     Type
 15508 ;;		None
 15509 ;; Return value:  Size  Location     Type
 15510 ;;		None               void
 15511 ;; Registers used:
 15512 ;;		wreg, status,2, status,0
 15513 ;; Tracked objects:
 15514 ;;		On entry : 0/0
 15515 ;;		On exit  : 0/0
 15516 ;;		Unchanged: 0/0
 15517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15520 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15521 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15522 ;;Total ram usage:        1 bytes
 15523 ;; Hardware stack levels used:    1
 15524 ;; Hardware stack levels required when called:    5
 15525 ;; This function calls:
 15526 ;;		Nothing
 15527 ;; This function is called by:
 15528 ;;		_main
 15529 ;; This function uses a non-reentrant model
 15530 ;;
 15531                           
 15532                           
 15533                           ;psect for function _Buzzer_Main
 15534  0840                     _Buzzer_Main:	
 15535                           
 15536                           ;Buzzer_B1.c: 47: if (Buz1.GO == 1) {
 15537                           
 15538                           ;incstack = 0
 15539                           ; Regs used in _Buzzer_Main: [wreg+status,2+status,0]
 15540  0840  0021               	movlb	1	; select bank1
 15541  0841  1CAD               	btfss	_Buz1^(0+128),1
 15542  0842  0008               	return
 15543                           
 15544                           ;Buzzer_B1.c: 48: Buz1.Counter++;
 15545  0843  3001               	movlw	1
 15546  0844  07AE               	addwf	(_Buz1^(0+128)+1),f
 15547  0845  3000               	movlw	0
 15548  0846  3DAF               	addwfc	((_Buz1+1)^(0+128)+1),f
 15549                           
 15550                           ;Buzzer_B1.c: 49: if (Buz1.Counter >= Buz1.TimeValue) {
 15551  0847  0834               	movf	((_Buz1+1)^(0+128)+6),w
 15552  0848  022F               	subwf	((_Buz1+1)^(0+128)+1),w
 15553  0849  1D03               	skipz
 15554  084A  284D               	goto	u6195
 15555  084B  0833               	movf	(_Buz1^(0+128)+6),w
 15556  084C  022E               	subwf	(_Buz1^(0+128)+1),w
 15557  084D                     u6195:	
 15558  084D  1C03               	skipc
 15559  084E  0008               	return
 15560                           
 15561                           ;Buzzer_B1.c: 50: Buz1.Counter = 0;
 15562  084F  01AE               	clrf	(_Buz1^(0+128)+1)
 15563  0850  01AF               	clrf	((_Buz1+1)^(0+128)+1)
 15564                           
 15565                           ;Buzzer_B1.c: 51: Buz1.Switch = (RB3 == 1) ? 1 : 0;
 15566  0851  12AD               	bcf	_Buz1^(0+128),5
 15567  0852  0020               	movlb	0	; select bank0
 15568  0853  1D8D               	btfss	13,3	;volatile
 15569  0854  2857               	goto	l5813
 15570  0855  0021               	movlb	1	; select bank1
 15571  0856  16AD               	bsf	_Buz1^(0+128),5
 15572  0857                     l5813:	
 15573                           
 15574                           ;Buzzer_B1.c: 52: if (Buz1.Switch == 0) {
 15575  0857  0021               	movlb	1	; select bank1
 15576  0858  1AAD               	btfsc	_Buz1^(0+128),5
 15577  0859  2883               	goto	l68
 15578                           
 15579                           ;Buzzer_B1.c: 53: if (Buz1.Count == 0) {
 15580  085A  08B0               	movf	(_Buz1^(0+128)+3),f
 15581  085B  1D03               	skipz
 15582  085C  287F               	goto	l69
 15583                           
 15584                           ;Buzzer_B1.c: 54: if (Buz1.BufferStatus1 == 1) {
 15585  085D  1DAD               	btfss	_Buz1^(0+128),3
 15586  085E  286D               	goto	l70
 15587                           
 15588                           ;Buzzer_B1.c: 55: Buz1.BufferStatus1 = 0;
 15589  085F  11AD               	bcf	_Buz1^(0+128),3
 15590                           
 15591                           ;Buzzer_B1.c: 56: Buz1.Count = Buz1.CountBuffer1;
 15592  0860  0831               	movf	(_Buz1^(0+128)+4),w
 15593  0861  0020               	movlb	0	; select bank0
 15594  0862  00A0               	movwf	??_Buzzer_Main
 15595  0863  0820               	movf	??_Buzzer_Main,w
 15596  0864  0021               	movlb	1	; select bank1
 15597  0865  00B0               	movwf	(_Buz1^(0+128)+3)
 15598                           
 15599                           ;Buzzer_B1.c: 57: Buz1.TimeValue = Buz1.TimeValueBuffer1;
 15600  0866  0836               	movf	((_Buz1+1)^(0+128)+8),w
 15601  0867  01B4               	clrf	((_Buz1+1)^(0+128)+6)
 15602  0868  07B4               	addwf	((_Buz1+1)^(0+128)+6),f
 15603  0869  0835               	movf	(_Buz1^(0+128)+8),w
 15604  086A  01B3               	clrf	(_Buz1^(0+128)+6)
 15605  086B  07B3               	addwf	(_Buz1^(0+128)+6),f
 15606                           
 15607                           ;Buzzer_B1.c: 58: } else if (Buz1.BufferStatus2 == 1) {
 15608  086C  0008               	return
 15609  086D                     l70:	
 15610  086D  1E2D               	btfss	_Buz1^(0+128),4
 15611  086E  287D               	goto	l72
 15612                           
 15613                           ;Buzzer_B1.c: 59: Buz1.BufferStatus2 = 0;
 15614  086F  122D               	bcf	_Buz1^(0+128),4
 15615                           
 15616                           ;Buzzer_B1.c: 60: Buz1.Count = Buz1.CountBuffer2;
 15617  0870  0832               	movf	(_Buz1^(0+128)+5),w
 15618  0871  0020               	movlb	0	; select bank0
 15619  0872  00A0               	movwf	??_Buzzer_Main
 15620  0873  0820               	movf	??_Buzzer_Main,w
 15621  0874  0021               	movlb	1	; select bank1
 15622  0875  00B0               	movwf	(_Buz1^(0+128)+3)
 15623                           
 15624                           ;Buzzer_B1.c: 61: Buz1.TimeValue = Buz1.TimeValueBuffer2;
 15625  0876  0838               	movf	((_Buz1+1)^(0+128)+10),w
 15626  0877  01B4               	clrf	((_Buz1+1)^(0+128)+6)
 15627  0878  07B4               	addwf	((_Buz1+1)^(0+128)+6),f
 15628  0879  0837               	movf	(_Buz1^(0+128)+10),w
 15629  087A  01B3               	clrf	(_Buz1^(0+128)+6)
 15630  087B  07B3               	addwf	(_Buz1^(0+128)+6),f
 15631                           
 15632                           ;Buzzer_B1.c: 62: } else {
 15633  087C  0008               	return
 15634  087D                     l72:	
 15635                           
 15636                           ;Buzzer_B1.c: 63: Buz1.GO = 0;
 15637  087D  10AD               	bcf	_Buz1^(0+128),1
 15638                           
 15639                           ;Buzzer_B1.c: 64: }
 15640                           ;Buzzer_B1.c: 65: } else {
 15641  087E  0008               	return
 15642  087F                     l69:	
 15643                           
 15644                           ;Buzzer_B1.c: 66: Buz1.Switch = 1;
 15645  087F  16AD               	bsf	_Buz1^(0+128),5
 15646                           
 15647                           ;Buzzer_B1.c: 68: RB3 = 1;
 15648  0880  0020               	movlb	0	; select bank0
 15649  0881  158D               	bsf	13,3	;volatile
 15650                           
 15651                           ;Buzzer_B1.c: 69: }
 15652                           ;Buzzer_B1.c: 70: } else {
 15653  0882  0008               	return
 15654  0883                     l68:	
 15655                           
 15656                           ;Buzzer_B1.c: 71: Buz1.Switch = 0;
 15657  0883  12AD               	bcf	_Buz1^(0+128),5
 15658                           
 15659                           ;Buzzer_B1.c: 73: RB3 = 0;
 15660  0884  0020               	movlb	0	; select bank0
 15661  0885  118D               	bcf	13,3	;volatile
 15662                           
 15663                           ;Buzzer_B1.c: 75: Buz1.Count--;
 15664  0886  3001               	movlw	1
 15665  0887  0021               	movlb	1	; select bank1
 15666  0888  02B0               	subwf	(_Buz1^(0+128)+3),f
 15667  0889  0008               	return
 15668  088A                     __end_of_Buzzer_Main:	
 15669                           
 15670                           	psect	text109
 15671  10DE                     __ptext109:	
 15672 ;; *************** function _Buzzer_Initialization *****************
 15673 ;; Defined at:
 15674 ;;		line 11 in file "../src/Buzzer_B1.c"
 15675 ;; Parameters:    Size  Location     Type
 15676 ;;		None
 15677 ;; Auto vars:     Size  Location     Type
 15678 ;;		None
 15679 ;; Return value:  Size  Location     Type
 15680 ;;		None               void
 15681 ;; Registers used:
 15682 ;;		None
 15683 ;; Tracked objects:
 15684 ;;		On entry : 0/0
 15685 ;;		On exit  : 0/0
 15686 ;;		Unchanged: 0/0
 15687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15692 ;;Total ram usage:        0 bytes
 15693 ;; Hardware stack levels used:    1
 15694 ;; Hardware stack levels required when called:    5
 15695 ;; This function calls:
 15696 ;;		Nothing
 15697 ;; This function is called by:
 15698 ;;		_main
 15699 ;; This function uses a non-reentrant model
 15700 ;;
 15701                           
 15702                           
 15703                           ;psect for function _Buzzer_Initialization
 15704  10DE                     _Buzzer_Initialization:	
 15705                           
 15706                           ;Buzzer_B1.c: 13: Buz1.Enable = 1;
 15707                           
 15708                           ;incstack = 0
 15709                           ; Regs used in _Buzzer_Initialization: []
 15710  10DE  0021               	movlb	1	; select bank1
 15711  10DF  142D               	bsf	_Buz1^(0+128),0
 15712  10E0  0008               	return
 15713  10E1                     __end_of_Buzzer_Initialization:	
 15714                           
 15715                           	psect	intentry
 15716  0004                     __pintentry:	
 15717 ;; *************** function _ISR *****************
 15718 ;; Defined at:
 15719 ;;		line 116 in file "../src/MCU_B1.c"
 15720 ;; Parameters:    Size  Location     Type
 15721 ;;		None
 15722 ;; Auto vars:     Size  Location     Type
 15723 ;;		None
 15724 ;; Return value:  Size  Location     Type
 15725 ;;		None               void
 15726 ;; Registers used:
 15727 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15728 ;; Tracked objects:
 15729 ;;		On entry : 0/0
 15730 ;;		On exit  : 0/0
 15731 ;;		Unchanged: 0/0
 15732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15735 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15736 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15737 ;;Total ram usage:        1 bytes
 15738 ;; Hardware stack levels used:    1
 15739 ;; Hardware stack levels required when called:    4
 15740 ;; This function calls:
 15741 ;;		_IOC_ISR
 15742 ;;		_TMR1_ISR
 15743 ;; This function is called by:
 15744 ;;		Interrupt level 1
 15745 ;; This function uses a non-reentrant model
 15746 ;;
 15747                           
 15748  0004                     _ISR:	
 15749                           
 15750                           ;incstack = 0
 15751                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15752  0004  147E               	bsf	126,0	;set compiler interrupt flag
 15753  0005  3180               	pagesel	$
 15754  0006  0020               	movlb	0	; select bank0
 15755  0007  087F               	movf	127,w
 15756  0008  00FC               	movwf	??_ISR
 15757                           
 15758                           ;MCU_B1.c: 125: if (TMR1IE == 1 && TMR1IF == 1) {
 15759  0009  0021               	movlb	1	; select bank1
 15760  000A  1C11               	btfss	17,0	;volatile
 15761  000B  2812               	goto	i1l6365
 15762  000C  0020               	movlb	0	; select bank0
 15763  000D  1C11               	btfss	17,0	;volatile
 15764  000E  2812               	goto	i1l6365
 15765                           
 15766                           ;MCU_B1.c: 126: TMR1_ISR();
 15767  000F  3194  2436  3180   	fcall	_TMR1_ISR
 15768  0012                     i1l6365:	
 15769                           
 15770                           ;MCU_B1.c: 127: }
 15771                           ;MCU_B1.c: 138: if (IOCIE == 1 && IOCIF == 1 && IOCBF2 == 1) {
 15772  0012  198B               	btfsc	11,3	;volatile
 15773  0013  1C0B               	btfss	11,0	;volatile
 15774  0014  281A               	goto	i1l869
 15775  0015  0027               	movlb	7	; select bank7
 15776  0016  1D16               	btfss	22,2	;volatile
 15777  0017  281A               	goto	i1l869
 15778                           
 15779                           ;MCU_B1.c: 139: IOC_ISR();
 15780  0018  3191  2149         	fcall	_IOC_ISR
 15781  001A                     i1l869:	
 15782                           ;MCU_B1.c: 140: }
 15783                           ;MCU_B1.c: 148: return;
 15784                           
 15785  001A  087C               	movf	??_ISR,w
 15786  001B  0020               	movlb	0	; select bank0
 15787  001C  00FF               	movwf	127
 15788  001D  107E               	bcf	126,0	;clear compiler interrupt flag
 15789  001E  0009               	retfie
 15790  001F                     __end_of_ISR:	
 15791                           
 15792                           	psect	text111
 15793  1436                     __ptext111:	
 15794 ;; *************** function _TMR1_ISR *****************
 15795 ;; Defined at:
 15796 ;;		line 236 in file "../src/MCU_B1.c"
 15797 ;; Parameters:    Size  Location     Type
 15798 ;;		None
 15799 ;; Auto vars:     Size  Location     Type
 15800 ;;		None
 15801 ;; Return value:  Size  Location     Type
 15802 ;;		None               void
 15803 ;; Registers used:
 15804 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15805 ;; Tracked objects:
 15806 ;;		On entry : 0/0
 15807 ;;		On exit  : 0/0
 15808 ;;		Unchanged: 0/0
 15809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15814 ;;Total ram usage:        0 bytes
 15815 ;; Hardware stack levels used:    1
 15816 ;; Hardware stack levels required when called:    1
 15817 ;; This function calls:
 15818 ;;		_DimmerLights_TMR_1
 15819 ;; This function is called by:
 15820 ;;		_ISR
 15821 ;; This function uses a non-reentrant model
 15822 ;;
 15823                           
 15824                           
 15825                           ;psect for function _TMR1_ISR
 15826  1436                     _TMR1_ISR:	
 15827                           
 15828                           ;MCU_B1.c: 254: DimmerLights_TMR_1();
 15829                           
 15830                           ;incstack = 0
 15831                           ; Regs used in _TMR1_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15832  1436  3196  2686  3194   	fcall	_DimmerLights_TMR_1
 15833                           
 15834                           ;MCU_B1.c: 268: Timer1.Count++;
 15835  1439  3001               	movlw	1
 15836  143A  0021               	movlb	1	; select bank1
 15837  143B  07CB               	addwf	(_Timer1^(0+128)+1),f
 15838  143C  3000               	movlw	0
 15839  143D  3DCC               	addwfc	((_Timer1+1)^(0+128)+1),f
 15840                           
 15841                           ;MCU_B1.c: 269: if (Timer1.Count == (int)(20*10)) {
 15842  143E  3001               	movlw	1
 15843  143F  3ECA               	addlw	_Timer1& (0+255)
 15844  1440  0086               	movwf	6
 15845  1441  0187               	clrf	7
 15846  1442  3F40               	moviw [0]fsr1
 15847  1443  3AC8               	xorlw	200
 15848  1444  1D03               	skipz
 15849  1445  2C48               	goto	u629_25
 15850  1446  3F41               	moviw [1]fsr1
 15851  1447  3A00               	xorlw	0
 15852  1448                     u629_25:	
 15853  1448  1D03               	skipz
 15854  1449  2C4D               	goto	i1l5871
 15855                           
 15856                           ;MCU_B1.c: 270: Timer1.Count = 0;
 15857  144A  01CB               	clrf	(_Timer1^(0+128)+1)
 15858  144B  01CC               	clrf	((_Timer1+1)^(0+128)+1)
 15859                           
 15860                           ;MCU_B1.c: 271: Timer1.Timeout = 1;
 15861  144C  144A               	bsf	_Timer1^(0+128),0
 15862  144D                     i1l5871:	
 15863                           
 15864                           ;MCU_B1.c: 272: }
 15865                           ;MCU_B1.c: 274: TMR1H = (int)((65536-1480)/256);
 15866  144D  30FA               	movlw	250
 15867  144E  0020               	movlb	0	; select bank0
 15868  144F  0097               	movwf	23	;volatile
 15869                           
 15870                           ;MCU_B1.c: 275: TMR1L = (int)((65536-1480)%256);
 15871  1450  3038               	movlw	56
 15872  1451  0096               	movwf	22	;volatile
 15873                           
 15874                           ;MCU_B1.c: 276: TMR1IF = 0;
 15875  1452  1011               	bcf	17,0	;volatile
 15876  1453  0008               	return
 15877  1454                     __end_of_TMR1_ISR:	
 15878                           
 15879                           	psect	text112
 15880  1686                     __ptext112:	
 15881 ;; *************** function _DimmerLights_TMR_1 *****************
 15882 ;; Defined at:
 15883 ;;		line 1504 in file "../src/Dimmer_B1.c"
 15884 ;; Parameters:    Size  Location     Type
 15885 ;;		None
 15886 ;; Auto vars:     Size  Location     Type
 15887 ;;		None
 15888 ;; Return value:  Size  Location     Type
 15889 ;;		None               void
 15890 ;; Registers used:
 15891 ;;		wreg, status,2, status,0
 15892 ;; Tracked objects:
 15893 ;;		On entry : 0/0
 15894 ;;		On exit  : 0/0
 15895 ;;		Unchanged: 0/0
 15896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15899 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15900 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15901 ;;Total ram usage:        1 bytes
 15902 ;; Hardware stack levels used:    1
 15903 ;; This function calls:
 15904 ;;		Nothing
 15905 ;; This function is called by:
 15906 ;;		_TMR1_ISR
 15907 ;; This function uses a non-reentrant model
 15908 ;;
 15909                           
 15910                           
 15911                           ;psect for function _DimmerLights_TMR_1
 15912  1686                     _DimmerLights_TMR_1:	
 15913                           
 15914                           ;Dimmer_B1.c: 1506: if (DimmerIntr1.Start == 1) {
 15915                           
 15916                           ;incstack = 0
 15917                           ; Regs used in _DimmerLights_TMR_1: [wreg+status,2+status,0]
 15918  1686  0021               	movlb	1	; select bank1
 15919  1687  1D39               	btfss	_DimmerIntr1^(0+128),2
 15920  1688  2EAC               	goto	i1l553
 15921                           
 15922                           ;Dimmer_B1.c: 1507: DimmerIntr1.Count++;
 15923  1689  3001               	movlw	1
 15924  168A  00F0               	movwf	??_DimmerLights_TMR_1
 15925  168B  0870               	movf	??_DimmerLights_TMR_1,w
 15926  168C  07BB               	addwf	(_DimmerIntr1^(0+128)+2),f
 15927                           
 15928                           ;Dimmer_B1.c: 1509: if (DimmerIntr1.Count == DimmerIntr1.TuneEnd) {
 15929  168D  083B               	movf	(_DimmerIntr1^(0+128)+2),w
 15930  168E  0644               	xorwf	(_DimmerIntr1^(0+128)+11),w
 15931  168F  1D03               	skipz
 15932  1690  2E93               	goto	i1l5413
 15933                           
 15934                           ;Dimmer_B1.c: 1510: DimmerIntr1.Count = 0;
 15935  1691  01BB               	clrf	(_DimmerIntr1^(0+128)+2)
 15936                           
 15937                           ;Dimmer_B1.c: 1511: DimmerIntr1.Start = 0;
 15938  1692  1139               	bcf	_DimmerIntr1^(0+128),2
 15939  1693                     i1l5413:	
 15940                           
 15941                           ;Dimmer_B1.c: 1512: }
 15942                           ;Dimmer_B1.c: 1526: if (DimmerIntr1.Count == DimmerIntr1.TuneValue2) {
 15943  1693  083B               	movf	(_DimmerIntr1^(0+128)+2),w
 15944  1694  0641               	xorwf	(_DimmerIntr1^(0+128)+8),w
 15945  1695  1903               	btfsc	3,2
 15946                           
 15947                           ;Dimmer_B1.c: 1527: if (DimmerIntr1.ControlStatus == 1) {
 15948  1696  1DB9               	btfss	_DimmerIntr1^(0+128),3
 15949  1697  2E9A               	goto	i1l5419
 15950                           
 15951                           ;Dimmer_B1.c: 1528: RB1 = 0;
 15952  1698  0020               	movlb	0	; select bank0
 15953  1699  108D               	bcf	13,1	;volatile
 15954  169A                     i1l5419:	
 15955                           
 15956                           ;Dimmer_B1.c: 1529: }
 15957                           ;Dimmer_B1.c: 1530: }
 15958                           ;Dimmer_B1.c: 1533: if (DimmerIntr1.Count == DimmerIntr1.TuneValue3) {
 15959  169A  0021               	movlb	1	; select bank1
 15960  169B  083B               	movf	(_DimmerIntr1^(0+128)+2),w
 15961  169C  0642               	xorwf	(_DimmerIntr1^(0+128)+9),w
 15962  169D  1903               	btfsc	3,2
 15963                           
 15964                           ;Dimmer_B1.c: 1534: if (DimmerIntr1.ControlStatus == 1) {
 15965  169E  1DB9               	btfss	_DimmerIntr1^(0+128),3
 15966  169F  2EA2               	goto	i1l5425
 15967                           
 15968                           ;Dimmer_B1.c: 1535: RB1 = 1;
 15969  16A0  0020               	movlb	0	; select bank0
 15970  16A1  148D               	bsf	13,1	;volatile
 15971  16A2                     i1l5425:	
 15972                           
 15973                           ;Dimmer_B1.c: 1536: }
 15974                           ;Dimmer_B1.c: 1537: }
 15975                           ;Dimmer_B1.c: 1540: if (DimmerIntr1.Count == DimmerIntr1.TuneValue4) {
 15976  16A2  0021               	movlb	1	; select bank1
 15977  16A3  083B               	movf	(_DimmerIntr1^(0+128)+2),w
 15978  16A4  0643               	xorwf	(_DimmerIntr1^(0+128)+10),w
 15979  16A5  1D03               	skipz
 15980  16A6  0008               	return
 15981                           
 15982                           ;Dimmer_B1.c: 1541: if (DimmerIntr1.ControlStatus == 1) {
 15983  16A7  1DB9               	btfss	_DimmerIntr1^(0+128),3
 15984  16A8  0008               	return
 15985                           
 15986                           ;Dimmer_B1.c: 1542: RB1 = 0;
 15987  16A9  0020               	movlb	0	; select bank0
 15988  16AA  108D               	bcf	13,1	;volatile
 15989                           
 15990                           ;Dimmer_B1.c: 1543: }
 15991                           ;Dimmer_B1.c: 1546: }
 15992                           ;Dimmer_B1.c: 1548: } else {
 15993  16AB  0008               	return
 15994  16AC                     i1l553:	
 15995                           
 15996                           ;Dimmer_B1.c: 1549: if (DimmerIntr1.GO == 1) {
 15997  16AC  1C39               	btfss	_DimmerIntr1^(0+128),0
 15998  16AD  0008               	return
 15999                           
 16000                           ;Dimmer_B1.c: 1550: DimmerIntr1.Count++;
 16001  16AE  3001               	movlw	1
 16002  16AF  00F0               	movwf	??_DimmerLights_TMR_1
 16003  16B0  0870               	movf	??_DimmerLights_TMR_1,w
 16004  16B1  07BB               	addwf	(_DimmerIntr1^(0+128)+2),f
 16005                           
 16006                           ;Dimmer_B1.c: 1551: if (DimmerIntr1.Count == 7) {
 16007  16B2  083B               	movf	(_DimmerIntr1^(0+128)+2),w
 16008  16B3  3A07               	xorlw	7
 16009  16B4  1D03               	skipz
 16010  16B5  0008               	return
 16011                           
 16012                           ;Dimmer_B1.c: 1552: DimmerIntr1.Count = 0;
 16013  16B6  01BB               	clrf	(_DimmerIntr1^(0+128)+2)
 16014                           
 16015                           ;Dimmer_B1.c: 1553: DimmerIntr1.GO = 0;
 16016  16B7  1039               	bcf	_DimmerIntr1^(0+128),0
 16017                           
 16018                           ;Dimmer_B1.c: 1554: DimmerIntr1.Start = 1;
 16019  16B8  1539               	bsf	_DimmerIntr1^(0+128),2
 16020                           
 16021                           ;Dimmer_B1.c: 1556: if (DimmerIntr1.ControlStatus == 1) {
 16022  16B9  1DB9               	btfss	_DimmerIntr1^(0+128),3
 16023  16BA  0008               	return
 16024                           
 16025                           ;Dimmer_B1.c: 1557: RB1 = 1;
 16026  16BB  0020               	movlb	0	; select bank0
 16027  16BC  148D               	bsf	13,1	;volatile
 16028  16BD  0008               	return
 16029  16BE                     __end_of_DimmerLights_TMR_1:	
 16030                           
 16031                           	psect	text113
 16032  1149                     __ptext113:	
 16033 ;; *************** function _IOC_ISR *****************
 16034 ;; Defined at:
 16035 ;;		line 395 in file "../src/MCU_B1.c"
 16036 ;; Parameters:    Size  Location     Type
 16037 ;;		None
 16038 ;; Auto vars:     Size  Location     Type
 16039 ;;		None
 16040 ;; Return value:  Size  Location     Type
 16041 ;;		None               void
 16042 ;; Registers used:
 16043 ;;		wreg, status,2, status,0, pclath, cstack
 16044 ;; Tracked objects:
 16045 ;;		On entry : 0/0
 16046 ;;		On exit  : 0/0
 16047 ;;		Unchanged: 0/0
 16048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16053 ;;Total ram usage:        0 bytes
 16054 ;; Hardware stack levels used:    1
 16055 ;; Hardware stack levels required when called:    3
 16056 ;; This function calls:
 16057 ;;		_DimmerLights_IOC_1
 16058 ;; This function is called by:
 16059 ;;		_ISR
 16060 ;; This function uses a non-reentrant model
 16061 ;;
 16062                           
 16063                           
 16064                           ;psect for function _IOC_ISR
 16065  1149                     _IOC_ISR:	
 16066                           
 16067                           ;MCU_B1.c: 397: if (myMain.PowerON == 1) {
 16068                           
 16069                           ;incstack = 0
 16070                           ; Regs used in _IOC_ISR: [wreg+status,2+status,0+pclath+cstack]
 16071  1149  0021               	movlb	1	; select bank1
 16072  114A  1C20               	btfss	_myMain^(0+128),0
 16073  114B  294E               	goto	i1l5881
 16074                           
 16075                           ;MCU_B1.c: 403: DimmerLights_IOC_1();
 16076  114C  3188  2003         	fcall	_DimmerLights_IOC_1
 16077  114E                     i1l5881:	
 16078                           
 16079                           ;MCU_B1.c: 416: }
 16080                           ;MCU_B1.c: 418: IOCBF2 = 0;
 16081  114E  0027               	movlb	7	; select bank7
 16082  114F  1116               	bcf	22,2	;volatile
 16083                           
 16084                           ;MCU_B1.c: 419: IOCIF = 0;
 16085  1150  100B               	bcf	11,0	;volatile
 16086  1151  0008               	return
 16087  1152                     __end_of_IOC_ISR:	
 16088                           
 16089                           	psect	text114
 16090  0803                     __ptext114:	
 16091 ;; *************** function _DimmerLights_IOC_1 *****************
 16092 ;; Defined at:
 16093 ;;		line 1599 in file "../src/Dimmer_B1.c"
 16094 ;; Parameters:    Size  Location     Type
 16095 ;;		None
 16096 ;; Auto vars:     Size  Location     Type
 16097 ;;		None
 16098 ;; Return value:  Size  Location     Type
 16099 ;;		None               void
 16100 ;; Registers used:
 16101 ;;		wreg, status,2, status,0, pclath, cstack
 16102 ;; Tracked objects:
 16103 ;;		On entry : 0/0
 16104 ;;		On exit  : 0/0
 16105 ;;		Unchanged: 0/0
 16106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16109 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16110 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16111 ;;Total ram usage:        2 bytes
 16112 ;; Hardware stack levels used:    1
 16113 ;; Hardware stack levels required when called:    2
 16114 ;; This function calls:
 16115 ;;		i1_Division
 16116 ;; This function is called by:
 16117 ;;		_IOC_ISR
 16118 ;; This function uses a non-reentrant model
 16119 ;;
 16120                           
 16121                           
 16122                           ;psect for function _DimmerLights_IOC_1
 16123  0803                     _DimmerLights_IOC_1:	
 16124                           
 16125                           ;Dimmer_B1.c: 1613: if (DimmerIntr1.Start == 0 && DimmerIntr1.GO == 0) {
 16126                           
 16127                           ;incstack = 0
 16128                           ; Regs used in _DimmerLights_IOC_1: [wreg+status,2+status,0+pclath+cstack]
 16129  0803  0021               	movlb	1	; select bank1
 16130  0804  1939               	btfsc	_DimmerIntr1^(0+128),2
 16131  0805  0008               	return
 16132  0806  1839               	btfsc	_DimmerIntr1^(0+128),0
 16133  0807  0008               	return
 16134                           
 16135                           ;Dimmer_B1.c: 1615: if (RB2 != DimmerIntr1.Status) {
 16136  0808  0E3A               	swapf	(_DimmerIntr1^(0+128)+1),w
 16137  0809  0C89               	rrf	9,f
 16138  080A  3901               	andlw	1
 16139  080B  00FA               	movwf	??_DimmerLights_IOC_1
 16140  080C  3000               	movlw	0
 16141  080D  0020               	movlb	0	; select bank0
 16142  080E  190D               	btfsc	13,2	;volatile
 16143  080F  3001               	movlw	1
 16144  0810  067A               	xorwf	??_DimmerLights_IOC_1,w
 16145  0811  1903               	skipnz
 16146  0812  0008               	return
 16147                           
 16148                           ;Dimmer_B1.c: 1618: DimmerIntr1.Count = 0;
 16149  0813  0021               	movlb	1	; select bank1
 16150  0814  01BB               	clrf	(_DimmerIntr1^(0+128)+2)
 16151                           
 16152                           ;Dimmer_B1.c: 1619: DimmerIntr1.GO = 1;
 16153  0815  1439               	bsf	_DimmerIntr1^(0+128),0
 16154                           
 16155                           ;Dimmer_B1.c: 1621: if (DimmerIntr1.Dimming_Sw == 1 || DimmerIntr1.Dimming_RF == 1) {
 16156  0816  1E39               	btfss	_DimmerIntr1^(0+128),4
 16157  0817  1B39               	btfsc	_DimmerIntr1^(0+128),6
 16158                           
 16159                           ;Dimmer_B1.c: 1622: DimmerIntr1.Tune = 1;
 16160  0818  14B9               	bsf	_DimmerIntr1^(0+128),1
 16161                           
 16162                           ;Dimmer_B1.c: 1623: }
 16163                           ;Dimmer_B1.c: 1625: if (DimmerIntr1.TuneGO == 1) {
 16164  0819  1F3A               	btfss	(_DimmerIntr1^(0+128)+1),6
 16165  081A  2839               	goto	i1l5469
 16166                           
 16167                           ;Dimmer_B1.c: 1626: DimmerIntr1.TuneGO = 0;
 16168  081B  133A               	bcf	(_DimmerIntr1^(0+128)+1),6
 16169                           
 16170                           ;Dimmer_B1.c: 1629: DimmerIntr1.TuneValue2 = Division(DimmerIntr1.DimmingValue, 2);
 16171  081C  3002               	movlw	2
 16172  081D  00FA               	movwf	??_DimmerLights_IOC_1
 16173  081E  087A               	movf	??_DimmerLights_IOC_1,w
 16174  081F  00F5               	movwf	i1Division@num
 16175  0820  083E               	movf	(_DimmerIntr1^(0+128)+5),w
 16176  0821  3187  27F2  3188   	fcall	i1_Division
 16177  0824  00FB               	movwf	??_DimmerLights_IOC_1+1
 16178  0825  087B               	movf	??_DimmerLights_IOC_1+1,w
 16179  0826  0021               	movlb	1	; select bank1
 16180  0827  00C1               	movwf	(_DimmerIntr1^(0+128)+8)
 16181                           
 16182                           ;Dimmer_B1.c: 1630: DimmerIntr1.TuneValue3 = DimmerIntr1.TuneValue2 + (60 - DimmerIntr1.
      +                          DimmingValue);
 16183  0828  033E               	decf	(_DimmerIntr1^(0+128)+5),w
 16184  0829  3AFF               	xorlw	255
 16185  082A  0741               	addwf	(_DimmerIntr1^(0+128)+8),w
 16186  082B  3E3C               	addlw	60
 16187  082C  00FA               	movwf	??_DimmerLights_IOC_1
 16188  082D  087A               	movf	??_DimmerLights_IOC_1,w
 16189  082E  00C2               	movwf	(_DimmerIntr1^(0+128)+9)
 16190                           
 16191                           ;Dimmer_B1.c: 1631: DimmerIntr1.TuneValue4 = DimmerIntr1.TuneValue3 + DimmerIntr1.TuneVa
      +                          lue2;
 16192  082F  0842               	movf	(_DimmerIntr1^(0+128)+9),w
 16193  0830  0741               	addwf	(_DimmerIntr1^(0+128)+8),w
 16194  0831  00FA               	movwf	??_DimmerLights_IOC_1
 16195  0832  087A               	movf	??_DimmerLights_IOC_1,w
 16196  0833  00C3               	movwf	(_DimmerIntr1^(0+128)+10)
 16197                           
 16198                           ;Dimmer_B1.c: 1632: DimmerIntr1.TuneEnd = DimmerIntr1.TuneValue4 + 5;
 16199  0834  0843               	movf	(_DimmerIntr1^(0+128)+10),w
 16200  0835  3E05               	addlw	5
 16201  0836  00FA               	movwf	??_DimmerLights_IOC_1
 16202  0837  087A               	movf	??_DimmerLights_IOC_1,w
 16203  0838  00C4               	movwf	(_DimmerIntr1^(0+128)+11)
 16204  0839                     i1l5469:	
 16205                           
 16206                           ;Dimmer_B1.c: 1633: }
 16207                           ;Dimmer_B1.c: 1637: DimmerIntr1.Status = RB2 == 1 ? 1 : 0;
 16208  0839  12BA               	bcf	(_DimmerIntr1^(0+128)+1),5
 16209  083A  0020               	movlb	0	; select bank0
 16210  083B  1D0D               	btfss	13,2	;volatile
 16211  083C  0008               	return
 16212  083D  0021               	movlb	1	; select bank1
 16213  083E  16BA               	bsf	(_DimmerIntr1^(0+128)+1),5
 16214  083F  0008               	return
 16215  0840                     __end_of_DimmerLights_IOC_1:	
 16216                           
 16217                           	psect	text115
 16218  07F2                     __ptext115:	
 16219 ;; *************** function i1_Division *****************
 16220 ;; Defined at:
 16221 ;;		line 1499 in file "../src/Dimmer_B1.c"
 16222 ;; Parameters:    Size  Location     Type
 16223 ;;  value           1    wreg     unsigned char 
 16224 ;;  num             1    5[COMMON] unsigned char 
 16225 ;; Auto vars:     Size  Location     Type
 16226 ;;  value           1    8[COMMON] unsigned char 
 16227 ;;  Division        1    9[COMMON] unsigned char 
 16228 ;; Return value:  Size  Location     Type
 16229 ;;                  1    wreg      unsigned char 
 16230 ;; Registers used:
 16231 ;;		wreg, status,2, status,0, pclath, cstack
 16232 ;; Tracked objects:
 16233 ;;		On entry : 0/0
 16234 ;;		On exit  : 0/0
 16235 ;;		Unchanged: 0/0
 16236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16237 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16238 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16239 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16240 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16241 ;;Total ram usage:        5 bytes
 16242 ;; Hardware stack levels used:    1
 16243 ;; Hardware stack levels required when called:    1
 16244 ;; This function calls:
 16245 ;;		i1___lbdiv
 16246 ;; This function is called by:
 16247 ;;		_DimmerLights_IOC_1
 16248 ;; This function uses a non-reentrant model
 16249 ;;
 16250                           
 16251                           
 16252                           ;psect for function i1_Division
 16253  07F2                     i1_Division:	
 16254                           
 16255                           ;incstack = 0
 16256                           ; Regs used in i1_Division: [wreg+status,2+status,0+pclath+cstack]
 16257                           ;i1Division@value stored from wreg
 16258  07F2  00F8               	movwf	i1Division@value
 16259                           
 16260                           ;Dimmer_B1.c: 1500: char result = (char) (value / num);
 16261  07F3  0875               	movf	i1Division@num,w
 16262  07F4  00F6               	movwf	??i1_Division
 16263  07F5  0876               	movf	??i1_Division,w
 16264  07F6  00F0               	movwf	i1___lbdiv@divisor
 16265  07F7  0878               	movf	i1Division@value,w
 16266  07F8  3194  24B2         	fcall	i1___lbdiv
 16267  07FA  00F7               	movwf	??i1_Division+1
 16268  07FB  0877               	movf	??i1_Division+1,w
 16269  07FC  00F9               	movwf	i1Division@result
 16270                           
 16271                           ;Dimmer_B1.c: 1501: return result;
 16272  07FD  0879               	movf	i1Division@result,w
 16273  07FE  0008               	return
 16274  07FF                     __end_ofi1_Division:	
 16275                           
 16276                           	psect	text116
 16277  14B2                     __ptext116:	
 16278 ;; *************** function i1___lbdiv *****************
 16279 ;; Defined at:
 16280 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lbdiv.c"
 16281 ;; Parameters:    Size  Location     Type
 16282 ;;  dividend        1    wreg     unsigned char 
 16283 ;;  divisor         1    0[COMMON] unsigned char 
 16284 ;; Auto vars:     Size  Location     Type
 16285 ;;  dividend        1    2[COMMON] unsigned char 
 16286 ;;  __lbdiv         1    4[COMMON] unsigned char 
 16287 ;;  __lbdiv         1    3[COMMON] unsigned char 
 16288 ;; Return value:  Size  Location     Type
 16289 ;;                  1    wreg      unsigned char 
 16290 ;; Registers used:
 16291 ;;		wreg, status,2, status,0
 16292 ;; Tracked objects:
 16293 ;;		On entry : 0/0
 16294 ;;		On exit  : 0/0
 16295 ;;		Unchanged: 0/0
 16296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16297 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16298 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16299 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16300 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16301 ;;Total ram usage:        5 bytes
 16302 ;; Hardware stack levels used:    1
 16303 ;; This function calls:
 16304 ;;		Nothing
 16305 ;; This function is called by:
 16306 ;;		i1_Division
 16307 ;; This function uses a non-reentrant model
 16308 ;;
 16309                           
 16310                           
 16311                           ;psect for function i1___lbdiv
 16312  14B2                     i1___lbdiv:	
 16313                           
 16314                           ;incstack = 0
 16315                           ; Regs used in i1___lbdiv: [wreg+status,2+status,0]
 16316                           ;i1___lbdiv@dividend stored from wreg
 16317  14B2  00F2               	movwf	i1___lbdiv@dividend
 16318  14B3  01F4               	clrf	i1___lbdiv@quotient
 16319  14B4  0870               	movf	i1___lbdiv@divisor,w
 16320  14B5  1903               	btfsc	3,2
 16321  14B6  2CD1               	goto	i1l4933
 16322  14B7  01F3               	clrf	i1___lbdiv@counter
 16323  14B8  0AF3               	incf	i1___lbdiv@counter,f
 16324  14B9                     i1l4921:	
 16325  14B9  1BF0               	btfsc	i1___lbdiv@divisor,7
 16326  14BA  2CC2               	goto	i1l4923
 16327  14BB  1003               	clrc
 16328  14BC  0DF0               	rlf	i1___lbdiv@divisor,f
 16329  14BD  3001               	movlw	1
 16330  14BE  00F1               	movwf	??i1___lbdiv
 16331  14BF  0871               	movf	??i1___lbdiv,w
 16332  14C0  07F3               	addwf	i1___lbdiv@counter,f
 16333  14C1  2CB9               	goto	i1l4921
 16334  14C2                     i1l4923:	
 16335  14C2  1003               	clrc
 16336  14C3  0DF4               	rlf	i1___lbdiv@quotient,f
 16337  14C4  0870               	movf	i1___lbdiv@divisor,w
 16338  14C5  0272               	subwf	i1___lbdiv@dividend,w
 16339  14C6  1C03               	skipc
 16340  14C7  2CCC               	goto	L7
 16341  14C8  0870               	movf	i1___lbdiv@divisor,w
 16342  14C9  02F2               	subwf	i1___lbdiv@dividend,f
 16343  14CA  1474               	bsf	i1___lbdiv@quotient,0
 16344  14CB  1003               	clrc
 16345  14CC                     L7:	
 16346  14CC  0CF0               	rrf	i1___lbdiv@divisor,f
 16347  14CD  3001               	movlw	1
 16348  14CE  02F3               	subwf	i1___lbdiv@counter,f
 16349  14CF  1D03               	btfss	3,2
 16350  14D0  2CC2               	goto	i1l4923
 16351  14D1                     i1l4933:	
 16352  14D1  0874               	movf	i1___lbdiv@quotient,w
 16353  14D2  0008               	return
 16354  14D3                     __end_ofi1___lbdiv:	
 16355  007E                     btemp	set	126	;btemp
 16356  007E                     pic14e$flags	set	126
 16357  007E                     wtemp	set	126
 16358  007E                     wtemp0	set	126
 16359  0080                     wtemp1	set	128
 16360  0082                     wtemp2	set	130
 16361  0084                     wtemp3	set	132
 16362  0086                     wtemp4	set	134
 16363  0088                     wtemp5	set	136
 16364  007F                     wtemp6	set	127
 16365  007E                     ttemp	set	126
 16366  007E                     ttemp0	set	126
 16367  0081                     ttemp1	set	129
 16368  0084                     ttemp2	set	132
 16369  0087                     ttemp3	set	135
 16370  007F                     ttemp4	set	127
 16371  007E                     ltemp	set	126
 16372  007E                     ltemp0	set	126
 16373  0082                     ltemp1	set	130
 16374  0086                     ltemp2	set	134
 16375  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         173
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     80      80
    BANK1            80      6      79
    BANK2            80      0      63
    BANK3            80      0      69
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    DimmerIntr	PTR struct Dimmer_Interrupt size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    Sw	PTR struct Switch size(1) Largest target is 9
		 -> NULL(NULL[0]), Sw1(BANK2[9]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK1[4]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 9
		 -> NULL(NULL[0]), DimmerLights1(BANK2[9]), 

    product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), _product(BANK3[32]), 

    DelayOff	PTR struct DelayOff size(1) Largest target is 5
		 -> NULL(NULL[0]), DlySw1(BANK2[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _TMR1_ISR->_DimmerLights_TMR_1
    _IOC_ISR->_DimmerLights_IOC_1
    _DimmerLights_IOC_1->i1_Division
    i1_Division->i1___lbdiv

Critical Paths under _main in BANK0

    _my_MainTimer->_setBuz
    _getTemp_AD->_getAD
    _getLoad_AD->_getAD
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_setProductData
    _Switch_Main->_setSw_Main
    _setSw_Main->_setDimmerLights_SwOn
    _setDimmerLights_DimmingOn->_DimmerLights_SelectPointer
    _Switch_Initialization->_setSw_Initialization
    _setSw_Initialization->_setLED
    _Mcu_Initialization->_WDT_Set
    _Load_Main->___lwdiv
    _Load_Initialization->_setLoad_AH_AL_Restore
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Flash_Memory_Main->_Flash_Memory_Modify
    _Flash_Memory_Modify->_Flash_Memory_Read
    _Flash_Memory_Initialization->_Flash_Memory_Read
    _Exception_Main->_setBuz
    _setDimmerLights_Main->_setDimmerLights_OnOff
    _setDimmerLights_OnOff->_setDelayOff_GO
    _setLED->_LedPointSelect
    _setDimmerLights_DimmingClose->_setDimmerIntr_Dimming_Sw
    _setDelayOff_GO->_setProductData
    _getDelayOff_GO->_DelayOffPointSelect
    _setDimmerLights_Dimming->_setDimmerIntr_MaxmumValue
    _setDimmerLights_Dimming->_setProductData
    _getDimmerLights_Allow_Condition->_getLoad_OK
    _DimmerLights_TwoPhase_Main->_DimmerLights_AssignationDimming
    _DimmerLights_AssignationDimming->_setDimmerIntr_MaxmumValue
    _setDimmerIntr_MaxmumValue->_getDimmerLights_PercentToValue
    _DimmerLights_Initialization->_DimmerIntr_Initialization
    _DimmerIntr_Initialization->_getDimmerLights_PercentToValue
    _DimmerIntr_Initialization->_getDimmerLights_ValueToPercent
    _getDimmerLights_ValueToPercent->___fttol
    _getDimmerLights_PercentToValue->___fttol
    ___fttol->___ftadd
    ___ftneg->___ftdiv
    ___ftneg->___ftmul
    ___ftmul->___awtoft
    ___ftdiv->___awtoft
    ___ftadd->___ftneg
    ___awtoft->___ftpack
    _Division->___lbdiv
    _DelayOff_Main->_DlyOff_Main
    _DlyOff_Main->_setProductData
    _setProductData->_getDimmerLights_ValueToPercent
    _setDimmerLights_SwOn->_setBuz
    _setBuz->___awdiv
    _setDimmerLights_SwOff->_DimmerLights_SelectPointer
    _getDimmerLights_Status->_DimmerLights_SelectPointer
    _DelayOff_Initialization->_DlyOff_Initialization
    _DlyOff_Initialization->_DelayOffPointSelect

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setDimmerLights_OnOff

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4   82747
                                              2 BANK1      4     0      4
              _Buzzer_Initialization
                        _Buzzer_Main
            _DelayOff_Initialization
                      _DelayOff_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
                     _Exception_Main
        _Flash_Memory_Initialization
                  _Flash_Memory_Main
                 _LED_Initialization
                           _LED_Main
                _Load_Initialization
                          _Load_Main
                 _Mcu_Initialization
              _Switch_Initialization
                        _Switch_Main
                _Temp_Initialization
                          _Temp_Main
                           _WDT_Main
                         _getLoad_AD
                         _getTemp_AD
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         1     1      0    1167
                                             13 BANK0      1     1      0
                             _setBuz
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           4     4      0     488
                                              4 BANK0      4     4      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getLoad_AD                                           8     8      0     585
                                              4 BANK0      8     8      0
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                4     1      3     222
                                              0 BANK0      4     1      3
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              0 BANK0      1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0    3145
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                        10    10      0    3145
                                             69 BANK0     10    10      0
                            ___lwdiv
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
                             _setBuz
            _setOverTemp_ADV_Restore
                     _setProductData
 ---------------------------------------------------------------------------------
 (3) _setOverTemp_ADV_Restore                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Switch_Main                                          0     0      0    1755
                         _TouchPower
                         _setSw_Main
 ---------------------------------------------------------------------------------
 (2) _setSw_Main                                           3     3      0    1755
                                             17 BANK0      3     3      0
                      _SwPointSelect
           _getMain_All_Error_Status
                    _getSw_KeyStatus
          _setDimmerLights_DimmingOn
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_DimmingOn                            1     1      0      44
                                              2 BANK0      1     1      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (3) _getSw_KeyStatus                                      4     4      0      48
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _SwPointSelect                                        2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _TouchPower                                           0     0      0       0
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Switch_Initialization                                0     0      0     865
               _setSw_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSw_Initialization                                 1     1      0     865
                                              4 BANK0      1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                            _IOC_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IOC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Load_Main                                           10    10      0    1611
                                              8 BANK0     10    10      0
                            ___lwdiv
                             ___wmul
    _getAll_DimmerIntr_Dimming_Sw_RF
                   _getDimmer_LoadGO
              _getDimmer_Load_Status
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
               _getMain_Lights_Count
              _setLoad_AH_AL_Restore
 ---------------------------------------------------------------------------------
 (2) _getMain_Lights_Count                                 2     2      0      25
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _getDimmer_Load_Status                                1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _getDimmer_LoadGO                                     1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _getAll_DimmerIntr_Dimming_Sw_RF                      1     1      0      24
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     270
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     696
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Load_Initialization                                  0     0      0      90
              _setLoad_AH_AL_Restore
 ---------------------------------------------------------------------------------
 (2) _setLoad_AH_AL_Restore                                2     2      0      90
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0      66
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0      66
                                              2 BANK0      3     3      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0     887
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0     887
                                              4 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Main                                    3     3      0    1640
                                              6 BANK0      3     3      0
                _Flash_Memory_Modify
                _getAll_Sw_KeyStatus
           _getMain_All_LightsStatus
 ---------------------------------------------------------------------------------
 (2) _getAll_Sw_KeyStatus                                  3     3      0      48
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _Flash_Memory_Modify                                  2     2      0    1520
                                              4 BANK0      2     2      0
               _Flash_Memory_Erasing
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                     _setMemory_Data
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Erasing                                 0     0      0       0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Initialization                          2     2      0    1430
                                              4 BANK0      2     2      0
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                     _setMemory_Data
 ---------------------------------------------------------------------------------
 (3) _setMemory_Data                                       3     2      1    1290
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Write                                   2     2      0      91
                                              0 BANK0      2     2      0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (4) _Flash_Memory_Unlock                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Read                                    4     4      0      48
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Exception_Main                                       9     9      0    2625
                                             13 BANK0      9     9      0
               _getDimmerLights_Line
             _getDimmerLights_Status
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
                             _setBuz
              _setDimmerLights_SwOff
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _getDimmerLights_Line                                 1     1      0      24
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0   36524
       _DimmerLights_DimmingFunction
         _DimmerLights_TwoPhase_Main
                         _getLoad_OK
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 1     1      0   35516
                                              1 BANK1      1     1      0
         _DimmerLights_SelectPointer
    _getDimmerLights_Allow_Condition
           _getMain_All_LightsStatus
            _setDimmerLights_Dimming
              _setDimmerLights_OnOff
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_OnOff                                4     3      1   20418
                                             77 BANK0      3     2      1
                                              0 BANK1      1     1      0
                      _getCmd_Status
                     _getDelayOff_GO
     _getDimmerLights_PercentToValue
           _getMain_All_LightsStatus
                      _setCmd_Status
                     _setDelayOff_GO
        _setDimmerIntr_ControlStatus
         _setDimmerIntr_DimmingValue
           _setDimmerIntr_Dimming_RF
          _setDimmerIntr_MaxmumValue
       _setDimmerLights_DimmingClose
               _setDimmerLights_Line
                             _setLED
                     _setProductData
 ---------------------------------------------------------------------------------
 (3) _setLED                                               2     1      1     821
                                              2 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (4) _LedPointSelect                                       2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_DimmingClose                         0     0      0     222
           _setDimmerIntr_Dimming_Sw
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_DimmingValue                           3     2      1     133
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_ControlStatus                          3     2      1     222
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (4) _setDelayOff_GO                                       8     6      2    1650
                                             69 BANK0      8     6      2
                _DelayOffPointSelect
                             ___bmul
                     _setProductData
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1     270
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) _setCmd_Status                                        3     2      1     133
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _getMain_All_LightsStatus                             1     1      0      24
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _getDelayOff_GO                                       2     2      0      67
                                              2 BANK0      2     2      0
                _DelayOffPointSelect
 ---------------------------------------------------------------------------------
 (4) _getCmd_Status                                        2     2      0      46
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Dimming                              4     3      1   14827
                                             69 BANK0      4     3      1
         _getDimmerIntr_DimmingValue
     _getDimmerLights_ValueToPercent
                             _setBuz
           _setDimmerIntr_Dimming_Sw
          _setDimmerIntr_MaxmumValue
               _setDimmerLights_Line
                   _setMemory_Modify
                     _setProductData
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Line                                 1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _setDimmerIntr_Dimming_Sw                             3     2      1     222
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (4) _getDimmerIntr_DimmingValue                           3     3      0      46
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _getDimmerLights_Allow_Condition                      4     4      0      71
                                              1 BANK0      3     3      0
                         _getLoad_OK
 ---------------------------------------------------------------------------------
 (4) _getLoad_OK                                           1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getMain_All_Error_Status                             7     7      0     161
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_TwoPhase_Main                           1     1      0     778
                                             72 BANK0      1     1      0
    _DimmerLights_AssignationDimming
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (3) _DimmerLights_AssignationDimming                      3     3      0     712
                                             69 BANK0      3     3      0
             _getDimmerLights_Status
           _setDimmerIntr_Dimming_RF
          _setDimmerIntr_MaxmumValue
                   _setMemory_Modify
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_MaxmumValue                            3     2      1     311
                                             66 BANK0      3     2      1
     _getDimmerLights_PercentToValue (ARG)
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_Dimming_RF                             3     2      1     222
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_DimmingFunction                         2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          0     0      0   27411
          _DimmerIntr_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _DimmerIntr_Initialization                            2     2      0   27411
                                             66 BANK0      2     2      0
                           _Division
     _getDimmerLights_PercentToValue
     _getDimmerLights_ValueToPercent
                   _setMemory_Modify
 ---------------------------------------------------------------------------------
 (4) _setMemory_Modify                                     2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _getDimmerLights_ValueToPercent                       6     6      0   11771
                                             60 BANK0      6     6      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (4) _getDimmerLights_PercentToValue                       6     6      0   15148
                                             60 BANK0      6     6      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     430
                                             46 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftneg                                              3     0      3     223
                                             30 BANK0      3     0      3
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    3377
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftdiv                                             16    10      6    3687
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             13     7      6    4221
                                             33 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___awtoft                                             6     3      3    3142
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2873
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) _Division                                             5     4      1     470
                                              5 BANK0      5     4      1
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              5     4      1     251
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Main                                        0     0      0    2414
                        _DlyOff_Main
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Main                                          3     3      0    2414
                                             69 BANK0      3     3      0
                _DelayOffPointSelect
             _getDimmerLights_Status
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
                     _setProductData
 ---------------------------------------------------------------------------------
 (3) _setProductData                                       3     2      1     845
                                             66 BANK0      3     2      1
     _getDimmerLights_ValueToPercent (ARG)
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOn                                 4     4      0    1326
                                             13 BANK0      4     4      0
         _DimmerLights_SelectPointer
           _getDimmerIntr_Dimming_Sw
                             _setBuz
 ---------------------------------------------------------------------------------
 (2) _setBuz                                               4     2      2    1167
                                              9 BANK0      4     2      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     478
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) _getDimmerIntr_Dimming_Sw                             2     2      0      46
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOff                                1     1      0      44
                                              2 BANK0      1     1      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (2) _getDimmerLights_Status                               2     2      0      67
                                              2 BANK0      2     2      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (4) _DimmerLights_SelectPointer                           2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Initialization                              0     0      0      44
              _DlyOff_Initialization
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Initialization                                1     1      0      44
                                              2 BANK0      1     1      0
                _DelayOffPointSelect
 ---------------------------------------------------------------------------------
 (5) _DelayOffPointSelect                                  2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Main                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  1     1      0     281
                                             12 COMMON     1     1      0
                            _IOC_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0       0
                 _DimmerLights_TMR_1
 ---------------------------------------------------------------------------------
 (9) _DimmerLights_TMR_1                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _IOC_ISR                                              0     0      0     281
                 _DimmerLights_IOC_1
 ---------------------------------------------------------------------------------
 (9) _DimmerLights_IOC_1                                   2     2      0     281
                                             10 COMMON     2     2      0
                         i1_Division
 ---------------------------------------------------------------------------------
 (10) i1_Division                                          5     4      1     281
                                              5 COMMON     5     4      1
                          i1___lbdiv
 ---------------------------------------------------------------------------------
 (11) i1___lbdiv                                           5     4      1     188
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Initialization
   _Buzzer_Main
   _DelayOff_Initialization
     _DlyOff_Initialization
       _DelayOffPointSelect
   _DelayOff_Main
     _DlyOff_Main
       _DelayOffPointSelect
       _getDimmerLights_Status
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOff
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOn
         _DimmerLights_SelectPointer
         _getDimmerIntr_Dimming_Sw
         _setBuz
           ___awdiv
       _setProductData
         _getDimmerLights_ValueToPercent (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
   _DimmerLights_Initialization
     _DimmerIntr_Initialization
       _Division
         ___lbdiv
       _getDimmerLights_PercentToValue
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
       _getDimmerLights_ValueToPercent
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
       _setMemory_Modify
     _setDimmerLights_Initialization
   _DimmerLights_Main
     _DimmerLights_DimmingFunction
     _DimmerLights_TwoPhase_Main
       _DimmerLights_AssignationDimming
         _getDimmerLights_Status
           _DimmerLights_SelectPointer
         _setDimmerIntr_Dimming_RF
         _setDimmerIntr_MaxmumValue
           _getDimmerLights_PercentToValue (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
         _setMemory_Modify
       _DimmerLights_SelectPointer
     _getLoad_OK
     _getMain_All_Error_Status
     _getMain_All_LightsStatus
     _setDimmerLights_Main
       _DimmerLights_SelectPointer
       _getDimmerLights_Allow_Condition
         _getLoad_OK
       _getMain_All_LightsStatus
       _setDimmerLights_Dimming
         _getDimmerIntr_DimmingValue
         _getDimmerLights_ValueToPercent
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setBuz
           ___awdiv
         _setDimmerIntr_Dimming_Sw
         _setDimmerIntr_MaxmumValue
           _getDimmerLights_PercentToValue (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
         _setDimmerLights_Line
         _setMemory_Modify
         _setProductData
           _getDimmerLights_ValueToPercent (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
       _setDimmerLights_OnOff
         _getCmd_Status
         _getDelayOff_GO
           _DelayOffPointSelect
         _getDimmerLights_PercentToValue
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _getMain_All_LightsStatus
         _setCmd_Status
         _setDelayOff_GO
           _DelayOffPointSelect
           ___bmul
           _setProductData
             _getDimmerLights_ValueToPercent (ARG)
               ___awtoft
                 ___ftpack
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
         _setDimmerIntr_ControlStatus
         _setDimmerIntr_DimmingValue
         _setDimmerIntr_Dimming_RF
         _setDimmerIntr_MaxmumValue
           _getDimmerLights_PercentToValue (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
         _setDimmerLights_DimmingClose
           _setDimmerIntr_Dimming_Sw
         _setDimmerLights_Line
         _setLED
           _LedPointSelect
         _setProductData
           _getDimmerLights_ValueToPercent (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
   _Exception_Main
     _getDimmerLights_Line
     _getDimmerLights_Status
       _DimmerLights_SelectPointer
     _getMain_All_Error_Status
     _getMain_All_LightsStatus
     _setBuz
       ___awdiv
     _setDimmerLights_SwOff
       _DimmerLights_SelectPointer
     _setLED
       _LedPointSelect
   _Flash_Memory_Initialization
     _Flash_Memory_Read
     _Flash_Memory_Write
       _Flash_Memory_Unlock
     _setMemory_Data
   _Flash_Memory_Main
     _Flash_Memory_Modify
       _Flash_Memory_Erasing
         _Flash_Memory_Unlock
       _Flash_Memory_Read
       _Flash_Memory_Write
         _Flash_Memory_Unlock
       _setMemory_Data
     _getAll_Sw_KeyStatus
     _getMain_All_LightsStatus
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _Load_Initialization
     _setLoad_AH_AL_Restore
   _Load_Main
     ___lwdiv
     ___wmul
     _getAll_DimmerIntr_Dimming_Sw_RF
     _getDimmer_LoadGO
     _getDimmer_Load_Status
     _getMain_All_Error_Status
     _getMain_All_LightsStatus
     _getMain_Lights_Count
     _setLoad_AH_AL_Restore
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IOC_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _Switch_Initialization
     _setSw_Initialization
       _setLED
         _LedPointSelect
   _Switch_Main
     _TouchPower
       _Timeout_Counter
       _set_TimeoutCleared
     _setSw_Main
       _SwPointSelect
       _getMain_All_Error_Status
       _getSw_KeyStatus
       _setDimmerLights_DimmingOn
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOff
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOn
         _DimmerLights_SelectPointer
         _getDimmerIntr_Dimming_Sw
         _setBuz
           ___awdiv
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       ___lwdiv
       _getMain_All_Error_Status
       _getMain_All_LightsStatus
       _setBuz
         ___awdiv
       _setOverTemp_ADV_Restore
       _setProductData
         _getDimmerLights_ValueToPercent (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
   _WDT_Main
     _WDT_Clearing
   _getLoad_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getTemp_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_MainTimer
     _setBuz
       ___awdiv

 _ISR (ROOT)
   _IOC_ISR
     _DimmerLights_IOC_1
       i1_Division
         i1___lbdiv
   _TMR1_ISR
     _DimmerLights_TMR_1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      6      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      3F       9       78.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      45      11       86.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     131      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     131      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Thu Mar 19 16:01:14 2015

                    __size_of_Switch_Main 0007                     ?_Flash_Memory_Erasing 0070  
                              __CFG_CP$ON 0000                              _WDT_Clearing 0002  
                   __end_of_setCmd_Status 13CB                            ___bmul@product 0022  
               getMain_Lights_Count@count 0020                                        l60 0A15  
                                      l70 086D                                        l72 087D  
                                      l58 0A01                                        l68 0883  
                                      l69 087F                                        _RD 0CA8  
                                      _WR 0CA9                              ___awdiv@sign 0026  
                                      _Sw 00D4                            setTemp_Main@AD 006D  
                     ___wmul@multiplicand 0022                      _getDimmerLights_Line 1183  
                  __end_of_setDelayOff_GO 0E22                              ___ftadd@exp1 004D  
                            ___ftadd@exp2 004C                      _setDimmerLights_Main 0BB2  
                    _setDimmerLights_Line 12AC                              ___ftadd@sign 004B  
                    _setDimmerLights_SwOn 088A                                       l248 0C82  
                                     l382 1246                                       l456 1550  
                                     l369 0A4D                                       l583 17EA  
                                     l496 0F26                                       l920 15AD  
                                     l585 17DF                                       l594 17FE  
                                     l930 0D07                                       l906 176F  
                                     l588 17E8                                       _GIE 005F  
                                     _RA0 0060                                       _RB0 0068  
    __size_of_DimmerLights_Initialization 0007                                       _RB1 0069  
                                     _RB2 006A                                       _RA4 0064  
                                     _LED 00D2                                       _RB3 006B  
                                     _RA6 0066                                       _RB5 006D  
                                     _RA7 0067                                       _ISR 0004  
                                     _WDT 00CD                                       _Cmd 00CF  
            getDimmerLights_Status@lights 0022                                       _Sw1 0151  
              ??_setDimmerIntr_Dimming_RF 0021                ??_setDimmerIntr_Dimming_Sw 0021  
         setDimmerIntr_Dimming_RF@command 0020                     _Buzzer_Initialization 10DE  
                         __end_of_ADC_Set 112A                                       wreg 0009  
    setDimmerLights_Initialization@lights 0070              getDimmerLights_Status@status 0023  
     __end_of_setDimmerIntr_ControlStatus 13B2               _setDimmerIntr_ControlStatus 139A  
                       ??_getSw_KeyStatus 0020                                      ?_ISR 0070  
                            ___ftdiv@cntr 0038                           __end_of_IOC_ISR 1152  
                   _setDimmerLights_OnOff 0EAF                                Load_Main@i 0030  
                            ___ftdiv@sign 003D                                      l1101 1613  
                                    l2013 0ABA                                      l1222 01F5  
                                    l1128 0601                                      l1232 01D1  
                                    l1224 0081                                      l1137 13CA  
                                    l1233 01CF                                      l1225 007D  
                                    l1073 1732                                      l2042 0406  
                                    l1226 0078                                      l2019 0AD1  
                                    l1096 15FC                                      l1097 1617  
                                    l1372 047F                                      l1366 052C  
                                    l5001 160E                                      l1705 1348  
                          _Load_Main$3523 002A                           __end_of_IOC_Set 11A4  
                                    l1725 035F                                      l5015 1365  
                                    l1727 0243                                      l5211 12A6  
                                    l1852 145D                                      l4341 0A90  
                                    l5037 0EF5                                      l5045 0F06  
                                    l6101 0080                                      l6005 07ED  
                                    l6021 0E53                                      l4415 093E  
                                    l4511 0418                                      l5039 0EFF  
                                    l5311 0BD9                                      l4441 0975  
                                    l4433 0964                                      l4425 0946  
                                    l4409 0933                                      l4345 0A97  
                                    l4505 03F8                                      l5313 0BE0  
                                    l5153 1595                                      l6033 0E98  
                                    l6025 0E6A                                      l4427 0952  
                                    l4355 0ABF                                      l4347 0AA1  
                                    l4515 042A                                      l4507 0402  
                                    l4611 0758                                      l5059 0F35  
                                    l5323 0C07                                      l5235 1676  
                                    l5227 1658                                      l6123 00D6  
                                    l6051 1712                                      l4437 096D  
                                    l4357 0AC7                                      l4349 0AA6  
                                    l4453 1500                                      l4525 0445  
                                    l4541 0F84                                      l5077 178C  
                                    l5325 0C0E                                      l5229 1664  
                                    l6117 00A4                                      l6029 0E81  
                                    l4535 0F6E                                      l4607 0750  
                                    l5351 17E1                                      l4391 12D9  
                                    l5239 167F                                      l6215 01E4  
                                    l4801 1228                                      l4465 038F  
                                    l4475 03A5                                      l4563 0FDE  
                                    l4555 0FC5                                      l4635 0D28  
                                    l4387 12D3                                      l6243 054E  
                                    l6155 0168                                      l6163 0191  
                                    l6083 005F                                      l4493 03D2  
                                    l4469 0396                                      l4661 0D73  
                                    l4653 0D58                                      l5373 09A8  
                                    l6261 0594                                      l6253 056D  
                                    l6149 0159                                      l5541 147D  
                                    l4495 03DC                                      l4487 03BF  
                                    l4583 06F9                                      l4663 0D7C  
                                    l4655 0D66                                      l5359 17F7  
                                    l5375 09B9                                      l4743 0E18  
                                    l6263 0570                                      l6159 0185  
                                    l5543 1480                                      l4497 03E1  
                                    l4577 06E3                                      l4665 0D7F  
                                    l4729 0DD4                                      l6281 05B1  
                                    l6265 059C                                      l6249 055E  
                                    l6169 01A1                                      l5705 134D  
                                    l5641 0482                                      l4907 14F3  
                                    l4499 03E5                                      l4595 0734  
                                    l4739 0E04                                      l4851 1645  
                                    l4843 1631                                      l5387 118B  
                                    l6283 05DD                                      l6291 05F7  
                                    l6179 01B7                                      l5723 022D  
                                    l5547 1485                     _setDimmerLights_SwOff 16BE  
                                    l5813 0857                                      l4669 0D8D  
                                    l4837 1628                                      l6285 05E7  
                                    l5709 1353                                      l4951 08C4  
                                    l4599 073C                                      l4863 12C9  
                                    l4871 13B5                                      l6279 05D5  
                                    l5567 1284                                      l5647 0491  
                                    l4953 08CE                                      l4865 12CE  
                                    l5593 0D00                                      l5585 0CA5  
                                    l5649 0494                                      l4859 12C2  
                                    l4875 13C4                                      l5579 0C90  
                                    l5739 0276                                      l5691 051A  
                                    l6395 08F4                                      l4965 16EB  
                                    l4949 08BE                                      l5925 174E  
                                    l5757 02DC                                      l5749 02AB  
                                    l5765 030C                                      l4895 14DB  
                                    l4991 15F7                                      l5679 0503  
                                    l6399 08FF                                      l4897 14E4  
                                    l4993 1600                                      l5849 1552  
                                    l5793 1457                                      l5689 0518  
                                    l5985 07BE                                      l5977 079F  
                                    l5899 0684                                      l5989 07C6  
                   _myMain_Initialization 1319                                      _CFGS 0CAE  
                            __CFG_WDTE$ON 0000                                      _FREE 0CAC  
                                    _LATA 010C                                      _LATB 010D  
                                    _LATC 010E                                      u4005 03D3  
                                    u4035 03E6                                      u4135 0F96  
                                    u4215 0705                                      u4065 03F9  
                                    u4145 0FA6                                      u4225 0715  
                                    u5025 133B                                      u4155 0FC6  
                                    u4165 0FD5                                      u4245 073D  
                                    u4175 0FDF                                      u4255 0743  
                                    u4335 0D2F                                      u5135 165B  
                                    u5055 140B                                      u3625 0A9C  
                                    u4505 0DE0                                      u7010 059A  
                                    u5155 1665                                      _PEIE 005E  
                                    u3805 0949                                      u3645 0AB5  
                                    u4285 0759                                      u4365 0D59  
                                    u5165 166F                                      u4295 075F  
                                    u7015 0579                                      u5175 1677  
                                    u7040 05DB                                      u3825 0953  
                                    u3665 0AC2                                      u3835 095D  
                                    u4395 0D74                                      u6155 145E  
                                    u3845 0965                                      u7045 05BA  
                                    u6165 1463                                      u3695 0AD8  
                                    u6505 07DD                                      u6195 084D  
                                    u3975 03C0                                      u6455 07AE  
                                    u5905 04EC                                      u6395 1766  
                                    u6555 0E46                                      u6635 172A  
                                    u5925 050A                                      u6565 0E5D  
                                    u6575 0E74                                      u6585 0E8B  
                                    u6595 0EA2                                      u5885 04D5  
                                    u6775 00A2                                      u6785 00D4  
                                    u6875 0198                                      u6795 0118  
                                    _LWLO 0CAD                                      _WREN 0CAA  
                                    _WPUB 020D                                      _Buz1 00AD  
                                    _Load 0120                                      _Temp 00D6  
                                    _main 08D6                              ___ftpack@arg 0020  
                     __end_of_DlyOff_Main 0C89                              ___ftpack@exp 0023  
                                    fsr0h 0005                                      fsr1h 0007  
                                    fsr0l 0004                                      indf0 0000  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                           __end_of_WDT_Set 11AF  
                                    ltemp 007E                                      start 001F  
                                    ttemp 007E                                      wtemp 007E  
       setDimmerLights_SwOn@dimmingStatus 002F      __end_of_DimmerLights_DimmingFunction 1800  
   __size_of_DimmerLights_DimmingFunction 0046              _DimmerLights_DimmingFunction 17BA  
                       ___bmul@multiplier 0023                              ___ftmul@cntr 003C  
                            ___ftmul@sign 003D              __size_of_Temp_Initialization 0003  
    _getDimmerLights_Allow_Condition$1981 0023                         ?_getDimmer_LoadGO 0070  
                                   ??_ISR 007C                              ___fttol@exp1 005B  
                            ___fttol@lval 0057   __end_of_getDimmerLights_Allow_Condition 136C  
__size_of_getDimmerLights_Allow_Condition 0016         ??_getDimmerLights_Allow_Condition 0021  
        ?_getDimmerLights_Allow_Condition 0070           _getDimmerLights_Allow_Condition 1356  
                  _getDimmerLights_Status 1248                        ??_getDimmer_LoadGO 0020  
                        __end_of_LED_Main 10F7                     ?_getDimmerLights_Line 0070  
                              _DimmerIntr 00D1                     ?_setDimmerLights_Main 0070  
                   ?_setDimmerLights_Line 0070                           ?_setDelayOff_GO 0065  
                   ?_setDimmerLights_SwOn 0070                                     ?_main 00EA  
                         __end_of___awdiv 097C                           __end_of___lbdiv 14F5  
                         __end_of___ftadd 045D                           __end_of___ftdiv 1000  
                         __end_of___ftneg 115B                           __end_of___ftmul 0780  
                         ___awdiv@divisor 0020                                     _T1CON 0018  
                         __end_of___fttol 0D96                                     _IOCBF 0396  
                                   _IOCBN 0395                                     _IOCBP 0394  
                                   _IOCIE 005B                                     _IOCIF 0058  
                         __end_of___lwdiv 1686                                     i1l553 16AC  
                                   i1l869 001A                           ___awdiv@counter 0025  
                                   _TMR1H 0017                                     _TMR1L 0016  
                                   _PORTA 000C                                     _PORTB 000D  
                                   _PORTC 000E                              ?_setLED_Main 0070  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E                   __end_of_Timeout_Counter 1341  
                           __CFG_WRT$HALF 0000    __end_of_getDimmerLights_ValueToPercent 0BB2  
 __size_of_getDimmerLights_ValueToPercent 0065            _getDimmerLights_ValueToPercent 0B4D  
                                   _Light 00D3                           i1Division@value 0078  
                        __end_of_TMR1_ISR 1454                               ?i1_Division 0075  
                 __size_of_setProductData 000C                          __end_of_TMR1_Set 120F  
      DimmerLights_DimmingFunction@lights 0021                                     _getAD 1472  
                           ___awtoft@sign 002D                             ___ftpack@sign 0024  
                           ??_Buzzer_Main 0020                          __end_of_WDT_Main 1306  
                          __CFG_BOREN$OFF 0000              __end_of_getMain_Lights_Count 1199  
                      Flash_Memory_Read@i 0021                                     ltemp0 007E  
                                   ltemp1 0082                                     ltemp2 0086  
                                   ltemp3 0080            __size_of_setLED_Initialization 0011  
           __end_of_setLED_Initialization 129B                                     ttemp0 007E  
                                   ttemp1 0081                                     ttemp2 0084  
                                   ttemp3 0087                                     ttemp4 007F  
                                   status 0003                                     wtemp0 007E  
                                   wtemp1 0080                                     wtemp2 0082  
                                   wtemp3 0084                                     wtemp4 0086  
                                   wtemp5 0088                                     wtemp6 007F  
                      __size_ofi1___lbdiv 0021                       _getAll_Sw_KeyStatus 1279  
                         ___lbdiv@divisor 0020               __size_of_Flash_Memory_Write 002F  
                         ___lbdiv@counter 0023          __size_of_DelayOff_Initialization 0004  
                  ?_setLoad_AH_AL_Restore 0070                         setTemp_Main@error 0067  
                  ??_Flash_Memory_Erasing 0020               ??_setDimmerLights_DimmingOn 0022  
                         __initialization 0021             ?_DimmerLights_DimmingFunction 0070  
                       ?_setMemory_Modify 0070                          __end_of_Division 1239  
                 __size_of_getDelayOff_GO 0011                              __end_of_main 0928  
                        __end_of_Fosc_Set 10FB            getMain_All_LightsStatus@status 0020  
                      ??_setMemory_Modify 0020              setDimmerLights_OnOff@command 006D  
                          _Exception_Main 0530                                 ??_ADC_Set 0020  
                    _setSw_Initialization 1258                                    ??_main 0070  
                           ___fttol@sign1 0056                      ?_getAll_Sw_KeyStatus 0070  
             ?_setDimmerIntr_DimmingValue 0020              ??_DimmerLights_SelectPointer 0020  
                          _setMemory_Data 11EB                    ?_Buzzer_Initialization 0070  
                 ??_DlyOff_Initialization 0022        setDimmerIntr_ControlStatus@command 0020  
                 _setDimmerLights_Dimming 1775                                 ??_IOC_ISR 007C  
                               ??_IOC_Set 0020                               _DimmerIntr1 00B9  
                _getMain_All_LightsStatus 1164                   ??_Switch_Initialization 0025  
                  ?_setDimmerLights_OnOff 006D                                    ?_getAD 0020  
                  ?_setDimmerLights_SwOff 0070                               _DlyOff_Main 0C1A  
                  ?_myMain_Initialization 0070                                    _ADCON0 009D  
                                  _ADCON1 009E          __end_of_getDimmerIntr_Dimming_Sw 122A  
             ?_DimmerLights_TwoPhase_Main 0070                                    _ADRESH 009C  
                                  _ADRESL 009B                          ___awdiv@dividend 0022  
                   _getDimmer_Load_Status 1141                                 ??_WDT_Set 0020  
                        __end_of___awtoft 1517                                    _ANSELA 018C  
                                  _ANSELB 018D                                    _ANSELC 018E  
                        __end_of___ftpack 0AE8                  _getMain_All_Error_Status 15E6  
                                  _IOCBF2 1CB2                                    i1l5413 1693  
                                  i1l5425 16A2                                    i1l5419 169A  
                                  i1l4921 14B9                                    i1l4923 14C2  
                                  i1l4933 14D1                                    i1l5469 0839  
                                  i1l6365 0012                                    i1l5871 144D  
                                  i1l5881 114E                                    _FVRCON 0117  
    getDimmerLights_Allow_Condition@allow 0022                                    _PMADRH 0192  
                                  _PMADRL 0191                                    _PMDATH 0194  
                                  _PMDATL 0193                                    _PMCON2 0196  
                                  _OSCCON 0099                                    u629_25 1448  
                      __size_of_Load_Main 01B2                                    _TMR1IE 0488  
                                  _TMR1IF 0088                                    _IO_Set 13E5  
                                  _WDTCON 0097      __end_of_setDimmerLights_DimmingClose 1110  
   __size_of_setDimmerLights_DimmingClose 0006              _setDimmerLights_DimmingClose 110A  
                    Exception_Main@i_3198 0032               ??_setDimmerIntr_MaxmumValue 0063  
                                  _Dimmer 00C5                                    _DlySw1 015A  
                ?_setOverTemp_ADV_Restore 0070                     __end_of_getCmd_Status 12D0  
              __end_of_Mcu_Initialization 12F4                       __end_of_Buzzer_Main 088A  
                                  _Memory 01A0                          i1Division@result 0079  
                                  _Timer1 00CA                                    ___bmul 12D0  
                  __end_of_Exception_Main 0602                      Exception_Main@lights 0035  
                                  ___wmul 1454                       __size_ofi1_Division 000D  
                               ??___awdiv 0024                                 ??___lbdiv 0021  
                               ??___ftadd 0047              __size_of_DelayOffPointSelect 000C  
                               ??___ftdiv 0034                                 ??___ftneg 0041  
                               ??___ftmul 0034                                 ??___fttol 0052  
            ?_Flash_Memory_Initialization 0070                    ??_getDimmerLights_Line 0020  
                               ??___lwdiv 0024                    ??_setDimmerLights_Main 0070  
                  ??_setDimmerLights_Line 0020                      Exception_Main@status 002E  
 __end_of_getAll_DimmerIntr_Dimming_Sw_RF 1178  __size_of_getAll_DimmerIntr_Dimming_Sw_RF 000A  
       ??_getAll_DimmerIntr_Dimming_Sw_RF 0020          ?_getAll_DimmerIntr_Dimming_Sw_RF 0070  
         _getAll_DimmerIntr_Dimming_Sw_RF 116E                    ??_setDimmerLights_SwOn 002D  
                                  _setLED 1619                                    _myMain 00A0  
                  __end_of_setMemory_Data 11F7                     ?_setSw_Initialization 0070  
                        ___awdiv@quotient 0027                                    _setBuz 09D0  
                      __size_of_Temp_Main 0003                      Load_Main@LightsCount 002F  
             __end_of_Load_Initialization 10E4          ??_setDimmerLights_Initialization 0020  
         ?_setDimmerLights_Initialization 0070                     ??_getAll_Sw_KeyStatus 0020  
        __end_of_setDimmerIntr_Dimming_RF 139A          __end_of_setDimmerIntr_Dimming_Sw 1382  
                   ___ftmul@f3_as_product 0039                         __end_ofi1___lbdiv 14D3  
               _setDimmerLights_DimmingOn 155E                  Flash_Memory_Read@address 0022  
                        ?_Timeout_Counter 0070               getMain_Lights_Count@status1 0021  
             __size_of_DimmerLights_IOC_1 003D                     __end_of_SwPointSelect 121B  
             __size_of_DimmerLights_TMR_1 0038              __size_of_Flash_Memory_Modify 0086  
                 __size_of_LedPointSelect 000C           setDimmerIntr_Dimming_Sw@command 0020  
                      setTemp_Main@TempGO 006C                          ___lbdiv@dividend 0022  
                     Flash_Memory_Write@i 0021              __size_of_Flash_Memory_Unlock 0009  
                              _TouchPower 1341                   __end_of__initialization 0045  
         getDimmerIntr_DimmingValue@value 0022           setDimmerIntr_DimmingValue@value 0020  
                               ?_LED_Main 0070                                ___ftadd@f1 0041  
                              ___ftadd@f2 0044                             ?_my_MainTimer 0070  
                              ___ftdiv@f1 0031                                ___ftdiv@f2 002E  
                              ___ftdiv@f3 0039             ?_setDimmerLights_DimmingClose 0070  
                              ___ftneg@f1 003E                                ___awtoft@c 0028  
                     ___bmul@multiplicand 0020              ?_DimmerLights_Initialization 0070  
                              ___ftmul@f1 002E                                ___ftmul@f2 0031  
              ?_DimmerIntr_Initialization 0070                                ___fttol@f1 004E  
                          __pcstackCOMMON 0070                           ?_Exception_Main 0070  
                            __pidataBANK3 1492                             __end_of_getAD 1492  
                               ?_TMR1_ISR 0070                                 ?_TMR1_Set 0070  
                  setLoad_AH_AL_Restore@i 0021                        _LED_Initialization 10EF  
                         _getSw_KeyStatus 129B     DimmerLights_AssignationDimming@status 0066  
                         ?_setMemory_Data 0020            ??_DimmerLights_DimmingFunction 0020  
        ??_getDimmerLights_PercentToValue 005C           ?_getDimmerLights_PercentToValue 0070  
               ??_setDimmerLights_Dimming 0066             ??_Flash_Memory_Initialization 0024  
                        ___lbdiv@quotient 0024                      _getMain_Lights_Count 118E  
                               ?_WDT_Main 0070                         __end_of_Load_Main 01FB  
       setDimmerIntr_ControlStatus@lights 0022                 _setDimmerIntr_MaxmumValue 11C7  
              __end_of_set_TimeoutCleared 1104           setDimmerIntr_MaxmumValue@lights 0064  
                     ?_LED_Initialization 0070                            _setProductData 11BB  
                    __size_of_setLED_Main 0032                    ?_getDimmer_Load_Status 0070  
                                 ??_getAD 0023                       _Temp_Initialization 10E4  
                               ?_Division 0025                                __pbssBANK1 00A0  
                              __pbssBANK2 0120                                __pbssBANK3 01A0  
                               ?_Fosc_Set 0070                               _Buzzer_Main 0840  
                       __end_of_Temp_Main 0803                                   ?_IO_Set 0070  
                          ??_my_MainTimer 002D                                ??_LED_Main 0025  
                         __CFG_VCAPEN$OFF 0000                   _DelayOff_Initialization 10E7  
                           ??_Switch_Main 0034                      ??_LED_Initialization 0025  
                            _DimmerLights 007D                         LedPointSelect@led 0021  
   getAll_DimmerIntr_Dimming_Sw_RF@status 0020                    __size_of_DelayOff_Main 0004  
                             setBuz@count 002C                   ?_getDimmerLights_Status 0070  
                              __pmaintext 08D6                            _getDelayOff_GO 1268  
                    ?_Temp_Initialization 0070                                   ?___bmul 0020  
                        ??_setDelayOff_GO 0067         __end_of_DimmerIntr_Initialization 0A87  
           ??_DimmerLights_Initialization 0064                                   ?___wmul 0020  
                              ??_TMR1_ISR 0071                             ?_setTemp_Main 0070  
       __size_of_getDimmerIntr_Dimming_Sw 000F                                _getLoad_AD 0780  
                              ??_TMR1_Set 0020                                __pintentry 0004  
                  ??_setSw_Initialization 0024                                _getLoad_OK 1131  
               ?_getDimmerIntr_Dimming_Sw 0070                                   ?_setLED 0022  
     __size_of_DimmerLights_TwoPhase_Main 0054                     ?_getMain_Lights_Count 0070  
                                 _ADC_Set 1123                                   ?_setBuz 0029  
                               ?___awtoft 0028                                 ?___ftpack 0020  
                              _getTemp_AD 0E22        __end_of_DimmerLights_SelectPointer 1183  
              _DimmerLights_SelectPointer 1178                                ??_WDT_Main 0020  
                  __end_of_setProductData 11C7             setDimmerLights_Dimming@lights 0068  
                                 _IOC_ISR 1149                                   _IOC_Set 1199  
           setDimmerLights_Dimming@status 0065     getDimmerLights_Allow_Condition@lights 0070  
                            ??i1_Division 0076                         _Flash_Memory_Main 1734  
               __size_of_getDimmer_LoadGO 0008                         _Flash_Memory_Read 13CB  
                      ?_Flash_Memory_Main 0070                        ?_Flash_Memory_Read 0070  
                              ??_Division 0026                                   _WDT_Set 11A4  
                  __size_of_setCmd_Status 0019                                ??_Fosc_Set 0020  
                             ?_TouchPower 0070           __end_of_setDimmerLights_Dimming 17BA  
                 ??_setLoad_AH_AL_Restore 0020                       getCmd_Status@number 0020  
                         __size_of_IO_Set 001A                       setCmd_Status@number 0022  
       __size_of_setDimmerIntr_Dimming_RF 0018         __size_of_setDimmerIntr_Dimming_Sw 0016  
               ?_setDimmerIntr_Dimming_RF 0020                       ??_Flash_Memory_Main 0026  
               ?_setDimmerIntr_Dimming_Sw 0020                       ??_Flash_Memory_Read 0020  
                  __end_of_getDelayOff_GO 1279            __end_of_getDimmerLights_Status 1258  
                 __end_of_getSw_KeyStatus 12AC                     ??_Temp_Initialization 0020  
                          ??_setTemp_Main 0065                           __size_of___bmul 0012  
                     setProductData@value 0062                                   ___awdiv 0928  
          ??_setDimmerLights_DimmingClose 0023                                   ___lbdiv 14D3  
                                 ___ftadd 0367                                   ___ftdiv 0F57  
                                 ___ftneg 1152                           __size_of___wmul 001E  
                                 ___ftmul 06CC                                   ___fttol 0D0F  
                     __end_of_Switch_Main 1131                        __end_ofi1_Division 07FF  
                                 ___lwdiv 164F                ??_getMain_All_LightsStatus 0020  
                 ??_Buzzer_Initialization 0020                                ??___awtoft 002B  
                              ??___ftpack 0025                           __size_of_setLED 0036  
                         __size_of_setBuz 0059                                   __ptext1 16F8  
                                 __ptext2 1319                                   __ptext3 0E22  
                                 __ptext4 0780                                   __ptext5 1472  
                                 __ptext6 12F4                                   __ptext7 0002  
                                 __ptext8 0800                                   __ptext9 045D  
                            __size_of_ISR 001B                ??_getMain_All_Error_Status 0020  
                 ??_setDimmerLights_OnOff 006E                           ?_setProductData 0062  
                      i1___lbdiv@dividend 0072                 __end_of_Flash_Memory_Main 1775  
               __end_of_Flash_Memory_Read 13E5                   ??_setDimmerLights_SwOff 0022  
                 ??_myMain_Initialization 0020                             _DelayOff_Main 10EB  
                       _DimmerLights_Main 153A            __size_of_DlyOff_Initialization 0006  
               __size_of_setMemory_Modify 0013             __end_of_DlyOff_Initialization 110A  
                ??_setTemp_Initialization 0020                              ?_DlyOff_Main 0070  
                      ?_DimmerLights_Main 0070                                   _product 00EE  
                          _LedPointSelect 11DF                 getAll_Sw_KeyStatus@status 0021  
                         getTemp_AD@ADRES 0026                       _DelayOffPointSelect 11AF  
                                 clrloop0 1117            __size_of_Switch_Initialization 0004  
           __end_of_Switch_Initialization 10FF                      end_of_initialization 0045  
               ??_DelayOff_Initialization 0023                __end_of_Flash_Memory_Write 15B4  
      __size_of_setDimmerLights_DimmingOn 0027                                   init_ram 1110  
                     ??_DimmerLights_Main 0070                      Flash_Memory_Read@ret 0023  
                                 initloop 1111                                _setSw_Main 01FB  
                  setDimmerLights_SwOn@sw 0030                      Flash_Memory_Modify@i 0025  
                   _setLED_Initialization 128A                           ?_getDelayOff_GO 0070  
                      i1___lbdiv@quotient 0074             __size_of_Flash_Memory_Erasing 000C  
                    ?_DelayOffPointSelect 0070                       _Flash_Memory_Modify 0C89  
                             ?_getLoad_AD 0070                               ?_getLoad_OK 0070  
                  ??_getMain_Lights_Count 0020                             _setCmd_Status 13B2  
                     _Flash_Memory_Unlock 115B                               ?_getTemp_AD 0070  
                     __size_of_TouchPower 0015                  setLED_Initialization@led 0024  
                 setTemp_Main@DangerValue 006A                    setSw_Initialization@sw 0024  
               __end_of_DimmerLights_Main 155E                        _Mcu_Initialization 12E2  
        __size_of_setOverTemp_ADV_Restore 001B                      __end_of_my_MainTimer 1734  
                          ?_DelayOff_Main 0070                          __CFG_FOSC$INTOSC 0000  
                  __end_of_LedPointSelect 11EB                  Load_Main@ErrorCountValue 002D  
        setDimmerIntr_DimmingValue@lights 0022          getDimmerIntr_DimmingValue@lights 0021  
                               i1___lbdiv 14B2                       ?_Mcu_Initialization 0070  
                    ?_Flash_Memory_Modify 0070         DimmerLights_AssignationDimming@sw 0067  
                    ?_Flash_Memory_Unlock 0070        __size_of_setDimmerIntr_MaxmumValue 000C  
          setDimmerIntr_Dimming_RF@lights 0022           getMain_All_Error_Status@command 0025  
                             ___ftdiv@exp 003C         __end_of_setDimmerLights_DimmingOn 1585  
                        ??_Exception_Main 002D                             i1Division@num 0075  
                          __end_of_IO_Set 13FF                               _Switch_Main 112A  
                       __size_of_LED_Main 0004                          ?_getSw_KeyStatus 0070  
                        ??_setMemory_Data 0021                               ___ftmul@exp 0038  
             ??_DimmerIntr_Initialization 0062                      ??_Mcu_Initialization 0021  
             __end_of_getAll_Sw_KeyStatus 128A                     ??_DelayOffPointSelect 0020  
                           ?_WDT_Clearing 0070                            ?_setCmd_Status 0020  
                          __end_of___bmul 12E2       __size_of_getDimmerIntr_DimmingValue 000F  
        DimmerLights_TwoPhase_Main@lights 0068                            __end_of___wmul 1472  
                       getSw_KeyStatus@sw 0070                         __size_of_TMR1_ISR 001E  
           __size_of_getDimmerLights_Line 000B          DimmerLights_SelectPointer@lights 0021  
                       __size_of_TMR1_Set 000C             __size_of_setDimmerLights_Main 0068  
                          __end_of_setLED 164F             __size_of_setDimmerLights_Line 0012  
           __size_of_setDimmerLights_SwOn 004C                            __end_of_setBuz 0A29  
              __end_of_DimmerLights_IOC_1 0840                   ??_getDimmer_Load_Status 0020  
              __size_of_Flash_Memory_Main 0041                __size_of_Flash_Memory_Read 001A  
                       __size_of_WDT_Main 0012                __end_of_DimmerLights_TMR_1 16BE  
                     start_initialization 0021                           ?_LedPointSelect 0070  
                               _Load_Main 0049                               __end_of_ISR 001F  
                  __size_of_getCmd_Status 0012                          _getDimmer_LoadGO 1139  
                   ??_Flash_Memory_Modify 0024              __size_of_Load_Initialization 0003  
                              ?i1___lbdiv 0070              ?_setDimmerIntr_ControlStatus 0020  
         __size_of_setTemp_Initialization 0001                     ??_Flash_Memory_Unlock 0020  
                    __end_of_setTemp_Main 0530    __end_of_getDimmerLights_PercentToValue 0B4D  
 __size_of_getDimmerLights_PercentToValue 0065            _getDimmerLights_PercentToValue 0AE8  
                     __size_of_getLoad_AD 0072                              ?_Buzzer_Main 0070  
     getDimmerLights_PercentToValue@value 005E                       __size_of_getLoad_OK 0008  
                      _set_TimeoutCleared 10FF         __end_of_setDimmerIntr_MaxmumValue 11D3  
                                ??_IO_Set 0020                  __size_of_Timeout_Counter 0015  
                               _VarErrLED 00E4                         __size_of_Division 000F  
                             ?_setSw_Main 0070                       __size_of_getTemp_AD 008D  
                  ?_setLED_Initialization 0070                         __size_of_Fosc_Set 0004  
                               _Temp_Main 0800                       ?_set_TimeoutCleared 0070  
                          ??_WDT_Clearing 0020                     setProductData@address 0064  
                     Exception_Main@count 002F                       Exception_Main@error 0034  
                                ??___bmul 0021                                  ??___wmul 0024  
                  __size_of_SwPointSelect 000C          __end_of_getMain_All_LightsStatus 116E  
                             __pdataBANK3 01C5                                  ??_setLED 0023  
                                ?_ADC_Set 0070                                  ??_setBuz 002B  
                         ??_DelayOff_Main 0068               ?_DimmerLights_SelectPointer 0070  
        __end_of_getMain_All_Error_Status 1619                __size_of_DimmerLights_Main 0024  
                      setMemory_Data@data 0020            setDimmerIntr_Dimming_Sw@lights 0022  
          getDimmerIntr_Dimming_Sw@lights 0020                             ??_setLED_Main 0022  
                       __size_of___awtoft 0022                         __size_of___ftpack 0061  
                                ?_IOC_ISR 0070                               __pbssCOMMON 007D  
                                ?_IOC_Set 0070                   Load_Main@Load_RunStatus 002E  
          getDimmerIntr_Dimming_Sw@status 0021                                 ___latbits 0003  
                        _setMemory_Modify 1306                                ?_Load_Main 0070  
                           __pcstackBANK0 0020                             __pcstackBANK1 00E8  
                    ??_set_TimeoutCleared 0020                 _DimmerIntr_Initialization 0A29  
                           DlyOff_Main@sw 0067                                  ?_WDT_Set 0070  
           ??_setDimmerIntr_ControlStatus 0021                              ??_TouchPower 0020  
                    __size_of_DlyOff_Main 006F            setDimmerIntr_MaxmumValue@value 0062  
             setDimmerLights_DimmingOn@sw 0022                             _DimmerLights1 0148  
                   setDelayOff_GO@command 0065            __size_of_setLoad_AH_AL_Restore 001C  
           __end_of_setLoad_AH_AL_Restore 1436                                 __pnvBANK1 00EE  
             __size_of_LED_Initialization 0004                           Exception_Main@i 0030  
                              ?_Temp_Main 0070                          ___lwdiv@dividend 0022  
                   DelayOffPointSelect@sw 0021                             _getCmd_Status 12BE  
                              setBuz@time 0029                           ??_setCmd_Status 0021  
                     setDelayOff_GO@value 0066                            Load_Main@error 002C  
                  _setTemp_Initialization 07FF                  ?_setDimmerLights_Dimming 0065  
     __end_of_Flash_Memory_Initialization 06CC               _Flash_Memory_Initialization 0602  
                                ?___awdiv 0020                                 __ptext100 0928  
                               __ptext101 121B                                  ?___lbdiv 0020  
                               __ptext102 16BE                                 __ptext111 1436  
                               __ptext103 1248                                 __ptext112 1686  
                               __ptext104 1178                                 __ptext113 1149  
                               __ptext105 10E7                                 __ptext114 0803  
                               __ptext106 1104                                 __ptext115 07F2  
                               __ptext107 11AF                                 __ptext116 14B2  
                               __ptext108 0840                                 __ptext109 10DE  
                                ?___ftadd 0041                                  ?___ftdiv 002E  
                                ?___ftneg 003E                                  ?___ftmul 002E  
                                ?___fttol 004E                     __size_of_my_MainTimer 003C  
                                ?___lwdiv 0020                          ??_setProductData 0063  
                 _setOverTemp_ADV_Restore 13FF             __size_of_setSw_Initialization 0010  
          __size_of_Buzzer_Initialization 0003             __end_of_Buzzer_Initialization 10E1  
                getDimmerLights_Line@line 0020                        __end_of_TouchPower 1356  
                     __size_of_setSw_Main 016C        __end_of_getDimmerIntr_DimmingValue 1248  
            ??_setDimmerIntr_DimmingValue 0021                _getDimmerIntr_DimmingValue 1239  
          __size_of_setDimmerLights_OnOff 00A8             __end_of_setDimmerLights_OnOff 0F57  
          __size_of_setDimmerLights_SwOff 003A            __size_of_myMain_Initialization 0013  
           __end_of_setDimmerLights_SwOff 16F8             __end_of_myMain_Initialization 132C  
                             ??i1___lbdiv 0071                            __size_of_getAD 0020  
                        ___lwdiv@quotient 0025                             _SwPointSelect 120F  
                     __end_of_setLED_Main 15E6              ??_DimmerLights_TwoPhase_Main 0068  
                        ??_getDelayOff_GO 0022                         i1___lbdiv@divisor 0070  
                       i1___lbdiv@counter 0073               __end_of_Temp_Initialization 10E7  
                          ___wmul@product 0024                                  _LED_Main 10F3  
                         SwPointSelect@sw 0021                                 clear_ram0 1116  
                            _my_MainTimer 16F8       __end_of_DimmerLights_Initialization 1123  
             _DimmerLights_Initialization 111C                    _Flash_Memory_Main$2776 0028  
                          ?_getCmd_Status 0070                  _getDimmerIntr_Dimming_Sw 121B  
                                _GO_nDONE 04E9                         ??_Timeout_Counter 0020  
    __size_of_setDimmerIntr_ControlStatus 0018       __size_of_setDimmerIntr_DimmingValue 000C  
                      _Flash_Memory_Write 1585                              ??_getLoad_AD 0024  
                                _TMR1_ISR 1436                              ??_getLoad_OK 0020  
                                _TMR1_Set 1203                              ??_getTemp_AD 0024  
                                _WDT_Main 12F4                   DlyOff_Initialization@sw 0022  
                   getSw_KeyStatus@status 0021                          __size_of_ADC_Set 0007  
                       ___wmul@multiplier 0020                       ?_Flash_Memory_Write 0070  
                   __size_of_setTemp_Main 00D3                   __size_of_setDelayOff_GO 008C  
                                _DelayOff 00D0                              setSw_Main@sw 0033  
                             ??_Load_Main 0028                          __size_of_IOC_ISR 0009  
          getMain_All_Error_Status@status 0026                          __size_of_IOC_Set 000B  
            __end_of_Flash_Memory_Erasing 1203                            ?_SwPointSelect 0070  
                             getAD@adcon0 0023                               getAD@adcon1 0020  
                          setLED_Main@led 0024                      __end_of_WDT_Clearing 0004  
                   _DlyOff_Initialization 1104         __size_of_getMain_All_LightsStatus 000A  
                                _Division 122A                 ?_getMain_All_LightsStatus 0070  
                _setDimmerIntr_Dimming_RF 1382               setDimmerLights_OnOff@lights 00E8  
                _setDimmerIntr_Dimming_Sw 136C                                  _Fosc_Set 10F7  
                        __size_of_WDT_Set 000B                        __end_of_getLoad_AD 07F2  
                      __end_of_getLoad_OK 1139                     _Switch_Initialization 10FB  
       __size_of_getMain_All_Error_Status 0033                      ??_Flash_Memory_Write 0020  
               ?_getMain_All_Error_Status 0070                      __size_of_Buzzer_Main 004A  
                      __end_of_getTemp_AD 0EAF                              ?_Switch_Main 0070  
                       getLoad_AD@channel 0026       __size_of_DimmerLights_SelectPointer 000B  
                                _SwDetect 00D5                               ??_Temp_Main 006F  
                        getCmd_Status@cmd 0021                          setCmd_Status@cmd 0020  
           _getMain_All_Error_Status$3186 0021             _getMain_All_Error_Status$3187 0023  
                __end_of_getDimmer_LoadGO 1141                       _Load_Initialization 10E1  
        ??_getDimmerLights_ValueToPercent 005C           ?_getDimmerLights_ValueToPercent 0070  
                               setLED@led 0023                 ??_setOverTemp_ADV_Restore 0020  
                            _setTemp_Main 045D                          __size_of___awdiv 0054  
                        __size_of___lbdiv 0022                          __size_of___ftadd 00F6  
                        __size_of___ftdiv 00A9                          __size_of___ftneg 0009  
                        __size_of___ftmul 00B4                          __size_of___fttol 0087  
                        __size_of___lwdiv 0037                  setDimmerLights_SwOn@idle 002E  
                                ___awtoft 14F5                          ??_LedPointSelect 0020  
                                ___ftpack 0A87             __size_of_getMain_Lights_Count 000B  
                  getDimmer_LoadGO@loadgo 0020                         getTemp_AD@channel 0025  
                             _setLED_Main 15B4            __size_of_getDimmer_Load_Status 0008  
                ?_DelayOff_Initialization 0070                          getDelayOff_GO@go 0023  
                        getDelayOff_GO@sw 0022             __end_of_getDimmer_Load_Status 1149  
                        setDelayOff_GO@sw 006C                           ___lwdiv@divisor 0020  
                    ?_Load_Initialization 0070                           ___lwdiv@counter 0027  
                                __ptext10 13FF                                  __ptext11 10E4  
                                __ptext20 132C                                  __ptext12 07FF  
                                __ptext21 10FB                                  __ptext13 112A  
                                __ptext30 0049                                  __ptext22 1258  
                                __ptext14 01FB                                  __ptext31 118E  
                                __ptext23 12E2                                  __ptext15 155E  
                                __ptext40 15B4                                  __ptext32 1141  
                                __ptext24 11A4                                  __ptext16 129B  
                                __ptext41 10EF                                  __ptext33 1139  
                                __ptext25 1203                                  __ptext17 120F  
                                __ptext50 115B                                  __ptext42 128A  
                                __ptext34 116E                                  __ptext26 13E5  
                                __ptext18 1341                                  __ptext51 13CB  
                                __ptext43 1734                                  __ptext35 1454  
                                __ptext27 1199                                  __ptext19 10FF  
                                __ptext60 11D3                                  __ptext52 0530  
                                __ptext44 1279                                  __ptext36 164F  
                                __ptext28 10F7                                  __ptext61 139A  
                                __ptext53 1183                                  __ptext45 0C89  
                                __ptext37 10E1                                  __ptext29 1123  
                                __ptext70 136C                                  __ptext62 0D96  
                                __ptext54 153A                                  __ptext46 11F7  
                                __ptext38 141A                                  __ptext71 1239  
                                __ptext63 12D0                                  __ptext55 0BB2  
                                __ptext47 0602                                  __ptext39 10F3  
                                __ptext80 111C                                  __ptext72 1356  
                                __ptext64 13B2                                  __ptext56 0EAF  
                                __ptext48 11EB                                  __ptext81 10DD  
                                __ptext73 1131                                  __ptext65 1164  
                                __ptext57 1619                                  __ptext49 1585  
                                __ptext90 0367                                  __ptext82 0A29  
                                __ptext74 15E6                                  __ptext66 1268  
                                __ptext58 11DF                                  __ptext91 14F5  
                                __ptext83 1306                                  __ptext75 097C  
                                __ptext67 12BE                                  __ptext59 110A  
                                __ptext92 0A87                                  __ptext84 0B4D  
                                __ptext76 1517                                  __ptext68 1775  
                                __ptext93 122A                                  __ptext85 0AE8  
                                __ptext77 11C7                                  __ptext69 12AC  
                                __ptext94 14D3                                  __ptext86 0D0F  
                                __ptext78 1382                                  __ptext95 10EB  
                                __ptext87 1152                                  __ptext79 17BA  
                                __ptext96 0C1A                                  __ptext88 06CC  
                                __ptext97 11BB                                  __ptext89 0F57  
                                __ptext98 088A                                  __ptext99 09D0  
                                __product 01C5                   ??_setLED_Initialization 0024  
                ??_getDimmerLights_Status 0022              __end_of_getDimmerLights_Line 118E  
            __end_of_setDimmerLights_Main 0C1A              __end_of_setDimmerLights_Line 12BE  
                      _DimmerLights_IOC_1 0803              __end_of_setDimmerLights_SwOn 08D6  
                            ??_setSw_Main 0031                             setLED@command 0022  
                           __size_of_main 0052        __size_of_DimmerIntr_Initialization 005E  
                         ??_getCmd_Status 0020                        _DimmerLights_TMR_1 1686  
              setDimmerLights_Main@lights 00E9               __end_of_DelayOffPointSelect 11BB  
                setOverTemp_ADV_Restore@i 0021                ?_setDimmerLights_DimmingOn 0070  
                __end_of_setMemory_Modify 1319                       ?_DimmerLights_IOC_1 0070  
                     ?_DimmerLights_TMR_1 0070               __size_of_Mcu_Initialization 0012  
                            getLoad_OK@ok 0020               Flash_Memory_Main@key_Status 0027  
                _getAll_Sw_KeyStatus$5600 0022                                  main@argc 00EA  
                                main@argv 00EC                      _getSw_KeyStatus$5597 0022  
     getDimmerLights_ValueToPercent@value 005E                  __size_of_getSw_KeyStatus 0011  
            setDimmerLights_Dimming@value 0067        __end_of_setDimmerIntr_DimmingValue 11DF  
              _setDimmerIntr_DimmingValue 11D3               __end_of_Flash_Memory_Modify 0D0F  
            __size_of_getAll_Sw_KeyStatus 0011               __end_of_Flash_Memory_Unlock 1164  
                         ??_SwPointSelect 0020                        __end_of_setSw_Main 0367  
                   ??_Load_Initialization 0022                      ??_DimmerLights_IOC_1 007A  
         getDimmerLights_PercentToValue@i 005F                    ?_DlyOff_Initialization 0070  
                    ??_DimmerLights_TMR_1 0070                            Division@result 0029  
         __end_of_setOverTemp_ADV_Restore 141A        __end_of_DimmerLights_TwoPhase_Main 09D0  
              _DimmerLights_TwoPhase_Main 097C                               pic14e$flags 007E  
            ??_getDimmerIntr_DimmingValue 0020                setDimmerLights_Line@lights 0020  
                 setDimmerLights_SwOff@sw 0022                                  intlevel1 0000  
                  ?_Switch_Initialization 0070                           setDelayOff_GO@i 0069  
                         setDelayOff_GO@j 006A                           setDelayOff_GO@k 006B  
                   setTemp_Main@SafeValue 0068    __end_of_setDimmerLights_Initialization 10DE  
 __size_of_setDimmerLights_Initialization 0001            _setDimmerLights_Initialization 10DD  
              ?_setDimmerIntr_MaxmumValue 0062                   ?_setTemp_Initialization 0070  
                         getLoad_AD@ADRES 0029                               getLoad_AD@i 002B  
                             getLoad_AD@j 0028                               getLoad_AD@k 0027  
 __end_of_DimmerLights_AssignationDimming 153A  __size_of_DimmerLights_AssignationDimming 0023  
       ??_DimmerLights_AssignationDimming 0065          ?_DimmerLights_AssignationDimming 0070  
         _DimmerLights_AssignationDimming 1517                      _Flash_Memory_Erasing 11F7  
                 __size_of_Exception_Main 00D2                             Division@value 0028  
         __end_of_DelayOff_Initialization 10EB                     __size_of_WDT_Clearing 0002  
                   __end_of_DelayOff_Main 10EF                   __size_of_setMemory_Data 000C  
                          _setDelayOff_GO 0D96               ?_getDimmerIntr_DimmingValue 0070  
        __size_of_setDimmerLights_Dimming 0045               getDimmer_Load_Status@status 0020  
    __size_of_Flash_Memory_Initialization 00CA               __size_of_set_TimeoutCleared 0005  
                           ??_DlyOff_Main 0065                                i1_Division 07F2  
                   setMemory_Data@address 0022                ??_getDimmerIntr_Dimming_Sw 0020  
            __end_of_setSw_Initialization 1268                           _Timeout_Counter 132C  
         __size_of_getDimmerLights_Status 0010           getDimmerLights_ValueToPercent@i 005F  
        Flash_Memory_Initialization@value 0025                __end_of_LED_Initialization 10F3  
          __end_of_setTemp_Initialization 0800                               Division@num 0025  
                 setMemory_Modify@command 0021                     _setLoad_AH_AL_Restore 141A  
