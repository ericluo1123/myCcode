

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Mar 18 15:38:56 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,inline,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,inline,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,inline,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,inline,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,inline,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2
    67                           	psect	text50,local,class=CODE,merge=1,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,delta=2
    69                           	psect	text52,local,class=CODE,merge=1,delta=2
    70                           	psect	text53,local,class=CODE,merge=1,delta=2
    71                           	psect	text54,local,class=CODE,merge=1,delta=2
    72                           	psect	text55,local,class=CODE,merge=1,delta=2
    73                           	psect	text56,local,class=CODE,merge=1,delta=2
    74                           	psect	text57,local,class=CODE,merge=1,delta=2
    75                           	psect	text58,local,class=CODE,merge=1,delta=2
    76                           	psect	text59,local,class=CODE,merge=1,delta=2
    77                           	psect	text60,local,class=CODE,merge=1,delta=2
    78                           	psect	text61,local,class=CODE,merge=1,delta=2
    79                           	psect	text62,local,class=CODE,merge=1,delta=2
    80                           	psect	text63,local,class=CODE,merge=1,delta=2
    81                           	psect	text64,local,class=CODE,merge=1,delta=2
    82                           	psect	text65,local,class=CODE,merge=1,delta=2
    83                           	psect	text66,local,class=CODE,merge=1,delta=2
    84                           	psect	text67,local,class=CODE,merge=1,delta=2
    85                           	psect	text68,local,class=CODE,merge=1,delta=2
    86                           	psect	text69,local,class=CODE,merge=1,delta=2
    87                           	psect	text70,local,class=CODE,merge=1,delta=2
    88                           	psect	text71,local,class=CODE,merge=1,delta=2
    89                           	psect	text72,local,class=CODE,merge=1,delta=2
    90                           	psect	text73,local,class=CODE,merge=1,delta=2
    91                           	psect	text74,local,class=CODE,merge=1,delta=2
    92                           	psect	text75,local,class=CODE,merge=1,delta=2
    93                           	psect	text76,local,class=CODE,merge=1,delta=2
    94                           	psect	text77,local,class=CODE,merge=1,delta=2
    95                           	psect	text78,local,class=CODE,merge=1,delta=2
    96                           	psect	text79,local,class=CODE,merge=1,delta=2
    97                           	psect	text80,local,class=CODE,merge=1,delta=2
    98                           	psect	text81,local,class=CODE,merge=1,delta=2
    99                           	psect	text82,local,class=CODE,merge=1,delta=2
   100                           	psect	text83,local,class=CODE,merge=1,delta=2
   101                           	psect	text84,local,class=CODE,merge=1,delta=2
   102                           	psect	text85,local,class=CODE,merge=1,delta=2
   103                           	psect	text86,local,class=CODE,merge=1,delta=2
   104                           	psect	text87,local,class=CODE,merge=1,delta=2
   105                           	psect	text88,local,class=CODE,merge=1,delta=2
   106                           	psect	text89,local,class=CODE,merge=1,delta=2
   107                           	psect	text90,local,class=CODE,merge=1,inline,delta=2
   108                           	psect	text91,local,class=CODE,merge=1,delta=2
   109                           	psect	text92,local,class=CODE,merge=1,inline,delta=2
   110                           	psect	text93,local,class=CODE,merge=1,delta=2
   111                           	psect	text94,local,class=CODE,merge=1,inline,delta=2
   112                           	psect	text95,local,class=CODE,merge=1,delta=2
   113                           	psect	text96,local,class=CODE,merge=1,delta=2
   114                           	psect	text97,local,class=CODE,merge=1,delta=2
   115                           	psect	text98,local,class=CODE,merge=1,delta=2
   116                           	psect	text99,local,class=CODE,merge=1,delta=2
   117                           	psect	text100,local,class=CODE,merge=1,delta=2
   118                           	psect	text101,local,class=CODE,merge=1,inline,delta=2
   119                           	psect	text102,local,class=CODE,merge=1,inline,delta=2
   120                           	psect	text103,local,class=CODE,merge=1,delta=2
   121                           	psect	text104,local,class=CODE,merge=1,delta=2
   122                           	psect	text105,local,class=CODE,merge=1,inline,delta=2
   123                           	psect	text106,local,class=CODE,merge=1,inline,delta=2
   124                           	psect	intentry,global,class=CODE,delta=2
   125                           	psect	text108,local,class=CODE,merge=1,inline,delta=2
   126                           	psect	text109,local,class=CODE,merge=1,inline,delta=2
   127                           	psect	text110,local,class=CODE,merge=1,inline,delta=2
   128                           	psect	text111,local,class=CODE,merge=1,inline,delta=2
   129                           	psect	text112,local,class=CODE,merge=1,inline,delta=2
   130                           	psect	text113,local,class=CODE,merge=1,delta=2
   131                           	dabs	1,0x7E,2
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  008C                     	;# 
   160  008D                     	;# 
   161  008E                     	;# 
   162  0090                     	;# 
   163  0091                     	;# 
   164  0092                     	;# 
   165  0095                     	;# 
   166  0096                     	;# 
   167  0097                     	;# 
   168  0099                     	;# 
   169  009A                     	;# 
   170  009B                     	;# 
   171  009B                     	;# 
   172  009C                     	;# 
   173  009D                     	;# 
   174  009E                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  0116                     	;# 
   179  0117                     	;# 
   180  011D                     	;# 
   181  018C                     	;# 
   182  018D                     	;# 
   183  018E                     	;# 
   184  0191                     	;# 
   185  0191                     	;# 
   186  0192                     	;# 
   187  0193                     	;# 
   188  0193                     	;# 
   189  0194                     	;# 
   190  0195                     	;# 
   191  0196                     	;# 
   192  0197                     	;# 
   193  0199                     	;# 
   194  019A                     	;# 
   195  019B                     	;# 
   196  019B                     	;# 
   197  019B                     	;# 
   198  019B                     	;# 
   199  019C                     	;# 
   200  019C                     	;# 
   201  019D                     	;# 
   202  019E                     	;# 
   203  019F                     	;# 
   204  020D                     	;# 
   205  0210                     	;# 
   206  0211                     	;# 
   207  0211                     	;# 
   208  0212                     	;# 
   209  0212                     	;# 
   210  0213                     	;# 
   211  0213                     	;# 
   212  0214                     	;# 
   213  0214                     	;# 
   214  0215                     	;# 
   215  0215                     	;# 
   216  0215                     	;# 
   217  0216                     	;# 
   218  0216                     	;# 
   219  0217                     	;# 
   220  0217                     	;# 
   221  0291                     	;# 
   222  0291                     	;# 
   223  0292                     	;# 
   224  0293                     	;# 
   225  0298                     	;# 
   226  0298                     	;# 
   227  0299                     	;# 
   228  029A                     	;# 
   229  0394                     	;# 
   230  0395                     	;# 
   231  0396                     	;# 
   232  0FE4                     	;# 
   233  0FE5                     	;# 
   234  0FE6                     	;# 
   235  0FE7                     	;# 
   236  0FE8                     	;# 
   237  0FE9                     	;# 
   238  0FEA                     	;# 
   239  0FEB                     	;# 
   240  0FED                     	;# 
   241  0FEE                     	;# 
   242  0FEF                     	;# 
   243  0000                     	;# 
   244  0001                     	;# 
   245  0002                     	;# 
   246  0003                     	;# 
   247  0004                     	;# 
   248  0005                     	;# 
   249  0006                     	;# 
   250  0007                     	;# 
   251  0008                     	;# 
   252  0009                     	;# 
   253  000A                     	;# 
   254  000B                     	;# 
   255  000C                     	;# 
   256  000D                     	;# 
   257  000E                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0015                     	;# 
   262  0016                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001C                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0095                     	;# 
   277  0096                     	;# 
   278  0097                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009B                     	;# 
   283  009C                     	;# 
   284  009D                     	;# 
   285  009E                     	;# 
   286  010C                     	;# 
   287  010D                     	;# 
   288  010E                     	;# 
   289  0116                     	;# 
   290  0117                     	;# 
   291  011D                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294  018E                     	;# 
   295  0191                     	;# 
   296  0191                     	;# 
   297  0192                     	;# 
   298  0193                     	;# 
   299  0193                     	;# 
   300  0194                     	;# 
   301  0195                     	;# 
   302  0196                     	;# 
   303  0197                     	;# 
   304  0199                     	;# 
   305  019A                     	;# 
   306  019B                     	;# 
   307  019B                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019C                     	;# 
   311  019C                     	;# 
   312  019D                     	;# 
   313  019E                     	;# 
   314  019F                     	;# 
   315  020D                     	;# 
   316  0210                     	;# 
   317  0211                     	;# 
   318  0211                     	;# 
   319  0212                     	;# 
   320  0212                     	;# 
   321  0213                     	;# 
   322  0213                     	;# 
   323  0214                     	;# 
   324  0214                     	;# 
   325  0215                     	;# 
   326  0215                     	;# 
   327  0215                     	;# 
   328  0216                     	;# 
   329  0216                     	;# 
   330  0217                     	;# 
   331  0217                     	;# 
   332  0291                     	;# 
   333  0291                     	;# 
   334  0292                     	;# 
   335  0293                     	;# 
   336  0298                     	;# 
   337  0298                     	;# 
   338  0299                     	;# 
   339  029A                     	;# 
   340  0394                     	;# 
   341  0395                     	;# 
   342  0396                     	;# 
   343  0FE4                     	;# 
   344  0FE5                     	;# 
   345  0FE6                     	;# 
   346  0FE7                     	;# 
   347  0FE8                     	;# 
   348  0FE9                     	;# 
   349  0FEA                     	;# 
   350  0FEB                     	;# 
   351  0FED                     	;# 
   352  0FEE                     	;# 
   353  0FEF                     	;# 
   354  0000                     	;# 
   355  0001                     	;# 
   356  0002                     	;# 
   357  0003                     	;# 
   358  0004                     	;# 
   359  0005                     	;# 
   360  0006                     	;# 
   361  0007                     	;# 
   362  0008                     	;# 
   363  0009                     	;# 
   364  000A                     	;# 
   365  000B                     	;# 
   366  000C                     	;# 
   367  000D                     	;# 
   368  000E                     	;# 
   369  0010                     	;# 
   370  0011                     	;# 
   371  0012                     	;# 
   372  0015                     	;# 
   373  0016                     	;# 
   374  0016                     	;# 
   375  0017                     	;# 
   376  0018                     	;# 
   377  0019                     	;# 
   378  001A                     	;# 
   379  001B                     	;# 
   380  001C                     	;# 
   381  008C                     	;# 
   382  008D                     	;# 
   383  008E                     	;# 
   384  0090                     	;# 
   385  0091                     	;# 
   386  0092                     	;# 
   387  0095                     	;# 
   388  0096                     	;# 
   389  0097                     	;# 
   390  0099                     	;# 
   391  009A                     	;# 
   392  009B                     	;# 
   393  009B                     	;# 
   394  009C                     	;# 
   395  009D                     	;# 
   396  009E                     	;# 
   397  010C                     	;# 
   398  010D                     	;# 
   399  010E                     	;# 
   400  0116                     	;# 
   401  0117                     	;# 
   402  011D                     	;# 
   403  018C                     	;# 
   404  018D                     	;# 
   405  018E                     	;# 
   406  0191                     	;# 
   407  0191                     	;# 
   408  0192                     	;# 
   409  0193                     	;# 
   410  0193                     	;# 
   411  0194                     	;# 
   412  0195                     	;# 
   413  0196                     	;# 
   414  0197                     	;# 
   415  0199                     	;# 
   416  019A                     	;# 
   417  019B                     	;# 
   418  019B                     	;# 
   419  019B                     	;# 
   420  019B                     	;# 
   421  019C                     	;# 
   422  019C                     	;# 
   423  019D                     	;# 
   424  019E                     	;# 
   425  019F                     	;# 
   426  020D                     	;# 
   427  0210                     	;# 
   428  0211                     	;# 
   429  0211                     	;# 
   430  0212                     	;# 
   431  0212                     	;# 
   432  0213                     	;# 
   433  0213                     	;# 
   434  0214                     	;# 
   435  0214                     	;# 
   436  0215                     	;# 
   437  0215                     	;# 
   438  0215                     	;# 
   439  0216                     	;# 
   440  0216                     	;# 
   441  0217                     	;# 
   442  0217                     	;# 
   443  0291                     	;# 
   444  0291                     	;# 
   445  0292                     	;# 
   446  0293                     	;# 
   447  0298                     	;# 
   448  0298                     	;# 
   449  0299                     	;# 
   450  029A                     	;# 
   451  0394                     	;# 
   452  0395                     	;# 
   453  0396                     	;# 
   454  0FE4                     	;# 
   455  0FE5                     	;# 
   456  0FE6                     	;# 
   457  0FE7                     	;# 
   458  0FE8                     	;# 
   459  0FE9                     	;# 
   460  0FEA                     	;# 
   461  0FEB                     	;# 
   462  0FED                     	;# 
   463  0FEE                     	;# 
   464  0FEF                     	;# 
   465  0000                     	;# 
   466  0001                     	;# 
   467  0002                     	;# 
   468  0003                     	;# 
   469  0004                     	;# 
   470  0005                     	;# 
   471  0006                     	;# 
   472  0007                     	;# 
   473  0008                     	;# 
   474  0009                     	;# 
   475  000A                     	;# 
   476  000B                     	;# 
   477  000C                     	;# 
   478  000D                     	;# 
   479  000E                     	;# 
   480  0010                     	;# 
   481  0011                     	;# 
   482  0012                     	;# 
   483  0015                     	;# 
   484  0016                     	;# 
   485  0016                     	;# 
   486  0017                     	;# 
   487  0018                     	;# 
   488  0019                     	;# 
   489  001A                     	;# 
   490  001B                     	;# 
   491  001C                     	;# 
   492  008C                     	;# 
   493  008D                     	;# 
   494  008E                     	;# 
   495  0090                     	;# 
   496  0091                     	;# 
   497  0092                     	;# 
   498  0095                     	;# 
   499  0096                     	;# 
   500  0097                     	;# 
   501  0099                     	;# 
   502  009A                     	;# 
   503  009B                     	;# 
   504  009B                     	;# 
   505  009C                     	;# 
   506  009D                     	;# 
   507  009E                     	;# 
   508  010C                     	;# 
   509  010D                     	;# 
   510  010E                     	;# 
   511  0116                     	;# 
   512  0117                     	;# 
   513  011D                     	;# 
   514  018C                     	;# 
   515  018D                     	;# 
   516  018E                     	;# 
   517  0191                     	;# 
   518  0191                     	;# 
   519  0192                     	;# 
   520  0193                     	;# 
   521  0193                     	;# 
   522  0194                     	;# 
   523  0195                     	;# 
   524  0196                     	;# 
   525  0197                     	;# 
   526  0199                     	;# 
   527  019A                     	;# 
   528  019B                     	;# 
   529  019B                     	;# 
   530  019B                     	;# 
   531  019B                     	;# 
   532  019C                     	;# 
   533  019C                     	;# 
   534  019D                     	;# 
   535  019E                     	;# 
   536  019F                     	;# 
   537  020D                     	;# 
   538  0210                     	;# 
   539  0211                     	;# 
   540  0211                     	;# 
   541  0212                     	;# 
   542  0212                     	;# 
   543  0213                     	;# 
   544  0213                     	;# 
   545  0214                     	;# 
   546  0214                     	;# 
   547  0215                     	;# 
   548  0215                     	;# 
   549  0215                     	;# 
   550  0216                     	;# 
   551  0216                     	;# 
   552  0217                     	;# 
   553  0217                     	;# 
   554  0291                     	;# 
   555  0291                     	;# 
   556  0292                     	;# 
   557  0293                     	;# 
   558  0298                     	;# 
   559  0298                     	;# 
   560  0299                     	;# 
   561  029A                     	;# 
   562  0394                     	;# 
   563  0395                     	;# 
   564  0396                     	;# 
   565  0FE4                     	;# 
   566  0FE5                     	;# 
   567  0FE6                     	;# 
   568  0FE7                     	;# 
   569  0FE8                     	;# 
   570  0FE9                     	;# 
   571  0FEA                     	;# 
   572  0FEB                     	;# 
   573  0FED                     	;# 
   574  0FEE                     	;# 
   575  0FEF                     	;# 
   576  0000                     	;# 
   577  0001                     	;# 
   578  0002                     	;# 
   579  0003                     	;# 
   580  0004                     	;# 
   581  0005                     	;# 
   582  0006                     	;# 
   583  0007                     	;# 
   584  0008                     	;# 
   585  0009                     	;# 
   586  000A                     	;# 
   587  000B                     	;# 
   588  000C                     	;# 
   589  000D                     	;# 
   590  000E                     	;# 
   591  0010                     	;# 
   592  0011                     	;# 
   593  0012                     	;# 
   594  0015                     	;# 
   595  0016                     	;# 
   596  0016                     	;# 
   597  0017                     	;# 
   598  0018                     	;# 
   599  0019                     	;# 
   600  001A                     	;# 
   601  001B                     	;# 
   602  001C                     	;# 
   603  008C                     	;# 
   604  008D                     	;# 
   605  008E                     	;# 
   606  0090                     	;# 
   607  0091                     	;# 
   608  0092                     	;# 
   609  0095                     	;# 
   610  0096                     	;# 
   611  0097                     	;# 
   612  0099                     	;# 
   613  009A                     	;# 
   614  009B                     	;# 
   615  009B                     	;# 
   616  009C                     	;# 
   617  009D                     	;# 
   618  009E                     	;# 
   619  010C                     	;# 
   620  010D                     	;# 
   621  010E                     	;# 
   622  0116                     	;# 
   623  0117                     	;# 
   624  011D                     	;# 
   625  018C                     	;# 
   626  018D                     	;# 
   627  018E                     	;# 
   628  0191                     	;# 
   629  0191                     	;# 
   630  0192                     	;# 
   631  0193                     	;# 
   632  0193                     	;# 
   633  0194                     	;# 
   634  0195                     	;# 
   635  0196                     	;# 
   636  0197                     	;# 
   637  0199                     	;# 
   638  019A                     	;# 
   639  019B                     	;# 
   640  019B                     	;# 
   641  019B                     	;# 
   642  019B                     	;# 
   643  019C                     	;# 
   644  019C                     	;# 
   645  019D                     	;# 
   646  019E                     	;# 
   647  019F                     	;# 
   648  020D                     	;# 
   649  0210                     	;# 
   650  0211                     	;# 
   651  0211                     	;# 
   652  0212                     	;# 
   653  0212                     	;# 
   654  0213                     	;# 
   655  0213                     	;# 
   656  0214                     	;# 
   657  0214                     	;# 
   658  0215                     	;# 
   659  0215                     	;# 
   660  0215                     	;# 
   661  0216                     	;# 
   662  0216                     	;# 
   663  0217                     	;# 
   664  0217                     	;# 
   665  0291                     	;# 
   666  0291                     	;# 
   667  0292                     	;# 
   668  0293                     	;# 
   669  0298                     	;# 
   670  0298                     	;# 
   671  0299                     	;# 
   672  029A                     	;# 
   673  0394                     	;# 
   674  0395                     	;# 
   675  0396                     	;# 
   676  0FE4                     	;# 
   677  0FE5                     	;# 
   678  0FE6                     	;# 
   679  0FE7                     	;# 
   680  0FE8                     	;# 
   681  0FE9                     	;# 
   682  0FEA                     	;# 
   683  0FEB                     	;# 
   684  0FED                     	;# 
   685  0FEE                     	;# 
   686  0FEF                     	;# 
   687  0000                     	;# 
   688  0001                     	;# 
   689  0002                     	;# 
   690  0003                     	;# 
   691  0004                     	;# 
   692  0005                     	;# 
   693  0006                     	;# 
   694  0007                     	;# 
   695  0008                     	;# 
   696  0009                     	;# 
   697  000A                     	;# 
   698  000B                     	;# 
   699  000C                     	;# 
   700  000D                     	;# 
   701  000E                     	;# 
   702  0010                     	;# 
   703  0011                     	;# 
   704  0012                     	;# 
   705  0015                     	;# 
   706  0016                     	;# 
   707  0016                     	;# 
   708  0017                     	;# 
   709  0018                     	;# 
   710  0019                     	;# 
   711  001A                     	;# 
   712  001B                     	;# 
   713  001C                     	;# 
   714  008C                     	;# 
   715  008D                     	;# 
   716  008E                     	;# 
   717  0090                     	;# 
   718  0091                     	;# 
   719  0092                     	;# 
   720  0095                     	;# 
   721  0096                     	;# 
   722  0097                     	;# 
   723  0099                     	;# 
   724  009A                     	;# 
   725  009B                     	;# 
   726  009B                     	;# 
   727  009C                     	;# 
   728  009D                     	;# 
   729  009E                     	;# 
   730  010C                     	;# 
   731  010D                     	;# 
   732  010E                     	;# 
   733  0116                     	;# 
   734  0117                     	;# 
   735  011D                     	;# 
   736  018C                     	;# 
   737  018D                     	;# 
   738  018E                     	;# 
   739  0191                     	;# 
   740  0191                     	;# 
   741  0192                     	;# 
   742  0193                     	;# 
   743  0193                     	;# 
   744  0194                     	;# 
   745  0195                     	;# 
   746  0196                     	;# 
   747  0197                     	;# 
   748  0199                     	;# 
   749  019A                     	;# 
   750  019B                     	;# 
   751  019B                     	;# 
   752  019B                     	;# 
   753  019B                     	;# 
   754  019C                     	;# 
   755  019C                     	;# 
   756  019D                     	;# 
   757  019E                     	;# 
   758  019F                     	;# 
   759  020D                     	;# 
   760  0210                     	;# 
   761  0211                     	;# 
   762  0211                     	;# 
   763  0212                     	;# 
   764  0212                     	;# 
   765  0213                     	;# 
   766  0213                     	;# 
   767  0214                     	;# 
   768  0214                     	;# 
   769  0215                     	;# 
   770  0215                     	;# 
   771  0215                     	;# 
   772  0216                     	;# 
   773  0216                     	;# 
   774  0217                     	;# 
   775  0217                     	;# 
   776  0291                     	;# 
   777  0291                     	;# 
   778  0292                     	;# 
   779  0293                     	;# 
   780  0298                     	;# 
   781  0298                     	;# 
   782  0299                     	;# 
   783  029A                     	;# 
   784  0394                     	;# 
   785  0395                     	;# 
   786  0396                     	;# 
   787  0FE4                     	;# 
   788  0FE5                     	;# 
   789  0FE6                     	;# 
   790  0FE7                     	;# 
   791  0FE8                     	;# 
   792  0FE9                     	;# 
   793  0FEA                     	;# 
   794  0FEB                     	;# 
   795  0FED                     	;# 
   796  0FEE                     	;# 
   797  0FEF                     	;# 
   798  0000                     	;# 
   799  0001                     	;# 
   800  0002                     	;# 
   801  0003                     	;# 
   802  0004                     	;# 
   803  0005                     	;# 
   804  0006                     	;# 
   805  0007                     	;# 
   806  0008                     	;# 
   807  0009                     	;# 
   808  000A                     	;# 
   809  000B                     	;# 
   810  000C                     	;# 
   811  000D                     	;# 
   812  000E                     	;# 
   813  0010                     	;# 
   814  0011                     	;# 
   815  0012                     	;# 
   816  0015                     	;# 
   817  0016                     	;# 
   818  0016                     	;# 
   819  0017                     	;# 
   820  0018                     	;# 
   821  0019                     	;# 
   822  001A                     	;# 
   823  001B                     	;# 
   824  001C                     	;# 
   825  008C                     	;# 
   826  008D                     	;# 
   827  008E                     	;# 
   828  0090                     	;# 
   829  0091                     	;# 
   830  0092                     	;# 
   831  0095                     	;# 
   832  0096                     	;# 
   833  0097                     	;# 
   834  0099                     	;# 
   835  009A                     	;# 
   836  009B                     	;# 
   837  009B                     	;# 
   838  009C                     	;# 
   839  009D                     	;# 
   840  009E                     	;# 
   841  010C                     	;# 
   842  010D                     	;# 
   843  010E                     	;# 
   844  0116                     	;# 
   845  0117                     	;# 
   846  011D                     	;# 
   847  018C                     	;# 
   848  018D                     	;# 
   849  018E                     	;# 
   850  0191                     	;# 
   851  0191                     	;# 
   852  0192                     	;# 
   853  0193                     	;# 
   854  0193                     	;# 
   855  0194                     	;# 
   856  0195                     	;# 
   857  0196                     	;# 
   858  0197                     	;# 
   859  0199                     	;# 
   860  019A                     	;# 
   861  019B                     	;# 
   862  019B                     	;# 
   863  019B                     	;# 
   864  019B                     	;# 
   865  019C                     	;# 
   866  019C                     	;# 
   867  019D                     	;# 
   868  019E                     	;# 
   869  019F                     	;# 
   870  020D                     	;# 
   871  0210                     	;# 
   872  0211                     	;# 
   873  0211                     	;# 
   874  0212                     	;# 
   875  0212                     	;# 
   876  0213                     	;# 
   877  0213                     	;# 
   878  0214                     	;# 
   879  0214                     	;# 
   880  0215                     	;# 
   881  0215                     	;# 
   882  0215                     	;# 
   883  0216                     	;# 
   884  0216                     	;# 
   885  0217                     	;# 
   886  0217                     	;# 
   887  0291                     	;# 
   888  0291                     	;# 
   889  0292                     	;# 
   890  0293                     	;# 
   891  0298                     	;# 
   892  0298                     	;# 
   893  0299                     	;# 
   894  029A                     	;# 
   895  0394                     	;# 
   896  0395                     	;# 
   897  0396                     	;# 
   898  0FE4                     	;# 
   899  0FE5                     	;# 
   900  0FE6                     	;# 
   901  0FE7                     	;# 
   902  0FE8                     	;# 
   903  0FE9                     	;# 
   904  0FEA                     	;# 
   905  0FEB                     	;# 
   906  0FED                     	;# 
   907  0FEE                     	;# 
   908  0FEF                     	;# 
   909  0000                     	;# 
   910  0001                     	;# 
   911  0002                     	;# 
   912  0003                     	;# 
   913  0004                     	;# 
   914  0005                     	;# 
   915  0006                     	;# 
   916  0007                     	;# 
   917  0008                     	;# 
   918  0009                     	;# 
   919  000A                     	;# 
   920  000B                     	;# 
   921  000C                     	;# 
   922  000D                     	;# 
   923  000E                     	;# 
   924  0010                     	;# 
   925  0011                     	;# 
   926  0012                     	;# 
   927  0015                     	;# 
   928  0016                     	;# 
   929  0016                     	;# 
   930  0017                     	;# 
   931  0018                     	;# 
   932  0019                     	;# 
   933  001A                     	;# 
   934  001B                     	;# 
   935  001C                     	;# 
   936  008C                     	;# 
   937  008D                     	;# 
   938  008E                     	;# 
   939  0090                     	;# 
   940  0091                     	;# 
   941  0092                     	;# 
   942  0095                     	;# 
   943  0096                     	;# 
   944  0097                     	;# 
   945  0099                     	;# 
   946  009A                     	;# 
   947  009B                     	;# 
   948  009B                     	;# 
   949  009C                     	;# 
   950  009D                     	;# 
   951  009E                     	;# 
   952  010C                     	;# 
   953  010D                     	;# 
   954  010E                     	;# 
   955  0116                     	;# 
   956  0117                     	;# 
   957  011D                     	;# 
   958  018C                     	;# 
   959  018D                     	;# 
   960  018E                     	;# 
   961  0191                     	;# 
   962  0191                     	;# 
   963  0192                     	;# 
   964  0193                     	;# 
   965  0193                     	;# 
   966  0194                     	;# 
   967  0195                     	;# 
   968  0196                     	;# 
   969  0197                     	;# 
   970  0199                     	;# 
   971  019A                     	;# 
   972  019B                     	;# 
   973  019B                     	;# 
   974  019B                     	;# 
   975  019B                     	;# 
   976  019C                     	;# 
   977  019C                     	;# 
   978  019D                     	;# 
   979  019E                     	;# 
   980  019F                     	;# 
   981  020D                     	;# 
   982  0210                     	;# 
   983  0211                     	;# 
   984  0211                     	;# 
   985  0212                     	;# 
   986  0212                     	;# 
   987  0213                     	;# 
   988  0213                     	;# 
   989  0214                     	;# 
   990  0214                     	;# 
   991  0215                     	;# 
   992  0215                     	;# 
   993  0215                     	;# 
   994  0216                     	;# 
   995  0216                     	;# 
   996  0217                     	;# 
   997  0217                     	;# 
   998  0291                     	;# 
   999  0291                     	;# 
  1000  0292                     	;# 
  1001  0293                     	;# 
  1002  0298                     	;# 
  1003  0298                     	;# 
  1004  0299                     	;# 
  1005  029A                     	;# 
  1006  0394                     	;# 
  1007  0395                     	;# 
  1008  0396                     	;# 
  1009  0FE4                     	;# 
  1010  0FE5                     	;# 
  1011  0FE6                     	;# 
  1012  0FE7                     	;# 
  1013  0FE8                     	;# 
  1014  0FE9                     	;# 
  1015  0FEA                     	;# 
  1016  0FEB                     	;# 
  1017  0FED                     	;# 
  1018  0FEE                     	;# 
  1019  0FEF                     	;# 
  1020  0000                     	;# 
  1021  0001                     	;# 
  1022  0002                     	;# 
  1023  0003                     	;# 
  1024  0004                     	;# 
  1025  0005                     	;# 
  1026  0006                     	;# 
  1027  0007                     	;# 
  1028  0008                     	;# 
  1029  0009                     	;# 
  1030  000A                     	;# 
  1031  000B                     	;# 
  1032  000C                     	;# 
  1033  000D                     	;# 
  1034  000E                     	;# 
  1035  0010                     	;# 
  1036  0011                     	;# 
  1037  0012                     	;# 
  1038  0015                     	;# 
  1039  0016                     	;# 
  1040  0016                     	;# 
  1041  0017                     	;# 
  1042  0018                     	;# 
  1043  0019                     	;# 
  1044  001A                     	;# 
  1045  001B                     	;# 
  1046  001C                     	;# 
  1047  008C                     	;# 
  1048  008D                     	;# 
  1049  008E                     	;# 
  1050  0090                     	;# 
  1051  0091                     	;# 
  1052  0092                     	;# 
  1053  0095                     	;# 
  1054  0096                     	;# 
  1055  0097                     	;# 
  1056  0099                     	;# 
  1057  009A                     	;# 
  1058  009B                     	;# 
  1059  009B                     	;# 
  1060  009C                     	;# 
  1061  009D                     	;# 
  1062  009E                     	;# 
  1063  010C                     	;# 
  1064  010D                     	;# 
  1065  010E                     	;# 
  1066  0116                     	;# 
  1067  0117                     	;# 
  1068  011D                     	;# 
  1069  018C                     	;# 
  1070  018D                     	;# 
  1071  018E                     	;# 
  1072  0191                     	;# 
  1073  0191                     	;# 
  1074  0192                     	;# 
  1075  0193                     	;# 
  1076  0193                     	;# 
  1077  0194                     	;# 
  1078  0195                     	;# 
  1079  0196                     	;# 
  1080  0197                     	;# 
  1081  0199                     	;# 
  1082  019A                     	;# 
  1083  019B                     	;# 
  1084  019B                     	;# 
  1085  019B                     	;# 
  1086  019B                     	;# 
  1087  019C                     	;# 
  1088  019C                     	;# 
  1089  019D                     	;# 
  1090  019E                     	;# 
  1091  019F                     	;# 
  1092  020D                     	;# 
  1093  0210                     	;# 
  1094  0211                     	;# 
  1095  0211                     	;# 
  1096  0212                     	;# 
  1097  0212                     	;# 
  1098  0213                     	;# 
  1099  0213                     	;# 
  1100  0214                     	;# 
  1101  0214                     	;# 
  1102  0215                     	;# 
  1103  0215                     	;# 
  1104  0215                     	;# 
  1105  0216                     	;# 
  1106  0216                     	;# 
  1107  0217                     	;# 
  1108  0217                     	;# 
  1109  0291                     	;# 
  1110  0291                     	;# 
  1111  0292                     	;# 
  1112  0293                     	;# 
  1113  0298                     	;# 
  1114  0298                     	;# 
  1115  0299                     	;# 
  1116  029A                     	;# 
  1117  0394                     	;# 
  1118  0395                     	;# 
  1119  0396                     	;# 
  1120  0FE4                     	;# 
  1121  0FE5                     	;# 
  1122  0FE6                     	;# 
  1123  0FE7                     	;# 
  1124  0FE8                     	;# 
  1125  0FE9                     	;# 
  1126  0FEA                     	;# 
  1127  0FEB                     	;# 
  1128  0FED                     	;# 
  1129  0FEE                     	;# 
  1130  0FEF                     	;# 
  1131  0000                     	;# 
  1132  0001                     	;# 
  1133  0002                     	;# 
  1134  0003                     	;# 
  1135  0004                     	;# 
  1136  0005                     	;# 
  1137  0006                     	;# 
  1138  0007                     	;# 
  1139  0008                     	;# 
  1140  0009                     	;# 
  1141  000A                     	;# 
  1142  000B                     	;# 
  1143  000C                     	;# 
  1144  000D                     	;# 
  1145  000E                     	;# 
  1146  0010                     	;# 
  1147  0011                     	;# 
  1148  0012                     	;# 
  1149  0015                     	;# 
  1150  0016                     	;# 
  1151  0016                     	;# 
  1152  0017                     	;# 
  1153  0018                     	;# 
  1154  0019                     	;# 
  1155  001A                     	;# 
  1156  001B                     	;# 
  1157  001C                     	;# 
  1158  008C                     	;# 
  1159  008D                     	;# 
  1160  008E                     	;# 
  1161  0090                     	;# 
  1162  0091                     	;# 
  1163  0092                     	;# 
  1164  0095                     	;# 
  1165  0096                     	;# 
  1166  0097                     	;# 
  1167  0099                     	;# 
  1168  009A                     	;# 
  1169  009B                     	;# 
  1170  009B                     	;# 
  1171  009C                     	;# 
  1172  009D                     	;# 
  1173  009E                     	;# 
  1174  010C                     	;# 
  1175  010D                     	;# 
  1176  010E                     	;# 
  1177  0116                     	;# 
  1178  0117                     	;# 
  1179  011D                     	;# 
  1180  018C                     	;# 
  1181  018D                     	;# 
  1182  018E                     	;# 
  1183  0191                     	;# 
  1184  0191                     	;# 
  1185  0192                     	;# 
  1186  0193                     	;# 
  1187  0193                     	;# 
  1188  0194                     	;# 
  1189  0195                     	;# 
  1190  0196                     	;# 
  1191  0197                     	;# 
  1192  0199                     	;# 
  1193  019A                     	;# 
  1194  019B                     	;# 
  1195  019B                     	;# 
  1196  019B                     	;# 
  1197  019B                     	;# 
  1198  019C                     	;# 
  1199  019C                     	;# 
  1200  019D                     	;# 
  1201  019E                     	;# 
  1202  019F                     	;# 
  1203  020D                     	;# 
  1204  0210                     	;# 
  1205  0211                     	;# 
  1206  0211                     	;# 
  1207  0212                     	;# 
  1208  0212                     	;# 
  1209  0213                     	;# 
  1210  0213                     	;# 
  1211  0214                     	;# 
  1212  0214                     	;# 
  1213  0215                     	;# 
  1214  0215                     	;# 
  1215  0215                     	;# 
  1216  0216                     	;# 
  1217  0216                     	;# 
  1218  0217                     	;# 
  1219  0217                     	;# 
  1220  0291                     	;# 
  1221  0291                     	;# 
  1222  0292                     	;# 
  1223  0293                     	;# 
  1224  0298                     	;# 
  1225  0298                     	;# 
  1226  0299                     	;# 
  1227  029A                     	;# 
  1228  0394                     	;# 
  1229  0395                     	;# 
  1230  0396                     	;# 
  1231  0FE4                     	;# 
  1232  0FE5                     	;# 
  1233  0FE6                     	;# 
  1234  0FE7                     	;# 
  1235  0FE8                     	;# 
  1236  0FE9                     	;# 
  1237  0FEA                     	;# 
  1238  0FEB                     	;# 
  1239  0FED                     	;# 
  1240  0FEE                     	;# 
  1241  0FEF                     	;# 
  1242  0000                     	;# 
  1243  0001                     	;# 
  1244  0002                     	;# 
  1245  0003                     	;# 
  1246  0004                     	;# 
  1247  0005                     	;# 
  1248  0006                     	;# 
  1249  0007                     	;# 
  1250  0008                     	;# 
  1251  0009                     	;# 
  1252  000A                     	;# 
  1253  000B                     	;# 
  1254  000C                     	;# 
  1255  000D                     	;# 
  1256  000E                     	;# 
  1257  0010                     	;# 
  1258  0011                     	;# 
  1259  0012                     	;# 
  1260  0015                     	;# 
  1261  0016                     	;# 
  1262  0016                     	;# 
  1263  0017                     	;# 
  1264  0018                     	;# 
  1265  0019                     	;# 
  1266  001A                     	;# 
  1267  001B                     	;# 
  1268  001C                     	;# 
  1269  008C                     	;# 
  1270  008D                     	;# 
  1271  008E                     	;# 
  1272  0090                     	;# 
  1273  0091                     	;# 
  1274  0092                     	;# 
  1275  0095                     	;# 
  1276  0096                     	;# 
  1277  0097                     	;# 
  1278  0099                     	;# 
  1279  009A                     	;# 
  1280  009B                     	;# 
  1281  009B                     	;# 
  1282  009C                     	;# 
  1283  009D                     	;# 
  1284  009E                     	;# 
  1285  010C                     	;# 
  1286  010D                     	;# 
  1287  010E                     	;# 
  1288  0116                     	;# 
  1289  0117                     	;# 
  1290  011D                     	;# 
  1291  018C                     	;# 
  1292  018D                     	;# 
  1293  018E                     	;# 
  1294  0191                     	;# 
  1295  0191                     	;# 
  1296  0192                     	;# 
  1297  0193                     	;# 
  1298  0193                     	;# 
  1299  0194                     	;# 
  1300  0195                     	;# 
  1301  0196                     	;# 
  1302  0197                     	;# 
  1303  0199                     	;# 
  1304  019A                     	;# 
  1305  019B                     	;# 
  1306  019B                     	;# 
  1307  019B                     	;# 
  1308  019B                     	;# 
  1309  019C                     	;# 
  1310  019C                     	;# 
  1311  019D                     	;# 
  1312  019E                     	;# 
  1313  019F                     	;# 
  1314  020D                     	;# 
  1315  0210                     	;# 
  1316  0211                     	;# 
  1317  0211                     	;# 
  1318  0212                     	;# 
  1319  0212                     	;# 
  1320  0213                     	;# 
  1321  0213                     	;# 
  1322  0214                     	;# 
  1323  0214                     	;# 
  1324  0215                     	;# 
  1325  0215                     	;# 
  1326  0215                     	;# 
  1327  0216                     	;# 
  1328  0216                     	;# 
  1329  0217                     	;# 
  1330  0217                     	;# 
  1331  0291                     	;# 
  1332  0291                     	;# 
  1333  0292                     	;# 
  1334  0293                     	;# 
  1335  0298                     	;# 
  1336  0298                     	;# 
  1337  0299                     	;# 
  1338  029A                     	;# 
  1339  0394                     	;# 
  1340  0395                     	;# 
  1341  0396                     	;# 
  1342  0FE4                     	;# 
  1343  0FE5                     	;# 
  1344  0FE6                     	;# 
  1345  0FE7                     	;# 
  1346  0FE8                     	;# 
  1347  0FE9                     	;# 
  1348  0FEA                     	;# 
  1349  0FEB                     	;# 
  1350  0FED                     	;# 
  1351  0FEE                     	;# 
  1352  0FEF                     	;# 
  1353  0000                     	;# 
  1354  0001                     	;# 
  1355  0002                     	;# 
  1356  0003                     	;# 
  1357  0004                     	;# 
  1358  0005                     	;# 
  1359  0006                     	;# 
  1360  0007                     	;# 
  1361  0008                     	;# 
  1362  0009                     	;# 
  1363  000A                     	;# 
  1364  000B                     	;# 
  1365  000C                     	;# 
  1366  000D                     	;# 
  1367  000E                     	;# 
  1368  0010                     	;# 
  1369  0011                     	;# 
  1370  0012                     	;# 
  1371  0015                     	;# 
  1372  0016                     	;# 
  1373  0016                     	;# 
  1374  0017                     	;# 
  1375  0018                     	;# 
  1376  0019                     	;# 
  1377  001A                     	;# 
  1378  001B                     	;# 
  1379  001C                     	;# 
  1380  008C                     	;# 
  1381  008D                     	;# 
  1382  008E                     	;# 
  1383  0090                     	;# 
  1384  0091                     	;# 
  1385  0092                     	;# 
  1386  0095                     	;# 
  1387  0096                     	;# 
  1388  0097                     	;# 
  1389  0099                     	;# 
  1390  009A                     	;# 
  1391  009B                     	;# 
  1392  009B                     	;# 
  1393  009C                     	;# 
  1394  009D                     	;# 
  1395  009E                     	;# 
  1396  010C                     	;# 
  1397  010D                     	;# 
  1398  010E                     	;# 
  1399  0116                     	;# 
  1400  0117                     	;# 
  1401  011D                     	;# 
  1402  018C                     	;# 
  1403  018D                     	;# 
  1404  018E                     	;# 
  1405  0191                     	;# 
  1406  0191                     	;# 
  1407  0192                     	;# 
  1408  0193                     	;# 
  1409  0193                     	;# 
  1410  0194                     	;# 
  1411  0195                     	;# 
  1412  0196                     	;# 
  1413  0197                     	;# 
  1414  0199                     	;# 
  1415  019A                     	;# 
  1416  019B                     	;# 
  1417  019B                     	;# 
  1418  019B                     	;# 
  1419  019B                     	;# 
  1420  019C                     	;# 
  1421  019C                     	;# 
  1422  019D                     	;# 
  1423  019E                     	;# 
  1424  019F                     	;# 
  1425  020D                     	;# 
  1426  0210                     	;# 
  1427  0211                     	;# 
  1428  0211                     	;# 
  1429  0212                     	;# 
  1430  0212                     	;# 
  1431  0213                     	;# 
  1432  0213                     	;# 
  1433  0214                     	;# 
  1434  0214                     	;# 
  1435  0215                     	;# 
  1436  0215                     	;# 
  1437  0215                     	;# 
  1438  0216                     	;# 
  1439  0216                     	;# 
  1440  0217                     	;# 
  1441  0217                     	;# 
  1442  0291                     	;# 
  1443  0291                     	;# 
  1444  0292                     	;# 
  1445  0293                     	;# 
  1446  0298                     	;# 
  1447  0298                     	;# 
  1448  0299                     	;# 
  1449  029A                     	;# 
  1450  0394                     	;# 
  1451  0395                     	;# 
  1452  0396                     	;# 
  1453  0FE4                     	;# 
  1454  0FE5                     	;# 
  1455  0FE6                     	;# 
  1456  0FE7                     	;# 
  1457  0FE8                     	;# 
  1458  0FE9                     	;# 
  1459  0FEA                     	;# 
  1460  0FEB                     	;# 
  1461  0FED                     	;# 
  1462  0FEE                     	;# 
  1463  0FEF                     	;# 
  1464  0000                     	;# 
  1465  0001                     	;# 
  1466  0002                     	;# 
  1467  0003                     	;# 
  1468  0004                     	;# 
  1469  0005                     	;# 
  1470  0006                     	;# 
  1471  0007                     	;# 
  1472  0008                     	;# 
  1473  0009                     	;# 
  1474  000A                     	;# 
  1475  000B                     	;# 
  1476  000C                     	;# 
  1477  000D                     	;# 
  1478  000E                     	;# 
  1479  0010                     	;# 
  1480  0011                     	;# 
  1481  0012                     	;# 
  1482  0015                     	;# 
  1483  0016                     	;# 
  1484  0016                     	;# 
  1485  0017                     	;# 
  1486  0018                     	;# 
  1487  0019                     	;# 
  1488  001A                     	;# 
  1489  001B                     	;# 
  1490  001C                     	;# 
  1491  008C                     	;# 
  1492  008D                     	;# 
  1493  008E                     	;# 
  1494  0090                     	;# 
  1495  0091                     	;# 
  1496  0092                     	;# 
  1497  0095                     	;# 
  1498  0096                     	;# 
  1499  0097                     	;# 
  1500  0099                     	;# 
  1501  009A                     	;# 
  1502  009B                     	;# 
  1503  009B                     	;# 
  1504  009C                     	;# 
  1505  009D                     	;# 
  1506  009E                     	;# 
  1507  010C                     	;# 
  1508  010D                     	;# 
  1509  010E                     	;# 
  1510  0116                     	;# 
  1511  0117                     	;# 
  1512  011D                     	;# 
  1513  018C                     	;# 
  1514  018D                     	;# 
  1515  018E                     	;# 
  1516  0191                     	;# 
  1517  0191                     	;# 
  1518  0192                     	;# 
  1519  0193                     	;# 
  1520  0193                     	;# 
  1521  0194                     	;# 
  1522  0195                     	;# 
  1523  0196                     	;# 
  1524  0197                     	;# 
  1525  0199                     	;# 
  1526  019A                     	;# 
  1527  019B                     	;# 
  1528  019B                     	;# 
  1529  019B                     	;# 
  1530  019B                     	;# 
  1531  019C                     	;# 
  1532  019C                     	;# 
  1533  019D                     	;# 
  1534  019E                     	;# 
  1535  019F                     	;# 
  1536  020D                     	;# 
  1537  0210                     	;# 
  1538  0211                     	;# 
  1539  0211                     	;# 
  1540  0212                     	;# 
  1541  0212                     	;# 
  1542  0213                     	;# 
  1543  0213                     	;# 
  1544  0214                     	;# 
  1545  0214                     	;# 
  1546  0215                     	;# 
  1547  0215                     	;# 
  1548  0215                     	;# 
  1549  0216                     	;# 
  1550  0216                     	;# 
  1551  0217                     	;# 
  1552  0217                     	;# 
  1553  0291                     	;# 
  1554  0291                     	;# 
  1555  0292                     	;# 
  1556  0293                     	;# 
  1557  0298                     	;# 
  1558  0298                     	;# 
  1559  0299                     	;# 
  1560  029A                     	;# 
  1561  0394                     	;# 
  1562  0395                     	;# 
  1563  0396                     	;# 
  1564  0FE4                     	;# 
  1565  0FE5                     	;# 
  1566  0FE6                     	;# 
  1567  0FE7                     	;# 
  1568  0FE8                     	;# 
  1569  0FE9                     	;# 
  1570  0FEA                     	;# 
  1571  0FEB                     	;# 
  1572  0FED                     	;# 
  1573  0FEE                     	;# 
  1574  0FEF                     	;# 
  1575  0000                     	;# 
  1576  0001                     	;# 
  1577  0002                     	;# 
  1578  0003                     	;# 
  1579  0004                     	;# 
  1580  0005                     	;# 
  1581  0006                     	;# 
  1582  0007                     	;# 
  1583  0008                     	;# 
  1584  0009                     	;# 
  1585  000A                     	;# 
  1586  000B                     	;# 
  1587  000C                     	;# 
  1588  000D                     	;# 
  1589  000E                     	;# 
  1590  0010                     	;# 
  1591  0011                     	;# 
  1592  0012                     	;# 
  1593  0015                     	;# 
  1594  0016                     	;# 
  1595  0016                     	;# 
  1596  0017                     	;# 
  1597  0018                     	;# 
  1598  0019                     	;# 
  1599  001A                     	;# 
  1600  001B                     	;# 
  1601  001C                     	;# 
  1602  008C                     	;# 
  1603  008D                     	;# 
  1604  008E                     	;# 
  1605  0090                     	;# 
  1606  0091                     	;# 
  1607  0092                     	;# 
  1608  0095                     	;# 
  1609  0096                     	;# 
  1610  0097                     	;# 
  1611  0099                     	;# 
  1612  009A                     	;# 
  1613  009B                     	;# 
  1614  009B                     	;# 
  1615  009C                     	;# 
  1616  009D                     	;# 
  1617  009E                     	;# 
  1618  010C                     	;# 
  1619  010D                     	;# 
  1620  010E                     	;# 
  1621  0116                     	;# 
  1622  0117                     	;# 
  1623  011D                     	;# 
  1624  018C                     	;# 
  1625  018D                     	;# 
  1626  018E                     	;# 
  1627  0191                     	;# 
  1628  0191                     	;# 
  1629  0192                     	;# 
  1630  0193                     	;# 
  1631  0193                     	;# 
  1632  0194                     	;# 
  1633  0195                     	;# 
  1634  0196                     	;# 
  1635  0197                     	;# 
  1636  0199                     	;# 
  1637  019A                     	;# 
  1638  019B                     	;# 
  1639  019B                     	;# 
  1640  019B                     	;# 
  1641  019B                     	;# 
  1642  019C                     	;# 
  1643  019C                     	;# 
  1644  019D                     	;# 
  1645  019E                     	;# 
  1646  019F                     	;# 
  1647  020D                     	;# 
  1648  0210                     	;# 
  1649  0211                     	;# 
  1650  0211                     	;# 
  1651  0212                     	;# 
  1652  0212                     	;# 
  1653  0213                     	;# 
  1654  0213                     	;# 
  1655  0214                     	;# 
  1656  0214                     	;# 
  1657  0215                     	;# 
  1658  0215                     	;# 
  1659  0215                     	;# 
  1660  0216                     	;# 
  1661  0216                     	;# 
  1662  0217                     	;# 
  1663  0217                     	;# 
  1664  0291                     	;# 
  1665  0291                     	;# 
  1666  0292                     	;# 
  1667  0293                     	;# 
  1668  0298                     	;# 
  1669  0298                     	;# 
  1670  0299                     	;# 
  1671  029A                     	;# 
  1672  0394                     	;# 
  1673  0395                     	;# 
  1674  0396                     	;# 
  1675  0FE4                     	;# 
  1676  0FE5                     	;# 
  1677  0FE6                     	;# 
  1678  0FE7                     	;# 
  1679  0FE8                     	;# 
  1680  0FE9                     	;# 
  1681  0FEA                     	;# 
  1682  0FEB                     	;# 
  1683  0FED                     	;# 
  1684  0FEE                     	;# 
  1685  0FEF                     	;# 
  1686  0000                     	;# 
  1687  0001                     	;# 
  1688  0002                     	;# 
  1689  0003                     	;# 
  1690  0004                     	;# 
  1691  0005                     	;# 
  1692  0006                     	;# 
  1693  0007                     	;# 
  1694  0008                     	;# 
  1695  0009                     	;# 
  1696  000A                     	;# 
  1697  000B                     	;# 
  1698  000C                     	;# 
  1699  000D                     	;# 
  1700  000E                     	;# 
  1701  0010                     	;# 
  1702  0011                     	;# 
  1703  0012                     	;# 
  1704  0015                     	;# 
  1705  0016                     	;# 
  1706  0016                     	;# 
  1707  0017                     	;# 
  1708  0018                     	;# 
  1709  0019                     	;# 
  1710  001A                     	;# 
  1711  001B                     	;# 
  1712  001C                     	;# 
  1713  008C                     	;# 
  1714  008D                     	;# 
  1715  008E                     	;# 
  1716  0090                     	;# 
  1717  0091                     	;# 
  1718  0092                     	;# 
  1719  0095                     	;# 
  1720  0096                     	;# 
  1721  0097                     	;# 
  1722  0099                     	;# 
  1723  009A                     	;# 
  1724  009B                     	;# 
  1725  009B                     	;# 
  1726  009C                     	;# 
  1727  009D                     	;# 
  1728  009E                     	;# 
  1729  010C                     	;# 
  1730  010D                     	;# 
  1731  010E                     	;# 
  1732  0116                     	;# 
  1733  0117                     	;# 
  1734  011D                     	;# 
  1735  018C                     	;# 
  1736  018D                     	;# 
  1737  018E                     	;# 
  1738  0191                     	;# 
  1739  0191                     	;# 
  1740  0192                     	;# 
  1741  0193                     	;# 
  1742  0193                     	;# 
  1743  0194                     	;# 
  1744  0195                     	;# 
  1745  0196                     	;# 
  1746  0197                     	;# 
  1747  0199                     	;# 
  1748  019A                     	;# 
  1749  019B                     	;# 
  1750  019B                     	;# 
  1751  019B                     	;# 
  1752  019B                     	;# 
  1753  019C                     	;# 
  1754  019C                     	;# 
  1755  019D                     	;# 
  1756  019E                     	;# 
  1757  019F                     	;# 
  1758  020D                     	;# 
  1759  0210                     	;# 
  1760  0211                     	;# 
  1761  0211                     	;# 
  1762  0212                     	;# 
  1763  0212                     	;# 
  1764  0213                     	;# 
  1765  0213                     	;# 
  1766  0214                     	;# 
  1767  0214                     	;# 
  1768  0215                     	;# 
  1769  0215                     	;# 
  1770  0215                     	;# 
  1771  0216                     	;# 
  1772  0216                     	;# 
  1773  0217                     	;# 
  1774  0217                     	;# 
  1775  0291                     	;# 
  1776  0291                     	;# 
  1777  0292                     	;# 
  1778  0293                     	;# 
  1779  0298                     	;# 
  1780  0298                     	;# 
  1781  0299                     	;# 
  1782  029A                     	;# 
  1783  0394                     	;# 
  1784  0395                     	;# 
  1785  0396                     	;# 
  1786  0FE4                     	;# 
  1787  0FE5                     	;# 
  1788  0FE6                     	;# 
  1789  0FE7                     	;# 
  1790  0FE8                     	;# 
  1791  0FE9                     	;# 
  1792  0FEA                     	;# 
  1793  0FEB                     	;# 
  1794  0FED                     	;# 
  1795  0FEE                     	;# 
  1796  0FEF                     	;# 
  1797  0000                     	;# 
  1798  0001                     	;# 
  1799  0002                     	;# 
  1800  0003                     	;# 
  1801  0004                     	;# 
  1802  0005                     	;# 
  1803  0006                     	;# 
  1804  0007                     	;# 
  1805  0008                     	;# 
  1806  0009                     	;# 
  1807  000A                     	;# 
  1808  000B                     	;# 
  1809  000C                     	;# 
  1810  000D                     	;# 
  1811  000E                     	;# 
  1812  0010                     	;# 
  1813  0011                     	;# 
  1814  0012                     	;# 
  1815  0015                     	;# 
  1816  0016                     	;# 
  1817  0016                     	;# 
  1818  0017                     	;# 
  1819  0018                     	;# 
  1820  0019                     	;# 
  1821  001A                     	;# 
  1822  001B                     	;# 
  1823  001C                     	;# 
  1824  008C                     	;# 
  1825  008D                     	;# 
  1826  008E                     	;# 
  1827  0090                     	;# 
  1828  0091                     	;# 
  1829  0092                     	;# 
  1830  0095                     	;# 
  1831  0096                     	;# 
  1832  0097                     	;# 
  1833  0099                     	;# 
  1834  009A                     	;# 
  1835  009B                     	;# 
  1836  009B                     	;# 
  1837  009C                     	;# 
  1838  009D                     	;# 
  1839  009E                     	;# 
  1840  010C                     	;# 
  1841  010D                     	;# 
  1842  010E                     	;# 
  1843  0116                     	;# 
  1844  0117                     	;# 
  1845  011D                     	;# 
  1846  018C                     	;# 
  1847  018D                     	;# 
  1848  018E                     	;# 
  1849  0191                     	;# 
  1850  0191                     	;# 
  1851  0192                     	;# 
  1852  0193                     	;# 
  1853  0193                     	;# 
  1854  0194                     	;# 
  1855  0195                     	;# 
  1856  0196                     	;# 
  1857  0197                     	;# 
  1858  0199                     	;# 
  1859  019A                     	;# 
  1860  019B                     	;# 
  1861  019B                     	;# 
  1862  019B                     	;# 
  1863  019B                     	;# 
  1864  019C                     	;# 
  1865  019C                     	;# 
  1866  019D                     	;# 
  1867  019E                     	;# 
  1868  019F                     	;# 
  1869  020D                     	;# 
  1870  0210                     	;# 
  1871  0211                     	;# 
  1872  0211                     	;# 
  1873  0212                     	;# 
  1874  0212                     	;# 
  1875  0213                     	;# 
  1876  0213                     	;# 
  1877  0214                     	;# 
  1878  0214                     	;# 
  1879  0215                     	;# 
  1880  0215                     	;# 
  1881  0215                     	;# 
  1882  0216                     	;# 
  1883  0216                     	;# 
  1884  0217                     	;# 
  1885  0217                     	;# 
  1886  0291                     	;# 
  1887  0291                     	;# 
  1888  0292                     	;# 
  1889  0293                     	;# 
  1890  0298                     	;# 
  1891  0298                     	;# 
  1892  0299                     	;# 
  1893  029A                     	;# 
  1894  0394                     	;# 
  1895  0395                     	;# 
  1896  0396                     	;# 
  1897  0FE4                     	;# 
  1898  0FE5                     	;# 
  1899  0FE6                     	;# 
  1900  0FE7                     	;# 
  1901  0FE8                     	;# 
  1902  0FE9                     	;# 
  1903  0FEA                     	;# 
  1904  0FEB                     	;# 
  1905  0FED                     	;# 
  1906  0FEE                     	;# 
  1907  0FEF                     	;# 
  1908  0000                     	;# 
  1909  0001                     	;# 
  1910  0002                     	;# 
  1911  0003                     	;# 
  1912  0004                     	;# 
  1913  0005                     	;# 
  1914  0006                     	;# 
  1915  0007                     	;# 
  1916  0008                     	;# 
  1917  0009                     	;# 
  1918  000A                     	;# 
  1919  000B                     	;# 
  1920  000C                     	;# 
  1921  000D                     	;# 
  1922  000E                     	;# 
  1923  0010                     	;# 
  1924  0011                     	;# 
  1925  0012                     	;# 
  1926  0015                     	;# 
  1927  0016                     	;# 
  1928  0016                     	;# 
  1929  0017                     	;# 
  1930  0018                     	;# 
  1931  0019                     	;# 
  1932  001A                     	;# 
  1933  001B                     	;# 
  1934  001C                     	;# 
  1935  008C                     	;# 
  1936  008D                     	;# 
  1937  008E                     	;# 
  1938  0090                     	;# 
  1939  0091                     	;# 
  1940  0092                     	;# 
  1941  0095                     	;# 
  1942  0096                     	;# 
  1943  0097                     	;# 
  1944  0099                     	;# 
  1945  009A                     	;# 
  1946  009B                     	;# 
  1947  009B                     	;# 
  1948  009C                     	;# 
  1949  009D                     	;# 
  1950  009E                     	;# 
  1951  010C                     	;# 
  1952  010D                     	;# 
  1953  010E                     	;# 
  1954  0116                     	;# 
  1955  0117                     	;# 
  1956  011D                     	;# 
  1957  018C                     	;# 
  1958  018D                     	;# 
  1959  018E                     	;# 
  1960  0191                     	;# 
  1961  0191                     	;# 
  1962  0192                     	;# 
  1963  0193                     	;# 
  1964  0193                     	;# 
  1965  0194                     	;# 
  1966  0195                     	;# 
  1967  0196                     	;# 
  1968  0197                     	;# 
  1969  0199                     	;# 
  1970  019A                     	;# 
  1971  019B                     	;# 
  1972  019B                     	;# 
  1973  019B                     	;# 
  1974  019B                     	;# 
  1975  019C                     	;# 
  1976  019C                     	;# 
  1977  019D                     	;# 
  1978  019E                     	;# 
  1979  019F                     	;# 
  1980  020D                     	;# 
  1981  0210                     	;# 
  1982  0211                     	;# 
  1983  0211                     	;# 
  1984  0212                     	;# 
  1985  0212                     	;# 
  1986  0213                     	;# 
  1987  0213                     	;# 
  1988  0214                     	;# 
  1989  0214                     	;# 
  1990  0215                     	;# 
  1991  0215                     	;# 
  1992  0215                     	;# 
  1993  0216                     	;# 
  1994  0216                     	;# 
  1995  0217                     	;# 
  1996  0217                     	;# 
  1997  0291                     	;# 
  1998  0291                     	;# 
  1999  0292                     	;# 
  2000  0293                     	;# 
  2001  0298                     	;# 
  2002  0298                     	;# 
  2003  0299                     	;# 
  2004  029A                     	;# 
  2005  0394                     	;# 
  2006  0395                     	;# 
  2007  0396                     	;# 
  2008  0FE4                     	;# 
  2009  0FE5                     	;# 
  2010  0FE6                     	;# 
  2011  0FE7                     	;# 
  2012  0FE8                     	;# 
  2013  0FE9                     	;# 
  2014  0FEA                     	;# 
  2015  0FEB                     	;# 
  2016  0FED                     	;# 
  2017  0FEE                     	;# 
  2018  0FEF                     	;# 
  2019  0000                     	;# 
  2020  0001                     	;# 
  2021  0002                     	;# 
  2022  0003                     	;# 
  2023  0004                     	;# 
  2024  0005                     	;# 
  2025  0006                     	;# 
  2026  0007                     	;# 
  2027  0008                     	;# 
  2028  0009                     	;# 
  2029  000A                     	;# 
  2030  000B                     	;# 
  2031  000C                     	;# 
  2032  000D                     	;# 
  2033  000E                     	;# 
  2034  0010                     	;# 
  2035  0011                     	;# 
  2036  0012                     	;# 
  2037  0015                     	;# 
  2038  0016                     	;# 
  2039  0016                     	;# 
  2040  0017                     	;# 
  2041  0018                     	;# 
  2042  0019                     	;# 
  2043  001A                     	;# 
  2044  001B                     	;# 
  2045  001C                     	;# 
  2046  008C                     	;# 
  2047  008D                     	;# 
  2048  008E                     	;# 
  2049  0090                     	;# 
  2050  0091                     	;# 
  2051  0092                     	;# 
  2052  0095                     	;# 
  2053  0096                     	;# 
  2054  0097                     	;# 
  2055  0099                     	;# 
  2056  009A                     	;# 
  2057  009B                     	;# 
  2058  009B                     	;# 
  2059  009C                     	;# 
  2060  009D                     	;# 
  2061  009E                     	;# 
  2062  010C                     	;# 
  2063  010D                     	;# 
  2064  010E                     	;# 
  2065  0116                     	;# 
  2066  0117                     	;# 
  2067  011D                     	;# 
  2068  018C                     	;# 
  2069  018D                     	;# 
  2070  018E                     	;# 
  2071  0191                     	;# 
  2072  0191                     	;# 
  2073  0192                     	;# 
  2074  0193                     	;# 
  2075  0193                     	;# 
  2076  0194                     	;# 
  2077  0195                     	;# 
  2078  0196                     	;# 
  2079  0197                     	;# 
  2080  0199                     	;# 
  2081  019A                     	;# 
  2082  019B                     	;# 
  2083  019B                     	;# 
  2084  019B                     	;# 
  2085  019B                     	;# 
  2086  019C                     	;# 
  2087  019C                     	;# 
  2088  019D                     	;# 
  2089  019E                     	;# 
  2090  019F                     	;# 
  2091  020D                     	;# 
  2092  0210                     	;# 
  2093  0211                     	;# 
  2094  0211                     	;# 
  2095  0212                     	;# 
  2096  0212                     	;# 
  2097  0213                     	;# 
  2098  0213                     	;# 
  2099  0214                     	;# 
  2100  0214                     	;# 
  2101  0215                     	;# 
  2102  0215                     	;# 
  2103  0215                     	;# 
  2104  0216                     	;# 
  2105  0216                     	;# 
  2106  0217                     	;# 
  2107  0217                     	;# 
  2108  0291                     	;# 
  2109  0291                     	;# 
  2110  0292                     	;# 
  2111  0293                     	;# 
  2112  0298                     	;# 
  2113  0298                     	;# 
  2114  0299                     	;# 
  2115  029A                     	;# 
  2116  0394                     	;# 
  2117  0395                     	;# 
  2118  0396                     	;# 
  2119  0FE4                     	;# 
  2120  0FE5                     	;# 
  2121  0FE6                     	;# 
  2122  0FE7                     	;# 
  2123  0FE8                     	;# 
  2124  0FE9                     	;# 
  2125  0FEA                     	;# 
  2126  0FEB                     	;# 
  2127  0FED                     	;# 
  2128  0FEE                     	;# 
  2129  0FEF                     	;# 
  2130                           
  2131                           	psect	idataBANK3
  2132  152E                     __pidataBANK3:	
  2133                           
  2134                           ;initializer for __product
  2135  152E  3463               	retlw	99
  2136  152F  3402               	retlw	2
  2137  1530  3400               	retlw	0
  2138  1531  3400               	retlw	0
  2139  1532  3400               	retlw	0
  2140  1533  3400               	retlw	0
  2141  1534  3400               	retlw	0
  2142  1535  3400               	retlw	0
  2143  1536  3400               	retlw	0
  2144  1537  3400               	retlw	0
  2145  1538  3400               	retlw	0
  2146  1539  3400               	retlw	0
  2147  153A  34FF               	retlw	255
  2148  153B  34FF               	retlw	255
  2149  153C  34FF               	retlw	255
  2150  153D  3400               	retlw	0
  2151  153E  3400               	retlw	0
  2152  153F  3400               	retlw	0
  2153  1540  3400               	retlw	0
  2154  1541  3400               	retlw	0
  2155  1542  3400               	retlw	0
  2156  1543  3400               	retlw	0
  2157  1544  3400               	retlw	0
  2158  1545  3400               	retlw	0
  2159  1546  3400               	retlw	0
  2160  1547  3400               	retlw	0
  2161  1548  3400               	retlw	0
  2162  1549  3400               	retlw	0
  2163  154A  3400               	retlw	0
  2164  154B  3400               	retlw	0
  2165  154C  3400               	retlw	0
  2166  154D  3400               	retlw	0
  2167                           
  2168                           	psect	nvBANK1
  2169  00EE                     __pnvBANK1:	
  2170  00EE                     _product:	
  2171  00EE                     	ds	1
  2172  000C                     _PORTA	set	12
  2173  000D                     _PORTB	set	13
  2174  000E                     _PORTC	set	14
  2175  0018                     _T1CON	set	24
  2176  0017                     _TMR1H	set	23
  2177  0016                     _TMR1L	set	22
  2178  005F                     _GIE	set	95
  2179  005B                     _IOCIE	set	91
  2180  0058                     _IOCIF	set	88
  2181  005E                     _PEIE	set	94
  2182  0060                     _RA0	set	96
  2183  0064                     _RA4	set	100
  2184  0066                     _RA6	set	102
  2185  0067                     _RA7	set	103
  2186  0068                     _RB0	set	104
  2187  0069                     _RB1	set	105
  2188  006A                     _RB2	set	106
  2189  006B                     _RB3	set	107
  2190  006D                     _RB5	set	109
  2191  0088                     _TMR1IF	set	136
  2192  009D                     _ADCON0	set	157
  2193  009E                     _ADCON1	set	158
  2194  009C                     _ADRESH	set	156
  2195  009B                     _ADRESL	set	155
  2196  0099                     _OSCCON	set	153
  2197  008C                     _TRISA	set	140
  2198  008D                     _TRISB	set	141
  2199  008E                     _TRISC	set	142
  2200  0097                     _WDTCON	set	151
  2201  04E9                     _GO_nDONE	set	1257
  2202  0488                     _TMR1IE	set	1160
  2203  0117                     _FVRCON	set	279
  2204  010C                     _LATA	set	268
  2205  010D                     _LATB	set	269
  2206  010E                     _LATC	set	270
  2207  018C                     _ANSELA	set	396
  2208  018D                     _ANSELB	set	397
  2209  018E                     _ANSELC	set	398
  2210  0192                     _PMADRH	set	402
  2211  0191                     _PMADRL	set	401
  2212  0196                     _PMCON2	set	406
  2213  0194                     _PMDATH	set	404
  2214  0193                     _PMDATL	set	403
  2215  0CAE                     _CFGS	set	3246
  2216  0CAC                     _FREE	set	3244
  2217  0CAD                     _LWLO	set	3245
  2218  0CA8                     _RD	set	3240
  2219  0CA9                     _WR	set	3241
  2220  0CAA                     _WREN	set	3242
  2221  020D                     _WPUB	set	525
  2222  0396                     _IOCBF	set	918
  2223  0395                     _IOCBN	set	917
  2224  0394                     _IOCBP	set	916
  2225  1CB2                     _IOCBF2	set	7346
  2226                           
  2227                           ; #config settings
  2228  0000                     
  2229                           	psect	cinit
  2230  0021                     start_initialization:	
  2231  0021                     __initialization:	
  2232                           
  2233                           ; Clear objects allocated to COMMON
  2234  0021  01FD               	clrf	__pbssCOMMON& (0+127)
  2235                           
  2236                           ; Clear objects allocated to BANK1
  2237  0022  30A0               	movlw	low __pbssBANK1
  2238  0023  0084               	movwf	4
  2239  0024  3000               	movlw	high __pbssBANK1
  2240  0025  0085               	movwf	5
  2241  0026  3048               	movlw	72
  2242  0027  3191  21B7  3180   	fcall	clear_ram0
  2243                           
  2244                           ; Clear objects allocated to BANK2
  2245  002A  3020               	movlw	low __pbssBANK2
  2246  002B  0084               	movwf	4
  2247  002C  3001               	movlw	high __pbssBANK2
  2248  002D  0085               	movwf	5
  2249  002E  303E               	movlw	62
  2250  002F  3191  21B7  3180   	fcall	clear_ram0
  2251                           
  2252                           ; Clear objects allocated to BANK3
  2253  0032  30A0               	movlw	low __pbssBANK3
  2254  0033  0084               	movwf	4
  2255  0034  3001               	movlw	high __pbssBANK3
  2256  0035  0085               	movwf	5
  2257  0036  3025               	movlw	37
  2258  0037  3191  21B7  3180   	fcall	clear_ram0
  2259                           
  2260                           ; Initialize objects allocated to BANK3
  2261  003A  302E               	movlw	low __pidataBANK3
  2262  003B  0084               	movwf	4
  2263  003C  3095               	movlw	(high __pidataBANK3)| (0+128)
  2264  003D  0085               	movwf	5
  2265  003E  30C5               	movlw	low __pdataBANK3
  2266  003F  0086               	movwf	6
  2267  0040  3001               	movlw	high __pdataBANK3
  2268  0041  0087               	movwf	7
  2269  0042  3020               	movlw	32
  2270  0043  3191  21B1         	fcall	init_ram
  2271  0045                     end_of_initialization:	
  2272                           ;End of C runtime variable initialization code
  2273                           
  2274  0045                     __end_of__initialization:	
  2275  0045  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  2276  0046  0020               	movlb	0
  2277  0047  3189  2934         	ljmp	_main	;jump to C main() function
  2278                           
  2279                           	psect	bssCOMMON
  2280  007D                     __pbssCOMMON:	
  2281  007D                     _DimmerLights:	
  2282  007D                     	ds	1
  2283                           
  2284                           	psect	bssBANK1
  2285  00A0                     __pbssBANK1:	
  2286  00A0                     _myMain:	
  2287  00A0                     	ds	13
  2288  00AD                     _Buz1:	
  2289  00AD                     	ds	12
  2290  00B9                     _DimmerIntr1:	
  2291  00B9                     	ds	12
  2292  00C5                     _Dimmer:	
  2293  00C5                     	ds	5
  2294  00CA                     _Timer1:	
  2295  00CA                     	ds	3
  2296  00CD                     _WDT:	
  2297  00CD                     	ds	2
  2298  00CF                     _Cmd:	
  2299  00CF                     	ds	1
  2300  00D0                     _DelayOff:	
  2301  00D0                     	ds	1
  2302  00D1                     _DimmerIntr:	
  2303  00D1                     	ds	1
  2304  00D2                     _LED:	
  2305  00D2                     	ds	1
  2306  00D3                     _Light:	
  2307  00D3                     	ds	1
  2308  00D4                     _Sw:	
  2309  00D4                     	ds	1
  2310  00D5                     _SwDetect:	
  2311  00D5                     	ds	1
  2312  00D6                     _Temp:	
  2313  00D6                     	ds	14
  2314  00E4                     _VarErrLED:	
  2315  00E4                     	ds	4
  2316                           
  2317                           	psect	bssBANK2
  2318  0120                     __pbssBANK2:	
  2319  0120                     _Load:	
  2320  0120                     	ds	40
  2321  0148                     _Sw1:	
  2322  0148                     	ds	9
  2323  0151                     _DimmerLights1:	
  2324  0151                     	ds	8
  2325  0159                     _DlySw1:	
  2326  0159                     	ds	5
  2327                           
  2328                           	psect	bssBANK3
  2329  01A0                     __pbssBANK3:	
  2330  01A0                     _Memory:	
  2331  01A0                     	ds	37
  2332                           
  2333                           	psect	dataBANK3
  2334  01C5                     __pdataBANK3:	
  2335  01C5                     __product:	
  2336  01C5                     	ds	32
  2337                           
  2338                           	psect	clrtext
  2339  11B7                     clear_ram0:	
  2340                           ;	Called with FSR0 containing the base address, and
  2341                           ;	WREG with the size to clear
  2342                           
  2343  11B7  0064               	clrwdt	;clear the watchdog before getting into this loop
  2344  11B8                     clrloop0:	
  2345  11B8  0180               	clrf	0	;clear RAM location pointed to by FSR
  2346  11B9  3101               	addfsr 0,1
  2347  11BA  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2348  11BB  29B8               	goto	clrloop0	;have we reached the end yet?
  2349  11BC  3400               	retlw	0	;all done for this memory range, return
  2350                           
  2351                           	psect	inittext
  2352  11B1                     init_ram:	
  2353  11B1  00FE               	movwf	126
  2354  11B2                     initloop:	
  2355  11B2  0012               	moviw fsr0++
  2356  11B3  001E               	movwi fsr1++
  2357  11B4  0BFE               	decfsz	126,f
  2358  11B5  29B2               	goto	initloop
  2359  11B6  3400               	retlw	0
  2360                           
  2361                           	psect	cstackBANK1
  2362  00E8                     __pcstackBANK1:	
  2363  00E8                     setDimmerLights_OnOff@lights:	
  2364                           
  2365                           ; 1 bytes @ 0x0
  2366  00E8                     	ds	1
  2367  00E9                     setDimmerLights_Main@lights:	
  2368                           
  2369                           ; 1 bytes @ 0x1
  2370  00E9                     	ds	1
  2371  00EA                     ?_main:	
  2372  00EA                     main@argc:	
  2373                           ; 2 bytes @ 0x2
  2374                           
  2375                           
  2376                           ; 2 bytes @ 0x2
  2377  00EA                     	ds	2
  2378  00EC                     main@argv:	
  2379                           
  2380                           ; 2 bytes @ 0x4
  2381  00EC                     	ds	2
  2382                           
  2383                           	psect	cstackCOMMON
  2384  0070                     __pcstackCOMMON:	
  2385  0070                     ?_DlyOff_Initialization:	
  2386  0070                     ?_DlyOff_Main:	
  2387                           ; 0 bytes @ 0x0
  2388                           
  2389  0070                     ?_setDimmerLights_SwOn:	
  2390                           ; 0 bytes @ 0x0
  2391                           
  2392  0070                     ?_setDimmerLights_SwOff:	
  2393                           ; 0 bytes @ 0x0
  2394                           
  2395  0070                     ?_setMemory_Modify:	
  2396                           ; 0 bytes @ 0x0
  2397                           
  2398  0070                     ?_setDimmerLights_Initialization:	
  2399                           ; 0 bytes @ 0x0
  2400                           
  2401  0070                     ?_setDimmerLights_Main:	
  2402                           ; 0 bytes @ 0x0
  2403                           
  2404  0070                     ?_DimmerLights_DimmingFunction:	
  2405                           ; 0 bytes @ 0x0
  2406                           
  2407  0070                     ?_setDimmerLights_Line:	
  2408                           ; 0 bytes @ 0x0
  2409                           
  2410  0070                     ?_setDimmerLights_DimmingClose:	
  2411                           ; 0 bytes @ 0x0
  2412                           
  2413  0070                     ?_setLED_Initialization:	
  2414                           ; 0 bytes @ 0x0
  2415                           
  2416  0070                     ?_setLED_Main:	
  2417                           ; 0 bytes @ 0x0
  2418                           
  2419  0070                     ?_Fosc_Set:	
  2420                           ; 0 bytes @ 0x0
  2421                           
  2422  0070                     ?_IO_Set:	
  2423                           ; 0 bytes @ 0x0
  2424                           
  2425  0070                     ?_TMR1_Set:	
  2426                           ; 0 bytes @ 0x0
  2427                           
  2428  0070                     ?_ADC_Set:	
  2429                           ; 0 bytes @ 0x0
  2430                           
  2431  0070                     ?_IOC_Set:	
  2432                           ; 0 bytes @ 0x0
  2433                           
  2434  0070                     ?_WDT_Set:	
  2435                           ; 0 bytes @ 0x0
  2436                           
  2437  0070                     ?_TMR1_ISR:	
  2438                           ; 0 bytes @ 0x0
  2439                           
  2440  0070                     ?_IOC_ISR:	
  2441                           ; 0 bytes @ 0x0
  2442                           
  2443  0070                     ?_Timeout_Counter:	
  2444                           ; 0 bytes @ 0x0
  2445                           
  2446  0070                     ?_set_TimeoutCleared:	
  2447                           ; 0 bytes @ 0x0
  2448                           
  2449  0070                     ?_Flash_Memory_Write:	
  2450                           ; 0 bytes @ 0x0
  2451                           
  2452  0070                     ?_Flash_Memory_Modify:	
  2453                           ; 0 bytes @ 0x0
  2454                           
  2455  0070                     ?_WDT_Clearing:	
  2456                           ; 0 bytes @ 0x0
  2457                           
  2458  0070                     ?_myMain_Initialization:	
  2459                           ; 0 bytes @ 0x0
  2460                           
  2461  0070                     ?_Temp_Initialization:	
  2462                           ; 0 bytes @ 0x0
  2463                           
  2464  0070                     ?_Load_Initialization:	
  2465                           ; 0 bytes @ 0x0
  2466                           
  2467  0070                     ?_Switch_Initialization:	
  2468                           ; 0 bytes @ 0x0
  2469                           
  2470  0070                     ?_getLoad_AD:	
  2471                           ; 0 bytes @ 0x0
  2472                           
  2473  0070                     ?_getTemp_AD:	
  2474                           ; 0 bytes @ 0x0
  2475                           
  2476  0070                     ?_my_MainTimer:	
  2477                           ; 0 bytes @ 0x0
  2478                           
  2479  0070                     ?_Temp_Main:	
  2480                           ; 0 bytes @ 0x0
  2481                           
  2482  0070                     ?_Load_Main:	
  2483                           ; 0 bytes @ 0x0
  2484                           
  2485  0070                     ?_Switch_Main:	
  2486                           ; 0 bytes @ 0x0
  2487                           
  2488  0070                     ?_Exception_Main:	
  2489                           ; 0 bytes @ 0x0
  2490                           
  2491  0070                     ?_setLoad_AH_AL_Restore:	
  2492                           ; 0 bytes @ 0x0
  2493                           
  2494  0070                     ?_setTemp_Initialization:	
  2495                           ; 0 bytes @ 0x0
  2496                           
  2497  0070                     ?_setTemp_Main:	
  2498                           ; 0 bytes @ 0x0
  2499                           
  2500  0070                     ?_setOverTemp_ADV_Restore:	
  2501                           ; 0 bytes @ 0x0
  2502                           
  2503  0070                     ?_setSw_Initialization:	
  2504                           ; 0 bytes @ 0x0
  2505                           
  2506  0070                     ?_setSw_Main:	
  2507                           ; 0 bytes @ 0x0
  2508                           
  2509  0070                     ?_Buzzer_Initialization:	
  2510                           ; 0 bytes @ 0x0
  2511                           
  2512  0070                     ?_Buzzer_Main:	
  2513                           ; 0 bytes @ 0x0
  2514                           
  2515  0070                     ?_DelayOffPointSelect:	
  2516                           ; 0 bytes @ 0x0
  2517                           
  2518  0070                     ?_DelayOff_Initialization:	
  2519                           ; 0 bytes @ 0x0
  2520                           
  2521  0070                     ?_DelayOff_Main:	
  2522                           ; 0 bytes @ 0x0
  2523                           
  2524  0070                     ?_DimmerIntr_Initialization:	
  2525                           ; 0 bytes @ 0x0
  2526                           
  2527  0070                     ?_DimmerLights_SelectPointer:	
  2528                           ; 0 bytes @ 0x0
  2529                           
  2530  0070                     ?_DimmerLights_Initialization:	
  2531                           ; 0 bytes @ 0x0
  2532                           
  2533  0070                     ?_setDimmerLights_DimmingOn:	
  2534                           ; 0 bytes @ 0x0
  2535                           
  2536  0070                     ?_DimmerLights_Main:	
  2537                           ; 0 bytes @ 0x0
  2538                           
  2539  0070                     ?_DimmerLights_TMR_1:	
  2540                           ; 0 bytes @ 0x0
  2541                           
  2542  0070                     ??_DimmerLights_TMR_1:	
  2543                           ; 0 bytes @ 0x0
  2544                           
  2545  0070                     ?_DimmerLights_IOC_1:	
  2546                           ; 0 bytes @ 0x0
  2547                           
  2548  0070                     ?_LedPointSelect:	
  2549                           ; 0 bytes @ 0x0
  2550                           
  2551  0070                     ?_LED_Initialization:	
  2552                           ; 0 bytes @ 0x0
  2553                           
  2554  0070                     ?_LED_Main:	
  2555                           ; 0 bytes @ 0x0
  2556                           
  2557  0070                     ?_Mcu_Initialization:	
  2558                           ; 0 bytes @ 0x0
  2559                           
  2560  0070                     ?_ISR:	
  2561                           ; 0 bytes @ 0x0
  2562                           
  2563  0070                     ?_Flash_Memory_Initialization:	
  2564                           ; 0 bytes @ 0x0
  2565                           
  2566  0070                     ?_Flash_Memory_Main:	
  2567                           ; 0 bytes @ 0x0
  2568                           
  2569  0070                     ?_Flash_Memory_Unlock:	
  2570                           ; 0 bytes @ 0x0
  2571                           
  2572  0070                     ?_Flash_Memory_Erasing:	
  2573                           ; 0 bytes @ 0x0
  2574                           
  2575  0070                     ?_WDT_Main:	
  2576                           ; 0 bytes @ 0x0
  2577                           
  2578  0070                     ?_TouchPower:	
  2579                           ; 0 bytes @ 0x0
  2580                           
  2581  0070                     ?_SwPointSelect:	
  2582                           ; 0 bytes @ 0x0
  2583                           
  2584  0070                     ?_getDimmerLights_Status:	
  2585                           ; 0 bytes @ 0x0
  2586                           
  2587  0070                     ?_getDimmerLights_ValueToPercent:	
  2588                           ; 1 bytes @ 0x0
  2589                           
  2590  0070                     ?_getDimmerLights_PercentToValue:	
  2591                           ; 1 bytes @ 0x0
  2592                           
  2593  0070                     ?_getLoad_OK:	
  2594                           ; 1 bytes @ 0x0
  2595                           
  2596  0070                     ?_getMain_All_Error_Status:	
  2597                           ; 1 bytes @ 0x0
  2598                           
  2599  0070                     ?_getMain_All_LightsStatus:	
  2600                           ; 1 bytes @ 0x0
  2601                           
  2602  0070                     ?_getDimmerLights_Allow_Condition:	
  2603                           ; 1 bytes @ 0x0
  2604                           
  2605  0070                     ?_getCmd_Status:	
  2606                           ; 1 bytes @ 0x0
  2607                           
  2608  0070                     ?_Flash_Memory_Read:	
  2609                           ; 1 bytes @ 0x0
  2610                           
  2611  0070                     ?_getAll_Sw_KeyStatus:	
  2612                           ; 1 bytes @ 0x0
  2613                           
  2614  0070                     ?_getSw_KeyStatus:	
  2615                           ; 1 bytes @ 0x0
  2616                           
  2617  0070                     ?_getDelayOff_GO:	
  2618                           ; 1 bytes @ 0x0
  2619                           
  2620  0070                     ?_getDimmerIntr_DimmingValue:	
  2621                           ; 1 bytes @ 0x0
  2622                           
  2623  0070                     ?_getDimmerIntr_Dimming_Sw:	
  2624                           ; 1 bytes @ 0x0
  2625                           
  2626  0070                     ?_getAll_DimmerIntr_Dimming_Sw_RF:	
  2627                           ; 1 bytes @ 0x0
  2628                           
  2629  0070                     ?_getDimmerLights_Line:	
  2630                           ; 1 bytes @ 0x0
  2631                           
  2632  0070                     ?_getDimmer_LoadGO:	
  2633                           ; 1 bytes @ 0x0
  2634                           
  2635  0070                     ?_getDimmer_Load_Status:	
  2636                           ; 1 bytes @ 0x0
  2637                           
  2638  0070                     ?_getMain_Lights_Count:	
  2639                           ; 1 bytes @ 0x0
  2640                           
  2641  0070                     ?i1___lbdiv:	
  2642                           ; 1 bytes @ 0x0
  2643                           
  2644  0070                     setDimmerLights_Initialization@lights:	
  2645                           ; 1 bytes @ 0x0
  2646                           
  2647  0070                     getDimmerLights_Allow_Condition@lights:	
  2648                           ; 1 bytes @ 0x0
  2649                           
  2650  0070                     getSw_KeyStatus@sw:	
  2651                           ; 1 bytes @ 0x0
  2652                           
  2653  0070                     i1___lbdiv@divisor:	
  2654                           ; 1 bytes @ 0x0
  2655                           
  2656                           
  2657                           ; 1 bytes @ 0x0
  2658  0070                     	ds	1
  2659  0071                     ??_TMR1_ISR:	
  2660  0071                     ??i1___lbdiv:	
  2661                           ; 0 bytes @ 0x1
  2662                           
  2663                           
  2664                           ; 0 bytes @ 0x1
  2665  0071                     	ds	1
  2666  0072                     i1___lbdiv@dividend:	
  2667                           
  2668                           ; 1 bytes @ 0x2
  2669  0072                     	ds	1
  2670  0073                     i1___lbdiv@counter:	
  2671                           
  2672                           ; 1 bytes @ 0x3
  2673  0073                     	ds	1
  2674  0074                     i1___lbdiv@quotient:	
  2675                           
  2676                           ; 1 bytes @ 0x4
  2677  0074                     	ds	1
  2678  0075                     ?i1_Division:	
  2679  0075                     i1Division@num:	
  2680                           ; 1 bytes @ 0x5
  2681                           
  2682                           
  2683                           ; 1 bytes @ 0x5
  2684  0075                     	ds	1
  2685  0076                     ??i1_Division:	
  2686                           
  2687                           ; 0 bytes @ 0x6
  2688  0076                     	ds	2
  2689  0078                     i1Division@value:	
  2690                           
  2691                           ; 1 bytes @ 0x8
  2692  0078                     	ds	1
  2693  0079                     i1Division@result:	
  2694                           
  2695                           ; 1 bytes @ 0x9
  2696  0079                     	ds	1
  2697  007A                     ??_DimmerLights_IOC_1:	
  2698                           
  2699                           ; 0 bytes @ 0xA
  2700  007A                     	ds	2
  2701  007C                     ??_IOC_ISR:	
  2702  007C                     ??_ISR:	
  2703                           ; 0 bytes @ 0xC
  2704                           
  2705                           
  2706                           ; 0 bytes @ 0xC
  2707  007C                     	ds	1
  2708                           
  2709                           	psect	cstackBANK0
  2710  0020                     __pcstackBANK0:	
  2711  0020                     ??_setMemory_Modify:	
  2712  0020                     ??_setDimmerLights_Initialization:	
  2713                           ; 0 bytes @ 0x0
  2714                           
  2715  0020                     ??_getLoad_OK:	
  2716                           ; 0 bytes @ 0x0
  2717                           
  2718  0020                     ??_getMain_All_Error_Status:	
  2719                           ; 0 bytes @ 0x0
  2720                           
  2721  0020                     ??_getMain_All_LightsStatus:	
  2722                           ; 0 bytes @ 0x0
  2723                           
  2724  0020                     ??_DimmerLights_DimmingFunction:	
  2725                           ; 0 bytes @ 0x0
  2726                           
  2727  0020                     ??_setDimmerLights_Line:	
  2728                           ; 0 bytes @ 0x0
  2729                           
  2730  0020                     ??_getCmd_Status:	
  2731                           ; 0 bytes @ 0x0
  2732                           
  2733  0020                     ?_setCmd_Status:	
  2734                           ; 0 bytes @ 0x0
  2735                           
  2736  0020                     ??_Fosc_Set:	
  2737                           ; 0 bytes @ 0x0
  2738                           
  2739  0020                     ??_IO_Set:	
  2740                           ; 0 bytes @ 0x0
  2741                           
  2742  0020                     ??_TMR1_Set:	
  2743                           ; 0 bytes @ 0x0
  2744                           
  2745  0020                     ??_ADC_Set:	
  2746                           ; 0 bytes @ 0x0
  2747                           
  2748  0020                     ??_IOC_Set:	
  2749                           ; 0 bytes @ 0x0
  2750                           
  2751  0020                     ??_WDT_Set:	
  2752                           ; 0 bytes @ 0x0
  2753                           
  2754  0020                     ??_Timeout_Counter:	
  2755                           ; 0 bytes @ 0x0
  2756                           
  2757  0020                     ??_set_TimeoutCleared:	
  2758                           ; 0 bytes @ 0x0
  2759                           
  2760  0020                     ??_Flash_Memory_Read:	
  2761                           ; 0 bytes @ 0x0
  2762                           
  2763  0020                     ?_setMemory_Data:	
  2764                           ; 0 bytes @ 0x0
  2765                           
  2766  0020                     ??_Flash_Memory_Write:	
  2767                           ; 0 bytes @ 0x0
  2768                           
  2769  0020                     ??_getAll_Sw_KeyStatus:	
  2770                           ; 0 bytes @ 0x0
  2771                           
  2772  0020                     ??_WDT_Clearing:	
  2773                           ; 0 bytes @ 0x0
  2774                           
  2775  0020                     ??_myMain_Initialization:	
  2776                           ; 0 bytes @ 0x0
  2777                           
  2778  0020                     ??_Temp_Initialization:	
  2779                           ; 0 bytes @ 0x0
  2780                           
  2781  0020                     ??_setLoad_AH_AL_Restore:	
  2782                           ; 0 bytes @ 0x0
  2783                           
  2784  0020                     ??_setTemp_Initialization:	
  2785                           ; 0 bytes @ 0x0
  2786                           
  2787  0020                     ??_setOverTemp_ADV_Restore:	
  2788                           ; 0 bytes @ 0x0
  2789                           
  2790  0020                     ??_getSw_KeyStatus:	
  2791                           ; 0 bytes @ 0x0
  2792                           
  2793  0020                     ??_Buzzer_Initialization:	
  2794                           ; 0 bytes @ 0x0
  2795                           
  2796  0020                     ??_Buzzer_Main:	
  2797                           ; 0 bytes @ 0x0
  2798                           
  2799  0020                     ??_DelayOffPointSelect:	
  2800                           ; 0 bytes @ 0x0
  2801                           
  2802  0020                     ?_setDimmerIntr_ControlStatus:	
  2803                           ; 0 bytes @ 0x0
  2804                           
  2805  0020                     ??_getDimmerIntr_DimmingValue:	
  2806                           ; 0 bytes @ 0x0
  2807                           
  2808  0020                     ?_setDimmerIntr_Dimming_Sw:	
  2809                           ; 0 bytes @ 0x0
  2810                           
  2811  0020                     ??_getDimmerIntr_Dimming_Sw:	
  2812                           ; 0 bytes @ 0x0
  2813                           
  2814  0020                     ?_setDimmerIntr_Dimming_RF:	
  2815                           ; 0 bytes @ 0x0
  2816                           
  2817  0020                     ??_getAll_DimmerIntr_Dimming_Sw_RF:	
  2818                           ; 0 bytes @ 0x0
  2819                           
  2820  0020                     ??_DimmerLights_SelectPointer:	
  2821                           ; 0 bytes @ 0x0
  2822                           
  2823  0020                     ??_getDimmerLights_Line:	
  2824                           ; 0 bytes @ 0x0
  2825                           
  2826  0020                     ??_getDimmer_LoadGO:	
  2827                           ; 0 bytes @ 0x0
  2828                           
  2829  0020                     ??_getDimmer_Load_Status:	
  2830                           ; 0 bytes @ 0x0
  2831                           
  2832  0020                     ??_LedPointSelect:	
  2833                           ; 0 bytes @ 0x0
  2834                           
  2835  0020                     ??_Flash_Memory_Unlock:	
  2836                           ; 0 bytes @ 0x0
  2837                           
  2838  0020                     ??_Flash_Memory_Erasing:	
  2839                           ; 0 bytes @ 0x0
  2840                           
  2841  0020                     ??_WDT_Main:	
  2842                           ; 0 bytes @ 0x0
  2843                           
  2844  0020                     ??_getMain_Lights_Count:	
  2845                           ; 0 bytes @ 0x0
  2846                           
  2847  0020                     ??_TouchPower:	
  2848                           ; 0 bytes @ 0x0
  2849                           
  2850  0020                     ??_SwPointSelect:	
  2851                           ; 0 bytes @ 0x0
  2852                           
  2853  0020                     ?___bmul:	
  2854                           ; 0 bytes @ 0x0
  2855                           
  2856  0020                     ?___lbdiv:	
  2857                           ; 1 bytes @ 0x0
  2858                           
  2859  0020                     ?_getAD:	
  2860                           ; 1 bytes @ 0x0
  2861                           
  2862  0020                     ?___wmul:	
  2863                           ; 2 bytes @ 0x0
  2864                           
  2865  0020                     ?___awdiv:	
  2866                           ; 2 bytes @ 0x0
  2867                           
  2868  0020                     ?___lwdiv:	
  2869                           ; 2 bytes @ 0x0
  2870                           
  2871  0020                     ?___ftpack:	
  2872                           ; 2 bytes @ 0x0
  2873                           
  2874  0020                     setDimmerIntr_ControlStatus@command:	
  2875                           ; 3 bytes @ 0x0
  2876                           
  2877  0020                     setDimmerIntr_Dimming_Sw@command:	
  2878                           ; 1 bytes @ 0x0
  2879                           
  2880  0020                     getDimmerIntr_Dimming_Sw@lights:	
  2881                           ; 1 bytes @ 0x0
  2882                           
  2883  0020                     setDimmerIntr_Dimming_RF@command:	
  2884                           ; 1 bytes @ 0x0
  2885                           
  2886  0020                     getAll_DimmerIntr_Dimming_Sw_RF@status:	
  2887                           ; 1 bytes @ 0x0
  2888                           
  2889  0020                     setDimmerLights_Line@lights:	
  2890                           ; 1 bytes @ 0x0
  2891                           
  2892  0020                     getDimmerLights_Line@line:	
  2893                           ; 1 bytes @ 0x0
  2894                           
  2895  0020                     getDimmer_LoadGO@loadgo:	
  2896                           ; 1 bytes @ 0x0
  2897                           
  2898  0020                     getDimmer_Load_Status@status:	
  2899                           ; 1 bytes @ 0x0
  2900                           
  2901  0020                     getAD@adcon1:	
  2902                           ; 1 bytes @ 0x0
  2903                           
  2904  0020                     setMemory_Data@data:	
  2905                           ; 1 bytes @ 0x0
  2906                           
  2907  0020                     getMain_All_LightsStatus@status:	
  2908                           ; 1 bytes @ 0x0
  2909                           
  2910  0020                     getMain_Lights_Count@count:	
  2911                           ; 1 bytes @ 0x0
  2912                           
  2913  0020                     setCmd_Status@cmd:	
  2914                           ; 1 bytes @ 0x0
  2915                           
  2916  0020                     getCmd_Status@number:	
  2917                           ; 1 bytes @ 0x0
  2918                           
  2919  0020                     getLoad_OK@ok:	
  2920                           ; 1 bytes @ 0x0
  2921                           
  2922  0020                     ___bmul@multiplicand:	
  2923                           ; 1 bytes @ 0x0
  2924                           
  2925  0020                     ___lbdiv@divisor:	
  2926                           ; 1 bytes @ 0x0
  2927                           
  2928  0020                     ___wmul@multiplier:	
  2929                           ; 1 bytes @ 0x0
  2930                           
  2931  0020                     ___awdiv@divisor:	
  2932                           ; 2 bytes @ 0x0
  2933                           
  2934  0020                     ___lwdiv@divisor:	
  2935                           ; 2 bytes @ 0x0
  2936                           
  2937  0020                     ___ftpack@arg:	
  2938                           ; 2 bytes @ 0x0
  2939                           
  2940                           
  2941                           ; 3 bytes @ 0x0
  2942  0020                     	ds	1
  2943  0021                     ??_getDimmerLights_Allow_Condition:	
  2944  0021                     ??_setCmd_Status:	
  2945                           ; 0 bytes @ 0x1
  2946                           
  2947  0021                     ??_setMemory_Data:	
  2948                           ; 0 bytes @ 0x1
  2949                           
  2950  0021                     ??_setDimmerIntr_ControlStatus:	
  2951                           ; 0 bytes @ 0x1
  2952                           
  2953  0021                     ??_setDimmerIntr_Dimming_Sw:	
  2954                           ; 0 bytes @ 0x1
  2955                           
  2956  0021                     ??_setDimmerIntr_Dimming_RF:	
  2957                           ; 0 bytes @ 0x1
  2958                           
  2959  0021                     ??_Mcu_Initialization:	
  2960                           ; 0 bytes @ 0x1
  2961                           
  2962  0021                     ??___bmul:	
  2963                           ; 0 bytes @ 0x1
  2964                           
  2965  0021                     ??___lbdiv:	
  2966                           ; 0 bytes @ 0x1
  2967                           
  2968  0021                     DelayOffPointSelect@sw:	
  2969                           ; 0 bytes @ 0x1
  2970                           
  2971  0021                     getDimmerIntr_DimmingValue@lights:	
  2972                           ; 1 bytes @ 0x1
  2973                           
  2974  0021                     getDimmerIntr_Dimming_Sw@status:	
  2975                           ; 1 bytes @ 0x1
  2976                           
  2977  0021                     DimmerLights_SelectPointer@lights:	
  2978                           ; 1 bytes @ 0x1
  2979                           
  2980  0021                     DimmerLights_DimmingFunction@lights:	
  2981                           ; 1 bytes @ 0x1
  2982                           
  2983  0021                     LedPointSelect@led:	
  2984                           ; 1 bytes @ 0x1
  2985                           
  2986  0021                     Flash_Memory_Read@i:	
  2987                           ; 1 bytes @ 0x1
  2988                           
  2989  0021                     Flash_Memory_Write@i:	
  2990                           ; 1 bytes @ 0x1
  2991                           
  2992  0021                     setMemory_Modify@command:	
  2993                           ; 1 bytes @ 0x1
  2994                           
  2995  0021                     getMain_Lights_Count@status1:	
  2996                           ; 1 bytes @ 0x1
  2997                           
  2998  0021                     getCmd_Status@cmd:	
  2999                           ; 1 bytes @ 0x1
  3000                           
  3001  0021                     setLoad_AH_AL_Restore@i:	
  3002                           ; 1 bytes @ 0x1
  3003                           
  3004  0021                     SwPointSelect@sw:	
  3005                           ; 1 bytes @ 0x1
  3006                           
  3007  0021                     getSw_KeyStatus@status:	
  3008                           ; 1 bytes @ 0x1
  3009                           
  3010  0021                     getAll_Sw_KeyStatus@status:	
  3011                           ; 1 bytes @ 0x1
  3012                           
  3013  0021                     _getMain_All_Error_Status$3083:	
  3014                           ; 1 bytes @ 0x1
  3015                           
  3016  0021                     setOverTemp_ADV_Restore@i:	
  3017                           ; 2 bytes @ 0x1
  3018                           
  3019                           
  3020                           ; 2 bytes @ 0x1
  3021  0021                     	ds	1
  3022  0022                     ??_DlyOff_Initialization:	
  3023  0022                     ??_getDimmerLights_Status:	
  3024                           ; 0 bytes @ 0x2
  3025                           
  3026  0022                     ??_setDimmerLights_SwOff:	
  3027                           ; 0 bytes @ 0x2
  3028                           
  3029  0022                     ?_setLED:	
  3030                           ; 0 bytes @ 0x2
  3031                           
  3032  0022                     ??_setLED_Main:	
  3033                           ; 0 bytes @ 0x2
  3034                           
  3035  0022                     ??_Load_Initialization:	
  3036                           ; 0 bytes @ 0x2
  3037                           
  3038  0022                     ??_getDelayOff_GO:	
  3039                           ; 0 bytes @ 0x2
  3040                           
  3041  0022                     ??_setDimmerLights_DimmingOn:	
  3042                           ; 0 bytes @ 0x2
  3043                           
  3044  0022                     DlyOff_Initialization@sw:	
  3045                           ; 0 bytes @ 0x2
  3046                           
  3047  0022                     getDelayOff_GO@sw:	
  3048                           ; 1 bytes @ 0x2
  3049                           
  3050  0022                     setDimmerIntr_ControlStatus@lights:	
  3051                           ; 1 bytes @ 0x2
  3052                           
  3053  0022                     getDimmerIntr_DimmingValue@value:	
  3054                           ; 1 bytes @ 0x2
  3055                           
  3056  0022                     setDimmerIntr_Dimming_Sw@lights:	
  3057                           ; 1 bytes @ 0x2
  3058                           
  3059  0022                     setDimmerIntr_Dimming_RF@lights:	
  3060                           ; 1 bytes @ 0x2
  3061                           
  3062  0022                     setDimmerLights_SwOff@sw:	
  3063                           ; 1 bytes @ 0x2
  3064                           
  3065  0022                     setDimmerLights_DimmingOn@sw:	
  3066                           ; 1 bytes @ 0x2
  3067                           
  3068  0022                     getDimmerLights_Allow_Condition@allow:	
  3069                           ; 1 bytes @ 0x2
  3070                           
  3071  0022                     getDimmerLights_Status@lights:	
  3072                           ; 1 bytes @ 0x2
  3073                           
  3074  0022                     setLED@command:	
  3075                           ; 1 bytes @ 0x2
  3076                           
  3077  0022                     Flash_Memory_Read@address:	
  3078                           ; 1 bytes @ 0x2
  3079                           
  3080  0022                     setMemory_Data@address:	
  3081                           ; 1 bytes @ 0x2
  3082                           
  3083  0022                     setCmd_Status@number:	
  3084                           ; 1 bytes @ 0x2
  3085                           
  3086  0022                     _getSw_KeyStatus$5430:	
  3087                           ; 1 bytes @ 0x2
  3088                           
  3089  0022                     _getAll_Sw_KeyStatus$5433:	
  3090                           ; 1 bytes @ 0x2
  3091                           
  3092  0022                     ___bmul@product:	
  3093                           ; 1 bytes @ 0x2
  3094                           
  3095  0022                     ___lbdiv@dividend:	
  3096                           ; 1 bytes @ 0x2
  3097                           
  3098  0022                     ___wmul@multiplicand:	
  3099                           ; 1 bytes @ 0x2
  3100                           
  3101  0022                     ___awdiv@dividend:	
  3102                           ; 2 bytes @ 0x2
  3103                           
  3104  0022                     ___lwdiv@dividend:	
  3105                           ; 2 bytes @ 0x2
  3106                           
  3107                           
  3108                           ; 2 bytes @ 0x2
  3109  0022                     	ds	1
  3110  0023                     ??_setLED:	
  3111  0023                     ??_setDimmerLights_DimmingClose:	
  3112                           ; 0 bytes @ 0x3
  3113                           
  3114  0023                     ??_DelayOff_Initialization:	
  3115                           ; 0 bytes @ 0x3
  3116                           
  3117  0023                     ??_getAD:	
  3118                           ; 0 bytes @ 0x3
  3119                           
  3120  0023                     getDelayOff_GO@go:	
  3121                           ; 0 bytes @ 0x3
  3122                           
  3123  0023                     _getDimmerLights_Allow_Condition$1902:	
  3124                           ; 1 bytes @ 0x3
  3125                           
  3126  0023                     getDimmerLights_Status@status:	
  3127                           ; 1 bytes @ 0x3
  3128                           
  3129  0023                     setLED@led:	
  3130                           ; 1 bytes @ 0x3
  3131                           
  3132  0023                     getAD@adcon0:	
  3133                           ; 1 bytes @ 0x3
  3134                           
  3135  0023                     Flash_Memory_Read@ret:	
  3136                           ; 1 bytes @ 0x3
  3137                           
  3138  0023                     ___bmul@multiplier:	
  3139                           ; 1 bytes @ 0x3
  3140                           
  3141  0023                     ___ftpack@exp:	
  3142                           ; 1 bytes @ 0x3
  3143                           
  3144  0023                     ___lbdiv@counter:	
  3145                           ; 1 bytes @ 0x3
  3146                           
  3147  0023                     _getMain_All_Error_Status$3084:	
  3148                           ; 1 bytes @ 0x3
  3149                           
  3150                           
  3151                           ; 2 bytes @ 0x3
  3152  0023                     	ds	1
  3153  0024                     ??_setLED_Initialization:	
  3154  0024                     ??_Flash_Memory_Modify:	
  3155                           ; 0 bytes @ 0x4
  3156                           
  3157  0024                     ??_getLoad_AD:	
  3158                           ; 0 bytes @ 0x4
  3159                           
  3160  0024                     ??_getTemp_AD:	
  3161                           ; 0 bytes @ 0x4
  3162                           
  3163  0024                     ??_setSw_Initialization:	
  3164                           ; 0 bytes @ 0x4
  3165                           
  3166  0024                     ??_Flash_Memory_Initialization:	
  3167                           ; 0 bytes @ 0x4
  3168                           
  3169  0024                     ??___wmul:	
  3170                           ; 0 bytes @ 0x4
  3171                           
  3172  0024                     ??___awdiv:	
  3173                           ; 0 bytes @ 0x4
  3174                           
  3175  0024                     ??___lwdiv:	
  3176                           ; 0 bytes @ 0x4
  3177                           
  3178  0024                     setLED_Initialization@led:	
  3179                           ; 0 bytes @ 0x4
  3180                           
  3181  0024                     setLED_Main@led:	
  3182                           ; 1 bytes @ 0x4
  3183                           
  3184  0024                     setSw_Initialization@sw:	
  3185                           ; 1 bytes @ 0x4
  3186                           
  3187  0024                     ___ftpack@sign:	
  3188                           ; 1 bytes @ 0x4
  3189                           
  3190  0024                     ___lbdiv@quotient:	
  3191                           ; 1 bytes @ 0x4
  3192                           
  3193  0024                     ___wmul@product:	
  3194                           ; 1 bytes @ 0x4
  3195                           
  3196                           
  3197                           ; 2 bytes @ 0x4
  3198  0024                     	ds	1
  3199  0025                     ??_Switch_Initialization:	
  3200  0025                     ??___ftpack:	
  3201                           ; 0 bytes @ 0x5
  3202                           
  3203  0025                     ??_LED_Initialization:	
  3204                           ; 0 bytes @ 0x5
  3205                           
  3206  0025                     ??_LED_Main:	
  3207                           ; 0 bytes @ 0x5
  3208                           
  3209  0025                     ?_Division:	
  3210                           ; 0 bytes @ 0x5
  3211                           
  3212  0025                     Division@num:	
  3213                           ; 1 bytes @ 0x5
  3214                           
  3215  0025                     Flash_Memory_Initialization@value:	
  3216                           ; 1 bytes @ 0x5
  3217                           
  3218  0025                     Flash_Memory_Modify@i:	
  3219                           ; 1 bytes @ 0x5
  3220                           
  3221  0025                     getMain_All_Error_Status@command:	
  3222                           ; 1 bytes @ 0x5
  3223                           
  3224  0025                     getTemp_AD@channel:	
  3225                           ; 1 bytes @ 0x5
  3226                           
  3227  0025                     ___awdiv@counter:	
  3228                           ; 1 bytes @ 0x5
  3229                           
  3230  0025                     ___lwdiv@quotient:	
  3231                           ; 1 bytes @ 0x5
  3232                           
  3233                           
  3234                           ; 2 bytes @ 0x5
  3235  0025                     	ds	1
  3236  0026                     ??_Division:	
  3237  0026                     ??_Flash_Memory_Main:	
  3238                           ; 0 bytes @ 0x6
  3239                           
  3240  0026                     getMain_All_Error_Status@status:	
  3241                           ; 0 bytes @ 0x6
  3242                           
  3243  0026                     getLoad_AD@channel:	
  3244                           ; 1 bytes @ 0x6
  3245                           
  3246  0026                     ___awdiv@sign:	
  3247                           ; 1 bytes @ 0x6
  3248                           
  3249  0026                     getTemp_AD@ADRES:	
  3250                           ; 1 bytes @ 0x6
  3251                           
  3252                           
  3253                           ; 2 bytes @ 0x6
  3254  0026                     	ds	1
  3255  0027                     Flash_Memory_Main@key_Status:	
  3256  0027                     getLoad_AD@k:	
  3257                           ; 1 bytes @ 0x7
  3258                           
  3259  0027                     ___lwdiv@counter:	
  3260                           ; 1 bytes @ 0x7
  3261                           
  3262  0027                     ___awdiv@quotient:	
  3263                           ; 1 bytes @ 0x7
  3264                           
  3265                           
  3266                           ; 2 bytes @ 0x7
  3267  0027                     	ds	1
  3268  0028                     ??_Load_Main:	
  3269  0028                     ?___awtoft:	
  3270                           ; 0 bytes @ 0x8
  3271                           
  3272  0028                     Division@value:	
  3273                           ; 3 bytes @ 0x8
  3274                           
  3275  0028                     _Flash_Memory_Main$2681:	
  3276                           ; 1 bytes @ 0x8
  3277                           
  3278  0028                     getLoad_AD@j:	
  3279                           ; 1 bytes @ 0x8
  3280                           
  3281  0028                     ___awtoft@c:	
  3282                           ; 1 bytes @ 0x8
  3283                           
  3284                           
  3285                           ; 2 bytes @ 0x8
  3286  0028                     	ds	1
  3287  0029                     ?_setBuz:	
  3288  0029                     Division@result:	
  3289                           ; 0 bytes @ 0x9
  3290                           
  3291  0029                     setBuz@time:	
  3292                           ; 1 bytes @ 0x9
  3293                           
  3294  0029                     getLoad_AD@ADRES:	
  3295                           ; 2 bytes @ 0x9
  3296                           
  3297                           
  3298                           ; 2 bytes @ 0x9
  3299  0029                     	ds	1
  3300  002A                     _Load_Main$3412:	
  3301                           
  3302                           ; 2 bytes @ 0xA
  3303  002A                     	ds	1
  3304  002B                     ??_setBuz:	
  3305  002B                     ??___awtoft:	
  3306                           ; 0 bytes @ 0xB
  3307                           
  3308  002B                     getLoad_AD@i:	
  3309                           ; 0 bytes @ 0xB
  3310                           
  3311                           
  3312                           ; 1 bytes @ 0xB
  3313  002B                     	ds	1
  3314  002C                     setBuz@count:	
  3315  002C                     Load_Main@error:	
  3316                           ; 1 bytes @ 0xC
  3317                           
  3318                           
  3319                           ; 1 bytes @ 0xC
  3320  002C                     	ds	1
  3321  002D                     ??_setDimmerLights_SwOn:	
  3322  002D                     ??_my_MainTimer:	
  3323                           ; 0 bytes @ 0xD
  3324                           
  3325  002D                     ??_Exception_Main:	
  3326                           ; 0 bytes @ 0xD
  3327                           
  3328  002D                     Load_Main@ErrorCountValue:	
  3329                           ; 0 bytes @ 0xD
  3330                           
  3331  002D                     ___awtoft@sign:	
  3332                           ; 1 bytes @ 0xD
  3333                           
  3334                           
  3335                           ; 1 bytes @ 0xD
  3336  002D                     	ds	1
  3337  002E                     ?___ftdiv:	
  3338  002E                     ?___ftmul:	
  3339                           ; 3 bytes @ 0xE
  3340                           
  3341  002E                     setDimmerLights_SwOn@idle:	
  3342                           ; 3 bytes @ 0xE
  3343                           
  3344  002E                     Exception_Main@status:	
  3345                           ; 1 bytes @ 0xE
  3346                           
  3347  002E                     Load_Main@Load_RunStatus:	
  3348                           ; 1 bytes @ 0xE
  3349                           
  3350  002E                     ___ftdiv@f2:	
  3351                           ; 1 bytes @ 0xE
  3352                           
  3353  002E                     ___ftmul@f1:	
  3354                           ; 3 bytes @ 0xE
  3355                           
  3356                           
  3357                           ; 3 bytes @ 0xE
  3358  002E                     	ds	1
  3359  002F                     setDimmerLights_SwOn@dimmingStatus:	
  3360  002F                     Exception_Main@count:	
  3361                           ; 1 bytes @ 0xF
  3362                           
  3363  002F                     Load_Main@LightsCount:	
  3364                           ; 1 bytes @ 0xF
  3365                           
  3366                           
  3367                           ; 1 bytes @ 0xF
  3368  002F                     	ds	1
  3369  0030                     setDimmerLights_SwOn@sw:	
  3370  0030                     Exception_Main@i:	
  3371                           ; 1 bytes @ 0x10
  3372                           
  3373  0030                     Load_Main@i:	
  3374                           ; 2 bytes @ 0x10
  3375                           
  3376                           
  3377                           ; 2 bytes @ 0x10
  3378  0030                     	ds	1
  3379  0031                     ??_setSw_Main:	
  3380  0031                     ___ftdiv@f1:	
  3381                           ; 0 bytes @ 0x11
  3382                           
  3383  0031                     ___ftmul@f2:	
  3384                           ; 3 bytes @ 0x11
  3385                           
  3386                           
  3387                           ; 3 bytes @ 0x11
  3388  0031                     	ds	1
  3389  0032                     Exception_Main@i_3095:	
  3390                           
  3391                           ; 2 bytes @ 0x12
  3392  0032                     	ds	1
  3393  0033                     setSw_Main@sw:	
  3394                           
  3395                           ; 1 bytes @ 0x13
  3396  0033                     	ds	1
  3397  0034                     ??_Switch_Main:	
  3398  0034                     ??___ftdiv:	
  3399                           ; 0 bytes @ 0x14
  3400                           
  3401  0034                     ??___ftmul:	
  3402                           ; 0 bytes @ 0x14
  3403                           
  3404  0034                     Exception_Main@error:	
  3405                           ; 0 bytes @ 0x14
  3406                           
  3407                           
  3408                           ; 1 bytes @ 0x14
  3409  0034                     	ds	1
  3410  0035                     Exception_Main@lights:	
  3411                           
  3412                           ; 1 bytes @ 0x15
  3413  0035                     	ds	3
  3414  0038                     ___ftdiv@cntr:	
  3415  0038                     ___ftmul@exp:	
  3416                           ; 1 bytes @ 0x18
  3417                           
  3418                           
  3419                           ; 1 bytes @ 0x18
  3420  0038                     	ds	1
  3421  0039                     ___ftdiv@f3:	
  3422  0039                     ___ftmul@f3_as_product:	
  3423                           ; 3 bytes @ 0x19
  3424                           
  3425                           
  3426                           ; 3 bytes @ 0x19
  3427  0039                     	ds	3
  3428  003C                     ___ftdiv@exp:	
  3429  003C                     ___ftmul@cntr:	
  3430                           ; 1 bytes @ 0x1C
  3431                           
  3432                           
  3433                           ; 1 bytes @ 0x1C
  3434  003C                     	ds	1
  3435  003D                     ___ftdiv@sign:	
  3436  003D                     ___ftmul@sign:	
  3437                           ; 1 bytes @ 0x1D
  3438                           
  3439                           
  3440                           ; 1 bytes @ 0x1D
  3441  003D                     	ds	1
  3442  003E                     ?___ftneg:	
  3443  003E                     ___ftneg@f1:	
  3444                           ; 3 bytes @ 0x1E
  3445                           
  3446                           
  3447                           ; 3 bytes @ 0x1E
  3448  003E                     	ds	3
  3449  0041                     ??___ftneg:	
  3450  0041                     ?___ftadd:	
  3451                           ; 0 bytes @ 0x21
  3452                           
  3453  0041                     ___ftadd@f1:	
  3454                           ; 3 bytes @ 0x21
  3455                           
  3456                           
  3457                           ; 3 bytes @ 0x21
  3458  0041                     	ds	3
  3459  0044                     ___ftadd@f2:	
  3460                           
  3461                           ; 3 bytes @ 0x24
  3462  0044                     	ds	3
  3463  0047                     ??___ftadd:	
  3464                           
  3465                           ; 0 bytes @ 0x27
  3466  0047                     	ds	4
  3467  004B                     ___ftadd@sign:	
  3468                           
  3469                           ; 1 bytes @ 0x2B
  3470  004B                     	ds	1
  3471  004C                     ___ftadd@exp2:	
  3472                           
  3473                           ; 1 bytes @ 0x2C
  3474  004C                     	ds	1
  3475  004D                     ___ftadd@exp1:	
  3476                           
  3477                           ; 1 bytes @ 0x2D
  3478  004D                     	ds	1
  3479  004E                     ?___fttol:	
  3480  004E                     ___fttol@f1:	
  3481                           ; 4 bytes @ 0x2E
  3482                           
  3483                           
  3484                           ; 3 bytes @ 0x2E
  3485  004E                     	ds	4
  3486  0052                     ??___fttol:	
  3487                           
  3488                           ; 0 bytes @ 0x32
  3489  0052                     	ds	4
  3490  0056                     ___fttol@sign1:	
  3491                           
  3492                           ; 1 bytes @ 0x36
  3493  0056                     	ds	1
  3494  0057                     ___fttol@lval:	
  3495                           
  3496                           ; 4 bytes @ 0x37
  3497  0057                     	ds	4
  3498  005B                     ___fttol@exp1:	
  3499                           
  3500                           ; 1 bytes @ 0x3B
  3501  005B                     	ds	1
  3502  005C                     ??_getDimmerLights_ValueToPercent:	
  3503  005C                     ??_getDimmerLights_PercentToValue:	
  3504                           ; 0 bytes @ 0x3C
  3505                           
  3506                           
  3507                           ; 0 bytes @ 0x3C
  3508  005C                     	ds	2
  3509  005E                     getDimmerLights_PercentToValue@value:	
  3510  005E                     getDimmerLights_ValueToPercent@value:	
  3511                           ; 1 bytes @ 0x3E
  3512                           
  3513                           
  3514                           ; 1 bytes @ 0x3E
  3515  005E                     	ds	1
  3516  005F                     getDimmerLights_PercentToValue@i:	
  3517  005F                     getDimmerLights_ValueToPercent@i:	
  3518                           ; 3 bytes @ 0x3F
  3519                           
  3520                           
  3521                           ; 3 bytes @ 0x3F
  3522  005F                     	ds	3
  3523  0062                     ?_setProductData:	
  3524  0062                     ??_DimmerIntr_Initialization:	
  3525                           ; 0 bytes @ 0x42
  3526                           
  3527  0062                     ?_setDimmerIntr_DimmingValue:	
  3528                           ; 0 bytes @ 0x42
  3529                           
  3530  0062                     setDimmerIntr_DimmingValue@value:	
  3531                           ; 0 bytes @ 0x42
  3532                           
  3533  0062                     setProductData@value:	
  3534                           ; 1 bytes @ 0x42
  3535                           
  3536                           
  3537                           ; 1 bytes @ 0x42
  3538  0062                     	ds	1
  3539  0063                     ??_setProductData:	
  3540  0063                     ??_setDimmerIntr_DimmingValue:	
  3541                           ; 0 bytes @ 0x43
  3542                           
  3543                           
  3544                           ; 0 bytes @ 0x43
  3545  0063                     	ds	1
  3546  0064                     ??_DimmerLights_Initialization:	
  3547  0064                     setDimmerIntr_DimmingValue@lights:	
  3548                           ; 0 bytes @ 0x44
  3549                           
  3550  0064                     setProductData@address:	
  3551                           ; 1 bytes @ 0x44
  3552                           
  3553                           
  3554                           ; 1 bytes @ 0x44
  3555  0064                     	ds	1
  3556  0065                     ??_DlyOff_Main:	
  3557  0065                     ?_setDimmerLights_Dimming:	
  3558                           ; 0 bytes @ 0x45
  3559                           
  3560  0065                     ??_setTemp_Main:	
  3561                           ; 0 bytes @ 0x45
  3562                           
  3563  0065                     ?_setDelayOff_GO:	
  3564                           ; 0 bytes @ 0x45
  3565                           
  3566  0065                     setDelayOff_GO@command:	
  3567                           ; 0 bytes @ 0x45
  3568                           
  3569  0065                     setDimmerLights_Dimming@status:	
  3570                           ; 1 bytes @ 0x45
  3571                           
  3572                           
  3573                           ; 1 bytes @ 0x45
  3574  0065                     	ds	1
  3575  0066                     ??_setDimmerLights_Dimming:	
  3576  0066                     setDelayOff_GO@value:	
  3577                           ; 0 bytes @ 0x46
  3578                           
  3579                           
  3580                           ; 1 bytes @ 0x46
  3581  0066                     	ds	1
  3582  0067                     ??_setDelayOff_GO:	
  3583  0067                     DlyOff_Main@sw:	
  3584                           ; 0 bytes @ 0x47
  3585                           
  3586  0067                     setDimmerLights_Dimming@value:	
  3587                           ; 1 bytes @ 0x47
  3588                           
  3589  0067                     setTemp_Main@error:	
  3590                           ; 1 bytes @ 0x47
  3591                           
  3592                           
  3593                           ; 1 bytes @ 0x47
  3594  0067                     	ds	1
  3595  0068                     ??_DelayOff_Main:	
  3596  0068                     setDimmerLights_Dimming@lights:	
  3597                           ; 0 bytes @ 0x48
  3598                           
  3599  0068                     setTemp_Main@SafeValue:	
  3600                           ; 1 bytes @ 0x48
  3601                           
  3602                           
  3603                           ; 2 bytes @ 0x48
  3604  0068                     	ds	1
  3605  0069                     setDelayOff_GO@i:	
  3606                           
  3607                           ; 1 bytes @ 0x49
  3608  0069                     	ds	1
  3609  006A                     setDelayOff_GO@j:	
  3610  006A                     setTemp_Main@DangerValue:	
  3611                           ; 1 bytes @ 0x4A
  3612                           
  3613                           
  3614                           ; 2 bytes @ 0x4A
  3615  006A                     	ds	1
  3616  006B                     setDelayOff_GO@k:	
  3617                           
  3618                           ; 1 bytes @ 0x4B
  3619  006B                     	ds	1
  3620  006C                     setDelayOff_GO@sw:	
  3621  006C                     setTemp_Main@TempGO:	
  3622                           ; 1 bytes @ 0x4C
  3623                           
  3624                           
  3625                           ; 1 bytes @ 0x4C
  3626  006C                     	ds	1
  3627  006D                     ?_setDimmerLights_OnOff:	
  3628  006D                     setDimmerLights_OnOff@command:	
  3629                           ; 0 bytes @ 0x4D
  3630                           
  3631  006D                     setTemp_Main@AD:	
  3632                           ; 1 bytes @ 0x4D
  3633                           
  3634                           
  3635                           ; 2 bytes @ 0x4D
  3636  006D                     	ds	1
  3637  006E                     ??_setDimmerLights_OnOff:	
  3638                           
  3639                           ; 0 bytes @ 0x4E
  3640  006E                     	ds	1
  3641  006F                     ??_Temp_Main:	
  3642                           
  3643                           ; 0 bytes @ 0x4F
  3644  006F                     	ds	1
  3645  0070                     ??_setDimmerLights_Main:	
  3646  0070                     ??_DimmerLights_Main:	
  3647                           ; 0 bytes @ 0x50
  3648                           
  3649  0070                     ??_main:	
  3650                           ; 0 bytes @ 0x50
  3651                           
  3652                           
  3653                           	psect	maintext
  3654  0934                     __pmaintext:	
  3655                           ; 0 bytes @ 0x50
  3656 ;;
  3657 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3658 ;;
  3659 ;; *************** function _main *****************
  3660 ;; Defined at:
  3661 ;;		line 7 in file "../src/Main_B1.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;  argc            2    2[BANK1 ] int 
  3664 ;;  argv            2    4[BANK1 ] PTR PTR unsigned char 
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;		None
  3667 ;; Return value:  Size  Location     Type
  3668 ;;                  2    2[BANK1 ] int 
  3669 ;; Registers used:
  3670 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3671 ;; Tracked objects:
  3672 ;;		On entry : 17F/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3676 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3679 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3680 ;;Total ram usage:        4 bytes
  3681 ;; Hardware stack levels required when called:   11
  3682 ;; This function calls:
  3683 ;;		_Buzzer_Initialization
  3684 ;;		_Buzzer_Main
  3685 ;;		_DelayOff_Initialization
  3686 ;;		_DelayOff_Main
  3687 ;;		_DimmerLights_Initialization
  3688 ;;		_DimmerLights_Main
  3689 ;;		_Exception_Main
  3690 ;;		_Flash_Memory_Initialization
  3691 ;;		_Flash_Memory_Main
  3692 ;;		_LED_Initialization
  3693 ;;		_LED_Main
  3694 ;;		_Load_Initialization
  3695 ;;		_Load_Main
  3696 ;;		_Mcu_Initialization
  3697 ;;		_Switch_Initialization
  3698 ;;		_Switch_Main
  3699 ;;		_Temp_Initialization
  3700 ;;		_Temp_Main
  3701 ;;		_WDT_Main
  3702 ;;		_getLoad_AD
  3703 ;;		_getTemp_AD
  3704 ;;		_myMain_Initialization
  3705 ;;		_my_MainTimer
  3706 ;; This function is called by:
  3707 ;;		Startup code after reset
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711                           
  3712                           ;psect for function _main
  3713  0934                     _main:	
  3714                           
  3715                           ;Main_B1.c: 8: myMain_Initialization();
  3716                           
  3717                           ;incstack = 0
  3718                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3719  0934  3193  23AE  3189   	fcall	_myMain_Initialization
  3720                           
  3721                           ;Main_B1.c: 9: Mcu_Initialization();
  3722  0937  3193  2377  3189   	fcall	_Mcu_Initialization
  3723                           
  3724                           ;Main_B1.c: 10: Flash_Memory_Initialization();
  3725  093A  3186  2602  3189   	fcall	_Flash_Memory_Initialization
  3726                           
  3727                           ;Main_B1.c: 11: LED_Initialization();
  3728  093D  3191  2190  3189   	fcall	_LED_Initialization
  3729                           
  3730                           ;Main_B1.c: 12: Buzzer_Initialization();
  3731  0940  3191  217C  3189   	fcall	_Buzzer_Initialization
  3732                           
  3733                           ;Main_B1.c: 14: ;;
  3734                           ;Main_B1.c: 15: Temp_Initialization();
  3735  0943  3191  2182  3189   	fcall	_Temp_Initialization
  3736                           
  3737                           ;Main_B1.c: 16: Load_Initialization();
  3738  0946  3191  217F  3189   	fcall	_Load_Initialization
  3739                           
  3740                           ;Main_B1.c: 17: ;;
  3741                           ;Main_B1.c: 18: DelayOff_Initialization();
  3742  0949  3191  2188  3189   	fcall	_DelayOff_Initialization
  3743                           
  3744                           ;Main_B1.c: 20: DimmerLights_Initialization();
  3745  094C  3191  21BD  3189   	fcall	_DimmerLights_Initialization
  3746                           
  3747                           ;Main_B1.c: 21: ;;
  3748                           ;Main_B1.c: 22: ;;
  3749                           ;Main_B1.c: 23: ;;
  3750                           ;Main_B1.c: 24: Switch_Initialization();
  3751  094F  3191  219C  3189   	fcall	_Switch_Initialization
  3752  0952                     l6276:	
  3753                           ;Main_B1.c: 25: ;;
  3754                           ;Main_B1.c: 26: ;;
  3755                           ;Main_B1.c: 27: ;;
  3756                           ;Main_B1.c: 28: ;;
  3757                           ;Main_B1.c: 30: while (1) {
  3758                           
  3759                           
  3760                           ;Main_B1.c: 32: if (myMain.PowerON == 1) {
  3761  0952  0021               	movlb	1	; select bank1
  3762  0953  1C20               	btfss	_myMain^(0+128),0
  3763  0954  295D               	goto	l6280
  3764                           
  3765                           ;Main_B1.c: 38: getLoad_AD(0x05);
  3766  0955  3005               	movlw	5
  3767  0956  3187  2780  3189   	fcall	_getLoad_AD
  3768                           
  3769                           ;Main_B1.c: 42: getTemp_AD(0x09);
  3770  0959  3009               	movlw	9
  3771  095A  318E  262C  3189   	fcall	_getTemp_AD
  3772  095D                     l6280:	
  3773                           
  3774                           ;Main_B1.c: 57: }
  3775                           ;Main_B1.c: 93: if (Timer1.Timeout == 1) {
  3776  095D  0021               	movlb	1	; select bank1
  3777  095E  1C4A               	btfss	_Timer1^(0+128),0
  3778  095F  2952               	goto	l6276
  3779                           
  3780                           ;Main_B1.c: 94: Timer1.Timeout = 0;
  3781  0960  104A               	bcf	_Timer1^(0+128),0
  3782                           
  3783                           ;Main_B1.c: 96: my_MainTimer();
  3784  0961  3197  2787  3189   	fcall	_my_MainTimer
  3785                           
  3786                           ;Main_B1.c: 97: WDT_Main();
  3787  0964  3193  2389  3189   	fcall	_WDT_Main
  3788                           
  3789                           ;Main_B1.c: 98: ;;
  3790                           ;Main_B1.c: 99: ;;
  3791                           ;Main_B1.c: 100: if (myMain.PowerON == 1) {
  3792  0967  0021               	movlb	1	; select bank1
  3793  0968  1C20               	btfss	_myMain^(0+128),0
  3794  0969  2952               	goto	l6276
  3795                           
  3796                           ;Main_B1.c: 101: Flash_Memory_Main();
  3797  096A  3188  2019  3189   	fcall	_Flash_Memory_Main
  3798                           
  3799                           ;Main_B1.c: 103: LED_Main();
  3800  096D  3191  2194  3189   	fcall	_LED_Main
  3801                           
  3802                           ;Main_B1.c: 104: Buzzer_Main();
  3803  0970  3188  20A0  3189   	fcall	_Buzzer_Main
  3804                           
  3805                           ;Main_B1.c: 106: ;;
  3806                           ;Main_B1.c: 107: Temp_Main();
  3807  0973  3191  2185  3189   	fcall	_Temp_Main
  3808                           
  3809                           ;Main_B1.c: 108: Load_Main();
  3810  0976  3180  2049  3189   	fcall	_Load_Main
  3811                           
  3812                           ;Main_B1.c: 109: ;;
  3813                           ;Main_B1.c: 111: ;;
  3814                           ;Main_B1.c: 112: DimmerLights_Main();
  3815  0979  3194  24EE  3189   	fcall	_DimmerLights_Main
  3816                           
  3817                           ;Main_B1.c: 113: Switch_Main();
  3818  097C  3191  21CB  3189   	fcall	_Switch_Main
  3819                           
  3820                           ;Main_B1.c: 114: ;;
  3821                           ;Main_B1.c: 115: ;;
  3822                           ;Main_B1.c: 117: ;;
  3823                           ;Main_B1.c: 118: DelayOff_Main();
  3824  097F  3191  218C  3189   	fcall	_DelayOff_Main
  3825                           
  3826                           ;Main_B1.c: 119: ;;
  3827                           ;Main_B1.c: 120: ;;
  3828                           ;Main_B1.c: 121: Exception_Main();
  3829  0982  3185  2530  3189   	fcall	_Exception_Main
  3830  0985  2952               	goto	l6276
  3831  0986                     __end_of_main:	
  3832                           ;Main_B1.c: 128: }
  3833                           ;Main_B1.c: 129: }
  3834                           ;Main_B1.c: 163: }
  3835                           ;Main_B1.c: 164: return (0);
  3836                           ;	Return value of _main is never used
  3837                           
  3838                           
  3839                           	psect	text1
  3840  1787                     __ptext1:	
  3841 ;; *************** function _my_MainTimer *****************
  3842 ;; Defined at:
  3843 ;;		line 185 in file "../src/Main_B1.c"
  3844 ;; Parameters:    Size  Location     Type
  3845 ;;		None
  3846 ;; Auto vars:     Size  Location     Type
  3847 ;;		None
  3848 ;; Return value:  Size  Location     Type
  3849 ;;		None               void
  3850 ;; Registers used:
  3851 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3852 ;; Tracked objects:
  3853 ;;		On entry : 0/0
  3854 ;;		On exit  : 0/0
  3855 ;;		Unchanged: 0/0
  3856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3859 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3860 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3861 ;;Total ram usage:        1 bytes
  3862 ;; Hardware stack levels used:    1
  3863 ;; Hardware stack levels required when called:    7
  3864 ;; This function calls:
  3865 ;;		_setBuz
  3866 ;; This function is called by:
  3867 ;;		_main
  3868 ;; This function uses a non-reentrant model
  3869 ;;
  3870                           
  3871                           
  3872                           ;psect for function _my_MainTimer
  3873  1787                     _my_MainTimer:	
  3874                           
  3875                           ;Main_B1.c: 187: if (myMain.PowerON == 0) {
  3876                           
  3877                           ;incstack = 0
  3878                           ; Regs used in _my_MainTimer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3879  1787  0021               	movlb	1	; select bank1
  3880  1788  1820               	btfsc	_myMain^(0+128),0
  3881  1789  2FA1               	goto	l5940
  3882                           
  3883                           ;Main_B1.c: 188: myMain.PowerCount++;
  3884  178A  3001               	movlw	1
  3885  178B  0020               	movlb	0	; select bank0
  3886  178C  00AD               	movwf	??_my_MainTimer
  3887  178D  082D               	movf	??_my_MainTimer,w
  3888  178E  0021               	movlb	1	; select bank1
  3889  178F  07A1               	addwf	(_myMain^(0+128)+1),f
  3890                           
  3891                           ;Main_B1.c: 189: if (myMain.PowerCount == (1500 / 20)) {
  3892  1790  0821               	movf	(_myMain^(0+128)+1),w
  3893  1791  3A4B               	xorlw	75
  3894  1792  1D03               	skipz
  3895  1793  0008               	return
  3896                           
  3897                           ;Main_B1.c: 190: myMain.PowerCount = 0;
  3898  1794  01A1               	clrf	(_myMain^(0+128)+1)
  3899                           
  3900                           ;Main_B1.c: 191: myMain.PowerON = 1;
  3901  1795  1420               	bsf	_myMain^(0+128),0
  3902                           
  3903                           ;Main_B1.c: 196: setBuz(3, 50);
  3904  1796  3032               	movlw	50
  3905  1797  0020               	movlb	0	; select bank0
  3906  1798  00A9               	movwf	setBuz@time
  3907  1799  3000               	movlw	0
  3908  179A  00AA               	movwf	setBuz@time+1
  3909  179B  3003               	movlw	3
  3910  179C  3189  21DA         	fcall	_setBuz
  3911                           
  3912                           ;Main_B1.c: 197: myMain.SelfTest = 1;
  3913  179E  0021               	movlb	1	; select bank1
  3914  179F  1620               	bsf	_myMain^(0+128),4
  3915                           
  3916                           ;Main_B1.c: 206: }
  3917                           ;Main_B1.c: 207: } else {
  3918  17A0  0008               	return
  3919  17A1                     l5940:	
  3920                           
  3921                           ;Main_B1.c: 208: myMain.PowerCount++;
  3922  17A1  3001               	movlw	1
  3923  17A2  0020               	movlb	0	; select bank0
  3924  17A3  00AD               	movwf	??_my_MainTimer
  3925  17A4  082D               	movf	??_my_MainTimer,w
  3926  17A5  0021               	movlb	1	; select bank1
  3927  17A6  07A1               	addwf	(_myMain^(0+128)+1),f
  3928                           
  3929                           ;Main_B1.c: 209: if (myMain.PowerCount == (1000 / 20)) {
  3930  17A7  0821               	movf	(_myMain^(0+128)+1),w
  3931  17A8  3A32               	xorlw	50
  3932  17A9  1903               	btfsc	3,2
  3933                           
  3934                           ;Main_B1.c: 210: myMain.PowerCount = 0;
  3935  17AA  01A1               	clrf	(_myMain^(0+128)+1)
  3936                           
  3937                           ;Main_B1.c: 226: }
  3938                           ;Main_B1.c: 228: myMain.Count1++;
  3939  17AB  3001               	movlw	1
  3940  17AC  07A4               	addwf	(_myMain^(0+128)+4),f
  3941  17AD  3000               	movlw	0
  3942  17AE  3DA5               	addwfc	((_myMain+1)^(0+128)+4),f
  3943                           
  3944                           ;Main_B1.c: 229: if (myMain.Count1 == (1000 / 20)) {
  3945  17AF  3004               	movlw	4
  3946  17B0  3EA0               	addlw	_myMain& (0+255)
  3947  17B1  0086               	movwf	6
  3948  17B2  0187               	clrf	7
  3949  17B3  3F40               	moviw [0]fsr1
  3950  17B4  3A32               	xorlw	50
  3951  17B5  1D03               	skipz
  3952  17B6  2FB9               	goto	u6505
  3953  17B7  3F41               	moviw [1]fsr1
  3954  17B8  3A00               	xorlw	0
  3955  17B9                     u6505:	
  3956  17B9  1D03               	skipz
  3957  17BA  0008               	return
  3958                           
  3959                           ;Main_B1.c: 230: myMain.Count1 = 0;
  3960  17BB  01A4               	clrf	(_myMain^(0+128)+4)
  3961  17BC  01A5               	clrf	((_myMain+1)^(0+128)+4)
  3962                           
  3963                           ;Main_B1.c: 242: if (myMain.Flag) {
  3964  17BD  1CA0               	btfss	_myMain^(0+128),1
  3965  17BE  2FC1               	goto	l1046
  3966                           
  3967                           ;Main_B1.c: 243: myMain.Flag = 0;
  3968  17BF  10A0               	bcf	_myMain^(0+128),1
  3969                           
  3970                           ;Main_B1.c: 252: } else {
  3971  17C0  0008               	return
  3972  17C1                     l1046:	
  3973                           
  3974                           ;Main_B1.c: 253: myMain.Flag = 1;
  3975  17C1  14A0               	bsf	_myMain^(0+128),1
  3976  17C2  0008               	return
  3977  17C3                     __end_of_my_MainTimer:	
  3978                           
  3979                           	psect	text2
  3980  13AE                     __ptext2:	
  3981 ;; *************** function _myMain_Initialization *****************
  3982 ;; Defined at:
  3983 ;;		line 170 in file "../src/Main_B1.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;		None
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;		None
  3988 ;; Return value:  Size  Location     Type
  3989 ;;		None               void
  3990 ;; Registers used:
  3991 ;;		wreg, fsr1l, fsr1h
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3999 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4000 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4001 ;;Total ram usage:        1 bytes
  4002 ;; Hardware stack levels used:    1
  4003 ;; Hardware stack levels required when called:    5
  4004 ;; This function calls:
  4005 ;;		Nothing
  4006 ;; This function is called by:
  4007 ;;		_main
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           
  4012                           ;psect for function _myMain_Initialization
  4013  13AE                     _myMain_Initialization:	
  4014                           
  4015                           ;Main_B1.c: 173: product = &_product;
  4016                           
  4017                           ;incstack = 0
  4018                           ; Regs used in _myMain_Initialization: [wregfsr1]
  4019  13AE  30C5               	movlw	__product& (0+255)
  4020  13AF  0020               	movlb	0	; select bank0
  4021  13B0  00A0               	movwf	??_myMain_Initialization
  4022  13B1  0820               	movf	??_myMain_Initialization,w
  4023  13B2  0021               	movlb	1	; select bank1
  4024  13B3  00EE               	movwf	_product^(0+128)
  4025                           
  4026                           ;Main_B1.c: 174: product->Data[20] = 209;
  4027  13B4  30D1               	movlw	209
  4028  13B5  0020               	movlb	0	; select bank0
  4029  13B6  00A0               	movwf	??_myMain_Initialization
  4030  13B7  0021               	movlb	1	; select bank1
  4031  13B8  086E               	movf	_product^(0+128),w
  4032  13B9  3E14               	addlw	20
  4033  13BA  0086               	movwf	6
  4034  13BB  3001               	movlw	1	; select bank2/3
  4035  13BC  0087               	movwf	7
  4036  13BD  0020               	movlb	0	; select bank0
  4037  13BE  0820               	movf	??_myMain_Initialization,w
  4038  13BF  0081               	movwf	1
  4039  13C0  0008               	return
  4040  13C1                     __end_of_myMain_Initialization:	
  4041                           
  4042                           	psect	text3
  4043  0E2C                     __ptext3:	
  4044 ;; *************** function _getTemp_AD *****************
  4045 ;; Defined at:
  4046 ;;		line 15 in file "../src/OverTemperature_B1.c"
  4047 ;; Parameters:    Size  Location     Type
  4048 ;;  channel         1    wreg     unsigned char 
  4049 ;; Auto vars:     Size  Location     Type
  4050 ;;  channel         1    5[BANK0 ] unsigned char 
  4051 ;;  ADRES           2    6[BANK0 ] unsigned int 
  4052 ;; Return value:  Size  Location     Type
  4053 ;;		None               void
  4054 ;; Registers used:
  4055 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4056 ;; Tracked objects:
  4057 ;;		On entry : 0/0
  4058 ;;		On exit  : 0/0
  4059 ;;		Unchanged: 0/0
  4060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4062 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4063 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4064 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4065 ;;Total ram usage:        4 bytes
  4066 ;; Hardware stack levels used:    1
  4067 ;; Hardware stack levels required when called:    7
  4068 ;; This function calls:
  4069 ;;		_getAD
  4070 ;; This function is called by:
  4071 ;;		_main
  4072 ;; This function uses a non-reentrant model
  4073 ;;
  4074                           
  4075                           
  4076                           ;psect for function _getTemp_AD
  4077  0E2C                     _getTemp_AD:	
  4078                           
  4079                           ;incstack = 0
  4080                           ; Regs used in _getTemp_AD: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4081                           ;getTemp_AD@channel stored from wreg
  4082  0E2C  0020               	movlb	0	; select bank0
  4083  0E2D  00A5               	movwf	getTemp_AD@channel
  4084                           
  4085                           ;OverTemperature_B1.c: 16: ADtype ADRES = 0;
  4086  0E2E  01A6               	clrf	getTemp_AD@ADRES
  4087  0E2F  01A7               	clrf	getTemp_AD@ADRES+1
  4088                           
  4089                           ;OverTemperature_B1.c: 19: if (Temp.ADtoGO == 1) {
  4090  0E30  0021               	movlb	1	; select bank1
  4091  0E31  1D56               	btfss	_Temp^(0+128),2
  4092  0E32  0008               	return
  4093                           
  4094                           ;OverTemperature_B1.c: 21: ADRES = getAD(channel, 0xf0);
  4095  0E33  30F0               	movlw	240
  4096  0E34  0020               	movlb	0	; select bank0
  4097  0E35  00A4               	movwf	??_getTemp_AD
  4098  0E36  0824               	movf	??_getTemp_AD,w
  4099  0E37  00A0               	movwf	getAD@adcon1
  4100  0E38  0825               	movf	getTemp_AD@channel,w
  4101  0E39  3195  250E  318E   	fcall	_getAD
  4102  0E3C  0020               	movlb	0	; select bank0
  4103  0E3D  0821               	movf	?_getAD+1,w
  4104  0E3E  01A7               	clrf	getTemp_AD@ADRES+1
  4105  0E3F  07A7               	addwf	getTemp_AD@ADRES+1,f
  4106  0E40  0820               	movf	?_getAD,w
  4107  0E41  01A6               	clrf	getTemp_AD@ADRES
  4108  0E42  07A6               	addwf	getTemp_AD@ADRES,f
  4109                           
  4110                           ;OverTemperature_B1.c: 29: if (ADRES > 0) {
  4111  0E43  0827               	movf	getTemp_AD@ADRES+1,w
  4112  0E44  0426               	iorwf	getTemp_AD@ADRES,w
  4113  0E45  1903               	skipnz
  4114  0E46  0008               	return
  4115                           
  4116                           ;OverTemperature_B1.c: 30: if (Temp.ADV[0] < ADRES) {
  4117  0E47  0827               	movf	getTemp_AD@ADRES+1,w
  4118  0E48  0021               	movlb	1	; select bank1
  4119  0E49  025B               	subwf	((_Temp+1)^(0+128)+4),w
  4120  0E4A  1D03               	skipz
  4121  0E4B  2E50               	goto	u6425
  4122  0E4C  0020               	movlb	0	; select bank0
  4123  0E4D  0826               	movf	getTemp_AD@ADRES,w
  4124  0E4E  0021               	movlb	1	; select bank1
  4125  0E4F  025A               	subwf	(_Temp^(0+128)+4),w
  4126  0E50                     u6425:	
  4127  0E50  1803               	skipnc
  4128  0E51  2E5D               	goto	l5910
  4129                           
  4130                           ;OverTemperature_B1.c: 31: Temp.ADV[0] = ADRES;
  4131  0E52  0020               	movlb	0	; select bank0
  4132  0E53  0827               	movf	getTemp_AD@ADRES+1,w
  4133  0E54  0021               	movlb	1	; select bank1
  4134  0E55  01DB               	clrf	((_Temp+1)^(0+128)+4)
  4135  0E56  07DB               	addwf	((_Temp+1)^(0+128)+4),f
  4136  0E57  0020               	movlb	0	; select bank0
  4137  0E58  0826               	movf	getTemp_AD@ADRES,w
  4138  0E59  0021               	movlb	1	; select bank1
  4139  0E5A  01DA               	clrf	(_Temp^(0+128)+4)
  4140  0E5B  07DA               	addwf	(_Temp^(0+128)+4),f
  4141                           
  4142                           ;OverTemperature_B1.c: 32: } else if (Temp.ADV[1] < ADRES) {
  4143  0E5C  0008               	return
  4144  0E5D                     l5910:	
  4145  0E5D  0020               	movlb	0	; select bank0
  4146  0E5E  0827               	movf	getTemp_AD@ADRES+1,w
  4147  0E5F  0021               	movlb	1	; select bank1
  4148  0E60  025D               	subwf	((_Temp+1)^(0+128)+6),w
  4149  0E61  1D03               	skipz
  4150  0E62  2E67               	goto	u6435
  4151  0E63  0020               	movlb	0	; select bank0
  4152  0E64  0826               	movf	getTemp_AD@ADRES,w
  4153  0E65  0021               	movlb	1	; select bank1
  4154  0E66  025C               	subwf	(_Temp^(0+128)+6),w
  4155  0E67                     u6435:	
  4156  0E67  1803               	skipnc
  4157  0E68  2E74               	goto	l5914
  4158                           
  4159                           ;OverTemperature_B1.c: 33: Temp.ADV[1] = ADRES;
  4160  0E69  0020               	movlb	0	; select bank0
  4161  0E6A  0827               	movf	getTemp_AD@ADRES+1,w
  4162  0E6B  0021               	movlb	1	; select bank1
  4163  0E6C  01DD               	clrf	((_Temp+1)^(0+128)+6)
  4164  0E6D  07DD               	addwf	((_Temp+1)^(0+128)+6),f
  4165  0E6E  0020               	movlb	0	; select bank0
  4166  0E6F  0826               	movf	getTemp_AD@ADRES,w
  4167  0E70  0021               	movlb	1	; select bank1
  4168  0E71  01DC               	clrf	(_Temp^(0+128)+6)
  4169  0E72  07DC               	addwf	(_Temp^(0+128)+6),f
  4170                           
  4171                           ;OverTemperature_B1.c: 34: } else if (Temp.ADV[2] < ADRES) {
  4172  0E73  0008               	return
  4173  0E74                     l5914:	
  4174  0E74  0020               	movlb	0	; select bank0
  4175  0E75  0827               	movf	getTemp_AD@ADRES+1,w
  4176  0E76  0021               	movlb	1	; select bank1
  4177  0E77  025F               	subwf	((_Temp+1)^(0+128)+8),w
  4178  0E78  1D03               	skipz
  4179  0E79  2E7E               	goto	u6445
  4180  0E7A  0020               	movlb	0	; select bank0
  4181  0E7B  0826               	movf	getTemp_AD@ADRES,w
  4182  0E7C  0021               	movlb	1	; select bank1
  4183  0E7D  025E               	subwf	(_Temp^(0+128)+8),w
  4184  0E7E                     u6445:	
  4185  0E7E  1803               	skipnc
  4186  0E7F  2E8B               	goto	l5918
  4187                           
  4188                           ;OverTemperature_B1.c: 35: Temp.ADV[2] = ADRES;
  4189  0E80  0020               	movlb	0	; select bank0
  4190  0E81  0827               	movf	getTemp_AD@ADRES+1,w
  4191  0E82  0021               	movlb	1	; select bank1
  4192  0E83  01DF               	clrf	((_Temp+1)^(0+128)+8)
  4193  0E84  07DF               	addwf	((_Temp+1)^(0+128)+8),f
  4194  0E85  0020               	movlb	0	; select bank0
  4195  0E86  0826               	movf	getTemp_AD@ADRES,w
  4196  0E87  0021               	movlb	1	; select bank1
  4197  0E88  01DE               	clrf	(_Temp^(0+128)+8)
  4198  0E89  07DE               	addwf	(_Temp^(0+128)+8),f
  4199                           
  4200                           ;OverTemperature_B1.c: 36: } else if (Temp.ADV[3] < ADRES) {
  4201  0E8A  0008               	return
  4202  0E8B                     l5918:	
  4203  0E8B  0020               	movlb	0	; select bank0
  4204  0E8C  0827               	movf	getTemp_AD@ADRES+1,w
  4205  0E8D  0021               	movlb	1	; select bank1
  4206  0E8E  0261               	subwf	((_Temp+1)^(0+128)+10),w
  4207  0E8F  1D03               	skipz
  4208  0E90  2E95               	goto	u6455
  4209  0E91  0020               	movlb	0	; select bank0
  4210  0E92  0826               	movf	getTemp_AD@ADRES,w
  4211  0E93  0021               	movlb	1	; select bank1
  4212  0E94  0260               	subwf	(_Temp^(0+128)+10),w
  4213  0E95                     u6455:	
  4214  0E95  1803               	skipnc
  4215  0E96  2EA2               	goto	l5922
  4216                           
  4217                           ;OverTemperature_B1.c: 37: Temp.ADV[3] = ADRES;
  4218  0E97  0020               	movlb	0	; select bank0
  4219  0E98  0827               	movf	getTemp_AD@ADRES+1,w
  4220  0E99  0021               	movlb	1	; select bank1
  4221  0E9A  01E1               	clrf	((_Temp+1)^(0+128)+10)
  4222  0E9B  07E1               	addwf	((_Temp+1)^(0+128)+10),f
  4223  0E9C  0020               	movlb	0	; select bank0
  4224  0E9D  0826               	movf	getTemp_AD@ADRES,w
  4225  0E9E  0021               	movlb	1	; select bank1
  4226  0E9F  01E0               	clrf	(_Temp^(0+128)+10)
  4227  0EA0  07E0               	addwf	(_Temp^(0+128)+10),f
  4228                           
  4229                           ;OverTemperature_B1.c: 38: } else if (Temp.ADV[4] < ADRES) {
  4230  0EA1  0008               	return
  4231  0EA2                     l5922:	
  4232  0EA2  0020               	movlb	0	; select bank0
  4233  0EA3  0827               	movf	getTemp_AD@ADRES+1,w
  4234  0EA4  0021               	movlb	1	; select bank1
  4235  0EA5  0263               	subwf	((_Temp+1)^(0+128)+12),w
  4236  0EA6  1D03               	skipz
  4237  0EA7  2EAC               	goto	u6465
  4238  0EA8  0020               	movlb	0	; select bank0
  4239  0EA9  0826               	movf	getTemp_AD@ADRES,w
  4240  0EAA  0021               	movlb	1	; select bank1
  4241  0EAB  0262               	subwf	(_Temp^(0+128)+12),w
  4242  0EAC                     u6465:	
  4243  0EAC  1803               	skipnc
  4244  0EAD  0008               	return
  4245                           
  4246                           ;OverTemperature_B1.c: 39: Temp.ADV[4] = ADRES;
  4247  0EAE  0020               	movlb	0	; select bank0
  4248  0EAF  0827               	movf	getTemp_AD@ADRES+1,w
  4249  0EB0  0021               	movlb	1	; select bank1
  4250  0EB1  01E3               	clrf	((_Temp+1)^(0+128)+12)
  4251  0EB2  07E3               	addwf	((_Temp+1)^(0+128)+12),f
  4252  0EB3  0020               	movlb	0	; select bank0
  4253  0EB4  0826               	movf	getTemp_AD@ADRES,w
  4254  0EB5  0021               	movlb	1	; select bank1
  4255  0EB6  01E2               	clrf	(_Temp^(0+128)+12)
  4256  0EB7  07E2               	addwf	(_Temp^(0+128)+12),f
  4257  0EB8  0008               	return
  4258  0EB9                     __end_of_getTemp_AD:	
  4259                           
  4260                           	psect	text4
  4261  0780                     __ptext4:	
  4262 ;; *************** function _getLoad_AD *****************
  4263 ;; Defined at:
  4264 ;;		line 16 in file "../src/OverLoad_B1.c"
  4265 ;; Parameters:    Size  Location     Type
  4266 ;;  channel         1    wreg     unsigned char 
  4267 ;; Auto vars:     Size  Location     Type
  4268 ;;  channel         1    6[BANK0 ] unsigned char 
  4269 ;;  ADRES           2    9[BANK0 ] unsigned int 
  4270 ;;  i               1   11[BANK0 ] unsigned char 
  4271 ;;  j               1    8[BANK0 ] unsigned char 
  4272 ;;  k               1    7[BANK0 ] unsigned char 
  4273 ;; Return value:  Size  Location     Type
  4274 ;;		None               void
  4275 ;; Registers used:
  4276 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4277 ;; Tracked objects:
  4278 ;;		On entry : 0/0
  4279 ;;		On exit  : 0/0
  4280 ;;		Unchanged: 0/0
  4281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4283 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4284 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4285 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4286 ;;Total ram usage:        8 bytes
  4287 ;; Hardware stack levels used:    1
  4288 ;; Hardware stack levels required when called:    7
  4289 ;; This function calls:
  4290 ;;		_getAD
  4291 ;; This function is called by:
  4292 ;;		_main
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           
  4296                           
  4297                           ;psect for function _getLoad_AD
  4298  0780                     _getLoad_AD:	
  4299                           
  4300                           ;incstack = 0
  4301                           ; Regs used in _getLoad_AD: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4302                           ;getLoad_AD@channel stored from wreg
  4303  0780  0020               	movlb	0	; select bank0
  4304  0781  00A6               	movwf	getLoad_AD@channel
  4305                           
  4306                           ;OverLoad_B1.c: 17: char i = 0, j = 0, k = 0;
  4307  0782  01AB               	clrf	getLoad_AD@i
  4308  0783  01A8               	clrf	getLoad_AD@j
  4309  0784  01A7               	clrf	getLoad_AD@k
  4310                           
  4311                           ;OverLoad_B1.c: 18: ADtype ADRES = 0;
  4312  0785  01A9               	clrf	getLoad_AD@ADRES
  4313  0786  01AA               	clrf	getLoad_AD@ADRES+1
  4314                           
  4315                           ;OverLoad_B1.c: 19: if (Load.ADtoGO == 1) {
  4316  0787  0022               	movlb	2	; select bank2
  4317  0788  1E20               	btfss	_Load^(0+256),4
  4318  0789  0008               	return
  4319                           
  4320                           ;OverLoad_B1.c: 21: ADRES = getAD(channel, 0xf3);
  4321  078A  30F3               	movlw	243
  4322  078B  0020               	movlb	0	; select bank0
  4323  078C  00A4               	movwf	??_getLoad_AD
  4324  078D  0824               	movf	??_getLoad_AD,w
  4325  078E  00A0               	movwf	getAD@adcon1
  4326  078F  0826               	movf	getLoad_AD@channel,w
  4327  0790  3195  250E  3187   	fcall	_getAD
  4328  0793  0020               	movlb	0	; select bank0
  4329  0794  0821               	movf	?_getAD+1,w
  4330  0795  01AA               	clrf	getLoad_AD@ADRES+1
  4331  0796  07AA               	addwf	getLoad_AD@ADRES+1,f
  4332  0797  0820               	movf	?_getAD,w
  4333  0798  01A9               	clrf	getLoad_AD@ADRES
  4334  0799  07A9               	addwf	getLoad_AD@ADRES,f
  4335                           
  4336                           ;OverLoad_B1.c: 22: for (i = 0; i < 4; i++) {
  4337  079A  01AB               	clrf	getLoad_AD@i
  4338  079B  3004               	movlw	4
  4339  079C  022B               	subwf	getLoad_AD@i,w
  4340  079D  1803               	btfsc	3,0
  4341  079E  2FC6               	goto	l5878
  4342  079F                     l5866:	
  4343                           
  4344                           ;OverLoad_B1.c: 23: if (Load.AH[i] < ADRES && j == 0) {
  4345  079F  352B               	lslf	getLoad_AD@i,w
  4346  07A0  3E2B               	addlw	(_Load+11)& (0+255)
  4347  07A1  0086               	movwf	6
  4348  07A2  3001               	movlw	1	; select bank2/3
  4349  07A3  0087               	movwf	7
  4350  07A4  3F40               	moviw [0]fsr1
  4351  07A5  00A4               	movwf	??_getLoad_AD
  4352  07A6  3F41               	moviw [1]fsr1
  4353  07A7  00A5               	movwf	??_getLoad_AD+1
  4354  07A8  082A               	movf	getLoad_AD@ADRES+1,w
  4355  07A9  0225               	subwf	??_getLoad_AD+1,w
  4356  07AA  1D03               	skipz
  4357  07AB  2FAE               	goto	u6325
  4358  07AC  0829               	movf	getLoad_AD@ADRES,w
  4359  07AD  0224               	subwf	??_getLoad_AD,w
  4360  07AE                     u6325:	
  4361  07AE  1803               	skipnc
  4362  07AF  2FBE               	goto	l5874
  4363  07B0  08A8               	movf	getLoad_AD@j,f
  4364  07B1  1D03               	skipz
  4365  07B2  2FBE               	goto	l5874
  4366                           
  4367                           ;OverLoad_B1.c: 24: Load.AH[i] = ADRES;
  4368  07B3  352B               	lslf	getLoad_AD@i,w
  4369  07B4  3E2B               	addlw	(_Load+11)& (0+255)
  4370  07B5  0086               	movwf	6
  4371  07B6  3001               	movlw	1	; select bank2/3
  4372  07B7  0087               	movwf	7
  4373  07B8  0829               	movf	getLoad_AD@ADRES,w
  4374  07B9  3FC0               	movwi [0]fsr1
  4375  07BA  082A               	movf	getLoad_AD@ADRES+1,w
  4376  07BB  3FC1               	movwi [1]fsr1
  4377                           
  4378                           ;OverLoad_B1.c: 25: j = 1;
  4379  07BC  01A8               	clrf	getLoad_AD@j
  4380  07BD  0AA8               	incf	getLoad_AD@j,f
  4381  07BE                     l5874:	
  4382  07BE  3001               	movlw	1
  4383  07BF  00A4               	movwf	??_getLoad_AD
  4384  07C0  0824               	movf	??_getLoad_AD,w
  4385  07C1  07AB               	addwf	getLoad_AD@i,f
  4386  07C2  3004               	movlw	4
  4387  07C3  022B               	subwf	getLoad_AD@i,w
  4388  07C4  1C03               	skipc
  4389  07C5  2F9F               	goto	l5866
  4390  07C6                     l5878:	
  4391                           
  4392                           ;OverLoad_B1.c: 26: }
  4393                           ;OverLoad_B1.c: 27: }
  4394                           ;OverLoad_B1.c: 28: if (j == 0) {
  4395  07C6  08A8               	movf	getLoad_AD@j,f
  4396  07C7  1D03               	skipz
  4397  07C8  0008               	return
  4398                           
  4399                           ;OverLoad_B1.c: 29: for (i = 0; i < 4; i++) {
  4400  07C9  01AB               	clrf	getLoad_AD@i
  4401  07CA                     L1:	
  4402  07CA  3004               	movlw	4
  4403  07CB  022B               	subwf	getLoad_AD@i,w
  4404  07CC  1803               	btfsc	3,0
  4405  07CD  0008               	return
  4406                           
  4407                           ;OverLoad_B1.c: 30: if (Load.AL[i] > ADRES && k == 0) {
  4408  07CE  352B               	lslf	getLoad_AD@i,w
  4409  07CF  3E35               	addlw	(_Load+21)& (0+255)
  4410  07D0  0086               	movwf	6
  4411  07D1  3001               	movlw	1	; select bank2/3
  4412  07D2  0087               	movwf	7
  4413  07D3  3F40               	moviw [0]fsr1
  4414  07D4  00A4               	movwf	??_getLoad_AD
  4415  07D5  3F41               	moviw [1]fsr1
  4416  07D6  00A5               	movwf	??_getLoad_AD+1
  4417  07D7  0825               	movf	??_getLoad_AD+1,w
  4418  07D8  022A               	subwf	getLoad_AD@ADRES+1,w
  4419  07D9  1D03               	skipz
  4420  07DA  2FDD               	goto	u6375
  4421  07DB  0824               	movf	??_getLoad_AD,w
  4422  07DC  0229               	subwf	getLoad_AD@ADRES,w
  4423  07DD                     u6375:	
  4424  07DD  1803               	skipnc
  4425  07DE  2FED               	goto	l5894
  4426  07DF  08A7               	movf	getLoad_AD@k,f
  4427  07E0  1D03               	skipz
  4428  07E1  2FED               	goto	l5894
  4429                           
  4430                           ;OverLoad_B1.c: 31: Load.AL[i] = ADRES;
  4431  07E2  352B               	lslf	getLoad_AD@i,w
  4432  07E3  3E35               	addlw	(_Load+21)& (0+255)
  4433  07E4  0086               	movwf	6
  4434  07E5  3001               	movlw	1	; select bank2/3
  4435  07E6  0087               	movwf	7
  4436  07E7  0829               	movf	getLoad_AD@ADRES,w
  4437  07E8  3FC0               	movwi [0]fsr1
  4438  07E9  082A               	movf	getLoad_AD@ADRES+1,w
  4439  07EA  3FC1               	movwi [1]fsr1
  4440                           
  4441                           ;OverLoad_B1.c: 32: k = 1;
  4442  07EB  01A7               	clrf	getLoad_AD@k
  4443  07EC  0AA7               	incf	getLoad_AD@k,f
  4444  07ED                     l5894:	
  4445  07ED  3001               	movlw	1
  4446  07EE  00A4               	movwf	??_getLoad_AD
  4447  07EF  0824               	movf	??_getLoad_AD,w
  4448  07F0  07AB               	addwf	getLoad_AD@i,f
  4449  07F1  2FCA               	goto	L1
  4450  07F2                     __end_of_getLoad_AD:	
  4451                           
  4452                           	psect	text5
  4453  150E                     __ptext5:	
  4454 ;; *************** function _getAD *****************
  4455 ;; Defined at:
  4456 ;;		line 461 in file "../src/MCU_B1.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;  adcon0          1    wreg     unsigned char 
  4459 ;;  adcon1          1    0[BANK0 ] unsigned char 
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;  adcon0          1    3[BANK0 ] unsigned char 
  4462 ;; Return value:  Size  Location     Type
  4463 ;;                  2    0[BANK0 ] int 
  4464 ;; Registers used:
  4465 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4466 ;; Tracked objects:
  4467 ;;		On entry : 0/0
  4468 ;;		On exit  : 0/0
  4469 ;;		Unchanged: 0/0
  4470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4471 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4472 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4474 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4475 ;;Total ram usage:        4 bytes
  4476 ;; Hardware stack levels used:    1
  4477 ;; Hardware stack levels required when called:    6
  4478 ;; This function calls:
  4479 ;;		_Timeout_Counter
  4480 ;;		_set_TimeoutCleared
  4481 ;; This function is called by:
  4482 ;;		_getLoad_AD
  4483 ;;		_getTemp_AD
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486                           
  4487                           
  4488                           ;psect for function _getAD
  4489  150E                     _getAD:	
  4490                           
  4491                           ;incstack = 0
  4492                           ; Regs used in _getAD: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4493                           ;getAD@adcon0 stored from wreg
  4494  150E  0020               	movlb	0	; select bank0
  4495  150F  00A3               	movwf	getAD@adcon0
  4496                           
  4497                           ;MCU_B1.c: 462: ADCON0 = adcon0;
  4498  1510  0823               	movf	getAD@adcon0,w
  4499  1511  0021               	movlb	1	; select bank1
  4500  1512  009D               	movwf	29	;volatile
  4501                           
  4502                           ;MCU_B1.c: 463: ADCON1 = adcon1;
  4503  1513  0020               	movlb	0	; select bank0
  4504  1514  0820               	movf	getAD@adcon1,w
  4505  1515  0021               	movlb	1	; select bank1
  4506  1516  009E               	movwf	30	;volatile
  4507                           
  4508                           ;MCU_B1.c: 464: GO_nDONE = 1;
  4509  1517  149D               	bsf	29,1	;volatile
  4510                           
  4511                           ;MCU_B1.c: 465: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  4512  1518  2D1C               	goto	l5434
  4513  1519                     l5432:	
  4514                           
  4515                           ;MCU_B1.c: 466: Timeout_Counter();
  4516  1519  3193  23C1  3195   	fcall	_Timeout_Counter
  4517  151C                     l5434:	
  4518  151C  0021               	movlb	1	; select bank1
  4519  151D  1C9D               	btfss	29,1	;volatile
  4520  151E  2D21               	goto	l5438
  4521  151F  1D2A               	btfss	(_myMain^(0+128)+10),2
  4522  1520  2D19               	goto	l5432
  4523  1521                     l5438:	
  4524                           
  4525                           ;MCU_B1.c: 467: };
  4526                           ;MCU_B1.c: 468: set_TimeoutCleared();
  4527  1521  3191  21A0         	fcall	_set_TimeoutCleared
  4528                           
  4529                           ;MCU_B1.c: 469: return ((ADRESH*256)+ADRESL);
  4530  1523  0021               	movlb	1	; select bank1
  4531  1524  081C               	movf	28,w	;volatile
  4532  1525  0020               	movlb	0	; select bank0
  4533  1526  01A1               	clrf	?_getAD+1
  4534  1527  07A1               	addwf	?_getAD+1,f
  4535  1528  0021               	movlb	1	; select bank1
  4536  1529  081B               	movf	27,w	;volatile
  4537  152A  0020               	movlb	0	; select bank0
  4538  152B  01A0               	clrf	?_getAD
  4539  152C  07A0               	addwf	?_getAD,f
  4540  152D  0008               	return
  4541  152E                     __end_of_getAD:	
  4542                           
  4543                           	psect	text6
  4544  1389                     __ptext6:	
  4545 ;; *************** function _WDT_Main *****************
  4546 ;; Defined at:
  4547 ;;		line 1116 in file "../src/MCU_B1.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;		None
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;		None
  4552 ;; Return value:  Size  Location     Type
  4553 ;;		None               void
  4554 ;; Registers used:
  4555 ;;		wreg, status,2, status,0, pclath, cstack
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4563 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4564 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4565 ;;Total ram usage:        1 bytes
  4566 ;; Hardware stack levels used:    1
  4567 ;; Hardware stack levels required when called:    6
  4568 ;; This function calls:
  4569 ;;		_WDT_Clearing
  4570 ;; This function is called by:
  4571 ;;		_main
  4572 ;; This function uses a non-reentrant model
  4573 ;;
  4574                           
  4575                           
  4576                           ;psect for function _WDT_Main
  4577  1389                     _WDT_Main:	
  4578                           
  4579                           ;MCU_B1.c: 1117: if (WDT.Enable == 1) {
  4580                           
  4581                           ;incstack = 0
  4582                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  4583  1389  0021               	movlb	1	; select bank1
  4584  138A  1C4D               	btfss	_WDT^(0+128),0
  4585  138B  0008               	return
  4586                           
  4587                           ;MCU_B1.c: 1118: if (WDT.Timer-- > 0) {
  4588  138C  3001               	movlw	1
  4589  138D  02CE               	subwf	(_WDT^(0+128)+1),f
  4590  138E  084E               	movf	(_WDT^(0+128)+1),w
  4591  138F  3AFF               	xorlw	255
  4592  1390  1903               	skipnz
  4593  1391  0008               	return
  4594                           
  4595                           ;MCU_B1.c: 1119: WDT.Timer = 100;
  4596  1392  3064               	movlw	100
  4597  1393  0020               	movlb	0	; select bank0
  4598  1394  00A0               	movwf	??_WDT_Main
  4599  1395  0820               	movf	??_WDT_Main,w
  4600  1396  0021               	movlb	1	; select bank1
  4601  1397  00CE               	movwf	(_WDT^(0+128)+1)
  4602                           
  4603                           ;MCU_B1.c: 1120: WDT_Clearing();
  4604  1398  3180  2002         	fcall	_WDT_Clearing
  4605  139A  0008               	return
  4606  139B                     __end_of_WDT_Main:	
  4607                           
  4608                           	psect	text7
  4609  0002                     __ptext7:	
  4610 ;; *************** function _WDT_Clearing *****************
  4611 ;; Defined at:
  4612 ;;		line 1126 in file "../src/MCU_B1.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;		None
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;		None
  4617 ;; Return value:  Size  Location     Type
  4618 ;;		None               void
  4619 ;; Registers used:
  4620 ;;		None
  4621 ;; Tracked objects:
  4622 ;;		On entry : 0/0
  4623 ;;		On exit  : 0/0
  4624 ;;		Unchanged: 0/0
  4625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4630 ;;Total ram usage:        0 bytes
  4631 ;; Hardware stack levels used:    1
  4632 ;; Hardware stack levels required when called:    5
  4633 ;; This function calls:
  4634 ;;		Nothing
  4635 ;; This function is called by:
  4636 ;;		_WDT_Main
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640                           
  4641                           ;psect for function _WDT_Clearing
  4642  0002                     _WDT_Clearing:	
  4643                           
  4644                           ;incstack = 0
  4645                           ; Regs used in _WDT_Clearing: []
  4646  0002  0064               	clrwdt	;# 
  4647  0003  0008               	return
  4648  0004                     __end_of_WDT_Clearing:	
  4649                           
  4650                           	psect	text8
  4651  1185                     __ptext8:	
  4652 ;; *************** function _Temp_Main *****************
  4653 ;; Defined at:
  4654 ;;		line 65 in file "../src/OverTemperature_B1.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;		None
  4657 ;; Auto vars:     Size  Location     Type
  4658 ;;		None
  4659 ;; Return value:  Size  Location     Type
  4660 ;;		None               void
  4661 ;; Registers used:
  4662 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4663 ;; Tracked objects:
  4664 ;;		On entry : 0/0
  4665 ;;		On exit  : 0/0
  4666 ;;		Unchanged: 0/0
  4667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4672 ;;Total ram usage:        0 bytes
  4673 ;; Hardware stack levels used:    1
  4674 ;; Hardware stack levels required when called:    8
  4675 ;; This function calls:
  4676 ;;		_setTemp_Main
  4677 ;; This function is called by:
  4678 ;;		_main
  4679 ;; This function uses a non-reentrant model
  4680 ;;
  4681                           
  4682                           
  4683                           ;psect for function _Temp_Main
  4684  1185                     _Temp_Main:	
  4685                           
  4686                           ;OverTemperature_B1.c: 67: setTemp_Main();
  4687                           
  4688                           ;incstack = 0
  4689                           ; Regs used in _Temp_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4690  1185  3184  245D         	fcall	_setTemp_Main
  4691  1187  0008               	return
  4692  1188                     __end_of_Temp_Main:	
  4693                           
  4694                           	psect	text9
  4695  045D                     __ptext9:	
  4696 ;; *************** function _setTemp_Main *****************
  4697 ;; Defined at:
  4698 ;;		line 72 in file "../src/OverTemperature_B1.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;		None
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;  AD              2   77[BANK0 ] int 
  4703 ;;  DangerValue     2   74[BANK0 ] unsigned int 
  4704 ;;  SafeValue       2   72[BANK0 ] unsigned int 
  4705 ;;  TempGO          1   76[BANK0 ] unsigned char 
  4706 ;;  error           1   71[BANK0 ] unsigned char 
  4707 ;; Return value:  Size  Location     Type
  4708 ;;		None               void
  4709 ;; Registers used:
  4710 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4711 ;; Tracked objects:
  4712 ;;		On entry : 0/0
  4713 ;;		On exit  : 0/0
  4714 ;;		Unchanged: 0/0
  4715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4717 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4718 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4719 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4720 ;;Total ram usage:       10 bytes
  4721 ;; Hardware stack levels used:    1
  4722 ;; Hardware stack levels required when called:    7
  4723 ;; This function calls:
  4724 ;;		___lwdiv
  4725 ;;		_getMain_All_Error_Status
  4726 ;;		_getMain_All_LightsStatus
  4727 ;;		_setBuz
  4728 ;;		_setOverTemp_ADV_Restore
  4729 ;;		_setProductData
  4730 ;; This function is called by:
  4731 ;;		_Temp_Main
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734                           
  4735                           
  4736                           ;psect for function _setTemp_Main
  4737  045D                     _setTemp_Main:	
  4738                           
  4739                           ;OverTemperature_B1.c: 73: char error = getMain_All_Error_Status(0);
  4740                           
  4741                           ;incstack = 0
  4742                           ; Regs used in _setTemp_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4743  045D  3000               	movlw	0
  4744  045E  3196  263B  3184   	fcall	_getMain_All_Error_Status
  4745  0461  0020               	movlb	0	; select bank0
  4746  0462  00E5               	movwf	??_setTemp_Main
  4747  0463  0865               	movf	??_setTemp_Main,w
  4748  0464  00E7               	movwf	setTemp_Main@error
  4749                           
  4750                           ;OverTemperature_B1.c: 74: ADtype SafeValue = 0, DangerValue = 0;
  4751  0465  01E8               	clrf	setTemp_Main@SafeValue
  4752  0466  01E9               	clrf	setTemp_Main@SafeValue+1
  4753  0467  01EA               	clrf	setTemp_Main@DangerValue
  4754  0468  01EB               	clrf	setTemp_Main@DangerValue+1
  4755                           
  4756                           ;OverTemperature_B1.c: 75: int AD = 0;
  4757  0469  01ED               	clrf	setTemp_Main@AD
  4758  046A  01EE               	clrf	setTemp_Main@AD+1
  4759                           
  4760                           ;OverTemperature_B1.c: 76: char TempGO = getMain_All_LightsStatus();
  4761  046B  3192  2205  3184   	fcall	_getMain_All_LightsStatus
  4762  046E  0020               	movlb	0	; select bank0
  4763  046F  00E5               	movwf	??_setTemp_Main
  4764  0470  0865               	movf	??_setTemp_Main,w
  4765  0471  00EC               	movwf	setTemp_Main@TempGO
  4766                           
  4767                           ;OverTemperature_B1.c: 78: if (Temp.Enable == 1) {
  4768  0472  0021               	movlb	1	; select bank1
  4769  0473  1C56               	btfss	_Temp^(0+128),0
  4770  0474  2D2C               	goto	l1339
  4771                           
  4772                           ;OverTemperature_B1.c: 86: if (Temp.ADtoGO == 0) {
  4773  0475  1956               	btfsc	_Temp^(0+128),2
  4774  0476  2C94               	goto	l5540
  4775                           
  4776                           ;OverTemperature_B1.c: 87: if ((TempGO == 1 && Temp.ERROR == 0) || Temp.ERROR == 1) {
  4777  0477  0020               	movlb	0	; select bank0
  4778  0478  086C               	movf	setTemp_Main@TempGO,w
  4779  0479  3A01               	xorlw	1
  4780  047A  1D03               	skipz
  4781  047B  2C7F               	goto	l1345
  4782  047C  0021               	movlb	1	; select bank1
  4783  047D  1CD6               	btfss	_Temp^(0+128),1
  4784  047E  2C82               	goto	l5532
  4785  047F                     l1345:	
  4786  047F  0021               	movlb	1	; select bank1
  4787  0480  1CD6               	btfss	_Temp^(0+128),1
  4788  0481  2C91               	goto	l5538
  4789  0482                     l5532:	
  4790                           
  4791                           ;OverTemperature_B1.c: 88: Temp.Time++;
  4792  0482  3001               	movlw	1
  4793  0483  07D7               	addwf	(_Temp^(0+128)+1),f
  4794  0484  3000               	movlw	0
  4795  0485  3DD8               	addwfc	((_Temp+1)^(0+128)+1),f
  4796                           
  4797                           ;OverTemperature_B1.c: 89: if (Temp.Time >= (5000 / 20)) {
  4798  0486  3000               	movlw	0
  4799  0487  0258               	subwf	((_Temp+1)^(0+128)+1),w
  4800  0488  30FA               	movlw	250
  4801  0489  1903               	skipnz
  4802  048A  0257               	subwf	(_Temp^(0+128)+1),w
  4803  048B  1C03               	skipc
  4804  048C  0008               	return
  4805                           
  4806                           ;OverTemperature_B1.c: 90: Temp.Time = 0;
  4807  048D  01D7               	clrf	(_Temp^(0+128)+1)
  4808  048E  01D8               	clrf	((_Temp+1)^(0+128)+1)
  4809                           
  4810                           ;OverTemperature_B1.c: 91: Temp.ADtoGO = 1;
  4811  048F  1556               	bsf	_Temp^(0+128),2
  4812                           
  4813                           ;OverTemperature_B1.c: 92: }
  4814                           ;OverTemperature_B1.c: 93: } else {
  4815  0490  0008               	return
  4816  0491                     l5538:	
  4817                           
  4818                           ;OverTemperature_B1.c: 94: Temp.Time = 0;
  4819  0491  01D7               	clrf	(_Temp^(0+128)+1)
  4820  0492  01D8               	clrf	((_Temp+1)^(0+128)+1)
  4821                           
  4822                           ;OverTemperature_B1.c: 95: }
  4823                           ;OverTemperature_B1.c: 96: } else {
  4824  0493  0008               	return
  4825  0494                     l5540:	
  4826                           
  4827                           ;OverTemperature_B1.c: 97: Temp.Time++;
  4828  0494  3001               	movlw	1
  4829  0495  07D7               	addwf	(_Temp^(0+128)+1),f
  4830  0496  3000               	movlw	0
  4831  0497  3DD8               	addwfc	((_Temp+1)^(0+128)+1),f
  4832                           
  4833                           ;OverTemperature_B1.c: 98: if (Temp.Time >= (100 / 20)) {
  4834  0498  3000               	movlw	0
  4835  0499  0258               	subwf	((_Temp+1)^(0+128)+1),w
  4836  049A  3005               	movlw	5
  4837  049B  1903               	skipnz
  4838  049C  0257               	subwf	(_Temp^(0+128)+1),w
  4839  049D  1C03               	skipc
  4840  049E  0008               	return
  4841                           
  4842                           ;OverTemperature_B1.c: 99: Temp.Time = 0;
  4843  049F  01D7               	clrf	(_Temp^(0+128)+1)
  4844  04A0  01D8               	clrf	((_Temp+1)^(0+128)+1)
  4845                           
  4846                           ;OverTemperature_B1.c: 104: AD = (Temp.ADV[1] + Temp.ADV[2] + Temp.ADV[3]) / 3;
  4847  04A1  3003               	movlw	3
  4848  04A2  0020               	movlb	0	; select bank0
  4849  04A3  00A0               	movwf	___lwdiv@divisor
  4850  04A4  3000               	movlw	0
  4851  04A5  00A1               	movwf	___lwdiv@divisor+1
  4852  04A6  300A               	movlw	10
  4853  04A7  3ED6               	addlw	_Temp& (0+255)
  4854  04A8  0086               	movwf	6
  4855  04A9  0187               	clrf	7
  4856  04AA  3008               	movlw	8
  4857  04AB  3ED6               	addlw	_Temp& (0+255)
  4858  04AC  0084               	movwf	4
  4859  04AD  0185               	clrf	5
  4860  04AE  3F00               	moviw [0]fsr0
  4861  04AF  0021               	movlb	1	; select bank1
  4862  04B0  075C               	addwf	(_Temp^(0+128)+6),w
  4863  04B1  0020               	movlb	0	; select bank0
  4864  04B2  00E5               	movwf	??_setTemp_Main
  4865  04B3  3F01               	moviw [1]fsr0
  4866  04B4  0021               	movlb	1	; select bank1
  4867  04B5  3D5D               	addwfc	((_Temp+1)^(0+128)+6),w
  4868  04B6  0020               	movlb	0	; select bank0
  4869  04B7  00E6               	movwf	??_setTemp_Main+1
  4870  04B8  3F40               	moviw [0]fsr1
  4871  04B9  0765               	addwf	??_setTemp_Main,w
  4872  04BA  00A2               	movwf	___lwdiv@dividend
  4873  04BB  3F41               	moviw [1]fsr1
  4874  04BC  3D66               	addwfc	??_setTemp_Main+1,w
  4875  04BD  00A3               	movwf	___lwdiv@dividend+1
  4876  04BE  3196  26A4  3184   	fcall	___lwdiv
  4877  04C1  0020               	movlb	0	; select bank0
  4878  04C2  0821               	movf	?___lwdiv+1,w
  4879  04C3  01EE               	clrf	setTemp_Main@AD+1
  4880  04C4  07EE               	addwf	setTemp_Main@AD+1,f
  4881  04C5  0820               	movf	?___lwdiv,w
  4882  04C6  01ED               	clrf	setTemp_Main@AD
  4883  04C7  07ED               	addwf	setTemp_Main@AD,f
  4884                           
  4885                           ;OverTemperature_B1.c: 105: setOverTemp_ADV_Restore();
  4886  04C8  3194  247B  3184   	fcall	_setOverTemp_ADV_Restore
  4887                           
  4888                           ;OverTemperature_B1.c: 106: if (AD > 0) {
  4889  04CB  0020               	movlb	0	; select bank0
  4890  04CC  086E               	movf	setTemp_Main@AD+1,w
  4891  04CD  3A80               	xorlw	128
  4892  04CE  00E5               	movwf	??_setTemp_Main
  4893  04CF  3080               	movlw	128
  4894  04D0  0265               	subwf	??_setTemp_Main,w
  4895  04D1  1D03               	skipz
  4896  04D2  2CD5               	goto	u5755
  4897  04D3  3001               	movlw	1
  4898  04D4  026D               	subwf	setTemp_Main@AD,w
  4899  04D5                     u5755:	
  4900  04D5  1C03               	skipc
  4901  04D6  0008               	return
  4902                           
  4903                           ;OverTemperature_B1.c: 107: Temp.ADtoGO = 0;
  4904  04D7  0021               	movlb	1	; select bank1
  4905  04D8  1156               	bcf	_Temp^(0+128),2
  4906                           
  4907                           ;OverTemperature_B1.c: 123: SafeValue = 0x205;
  4908  04D9  3005               	movlw	5
  4909  04DA  0020               	movlb	0	; select bank0
  4910  04DB  00E8               	movwf	setTemp_Main@SafeValue
  4911  04DC  3002               	movlw	2
  4912  04DD  00E9               	movwf	setTemp_Main@SafeValue+1
  4913                           
  4914                           ;OverTemperature_B1.c: 124: DangerValue = 0x1ba;
  4915  04DE  30BA               	movlw	186
  4916  04DF  00EA               	movwf	setTemp_Main@DangerValue
  4917  04E0  3001               	movlw	1
  4918  04E1  00EB               	movwf	setTemp_Main@DangerValue+1
  4919                           
  4920                           ;OverTemperature_B1.c: 130: if (Temp.ERROR == 1) {
  4921  04E2  0021               	movlb	1	; select bank1
  4922  04E3  1CD6               	btfss	_Temp^(0+128),1
  4923  04E4  2D03               	goto	l5570
  4924                           
  4925                           ;OverTemperature_B1.c: 131: if (AD >= SafeValue) {
  4926  04E5  0020               	movlb	0	; select bank0
  4927  04E6  0869               	movf	setTemp_Main@SafeValue+1,w
  4928  04E7  026E               	subwf	setTemp_Main@AD+1,w
  4929  04E8  1D03               	skipz
  4930  04E9  2CEC               	goto	u5775
  4931  04EA  0868               	movf	setTemp_Main@SafeValue,w
  4932  04EB  026D               	subwf	setTemp_Main@AD,w
  4933  04EC                     u5775:	
  4934  04EC  1C03               	skipc
  4935  04ED  2D18               	goto	l5580
  4936                           
  4937                           ;OverTemperature_B1.c: 132: Temp.Count++;
  4938  04EE  3001               	movlw	1
  4939  04EF  00E5               	movwf	??_setTemp_Main
  4940  04F0  0865               	movf	??_setTemp_Main,w
  4941  04F1  0021               	movlb	1	; select bank1
  4942  04F2  07D9               	addwf	(_Temp^(0+128)+3),f
  4943                           
  4944                           ;OverTemperature_B1.c: 133: if (Temp.Count >= 3) {
  4945  04F3  3003               	movlw	3
  4946  04F4  0259               	subwf	(_Temp^(0+128)+3),w
  4947  04F5  1C03               	skipc
  4948  04F6  2D1A               	goto	l5582
  4949                           
  4950                           ;OverTemperature_B1.c: 134: Temp.Count = 0;
  4951  04F7  01D9               	clrf	(_Temp^(0+128)+3)
  4952                           
  4953                           ;OverTemperature_B1.c: 135: Temp.ERROR = 0;
  4954  04F8  10D6               	bcf	_Temp^(0+128),1
  4955                           
  4956                           ;OverTemperature_B1.c: 136: setBuz(2, 100);
  4957  04F9  3064               	movlw	100
  4958  04FA  0020               	movlb	0	; select bank0
  4959  04FB  00A9               	movwf	setBuz@time
  4960  04FC  3000               	movlw	0
  4961  04FD  00AA               	movwf	setBuz@time+1
  4962  04FE  3002               	movlw	2
  4963  04FF  3189  21DA  3184   	fcall	_setBuz
  4964                           
  4965                           ;OverTemperature_B1.c: 137: }
  4966                           ;OverTemperature_B1.c: 138: } else {
  4967  0502  2D1A               	goto	l5582
  4968  0503                     l5570:	
  4969                           ;OverTemperature_B1.c: 140: }
  4970                           ;OverTemperature_B1.c: 141: } else {
  4971                           
  4972                           ;OverTemperature_B1.c: 139: Temp.Count = 0;
  4973                           
  4974                           
  4975                           ;OverTemperature_B1.c: 142: if (AD <= DangerValue) {
  4976  0503  0020               	movlb	0	; select bank0
  4977  0504  086E               	movf	setTemp_Main@AD+1,w
  4978  0505  026B               	subwf	setTemp_Main@DangerValue+1,w
  4979  0506  1D03               	skipz
  4980  0507  2D0A               	goto	u5795
  4981  0508  086D               	movf	setTemp_Main@AD,w
  4982  0509  026A               	subwf	setTemp_Main@DangerValue,w
  4983  050A                     u5795:	
  4984  050A  1C03               	skipc
  4985  050B  2D18               	goto	l5580
  4986                           
  4987                           ;OverTemperature_B1.c: 143: Temp.Count++;
  4988  050C  3001               	movlw	1
  4989  050D  00E5               	movwf	??_setTemp_Main
  4990  050E  0865               	movf	??_setTemp_Main,w
  4991  050F  0021               	movlb	1	; select bank1
  4992  0510  07D9               	addwf	(_Temp^(0+128)+3),f
  4993                           
  4994                           ;OverTemperature_B1.c: 144: if (Temp.Count >= 3) {
  4995  0511  3003               	movlw	3
  4996  0512  0259               	subwf	(_Temp^(0+128)+3),w
  4997  0513  1C03               	skipc
  4998  0514  2D1A               	goto	l5582
  4999                           
  5000                           ;OverTemperature_B1.c: 145: Temp.Count = 0;
  5001  0515  01D9               	clrf	(_Temp^(0+128)+3)
  5002                           
  5003                           ;OverTemperature_B1.c: 146: Temp.ERROR = 1;
  5004  0516  14D6               	bsf	_Temp^(0+128),1
  5005                           
  5006                           ;OverTemperature_B1.c: 147: }
  5007                           ;OverTemperature_B1.c: 148: } else {
  5008  0517  2D1A               	goto	l5582
  5009  0518                     l5580:	
  5010                           
  5011                           ;OverTemperature_B1.c: 149: Temp.Count = 0;
  5012  0518  0021               	movlb	1	; select bank1
  5013  0519  01D9               	clrf	(_Temp^(0+128)+3)
  5014  051A                     l5582:	
  5015                           
  5016                           ;OverTemperature_B1.c: 150: }
  5017                           ;OverTemperature_B1.c: 151: }
  5018                           ;OverTemperature_B1.c: 152: setProductData(24, AD >> 8);
  5019  051A  0020               	movlb	0	; select bank0
  5020  051B  086E               	movf	setTemp_Main@AD+1,w
  5021  051C  00E5               	movwf	??_setTemp_Main
  5022  051D  0865               	movf	??_setTemp_Main,w
  5023  051E  00E2               	movwf	setProductData@value
  5024  051F  3018               	movlw	24
  5025  0520  3192  225C  3184   	fcall	_setProductData
  5026                           
  5027                           ;OverTemperature_B1.c: 153: setProductData(25, AD);
  5028  0523  0020               	movlb	0	; select bank0
  5029  0524  086D               	movf	setTemp_Main@AD,w
  5030  0525  00E5               	movwf	??_setTemp_Main
  5031  0526  0865               	movf	??_setTemp_Main,w
  5032  0527  00E2               	movwf	setProductData@value
  5033  0528  3019               	movlw	25
  5034  0529  3192  225C         	fcall	_setProductData
  5035                           
  5036                           ;OverTemperature_B1.c: 169: }
  5037                           ;OverTemperature_B1.c: 170: }
  5038                           ;OverTemperature_B1.c: 171: }
  5039                           ;OverTemperature_B1.c: 174: } else {
  5040  052B  0008               	return
  5041  052C                     l1339:	
  5042                           
  5043                           ;OverTemperature_B1.c: 175: if (myMain.PowerON == 1) {
  5044  052C  1C20               	btfss	_myMain^(0+128),0
  5045  052D  0008               	return
  5046                           
  5047                           ;OverTemperature_B1.c: 176: Temp.Enable = 1;
  5048  052E  1456               	bsf	_Temp^(0+128),0
  5049  052F  0008               	return
  5050  0530                     __end_of_setTemp_Main:	
  5051                           
  5052                           	psect	text10
  5053  147B                     __ptext10:	
  5054 ;; *************** function _setOverTemp_ADV_Restore *****************
  5055 ;; Defined at:
  5056 ;;		line 182 in file "../src/OverTemperature_B1.c"
  5057 ;; Parameters:    Size  Location     Type
  5058 ;;		None
  5059 ;; Auto vars:     Size  Location     Type
  5060 ;;  i               2    1[BANK0 ] int 
  5061 ;; Return value:  Size  Location     Type
  5062 ;;		None               void
  5063 ;; Registers used:
  5064 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5065 ;; Tracked objects:
  5066 ;;		On entry : 0/0
  5067 ;;		On exit  : 0/0
  5068 ;;		Unchanged: 0/0
  5069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5071 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5072 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5073 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5074 ;;Total ram usage:        3 bytes
  5075 ;; Hardware stack levels used:    1
  5076 ;; Hardware stack levels required when called:    5
  5077 ;; This function calls:
  5078 ;;		Nothing
  5079 ;; This function is called by:
  5080 ;;		_setTemp_Main
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084                           
  5085                           ;psect for function _setOverTemp_ADV_Restore
  5086  147B                     _setOverTemp_ADV_Restore:	
  5087                           
  5088                           ;OverTemperature_B1.c: 183: for (int i = 0; i < 5; i++) {
  5089                           
  5090                           ;incstack = 0
  5091                           ; Regs used in _setOverTemp_ADV_Restore: [wreg+fsr1l+fsr1h+status,2+status,0]
  5092  147B  0020               	movlb	0	; select bank0
  5093  147C  01A1               	clrf	setOverTemp_ADV_Restore@i
  5094  147D  01A2               	clrf	setOverTemp_ADV_Restore@i+1
  5095  147E                     L2:	
  5096  147E  0822               	movf	setOverTemp_ADV_Restore@i+1,w
  5097  147F  3A80               	xorlw	128
  5098  1480  00A0               	movwf	??_setOverTemp_ADV_Restore
  5099  1481  3080               	movlw	128
  5100  1482  0220               	subwf	??_setOverTemp_ADV_Restore,w
  5101  1483  1D03               	skipz
  5102  1484  2C87               	goto	u4965
  5103  1485  3005               	movlw	5
  5104  1486  0221               	subwf	setOverTemp_ADV_Restore@i,w
  5105  1487                     u4965:	
  5106  1487  1803               	btfsc	3,0
  5107  1488  0008               	return
  5108                           
  5109                           ;OverTemperature_B1.c: 184: Temp.ADV[i] = 0;
  5110  1489  0020               	movlb	0	; select bank0
  5111  148A  3521               	lslf	setOverTemp_ADV_Restore@i,w
  5112  148B  3EDA               	addlw	(_Temp+4)& (0+255)
  5113  148C  0086               	movwf	6
  5114  148D  0187               	clrf	7
  5115  148E  3000               	movlw	0
  5116  148F  3FC0               	movwi [0]fsr1
  5117  1490  3FC1               	movwi [1]fsr1
  5118  1491  3001               	movlw	1
  5119  1492  07A1               	addwf	setOverTemp_ADV_Restore@i,f
  5120  1493  3000               	movlw	0
  5121  1494  3DA2               	addwfc	setOverTemp_ADV_Restore@i+1,f
  5122  1495  2C7E               	goto	L2
  5123  1496                     __end_of_setOverTemp_ADV_Restore:	
  5124                           
  5125                           	psect	text11
  5126  1182                     __ptext11:	
  5127 ;; *************** function _Temp_Initialization *****************
  5128 ;; Defined at:
  5129 ;;		line 8 in file "../src/OverTemperature_B1.c"
  5130 ;; Parameters:    Size  Location     Type
  5131 ;;		None
  5132 ;; Auto vars:     Size  Location     Type
  5133 ;;		None
  5134 ;; Return value:  Size  Location     Type
  5135 ;;		None               void
  5136 ;; Registers used:
  5137 ;;		status,2, status,0, pclath, cstack
  5138 ;; Tracked objects:
  5139 ;;		On entry : 0/0
  5140 ;;		On exit  : 0/0
  5141 ;;		Unchanged: 0/0
  5142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5147 ;;Total ram usage:        0 bytes
  5148 ;; Hardware stack levels used:    1
  5149 ;; Hardware stack levels required when called:    6
  5150 ;; This function calls:
  5151 ;;		_setTemp_Initialization
  5152 ;; This function is called by:
  5153 ;;		_main
  5154 ;; This function uses a non-reentrant model
  5155 ;;
  5156                           
  5157                           
  5158                           ;psect for function _Temp_Initialization
  5159  1182                     _Temp_Initialization:	
  5160                           
  5161                           ;OverTemperature_B1.c: 10: setTemp_Initialization();
  5162                           
  5163                           ;incstack = 0
  5164                           ; Regs used in _Temp_Initialization: [status,2+status,0+pclath+cstack]
  5165  1182  3187  27FF         	fcall	_setTemp_Initialization
  5166  1184  0008               	return
  5167  1185                     __end_of_Temp_Initialization:	
  5168                           
  5169                           	psect	text12
  5170  07FF                     __ptext12:	
  5171 ;; *************** function _setTemp_Initialization *****************
  5172 ;; Defined at:
  5173 ;;		line 60 in file "../src/OverTemperature_B1.c"
  5174 ;; Parameters:    Size  Location     Type
  5175 ;;		None
  5176 ;; Auto vars:     Size  Location     Type
  5177 ;;		None
  5178 ;; Return value:  Size  Location     Type
  5179 ;;		None               void
  5180 ;; Registers used:
  5181 ;;		None
  5182 ;; Tracked objects:
  5183 ;;		On entry : 0/0
  5184 ;;		On exit  : 0/0
  5185 ;;		Unchanged: 0/0
  5186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5191 ;;Total ram usage:        0 bytes
  5192 ;; Hardware stack levels used:    1
  5193 ;; Hardware stack levels required when called:    5
  5194 ;; This function calls:
  5195 ;;		Nothing
  5196 ;; This function is called by:
  5197 ;;		_Temp_Initialization
  5198 ;; This function uses a non-reentrant model
  5199 ;;
  5200                           
  5201                           
  5202                           ;psect for function _setTemp_Initialization
  5203  07FF                     _setTemp_Initialization:	
  5204                           
  5205                           ;incstack = 0
  5206                           ; Regs used in _setTemp_Initialization: []
  5207  07FF  0008               	return
  5208  0800                     __end_of_setTemp_Initialization:	
  5209                           
  5210                           	psect	text13
  5211  11CB                     __ptext13:	
  5212 ;; *************** function _Switch_Main *****************
  5213 ;; Defined at:
  5214 ;;		line 76 in file "../src/Switch_B1.c"
  5215 ;; Parameters:    Size  Location     Type
  5216 ;;		None
  5217 ;; Auto vars:     Size  Location     Type
  5218 ;;		None
  5219 ;; Return value:  Size  Location     Type
  5220 ;;		None               void
  5221 ;; Registers used:
  5222 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5223 ;; Tracked objects:
  5224 ;;		On entry : 0/0
  5225 ;;		On exit  : 0/0
  5226 ;;		Unchanged: 0/0
  5227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5232 ;;Total ram usage:        0 bytes
  5233 ;; Hardware stack levels used:    1
  5234 ;; Hardware stack levels required when called:    9
  5235 ;; This function calls:
  5236 ;;		_TouchPower
  5237 ;;		_setSw_Main
  5238 ;; This function is called by:
  5239 ;;		_main
  5240 ;; This function uses a non-reentrant model
  5241 ;;
  5242                           
  5243                           
  5244                           ;psect for function _Switch_Main
  5245  11CB                     _Switch_Main:	
  5246                           
  5247                           ;Switch_B1.c: 79: setSw_Main(1);
  5248                           
  5249                           ;incstack = 0
  5250                           ; Regs used in _Switch_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5251  11CB  3001               	movlw	1
  5252  11CC  3181  21FB  3191   	fcall	_setSw_Main
  5253                           
  5254                           ;Switch_B1.c: 91: TouchPower();
  5255  11CF  3193  23D6         	fcall	_TouchPower
  5256  11D1  0008               	return
  5257  11D2                     __end_of_Switch_Main:	
  5258                           
  5259                           	psect	text14
  5260  01FB                     __ptext14:	
  5261 ;; *************** function _setSw_Main *****************
  5262 ;; Defined at:
  5263 ;;		line 117 in file "../src/Switch_B1.c"
  5264 ;; Parameters:    Size  Location     Type
  5265 ;;  sw              1    wreg     unsigned char 
  5266 ;; Auto vars:     Size  Location     Type
  5267 ;;  sw              1   19[BANK0 ] unsigned char 
  5268 ;; Return value:  Size  Location     Type
  5269 ;;		None               void
  5270 ;; Registers used:
  5271 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5272 ;; Tracked objects:
  5273 ;;		On entry : 0/0
  5274 ;;		On exit  : 0/0
  5275 ;;		Unchanged: 0/0
  5276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5278 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5279 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5280 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5281 ;;Total ram usage:        3 bytes
  5282 ;; Hardware stack levels used:    1
  5283 ;; Hardware stack levels required when called:    8
  5284 ;; This function calls:
  5285 ;;		_SwPointSelect
  5286 ;;		_getMain_All_Error_Status
  5287 ;;		_getSw_KeyStatus
  5288 ;;		_setDimmerLights_DimmingOn
  5289 ;;		_setDimmerLights_SwOff
  5290 ;;		_setDimmerLights_SwOn
  5291 ;; This function is called by:
  5292 ;;		_Switch_Main
  5293 ;; This function uses a non-reentrant model
  5294 ;;
  5295                           
  5296                           
  5297                           ;psect for function _setSw_Main
  5298  01FB                     _setSw_Main:	
  5299                           
  5300                           ;incstack = 0
  5301                           ; Regs used in _setSw_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5302                           ;setSw_Main@sw stored from wreg
  5303  01FB  0020               	movlb	0	; select bank0
  5304  01FC  00B3               	movwf	setSw_Main@sw
  5305                           
  5306                           ;Switch_B1.c: 118: SwPointSelect(sw);
  5307  01FD  0833               	movf	setSw_Main@sw,w
  5308  01FE  3192  22A4  3181   	fcall	_SwPointSelect
  5309                           
  5310                           ;Switch_B1.c: 119: if (Sw->Enable == 1) {
  5311  0201  0021               	movlb	1	; select bank1
  5312  0202  0854               	movf	_Sw^(0+128),w
  5313  0203  0086               	movwf	6
  5314  0204  3001               	movlw	1	; select bank2/3
  5315  0205  0087               	movwf	7
  5316  0206  1C01               	btfss	1,0
  5317  0207  2B5F               	goto	l1698
  5318                           
  5319                           ;Switch_B1.c: 121: if (getMain_All_Error_Status(0) == 0) {
  5320  0208  3000               	movlw	0
  5321  0209  3196  263B  3181   	fcall	_getMain_All_Error_Status
  5322  020C  3800               	iorlw	0
  5323  020D  1D03               	skipz
  5324  020E  2A2D               	goto	l5614
  5325                           
  5326                           ;Switch_B1.c: 122: Sw->Detect = 0;
  5327  020F  0021               	movlb	1	; select bank1
  5328  0210  0A54               	incf	_Sw^(0+128),w
  5329  0211  0086               	movwf	6
  5330  0212  3001               	movlw	1	; select bank2/3
  5331  0213  0087               	movwf	7
  5332  0214  1081               	bcf	1,1
  5333                           
  5334                           ;Switch_B1.c: 123: Sw->Touch = getSw_KeyStatus(sw) == 1 ? 1 : 0;
  5335  0215  0020               	movlb	0	; select bank0
  5336  0216  0833               	movf	setSw_Main@sw,w
  5337  0217  3193  2330  3181   	fcall	_getSw_KeyStatus
  5338  021A  3A01               	xorlw	1
  5339  021B  3000               	movlw	0
  5340  021C  1903               	skipnz
  5341  021D  3001               	movlw	1
  5342  021E  0020               	movlb	0	; select bank0
  5343  021F  00B1               	movwf	??_setSw_Main
  5344  0220  0021               	movlb	1	; select bank1
  5345  0221  0854               	movf	_Sw^(0+128),w
  5346  0222  0086               	movwf	6
  5347  0223  3001               	movlw	1	; select bank2/3
  5348  0224  0087               	movwf	7
  5349  0225  0020               	movlb	0	; select bank0
  5350  0226  0DB1               	rlf	??_setSw_Main,f
  5351  0227  0801               	movf	1,w
  5352  0228  0631               	xorwf	??_setSw_Main,w
  5353  0229  39FD               	andlw	-3
  5354  022A  0631               	xorwf	??_setSw_Main,w
  5355  022B  0081               	movwf	1
  5356                           
  5357                           ;Switch_B1.c: 124: } else {
  5358  022C  2A43               	goto	l1700
  5359  022D                     l5614:	
  5360                           
  5361                           ;Switch_B1.c: 125: if (Sw->Detect == 0) {
  5362  022D  0021               	movlb	1	; select bank1
  5363  022E  0A54               	incf	_Sw^(0+128),w
  5364  022F  0086               	movwf	6
  5365  0230  3001               	movlw	1	; select bank2/3
  5366  0231  0087               	movwf	7
  5367  0232  1881               	btfsc	1,1
  5368  0233  2A43               	goto	l1700
  5369                           
  5370                           ;Switch_B1.c: 126: Sw->Detect = 1;
  5371  0234  0A54               	incf	_Sw^(0+128),w
  5372  0235  0086               	movwf	6
  5373  0236  3001               	movlw	1	; select bank2/3
  5374  0237  0087               	movwf	7
  5375  0238  1481               	bsf	1,1
  5376                           
  5377                           ;Switch_B1.c: 128: Sw->Touch = 0;
  5378  0239  0854               	movf	_Sw^(0+128),w
  5379  023A  0086               	movwf	6
  5380  023B  3001               	movlw	1	; select bank2/3
  5381  023C  0087               	movwf	7
  5382  023D  1081               	bcf	1,1
  5383                           
  5384                           ;Switch_B1.c: 129: Sw->Debounce = 1;
  5385  023E  0854               	movf	_Sw^(0+128),w
  5386  023F  0086               	movwf	6
  5387  0240  3001               	movlw	1	; select bank2/3
  5388  0241  0087               	movwf	7
  5389  0242  1501               	bsf	1,2
  5390  0243                     l1700:	
  5391                           
  5392                           ;Switch_B1.c: 130: }
  5393                           ;Switch_B1.c: 131: }
  5394                           ;Switch_B1.c: 133: if (Sw->Touch == 1) {
  5395  0243  0021               	movlb	1	; select bank1
  5396  0244  0854               	movf	_Sw^(0+128),w
  5397  0245  0086               	movwf	6
  5398  0246  3001               	movlw	1	; select bank2/3
  5399  0247  0087               	movwf	7
  5400  0248  1C81               	btfss	1,1
  5401  0249  2B0C               	goto	l5656
  5402                           
  5403                           ;Switch_B1.c: 134: if (Sw->Debounce == 0) {
  5404  024A  0854               	movf	_Sw^(0+128),w
  5405  024B  0086               	movwf	6
  5406  024C  3001               	movlw	1	; select bank2/3
  5407  024D  0087               	movwf	7
  5408  024E  1901               	btfsc	1,2
  5409  024F  2A76               	goto	l5630
  5410                           
  5411                           ;Switch_B1.c: 135: Sw->DebounceTime++;
  5412  0250  3001               	movlw	1
  5413  0251  0020               	movlb	0	; select bank0
  5414  0252  00B1               	movwf	??_setSw_Main
  5415  0253  0021               	movlb	1	; select bank1
  5416  0254  0854               	movf	_Sw^(0+128),w
  5417  0255  3E02               	addlw	2
  5418  0256  0086               	movwf	6
  5419  0257  3001               	movlw	1	; select bank2/3
  5420  0258  0087               	movwf	7
  5421  0259  0020               	movlb	0	; select bank0
  5422  025A  0831               	movf	??_setSw_Main,w
  5423  025B  0781               	addwf	1,f
  5424                           
  5425                           ;Switch_B1.c: 136: if (Sw->DebounceTime >= (60 / 20)) {
  5426  025C  0021               	movlb	1	; select bank1
  5427  025D  0854               	movf	_Sw^(0+128),w
  5428  025E  3E02               	addlw	2
  5429  025F  0086               	movwf	6
  5430  0260  3001               	movlw	1	; select bank2/3
  5431  0261  0087               	movwf	7
  5432  0262  3003               	movlw	3
  5433  0263  0201               	subwf	1,w
  5434  0264  1C03               	skipc
  5435  0265  0008               	return
  5436                           
  5437                           ;Switch_B1.c: 137: Sw->DebounceTime = 0;
  5438  0266  0854               	movf	_Sw^(0+128),w
  5439  0267  3E02               	addlw	2
  5440  0268  0086               	movwf	6
  5441  0269  3001               	movlw	1	; select bank2/3
  5442  026A  0087               	movwf	7
  5443  026B  0181               	clrf	1
  5444                           
  5445                           ;Switch_B1.c: 138: Sw->Debounce = 1;
  5446  026C  0854               	movf	_Sw^(0+128),w
  5447  026D  0086               	movwf	6
  5448  026E  3001               	movlw	1	; select bank2/3
  5449  026F  0087               	movwf	7
  5450  0270  1501               	bsf	1,2
  5451                           
  5452                           ;Switch_B1.c: 144: setDimmerLights_SwOn(sw);
  5453  0271  0020               	movlb	0	; select bank0
  5454  0272  0833               	movf	setSw_Main@sw,w
  5455  0273  3188  20EA         	fcall	_setDimmerLights_SwOn
  5456                           
  5457                           ;Switch_B1.c: 147: }
  5458                           ;Switch_B1.c: 148: } else {
  5459  0275  0008               	return
  5460  0276                     l5630:	
  5461                           
  5462                           ;Switch_B1.c: 149: if (Sw->Hold1 == 0) {
  5463  0276  0021               	movlb	1	; select bank1
  5464  0277  0854               	movf	_Sw^(0+128),w
  5465  0278  0086               	movwf	6
  5466  0279  3001               	movlw	1	; select bank2/3
  5467  027A  0087               	movwf	7
  5468  027B  1981               	btfsc	1,3
  5469  027C  2AAB               	goto	l5640
  5470                           
  5471                           ;Switch_B1.c: 150: Sw->Hold1Time++;
  5472  027D  0854               	movf	_Sw^(0+128),w
  5473  027E  3E03               	addlw	3
  5474  027F  0086               	movwf	6
  5475  0280  3001               	movlw	1	; select bank2/3
  5476  0281  0087               	movwf	7
  5477  0282  3001               	movlw	1
  5478  0283  0781               	addwf	1,f
  5479  0284  3141               	addfsr 1,1
  5480  0285  1803               	skipnc
  5481  0286  0A81               	incf	1,f
  5482                           
  5483                           ;Switch_B1.c: 151: if (Sw->Hold1Time >= (1500 / 20)) {
  5484  0287  0854               	movf	_Sw^(0+128),w
  5485  0288  3E03               	addlw	3
  5486  0289  0086               	movwf	6
  5487  028A  3001               	movlw	1	; select bank2/3
  5488  028B  0087               	movwf	7
  5489  028C  3F40               	moviw [0]fsr1
  5490  028D  0020               	movlb	0	; select bank0
  5491  028E  00B1               	movwf	??_setSw_Main
  5492  028F  3F41               	moviw [1]fsr1
  5493  0290  00B2               	movwf	??_setSw_Main+1
  5494  0291  3000               	movlw	0
  5495  0292  0232               	subwf	??_setSw_Main+1,w
  5496  0293  304B               	movlw	75
  5497  0294  1903               	skipnz
  5498  0295  0231               	subwf	??_setSw_Main,w
  5499  0296  1C03               	skipc
  5500  0297  0008               	return
  5501                           
  5502                           ;Switch_B1.c: 152: Sw->Hold1Time = 0;
  5503  0298  0021               	movlb	1	; select bank1
  5504  0299  0854               	movf	_Sw^(0+128),w
  5505  029A  3E03               	addlw	3
  5506  029B  0086               	movwf	6
  5507  029C  3001               	movlw	1	; select bank2/3
  5508  029D  0087               	movwf	7
  5509  029E  3000               	movlw	0
  5510  029F  3FC0               	movwi [0]fsr1
  5511  02A0  3FC1               	movwi [1]fsr1
  5512                           
  5513                           ;Switch_B1.c: 153: Sw->Hold1 = 1;
  5514  02A1  0854               	movf	_Sw^(0+128),w
  5515  02A2  0086               	movwf	6
  5516  02A3  3001               	movlw	1	; select bank2/3
  5517  02A4  0087               	movwf	7
  5518  02A5  1581               	bsf	1,3
  5519                           
  5520                           ;Switch_B1.c: 159: setDimmerLights_DimmingOn(sw);
  5521  02A6  0020               	movlb	0	; select bank0
  5522  02A7  0833               	movf	setSw_Main@sw,w
  5523  02A8  3195  25B3         	fcall	_setDimmerLights_DimmingOn
  5524                           
  5525                           ;Switch_B1.c: 162: }
  5526                           ;Switch_B1.c: 163: } else {
  5527  02AA  0008               	return
  5528  02AB                     l5640:	
  5529                           
  5530                           ;Switch_B1.c: 165: if (Sw->Hold2 == 0) {
  5531  02AB  0021               	movlb	1	; select bank1
  5532  02AC  0854               	movf	_Sw^(0+128),w
  5533  02AD  0086               	movwf	6
  5534  02AE  3001               	movlw	1	; select bank2/3
  5535  02AF  0087               	movwf	7
  5536  02B0  1A01               	btfsc	1,4
  5537  02B1  2ADC               	goto	l5648
  5538                           
  5539                           ;Switch_B1.c: 166: Sw->Hold2Time++;
  5540  02B2  0854               	movf	_Sw^(0+128),w
  5541  02B3  3E05               	addlw	5
  5542  02B4  0086               	movwf	6
  5543  02B5  3001               	movlw	1	; select bank2/3
  5544  02B6  0087               	movwf	7
  5545  02B7  3001               	movlw	1
  5546  02B8  0781               	addwf	1,f
  5547  02B9  3141               	addfsr 1,1
  5548  02BA  1803               	skipnc
  5549  02BB  0A81               	incf	1,f
  5550                           
  5551                           ;Switch_B1.c: 167: if (Sw->Hold2Time >= (1500 / 20)) {
  5552  02BC  0854               	movf	_Sw^(0+128),w
  5553  02BD  3E05               	addlw	5
  5554  02BE  0086               	movwf	6
  5555  02BF  3001               	movlw	1	; select bank2/3
  5556  02C0  0087               	movwf	7
  5557  02C1  3F40               	moviw [0]fsr1
  5558  02C2  0020               	movlb	0	; select bank0
  5559  02C3  00B1               	movwf	??_setSw_Main
  5560  02C4  3F41               	moviw [1]fsr1
  5561  02C5  00B2               	movwf	??_setSw_Main+1
  5562  02C6  3000               	movlw	0
  5563  02C7  0232               	subwf	??_setSw_Main+1,w
  5564  02C8  304B               	movlw	75
  5565  02C9  1903               	skipnz
  5566  02CA  0231               	subwf	??_setSw_Main,w
  5567  02CB  1C03               	skipc
  5568  02CC  0008               	return
  5569                           
  5570                           ;Switch_B1.c: 168: Sw->Hold2Time = 0;
  5571  02CD  0021               	movlb	1	; select bank1
  5572  02CE  0854               	movf	_Sw^(0+128),w
  5573  02CF  3E05               	addlw	5
  5574  02D0  0086               	movwf	6
  5575  02D1  3001               	movlw	1	; select bank2/3
  5576  02D2  0087               	movwf	7
  5577  02D3  3000               	movlw	0
  5578  02D4  3FC0               	movwi [0]fsr1
  5579  02D5  3FC1               	movwi [1]fsr1
  5580                           
  5581                           ;Switch_B1.c: 169: Sw->Hold2 = 1;
  5582  02D6  0854               	movf	_Sw^(0+128),w
  5583  02D7  0086               	movwf	6
  5584  02D8  3001               	movlw	1	; select bank2/3
  5585  02D9  0087               	movwf	7
  5586  02DA  1601               	bsf	1,4
  5587                           
  5588                           ;Switch_B1.c: 179: }
  5589                           ;Switch_B1.c: 180: } else {
  5590  02DB  0008               	return
  5591  02DC                     l5648:	
  5592                           
  5593                           ;Switch_B1.c: 181: if (Sw->Hold3 == 0) {
  5594  02DC  0854               	movf	_Sw^(0+128),w
  5595  02DD  0086               	movwf	6
  5596  02DE  3001               	movlw	1	; select bank2/3
  5597  02DF  0087               	movwf	7
  5598  02E0  1A81               	btfsc	1,5
  5599  02E1  0008               	return
  5600                           
  5601                           ;Switch_B1.c: 182: Sw->Hold3Time++;
  5602  02E2  0854               	movf	_Sw^(0+128),w
  5603  02E3  3E07               	addlw	7
  5604  02E4  0086               	movwf	6
  5605  02E5  3001               	movlw	1	; select bank2/3
  5606  02E6  0087               	movwf	7
  5607  02E7  3001               	movlw	1
  5608  02E8  0781               	addwf	1,f
  5609  02E9  3141               	addfsr 1,1
  5610  02EA  1803               	skipnc
  5611  02EB  0A81               	incf	1,f
  5612                           
  5613                           ;Switch_B1.c: 183: if (Sw->Hold3Time >= (3000 / 20)) {
  5614  02EC  0854               	movf	_Sw^(0+128),w
  5615  02ED  3E07               	addlw	7
  5616  02EE  0086               	movwf	6
  5617  02EF  3001               	movlw	1	; select bank2/3
  5618  02F0  0087               	movwf	7
  5619  02F1  3F40               	moviw [0]fsr1
  5620  02F2  0020               	movlb	0	; select bank0
  5621  02F3  00B1               	movwf	??_setSw_Main
  5622  02F4  3F41               	moviw [1]fsr1
  5623  02F5  00B2               	movwf	??_setSw_Main+1
  5624  02F6  3000               	movlw	0
  5625  02F7  0232               	subwf	??_setSw_Main+1,w
  5626  02F8  3096               	movlw	150
  5627  02F9  1903               	skipnz
  5628  02FA  0231               	subwf	??_setSw_Main,w
  5629  02FB  1C03               	skipc
  5630  02FC  0008               	return
  5631                           
  5632                           ;Switch_B1.c: 184: Sw->Hold3Time = 0;
  5633  02FD  0021               	movlb	1	; select bank1
  5634  02FE  0854               	movf	_Sw^(0+128),w
  5635  02FF  3E07               	addlw	7
  5636  0300  0086               	movwf	6
  5637  0301  3001               	movlw	1	; select bank2/3
  5638  0302  0087               	movwf	7
  5639  0303  3000               	movlw	0
  5640  0304  3FC0               	movwi [0]fsr1
  5641  0305  3FC1               	movwi [1]fsr1
  5642                           
  5643                           ;Switch_B1.c: 185: Sw->Hold3 = 1;
  5644  0306  0854               	movf	_Sw^(0+128),w
  5645  0307  0086               	movwf	6
  5646  0308  3001               	movlw	1	; select bank2/3
  5647  0309  0087               	movwf	7
  5648  030A  1681               	bsf	1,5
  5649                           
  5650                           ;Switch_B1.c: 191: }
  5651                           ;Switch_B1.c: 192: }
  5652                           ;Switch_B1.c: 193: }
  5653                           ;Switch_B1.c: 195: }
  5654                           ;Switch_B1.c: 196: }
  5655                           ;Switch_B1.c: 197: } else {
  5656  030B  0008               	return
  5657  030C                     l5656:	
  5658                           
  5659                           ;Switch_B1.c: 198: if (Sw->Debounce == 1) {
  5660  030C  0854               	movf	_Sw^(0+128),w
  5661  030D  0086               	movwf	6
  5662  030E  3001               	movlw	1	; select bank2/3
  5663  030F  0087               	movwf	7
  5664  0310  1D01               	btfss	1,2
  5665  0311  0008               	return
  5666                           
  5667                           ;Switch_B1.c: 199: Sw->DebounceTime++;
  5668  0312  3001               	movlw	1
  5669  0313  0020               	movlb	0	; select bank0
  5670  0314  00B1               	movwf	??_setSw_Main
  5671  0315  0021               	movlb	1	; select bank1
  5672  0316  0854               	movf	_Sw^(0+128),w
  5673  0317  3E02               	addlw	2
  5674  0318  0086               	movwf	6
  5675  0319  3001               	movlw	1	; select bank2/3
  5676  031A  0087               	movwf	7
  5677  031B  0020               	movlb	0	; select bank0
  5678  031C  0831               	movf	??_setSw_Main,w
  5679  031D  0781               	addwf	1,f
  5680                           
  5681                           ;Switch_B1.c: 200: if (Sw->DebounceTime >= (60 / 20)) {
  5682  031E  0021               	movlb	1	; select bank1
  5683  031F  0854               	movf	_Sw^(0+128),w
  5684  0320  3E02               	addlw	2
  5685  0321  0086               	movwf	6
  5686  0322  3001               	movlw	1	; select bank2/3
  5687  0323  0087               	movwf	7
  5688  0324  3003               	movlw	3
  5689  0325  0201               	subwf	1,w
  5690  0326  1C03               	skipc
  5691  0327  0008               	return
  5692                           
  5693                           ;Switch_B1.c: 201: Sw->DebounceTime = 0;
  5694  0328  0854               	movf	_Sw^(0+128),w
  5695  0329  3E02               	addlw	2
  5696  032A  0086               	movwf	6
  5697  032B  3001               	movlw	1	; select bank2/3
  5698  032C  0087               	movwf	7
  5699  032D  0181               	clrf	1
  5700                           
  5701                           ;Switch_B1.c: 202: Sw->Debounce = 0;
  5702  032E  0854               	movf	_Sw^(0+128),w
  5703  032F  0086               	movwf	6
  5704  0330  3001               	movlw	1	; select bank2/3
  5705  0331  0087               	movwf	7
  5706  0332  1101               	bcf	1,2
  5707                           
  5708                           ;Switch_B1.c: 203: Sw->Hold1Time = 0;
  5709  0333  0854               	movf	_Sw^(0+128),w
  5710  0334  3E03               	addlw	3
  5711  0335  0086               	movwf	6
  5712  0336  3001               	movlw	1	; select bank2/3
  5713  0337  0087               	movwf	7
  5714  0338  3000               	movlw	0
  5715  0339  3FC0               	movwi [0]fsr1
  5716  033A  3FC1               	movwi [1]fsr1
  5717                           
  5718                           ;Switch_B1.c: 204: Sw->Hold1 = 0;
  5719  033B  0854               	movf	_Sw^(0+128),w
  5720  033C  0086               	movwf	6
  5721  033D  3001               	movlw	1	; select bank2/3
  5722  033E  0087               	movwf	7
  5723  033F  1181               	bcf	1,3
  5724                           
  5725                           ;Switch_B1.c: 206: Sw->Hold2 = 0;
  5726  0340  0854               	movf	_Sw^(0+128),w
  5727  0341  0086               	movwf	6
  5728  0342  3001               	movlw	1	; select bank2/3
  5729  0343  0087               	movwf	7
  5730  0344  1201               	bcf	1,4
  5731                           
  5732                           ;Switch_B1.c: 207: Sw->Hold3 = 0;
  5733  0345  0854               	movf	_Sw^(0+128),w
  5734  0346  0086               	movwf	6
  5735  0347  3001               	movlw	1	; select bank2/3
  5736  0348  0087               	movwf	7
  5737  0349  1281               	bcf	1,5
  5738                           
  5739                           ;Switch_B1.c: 208: Sw->Hold2Time = 0;
  5740  034A  0854               	movf	_Sw^(0+128),w
  5741  034B  3E05               	addlw	5
  5742  034C  0086               	movwf	6
  5743  034D  3001               	movlw	1	; select bank2/3
  5744  034E  0087               	movwf	7
  5745  034F  3000               	movlw	0
  5746  0350  3FC0               	movwi [0]fsr1
  5747  0351  3FC1               	movwi [1]fsr1
  5748                           
  5749                           ;Switch_B1.c: 209: Sw->Hold3Time = 0;
  5750  0352  0854               	movf	_Sw^(0+128),w
  5751  0353  3E07               	addlw	7
  5752  0354  0086               	movwf	6
  5753  0355  3001               	movlw	1	; select bank2/3
  5754  0356  0087               	movwf	7
  5755  0357  3000               	movlw	0
  5756  0358  3FC0               	movwi [0]fsr1
  5757  0359  3FC1               	movwi [1]fsr1
  5758                           
  5759                           ;Switch_B1.c: 216: setDimmerLights_SwOff(sw);
  5760  035A  0020               	movlb	0	; select bank0
  5761  035B  0833               	movf	setSw_Main@sw,w
  5762  035C  3197  2713         	fcall	_setDimmerLights_SwOff
  5763                           
  5764                           ;Switch_B1.c: 222: }
  5765                           ;Switch_B1.c: 223: }
  5766                           ;Switch_B1.c: 224: }
  5767                           ;Switch_B1.c: 225: } else {
  5768  035E  0008               	return
  5769  035F                     l1698:	
  5770                           
  5771                           ;Switch_B1.c: 226: if (myMain.PowerON == 1) {
  5772  035F  1C20               	btfss	_myMain^(0+128),0
  5773  0360  0008               	return
  5774                           
  5775                           ;Switch_B1.c: 227: Sw->Enable = 1;
  5776  0361  0854               	movf	_Sw^(0+128),w
  5777  0362  0086               	movwf	6
  5778  0363  3001               	movlw	1	; select bank2/3
  5779  0364  0087               	movwf	7
  5780  0365  1401               	bsf	1,0
  5781  0366  0008               	return
  5782  0367                     __end_of_setSw_Main:	
  5783                           
  5784                           	psect	text15
  5785  15B3                     __ptext15:	
  5786 ;; *************** function _setDimmerLights_DimmingOn *****************
  5787 ;; Defined at:
  5788 ;;		line 805 in file "../src/Dimmer_B1.c"
  5789 ;; Parameters:    Size  Location     Type
  5790 ;;  sw              1    wreg     unsigned char 
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;  sw              1    2[BANK0 ] unsigned char 
  5793 ;; Return value:  Size  Location     Type
  5794 ;;		None               void
  5795 ;; Registers used:
  5796 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5797 ;; Tracked objects:
  5798 ;;		On entry : 0/0
  5799 ;;		On exit  : 0/0
  5800 ;;		Unchanged: 0/0
  5801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5803 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5805 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5806 ;;Total ram usage:        1 bytes
  5807 ;; Hardware stack levels used:    1
  5808 ;; Hardware stack levels required when called:    6
  5809 ;; This function calls:
  5810 ;;		_DimmerLights_SelectPointer
  5811 ;; This function is called by:
  5812 ;;		_setSw_Main
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816                           
  5817                           ;psect for function _setDimmerLights_DimmingOn
  5818  15B3                     _setDimmerLights_DimmingOn:	
  5819                           
  5820                           ;incstack = 0
  5821                           ; Regs used in _setDimmerLights_DimmingOn: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  5822                           ;setDimmerLights_DimmingOn@sw stored from wreg
  5823  15B3  0020               	movlb	0	; select bank0
  5824  15B4  00A2               	movwf	setDimmerLights_DimmingOn@sw
  5825                           
  5826                           ;Dimmer_B1.c: 811: DimmerLights_SelectPointer(sw);
  5827  15B5  0822               	movf	setDimmerLights_DimmingOn@sw,w
  5828  15B6  3192  2219  3195   	fcall	_DimmerLights_SelectPointer
  5829                           
  5830                           ;Dimmer_B1.c: 812: if (DimmerLights->Trigger == 0) {
  5831  15B9  087D               	movf	_DimmerLights,w
  5832  15BA  0086               	movwf	6
  5833  15BB  3001               	movlw	1	; select bank2/3
  5834  15BC  0087               	movwf	7
  5835  15BD  1881               	btfsc	1,1
  5836  15BE  0008               	return
  5837                           
  5838                           ;Dimmer_B1.c: 813: if (DimmerLights->SwFlag == 1) {
  5839  15BF  087D               	movf	_DimmerLights,w
  5840  15C0  0086               	movwf	6
  5841  15C1  3001               	movlw	1	; select bank2/3
  5842  15C2  0087               	movwf	7
  5843  15C3  1C01               	btfss	1,0
  5844  15C4  0008               	return
  5845                           
  5846                           ;Dimmer_B1.c: 814: DimmerLights->Status = 1;
  5847  15C5  0A7D               	incf	_DimmerLights,w
  5848  15C6  0086               	movwf	6
  5849  15C7  3001               	movlw	1	; select bank2/3
  5850  15C8  0087               	movwf	7
  5851  15C9  1401               	bsf	1,0
  5852                           
  5853                           ;Dimmer_B1.c: 816: DimmerLights->DimmingSwFlag = 1;
  5854  15CA  087D               	movf	_DimmerLights,w
  5855  15CB  0086               	movwf	6
  5856  15CC  3001               	movlw	1	; select bank2/3
  5857  15CD  0087               	movwf	7
  5858  15CE  1581               	bsf	1,3
  5859                           
  5860                           ;Dimmer_B1.c: 817: DimmerLights->DimmingTrigger = 1;
  5861  15CF  087D               	movf	_DimmerLights,w
  5862  15D0  0086               	movwf	6
  5863  15D1  3001               	movlw	1	; select bank2/3
  5864  15D2  0087               	movwf	7
  5865  15D3  1601               	bsf	1,4
  5866                           
  5867                           ;Dimmer_B1.c: 818: DimmerLights->DimmingSwitch = 1;
  5868  15D4  087D               	movf	_DimmerLights,w
  5869  15D5  0086               	movwf	6
  5870  15D6  3001               	movlw	1	; select bank2/3
  5871  15D7  0087               	movwf	7
  5872  15D8  1681               	bsf	1,5
  5873  15D9  0008               	return
  5874  15DA                     __end_of_setDimmerLights_DimmingOn:	
  5875                           
  5876                           	psect	text16
  5877  1330                     __ptext16:	
  5878 ;; *************** function _getSw_KeyStatus *****************
  5879 ;; Defined at:
  5880 ;;		line 238 in file "../src/Switch_B1.c"
  5881 ;; Parameters:    Size  Location     Type
  5882 ;;  sw              1    wreg     unsigned char 
  5883 ;; Auto vars:     Size  Location     Type
  5884 ;;  sw              1    0[COMMON] unsigned char 
  5885 ;;  status          1    1[BANK0 ] unsigned char 
  5886 ;; Return value:  Size  Location     Type
  5887 ;;                  1    wreg      unsigned char 
  5888 ;; Registers used:
  5889 ;;		wreg, status,2
  5890 ;; Tracked objects:
  5891 ;;		On entry : 0/0
  5892 ;;		On exit  : 0/0
  5893 ;;		Unchanged: 0/0
  5894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5896 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5897 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5898 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5899 ;;Total ram usage:        3 bytes
  5900 ;; Hardware stack levels used:    1
  5901 ;; Hardware stack levels required when called:    5
  5902 ;; This function calls:
  5903 ;;		Nothing
  5904 ;; This function is called by:
  5905 ;;		_setSw_Main
  5906 ;; This function uses a non-reentrant model
  5907 ;;
  5908                           
  5909                           
  5910                           ;psect for function _getSw_KeyStatus
  5911  1330                     _getSw_KeyStatus:	
  5912                           
  5913                           ;Switch_B1.c: 239: char status = 0;
  5914                           
  5915                           ;incstack = 0
  5916                           ; Regs used in _getSw_KeyStatus: [wreg+status,2]
  5917  1330  0020               	movlb	0	; select bank0
  5918  1331  01A1               	clrf	getSw_KeyStatus@status
  5919                           
  5920                           ;Switch_B1.c: 272: status = RA6 == 1 || RA4 == 1 || RA0 == 1 || RA7 == 1 ? 1 : 0;
  5921  1332  01A2               	clrf	_getSw_KeyStatus$5430
  5922  1333  0AA2               	incf	_getSw_KeyStatus$5430,f
  5923  1334  1F0C               	btfss	12,6	;volatile
  5924  1335  1A0C               	btfsc	12,4	;volatile
  5925  1336  2B3B               	goto	l5120
  5926  1337  1C0C               	btfss	12,0	;volatile
  5927  1338  1B8C               	btfsc	12,7	;volatile
  5928  1339  2B3B               	goto	l5120
  5929  133A  01A2               	clrf	_getSw_KeyStatus$5430
  5930  133B                     l5120:	
  5931  133B  0822               	movf	_getSw_KeyStatus$5430,w
  5932  133C  00A0               	movwf	??_getSw_KeyStatus
  5933  133D  0820               	movf	??_getSw_KeyStatus,w
  5934  133E  00A1               	movwf	getSw_KeyStatus@status
  5935                           
  5936                           ;Switch_B1.c: 276: return status;
  5937  133F  0821               	movf	getSw_KeyStatus@status,w
  5938  1340  0008               	return
  5939  1341                     __end_of_getSw_KeyStatus:	
  5940                           
  5941                           	psect	text17
  5942  12A4                     __ptext17:	
  5943 ;; *************** function _SwPointSelect *****************
  5944 ;; Defined at:
  5945 ;;		line 25 in file "../src/Switch_B1.c"
  5946 ;; Parameters:    Size  Location     Type
  5947 ;;  sw              1    wreg     unsigned char 
  5948 ;; Auto vars:     Size  Location     Type
  5949 ;;  sw              1    1[BANK0 ] unsigned char 
  5950 ;; Return value:  Size  Location     Type
  5951 ;;		None               void
  5952 ;; Registers used:
  5953 ;;		wreg
  5954 ;; Tracked objects:
  5955 ;;		On entry : 0/0
  5956 ;;		On exit  : 0/0
  5957 ;;		Unchanged: 0/0
  5958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5960 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5961 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5962 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5963 ;;Total ram usage:        2 bytes
  5964 ;; Hardware stack levels used:    1
  5965 ;; Hardware stack levels required when called:    5
  5966 ;; This function calls:
  5967 ;;		Nothing
  5968 ;; This function is called by:
  5969 ;;		_setSw_Main
  5970 ;; This function uses a non-reentrant model
  5971 ;;
  5972                           
  5973                           
  5974                           ;psect for function _SwPointSelect
  5975  12A4                     _SwPointSelect:	
  5976                           
  5977                           ;incstack = 0
  5978                           ; Regs used in _SwPointSelect: [wreg]
  5979                           ;SwPointSelect@sw stored from wreg
  5980  12A4  0020               	movlb	0	; select bank0
  5981  12A5  00A1               	movwf	SwPointSelect@sw
  5982                           
  5983                           ;Switch_B1.c: 28: if (sw == 1) {
  5984  12A6  0821               	movf	SwPointSelect@sw,w
  5985  12A7  3A01               	xorlw	1
  5986  12A8  1D03               	skipz
  5987  12A9  0008               	return
  5988                           
  5989                           ;Switch_B1.c: 29: Sw = &Sw1;
  5990  12AA  3048               	movlw	_Sw1& (0+255)
  5991  12AB  00A0               	movwf	??_SwPointSelect
  5992  12AC  0820               	movf	??_SwPointSelect,w
  5993  12AD  0021               	movlb	1	; select bank1
  5994  12AE  00D4               	movwf	_Sw^(0+128)
  5995  12AF  0008               	return
  5996  12B0                     __end_of_SwPointSelect:	
  5997                           
  5998                           	psect	text18
  5999  13D6                     __ptext18:	
  6000 ;; *************** function _TouchPower *****************
  6001 ;; Defined at:
  6002 ;;		line 10 in file "../src/Switch_B1.c"
  6003 ;; Parameters:    Size  Location     Type
  6004 ;;		None
  6005 ;; Auto vars:     Size  Location     Type
  6006 ;;		None
  6007 ;; Return value:  Size  Location     Type
  6008 ;;		None               void
  6009 ;; Registers used:
  6010 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6011 ;; Tracked objects:
  6012 ;;		On entry : 0/0
  6013 ;;		On exit  : 0/0
  6014 ;;		Unchanged: 0/0
  6015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6020 ;;Total ram usage:        0 bytes
  6021 ;; Hardware stack levels used:    1
  6022 ;; Hardware stack levels required when called:    6
  6023 ;; This function calls:
  6024 ;;		_Timeout_Counter
  6025 ;;		_set_TimeoutCleared
  6026 ;; This function is called by:
  6027 ;;		_Switch_Main
  6028 ;; This function uses a non-reentrant model
  6029 ;;
  6030                           
  6031                           
  6032                           ;psect for function _TouchPower
  6033  13D6                     _TouchPower:	
  6034                           
  6035                           ;Switch_B1.c: 11: if (myMain.PowerON == 1) {
  6036                           
  6037                           ;incstack = 0
  6038                           ; Regs used in _TouchPower: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6039  13D6  0021               	movlb	1	; select bank1
  6040  13D7  1C20               	btfss	_myMain^(0+128),0
  6041  13D8  0008               	return
  6042                           
  6043                           ;Switch_B1.c: 12: if (RB0 == 0) {
  6044  13D9  0020               	movlb	0	; select bank0
  6045  13DA  180D               	btfsc	13,0	;volatile
  6046  13DB  0008               	return
  6047  13DC  2BE2               	goto	l5596
  6048  13DD                     l1678:	
  6049                           ;Switch_B1.c: 13: while (RB0 == 0 && myMain.Timeout == 0) {
  6050                           
  6051                           
  6052                           ;Switch_B1.c: 14: RB0 = 1;
  6053  13DD  0020               	movlb	0	; select bank0
  6054  13DE  140D               	bsf	13,0	;volatile
  6055                           
  6056                           ;Switch_B1.c: 15: Timeout_Counter();
  6057  13DF  3193  23C1  3193   	fcall	_Timeout_Counter
  6058  13E2                     l5596:	
  6059  13E2  0020               	movlb	0	; select bank0
  6060  13E3  180D               	btfsc	13,0	;volatile
  6061  13E4  2BE8               	goto	l5600
  6062  13E5  0021               	movlb	1	; select bank1
  6063  13E6  1D2A               	btfss	(_myMain^(0+128)+10),2
  6064  13E7  2BDD               	goto	l1678
  6065  13E8                     l5600:	
  6066                           
  6067                           ;Switch_B1.c: 16: }
  6068                           ;Switch_B1.c: 17: set_TimeoutCleared();
  6069  13E8  3191  21A0         	fcall	_set_TimeoutCleared
  6070  13EA  0008               	return
  6071  13EB                     __end_of_TouchPower:	
  6072                           
  6073                           	psect	text19
  6074  11A0                     __ptext19:	
  6075 ;; *************** function _set_TimeoutCleared *****************
  6076 ;; Defined at:
  6077 ;;		line 281 in file "../src/Main_B1.c"
  6078 ;; Parameters:    Size  Location     Type
  6079 ;;		None
  6080 ;; Auto vars:     Size  Location     Type
  6081 ;;		None
  6082 ;; Return value:  Size  Location     Type
  6083 ;;		None               void
  6084 ;; Registers used:
  6085 ;;		status,2
  6086 ;; Tracked objects:
  6087 ;;		On entry : 0/0
  6088 ;;		On exit  : 0/0
  6089 ;;		Unchanged: 0/0
  6090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6095 ;;Total ram usage:        0 bytes
  6096 ;; Hardware stack levels used:    1
  6097 ;; Hardware stack levels required when called:    5
  6098 ;; This function calls:
  6099 ;;		Nothing
  6100 ;; This function is called by:
  6101 ;;		_getAD
  6102 ;;		_TouchPower
  6103 ;; This function uses a non-reentrant model
  6104 ;;
  6105                           
  6106                           
  6107                           ;psect for function _set_TimeoutCleared
  6108  11A0                     _set_TimeoutCleared:	
  6109                           
  6110                           ;Main_B1.c: 282: myMain.Timeout = 0;
  6111                           
  6112                           ;incstack = 0
  6113                           ; Regs used in _set_TimeoutCleared: [status,2]
  6114  11A0  0021               	movlb	1	; select bank1
  6115  11A1  112A               	bcf	(_myMain^(0+128)+10),2
  6116                           
  6117                           ;Main_B1.c: 283: myMain.Timeout_Counter = 0;
  6118  11A2  01AB               	clrf	(_myMain^(0+128)+11)
  6119  11A3  01AC               	clrf	((_myMain+1)^(0+128)+11)
  6120  11A4  0008               	return
  6121  11A5                     __end_of_set_TimeoutCleared:	
  6122                           
  6123                           	psect	text20
  6124  13C1                     __ptext20:	
  6125 ;; *************** function _Timeout_Counter *****************
  6126 ;; Defined at:
  6127 ;;		line 272 in file "../src/Main_B1.c"
  6128 ;; Parameters:    Size  Location     Type
  6129 ;;		None
  6130 ;; Auto vars:     Size  Location     Type
  6131 ;;		None
  6132 ;; Return value:  Size  Location     Type
  6133 ;;		None               void
  6134 ;; Registers used:
  6135 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6136 ;; Tracked objects:
  6137 ;;		On entry : 0/0
  6138 ;;		On exit  : 0/0
  6139 ;;		Unchanged: 0/0
  6140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6145 ;;Total ram usage:        0 bytes
  6146 ;; Hardware stack levels used:    1
  6147 ;; Hardware stack levels required when called:    5
  6148 ;; This function calls:
  6149 ;;		Nothing
  6150 ;; This function is called by:
  6151 ;;		_getAD
  6152 ;;		_TouchPower
  6153 ;; This function uses a non-reentrant model
  6154 ;;
  6155                           
  6156                           
  6157                           ;psect for function _Timeout_Counter
  6158  13C1                     _Timeout_Counter:	
  6159                           
  6160                           ;Main_B1.c: 273: myMain.Timeout_Counter++;
  6161                           
  6162                           ;incstack = 0
  6163                           ; Regs used in _Timeout_Counter: [wreg+fsr1l+fsr1h+status,2+status,0]
  6164  13C1  3001               	movlw	1
  6165  13C2  0021               	movlb	1	; select bank1
  6166  13C3  07AB               	addwf	(_myMain^(0+128)+11),f
  6167  13C4  3000               	movlw	0
  6168  13C5  3DAC               	addwfc	((_myMain+1)^(0+128)+11),f
  6169                           
  6170                           ;Main_B1.c: 274: if (myMain.Timeout_Counter == 25000) {
  6171  13C6  300B               	movlw	11
  6172  13C7  3EA0               	addlw	_myMain& (0+255)
  6173  13C8  0086               	movwf	6
  6174  13C9  0187               	clrf	7
  6175  13CA  3F40               	moviw [0]fsr1
  6176  13CB  3AA8               	xorlw	168
  6177  13CC  1D03               	skipz
  6178  13CD  2BD0               	goto	u4935
  6179  13CE  3F41               	moviw [1]fsr1
  6180  13CF  3A61               	xorlw	97
  6181  13D0                     u4935:	
  6182  13D0  1D03               	skipz
  6183  13D1  0008               	return
  6184                           
  6185                           ;Main_B1.c: 275: myMain.Timeout_Counter = 0;
  6186  13D2  01AB               	clrf	(_myMain^(0+128)+11)
  6187  13D3  01AC               	clrf	((_myMain+1)^(0+128)+11)
  6188                           
  6189                           ;Main_B1.c: 276: myMain.Timeout = 1;
  6190  13D4  152A               	bsf	(_myMain^(0+128)+10),2
  6191  13D5  0008               	return
  6192  13D6                     __end_of_Timeout_Counter:	
  6193                           
  6194                           	psect	text21
  6195  119C                     __ptext21:	
  6196 ;; *************** function _Switch_Initialization *****************
  6197 ;; Defined at:
  6198 ;;		line 46 in file "../src/Switch_B1.c"
  6199 ;; Parameters:    Size  Location     Type
  6200 ;;		None
  6201 ;; Auto vars:     Size  Location     Type
  6202 ;;		None
  6203 ;; Return value:  Size  Location     Type
  6204 ;;		None               void
  6205 ;; Registers used:
  6206 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6207 ;; Tracked objects:
  6208 ;;		On entry : 0/0
  6209 ;;		On exit  : 0/0
  6210 ;;		Unchanged: 0/0
  6211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6216 ;;Total ram usage:        0 bytes
  6217 ;; Hardware stack levels used:    1
  6218 ;; Hardware stack levels required when called:    8
  6219 ;; This function calls:
  6220 ;;		_setSw_Initialization
  6221 ;; This function is called by:
  6222 ;;		_main
  6223 ;; This function uses a non-reentrant model
  6224 ;;
  6225                           
  6226                           
  6227                           ;psect for function _Switch_Initialization
  6228  119C                     _Switch_Initialization:	
  6229                           
  6230                           ;Switch_B1.c: 52: setSw_Initialization(1);
  6231                           
  6232                           ;incstack = 0
  6233                           ; Regs used in _Switch_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6234  119C  3001               	movlw	1
  6235  119D  3192  22ED         	fcall	_setSw_Initialization
  6236  119F  0008               	return
  6237  11A0                     __end_of_Switch_Initialization:	
  6238                           
  6239                           	psect	text22
  6240  12ED                     __ptext22:	
  6241 ;; *************** function _setSw_Initialization *****************
  6242 ;; Defined at:
  6243 ;;		line 66 in file "../src/Switch_B1.c"
  6244 ;; Parameters:    Size  Location     Type
  6245 ;;  sw              1    wreg     unsigned char 
  6246 ;; Auto vars:     Size  Location     Type
  6247 ;;  sw              1    4[BANK0 ] unsigned char 
  6248 ;; Return value:  Size  Location     Type
  6249 ;;		None               void
  6250 ;; Registers used:
  6251 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6252 ;; Tracked objects:
  6253 ;;		On entry : 0/0
  6254 ;;		On exit  : 0/0
  6255 ;;		Unchanged: 0/0
  6256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6258 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6260 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6261 ;;Total ram usage:        1 bytes
  6262 ;; Hardware stack levels used:    1
  6263 ;; Hardware stack levels required when called:    7
  6264 ;; This function calls:
  6265 ;;		_setLED
  6266 ;; This function is called by:
  6267 ;;		_Switch_Initialization
  6268 ;; This function uses a non-reentrant model
  6269 ;;
  6270                           
  6271                           
  6272                           ;psect for function _setSw_Initialization
  6273  12ED                     _setSw_Initialization:	
  6274                           
  6275                           ;incstack = 0
  6276                           ; Regs used in _setSw_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6277                           ;setSw_Initialization@sw stored from wreg
  6278  12ED  0020               	movlb	0	; select bank0
  6279  12EE  00A4               	movwf	setSw_Initialization@sw
  6280                           
  6281                           ;Switch_B1.c: 68: setLED(sw, 1);
  6282  12EF  01A2               	clrf	setLED@command
  6283  12F0  0AA2               	incf	setLED@command,f
  6284  12F1  0824               	movf	setSw_Initialization@sw,w
  6285  12F2  3196  266E  3192   	fcall	_setLED
  6286                           
  6287                           ;Switch_B1.c: 70: setLED(sw + 1, 1);
  6288  12F5  0020               	movlb	0	; select bank0
  6289  12F6  01A2               	clrf	setLED@command
  6290  12F7  0AA2               	incf	setLED@command,f
  6291  12F8  0824               	movf	setSw_Initialization@sw,w
  6292  12F9  3E01               	addlw	1
  6293  12FA  3196  266E         	fcall	_setLED
  6294  12FC  0008               	return
  6295  12FD                     __end_of_setSw_Initialization:	
  6296                           
  6297                           	psect	text23
  6298  1377                     __ptext23:	
  6299 ;; *************** function _Mcu_Initialization *****************
  6300 ;; Defined at:
  6301 ;;		line 30 in file "../src/MCU_B1.c"
  6302 ;; Parameters:    Size  Location     Type
  6303 ;;		None
  6304 ;; Auto vars:     Size  Location     Type
  6305 ;;		None
  6306 ;; Return value:  Size  Location     Type
  6307 ;;		None               void
  6308 ;; Registers used:
  6309 ;;		wreg, status,2, status,0, pclath, cstack
  6310 ;; Tracked objects:
  6311 ;;		On entry : 0/0
  6312 ;;		On exit  : 0/0
  6313 ;;		Unchanged: 0/0
  6314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6319 ;;Total ram usage:        0 bytes
  6320 ;; Hardware stack levels used:    1
  6321 ;; Hardware stack levels required when called:    6
  6322 ;; This function calls:
  6323 ;;		_ADC_Set
  6324 ;;		_Fosc_Set
  6325 ;;		_IOC_Set
  6326 ;;		_IO_Set
  6327 ;;		_TMR1_Set
  6328 ;;		_WDT_Set
  6329 ;; This function is called by:
  6330 ;;		_main
  6331 ;; This function uses a non-reentrant model
  6332 ;;
  6333                           
  6334                           
  6335                           ;psect for function _Mcu_Initialization
  6336  1377                     _Mcu_Initialization:	
  6337                           
  6338                           ;MCU_B1.c: 32: Fosc_Set();
  6339                           
  6340                           ;incstack = 0
  6341                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  6342  1377  3191  2198  3193   	fcall	_Fosc_Set
  6343                           
  6344                           ;MCU_B1.c: 34: IO_Set();
  6345  137A  3194  2461  3193   	fcall	_IO_Set
  6346                           
  6347                           ;MCU_B1.c: 36: ;;
  6348                           ;MCU_B1.c: 38: TMR1_Set();
  6349  137D  3192  2298  3193   	fcall	_TMR1_Set
  6350                           
  6351                           ;MCU_B1.c: 40: ADC_Set();
  6352  1380  3191  21C4  3193   	fcall	_ADC_Set
  6353                           
  6354                           ;MCU_B1.c: 42: ;;
  6355                           ;MCU_B1.c: 44: ;;
  6356                           ;MCU_B1.c: 46: IOC_Set();
  6357  1383  3192  223A  3193   	fcall	_IOC_Set
  6358                           
  6359                           ;MCU_B1.c: 48: ;;
  6360                           ;MCU_B1.c: 50: ;;
  6361                           ;MCU_B1.c: 52: WDT_Set();
  6362  1386  3192  2245         	fcall	_WDT_Set
  6363  1388  0008               	return
  6364  1389                     __end_of_Mcu_Initialization:	
  6365                           
  6366                           	psect	text24
  6367  1245                     __ptext24:	
  6368 ;; *************** function _WDT_Set *****************
  6369 ;; Defined at:
  6370 ;;		line 1102 in file "../src/MCU_B1.c"
  6371 ;; Parameters:    Size  Location     Type
  6372 ;;		None
  6373 ;; Auto vars:     Size  Location     Type
  6374 ;;		None
  6375 ;; Return value:  Size  Location     Type
  6376 ;;		None               void
  6377 ;; Registers used:
  6378 ;;		wreg
  6379 ;; Tracked objects:
  6380 ;;		On entry : 0/0
  6381 ;;		On exit  : 0/0
  6382 ;;		Unchanged: 0/0
  6383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6386 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6387 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6388 ;;Total ram usage:        1 bytes
  6389 ;; Hardware stack levels used:    1
  6390 ;; Hardware stack levels required when called:    5
  6391 ;; This function calls:
  6392 ;;		Nothing
  6393 ;; This function is called by:
  6394 ;;		_Mcu_Initialization
  6395 ;; This function uses a non-reentrant model
  6396 ;;
  6397                           
  6398                           
  6399                           ;psect for function _WDT_Set
  6400  1245                     _WDT_Set:	
  6401                           
  6402                           ;MCU_B1.c: 1109: WDTCON = 0b00010111;;
  6403                           
  6404                           ;incstack = 0
  6405                           ; Regs used in _WDT_Set: [wreg]
  6406  1245  3017               	movlw	23
  6407  1246  0021               	movlb	1	; select bank1
  6408  1247  0097               	movwf	23	;volatile
  6409                           
  6410                           ;MCU_B1.c: 1111: WDT.Enable = 1;
  6411  1248  144D               	bsf	_WDT^(0+128),0
  6412                           
  6413                           ;MCU_B1.c: 1112: WDT.Timer = 10;
  6414  1249  300A               	movlw	10
  6415  124A  0020               	movlb	0	; select bank0
  6416  124B  00A0               	movwf	??_WDT_Set
  6417  124C  0820               	movf	??_WDT_Set,w
  6418  124D  0021               	movlb	1	; select bank1
  6419  124E  00CE               	movwf	(_WDT^(0+128)+1)
  6420  124F  0008               	return
  6421  1250                     __end_of_WDT_Set:	
  6422                           
  6423                           	psect	text25
  6424  1298                     __ptext25:	
  6425 ;; *************** function _TMR1_Set *****************
  6426 ;; Defined at:
  6427 ;;		line 226 in file "../src/MCU_B1.c"
  6428 ;; Parameters:    Size  Location     Type
  6429 ;;		None
  6430 ;; Auto vars:     Size  Location     Type
  6431 ;;		None
  6432 ;; Return value:  Size  Location     Type
  6433 ;;		None               void
  6434 ;; Registers used:
  6435 ;;		wreg
  6436 ;; Tracked objects:
  6437 ;;		On entry : 0/0
  6438 ;;		On exit  : 0/0
  6439 ;;		Unchanged: 0/0
  6440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6445 ;;Total ram usage:        0 bytes
  6446 ;; Hardware stack levels used:    1
  6447 ;; Hardware stack levels required when called:    5
  6448 ;; This function calls:
  6449 ;;		Nothing
  6450 ;; This function is called by:
  6451 ;;		_Mcu_Initialization
  6452 ;; This function uses a non-reentrant model
  6453 ;;
  6454                           
  6455                           
  6456                           ;psect for function _TMR1_Set
  6457  1298                     _TMR1_Set:	
  6458                           
  6459                           ;MCU_B1.c: 227: T1CON = (0x40 | 0x00 | 0x01);
  6460                           
  6461                           ;incstack = 0
  6462                           ; Regs used in _TMR1_Set: [wreg]
  6463  1298  3041               	movlw	65
  6464  1299  0020               	movlb	0	; select bank0
  6465  129A  0098               	movwf	24	;volatile
  6466                           
  6467                           ;MCU_B1.c: 228: TMR1H = (int)((65536-1480)/256);
  6468  129B  30FA               	movlw	250
  6469  129C  0097               	movwf	23	;volatile
  6470                           
  6471                           ;MCU_B1.c: 229: TMR1L = (int)((65536-1480)%256);
  6472  129D  3038               	movlw	56
  6473  129E  0096               	movwf	22	;volatile
  6474                           
  6475                           ;MCU_B1.c: 230: TMR1IE = 1;
  6476  129F  0021               	movlb	1	; select bank1
  6477  12A0  1411               	bsf	17,0	;volatile
  6478                           
  6479                           ;MCU_B1.c: 231: PEIE = 1;
  6480  12A1  170B               	bsf	11,6	;volatile
  6481                           
  6482                           ;MCU_B1.c: 232: GIE = 1;
  6483  12A2  178B               	bsf	11,7	;volatile
  6484  12A3  0008               	return
  6485  12A4                     __end_of_TMR1_Set:	
  6486                           
  6487                           	psect	text26
  6488  1461                     __ptext26:	
  6489 ;; *************** function _IO_Set *****************
  6490 ;; Defined at:
  6491 ;;		line 60 in file "../src/MCU_B1.c"
  6492 ;; Parameters:    Size  Location     Type
  6493 ;;		None
  6494 ;; Auto vars:     Size  Location     Type
  6495 ;;		None
  6496 ;; Return value:  Size  Location     Type
  6497 ;;		None               void
  6498 ;; Registers used:
  6499 ;;		wreg, status,2
  6500 ;; Tracked objects:
  6501 ;;		On entry : 0/0
  6502 ;;		On exit  : 0/0
  6503 ;;		Unchanged: 0/0
  6504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6509 ;;Total ram usage:        0 bytes
  6510 ;; Hardware stack levels used:    1
  6511 ;; Hardware stack levels required when called:    5
  6512 ;; This function calls:
  6513 ;;		Nothing
  6514 ;; This function is called by:
  6515 ;;		_Mcu_Initialization
  6516 ;; This function uses a non-reentrant model
  6517 ;;
  6518                           
  6519                           
  6520                           ;psect for function _IO_Set
  6521  1461                     _IO_Set:	
  6522                           
  6523                           ;MCU_B1.c: 92: TRISA = 0b11110111;;
  6524                           
  6525                           ;incstack = 0
  6526                           ; Regs used in _IO_Set: [wreg+status,2]
  6527  1461  30F7               	movlw	247
  6528  1462  0021               	movlb	1	; select bank1
  6529  1463  008C               	movwf	12	;volatile
  6530                           
  6531                           ;MCU_B1.c: 93: TRISB = 0b00000100;;
  6532  1464  3004               	movlw	4
  6533  1465  008D               	movwf	13	;volatile
  6534                           
  6535                           ;MCU_B1.c: 94: TRISC = 0b00100110;;
  6536  1466  3026               	movlw	38
  6537  1467  008E               	movwf	14	;volatile
  6538                           
  6539                           ;MCU_B1.c: 96: LATA = 0b00000000;;
  6540  1468  0022               	movlb	2	; select bank2
  6541  1469  018C               	clrf	12	;volatile
  6542                           
  6543                           ;MCU_B1.c: 97: LATB = 0b00000000;;
  6544  146A  018D               	clrf	13	;volatile
  6545                           
  6546                           ;MCU_B1.c: 98: LATC = 0b00000000;;
  6547  146B  018E               	clrf	14	;volatile
  6548                           
  6549                           ;MCU_B1.c: 100: ANSELA = 0b00001110;;
  6550  146C  300E               	movlw	14
  6551  146D  0023               	movlb	3	; select bank3
  6552  146E  008C               	movwf	12	;volatile
  6553                           
  6554                           ;MCU_B1.c: 101: ANSELB = 0b00000000;;
  6555  146F  018D               	clrf	13	;volatile
  6556                           
  6557                           ;MCU_B1.c: 102: ANSELC = 0b00000000;;
  6558  1470  018E               	clrf	14	;volatile
  6559                           
  6560                           ;MCU_B1.c: 104: PORTA = 0b11110111;;
  6561  1471  30F7               	movlw	247
  6562  1472  0020               	movlb	0	; select bank0
  6563  1473  008C               	movwf	12	;volatile
  6564                           
  6565                           ;MCU_B1.c: 105: PORTB = 0b00000100;;
  6566  1474  3004               	movlw	4
  6567  1475  008D               	movwf	13	;volatile
  6568                           
  6569                           ;MCU_B1.c: 106: PORTC = 0b00100110;;
  6570  1476  3026               	movlw	38
  6571  1477  008E               	movwf	14	;volatile
  6572                           
  6573                           ;MCU_B1.c: 108: WPUB = 0b00000000;;
  6574  1478  0024               	movlb	4	; select bank4
  6575  1479  018D               	clrf	13	;volatile
  6576  147A  0008               	return
  6577  147B                     __end_of_IO_Set:	
  6578                           
  6579                           	psect	text27
  6580  123A                     __ptext27:	
  6581 ;; *************** function _IOC_Set *****************
  6582 ;; Defined at:
  6583 ;;		line 380 in file "../src/MCU_B1.c"
  6584 ;; Parameters:    Size  Location     Type
  6585 ;;		None
  6586 ;; Auto vars:     Size  Location     Type
  6587 ;;		None
  6588 ;; Return value:  Size  Location     Type
  6589 ;;		None               void
  6590 ;; Registers used:
  6591 ;;		wreg, status,2
  6592 ;; Tracked objects:
  6593 ;;		On entry : 0/0
  6594 ;;		On exit  : 0/0
  6595 ;;		Unchanged: 0/0
  6596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6601 ;;Total ram usage:        0 bytes
  6602 ;; Hardware stack levels used:    1
  6603 ;; Hardware stack levels required when called:    5
  6604 ;; This function calls:
  6605 ;;		Nothing
  6606 ;; This function is called by:
  6607 ;;		_Mcu_Initialization
  6608 ;; This function uses a non-reentrant model
  6609 ;;
  6610                           
  6611                           
  6612                           ;psect for function _IOC_Set
  6613  123A                     _IOC_Set:	
  6614                           
  6615                           ;MCU_B1.c: 382: IOCBP = 0b00000100;;
  6616                           
  6617                           ;incstack = 0
  6618                           ; Regs used in _IOC_Set: [wreg+status,2]
  6619  123A  3004               	movlw	4
  6620  123B  0027               	movlb	7	; select bank7
  6621  123C  0094               	movwf	20	;volatile
  6622                           
  6623                           ;MCU_B1.c: 383: IOCBN = 0b00000100;;
  6624  123D  3004               	movlw	4
  6625  123E  0095               	movwf	21	;volatile
  6626                           
  6627                           ;MCU_B1.c: 385: IOCBF = 0b00000000;
  6628  123F  0196               	clrf	22	;volatile
  6629                           
  6630                           ;MCU_B1.c: 387: IOCIE = 1;
  6631  1240  158B               	bsf	11,3	;volatile
  6632                           
  6633                           ;MCU_B1.c: 388: IOCIF = 0;
  6634  1241  100B               	bcf	11,0	;volatile
  6635                           
  6636                           ;MCU_B1.c: 389: PEIE = 1;
  6637  1242  170B               	bsf	11,6	;volatile
  6638                           
  6639                           ;MCU_B1.c: 390: GIE = 1;
  6640  1243  178B               	bsf	11,7	;volatile
  6641  1244  0008               	return
  6642  1245                     __end_of_IOC_Set:	
  6643                           
  6644                           	psect	text28
  6645  1198                     __ptext28:	
  6646 ;; *************** function _Fosc_Set *****************
  6647 ;; Defined at:
  6648 ;;		line 56 in file "../src/MCU_B1.c"
  6649 ;; Parameters:    Size  Location     Type
  6650 ;;		None
  6651 ;; Auto vars:     Size  Location     Type
  6652 ;;		None
  6653 ;; Return value:  Size  Location     Type
  6654 ;;		None               void
  6655 ;; Registers used:
  6656 ;;		wreg
  6657 ;; Tracked objects:
  6658 ;;		On entry : 0/0
  6659 ;;		On exit  : 0/0
  6660 ;;		Unchanged: 0/0
  6661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6666 ;;Total ram usage:        0 bytes
  6667 ;; Hardware stack levels used:    1
  6668 ;; Hardware stack levels required when called:    5
  6669 ;; This function calls:
  6670 ;;		Nothing
  6671 ;; This function is called by:
  6672 ;;		_Mcu_Initialization
  6673 ;; This function uses a non-reentrant model
  6674 ;;
  6675                           
  6676                           
  6677                           ;psect for function _Fosc_Set
  6678  1198                     _Fosc_Set:	
  6679                           
  6680                           ;MCU_B1.c: 57: OSCCON = 0x78;
  6681                           
  6682                           ;incstack = 0
  6683                           ; Regs used in _Fosc_Set: [wreg]
  6684  1198  3078               	movlw	120
  6685  1199  0021               	movlb	1	; select bank1
  6686  119A  0099               	movwf	25	;volatile
  6687  119B  0008               	return
  6688  119C                     __end_of_Fosc_Set:	
  6689                           
  6690                           	psect	text29
  6691  11C4                     __ptext29:	
  6692 ;; *************** function _ADC_Set *****************
  6693 ;; Defined at:
  6694 ;;		line 427 in file "../src/MCU_B1.c"
  6695 ;; Parameters:    Size  Location     Type
  6696 ;;		None
  6697 ;; Auto vars:     Size  Location     Type
  6698 ;;		None
  6699 ;; Return value:  Size  Location     Type
  6700 ;;		None               void
  6701 ;; Registers used:
  6702 ;;		wreg
  6703 ;; Tracked objects:
  6704 ;;		On entry : 0/0
  6705 ;;		On exit  : 0/0
  6706 ;;		Unchanged: 0/0
  6707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6712 ;;Total ram usage:        0 bytes
  6713 ;; Hardware stack levels used:    1
  6714 ;; Hardware stack levels required when called:    5
  6715 ;; This function calls:
  6716 ;;		Nothing
  6717 ;; This function is called by:
  6718 ;;		_Mcu_Initialization
  6719 ;; This function uses a non-reentrant model
  6720 ;;
  6721                           
  6722                           
  6723                           ;psect for function _ADC_Set
  6724  11C4                     _ADC_Set:	
  6725                           
  6726                           ;MCU_B1.c: 428: ADCON1 = 0xf3;
  6727                           
  6728                           ;incstack = 0
  6729                           ; Regs used in _ADC_Set: [wreg]
  6730  11C4  30F3               	movlw	243
  6731  11C5  0021               	movlb	1	; select bank1
  6732  11C6  009E               	movwf	30	;volatile
  6733                           
  6734                           ;MCU_B1.c: 429: FVRCON = 0xc1;
  6735  11C7  30C1               	movlw	193
  6736  11C8  0022               	movlb	2	; select bank2
  6737  11C9  0097               	movwf	23	;volatile
  6738  11CA  0008               	return
  6739  11CB                     __end_of_ADC_Set:	
  6740                           
  6741                           	psect	text30
  6742  0049                     __ptext30:	
  6743 ;; *************** function _Load_Main *****************
  6744 ;; Defined at:
  6745 ;;		line 40 in file "../src/OverLoad_B1.c"
  6746 ;; Parameters:    Size  Location     Type
  6747 ;;		None
  6748 ;; Auto vars:     Size  Location     Type
  6749 ;;  i               2   16[BANK0 ] int 
  6750 ;;  LightsCount     1   15[BANK0 ] unsigned char 
  6751 ;;  Load_RunStat    1   14[BANK0 ] unsigned char 
  6752 ;;  ErrorCountVa    1   13[BANK0 ] unsigned char 
  6753 ;;  error           1   12[BANK0 ] unsigned char 
  6754 ;; Return value:  Size  Location     Type
  6755 ;;		None               void
  6756 ;; Registers used:
  6757 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6758 ;; Tracked objects:
  6759 ;;		On entry : 0/0
  6760 ;;		On exit  : 0/0
  6761 ;;		Unchanged: 0/0
  6762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6764 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6765 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6766 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6767 ;;Total ram usage:       10 bytes
  6768 ;; Hardware stack levels used:    1
  6769 ;; Hardware stack levels required when called:    6
  6770 ;; This function calls:
  6771 ;;		___lwdiv
  6772 ;;		___wmul
  6773 ;;		_getAll_DimmerIntr_Dimming_Sw_RF
  6774 ;;		_getDimmer_LoadGO
  6775 ;;		_getDimmer_Load_Status
  6776 ;;		_getMain_All_Error_Status
  6777 ;;		_getMain_All_LightsStatus
  6778 ;;		_getMain_Lights_Count
  6779 ;;		_setLoad_AH_AL_Restore
  6780 ;; This function is called by:
  6781 ;;		_main
  6782 ;; This function uses a non-reentrant model
  6783 ;;
  6784                           
  6785                           
  6786                           ;psect for function _Load_Main
  6787  0049                     _Load_Main:	
  6788                           
  6789                           ;OverLoad_B1.c: 41: char error = getMain_All_Error_Status(0);
  6790                           
  6791                           ;incstack = 0
  6792                           ; Regs used in _Load_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6793  0049  3000               	movlw	0
  6794  004A  3196  263B  3180   	fcall	_getMain_All_Error_Status
  6795  004D  0020               	movlb	0	; select bank0
  6796  004E  00A8               	movwf	??_Load_Main
  6797  004F  0828               	movf	??_Load_Main,w
  6798  0050  00AC               	movwf	Load_Main@error
  6799                           
  6800                           ;OverLoad_B1.c: 42: char Load_RunStatus = 0, ErrorCountValue = 0, LightsCount = 0;
  6801  0051  01AE               	clrf	Load_Main@Load_RunStatus
  6802  0052  01AD               	clrf	Load_Main@ErrorCountValue
  6803  0053  01AF               	clrf	Load_Main@LightsCount
  6804                           
  6805                           ;OverLoad_B1.c: 43: if (Load.Enable == 1) {
  6806  0054  0022               	movlb	2	; select bank2
  6807  0055  1C20               	btfss	_Load^(0+256),0
  6808  0056  29F5               	goto	l1195
  6809                           
  6810                           ;OverLoad_B1.c: 45: if (getMain_All_LightsStatus() == 0) {
  6811  0057  3192  2205  3180   	fcall	_getMain_All_LightsStatus
  6812  005A  3800               	iorlw	0
  6813  005B  1D03               	skipz
  6814  005C  285F               	goto	l5972
  6815                           
  6816                           ;OverLoad_B1.c: 46: Load.GO = 0;
  6817  005D  0022               	movlb	2	; select bank2
  6818  005E  2880               	goto	l5990
  6819  005F                     l5972:	
  6820                           ;OverLoad_B1.c: 47: } else {
  6821                           
  6822                           
  6823                           ;OverLoad_B1.c: 50: if (error == 0 && getAll_DimmerIntr_Dimming_Sw_RF() == 0) {
  6824  005F  0020               	movlb	0	; select bank0
  6825  0060  08AC               	movf	Load_Main@error,f
  6826  0061  1D03               	skipz
  6827  0062  287D               	goto	l1198
  6828  0063  3192  220F  3180   	fcall	_getAll_DimmerIntr_Dimming_Sw_RF
  6829  0066  3800               	iorlw	0
  6830  0067  1D03               	skipz
  6831  0068  287D               	goto	l1198
  6832                           
  6833                           ;OverLoad_B1.c: 51: Load.GO = 1;
  6834  0069  0022               	movlb	2	; select bank2
  6835  006A  14A0               	bsf	_Load^(0+256),1
  6836                           
  6837                           ;OverLoad_B1.c: 53: if (getDimmer_LoadGO() == 1) {
  6838  006B  3191  21DA  3180   	fcall	_getDimmer_LoadGO
  6839  006E  3A01               	xorlw	1
  6840  006F  1D03               	skipz
  6841  0070  2878               	goto	l1199
  6842                           
  6843                           ;OverLoad_B1.c: 54: if (Load.Run == 0 && Load.OK == 0) {
  6844  0071  0022               	movlb	2	; select bank2
  6845  0072  1DA0               	btfss	_Load^(0+256),3
  6846  0073  1BA0               	btfsc	_Load^(0+256),7
  6847  0074  2881               	goto	l1197
  6848                           
  6849                           ;OverLoad_B1.c: 55: Load.Run = 1;
  6850  0075  15A0               	bsf	_Load^(0+256),3
  6851                           
  6852                           ;OverLoad_B1.c: 56: Load.Count = 0;
  6853  0076  01C5               	clrf	(_Load^(0+256)+37)
  6854                           
  6855                           ;OverLoad_B1.c: 57: }
  6856                           ;OverLoad_B1.c: 58: } else {
  6857  0077  2881               	goto	l1197
  6858  0078                     l1199:	
  6859                           
  6860                           ;OverLoad_B1.c: 59: if (Load.OK == 1) {
  6861  0078  0022               	movlb	2	; select bank2
  6862  0079  1FA0               	btfss	_Load^(0+256),7
  6863  007A  2881               	goto	l1197
  6864                           
  6865                           ;OverLoad_B1.c: 60: Load.OK = 0;
  6866  007B  13A0               	bcf	_Load^(0+256),7
  6867                           
  6868                           ;OverLoad_B1.c: 61: }
  6869                           ;OverLoad_B1.c: 62: }
  6870                           ;OverLoad_B1.c: 63: } else {
  6871  007C  2881               	goto	l1197
  6872  007D                     l1198:	
  6873                           
  6874                           ;OverLoad_B1.c: 64: if (Load.GO == 1) {
  6875  007D  0022               	movlb	2	; select bank2
  6876  007E  1CA0               	btfss	_Load^(0+256),1
  6877  007F  2881               	goto	l1197
  6878  0080                     l5990:	
  6879                           
  6880                           ;OverLoad_B1.c: 65: Load.GO = 0;
  6881  0080  10A0               	bcf	_Load^(0+256),1
  6882  0081                     l1197:	
  6883                           
  6884                           ;OverLoad_B1.c: 66: }
  6885                           ;OverLoad_B1.c: 67: }
  6886                           ;OverLoad_B1.c: 89: }
  6887                           ;OverLoad_B1.c: 92: if (Load.GO == 1) {
  6888  0081  1CA0               	btfss	_Load^(0+256),1
  6889  0082  29D1               	goto	l1205
  6890                           
  6891                           ;OverLoad_B1.c: 93: Load.LightsON = 1;
  6892  0083  1520               	bsf	_Load^(0+256),2
  6893                           
  6894                           ;OverLoad_B1.c: 95: if (Load.ADtoGO == 1) {
  6895  0084  1E20               	btfss	_Load^(0+256),4
  6896  0085  29CF               	goto	l1206
  6897                           
  6898                           ;OverLoad_B1.c: 96: Load.Time++;
  6899  0086  3001               	movlw	1
  6900  0087  07A1               	addwf	(_Load^(0+256)+1),f
  6901  0088  3000               	movlw	0
  6902  0089  3DA2               	addwfc	((_Load+1)^(0+256)+1),f
  6903                           
  6904                           ;OverLoad_B1.c: 97: if (Load.Time >= (40 / 20)) {
  6905  008A  3000               	movlw	0
  6906  008B  0222               	subwf	((_Load+1)^(0+256)+1),w
  6907  008C  3002               	movlw	2
  6908  008D  1903               	skipnz
  6909  008E  0221               	subwf	(_Load^(0+256)+1),w
  6910  008F  1C03               	skipc
  6911  0090  0008               	return
  6912                           
  6913                           ;OverLoad_B1.c: 98: Load.Time = 0;
  6914  0091  01A1               	clrf	(_Load^(0+256)+1)
  6915  0092  01A2               	clrf	((_Load+1)^(0+256)+1)
  6916                           
  6917                           ;OverLoad_B1.c: 99: Load.ADtoGO = 0;
  6918  0093  1220               	bcf	_Load^(0+256),4
  6919                           
  6920                           ;OverLoad_B1.c: 101: for (int i = 1; i < 4; i++) {
  6921  0094  3001               	movlw	1
  6922  0095  0020               	movlb	0	; select bank0
  6923  0096  00B0               	movwf	Load_Main@i
  6924  0097  3000               	movlw	0
  6925  0098  00B1               	movwf	Load_Main@i+1
  6926  0099  0831               	movf	Load_Main@i+1,w
  6927  009A  3A80               	xorlw	128
  6928  009B  00A8               	movwf	??_Load_Main
  6929  009C  3080               	movlw	128
  6930  009D  0228               	subwf	??_Load_Main,w
  6931  009E  1D03               	skipz
  6932  009F  28A2               	goto	u6645
  6933  00A0  3004               	movlw	4
  6934  00A1  0230               	subwf	Load_Main@i,w
  6935  00A2                     u6645:	
  6936  00A2  1803               	btfsc	3,0
  6937  00A3  28D6               	goto	l6012
  6938  00A4                     l6006:	
  6939                           
  6940                           ;OverLoad_B1.c: 102: Load.ADH += Load.AH[i];
  6941  00A4  0020               	movlb	0	; select bank0
  6942  00A5  3530               	lslf	Load_Main@i,w
  6943  00A6  3E2B               	addlw	(_Load+11)& (0+255)
  6944  00A7  0086               	movwf	6
  6945  00A8  3001               	movlw	1	; select bank2/3
  6946  00A9  0087               	movwf	7
  6947  00AA  3F40               	moviw [0]fsr1
  6948  00AB  00A8               	movwf	??_Load_Main
  6949  00AC  3F41               	moviw [1]fsr1
  6950  00AD  00A9               	movwf	??_Load_Main+1
  6951  00AE  0828               	movf	??_Load_Main,w
  6952  00AF  0022               	movlb	2	; select bank2
  6953  00B0  07A5               	addwf	(_Load^(0+256)+5),f
  6954  00B1  0020               	movlb	0	; select bank0
  6955  00B2  0829               	movf	??_Load_Main+1,w
  6956  00B3  0022               	movlb	2	; select bank2
  6957  00B4  3DA6               	addwfc	((_Load+1)^(0+256)+5),f
  6958                           
  6959                           ;OverLoad_B1.c: 103: Load.ADL += Load.AL[i];
  6960  00B5  0020               	movlb	0	; select bank0
  6961  00B6  3530               	lslf	Load_Main@i,w
  6962  00B7  3E35               	addlw	(_Load+21)& (0+255)
  6963  00B8  0086               	movwf	6
  6964  00B9  3001               	movlw	1	; select bank2/3
  6965  00BA  0087               	movwf	7
  6966  00BB  3F40               	moviw [0]fsr1
  6967  00BC  00A8               	movwf	??_Load_Main
  6968  00BD  3F41               	moviw [1]fsr1
  6969  00BE  00A9               	movwf	??_Load_Main+1
  6970  00BF  0828               	movf	??_Load_Main,w
  6971  00C0  0022               	movlb	2	; select bank2
  6972  00C1  07A7               	addwf	(_Load^(0+256)+7),f
  6973  00C2  0020               	movlb	0	; select bank0
  6974  00C3  0829               	movf	??_Load_Main+1,w
  6975  00C4  0022               	movlb	2	; select bank2
  6976  00C5  3DA8               	addwfc	((_Load+1)^(0+256)+7),f
  6977  00C6  3001               	movlw	1
  6978  00C7  0020               	movlb	0	; select bank0
  6979  00C8  07B0               	addwf	Load_Main@i,f
  6980  00C9  3000               	movlw	0
  6981  00CA  3DB1               	addwfc	Load_Main@i+1,f
  6982  00CB  0831               	movf	Load_Main@i+1,w
  6983  00CC  3A80               	xorlw	128
  6984  00CD  00A8               	movwf	??_Load_Main
  6985  00CE  3080               	movlw	128
  6986  00CF  0228               	subwf	??_Load_Main,w
  6987  00D0  1D03               	skipz
  6988  00D1  28D4               	goto	u6655
  6989  00D2  3004               	movlw	4
  6990  00D3  0230               	subwf	Load_Main@i,w
  6991  00D4                     u6655:	
  6992  00D4  1C03               	skipc
  6993  00D5  28A4               	goto	l6006
  6994  00D6                     l6012:	
  6995                           
  6996                           ;OverLoad_B1.c: 104: }
  6997                           ;OverLoad_B1.c: 105: Load.ADH /= 3;
  6998  00D6  3003               	movlw	3
  6999  00D7  0020               	movlb	0	; select bank0
  7000  00D8  00A0               	movwf	___lwdiv@divisor
  7001  00D9  3000               	movlw	0
  7002  00DA  00A1               	movwf	___lwdiv@divisor+1
  7003  00DB  0022               	movlb	2	; select bank2
  7004  00DC  0826               	movf	((_Load+1)^(0+256)+5),w
  7005  00DD  0020               	movlb	0	; select bank0
  7006  00DE  01A3               	clrf	___lwdiv@dividend+1
  7007  00DF  07A3               	addwf	___lwdiv@dividend+1,f
  7008  00E0  0022               	movlb	2	; select bank2
  7009  00E1  0825               	movf	(_Load^(0+256)+5),w
  7010  00E2  0020               	movlb	0	; select bank0
  7011  00E3  01A2               	clrf	___lwdiv@dividend
  7012  00E4  07A2               	addwf	___lwdiv@dividend,f
  7013  00E5  3196  26A4  3180   	fcall	___lwdiv
  7014  00E8  0020               	movlb	0	; select bank0
  7015  00E9  0821               	movf	?___lwdiv+1,w
  7016  00EA  0022               	movlb	2	; select bank2
  7017  00EB  01A6               	clrf	((_Load+1)^(0+256)+5)
  7018  00EC  07A6               	addwf	((_Load+1)^(0+256)+5),f
  7019  00ED  0020               	movlb	0	; select bank0
  7020  00EE  0820               	movf	?___lwdiv,w
  7021  00EF  0022               	movlb	2	; select bank2
  7022  00F0  01A5               	clrf	(_Load^(0+256)+5)
  7023  00F1  07A5               	addwf	(_Load^(0+256)+5),f
  7024                           
  7025                           ;OverLoad_B1.c: 106: Load.ADL /= 3;
  7026  00F2  3003               	movlw	3
  7027  00F3  0020               	movlb	0	; select bank0
  7028  00F4  00A0               	movwf	___lwdiv@divisor
  7029  00F5  3000               	movlw	0
  7030  00F6  00A1               	movwf	___lwdiv@divisor+1
  7031  00F7  0022               	movlb	2	; select bank2
  7032  00F8  0828               	movf	((_Load+1)^(0+256)+7),w
  7033  00F9  0020               	movlb	0	; select bank0
  7034  00FA  01A3               	clrf	___lwdiv@dividend+1
  7035  00FB  07A3               	addwf	___lwdiv@dividend+1,f
  7036  00FC  0022               	movlb	2	; select bank2
  7037  00FD  0827               	movf	(_Load^(0+256)+7),w
  7038  00FE  0020               	movlb	0	; select bank0
  7039  00FF  01A2               	clrf	___lwdiv@dividend
  7040  0100  07A2               	addwf	___lwdiv@dividend,f
  7041  0101  3196  26A4  3180   	fcall	___lwdiv
  7042  0104  0020               	movlb	0	; select bank0
  7043  0105  0821               	movf	?___lwdiv+1,w
  7044  0106  0022               	movlb	2	; select bank2
  7045  0107  01A8               	clrf	((_Load+1)^(0+256)+7)
  7046  0108  07A8               	addwf	((_Load+1)^(0+256)+7),f
  7047  0109  0020               	movlb	0	; select bank0
  7048  010A  0820               	movf	?___lwdiv,w
  7049  010B  0022               	movlb	2	; select bank2
  7050  010C  01A7               	clrf	(_Load^(0+256)+7)
  7051  010D  07A7               	addwf	(_Load^(0+256)+7),f
  7052                           
  7053                           ;OverLoad_B1.c: 108: setLoad_AH_AL_Restore();
  7054  010E  3194  2496  3180   	fcall	_setLoad_AH_AL_Restore
  7055                           
  7056                           ;OverLoad_B1.c: 110: if (Load.ADH >= Load.ADL) {
  7057  0111  0022               	movlb	2	; select bank2
  7058  0112  0828               	movf	((_Load+1)^(0+256)+7),w
  7059  0113  0226               	subwf	((_Load+1)^(0+256)+5),w
  7060  0114  1D03               	skipz
  7061  0115  2918               	goto	u6665
  7062  0116  0827               	movf	(_Load^(0+256)+7),w
  7063  0117  0225               	subwf	(_Load^(0+256)+5),w
  7064  0118                     u6665:	
  7065  0118  1C03               	skipc
  7066  0119  0008               	return
  7067                           
  7068                           ;OverLoad_B1.c: 111: Load.AD = Load.ADH - Load.ADL;
  7069  011A  3005               	movlw	5
  7070  011B  3E20               	addlw	_Load& (0+255)
  7071  011C  0086               	movwf	6
  7072  011D  3001               	movlw	1	; select bank2/3
  7073  011E  0087               	movwf	7
  7074  011F  0927               	comf	(_Load^(0+256)+7),w
  7075  0120  0020               	movlb	0	; select bank0
  7076  0121  00A8               	movwf	??_Load_Main
  7077  0122  0022               	movlb	2	; select bank2
  7078  0123  0928               	comf	((_Load+1)^(0+256)+7),w
  7079  0124  0020               	movlb	0	; select bank0
  7080  0125  00A9               	movwf	??_Load_Main+1
  7081  0126  0AA8               	incf	??_Load_Main,f
  7082  0127  1903               	skipnz
  7083  0128  0AA9               	incf	??_Load_Main+1,f
  7084  0129  3F40               	moviw [0]fsr1
  7085  012A  0728               	addwf	??_Load_Main,w
  7086  012B  0022               	movlb	2	; select bank2
  7087  012C  00BF               	movwf	(_Load^(0+256)+31)
  7088  012D  3F41               	moviw [1]fsr1
  7089  012E  0020               	movlb	0	; select bank0
  7090  012F  3D29               	addwfc	??_Load_Main+1,w
  7091  0130  0022               	movlb	2	; select bank2
  7092  0131  00C0               	movwf	(_Load^(0+256)+32)
  7093                           
  7094                           ;OverLoad_B1.c: 112: Load.ADH = 0;
  7095  0132  01A5               	clrf	(_Load^(0+256)+5)
  7096  0133  01A6               	clrf	((_Load+1)^(0+256)+5)
  7097                           
  7098                           ;OverLoad_B1.c: 113: Load.ADL = 0;
  7099  0134  01A7               	clrf	(_Load^(0+256)+7)
  7100  0135  01A8               	clrf	((_Load+1)^(0+256)+7)
  7101                           
  7102                           ;OverLoad_B1.c: 115: if (Load.Run == 1) {
  7103  0136  1DA0               	btfss	_Load^(0+256),3
  7104  0137  2991               	goto	l6052
  7105                           
  7106                           ;OverLoad_B1.c: 116: if (Load.Count < 2) {
  7107  0138  3002               	movlw	2
  7108  0139  0245               	subwf	(_Load^(0+256)+37),w
  7109  013A  1803               	skipnc
  7110  013B  2991               	goto	l6052
  7111                           
  7112                           ;OverLoad_B1.c: 117: Load.Count++;
  7113  013C  3001               	movlw	1
  7114  013D  0020               	movlb	0	; select bank0
  7115  013E  00A8               	movwf	??_Load_Main
  7116  013F  0828               	movf	??_Load_Main,w
  7117  0140  0022               	movlb	2	; select bank2
  7118  0141  07C5               	addwf	(_Load^(0+256)+37),f
  7119                           
  7120                           ;OverLoad_B1.c: 119: Load_RunStatus = getDimmer_Load_Status();
  7121  0142  3191  21E2  3180   	fcall	_getDimmer_Load_Status
  7122  0145  0020               	movlb	0	; select bank0
  7123  0146  00A8               	movwf	??_Load_Main
  7124  0147  0828               	movf	??_Load_Main,w
  7125  0148  00AE               	movwf	Load_Main@Load_RunStatus
  7126                           
  7127                           ;OverLoad_B1.c: 124: LightsCount = getMain_Lights_Count();
  7128  0149  3192  222F  3180   	fcall	_getMain_Lights_Count
  7129  014C  0020               	movlb	0	; select bank0
  7130  014D  00A8               	movwf	??_Load_Main
  7131  014E  0828               	movf	??_Load_Main,w
  7132  014F  00AF               	movwf	Load_Main@LightsCount
  7133                           
  7134                           ;OverLoad_B1.c: 126: if (Load.Count == 1) {
  7135  0150  0022               	movlb	2	; select bank2
  7136  0151  0845               	movf	(_Load^(0+256)+37),w
  7137  0152  3A01               	xorlw	1
  7138  0153  1D03               	skipz
  7139  0154  2959               	goto	l6038
  7140                           
  7141                           ;OverLoad_B1.c: 128: Load.JudgeValue = (20*65);
  7142  0155  3014               	movlw	20
  7143  0156  00C3               	movwf	(_Load^(0+256)+35)
  7144  0157  3005               	movlw	5
  7145  0158  2966               	goto	L3
  7146  0159                     l6038:	
  7147                           ;OverLoad_B1.c: 129: } else if (Load.Count == 2) {
  7148                           
  7149  0159  0845               	movf	(_Load^(0+256)+37),w
  7150  015A  3A02               	xorlw	2
  7151  015B  1D03               	skipz
  7152  015C  2991               	goto	l6052
  7153                           
  7154                           ;OverLoad_B1.c: 130: if (LightsCount == 1) {
  7155  015D  0020               	movlb	0	; select bank0
  7156  015E  082F               	movf	Load_Main@LightsCount,w
  7157  015F  3A01               	xorlw	1
  7158  0160  1D03               	skipz
  7159  0161  2968               	goto	l6044
  7160                           
  7161                           ;OverLoad_B1.c: 131: Load.JudgeValue = (int)(1.8*65);
  7162  0162  3075               	movlw	117
  7163  0163  0022               	movlb	2	; select bank2
  7164  0164  00C3               	movwf	(_Load^(0+256)+35)
  7165  0165  3000               	movlw	0
  7166  0166                     L3:	
  7167  0166  00C4               	movwf	(_Load^(0+256)+36)
  7168                           
  7169                           ;OverLoad_B1.c: 132: } else {
  7170  0167  2991               	goto	l6052
  7171  0168                     l6044:	
  7172                           
  7173                           ;OverLoad_B1.c: 133: if (Load_RunStatus == 0) {
  7174  0168  0020               	movlb	0	; select bank0
  7175  0169  08AE               	movf	Load_Main@Load_RunStatus,f
  7176  016A  1D03               	skipz
  7177  016B  2985               	goto	l6048
  7178                           
  7179                           ;OverLoad_B1.c: 134: Load.JudgeValue = (int)(1.8*65) * LightsCount;
  7180  016C  082F               	movf	Load_Main@LightsCount,w
  7181  016D  00A8               	movwf	??_Load_Main
  7182  016E  01A9               	clrf	??_Load_Main+1
  7183  016F  0828               	movf	??_Load_Main,w
  7184  0170  00A0               	movwf	___wmul@multiplier
  7185  0171  0829               	movf	??_Load_Main+1,w
  7186  0172  00A1               	movwf	___wmul@multiplier+1
  7187  0173  3075               	movlw	117
  7188  0174  00A2               	movwf	___wmul@multiplicand
  7189  0175  3000               	movlw	0
  7190  0176  00A3               	movwf	___wmul@multiplicand+1
  7191  0177  3194  24D0  3180   	fcall	___wmul
  7192  017A  0020               	movlb	0	; select bank0
  7193  017B  0821               	movf	?___wmul+1,w
  7194  017C  0022               	movlb	2	; select bank2
  7195  017D  01C4               	clrf	((_Load+1)^(0+256)+35)
  7196  017E  07C4               	addwf	((_Load+1)^(0+256)+35),f
  7197  017F  0020               	movlb	0	; select bank0
  7198  0180  0820               	movf	?___wmul,w
  7199  0181  0022               	movlb	2	; select bank2
  7200  0182  01C3               	clrf	(_Load^(0+256)+35)
  7201  0183  07C3               	addwf	(_Load^(0+256)+35),f
  7202                           
  7203                           ;OverLoad_B1.c: 135: } else if (Load_RunStatus == 1) {
  7204  0184  2991               	goto	l6052
  7205  0185                     l6048:	
  7206  0185  0020               	movlb	0	; select bank0
  7207  0186  082E               	movf	Load_Main@Load_RunStatus,w
  7208  0187  3A01               	xorlw	1
  7209  0188  1D03               	skipz
  7210  0189  2991               	goto	l6052
  7211                           
  7212                           ;OverLoad_B1.c: 136: Load.JudgeValue = (int)(1.8*65) + Load.TotalLoad;
  7213  018A  0022               	movlb	2	; select bank2
  7214  018B  0829               	movf	(_Load^(0+256)+9),w
  7215  018C  3E75               	addlw	117
  7216  018D  00C3               	movwf	(_Load^(0+256)+35)
  7217  018E  3000               	movlw	0
  7218  018F  3D2A               	addwfc	((_Load+1)^(0+256)+9),w
  7219  0190  00C4               	movwf	((_Load+1)^(0+256)+35)
  7220  0191                     l6052:	
  7221                           
  7222                           ;OverLoad_B1.c: 137: }
  7223                           ;OverLoad_B1.c: 138: }
  7224                           ;OverLoad_B1.c: 139: }
  7225                           ;OverLoad_B1.c: 140: }
  7226                           ;OverLoad_B1.c: 141: }
  7227                           ;OverLoad_B1.c: 143: if (Load.AD >= Load.JudgeValue) {
  7228  0191  0022               	movlb	2	; select bank2
  7229  0192  0844               	movf	((_Load+1)^(0+256)+35),w
  7230  0193  0240               	subwf	((_Load+1)^(0+256)+31),w
  7231  0194  1D03               	skipz
  7232  0195  2998               	goto	u6745
  7233  0196  0843               	movf	(_Load^(0+256)+35),w
  7234  0197  023F               	subwf	(_Load^(0+256)+31),w
  7235  0198                     u6745:	
  7236  0198  1C03               	skipc
  7237  0199  29B7               	goto	l6068
  7238                           
  7239                           ;OverLoad_B1.c: 144: ErrorCountValue = LightsCount == 1 ? 2 : 3;
  7240  019A  0020               	movlb	0	; select bank0
  7241  019B  082F               	movf	Load_Main@LightsCount,w
  7242  019C  3A01               	xorlw	1
  7243  019D  1903               	skipnz
  7244  019E  29A1               	goto	l6058
  7245  019F  3003               	movlw	3
  7246  01A0  29A2               	goto	L4
  7247  01A1                     l6058:	
  7248  01A1  3002               	movlw	2
  7249  01A2                     L4:	
  7250  01A2  00AA               	movwf	_Load_Main$3412
  7251  01A3  3000               	movlw	0
  7252  01A4  00AB               	movwf	_Load_Main$3412+1
  7253  01A5  082A               	movf	_Load_Main$3412,w
  7254  01A6  00A8               	movwf	??_Load_Main
  7255  01A7  0828               	movf	??_Load_Main,w
  7256  01A8  00AD               	movwf	Load_Main@ErrorCountValue
  7257                           
  7258                           ;OverLoad_B1.c: 145: Load.ErrorCount++;
  7259  01A9  3001               	movlw	1
  7260  01AA  00A8               	movwf	??_Load_Main
  7261  01AB  0828               	movf	??_Load_Main,w
  7262  01AC  0022               	movlb	2	; select bank2
  7263  01AD  07C6               	addwf	(_Load^(0+256)+38),f
  7264                           
  7265                           ;OverLoad_B1.c: 146: if (Load.ErrorCount > ErrorCountValue) {
  7266  01AE  0846               	movf	(_Load^(0+256)+38),w
  7267  01AF  0020               	movlb	0	; select bank0
  7268  01B0  022D               	subwf	Load_Main@ErrorCountValue,w
  7269  01B1  1803               	skipnc
  7270  01B2  0008               	return
  7271                           
  7272                           ;OverLoad_B1.c: 147: Load.ErrorCount = 0;
  7273  01B3  0022               	movlb	2	; select bank2
  7274  01B4  01C6               	clrf	(_Load^(0+256)+38)
  7275                           
  7276                           ;OverLoad_B1.c: 148: Load.ERROR = 1;
  7277  01B5  16A0               	bsf	_Load^(0+256),5
  7278                           
  7279                           ;OverLoad_B1.c: 170: }
  7280                           ;OverLoad_B1.c: 171: } else {
  7281  01B6  0008               	return
  7282  01B7                     l6068:	
  7283                           
  7284                           ;OverLoad_B1.c: 172: Load.ErrorCount = 0;
  7285  01B7  01C6               	clrf	(_Load^(0+256)+38)
  7286                           
  7287                           ;OverLoad_B1.c: 173: if (Load.Run == 1) {
  7288  01B8  1DA0               	btfss	_Load^(0+256),3
  7289  01B9  0008               	return
  7290                           
  7291                           ;OverLoad_B1.c: 174: Load.SafeCount++;
  7292  01BA  3001               	movlw	1
  7293  01BB  0020               	movlb	0	; select bank0
  7294  01BC  00A8               	movwf	??_Load_Main
  7295  01BD  0828               	movf	??_Load_Main,w
  7296  01BE  0022               	movlb	2	; select bank2
  7297  01BF  07C7               	addwf	(_Load^(0+256)+39),f
  7298                           
  7299                           ;OverLoad_B1.c: 175: if (Load.SafeCount >= 3) {
  7300  01C0  3003               	movlw	3
  7301  01C1  0247               	subwf	(_Load^(0+256)+39),w
  7302  01C2  1C03               	skipc
  7303  01C3  0008               	return
  7304                           
  7305                           ;OverLoad_B1.c: 176: Load.SafeCount = 0;
  7306  01C4  01C7               	clrf	(_Load^(0+256)+39)
  7307                           
  7308                           ;OverLoad_B1.c: 177: Load.OK = 1;
  7309  01C5  17A0               	bsf	_Load^(0+256),7
  7310                           
  7311                           ;OverLoad_B1.c: 178: Load.Run = 0;
  7312  01C6  11A0               	bcf	_Load^(0+256),3
  7313                           
  7314                           ;OverLoad_B1.c: 179: Load.Count = 0;
  7315  01C7  01C5               	clrf	(_Load^(0+256)+37)
  7316                           
  7317                           ;OverLoad_B1.c: 180: Load.TotalLoad = Load.AD;
  7318  01C8  0840               	movf	((_Load+1)^(0+256)+31),w
  7319  01C9  01AA               	clrf	((_Load+1)^(0+256)+9)
  7320  01CA  07AA               	addwf	((_Load+1)^(0+256)+9),f
  7321  01CB  083F               	movf	(_Load^(0+256)+31),w
  7322  01CC  01A9               	clrf	(_Load^(0+256)+9)
  7323  01CD  07A9               	addwf	(_Load^(0+256)+9),f
  7324                           
  7325                           ;OverLoad_B1.c: 184: }
  7326                           ;OverLoad_B1.c: 185: }
  7327                           ;OverLoad_B1.c: 208: }
  7328                           ;OverLoad_B1.c: 209: }
  7329                           ;OverLoad_B1.c: 210: }
  7330                           ;OverLoad_B1.c: 211: } else {
  7331  01CE  0008               	return
  7332  01CF                     l1206:	
  7333                           
  7334                           ;OverLoad_B1.c: 212: Load.ADtoGO = 1;
  7335  01CF  1620               	bsf	_Load^(0+256),4
  7336                           
  7337                           ;OverLoad_B1.c: 213: }
  7338                           ;OverLoad_B1.c: 214: } else {
  7339  01D0  0008               	return
  7340  01D1                     l1205:	
  7341                           
  7342                           ;OverLoad_B1.c: 216: if (Load.LightsON == 1) {
  7343  01D1  1D20               	btfss	_Load^(0+256),2
  7344  01D2  29E4               	goto	l6104
  7345                           
  7346                           ;OverLoad_B1.c: 217: Load.LightsON = 0;
  7347  01D3  1120               	bcf	_Load^(0+256),2
  7348                           
  7349                           ;OverLoad_B1.c: 219: Load.ADtoGO = 0;
  7350  01D4  1220               	bcf	_Load^(0+256),4
  7351                           
  7352                           ;OverLoad_B1.c: 220: Load.Time = 0;
  7353  01D5  01A1               	clrf	(_Load^(0+256)+1)
  7354  01D6  01A2               	clrf	((_Load+1)^(0+256)+1)
  7355                           
  7356                           ;OverLoad_B1.c: 221: setLoad_AH_AL_Restore();
  7357  01D7  3194  2496  3180   	fcall	_setLoad_AH_AL_Restore
  7358                           
  7359                           ;OverLoad_B1.c: 223: Load.ErrorCount = 0;
  7360  01DA  0022               	movlb	2	; select bank2
  7361  01DB  01C6               	clrf	(_Load^(0+256)+38)
  7362                           
  7363                           ;OverLoad_B1.c: 224: Load.SafeCount = 0;
  7364  01DC  01C7               	clrf	(_Load^(0+256)+39)
  7365                           
  7366                           ;OverLoad_B1.c: 226: Load.ADH = 0;
  7367  01DD  01A5               	clrf	(_Load^(0+256)+5)
  7368  01DE  01A6               	clrf	((_Load+1)^(0+256)+5)
  7369                           
  7370                           ;OverLoad_B1.c: 227: Load.ADL = 0;
  7371  01DF  01A7               	clrf	(_Load^(0+256)+7)
  7372  01E0  01A8               	clrf	((_Load+1)^(0+256)+7)
  7373                           
  7374                           ;OverLoad_B1.c: 233: Load.Run = 0;
  7375  01E1  11A0               	bcf	_Load^(0+256),3
  7376                           
  7377                           ;OverLoad_B1.c: 234: Load.Count = 0;
  7378  01E2  01C5               	clrf	(_Load^(0+256)+37)
  7379                           
  7380                           ;OverLoad_B1.c: 235: Load.OK = 0;
  7381  01E3  13A0               	bcf	_Load^(0+256),7
  7382  01E4                     l6104:	
  7383                           
  7384                           ;OverLoad_B1.c: 257: }
  7385                           ;OverLoad_B1.c: 258: if (Load.ERROR == 1) {
  7386  01E4  1EA0               	btfss	_Load^(0+256),5
  7387  01E5  0008               	return
  7388                           
  7389                           ;OverLoad_B1.c: 259: Load.ErrorTime++;
  7390  01E6  3001               	movlw	1
  7391  01E7  07A3               	addwf	(_Load^(0+256)+3),f
  7392  01E8  3000               	movlw	0
  7393  01E9  3DA4               	addwfc	((_Load+1)^(0+256)+3),f
  7394                           
  7395                           ;OverLoad_B1.c: 260: if (Load.ErrorTime >= (10000 / 20)) {
  7396  01EA  3001               	movlw	1
  7397  01EB  0224               	subwf	((_Load+1)^(0+256)+3),w
  7398  01EC  30F4               	movlw	244
  7399  01ED  1903               	skipnz
  7400  01EE  0223               	subwf	(_Load^(0+256)+3),w
  7401  01EF  1C03               	skipc
  7402  01F0  0008               	return
  7403                           
  7404                           ;OverLoad_B1.c: 261: Load.ErrorTime = 0;
  7405  01F1  01A3               	clrf	(_Load^(0+256)+3)
  7406  01F2  01A4               	clrf	((_Load+1)^(0+256)+3)
  7407                           
  7408                           ;OverLoad_B1.c: 262: Load.ERROR = 0;
  7409  01F3  12A0               	bcf	_Load^(0+256),5
  7410                           
  7411                           ;OverLoad_B1.c: 263: }
  7412                           ;OverLoad_B1.c: 264: }
  7413                           ;OverLoad_B1.c: 265: }
  7414                           ;OverLoad_B1.c: 266: } else {
  7415  01F4  0008               	return
  7416  01F5                     l1195:	
  7417                           
  7418                           ;OverLoad_B1.c: 267: if (myMain.PowerON == 1) {
  7419  01F5  0021               	movlb	1	; select bank1
  7420  01F6  1C20               	btfss	_myMain^(0+128),0
  7421  01F7  0008               	return
  7422                           
  7423                           ;OverLoad_B1.c: 268: Load.Enable = 1;
  7424  01F8  0022               	movlb	2	; select bank2
  7425  01F9  1420               	bsf	_Load^(0+256),0
  7426  01FA  0008               	return
  7427  01FB                     __end_of_Load_Main:	
  7428                           
  7429                           	psect	text31
  7430  122F                     __ptext31:	
  7431 ;; *************** function _getMain_Lights_Count *****************
  7432 ;; Defined at:
  7433 ;;		line 459 in file "../src/Main_B1.c"
  7434 ;; Parameters:    Size  Location     Type
  7435 ;;		None
  7436 ;; Auto vars:     Size  Location     Type
  7437 ;;  status1         1    1[BANK0 ] unsigned char 
  7438 ;;  count           1    0[BANK0 ] unsigned char 
  7439 ;; Return value:  Size  Location     Type
  7440 ;;                  1    wreg      unsigned char 
  7441 ;; Registers used:
  7442 ;;		wreg, status,2
  7443 ;; Tracked objects:
  7444 ;;		On entry : 0/0
  7445 ;;		On exit  : 0/0
  7446 ;;		Unchanged: 0/0
  7447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7449 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7451 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7452 ;;Total ram usage:        2 bytes
  7453 ;; Hardware stack levels used:    1
  7454 ;; Hardware stack levels required when called:    5
  7455 ;; This function calls:
  7456 ;;		Nothing
  7457 ;; This function is called by:
  7458 ;;		_Load_Main
  7459 ;; This function uses a non-reentrant model
  7460 ;;
  7461                           
  7462                           
  7463                           ;psect for function _getMain_Lights_Count
  7464  122F                     _getMain_Lights_Count:	
  7465                           
  7466                           ;Main_B1.c: 460: char count = 0;
  7467                           
  7468                           ;incstack = 0
  7469                           ; Regs used in _getMain_Lights_Count: [wreg+status,2]
  7470  122F  0020               	movlb	0	; select bank0
  7471  1230  01A0               	clrf	getMain_Lights_Count@count
  7472                           
  7473                           ;Main_B1.c: 464: char status1 = DimmerIntr1.ControlStatus == 1 ? 1 : 0;
  7474  1231  3000               	movlw	0
  7475  1232  0021               	movlb	1	; select bank1
  7476  1233  19B9               	btfsc	_DimmerIntr1^(0+128),3
  7477  1234  3001               	movlw	1
  7478  1235  0020               	movlb	0	; select bank0
  7479  1236  00A1               	movwf	getMain_Lights_Count@status1
  7480                           
  7481                           ;Main_B1.c: 487: return count = status1;
  7482  1237  0821               	movf	getMain_Lights_Count@status1,w
  7483  1238  00A0               	movwf	getMain_Lights_Count@count
  7484  1239  0008               	return
  7485  123A                     __end_of_getMain_Lights_Count:	
  7486                           
  7487                           	psect	text32
  7488  11E2                     __ptext32:	
  7489 ;; *************** function _getDimmer_Load_Status *****************
  7490 ;; Defined at:
  7491 ;;		line 1213 in file "../src/Dimmer_B1.c"
  7492 ;; Parameters:    Size  Location     Type
  7493 ;;		None
  7494 ;; Auto vars:     Size  Location     Type
  7495 ;;  status          1    0[BANK0 ] unsigned char 
  7496 ;; Return value:  Size  Location     Type
  7497 ;;                  1    wreg      unsigned char 
  7498 ;; Registers used:
  7499 ;;		wreg, status,2
  7500 ;; Tracked objects:
  7501 ;;		On entry : 0/0
  7502 ;;		On exit  : 0/0
  7503 ;;		Unchanged: 0/0
  7504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7506 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7508 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7509 ;;Total ram usage:        1 bytes
  7510 ;; Hardware stack levels used:    1
  7511 ;; Hardware stack levels required when called:    5
  7512 ;; This function calls:
  7513 ;;		Nothing
  7514 ;; This function is called by:
  7515 ;;		_Load_Main
  7516 ;; This function uses a non-reentrant model
  7517 ;;
  7518                           
  7519                           
  7520                           ;psect for function _getDimmer_Load_Status
  7521  11E2                     _getDimmer_Load_Status:	
  7522                           
  7523                           ;Dimmer_B1.c: 1214: char status = Dimmer.Load_Status == 1 ? 1 : 0;
  7524                           
  7525                           ;incstack = 0
  7526                           ; Regs used in _getDimmer_Load_Status: [wreg+status,2]
  7527  11E2  3000               	movlw	0
  7528  11E3  0021               	movlb	1	; select bank1
  7529  11E4  1945               	btfsc	_Dimmer^(0+128),2
  7530  11E5  3001               	movlw	1
  7531  11E6  0020               	movlb	0	; select bank0
  7532  11E7  00A0               	movwf	getDimmer_Load_Status@status
  7533                           
  7534                           ;Dimmer_B1.c: 1215: return status;
  7535  11E8  0820               	movf	getDimmer_Load_Status@status,w
  7536  11E9  0008               	return
  7537  11EA                     __end_of_getDimmer_Load_Status:	
  7538                           
  7539                           	psect	text33
  7540  11DA                     __ptext33:	
  7541 ;; *************** function _getDimmer_LoadGO *****************
  7542 ;; Defined at:
  7543 ;;		line 1207 in file "../src/Dimmer_B1.c"
  7544 ;; Parameters:    Size  Location     Type
  7545 ;;		None
  7546 ;; Auto vars:     Size  Location     Type
  7547 ;;  loadgo          1    0[BANK0 ] unsigned char 
  7548 ;; Return value:  Size  Location     Type
  7549 ;;                  1    wreg      unsigned char 
  7550 ;; Registers used:
  7551 ;;		wreg, status,2
  7552 ;; Tracked objects:
  7553 ;;		On entry : 0/0
  7554 ;;		On exit  : 0/0
  7555 ;;		Unchanged: 0/0
  7556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7558 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7560 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7561 ;;Total ram usage:        1 bytes
  7562 ;; Hardware stack levels used:    1
  7563 ;; Hardware stack levels required when called:    5
  7564 ;; This function calls:
  7565 ;;		Nothing
  7566 ;; This function is called by:
  7567 ;;		_Load_Main
  7568 ;; This function uses a non-reentrant model
  7569 ;;
  7570                           
  7571                           
  7572                           ;psect for function _getDimmer_LoadGO
  7573  11DA                     _getDimmer_LoadGO:	
  7574                           
  7575                           ;Dimmer_B1.c: 1208: char loadgo = Dimmer.LoadGO == 1 ? 1 : 0;
  7576                           
  7577                           ;incstack = 0
  7578                           ; Regs used in _getDimmer_LoadGO: [wreg+status,2]
  7579  11DA  3000               	movlw	0
  7580  11DB  0021               	movlb	1	; select bank1
  7581  11DC  18C5               	btfsc	_Dimmer^(0+128),1
  7582  11DD  3001               	movlw	1
  7583  11DE  0020               	movlb	0	; select bank0
  7584  11DF  00A0               	movwf	getDimmer_LoadGO@loadgo
  7585                           
  7586                           ;Dimmer_B1.c: 1209: return loadgo;
  7587  11E0  0820               	movf	getDimmer_LoadGO@loadgo,w
  7588  11E1  0008               	return
  7589  11E2                     __end_of_getDimmer_LoadGO:	
  7590                           
  7591                           	psect	text34
  7592  120F                     __ptext34:	
  7593 ;; *************** function _getAll_DimmerIntr_Dimming_Sw_RF *****************
  7594 ;; Defined at:
  7595 ;;		line 321 in file "../src/Dimmer_B1.c"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;		None
  7598 ;; Auto vars:     Size  Location     Type
  7599 ;;  status          1    0[BANK0 ] unsigned char 
  7600 ;; Return value:  Size  Location     Type
  7601 ;;                  1    wreg      unsigned char 
  7602 ;; Registers used:
  7603 ;;		wreg, status,2
  7604 ;; Tracked objects:
  7605 ;;		On entry : 0/0
  7606 ;;		On exit  : 0/0
  7607 ;;		Unchanged: 0/0
  7608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7610 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7612 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7613 ;;Total ram usage:        1 bytes
  7614 ;; Hardware stack levels used:    1
  7615 ;; Hardware stack levels required when called:    5
  7616 ;; This function calls:
  7617 ;;		Nothing
  7618 ;; This function is called by:
  7619 ;;		_Load_Main
  7620 ;; This function uses a non-reentrant model
  7621 ;;
  7622                           
  7623                           
  7624                           ;psect for function _getAll_DimmerIntr_Dimming_Sw_RF
  7625  120F                     _getAll_DimmerIntr_Dimming_Sw_RF:	
  7626                           
  7627                           ;Dimmer_B1.c: 322: char status = 0;
  7628                           
  7629                           ;incstack = 0
  7630                           ; Regs used in _getAll_DimmerIntr_Dimming_Sw_RF: [wreg+status,2]
  7631  120F  0020               	movlb	0	; select bank0
  7632  1210  01A0               	clrf	getAll_DimmerIntr_Dimming_Sw_RF@status
  7633                           
  7634                           ;Dimmer_B1.c: 333: status = (DimmerIntr1.Dimming_Sw == 1) ? 1 : 0;
  7635  1211  3000               	movlw	0
  7636  1212  0021               	movlb	1	; select bank1
  7637  1213  1A39               	btfsc	_DimmerIntr1^(0+128),4
  7638  1214  3001               	movlw	1
  7639  1215  0020               	movlb	0	; select bank0
  7640  1216  00A0               	movwf	getAll_DimmerIntr_Dimming_Sw_RF@status
  7641                           
  7642                           ;Dimmer_B1.c: 351: return status;
  7643  1217  0820               	movf	getAll_DimmerIntr_Dimming_Sw_RF@status,w
  7644  1218  0008               	return
  7645  1219                     __end_of_getAll_DimmerIntr_Dimming_Sw_RF:	
  7646                           
  7647                           	psect	text35
  7648  14D0                     __ptext35:	
  7649 ;; *************** function ___wmul *****************
  7650 ;; Defined at:
  7651 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul16.c"
  7652 ;; Parameters:    Size  Location     Type
  7653 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7654 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7655 ;; Auto vars:     Size  Location     Type
  7656 ;;  product         2    4[BANK0 ] unsigned int 
  7657 ;; Return value:  Size  Location     Type
  7658 ;;                  2    0[BANK0 ] unsigned int 
  7659 ;; Registers used:
  7660 ;;		wreg, status,2, status,0
  7661 ;; Tracked objects:
  7662 ;;		On entry : 0/0
  7663 ;;		On exit  : 0/0
  7664 ;;		Unchanged: 0/0
  7665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7666 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7667 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7669 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7670 ;;Total ram usage:        6 bytes
  7671 ;; Hardware stack levels used:    1
  7672 ;; Hardware stack levels required when called:    5
  7673 ;; This function calls:
  7674 ;;		Nothing
  7675 ;; This function is called by:
  7676 ;;		_Load_Main
  7677 ;; This function uses a non-reentrant model
  7678 ;;
  7679                           
  7680                           
  7681                           ;psect for function ___wmul
  7682  14D0                     ___wmul:	
  7683                           
  7684                           ;incstack = 0
  7685                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7686  14D0  0020               	movlb	0	; select bank0
  7687  14D1  01A4               	clrf	___wmul@product
  7688  14D2  01A5               	clrf	___wmul@product+1
  7689  14D3                     l5684:	
  7690  14D3  1C20               	btfss	___wmul@multiplier,0
  7691  14D4  2CD9               	goto	l1825
  7692  14D5  0822               	movf	___wmul@multiplicand,w
  7693  14D6  07A4               	addwf	___wmul@product,f
  7694  14D7  0823               	movf	___wmul@multiplicand+1,w
  7695  14D8  3DA5               	addwfc	___wmul@product+1,f
  7696  14D9                     l1825:	
  7697  14D9  3001               	movlw	1
  7698  14DA                     u6025:	
  7699  14DA  35A2               	lslf	___wmul@multiplicand,f
  7700  14DB  0DA3               	rlf	___wmul@multiplicand+1,f
  7701  14DC  0B89               	decfsz	9,f
  7702  14DD  2CDA               	goto	u6025
  7703  14DE  3001               	movlw	1
  7704  14DF                     u6035:	
  7705  14DF  36A1               	lsrf	___wmul@multiplier+1,f
  7706  14E0  0CA0               	rrf	___wmul@multiplier,f
  7707  14E1  0B89               	decfsz	9,f
  7708  14E2  2CDF               	goto	u6035
  7709  14E3  0821               	movf	___wmul@multiplier+1,w
  7710  14E4  0420               	iorwf	___wmul@multiplier,w
  7711  14E5  1D03               	skipz
  7712  14E6  2CD3               	goto	l5684
  7713  14E7  0825               	movf	___wmul@product+1,w
  7714  14E8  01A1               	clrf	?___wmul+1
  7715  14E9  07A1               	addwf	?___wmul+1,f
  7716  14EA  0824               	movf	___wmul@product,w
  7717  14EB  01A0               	clrf	?___wmul
  7718  14EC  07A0               	addwf	?___wmul,f
  7719  14ED  0008               	return
  7720  14EE                     __end_of___wmul:	
  7721                           
  7722                           	psect	text36
  7723  16A4                     __ptext36:	
  7724 ;; *************** function ___lwdiv *****************
  7725 ;; Defined at:
  7726 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  7727 ;; Parameters:    Size  Location     Type
  7728 ;;  divisor         2    0[BANK0 ] unsigned int 
  7729 ;;  dividend        2    2[BANK0 ] unsigned int 
  7730 ;; Auto vars:     Size  Location     Type
  7731 ;;  quotient        2    5[BANK0 ] unsigned int 
  7732 ;;  counter         1    7[BANK0 ] unsigned char 
  7733 ;; Return value:  Size  Location     Type
  7734 ;;                  2    0[BANK0 ] unsigned int 
  7735 ;; Registers used:
  7736 ;;		wreg, status,2, status,0
  7737 ;; Tracked objects:
  7738 ;;		On entry : 0/0
  7739 ;;		On exit  : 0/0
  7740 ;;		Unchanged: 0/0
  7741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7742 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7743 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7744 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7745 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7746 ;;Total ram usage:        8 bytes
  7747 ;; Hardware stack levels used:    1
  7748 ;; Hardware stack levels required when called:    5
  7749 ;; This function calls:
  7750 ;;		Nothing
  7751 ;; This function is called by:
  7752 ;;		_Load_Main
  7753 ;;		_setTemp_Main
  7754 ;; This function uses a non-reentrant model
  7755 ;;
  7756                           
  7757                           
  7758                           ;psect for function ___lwdiv
  7759  16A4                     ___lwdiv:	
  7760                           
  7761                           ;incstack = 0
  7762                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7763  16A4  0020               	movlb	0	; select bank0
  7764  16A5  01A5               	clrf	___lwdiv@quotient
  7765  16A6  01A6               	clrf	___lwdiv@quotient+1
  7766  16A7  0821               	movf	___lwdiv@divisor+1,w
  7767  16A8  0420               	iorwf	___lwdiv@divisor,w
  7768  16A9  1903               	skipnz
  7769  16AA  2ED4               	goto	l5148
  7770  16AB  01A7               	clrf	___lwdiv@counter
  7771  16AC  0AA7               	incf	___lwdiv@counter,f
  7772  16AD                     l5136:	
  7773  16AD  1BA1               	btfsc	___lwdiv@divisor+1,7
  7774  16AE  2EB9               	goto	l5138
  7775  16AF  3001               	movlw	1
  7776  16B0                     u5045:	
  7777  16B0  35A0               	lslf	___lwdiv@divisor,f
  7778  16B1  0DA1               	rlf	___lwdiv@divisor+1,f
  7779  16B2  0B89               	decfsz	9,f
  7780  16B3  2EB0               	goto	u5045
  7781  16B4  3001               	movlw	1
  7782  16B5  00A4               	movwf	??___lwdiv
  7783  16B6  0824               	movf	??___lwdiv,w
  7784  16B7  07A7               	addwf	___lwdiv@counter,f
  7785  16B8  2EAD               	goto	l5136
  7786  16B9                     l5138:	
  7787  16B9  3001               	movlw	1
  7788  16BA                     u5065:	
  7789  16BA  35A5               	lslf	___lwdiv@quotient,f
  7790  16BB  0DA6               	rlf	___lwdiv@quotient+1,f
  7791  16BC  0B89               	decfsz	9,f
  7792  16BD  2EBA               	goto	u5065
  7793  16BE  0821               	movf	___lwdiv@divisor+1,w
  7794  16BF  0223               	subwf	___lwdiv@dividend+1,w
  7795  16C0  1D03               	skipz
  7796  16C1  2EC4               	goto	u5075
  7797  16C2  0820               	movf	___lwdiv@divisor,w
  7798  16C3  0222               	subwf	___lwdiv@dividend,w
  7799  16C4                     u5075:	
  7800  16C4  1C03               	skipc
  7801  16C5  2ECB               	goto	l5144
  7802  16C6  0820               	movf	___lwdiv@divisor,w
  7803  16C7  02A2               	subwf	___lwdiv@dividend,f
  7804  16C8  0821               	movf	___lwdiv@divisor+1,w
  7805  16C9  3BA3               	subwfb	___lwdiv@dividend+1,f
  7806  16CA  1425               	bsf	___lwdiv@quotient,0
  7807  16CB                     l5144:	
  7808  16CB  3001               	movlw	1
  7809  16CC                     u5085:	
  7810  16CC  36A1               	lsrf	___lwdiv@divisor+1,f
  7811  16CD  0CA0               	rrf	___lwdiv@divisor,f
  7812  16CE  0B89               	decfsz	9,f
  7813  16CF  2ECC               	goto	u5085
  7814  16D0  3001               	movlw	1
  7815  16D1  02A7               	subwf	___lwdiv@counter,f
  7816  16D2  1D03               	btfss	3,2
  7817  16D3  2EB9               	goto	l5138
  7818  16D4                     l5148:	
  7819  16D4  0826               	movf	___lwdiv@quotient+1,w
  7820  16D5  01A1               	clrf	?___lwdiv+1
  7821  16D6  07A1               	addwf	?___lwdiv+1,f
  7822  16D7  0825               	movf	___lwdiv@quotient,w
  7823  16D8  01A0               	clrf	?___lwdiv
  7824  16D9  07A0               	addwf	?___lwdiv,f
  7825  16DA  0008               	return
  7826  16DB                     __end_of___lwdiv:	
  7827                           
  7828                           	psect	text37
  7829  117F                     __ptext37:	
  7830 ;; *************** function _Load_Initialization *****************
  7831 ;; Defined at:
  7832 ;;		line 9 in file "../src/OverLoad_B1.c"
  7833 ;; Parameters:    Size  Location     Type
  7834 ;;		None
  7835 ;; Auto vars:     Size  Location     Type
  7836 ;;		None
  7837 ;; Return value:  Size  Location     Type
  7838 ;;		None               void
  7839 ;; Registers used:
  7840 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7841 ;; Tracked objects:
  7842 ;;		On entry : 0/0
  7843 ;;		On exit  : 0/0
  7844 ;;		Unchanged: 0/0
  7845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7850 ;;Total ram usage:        0 bytes
  7851 ;; Hardware stack levels used:    1
  7852 ;; Hardware stack levels required when called:    6
  7853 ;; This function calls:
  7854 ;;		_setLoad_AH_AL_Restore
  7855 ;; This function is called by:
  7856 ;;		_main
  7857 ;; This function uses a non-reentrant model
  7858 ;;
  7859                           
  7860                           
  7861                           ;psect for function _Load_Initialization
  7862  117F                     _Load_Initialization:	
  7863                           
  7864                           ;OverLoad_B1.c: 11: setLoad_AH_AL_Restore();
  7865                           
  7866                           ;incstack = 0
  7867                           ; Regs used in _Load_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7868  117F  3194  2496         	fcall	_setLoad_AH_AL_Restore
  7869  1181  0008               	return
  7870  1182                     __end_of_Load_Initialization:	
  7871                           
  7872                           	psect	text38
  7873  1496                     __ptext38:	
  7874 ;; *************** function _setLoad_AH_AL_Restore *****************
  7875 ;; Defined at:
  7876 ;;		line 294 in file "../src/OverLoad_B1.c"
  7877 ;; Parameters:    Size  Location     Type
  7878 ;;		None
  7879 ;; Auto vars:     Size  Location     Type
  7880 ;;  i               1    1[BANK0 ] unsigned char 
  7881 ;; Return value:  Size  Location     Type
  7882 ;;		None               void
  7883 ;; Registers used:
  7884 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7885 ;; Tracked objects:
  7886 ;;		On entry : 0/0
  7887 ;;		On exit  : 0/0
  7888 ;;		Unchanged: 0/0
  7889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7891 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7892 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7893 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7894 ;;Total ram usage:        2 bytes
  7895 ;; Hardware stack levels used:    1
  7896 ;; Hardware stack levels required when called:    5
  7897 ;; This function calls:
  7898 ;;		Nothing
  7899 ;; This function is called by:
  7900 ;;		_Load_Initialization
  7901 ;;		_Load_Main
  7902 ;; This function uses a non-reentrant model
  7903 ;;
  7904                           
  7905                           
  7906                           ;psect for function _setLoad_AH_AL_Restore
  7907  1496                     _setLoad_AH_AL_Restore:	
  7908                           
  7909                           ;OverLoad_B1.c: 295: char i;
  7910                           ;OverLoad_B1.c: 296: for (i = 0; i < 5; i++) {
  7911                           
  7912                           ;incstack = 0
  7913                           ; Regs used in _setLoad_AH_AL_Restore: [wreg+fsr1l+fsr1h+status,2+status,0]
  7914  1496  0020               	movlb	0	; select bank0
  7915  1497  01A1               	clrf	setLoad_AH_AL_Restore@i
  7916  1498                     L5:	
  7917  1498  3005               	movlw	5
  7918  1499  0221               	subwf	setLoad_AH_AL_Restore@i,w
  7919  149A  1803               	btfsc	3,0
  7920  149B  0008               	return
  7921                           
  7922                           ;OverLoad_B1.c: 297: Load.AH[i] = 0;
  7923  149C  3521               	lslf	setLoad_AH_AL_Restore@i,w
  7924  149D  3E2B               	addlw	(_Load+11)& (0+255)
  7925  149E  0086               	movwf	6
  7926  149F  3001               	movlw	1	; select bank2/3
  7927  14A0  0087               	movwf	7
  7928  14A1  3000               	movlw	0
  7929  14A2  3FC0               	movwi [0]fsr1
  7930  14A3  3FC1               	movwi [1]fsr1
  7931                           
  7932                           ;OverLoad_B1.c: 298: Load.AL[i] = 0xffff;
  7933  14A4  3521               	lslf	setLoad_AH_AL_Restore@i,w
  7934  14A5  3E35               	addlw	(_Load+21)& (0+255)
  7935  14A6  0086               	movwf	6
  7936  14A7  3001               	movlw	1	; select bank2/3
  7937  14A8  0087               	movwf	7
  7938  14A9  30FF               	movlw	255
  7939  14AA  3FC0               	movwi [0]fsr1
  7940  14AB  30FF               	movlw	255
  7941  14AC  3FC1               	movwi [1]fsr1
  7942  14AD  3001               	movlw	1
  7943  14AE  00A0               	movwf	??_setLoad_AH_AL_Restore
  7944  14AF  0820               	movf	??_setLoad_AH_AL_Restore,w
  7945  14B0  07A1               	addwf	setLoad_AH_AL_Restore@i,f
  7946  14B1  2C98               	goto	L5
  7947  14B2                     __end_of_setLoad_AH_AL_Restore:	
  7948                           
  7949                           	psect	text39
  7950  1194                     __ptext39:	
  7951 ;; *************** function _LED_Main *****************
  7952 ;; Defined at:
  7953 ;;		line 47 in file "../src/LED_B1.c"
  7954 ;; Parameters:    Size  Location     Type
  7955 ;;		None
  7956 ;; Auto vars:     Size  Location     Type
  7957 ;;		None
  7958 ;; Return value:  Size  Location     Type
  7959 ;;		None               void
  7960 ;; Registers used:
  7961 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7962 ;; Tracked objects:
  7963 ;;		On entry : 0/0
  7964 ;;		On exit  : 0/0
  7965 ;;		Unchanged: 0/0
  7966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7971 ;;Total ram usage:        0 bytes
  7972 ;; Hardware stack levels used:    1
  7973 ;; Hardware stack levels required when called:    7
  7974 ;; This function calls:
  7975 ;;		_setLED_Main
  7976 ;; This function is called by:
  7977 ;;		_main
  7978 ;; This function uses a non-reentrant model
  7979 ;;
  7980                           
  7981                           
  7982                           ;psect for function _LED_Main
  7983  1194                     _LED_Main:	
  7984                           
  7985                           ;LED_B1.c: 67: setLED_Main(99);
  7986                           
  7987                           ;incstack = 0
  7988                           ; Regs used in _LED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7989  1194  3063               	movlw	99
  7990  1195  3196  2609         	fcall	_setLED_Main
  7991  1197  0008               	return
  7992  1198                     __end_of_LED_Main:	
  7993                           
  7994                           	psect	text40
  7995  1609                     __ptext40:	
  7996 ;; *************** function _setLED_Main *****************
  7997 ;; Defined at:
  7998 ;;		line 229 in file "../src/LED_B1.c"
  7999 ;; Parameters:    Size  Location     Type
  8000 ;;  led             1    wreg     unsigned char 
  8001 ;; Auto vars:     Size  Location     Type
  8002 ;;  led             1    4[BANK0 ] unsigned char 
  8003 ;; Return value:  Size  Location     Type
  8004 ;;		None               void
  8005 ;; Registers used:
  8006 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8007 ;; Tracked objects:
  8008 ;;		On entry : 0/0
  8009 ;;		On exit  : 0/0
  8010 ;;		Unchanged: 0/0
  8011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8013 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8014 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8015 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8016 ;;Total ram usage:        3 bytes
  8017 ;; Hardware stack levels used:    1
  8018 ;; Hardware stack levels required when called:    6
  8019 ;; This function calls:
  8020 ;;		_LedPointSelect
  8021 ;; This function is called by:
  8022 ;;		_LED_Main
  8023 ;; This function uses a non-reentrant model
  8024 ;;
  8025                           
  8026                           
  8027                           ;psect for function _setLED_Main
  8028  1609                     _setLED_Main:	
  8029                           
  8030                           ;incstack = 0
  8031                           ; Regs used in _setLED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8032                           ;setLED_Main@led stored from wreg
  8033  1609  0020               	movlb	0	; select bank0
  8034  160A  00A4               	movwf	setLED_Main@led
  8035                           
  8036                           ;LED_B1.c: 230: LedPointSelect(led);
  8037  160B  0824               	movf	setLED_Main@led,w
  8038  160C  3192  2274  3196   	fcall	_LedPointSelect
  8039                           
  8040                           ;LED_B1.c: 231: if (LED->GO == 1) {
  8041  160F  0021               	movlb	1	; select bank1
  8042  1610  0852               	movf	_LED^(0+128),w
  8043  1611  0086               	movwf	6
  8044  1612  0187               	clrf	7
  8045  1613  1C81               	btfss	1,1
  8046  1614  0008               	return
  8047                           
  8048                           ;LED_B1.c: 232: LED->Time++;
  8049  1615  0A52               	incf	_LED^(0+128),w
  8050  1616  0086               	movwf	6
  8051  1617  0187               	clrf	7
  8052  1618  3001               	movlw	1
  8053  1619  0781               	addwf	1,f
  8054  161A  3141               	addfsr 1,1
  8055  161B  1803               	skipnc
  8056  161C  0A81               	incf	1,f
  8057                           
  8058                           ;LED_B1.c: 233: if (LED->Time >= (500 / 20)) {
  8059  161D  0A52               	incf	_LED^(0+128),w
  8060  161E  0086               	movwf	6
  8061  161F  0187               	clrf	7
  8062  1620  3F40               	moviw [0]fsr1
  8063  1621  0020               	movlb	0	; select bank0
  8064  1622  00A2               	movwf	??_setLED_Main
  8065  1623  3F41               	moviw [1]fsr1
  8066  1624  00A3               	movwf	??_setLED_Main+1
  8067  1625  3000               	movlw	0
  8068  1626  0223               	subwf	??_setLED_Main+1,w
  8069  1627  3019               	movlw	25
  8070  1628  1903               	skipnz
  8071  1629  0222               	subwf	??_setLED_Main,w
  8072  162A  1C03               	skipc
  8073  162B  0008               	return
  8074                           
  8075                           ;LED_B1.c: 234: LED->Time = 0;
  8076  162C  0021               	movlb	1	; select bank1
  8077  162D  0A52               	incf	_LED^(0+128),w
  8078  162E  0086               	movwf	6
  8079  162F  0187               	clrf	7
  8080  1630  3000               	movlw	0
  8081  1631  3FC0               	movwi [0]fsr1
  8082  1632  3FC1               	movwi [1]fsr1
  8083                           
  8084                           ;LED_B1.c: 252: if (led == 99) {
  8085  1633  0020               	movlb	0	; select bank0
  8086  1634  0824               	movf	setLED_Main@led,w
  8087  1635  3A63               	xorlw	99
  8088  1636  1D03               	skipz
  8089  1637  0008               	return
  8090                           
  8091                           ;LED_B1.c: 253: RB5 = RB5 == 1 ? 0 : 1;
  8092  1638  3020               	movlw	32
  8093  1639  068D               	xorwf	13,f
  8094  163A  0008               	return
  8095  163B                     __end_of_setLED_Main:	
  8096                           
  8097                           	psect	text41
  8098  1190                     __ptext41:	
  8099 ;; *************** function _LED_Initialization *****************
  8100 ;; Defined at:
  8101 ;;		line 31 in file "../src/LED_B1.c"
  8102 ;; Parameters:    Size  Location     Type
  8103 ;;		None
  8104 ;; Auto vars:     Size  Location     Type
  8105 ;;		None
  8106 ;; Return value:  Size  Location     Type
  8107 ;;		None               void
  8108 ;; Registers used:
  8109 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8110 ;; Tracked objects:
  8111 ;;		On entry : 0/0
  8112 ;;		On exit  : 0/0
  8113 ;;		Unchanged: 0/0
  8114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8119 ;;Total ram usage:        0 bytes
  8120 ;; Hardware stack levels used:    1
  8121 ;; Hardware stack levels required when called:    8
  8122 ;; This function calls:
  8123 ;;		_setLED_Initialization
  8124 ;; This function is called by:
  8125 ;;		_main
  8126 ;; This function uses a non-reentrant model
  8127 ;;
  8128                           
  8129                           
  8130                           ;psect for function _LED_Initialization
  8131  1190                     _LED_Initialization:	
  8132                           
  8133                           ;LED_B1.c: 42: setLED_Initialization(99);
  8134                           
  8135                           ;incstack = 0
  8136                           ; Regs used in _LED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8137  1190  3063               	movlw	99
  8138  1191  3193  231F         	fcall	_setLED_Initialization
  8139  1193  0008               	return
  8140  1194                     __end_of_LED_Initialization:	
  8141                           
  8142                           	psect	text42
  8143  131F                     __ptext42:	
  8144 ;; *************** function _setLED_Initialization *****************
  8145 ;; Defined at:
  8146 ;;		line 74 in file "../src/LED_B1.c"
  8147 ;; Parameters:    Size  Location     Type
  8148 ;;  led             1    wreg     unsigned char 
  8149 ;; Auto vars:     Size  Location     Type
  8150 ;;  led             1    4[BANK0 ] unsigned char 
  8151 ;; Return value:  Size  Location     Type
  8152 ;;		None               void
  8153 ;; Registers used:
  8154 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8155 ;; Tracked objects:
  8156 ;;		On entry : 0/0
  8157 ;;		On exit  : 0/0
  8158 ;;		Unchanged: 0/0
  8159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8161 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8163 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8164 ;;Total ram usage:        1 bytes
  8165 ;; Hardware stack levels used:    1
  8166 ;; Hardware stack levels required when called:    7
  8167 ;; This function calls:
  8168 ;;		_LedPointSelect
  8169 ;;		_setLED
  8170 ;; This function is called by:
  8171 ;;		_LED_Initialization
  8172 ;; This function uses a non-reentrant model
  8173 ;;
  8174                           
  8175                           
  8176                           ;psect for function _setLED_Initialization
  8177  131F                     _setLED_Initialization:	
  8178                           
  8179                           ;incstack = 0
  8180                           ; Regs used in _setLED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8181                           ;setLED_Initialization@led stored from wreg
  8182  131F  0020               	movlb	0	; select bank0
  8183  1320  00A4               	movwf	setLED_Initialization@led
  8184                           
  8185                           ;LED_B1.c: 75: LedPointSelect(led);
  8186  1321  0824               	movf	setLED_Initialization@led,w
  8187  1322  3192  2274  3193   	fcall	_LedPointSelect
  8188                           
  8189                           ;LED_B1.c: 76: LED->Enable = 1;
  8190  1325  0021               	movlb	1	; select bank1
  8191  1326  0852               	movf	_LED^(0+128),w
  8192  1327  0086               	movwf	6
  8193  1328  0187               	clrf	7
  8194  1329  1401               	bsf	1,0
  8195                           
  8196                           ;LED_B1.c: 77: setLED(led, 0);
  8197  132A  0020               	movlb	0	; select bank0
  8198  132B  01A2               	clrf	setLED@command
  8199  132C  0824               	movf	setLED_Initialization@led,w
  8200  132D  3196  266E         	fcall	_setLED
  8201  132F  0008               	return
  8202  1330                     __end_of_setLED_Initialization:	
  8203                           
  8204                           	psect	text43
  8205  0819                     __ptext43:	
  8206 ;; *************** function _Flash_Memory_Main *****************
  8207 ;; Defined at:
  8208 ;;		line 976 in file "../src/MCU_B1.c"
  8209 ;; Parameters:    Size  Location     Type
  8210 ;;		None
  8211 ;; Auto vars:     Size  Location     Type
  8212 ;;  key_Status      1    7[BANK0 ] unsigned char 
  8213 ;; Return value:  Size  Location     Type
  8214 ;;		None               void
  8215 ;; Registers used:
  8216 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8217 ;; Tracked objects:
  8218 ;;		On entry : 0/0
  8219 ;;		On exit  : 0/0
  8220 ;;		Unchanged: 0/0
  8221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8223 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8224 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8225 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8226 ;;Total ram usage:        3 bytes
  8227 ;; Hardware stack levels used:    1
  8228 ;; Hardware stack levels required when called:    8
  8229 ;; This function calls:
  8230 ;;		_Flash_Memory_Modify
  8231 ;;		_getAll_Sw_KeyStatus
  8232 ;;		_getMain_All_LightsStatus
  8233 ;; This function is called by:
  8234 ;;		_main
  8235 ;; This function uses a non-reentrant model
  8236 ;;
  8237                           
  8238                           
  8239                           ;psect for function _Flash_Memory_Main
  8240  0819                     _Flash_Memory_Main:	
  8241                           
  8242                           ;MCU_B1.c: 977: char key_Status = 0;
  8243                           
  8244                           ;incstack = 0
  8245                           ; Regs used in _Flash_Memory_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8246  0819  0020               	movlb	0	; select bank0
  8247  081A  01A7               	clrf	Flash_Memory_Main@key_Status
  8248                           
  8249                           ;MCU_B1.c: 979: key_Status = getAll_Sw_KeyStatus();
  8250  081B  3193  230E  3188   	fcall	_getAll_Sw_KeyStatus
  8251  081E  0020               	movlb	0	; select bank0
  8252  081F  00A6               	movwf	??_Flash_Memory_Main
  8253  0820  0826               	movf	??_Flash_Memory_Main,w
  8254  0821  00A7               	movwf	Flash_Memory_Main@key_Status
  8255                           
  8256                           ;MCU_B1.c: 981: if (Memory.Modify == 1) {
  8257  0822  0023               	movlb	3	; select bank3
  8258  0823  1C44               	btfss	(_Memory^(0+384)+36),0
  8259  0824  0008               	return
  8260                           
  8261                           ;MCU_B1.c: 982: Memory.GO = getMain_All_LightsStatus() == 0 && key_Status == 0 ? 1 : 0;
  8262  0825  0020               	movlb	0	; select bank0
  8263  0826  01A8               	clrf	_Flash_Memory_Main$2681
  8264  0827  3192  2205  3188   	fcall	_getMain_All_LightsStatus
  8265  082A  3800               	iorlw	0
  8266  082B  1D03               	skipz
  8267  082C  2833               	goto	l5814
  8268  082D  0020               	movlb	0	; select bank0
  8269  082E  08A7               	movf	Flash_Memory_Main@key_Status,f
  8270  082F  1D03               	skipz
  8271  0830  2833               	goto	l5814
  8272  0831  01A8               	clrf	_Flash_Memory_Main$2681
  8273  0832  0AA8               	incf	_Flash_Memory_Main$2681,f
  8274  0833                     l5814:	
  8275  0833  0020               	movlb	0	; select bank0
  8276  0834  0828               	movf	_Flash_Memory_Main$2681,w
  8277  0835  0023               	movlb	3	; select bank3
  8278  0836  10C4               	bcf	(_Memory^(0+384)+36),1
  8279  0837  1D03               	skipz
  8280  0838  14C4               	bsf	(_Memory^(0+384)+36),1
  8281                           
  8282                           ;MCU_B1.c: 983: if (Memory.GO == 1) {
  8283  0839  1CC4               	btfss	(_Memory^(0+384)+36),1
  8284  083A  2854               	goto	l879
  8285                           
  8286                           ;MCU_B1.c: 984: Memory.Runtime = 1;
  8287  083B  15C4               	bsf	(_Memory^(0+384)+36),3
  8288                           
  8289                           ;MCU_B1.c: 985: Memory.Time++;
  8290  083C  3001               	movlw	1
  8291  083D  07C2               	addwf	(_Memory^(0+384)+34),f
  8292  083E  3000               	movlw	0
  8293  083F  3DC3               	addwfc	((_Memory+1)^(0+384)+34),f
  8294                           
  8295                           ;MCU_B1.c: 986: if (Memory.Time == (200 / 20)) {
  8296  0840  3022               	movlw	34
  8297  0841  3EA0               	addlw	_Memory& (0+255)
  8298  0842  0086               	movwf	6
  8299  0843  3001               	movlw	1	; select bank3/4
  8300  0844  0087               	movwf	7
  8301  0845  3F40               	moviw [0]fsr1
  8302  0846  3A0A               	xorlw	10
  8303  0847  1D03               	skipz
  8304  0848  284B               	goto	u6265
  8305  0849  3F41               	moviw [1]fsr1
  8306  084A  3A00               	xorlw	0
  8307  084B                     u6265:	
  8308  084B  1D03               	skipz
  8309  084C  0008               	return
  8310                           
  8311                           ;MCU_B1.c: 987: Memory.Time = 0;
  8312  084D  01C2               	clrf	(_Memory^(0+384)+34)
  8313  084E  01C3               	clrf	((_Memory+1)^(0+384)+34)
  8314                           
  8315                           ;MCU_B1.c: 988: Memory.Modify = 0;
  8316  084F  1044               	bcf	(_Memory^(0+384)+36),0
  8317                           
  8318                           ;MCU_B1.c: 989: Memory.GO = 0;
  8319  0850  10C4               	bcf	(_Memory^(0+384)+36),1
  8320                           
  8321                           ;MCU_B1.c: 990: Flash_Memory_Modify();
  8322  0851  318C  2493         	fcall	_Flash_Memory_Modify
  8323                           
  8324                           ;MCU_B1.c: 991: }
  8325                           ;MCU_B1.c: 992: } else {
  8326  0853  0008               	return
  8327  0854                     l879:	
  8328                           
  8329                           ;MCU_B1.c: 993: if (Memory.Runtime == 1) {
  8330  0854  1DC4               	btfss	(_Memory^(0+384)+36),3
  8331  0855  0008               	return
  8332                           
  8333                           ;MCU_B1.c: 994: Memory.Runtime = 0;
  8334  0856  11C4               	bcf	(_Memory^(0+384)+36),3
  8335                           
  8336                           ;MCU_B1.c: 995: Memory.Time = 0;
  8337  0857  01C2               	clrf	(_Memory^(0+384)+34)
  8338  0858  01C3               	clrf	((_Memory+1)^(0+384)+34)
  8339  0859  0008               	return
  8340  085A                     __end_of_Flash_Memory_Main:	
  8341                           
  8342                           	psect	text44
  8343  130E                     __ptext44:	
  8344 ;; *************** function _getAll_Sw_KeyStatus *****************
  8345 ;; Defined at:
  8346 ;;		line 279 in file "../src/Switch_B1.c"
  8347 ;; Parameters:    Size  Location     Type
  8348 ;;		None
  8349 ;; Auto vars:     Size  Location     Type
  8350 ;;  status          1    1[BANK0 ] unsigned char 
  8351 ;; Return value:  Size  Location     Type
  8352 ;;                  1    wreg      unsigned char 
  8353 ;; Registers used:
  8354 ;;		wreg, status,2
  8355 ;; Tracked objects:
  8356 ;;		On entry : 0/0
  8357 ;;		On exit  : 0/0
  8358 ;;		Unchanged: 0/0
  8359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8361 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8362 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8363 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8364 ;;Total ram usage:        3 bytes
  8365 ;; Hardware stack levels used:    1
  8366 ;; Hardware stack levels required when called:    5
  8367 ;; This function calls:
  8368 ;;		Nothing
  8369 ;; This function is called by:
  8370 ;;		_Flash_Memory_Main
  8371 ;; This function uses a non-reentrant model
  8372 ;;
  8373                           
  8374                           
  8375                           ;psect for function _getAll_Sw_KeyStatus
  8376  130E                     _getAll_Sw_KeyStatus:	
  8377                           
  8378                           ;Switch_B1.c: 280: char status = 0;
  8379                           
  8380                           ;incstack = 0
  8381                           ; Regs used in _getAll_Sw_KeyStatus: [wreg+status,2]
  8382  130E  0020               	movlb	0	; select bank0
  8383  130F  01A1               	clrf	getAll_Sw_KeyStatus@status
  8384                           
  8385                           ;Switch_B1.c: 299: status = RA6 == 1 || RA4 == 1 || RA0 == 1 || RA7 == 1 ? 1 : 0;
  8386  1310  01A2               	clrf	_getAll_Sw_KeyStatus$5433
  8387  1311  0AA2               	incf	_getAll_Sw_KeyStatus$5433,f
  8388  1312  1F0C               	btfss	12,6	;volatile
  8389  1313  1A0C               	btfsc	12,4	;volatile
  8390  1314  2B19               	goto	l5458
  8391  1315  1C0C               	btfss	12,0	;volatile
  8392  1316  1B8C               	btfsc	12,7	;volatile
  8393  1317  2B19               	goto	l5458
  8394  1318  01A2               	clrf	_getAll_Sw_KeyStatus$5433
  8395  1319                     l5458:	
  8396  1319  0822               	movf	_getAll_Sw_KeyStatus$5433,w
  8397  131A  00A0               	movwf	??_getAll_Sw_KeyStatus
  8398  131B  0820               	movf	??_getAll_Sw_KeyStatus,w
  8399  131C  00A1               	movwf	getAll_Sw_KeyStatus@status
  8400                           
  8401                           ;Switch_B1.c: 303: return status;
  8402  131D  0821               	movf	getAll_Sw_KeyStatus@status,w
  8403  131E  0008               	return
  8404  131F                     __end_of_getAll_Sw_KeyStatus:	
  8405                           
  8406                           	psect	text45
  8407  0C93                     __ptext45:	
  8408 ;; *************** function _Flash_Memory_Modify *****************
  8409 ;; Defined at:
  8410 ;;		line 1053 in file "../src/MCU_B1.c"
  8411 ;; Parameters:    Size  Location     Type
  8412 ;;		None
  8413 ;; Auto vars:     Size  Location     Type
  8414 ;;  i               1    5[BANK0 ] unsigned char 
  8415 ;; Return value:  Size  Location     Type
  8416 ;;		None               void
  8417 ;; Registers used:
  8418 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8419 ;; Tracked objects:
  8420 ;;		On entry : 0/0
  8421 ;;		On exit  : 0/0
  8422 ;;		Unchanged: 0/0
  8423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8425 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8426 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8427 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8428 ;;Total ram usage:        2 bytes
  8429 ;; Hardware stack levels used:    1
  8430 ;; Hardware stack levels required when called:    7
  8431 ;; This function calls:
  8432 ;;		_Flash_Memory_Erasing
  8433 ;;		_Flash_Memory_Read
  8434 ;;		_Flash_Memory_Write
  8435 ;;		_setMemory_Data
  8436 ;; This function is called by:
  8437 ;;		_Flash_Memory_Main
  8438 ;; This function uses a non-reentrant model
  8439 ;;
  8440                           
  8441                           
  8442                           ;psect for function _Flash_Memory_Modify
  8443  0C93                     _Flash_Memory_Modify:	
  8444                           
  8445                           ;MCU_B1.c: 1054: char i = 0;
  8446                           
  8447                           ;incstack = 0
  8448                           ; Regs used in _Flash_Memory_Modify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8449  0C93  0020               	movlb	0	; select bank0
  8450  0C94  01A5               	clrf	Flash_Memory_Modify@i
  8451                           
  8452                           ;MCU_B1.c: 1055: for (i = 0; i < 32; i++) {
  8453  0C95  01A5               	clrf	Flash_Memory_Modify@i
  8454  0C96  3020               	movlw	32
  8455  0C97  0225               	subwf	Flash_Memory_Modify@i,w
  8456  0C98  1803               	btfsc	3,0
  8457  0C99  2CAF               	goto	l5476
  8458  0C9A                     l5470:	
  8459                           
  8460                           ;MCU_B1.c: 1056: Memory.Data[i] = Flash_Memory_Read(i);
  8461  0C9A  0825               	movf	Flash_Memory_Modify@i,w
  8462  0C9B  3194  2447  318C   	fcall	_Flash_Memory_Read
  8463  0C9E  0020               	movlb	0	; select bank0
  8464  0C9F  00A4               	movwf	??_Flash_Memory_Modify
  8465  0CA0  0825               	movf	Flash_Memory_Modify@i,w
  8466  0CA1  3EA0               	addlw	_Memory& (0+255)
  8467  0CA2  0086               	movwf	6
  8468  0CA3  3001               	movlw	1	; select bank3/4
  8469  0CA4  0087               	movwf	7
  8470  0CA5  0824               	movf	??_Flash_Memory_Modify,w
  8471  0CA6  0081               	movwf	1
  8472  0CA7  3001               	movlw	1
  8473  0CA8  00A4               	movwf	??_Flash_Memory_Modify
  8474  0CA9  0824               	movf	??_Flash_Memory_Modify,w
  8475  0CAA  07A5               	addwf	Flash_Memory_Modify@i,f
  8476  0CAB  3020               	movlw	32
  8477  0CAC  0225               	subwf	Flash_Memory_Modify@i,w
  8478  0CAD  1C03               	skipc
  8479  0CAE  2C9A               	goto	l5470
  8480  0CAF                     l5476:	
  8481                           
  8482                           ;MCU_B1.c: 1057: }
  8483                           ;MCU_B1.c: 1058: setMemory_Data(0, product->Data[12]);
  8484  0CAF  0021               	movlb	1	; select bank1
  8485  0CB0  086E               	movf	_product^(0+128),w
  8486  0CB1  0086               	movwf	6
  8487  0CB2  3001               	movlw	1	; select bank2/3
  8488  0CB3  0087               	movwf	7
  8489  0CB4  3001               	movlw	1	; select bank2/3
  8490  0CB5  3F4C               	moviw [12]fsr1
  8491  0CB6  0020               	movlb	0	; select bank0
  8492  0CB7  00A0               	movwf	setMemory_Data@data
  8493  0CB8  3000               	movlw	0
  8494  0CB9  3192  2280  318C   	fcall	_setMemory_Data
  8495                           
  8496                           ;MCU_B1.c: 1059: setMemory_Data(1, product->Data[13]);
  8497  0CBC  0021               	movlb	1	; select bank1
  8498  0CBD  086E               	movf	_product^(0+128),w
  8499  0CBE  0086               	movwf	6
  8500  0CBF  3001               	movlw	1	; select bank2/3
  8501  0CC0  0087               	movwf	7
  8502  0CC1  3001               	movlw	1	; select bank2/3
  8503  0CC2  3F4D               	moviw [13]fsr1
  8504  0CC3  0020               	movlb	0	; select bank0
  8505  0CC4  00A0               	movwf	setMemory_Data@data
  8506  0CC5  3001               	movlw	1
  8507  0CC6  3192  2280  318C   	fcall	_setMemory_Data
  8508                           
  8509                           ;MCU_B1.c: 1060: setMemory_Data(2, product->Data[14]);
  8510  0CC9  0021               	movlb	1	; select bank1
  8511  0CCA  086E               	movf	_product^(0+128),w
  8512  0CCB  0086               	movwf	6
  8513  0CCC  3001               	movlw	1	; select bank2/3
  8514  0CCD  0087               	movwf	7
  8515  0CCE  3001               	movlw	1	; select bank2/3
  8516  0CCF  3F4E               	moviw [14]fsr1
  8517  0CD0  0020               	movlb	0	; select bank0
  8518  0CD1  00A0               	movwf	setMemory_Data@data
  8519  0CD2  3002               	movlw	2
  8520  0CD3  3192  2280  318C   	fcall	_setMemory_Data
  8521                           
  8522                           ;MCU_B1.c: 1062: setMemory_Data(3, product->Data[21]);
  8523  0CD6  0021               	movlb	1	; select bank1
  8524  0CD7  086E               	movf	_product^(0+128),w
  8525  0CD8  0086               	movwf	6
  8526  0CD9  3001               	movlw	1	; select bank2/3
  8527  0CDA  0087               	movwf	7
  8528  0CDB  3001               	movlw	1	; select bank2/3
  8529  0CDC  3F55               	moviw [21]fsr1
  8530  0CDD  0020               	movlb	0	; select bank0
  8531  0CDE  00A0               	movwf	setMemory_Data@data
  8532  0CDF  3003               	movlw	3
  8533  0CE0  3192  2280  318C   	fcall	_setMemory_Data
  8534                           
  8535                           ;MCU_B1.c: 1063: setMemory_Data(4, product->Data[22]);
  8536  0CE3  0021               	movlb	1	; select bank1
  8537  0CE4  086E               	movf	_product^(0+128),w
  8538  0CE5  0086               	movwf	6
  8539  0CE6  3001               	movlw	1	; select bank2/3
  8540  0CE7  0087               	movwf	7
  8541  0CE8  3001               	movlw	1	; select bank2/3
  8542  0CE9  3F56               	moviw [22]fsr1
  8543  0CEA  0020               	movlb	0	; select bank0
  8544  0CEB  00A0               	movwf	setMemory_Data@data
  8545  0CEC  3004               	movlw	4
  8546  0CED  3192  2280  318C   	fcall	_setMemory_Data
  8547                           
  8548                           ;MCU_B1.c: 1064: setMemory_Data(5, product->Data[23]);
  8549  0CF0  0021               	movlb	1	; select bank1
  8550  0CF1  086E               	movf	_product^(0+128),w
  8551  0CF2  0086               	movwf	6
  8552  0CF3  3001               	movlw	1	; select bank2/3
  8553  0CF4  0087               	movwf	7
  8554  0CF5  3001               	movlw	1	; select bank2/3
  8555  0CF6  3F57               	moviw [23]fsr1
  8556  0CF7  0020               	movlb	0	; select bank0
  8557  0CF8  00A0               	movwf	setMemory_Data@data
  8558  0CF9  3005               	movlw	5
  8559  0CFA  3192  2280  318C   	fcall	_setMemory_Data
  8560                           
  8561                           ;MCU_B1.c: 1065: if (myMain.SaveDimmer == 1) {
  8562  0CFD  0021               	movlb	1	; select bank1
  8563  0CFE  1EAA               	btfss	(_myMain^(0+128)+10),5
  8564  0CFF  2D0A               	goto	l5484
  8565                           
  8566                           ;MCU_B1.c: 1066: myMain.SaveDimmer = 0;
  8567  0D00  12AA               	bcf	(_myMain^(0+128)+10),5
  8568                           
  8569                           ;MCU_B1.c: 1067: setMemory_Data(30, 0xaa);
  8570  0D01  30AA               	movlw	170
  8571  0D02  0020               	movlb	0	; select bank0
  8572  0D03  00A4               	movwf	??_Flash_Memory_Modify
  8573  0D04  0824               	movf	??_Flash_Memory_Modify,w
  8574  0D05  00A0               	movwf	setMemory_Data@data
  8575  0D06  301E               	movlw	30
  8576  0D07  3192  2280  318C   	fcall	_setMemory_Data
  8577  0D0A                     l5484:	
  8578                           
  8579                           ;MCU_B1.c: 1068: }
  8580                           ;MCU_B1.c: 1070: if (Memory.LoopSave == 1) {
  8581  0D0A  0023               	movlb	3	; select bank3
  8582  0D0B  1D44               	btfss	(_Memory^(0+384)+36),2
  8583  0D0C  2D11               	goto	l903
  8584                           
  8585                           ;MCU_B1.c: 1071: Memory.LoopSave = 0;
  8586  0D0D  1144               	bcf	(_Memory^(0+384)+36),2
  8587                           
  8588                           ;MCU_B1.c: 1072: myMain.FirstOpen = 0;
  8589  0D0E  0021               	movlb	1	; select bank1
  8590  0D0F  11A0               	bcf	_myMain^(0+128),3
  8591                           
  8592                           ;MCU_B1.c: 1073: myMain.First = 0;
  8593  0D10  12A0               	bcf	_myMain^(0+128),5
  8594  0D11                     l903:	
  8595                           
  8596                           ;MCU_B1.c: 1075: }
  8597                           ;MCU_B1.c: 1076: GIE = 0;
  8598  0D11  138B               	bcf	11,7	;volatile
  8599                           
  8600                           ;MCU_B1.c: 1077: Flash_Memory_Erasing();
  8601  0D12  3192  228C  318C   	fcall	_Flash_Memory_Erasing
  8602                           
  8603                           ;MCU_B1.c: 1078: Flash_Memory_Write();
  8604  0D15  3195  25DA         	fcall	_Flash_Memory_Write
  8605                           
  8606                           ;MCU_B1.c: 1079: GIE = 1;
  8607  0D17  178B               	bsf	11,7	;volatile
  8608  0D18  0008               	return
  8609  0D19                     __end_of_Flash_Memory_Modify:	
  8610                           
  8611                           	psect	text46
  8612  128C                     __ptext46:	
  8613 ;; *************** function _Flash_Memory_Erasing *****************
  8614 ;; Defined at:
  8615 ;;		line 1042 in file "../src/MCU_B1.c"
  8616 ;; Parameters:    Size  Location     Type
  8617 ;;		None
  8618 ;; Auto vars:     Size  Location     Type
  8619 ;;		None
  8620 ;; Return value:  Size  Location     Type
  8621 ;;		None               void
  8622 ;; Registers used:
  8623 ;;		wreg, status,2, status,0, pclath, cstack
  8624 ;; Tracked objects:
  8625 ;;		On entry : 0/0
  8626 ;;		On exit  : 0/0
  8627 ;;		Unchanged: 0/0
  8628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8633 ;;Total ram usage:        0 bytes
  8634 ;; Hardware stack levels used:    1
  8635 ;; Hardware stack levels required when called:    6
  8636 ;; This function calls:
  8637 ;;		_Flash_Memory_Unlock
  8638 ;; This function is called by:
  8639 ;;		_Flash_Memory_Modify
  8640 ;; This function uses a non-reentrant model
  8641 ;;
  8642                           
  8643                           
  8644                           ;psect for function _Flash_Memory_Erasing
  8645  128C                     _Flash_Memory_Erasing:	
  8646                           
  8647                           ;MCU_B1.c: 1043: CFGS = 0;
  8648                           
  8649                           ;incstack = 0
  8650                           ; Regs used in _Flash_Memory_Erasing: [wreg+status,2+status,0+pclath+cstack]
  8651  128C  0023               	movlb	3	; select bank3
  8652  128D  1315               	bcf	21,6	;volatile
  8653                           
  8654                           ;MCU_B1.c: 1044: PMADRH = 0x30;
  8655  128E  3030               	movlw	48
  8656  128F  0092               	movwf	18	;volatile
  8657                           
  8658                           ;MCU_B1.c: 1045: PMADRL = 0x00;
  8659  1290  0191               	clrf	17	;volatile
  8660                           
  8661                           ;MCU_B1.c: 1046: FREE = 1;
  8662  1291  1615               	bsf	21,4	;volatile
  8663                           
  8664                           ;MCU_B1.c: 1047: WREN = 1;
  8665  1292  1515               	bsf	21,2	;volatile
  8666                           
  8667                           ;MCU_B1.c: 1048: Flash_Memory_Unlock();
  8668  1293  3191  21FC         	fcall	_Flash_Memory_Unlock
  8669                           
  8670                           ;MCU_B1.c: 1049: WREN = 0;
  8671  1295  0023               	movlb	3	; select bank3
  8672  1296  1115               	bcf	21,2	;volatile
  8673  1297  0008               	return
  8674  1298                     __end_of_Flash_Memory_Erasing:	
  8675                           
  8676                           	psect	text47
  8677  0602                     __ptext47:	
  8678 ;; *************** function _Flash_Memory_Initialization *****************
  8679 ;; Defined at:
  8680 ;;		line 932 in file "../src/MCU_B1.c"
  8681 ;; Parameters:    Size  Location     Type
  8682 ;;		None
  8683 ;; Auto vars:     Size  Location     Type
  8684 ;;  value           1    5[BANK0 ] unsigned char 
  8685 ;; Return value:  Size  Location     Type
  8686 ;;		None               void
  8687 ;; Registers used:
  8688 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8689 ;; Tracked objects:
  8690 ;;		On entry : 0/0
  8691 ;;		On exit  : 0/0
  8692 ;;		Unchanged: 0/0
  8693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8695 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8696 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8697 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8698 ;;Total ram usage:        2 bytes
  8699 ;; Hardware stack levels used:    1
  8700 ;; Hardware stack levels required when called:    7
  8701 ;; This function calls:
  8702 ;;		_Flash_Memory_Read
  8703 ;;		_Flash_Memory_Write
  8704 ;;		_setMemory_Data
  8705 ;; This function is called by:
  8706 ;;		_main
  8707 ;; This function uses a non-reentrant model
  8708 ;;
  8709                           
  8710                           
  8711                           ;psect for function _Flash_Memory_Initialization
  8712  0602                     _Flash_Memory_Initialization:	
  8713                           
  8714                           ;MCU_B1.c: 933: char value = 0;
  8715                           
  8716                           ;incstack = 0
  8717                           ; Regs used in _Flash_Memory_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  8718  0602  0020               	movlb	0	; select bank0
  8719  0603  01A5               	clrf	Flash_Memory_Initialization@value
  8720                           
  8721                           ;MCU_B1.c: 934: if (Flash_Memory_Read(31) == 0xaa) {
  8722  0604  301F               	movlw	31
  8723  0605  3194  2447  3186   	fcall	_Flash_Memory_Read
  8724  0608  3AAA               	xorlw	170
  8725  0609  1D03               	skipz
  8726  060A  2E84               	goto	l5788
  8727                           
  8728                           ;MCU_B1.c: 935: product->Data[12] = Flash_Memory_Read(0);
  8729  060B  3000               	movlw	0
  8730  060C  3194  2447  3186   	fcall	_Flash_Memory_Read
  8731  060F  0020               	movlb	0	; select bank0
  8732  0610  00A4               	movwf	??_Flash_Memory_Initialization
  8733  0611  0021               	movlb	1	; select bank1
  8734  0612  086E               	movf	_product^(0+128),w
  8735  0613  3E0C               	addlw	12
  8736  0614  0086               	movwf	6
  8737  0615  3001               	movlw	1	; select bank2/3
  8738  0616  0087               	movwf	7
  8739  0617  0020               	movlb	0	; select bank0
  8740  0618  0824               	movf	??_Flash_Memory_Initialization,w
  8741  0619  0081               	movwf	1
  8742                           
  8743                           ;MCU_B1.c: 936: product->Data[13] = Flash_Memory_Read(1);
  8744  061A  3001               	movlw	1
  8745  061B  3194  2447  3186   	fcall	_Flash_Memory_Read
  8746  061E  0020               	movlb	0	; select bank0
  8747  061F  00A4               	movwf	??_Flash_Memory_Initialization
  8748  0620  0021               	movlb	1	; select bank1
  8749  0621  086E               	movf	_product^(0+128),w
  8750  0622  3E0D               	addlw	13
  8751  0623  0086               	movwf	6
  8752  0624  3001               	movlw	1	; select bank2/3
  8753  0625  0087               	movwf	7
  8754  0626  0020               	movlb	0	; select bank0
  8755  0627  0824               	movf	??_Flash_Memory_Initialization,w
  8756  0628  0081               	movwf	1
  8757                           
  8758                           ;MCU_B1.c: 937: product->Data[14] = Flash_Memory_Read(2);
  8759  0629  3002               	movlw	2
  8760  062A  3194  2447  3186   	fcall	_Flash_Memory_Read
  8761  062D  0020               	movlb	0	; select bank0
  8762  062E  00A4               	movwf	??_Flash_Memory_Initialization
  8763  062F  0021               	movlb	1	; select bank1
  8764  0630  086E               	movf	_product^(0+128),w
  8765  0631  3E0E               	addlw	14
  8766  0632  0086               	movwf	6
  8767  0633  3001               	movlw	1	; select bank2/3
  8768  0634  0087               	movwf	7
  8769  0635  0020               	movlb	0	; select bank0
  8770  0636  0824               	movf	??_Flash_Memory_Initialization,w
  8771  0637  0081               	movwf	1
  8772                           
  8773                           ;MCU_B1.c: 940: product->Data[21] = Flash_Memory_Read(3);
  8774  0638  3003               	movlw	3
  8775  0639  3194  2447  3186   	fcall	_Flash_Memory_Read
  8776  063C  0020               	movlb	0	; select bank0
  8777  063D  00A4               	movwf	??_Flash_Memory_Initialization
  8778  063E  0021               	movlb	1	; select bank1
  8779  063F  086E               	movf	_product^(0+128),w
  8780  0640  3E15               	addlw	21
  8781  0641  0086               	movwf	6
  8782  0642  3001               	movlw	1	; select bank2/3
  8783  0643  0087               	movwf	7
  8784  0644  0020               	movlb	0	; select bank0
  8785  0645  0824               	movf	??_Flash_Memory_Initialization,w
  8786  0646  0081               	movwf	1
  8787                           
  8788                           ;MCU_B1.c: 941: product->Data[22] = Flash_Memory_Read(4);
  8789  0647  3004               	movlw	4
  8790  0648  3194  2447  3186   	fcall	_Flash_Memory_Read
  8791  064B  0020               	movlb	0	; select bank0
  8792  064C  00A4               	movwf	??_Flash_Memory_Initialization
  8793  064D  0021               	movlb	1	; select bank1
  8794  064E  086E               	movf	_product^(0+128),w
  8795  064F  3E16               	addlw	22
  8796  0650  0086               	movwf	6
  8797  0651  3001               	movlw	1	; select bank2/3
  8798  0652  0087               	movwf	7
  8799  0653  0020               	movlb	0	; select bank0
  8800  0654  0824               	movf	??_Flash_Memory_Initialization,w
  8801  0655  0081               	movwf	1
  8802                           
  8803                           ;MCU_B1.c: 942: product->Data[23] = Flash_Memory_Read(5);
  8804  0656  3005               	movlw	5
  8805  0657  3194  2447  3186   	fcall	_Flash_Memory_Read
  8806  065A  0020               	movlb	0	; select bank0
  8807  065B  00A4               	movwf	??_Flash_Memory_Initialization
  8808  065C  0021               	movlb	1	; select bank1
  8809  065D  086E               	movf	_product^(0+128),w
  8810  065E  3E17               	addlw	23
  8811  065F  0086               	movwf	6
  8812  0660  3001               	movlw	1	; select bank2/3
  8813  0661  0087               	movwf	7
  8814  0662  0020               	movlb	0	; select bank0
  8815  0663  0824               	movf	??_Flash_Memory_Initialization,w
  8816  0664  0081               	movwf	1
  8817                           
  8818                           ;MCU_B1.c: 949: if (product->Data[12] == 0xff && product->Data[13] == 0xff && product->D
      +                          ata[14] == 0xff) {
  8819  0665  0021               	movlb	1	; select bank1
  8820  0666  086E               	movf	_product^(0+128),w
  8821  0667  3E0C               	addlw	12
  8822  0668  0086               	movwf	6
  8823  0669  3001               	movlw	1	; select bank2/3
  8824  066A  0087               	movwf	7
  8825  066B  0801               	movf	1,w
  8826  066C  3AFF               	xorlw	255
  8827  066D  1D03               	skipz
  8828  066E  0008               	return
  8829  066F  086E               	movf	_product^(0+128),w
  8830  0670  3E0D               	addlw	13
  8831  0671  0086               	movwf	6
  8832  0672  3001               	movlw	1	; select bank2/3
  8833  0673  0087               	movwf	7
  8834  0674  0801               	movf	1,w
  8835  0675  3AFF               	xorlw	255
  8836  0676  1D03               	skipz
  8837  0677  0008               	return
  8838  0678  086E               	movf	_product^(0+128),w
  8839  0679  3E0E               	addlw	14
  8840  067A  0086               	movwf	6
  8841  067B  3001               	movlw	1	; select bank2/3
  8842  067C  0087               	movwf	7
  8843  067D  0801               	movf	1,w
  8844  067E  3AFF               	xorlw	255
  8845  067F  1D03               	skipz
  8846  0680  0008               	return
  8847                           
  8848                           ;MCU_B1.c: 950: myMain.FirstOpen = 1;
  8849  0681  15A0               	bsf	_myMain^(0+128),3
  8850                           
  8851                           ;MCU_B1.c: 951: myMain.First = 1;
  8852  0682  16A0               	bsf	_myMain^(0+128),5
  8853                           
  8854                           ;MCU_B1.c: 952: }
  8855                           ;MCU_B1.c: 953: } else {
  8856  0683  0008               	return
  8857  0684                     l5788:	
  8858                           
  8859                           ;MCU_B1.c: 955: setMemory_Data(0, 0xff);
  8860  0684  30FF               	movlw	255
  8861  0685  0020               	movlb	0	; select bank0
  8862  0686  00A4               	movwf	??_Flash_Memory_Initialization
  8863  0687  0824               	movf	??_Flash_Memory_Initialization,w
  8864  0688  00A0               	movwf	setMemory_Data@data
  8865  0689  3000               	movlw	0
  8866  068A  3192  2280  3186   	fcall	_setMemory_Data
  8867                           
  8868                           ;MCU_B1.c: 956: setMemory_Data(1, 0xff);
  8869  068D  30FF               	movlw	255
  8870  068E  0020               	movlb	0	; select bank0
  8871  068F  00A4               	movwf	??_Flash_Memory_Initialization
  8872  0690  0824               	movf	??_Flash_Memory_Initialization,w
  8873  0691  00A0               	movwf	setMemory_Data@data
  8874  0692  3001               	movlw	1
  8875  0693  3192  2280  3186   	fcall	_setMemory_Data
  8876                           
  8877                           ;MCU_B1.c: 957: setMemory_Data(2, 0xff);
  8878  0696  30FF               	movlw	255
  8879  0697  0020               	movlb	0	; select bank0
  8880  0698  00A4               	movwf	??_Flash_Memory_Initialization
  8881  0699  0824               	movf	??_Flash_Memory_Initialization,w
  8882  069A  00A0               	movwf	setMemory_Data@data
  8883  069B  3002               	movlw	2
  8884  069C  3192  2280  3186   	fcall	_setMemory_Data
  8885                           
  8886                           ;MCU_B1.c: 958: setMemory_Data(3, 0xff);
  8887  069F  30FF               	movlw	255
  8888  06A0  0020               	movlb	0	; select bank0
  8889  06A1  00A4               	movwf	??_Flash_Memory_Initialization
  8890  06A2  0824               	movf	??_Flash_Memory_Initialization,w
  8891  06A3  00A0               	movwf	setMemory_Data@data
  8892  06A4  3003               	movlw	3
  8893  06A5  3192  2280  3186   	fcall	_setMemory_Data
  8894                           
  8895                           ;MCU_B1.c: 959: setMemory_Data(4, 0xff);
  8896  06A8  30FF               	movlw	255
  8897  06A9  0020               	movlb	0	; select bank0
  8898  06AA  00A4               	movwf	??_Flash_Memory_Initialization
  8899  06AB  0824               	movf	??_Flash_Memory_Initialization,w
  8900  06AC  00A0               	movwf	setMemory_Data@data
  8901  06AD  3004               	movlw	4
  8902  06AE  3192  2280  3186   	fcall	_setMemory_Data
  8903                           
  8904                           ;MCU_B1.c: 960: setMemory_Data(5, 0xff);
  8905  06B1  30FF               	movlw	255
  8906  06B2  0020               	movlb	0	; select bank0
  8907  06B3  00A4               	movwf	??_Flash_Memory_Initialization
  8908  06B4  0824               	movf	??_Flash_Memory_Initialization,w
  8909  06B5  00A0               	movwf	setMemory_Data@data
  8910  06B6  3005               	movlw	5
  8911  06B7  3192  2280  3186   	fcall	_setMemory_Data
  8912                           
  8913                           ;MCU_B1.c: 961: setMemory_Data(31, 0xaa);
  8914  06BA  30AA               	movlw	170
  8915  06BB  0020               	movlb	0	; select bank0
  8916  06BC  00A4               	movwf	??_Flash_Memory_Initialization
  8917  06BD  0824               	movf	??_Flash_Memory_Initialization,w
  8918  06BE  00A0               	movwf	setMemory_Data@data
  8919  06BF  301F               	movlw	31
  8920  06C0  3192  2280  3186   	fcall	_setMemory_Data
  8921                           
  8922                           ;MCU_B1.c: 966: GIE = 0;
  8923  06C3  138B               	bcf	11,7	;volatile
  8924                           
  8925                           ;MCU_B1.c: 967: Flash_Memory_Write();
  8926  06C4  3195  25DA         	fcall	_Flash_Memory_Write
  8927                           
  8928                           ;MCU_B1.c: 968: GIE = 1;
  8929  06C6  178B               	bsf	11,7	;volatile
  8930                           
  8931                           ;MCU_B1.c: 969: myMain.FirstOpen = 1;
  8932  06C7  0021               	movlb	1	; select bank1
  8933  06C8  15A0               	bsf	_myMain^(0+128),3
  8934                           
  8935                           ;MCU_B1.c: 970: myMain.First = 1;
  8936  06C9  16A0               	bsf	_myMain^(0+128),5
  8937                           
  8938                           ;MCU_B1.c: 971: myMain.InitDimmer = 1;
  8939  06CA  162A               	bsf	(_myMain^(0+128)+10),4
  8940  06CB  0008               	return
  8941  06CC                     __end_of_Flash_Memory_Initialization:	
  8942                           
  8943                           	psect	text48
  8944  1280                     __ptext48:	
  8945 ;; *************** function _setMemory_Data *****************
  8946 ;; Defined at:
  8947 ;;		line 1094 in file "../src/MCU_B1.c"
  8948 ;; Parameters:    Size  Location     Type
  8949 ;;  address         1    wreg     unsigned char 
  8950 ;;  data            1    0[BANK0 ] unsigned char 
  8951 ;; Auto vars:     Size  Location     Type
  8952 ;;  address         1    2[BANK0 ] unsigned char 
  8953 ;; Return value:  Size  Location     Type
  8954 ;;		None               void
  8955 ;; Registers used:
  8956 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8957 ;; Tracked objects:
  8958 ;;		On entry : 0/0
  8959 ;;		On exit  : 0/0
  8960 ;;		Unchanged: 0/0
  8961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8962 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8963 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8964 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8965 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8966 ;;Total ram usage:        3 bytes
  8967 ;; Hardware stack levels used:    1
  8968 ;; Hardware stack levels required when called:    5
  8969 ;; This function calls:
  8970 ;;		Nothing
  8971 ;; This function is called by:
  8972 ;;		_Flash_Memory_Initialization
  8973 ;;		_Flash_Memory_Modify
  8974 ;; This function uses a non-reentrant model
  8975 ;;
  8976                           
  8977                           
  8978                           ;psect for function _setMemory_Data
  8979  1280                     _setMemory_Data:	
  8980                           
  8981                           ;incstack = 0
  8982                           ; Regs used in _setMemory_Data: [wreg+fsr1l+fsr1h+status,2+status,0]
  8983                           ;setMemory_Data@address stored from wreg
  8984  1280  0020               	movlb	0	; select bank0
  8985  1281  00A2               	movwf	setMemory_Data@address
  8986                           
  8987                           ;MCU_B1.c: 1095: Memory.Data[address] = data;
  8988  1282  0820               	movf	setMemory_Data@data,w
  8989  1283  00A1               	movwf	??_setMemory_Data
  8990  1284  0822               	movf	setMemory_Data@address,w
  8991  1285  3EA0               	addlw	_Memory& (0+255)
  8992  1286  0086               	movwf	6
  8993  1287  3001               	movlw	1	; select bank3/4
  8994  1288  0087               	movwf	7
  8995  1289  0821               	movf	??_setMemory_Data,w
  8996  128A  0081               	movwf	1
  8997  128B  0008               	return
  8998  128C                     __end_of_setMemory_Data:	
  8999                           
  9000                           	psect	text49
  9001  15DA                     __ptext49:	
  9002 ;; *************** function _Flash_Memory_Write *****************
  9003 ;; Defined at:
  9004 ;;		line 1023 in file "../src/MCU_B1.c"
  9005 ;; Parameters:    Size  Location     Type
  9006 ;;		None
  9007 ;; Auto vars:     Size  Location     Type
  9008 ;;  i               1    1[BANK0 ] unsigned char 
  9009 ;; Return value:  Size  Location     Type
  9010 ;;		None               void
  9011 ;; Registers used:
  9012 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9013 ;; Tracked objects:
  9014 ;;		On entry : 0/0
  9015 ;;		On exit  : 0/0
  9016 ;;		Unchanged: 0/0
  9017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9019 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9020 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9021 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9022 ;;Total ram usage:        2 bytes
  9023 ;; Hardware stack levels used:    1
  9024 ;; Hardware stack levels required when called:    6
  9025 ;; This function calls:
  9026 ;;		_Flash_Memory_Unlock
  9027 ;; This function is called by:
  9028 ;;		_Flash_Memory_Initialization
  9029 ;;		_Flash_Memory_Modify
  9030 ;; This function uses a non-reentrant model
  9031 ;;
  9032                           
  9033                           
  9034                           ;psect for function _Flash_Memory_Write
  9035  15DA                     _Flash_Memory_Write:	
  9036                           
  9037                           ;MCU_B1.c: 1024: char i = 0;
  9038                           
  9039                           ;incstack = 0
  9040                           ; Regs used in _Flash_Memory_Write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9041  15DA  0020               	movlb	0	; select bank0
  9042  15DB  01A1               	clrf	Flash_Memory_Write@i
  9043                           
  9044                           ;MCU_B1.c: 1025: CFGS = 0;
  9045  15DC  0023               	movlb	3	; select bank3
  9046  15DD  1315               	bcf	21,6	;volatile
  9047                           
  9048                           ;MCU_B1.c: 1026: PMADRH = 0x30;
  9049  15DE  3030               	movlw	48
  9050  15DF  0092               	movwf	18	;volatile
  9051                           
  9052                           ;MCU_B1.c: 1027: PMDATH = 0;
  9053  15E0  0194               	clrf	20	;volatile
  9054                           
  9055                           ;MCU_B1.c: 1028: FREE = 0;
  9056  15E1  1215               	bcf	21,4	;volatile
  9057                           
  9058                           ;MCU_B1.c: 1029: LWLO = 1;
  9059  15E2  1695               	bsf	21,5	;volatile
  9060                           
  9061                           ;MCU_B1.c: 1030: WREN = 1;
  9062  15E3  1515               	bsf	21,2	;volatile
  9063                           
  9064                           ;MCU_B1.c: 1031: for (i = 0; i < 32; i++) {
  9065  15E4  0020               	movlb	0	; select bank0
  9066  15E5  01A1               	clrf	Flash_Memory_Write@i
  9067  15E6  3020               	movlw	32
  9068  15E7  0221               	subwf	Flash_Memory_Write@i,w
  9069  15E8  1803               	btfsc	3,0
  9070  15E9  2E02               	goto	l893
  9071  15EA                     l5062:	
  9072                           
  9073                           ;MCU_B1.c: 1032: PMADRL = i;
  9074  15EA  0821               	movf	Flash_Memory_Write@i,w
  9075  15EB  0023               	movlb	3	; select bank3
  9076  15EC  0091               	movwf	17	;volatile
  9077                           
  9078                           ;MCU_B1.c: 1033: PMDATL = Memory.Data[i];
  9079  15ED  0020               	movlb	0	; select bank0
  9080  15EE  0821               	movf	Flash_Memory_Write@i,w
  9081  15EF  3EA0               	addlw	_Memory& (0+255)
  9082  15F0  0086               	movwf	6
  9083  15F1  3001               	movlw	1	; select bank3/4
  9084  15F2  0087               	movwf	7
  9085  15F3  0801               	movf	1,w
  9086  15F4  0023               	movlb	3	; select bank3
  9087  15F5  0093               	movwf	19	;volatile
  9088                           
  9089                           ;MCU_B1.c: 1034: Flash_Memory_Unlock();
  9090  15F6  3191  21FC  3195   	fcall	_Flash_Memory_Unlock
  9091  15F9  3001               	movlw	1
  9092  15FA  0020               	movlb	0	; select bank0
  9093  15FB  00A0               	movwf	??_Flash_Memory_Write
  9094  15FC  0820               	movf	??_Flash_Memory_Write,w
  9095  15FD  07A1               	addwf	Flash_Memory_Write@i,f
  9096  15FE  3020               	movlw	32
  9097  15FF  0221               	subwf	Flash_Memory_Write@i,w
  9098  1600  1C03               	skipc
  9099  1601  2DEA               	goto	l5062
  9100  1602                     l893:	
  9101                           
  9102                           ;MCU_B1.c: 1035: }
  9103                           ;MCU_B1.c: 1036: LWLO = 0;
  9104  1602  0023               	movlb	3	; select bank3
  9105  1603  1295               	bcf	21,5	;volatile
  9106                           
  9107                           ;MCU_B1.c: 1037: Flash_Memory_Unlock();
  9108  1604  3191  21FC         	fcall	_Flash_Memory_Unlock
  9109                           
  9110                           ;MCU_B1.c: 1038: WREN = 0;
  9111  1606  0023               	movlb	3	; select bank3
  9112  1607  1115               	bcf	21,2	;volatile
  9113  1608  0008               	return
  9114  1609                     __end_of_Flash_Memory_Write:	
  9115                           
  9116                           	psect	text50
  9117  11FC                     __ptext50:	
  9118 ;; *************** function _Flash_Memory_Unlock *****************
  9119 ;; Defined at:
  9120 ;;		line 1002 in file "../src/MCU_B1.c"
  9121 ;; Parameters:    Size  Location     Type
  9122 ;;		None
  9123 ;; Auto vars:     Size  Location     Type
  9124 ;;		None
  9125 ;; Return value:  Size  Location     Type
  9126 ;;		None               void
  9127 ;; Registers used:
  9128 ;;		wreg
  9129 ;; Tracked objects:
  9130 ;;		On entry : 0/0
  9131 ;;		On exit  : 0/0
  9132 ;;		Unchanged: 0/0
  9133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9138 ;;Total ram usage:        0 bytes
  9139 ;; Hardware stack levels used:    1
  9140 ;; Hardware stack levels required when called:    5
  9141 ;; This function calls:
  9142 ;;		Nothing
  9143 ;; This function is called by:
  9144 ;;		_Flash_Memory_Write
  9145 ;;		_Flash_Memory_Erasing
  9146 ;; This function uses a non-reentrant model
  9147 ;;
  9148                           
  9149                           
  9150                           ;psect for function _Flash_Memory_Unlock
  9151  11FC                     _Flash_Memory_Unlock:	
  9152                           
  9153                           ;MCU_B1.c: 1003: PMCON2 = 0x55;
  9154                           
  9155                           ;incstack = 0
  9156                           ; Regs used in _Flash_Memory_Unlock: [wreg]
  9157  11FC  3055               	movlw	85
  9158  11FD  0023               	movlb	3	; select bank3
  9159  11FE  0096               	movwf	22	;volatile
  9160                           
  9161                           ;MCU_B1.c: 1004: PMCON2 = 0xaa;
  9162  11FF  30AA               	movlw	170
  9163  1200  0096               	movwf	22	;volatile
  9164                           
  9165                           ;MCU_B1.c: 1005: WR = 1;
  9166  1201  1495               	bsf	21,1	;volatile
  9167                           
  9168                           ;MCU_B1.c: 1006: __nop();
  9169  1202  0000               	nop
  9170                           
  9171                           ;MCU_B1.c: 1007: __nop();
  9172  1203  0000               	nop
  9173  1204  0008               	return
  9174  1205                     __end_of_Flash_Memory_Unlock:	
  9175                           
  9176                           	psect	text51
  9177  1447                     __ptext51:	
  9178 ;; *************** function _Flash_Memory_Read *****************
  9179 ;; Defined at:
  9180 ;;		line 1011 in file "../src/MCU_B1.c"
  9181 ;; Parameters:    Size  Location     Type
  9182 ;;  address         1    wreg     unsigned char 
  9183 ;; Auto vars:     Size  Location     Type
  9184 ;;  address         1    2[BANK0 ] unsigned char 
  9185 ;;  ret             1    3[BANK0 ] unsigned char 
  9186 ;;  i               1    1[BANK0 ] unsigned char 
  9187 ;; Return value:  Size  Location     Type
  9188 ;;                  1    wreg      unsigned char 
  9189 ;; Registers used:
  9190 ;;		wreg, status,2
  9191 ;; Tracked objects:
  9192 ;;		On entry : 0/0
  9193 ;;		On exit  : 0/0
  9194 ;;		Unchanged: 0/0
  9195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9197 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9198 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9199 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9200 ;;Total ram usage:        4 bytes
  9201 ;; Hardware stack levels used:    1
  9202 ;; Hardware stack levels required when called:    5
  9203 ;; This function calls:
  9204 ;;		Nothing
  9205 ;; This function is called by:
  9206 ;;		_Flash_Memory_Initialization
  9207 ;;		_Flash_Memory_Modify
  9208 ;; This function uses a non-reentrant model
  9209 ;;
  9210                           
  9211                           
  9212                           ;psect for function _Flash_Memory_Read
  9213  1447                     _Flash_Memory_Read:	
  9214                           
  9215                           ;incstack = 0
  9216                           ; Regs used in _Flash_Memory_Read: [wreg+status,2]
  9217                           ;Flash_Memory_Read@address stored from wreg
  9218  1447  0020               	movlb	0	; select bank0
  9219  1448  00A2               	movwf	Flash_Memory_Read@address
  9220                           
  9221                           ;MCU_B1.c: 1012: char i = 0, ret = 0;
  9222  1449  01A1               	clrf	Flash_Memory_Read@i
  9223  144A  01A3               	clrf	Flash_Memory_Read@ret
  9224                           
  9225                           ;MCU_B1.c: 1013: PMADRH = 0x30;
  9226  144B  3030               	movlw	48
  9227  144C  0023               	movlb	3	; select bank3
  9228  144D  0092               	movwf	18	;volatile
  9229                           
  9230                           ;MCU_B1.c: 1014: PMADRL = address;
  9231  144E  0020               	movlb	0	; select bank0
  9232  144F  0822               	movf	Flash_Memory_Read@address,w
  9233  1450  0023               	movlb	3	; select bank3
  9234  1451  0091               	movwf	17	;volatile
  9235                           
  9236                           ;MCU_B1.c: 1015: CFGS = 0;
  9237  1452  1315               	bcf	21,6	;volatile
  9238                           
  9239                           ;MCU_B1.c: 1016: RD = 1;
  9240  1453  1415               	bsf	21,0	;volatile
  9241                           
  9242                           ;MCU_B1.c: 1017: i = PMDATH;
  9243  1454  0814               	movf	20,w	;volatile
  9244  1455  0020               	movlb	0	; select bank0
  9245  1456  00A0               	movwf	??_Flash_Memory_Read
  9246  1457  0820               	movf	??_Flash_Memory_Read,w
  9247  1458  00A1               	movwf	Flash_Memory_Read@i
  9248                           
  9249                           ;MCU_B1.c: 1018: ret = PMDATL;
  9250  1459  0023               	movlb	3	; select bank3
  9251  145A  0813               	movf	19,w	;volatile
  9252  145B  0020               	movlb	0	; select bank0
  9253  145C  00A0               	movwf	??_Flash_Memory_Read
  9254  145D  0820               	movf	??_Flash_Memory_Read,w
  9255  145E  00A3               	movwf	Flash_Memory_Read@ret
  9256                           
  9257                           ;MCU_B1.c: 1019: return ret;
  9258  145F  0823               	movf	Flash_Memory_Read@ret,w
  9259  1460  0008               	return
  9260  1461                     __end_of_Flash_Memory_Read:	
  9261                           
  9262                           	psect	text52
  9263  0530                     __ptext52:	
  9264 ;; *************** function _Exception_Main *****************
  9265 ;; Defined at:
  9266 ;;		line 499 in file "../src/Main_B1.c"
  9267 ;; Parameters:    Size  Location     Type
  9268 ;;		None
  9269 ;; Auto vars:     Size  Location     Type
  9270 ;;  i               2   18[BANK0 ] int 
  9271 ;;  i               2   16[BANK0 ] int 
  9272 ;;  lights          1   21[BANK0 ] unsigned char 
  9273 ;;  error           1   20[BANK0 ] unsigned char 
  9274 ;;  count           1   15[BANK0 ] unsigned char 
  9275 ;;  status          1   14[BANK0 ] unsigned char 
  9276 ;; Return value:  Size  Location     Type
  9277 ;;		None               void
  9278 ;; Registers used:
  9279 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9280 ;; Tracked objects:
  9281 ;;		On entry : 0/0
  9282 ;;		On exit  : 0/0
  9283 ;;		Unchanged: 0/0
  9284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9286 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9287 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9288 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9289 ;;Total ram usage:        9 bytes
  9290 ;; Hardware stack levels used:    1
  9291 ;; Hardware stack levels required when called:    7
  9292 ;; This function calls:
  9293 ;;		_getDimmerLights_Line
  9294 ;;		_getDimmerLights_Status
  9295 ;;		_getMain_All_Error_Status
  9296 ;;		_getMain_All_LightsStatus
  9297 ;;		_setBuz
  9298 ;;		_setDimmerLights_SwOff
  9299 ;;		_setLED
  9300 ;; This function is called by:
  9301 ;;		_main
  9302 ;; This function uses a non-reentrant model
  9303 ;;
  9304                           
  9305                           
  9306                           ;psect for function _Exception_Main
  9307  0530                     _Exception_Main:	
  9308                           
  9309                           ;Main_B1.c: 500: char error = getMain_All_Error_Status(0);
  9310                           
  9311                           ;incstack = 0
  9312                           ; Regs used in _Exception_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9313  0530  3000               	movlw	0
  9314  0531  3196  263B  3185   	fcall	_getMain_All_Error_Status
  9315  0534  0020               	movlb	0	; select bank0
  9316  0535  00AD               	movwf	??_Exception_Main
  9317  0536  082D               	movf	??_Exception_Main,w
  9318  0537  00B4               	movwf	Exception_Main@error
  9319                           
  9320                           ;Main_B1.c: 501: char lights = 0, count = 1;
  9321  0538  01B5               	clrf	Exception_Main@lights
  9322  0539  01AF               	clrf	Exception_Main@count
  9323  053A  0AAF               	incf	Exception_Main@count,f
  9324                           
  9325                           ;Main_B1.c: 502: char status = 0;
  9326  053B  01AE               	clrf	Exception_Main@status
  9327                           
  9328                           ;Main_B1.c: 504: if (myMain.Error_Run == 1) {
  9329  053C  0021               	movlb	1	; select bank1
  9330  053D  1DAA               	btfss	(_myMain^(0+128)+10),3
  9331  053E  2D4E               	goto	l6132
  9332                           
  9333                           ;Main_B1.c: 505: if (error == 0) {
  9334  053F  0020               	movlb	0	; select bank0
  9335  0540  08B4               	movf	Exception_Main@error,f
  9336  0541  1D03               	skipz
  9337  0542  0008               	return
  9338                           
  9339                           ;Main_B1.c: 506: myMain.Error_Run = 0;
  9340  0543  0021               	movlb	1	; select bank1
  9341  0544  11AA               	bcf	(_myMain^(0+128)+10),3
  9342                           
  9343                           ;Main_B1.c: 509: setLED(99, 10);
  9344  0545  300A               	movlw	10
  9345  0546  0020               	movlb	0	; select bank0
  9346  0547  00AD               	movwf	??_Exception_Main
  9347  0548  082D               	movf	??_Exception_Main,w
  9348  0549  00A2               	movwf	setLED@command
  9349  054A  3063               	movlw	99
  9350  054B  3196  266E         	fcall	_setLED
  9351                           
  9352                           ;Main_B1.c: 522: }
  9353                           ;Main_B1.c: 523: } else {
  9354  054D  0008               	return
  9355  054E                     l6132:	
  9356                           
  9357                           ;Main_B1.c: 524: if (error != 0) {
  9358  054E  0020               	movlb	0	; select bank0
  9359  054F  0834               	movf	Exception_Main@error,w
  9360  0550  1903               	btfsc	3,2
  9361  0551  0008               	return
  9362                           
  9363                           ;Main_B1.c: 525: myMain.Error_Run = 1;
  9364  0552  0021               	movlb	1	; select bank1
  9365  0553  15AA               	bsf	(_myMain^(0+128)+10),3
  9366                           
  9367                           ;Main_B1.c: 527: setLED(99, 11);
  9368  0554  300B               	movlw	11
  9369  0555  0020               	movlb	0	; select bank0
  9370  0556  00AD               	movwf	??_Exception_Main
  9371  0557  082D               	movf	??_Exception_Main,w
  9372  0558  00A2               	movwf	setLED@command
  9373  0559  3063               	movlw	99
  9374  055A  3196  266E  3185   	fcall	_setLED
  9375                           
  9376                           ;Main_B1.c: 538: switch (error) {
  9377  055D  2DF7               	goto	l6180
  9378  055E                     l6138:	
  9379                           ;Main_B1.c: 539: case 2:
  9380                           
  9381                           
  9382                           ;Main_B1.c: 546: if (getMain_All_LightsStatus() == 1) {
  9383  055E  3192  2205  3185   	fcall	_getMain_All_LightsStatus
  9384  0561  3A01               	xorlw	1
  9385  0562  1D03               	skipz
  9386  0563  2D6D               	goto	l6142
  9387                           
  9388                           ;Main_B1.c: 547: setBuz(10, 300);
  9389  0564  302C               	movlw	44
  9390  0565  0020               	movlb	0	; select bank0
  9391  0566  00A9               	movwf	setBuz@time
  9392  0567  3001               	movlw	1
  9393  0568  00AA               	movwf	setBuz@time+1
  9394  0569  300A               	movlw	10
  9395  056A  3189  21DA  3185   	fcall	_setBuz
  9396  056D                     l6142:	
  9397                           
  9398                           ;Main_B1.c: 548: }
  9399                           ;Main_B1.c: 550: for (int i = 0; i < count; i++) {
  9400  056D  0020               	movlb	0	; select bank0
  9401  056E  01B0               	clrf	Exception_Main@i
  9402  056F  01B1               	clrf	Exception_Main@i+1
  9403  0570                     l6152:	
  9404  0570  0831               	movf	Exception_Main@i+1,w
  9405  0571  3A80               	xorlw	128
  9406  0572  00AD               	movwf	??_Exception_Main
  9407  0573  3080               	movlw	128
  9408  0574  022D               	subwf	??_Exception_Main,w
  9409  0575  1D03               	skipz
  9410  0576  2D79               	goto	u6885
  9411  0577  082F               	movf	Exception_Main@count,w
  9412  0578  0230               	subwf	Exception_Main@i,w
  9413  0579                     u6885:	
  9414  0579  1803               	btfsc	3,0
  9415  057A  2D9A               	goto	u6880
  9416                           
  9417                           ;Main_B1.c: 552: if (getDimmerLights_Status(i + 1) == 1) {
  9418  057B  0020               	movlb	0	; select bank0
  9419  057C  0830               	movf	Exception_Main@i,w
  9420  057D  3E01               	addlw	1
  9421  057E  3192  22DD  3185   	fcall	_getDimmerLights_Status
  9422  0581  3A01               	xorlw	1
  9423  0582  1D03               	skipz
  9424  0583  2D94               	goto	l6150
  9425                           
  9426                           ;Main_B1.c: 553: DimmerLights->SwFlag = 1;
  9427  0584  087D               	movf	_DimmerLights,w
  9428  0585  0086               	movwf	6
  9429  0586  3001               	movlw	1	; select bank2/3
  9430  0587  0087               	movwf	7
  9431  0588  1401               	bsf	1,0
  9432                           
  9433                           ;Main_B1.c: 554: DimmerLights->Status = 0;
  9434  0589  0A7D               	incf	_DimmerLights,w
  9435  058A  0086               	movwf	6
  9436  058B  3001               	movlw	1	; select bank2/3
  9437  058C  0087               	movwf	7
  9438  058D  1001               	bcf	1,0
  9439                           
  9440                           ;Main_B1.c: 555: setDimmerLights_SwOff(i + 1);
  9441  058E  0020               	movlb	0	; select bank0
  9442  058F  0830               	movf	Exception_Main@i,w
  9443  0590  3E01               	addlw	1
  9444  0591  3197  2713  3185   	fcall	_setDimmerLights_SwOff
  9445  0594                     l6150:	
  9446  0594  3001               	movlw	1
  9447  0595  0020               	movlb	0	; select bank0
  9448  0596  07B0               	addwf	Exception_Main@i,f
  9449  0597  3000               	movlw	0
  9450  0598  3DB1               	addwfc	Exception_Main@i+1,f
  9451  0599  2D70               	goto	l6152
  9452  059A                     u6880:	
  9453  059A  0020               	movlb	0	; select bank0
  9454  059B  0008               	return
  9455  059C                     l6154:	
  9456                           ;Main_B1.c: 561: case 3:
  9457                           
  9458                           ;Main_B1.c: 556: }
  9459                           ;Main_B1.c: 557: }
  9460                           ;Main_B1.c: 560: break;
  9461                           
  9462                           
  9463                           ;Main_B1.c: 563: setBuz(5, 300);
  9464  059C  302C               	movlw	44
  9465  059D  0020               	movlb	0	; select bank0
  9466  059E  00A9               	movwf	setBuz@time
  9467  059F  3001               	movlw	1
  9468  05A0  00AA               	movwf	setBuz@time+1
  9469  05A1  3005               	movlw	5
  9470  05A2  3189  21DA  3185   	fcall	_setBuz
  9471                           
  9472                           ;Main_B1.c: 564: lights = getDimmerLights_Line();
  9473  05A5  3192  2224  3185   	fcall	_getDimmerLights_Line
  9474  05A8  0020               	movlb	0	; select bank0
  9475  05A9  00AD               	movwf	??_Exception_Main
  9476  05AA  082D               	movf	??_Exception_Main,w
  9477  05AB  00B5               	movwf	Exception_Main@lights
  9478                           
  9479                           ;Main_B1.c: 565: if (lights == 0) {
  9480  05AC  08B5               	movf	Exception_Main@lights,f
  9481  05AD  1D03               	skipz
  9482  05AE  2DDD               	goto	l6172
  9483                           
  9484                           ;Main_B1.c: 567: for (int i = 0; i < count; i++) {
  9485  05AF  01B2               	clrf	Exception_Main@i_3095
  9486  05B0  01B3               	clrf	Exception_Main@i_3095+1
  9487  05B1                     l6170:	
  9488  05B1  0833               	movf	Exception_Main@i_3095+1,w
  9489  05B2  3A80               	xorlw	128
  9490  05B3  00AD               	movwf	??_Exception_Main
  9491  05B4  3080               	movlw	128
  9492  05B5  022D               	subwf	??_Exception_Main,w
  9493  05B6  1D03               	skipz
  9494  05B7  2DBA               	goto	u6915
  9495  05B8  082F               	movf	Exception_Main@count,w
  9496  05B9  0232               	subwf	Exception_Main@i_3095,w
  9497  05BA                     u6915:	
  9498  05BA  1803               	btfsc	3,0
  9499  05BB  2DDB               	goto	u6910
  9500                           
  9501                           ;Main_B1.c: 569: if (getDimmerLights_Status(i + 1) == 1) {
  9502  05BC  0020               	movlb	0	; select bank0
  9503  05BD  0832               	movf	Exception_Main@i_3095,w
  9504  05BE  3E01               	addlw	1
  9505  05BF  3192  22DD  3185   	fcall	_getDimmerLights_Status
  9506  05C2  3A01               	xorlw	1
  9507  05C3  1D03               	skipz
  9508  05C4  2DD5               	goto	l6168
  9509                           
  9510                           ;Main_B1.c: 570: DimmerLights->SwFlag = 1;
  9511  05C5  087D               	movf	_DimmerLights,w
  9512  05C6  0086               	movwf	6
  9513  05C7  3001               	movlw	1	; select bank2/3
  9514  05C8  0087               	movwf	7
  9515  05C9  1401               	bsf	1,0
  9516                           
  9517                           ;Main_B1.c: 571: DimmerLights->Status = 0;
  9518  05CA  0A7D               	incf	_DimmerLights,w
  9519  05CB  0086               	movwf	6
  9520  05CC  3001               	movlw	1	; select bank2/3
  9521  05CD  0087               	movwf	7
  9522  05CE  1001               	bcf	1,0
  9523                           
  9524                           ;Main_B1.c: 572: setDimmerLights_SwOff(i + 1);
  9525  05CF  0020               	movlb	0	; select bank0
  9526  05D0  0832               	movf	Exception_Main@i_3095,w
  9527  05D1  3E01               	addlw	1
  9528  05D2  3197  2713  3185   	fcall	_setDimmerLights_SwOff
  9529  05D5                     l6168:	
  9530  05D5  3001               	movlw	1
  9531  05D6  0020               	movlb	0	; select bank0
  9532  05D7  07B2               	addwf	Exception_Main@i_3095,f
  9533  05D8  3000               	movlw	0
  9534  05D9  3DB3               	addwfc	Exception_Main@i_3095+1,f
  9535  05DA  2DB1               	goto	l6170
  9536  05DB                     u6910:	
  9537  05DB  0020               	movlb	0	; select bank0
  9538  05DC  0008               	return
  9539  05DD                     l6172:	
  9540                           ;Main_B1.c: 573: }
  9541                           ;Main_B1.c: 574: }
  9542                           ;Main_B1.c: 575: } else {
  9543                           
  9544                           
  9545                           ;Main_B1.c: 577: if (getDimmerLights_Status(lights) == 1) {
  9546  05DD  0020               	movlb	0	; select bank0
  9547  05DE  0835               	movf	Exception_Main@lights,w
  9548  05DF  3192  22DD  3185   	fcall	_getDimmerLights_Status
  9549  05E2  3A01               	xorlw	1
  9550  05E3  1903               	btfsc	3,2
  9551  05E4  2DE7               	goto	l6174
  9552  05E5  0020               	movlb	0	; select bank0
  9553  05E6  0008               	return
  9554  05E7                     l6174:	
  9555                           
  9556                           ;Main_B1.c: 579: DimmerLights->SwFlag = 1;
  9557  05E7  087D               	movf	_DimmerLights,w
  9558  05E8  0086               	movwf	6
  9559  05E9  3001               	movlw	1	; select bank2/3
  9560  05EA  0087               	movwf	7
  9561  05EB  1401               	bsf	1,0
  9562                           
  9563                           ;Main_B1.c: 580: DimmerLights->Status = 0;
  9564  05EC  0A7D               	incf	_DimmerLights,w
  9565  05ED  0086               	movwf	6
  9566  05EE  3001               	movlw	1	; select bank2/3
  9567  05EF  0087               	movwf	7
  9568  05F0  1001               	bcf	1,0
  9569                           
  9570                           ;Main_B1.c: 581: setDimmerLights_SwOff(lights);
  9571  05F1  0020               	movlb	0	; select bank0
  9572  05F2  0835               	movf	Exception_Main@lights,w
  9573  05F3  3197  2713         	fcall	_setDimmerLights_SwOff
  9574  05F5  0020               	movlb	0	; select bank0
  9575  05F6  0008               	return
  9576  05F7                     l6180:	
  9577                           ;Main_B1.c: 586: }
  9578                           
  9579                           ;Main_B1.c: 582: }
  9580                           ;Main_B1.c: 583: }
  9581                           ;Main_B1.c: 585: break;
  9582                           
  9583  05F7  0020               	movlb	0	; select bank0
  9584  05F8  0834               	movf	Exception_Main@error,w
  9585                           
  9586                           ; Switch size 1, requested type "space"
  9587                           ; Number of cases is 2, Range of values is 2 to 3
  9588                           ; switch strategies available:
  9589                           ; Name         Instructions Cycles
  9590                           ; simple_byte            7     4 (average)
  9591                           ; direct_byte           13     9 (fixed)
  9592                           ; jumptable            263     9 (fixed)
  9593                           ;	Chosen strategy is simple_byte
  9594  05F9  3A02               	xorlw	2	; case 2
  9595  05FA  1903               	skipnz
  9596  05FB  2D5E               	goto	l6138
  9597  05FC  3A01               	xorlw	1	; case 3
  9598  05FD  1903               	skipnz
  9599  05FE  2D9C               	goto	l6154
  9600  05FF  2E01               	goto	l1101
  9601  0600  0008               	return
  9602  0601                     l1101:	
  9603  0601  0008               	return
  9604  0602                     __end_of_Exception_Main:	
  9605                           
  9606                           	psect	text53
  9607  1224                     __ptext53:	
  9608 ;; *************** function _getDimmerLights_Line *****************
  9609 ;; Defined at:
  9610 ;;		line 1107 in file "../src/Dimmer_B1.c"
  9611 ;; Parameters:    Size  Location     Type
  9612 ;;		None
  9613 ;; Auto vars:     Size  Location     Type
  9614 ;;  line            1    0[BANK0 ] unsigned char 
  9615 ;; Return value:  Size  Location     Type
  9616 ;;                  1    wreg      unsigned char 
  9617 ;; Registers used:
  9618 ;;		wreg, status,2
  9619 ;; Tracked objects:
  9620 ;;		On entry : 0/0
  9621 ;;		On exit  : 0/0
  9622 ;;		Unchanged: 0/0
  9623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9625 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9627 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9628 ;;Total ram usage:        1 bytes
  9629 ;; Hardware stack levels used:    1
  9630 ;; Hardware stack levels required when called:    5
  9631 ;; This function calls:
  9632 ;;		Nothing
  9633 ;; This function is called by:
  9634 ;;		_Exception_Main
  9635 ;; This function uses a non-reentrant model
  9636 ;;
  9637                           
  9638                           
  9639                           ;psect for function _getDimmerLights_Line
  9640  1224                     _getDimmerLights_Line:	
  9641                           
  9642                           ;Dimmer_B1.c: 1108: char line = 0;
  9643                           
  9644                           ;incstack = 0
  9645                           ; Regs used in _getDimmerLights_Line: [wreg+status,2]
  9646  1224  0020               	movlb	0	; select bank0
  9647  1225  01A0               	clrf	getDimmerLights_Line@line
  9648                           
  9649                           ;Dimmer_B1.c: 1110: if (DimmerLights1.Line == 1) {
  9650  1226  0022               	movlb	2	; select bank2
  9651  1227  1CD2               	btfss	(_DimmerLights1^(0+256)+1),1
  9652  1228  2A2C               	goto	l5278
  9653                           
  9654                           ;Dimmer_B1.c: 1111: line = 1;
  9655  1229  0020               	movlb	0	; select bank0
  9656  122A  01A0               	clrf	getDimmerLights_Line@line
  9657  122B  0AA0               	incf	getDimmerLights_Line@line,f
  9658  122C                     l5278:	
  9659                           
  9660                           ;Dimmer_B1.c: 1112: }
  9661                           ;Dimmer_B1.c: 1124: return line;
  9662  122C  0020               	movlb	0	; select bank0
  9663  122D  0820               	movf	getDimmerLights_Line@line,w
  9664  122E  0008               	return
  9665  122F                     __end_of_getDimmerLights_Line:	
  9666                           
  9667                           	psect	text54
  9668  14EE                     __ptext54:	
  9669 ;; *************** function _DimmerLights_Main *****************
  9670 ;; Defined at:
  9671 ;;		line 826 in file "../src/Dimmer_B1.c"
  9672 ;; Parameters:    Size  Location     Type
  9673 ;;		None
  9674 ;; Auto vars:     Size  Location     Type
  9675 ;;		None
  9676 ;; Return value:  Size  Location     Type
  9677 ;;		None               void
  9678 ;; Registers used:
  9679 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9680 ;; Tracked objects:
  9681 ;;		On entry : 0/0
  9682 ;;		On exit  : 0/0
  9683 ;;		Unchanged: 0/0
  9684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9689 ;;Total ram usage:        0 bytes
  9690 ;; Hardware stack levels used:    1
  9691 ;; Hardware stack levels required when called:   10
  9692 ;; This function calls:
  9693 ;;		_DimmerLights_DimmingFunction
  9694 ;;		_getLoad_OK
  9695 ;;		_getMain_All_Error_Status
  9696 ;;		_getMain_All_LightsStatus
  9697 ;;		_setDimmerLights_Main
  9698 ;; This function is called by:
  9699 ;;		_main
  9700 ;; This function uses a non-reentrant model
  9701 ;;
  9702                           
  9703                           
  9704                           ;psect for function _DimmerLights_Main
  9705  14EE                     _DimmerLights_Main:	
  9706                           
  9707                           ;Dimmer_B1.c: 829: if (Dimmer.LoadGO == 1) {
  9708                           
  9709                           ;incstack = 0
  9710                           ; Regs used in _DimmerLights_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9711  14EE  0021               	movlb	1	; select bank1
  9712  14EF  1CC5               	btfss	_Dimmer^(0+128),1
  9713  14F0  2D06               	goto	l5740
  9714                           
  9715                           ;Dimmer_B1.c: 830: if (getLoad_OK() == 1 || getMain_All_Error_Status(0) != 0 || getMain_
      +                          All_LightsStatus() == 0) {
  9716  14F1  3191  21D2  3194   	fcall	_getLoad_OK
  9717  14F4  3A01               	xorlw	1
  9718  14F5  1903               	skipnz
  9719  14F6  2D04               	goto	l442
  9720  14F7  3000               	movlw	0
  9721  14F8  3196  263B  3194   	fcall	_getMain_All_Error_Status
  9722  14FB  3800               	iorlw	0
  9723  14FC  1D03               	skipz
  9724  14FD  2D04               	goto	l442
  9725  14FE  3192  2205  3194   	fcall	_getMain_All_LightsStatus
  9726  1501  3800               	iorlw	0
  9727  1502  1D03               	skipz
  9728  1503  2D06               	goto	l5740
  9729  1504                     l442:	
  9730                           
  9731                           ;Dimmer_B1.c: 831: Dimmer.LoadGO = 0;
  9732  1504  0021               	movlb	1	; select bank1
  9733  1505  10C5               	bcf	_Dimmer^(0+128),1
  9734  1506                     l5740:	
  9735                           
  9736                           ;Dimmer_B1.c: 832: }
  9737                           ;Dimmer_B1.c: 833: }
  9738                           ;Dimmer_B1.c: 838: setDimmerLights_Main(1);
  9739  1506  3001               	movlw	1
  9740  1507  318B  23BC  3194   	fcall	_setDimmerLights_Main
  9741                           
  9742                           ;Dimmer_B1.c: 841: DimmerLights_DimmingFunction(1);
  9743  150A  3001               	movlw	1
  9744  150B  3188  205A         	fcall	_DimmerLights_DimmingFunction
  9745  150D  0008               	return
  9746  150E                     __end_of_DimmerLights_Main:	
  9747                           
  9748                           	psect	text55
  9749  0BBC                     __ptext55:	
  9750 ;; *************** function _setDimmerLights_Main *****************
  9751 ;; Defined at:
  9752 ;;		line 864 in file "../src/Dimmer_B1.c"
  9753 ;; Parameters:    Size  Location     Type
  9754 ;;  lights          1    wreg     unsigned char 
  9755 ;; Auto vars:     Size  Location     Type
  9756 ;;  lights          1    1[BANK1 ] unsigned char 
  9757 ;; Return value:  Size  Location     Type
  9758 ;;		None               void
  9759 ;; Registers used:
  9760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9761 ;; Tracked objects:
  9762 ;;		On entry : 0/0
  9763 ;;		On exit  : 0/0
  9764 ;;		Unchanged: 0/0
  9765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9767 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9769 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9770 ;;Total ram usage:        1 bytes
  9771 ;; Hardware stack levels used:    1
  9772 ;; Hardware stack levels required when called:    9
  9773 ;; This function calls:
  9774 ;;		_DimmerLights_SelectPointer
  9775 ;;		_getDimmerLights_Allow_Condition
  9776 ;;		_getMain_All_LightsStatus
  9777 ;;		_setDimmerLights_Dimming
  9778 ;;		_setDimmerLights_OnOff
  9779 ;; This function is called by:
  9780 ;;		_DimmerLights_Main
  9781 ;; This function uses a non-reentrant model
  9782 ;;
  9783                           
  9784                           
  9785                           ;psect for function _setDimmerLights_Main
  9786  0BBC                     _setDimmerLights_Main:	
  9787                           
  9788                           ;incstack = 0
  9789                           ; Regs used in _setDimmerLights_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9790                           ;setDimmerLights_Main@lights stored from wreg
  9791  0BBC  0021               	movlb	1	; select bank1
  9792  0BBD  00E9               	movwf	setDimmerLights_Main@lights^(0+128)
  9793                           
  9794                           ;Dimmer_B1.c: 866: DimmerLights_SelectPointer(lights);
  9795  0BBE  0869               	movf	setDimmerLights_Main@lights^(0+128),w
  9796  0BBF  3192  2219  318B   	fcall	_DimmerLights_SelectPointer
  9797                           
  9798                           ;Dimmer_B1.c: 867: if (DimmerLights->Trigger == 1) {
  9799  0BC2  087D               	movf	_DimmerLights,w
  9800  0BC3  0086               	movwf	6
  9801  0BC4  3001               	movlw	1	; select bank2/3
  9802  0BC5  0087               	movwf	7
  9803  0BC6  1C81               	btfss	1,1
  9804  0BC7  2BEA               	goto	l5222
  9805                           
  9806                           ;Dimmer_B1.c: 868: if (getDimmerLights_Allow_Condition(lights) == 0) {
  9807  0BC8  0021               	movlb	1	; select bank1
  9808  0BC9  0869               	movf	setDimmerLights_Main@lights^(0+128),w
  9809  0BCA  3193  23EB  318B   	fcall	_getDimmerLights_Allow_Condition
  9810  0BCD  3800               	iorlw	0
  9811  0BCE  1D03               	skipz
  9812  0BCF  0008               	return
  9813                           
  9814                           ;Dimmer_B1.c: 869: DimmerLights->Trigger = 0;
  9815  0BD0  087D               	movf	_DimmerLights,w
  9816  0BD1  0086               	movwf	6
  9817  0BD2  3001               	movlw	1	; select bank2/3
  9818  0BD3  0087               	movwf	7
  9819  0BD4  1081               	bcf	1,1
  9820                           
  9821                           ;Dimmer_B1.c: 870: if (DimmerLights->Switch == 1) {
  9822  0BD5  087D               	movf	_DimmerLights,w
  9823  0BD6  0086               	movwf	6
  9824  0BD7  3001               	movlw	1	; select bank2/3
  9825  0BD8  0087               	movwf	7
  9826  0BD9  1D01               	btfss	1,2
  9827  0BDA  2BE3               	goto	l5220
  9828                           
  9829                           ;Dimmer_B1.c: 871: setDimmerLights_OnOff(lights, 1);
  9830  0BDB  0020               	movlb	0	; select bank0
  9831  0BDC  01ED               	clrf	setDimmerLights_OnOff@command
  9832  0BDD  0AED               	incf	setDimmerLights_OnOff@command,f
  9833  0BDE  0021               	movlb	1	; select bank1
  9834  0BDF  0869               	movf	setDimmerLights_Main@lights^(0+128),w
  9835  0BE0  318E  26B9         	fcall	_setDimmerLights_OnOff
  9836                           
  9837                           ;Dimmer_B1.c: 872: } else {
  9838  0BE2  0008               	return
  9839  0BE3                     l5220:	
  9840                           
  9841                           ;Dimmer_B1.c: 873: setDimmerLights_OnOff(lights, 0);
  9842  0BE3  0020               	movlb	0	; select bank0
  9843  0BE4  01ED               	clrf	setDimmerLights_OnOff@command
  9844  0BE5  0021               	movlb	1	; select bank1
  9845  0BE6  0869               	movf	setDimmerLights_Main@lights^(0+128),w
  9846  0BE7  318E  26B9         	fcall	_setDimmerLights_OnOff
  9847                           
  9848                           ;Dimmer_B1.c: 874: }
  9849                           ;Dimmer_B1.c: 875: }
  9850                           ;Dimmer_B1.c: 876: } else {
  9851  0BE9  0008               	return
  9852  0BEA                     l5222:	
  9853                           
  9854                           ;Dimmer_B1.c: 877: if (getMain_All_LightsStatus() == 1) {
  9855  0BEA  3192  2205  318B   	fcall	_getMain_All_LightsStatus
  9856  0BED  3A01               	xorlw	1
  9857  0BEE  1D03               	skipz
  9858  0BEF  2C18               	goto	l5234
  9859                           
  9860                           ;Dimmer_B1.c: 878: if (DimmerLights->DimmingTrigger == 1) {
  9861  0BF0  087D               	movf	_DimmerLights,w
  9862  0BF1  0086               	movwf	6
  9863  0BF2  3001               	movlw	1	; select bank2/3
  9864  0BF3  0087               	movwf	7
  9865  0BF4  1E01               	btfss	1,4
  9866  0BF5  0008               	return
  9867                           
  9868                           ;Dimmer_B1.c: 879: if (getDimmerLights_Allow_Condition(lights) == 0) {
  9869  0BF6  0021               	movlb	1	; select bank1
  9870  0BF7  0869               	movf	setDimmerLights_Main@lights^(0+128),w
  9871  0BF8  3193  23EB  318B   	fcall	_getDimmerLights_Allow_Condition
  9872  0BFB  3800               	iorlw	0
  9873  0BFC  1D03               	skipz
  9874  0BFD  0008               	return
  9875                           
  9876                           ;Dimmer_B1.c: 880: DimmerLights->DimmingTrigger = 0;
  9877  0BFE  087D               	movf	_DimmerLights,w
  9878  0BFF  0086               	movwf	6
  9879  0C00  3001               	movlw	1	; select bank2/3
  9880  0C01  0087               	movwf	7
  9881  0C02  1201               	bcf	1,4
  9882                           
  9883                           ;Dimmer_B1.c: 881: if (DimmerLights->DimmingSwitch == 1) {
  9884  0C03  087D               	movf	_DimmerLights,w
  9885  0C04  0086               	movwf	6
  9886  0C05  3001               	movlw	1	; select bank2/3
  9887  0C06  0087               	movwf	7
  9888  0C07  1E81               	btfss	1,5
  9889  0C08  2C11               	goto	l5232
  9890                           
  9891                           ;Dimmer_B1.c: 882: setDimmerLights_Dimming(lights, 1);
  9892  0C09  0020               	movlb	0	; select bank0
  9893  0C0A  01E5               	clrf	setDimmerLights_Dimming@status
  9894  0C0B  0AE5               	incf	setDimmerLights_Dimming@status,f
  9895  0C0C  0021               	movlb	1	; select bank1
  9896  0C0D  0869               	movf	setDimmerLights_Main@lights^(0+128),w
  9897  0C0E  3197  274B         	fcall	_setDimmerLights_Dimming
  9898                           
  9899                           ;Dimmer_B1.c: 883: } else {
  9900  0C10  0008               	return
  9901  0C11                     l5232:	
  9902                           
  9903                           ;Dimmer_B1.c: 884: setDimmerLights_Dimming(lights, 0);
  9904  0C11  0020               	movlb	0	; select bank0
  9905  0C12  01E5               	clrf	setDimmerLights_Dimming@status
  9906  0C13  0021               	movlb	1	; select bank1
  9907  0C14  0869               	movf	setDimmerLights_Main@lights^(0+128),w
  9908  0C15  3197  274B         	fcall	_setDimmerLights_Dimming
  9909                           
  9910                           ;Dimmer_B1.c: 885: }
  9911                           ;Dimmer_B1.c: 886: }
  9912                           ;Dimmer_B1.c: 887: }
  9913                           ;Dimmer_B1.c: 888: } else {
  9914  0C17  0008               	return
  9915  0C18                     l5234:	
  9916                           
  9917                           ;Dimmer_B1.c: 889: if (DimmerLights->DimmingTrigger == 1) {
  9918  0C18  087D               	movf	_DimmerLights,w
  9919  0C19  0086               	movwf	6
  9920  0C1A  3001               	movlw	1	; select bank2/3
  9921  0C1B  0087               	movwf	7
  9922  0C1C  1E01               	btfss	1,4
  9923  0C1D  0008               	return
  9924                           
  9925                           ;Dimmer_B1.c: 890: DimmerLights->DimmingTrigger = 0;
  9926  0C1E  087D               	movf	_DimmerLights,w
  9927  0C1F  0086               	movwf	6
  9928  0C20  3001               	movlw	1	; select bank2/3
  9929  0C21  0087               	movwf	7
  9930  0C22  1201               	bcf	1,4
  9931  0C23  0008               	return
  9932  0C24                     __end_of_setDimmerLights_Main:	
  9933                           
  9934                           	psect	text56
  9935  0EB9                     __ptext56:	
  9936 ;; *************** function _setDimmerLights_OnOff *****************
  9937 ;; Defined at:
  9938 ;;		line 898 in file "../src/Dimmer_B1.c"
  9939 ;; Parameters:    Size  Location     Type
  9940 ;;  lights          1    wreg     unsigned char 
  9941 ;;  command         1   77[BANK0 ] unsigned char 
  9942 ;; Auto vars:     Size  Location     Type
  9943 ;;  lights          1    0[BANK1 ] unsigned char 
  9944 ;; Return value:  Size  Location     Type
  9945 ;;		None               void
  9946 ;; Registers used:
  9947 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9948 ;; Tracked objects:
  9949 ;;		On entry : 0/0
  9950 ;;		On exit  : 0/0
  9951 ;;		Unchanged: 0/0
  9952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9953 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9954 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9955 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9956 ;;      Totals:         0       3       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9957 ;;Total ram usage:        4 bytes
  9958 ;; Hardware stack levels used:    1
  9959 ;; Hardware stack levels required when called:    8
  9960 ;; This function calls:
  9961 ;;		_getCmd_Status
  9962 ;;		_getDelayOff_GO
  9963 ;;		_getDimmerLights_PercentToValue
  9964 ;;		_getMain_All_LightsStatus
  9965 ;;		_setCmd_Status
  9966 ;;		_setDelayOff_GO
  9967 ;;		_setDimmerIntr_ControlStatus
  9968 ;;		_setDimmerIntr_DimmingValue
  9969 ;;		_setDimmerIntr_Dimming_RF
  9970 ;;		_setDimmerLights_DimmingClose
  9971 ;;		_setDimmerLights_Line
  9972 ;;		_setLED
  9973 ;;		_setProductData
  9974 ;; This function is called by:
  9975 ;;		_setDimmerLights_Main
  9976 ;; This function uses a non-reentrant model
  9977 ;;
  9978                           
  9979                           
  9980                           ;psect for function _setDimmerLights_OnOff
  9981  0EB9                     _setDimmerLights_OnOff:	
  9982                           
  9983                           ;incstack = 0
  9984                           ; Regs used in _setDimmerLights_OnOff: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9985                           ;setDimmerLights_OnOff@lights stored from wreg
  9986  0EB9  0021               	movlb	1	; select bank1
  9987  0EBA  00E8               	movwf	setDimmerLights_OnOff@lights^(0+128)
  9988                           
  9989                           ;Dimmer_B1.c: 900: if (command == 1) {
  9990  0EBB  0020               	movlb	0	; select bank0
  9991  0EBC  086D               	movf	setDimmerLights_OnOff@command,w
  9992  0EBD  3A01               	xorlw	1
  9993  0EBE  1D03               	skipz
  9994  0EBF  2F06               	goto	l4966
  9995                           
  9996                           ;Dimmer_B1.c: 902: setDimmerIntr_ControlStatus(lights, 1);
  9997  0EC0  01A0               	clrf	setDimmerIntr_ControlStatus@command
  9998  0EC1  0AA0               	incf	setDimmerIntr_ControlStatus@command,f
  9999  0EC2  0021               	movlb	1	; select bank1
 10000  0EC3  0868               	movf	setDimmerLights_OnOff@lights^(0+128),w
 10001  0EC4  3194  2417  318E   	fcall	_setDimmerIntr_ControlStatus
 10002                           
 10003                           ;Dimmer_B1.c: 905: Dimmer.Load_Status = 1;
 10004  0EC7  0021               	movlb	1	; select bank1
 10005  0EC8  1545               	bsf	_Dimmer^(0+128),2
 10006                           
 10007                           ;Dimmer_B1.c: 906: setDimmerLights_Line(lights);
 10008  0EC9  0868               	movf	setDimmerLights_OnOff@lights^(0+128),w
 10009  0ECA  3193  2341  318E   	fcall	_setDimmerLights_Line
 10010                           
 10011                           ;Dimmer_B1.c: 912: setLED(lights, 0);
 10012  0ECD  0020               	movlb	0	; select bank0
 10013  0ECE  01A2               	clrf	setLED@command
 10014  0ECF  0021               	movlb	1	; select bank1
 10015  0ED0  0868               	movf	setDimmerLights_OnOff@lights^(0+128),w
 10016  0ED1  3196  266E  318E   	fcall	_setLED
 10017                           
 10018                           ;Dimmer_B1.c: 913: ;;
 10019                           ;Dimmer_B1.c: 933: if (DimmerLights->DimmingRun == 1) {
 10020  0ED4  0A7D               	incf	_DimmerLights,w
 10021  0ED5  0086               	movwf	6
 10022  0ED6  3001               	movlw	1	; select bank2/3
 10023  0ED7  0087               	movwf	7
 10024  0ED8  1F01               	btfss	1,6
 10025  0ED9  2EE8               	goto	l4958
 10026                           
 10027                           ;Dimmer_B1.c: 934: DimmerLights->DimmingRun = 0;
 10028  0EDA  0A7D               	incf	_DimmerLights,w
 10029  0EDB  0086               	movwf	6
 10030  0EDC  3001               	movlw	1	; select bank2/3
 10031  0EDD  0087               	movwf	7
 10032  0EDE  1301               	bcf	1,6
 10033                           
 10034                           ;Dimmer_B1.c: 935: ;;
 10035                           ;Dimmer_B1.c: 936: setDimmerIntr_Dimming_RF(lights, 1);
 10036  0EDF  0020               	movlb	0	; select bank0
 10037  0EE0  01A0               	clrf	setDimmerIntr_Dimming_RF@command
 10038  0EE1  0AA0               	incf	setDimmerIntr_Dimming_RF@command,f
 10039  0EE2  0021               	movlb	1	; select bank1
 10040  0EE3  0868               	movf	setDimmerLights_OnOff@lights^(0+128),w
 10041  0EE4  3194  242F  318E   	fcall	_setDimmerIntr_Dimming_RF
 10042                           
 10043                           ;Dimmer_B1.c: 937: } else {
 10044  0EE7  2EFF               	goto	l4960
 10045  0EE8                     l4958:	
 10046                           
 10047                           ;Dimmer_B1.c: 938: setDimmerIntr_DimmingValue(lights, getDimmerLights_PercentToValue(pro
      +                          duct->Data[20 + lights]));
 10048  0EE8  0021               	movlb	1	; select bank1
 10049  0EE9  0868               	movf	setDimmerLights_OnOff@lights^(0+128),w
 10050  0EEA  3E14               	addlw	20
 10051  0EEB  076E               	addwf	_product^(0+128),w
 10052  0EEC  0020               	movlb	0	; select bank0
 10053  0EED  00EE               	movwf	??_setDimmerLights_OnOff
 10054  0EEE  086E               	movf	??_setDimmerLights_OnOff,w
 10055  0EEF  0086               	movwf	6
 10056  0EF0  3001               	movlw	1	; select bank2/3
 10057  0EF1  0087               	movwf	7
 10058  0EF2  0801               	movf	1,w
 10059  0EF3  318A  22F2  318E   	fcall	_getDimmerLights_PercentToValue
 10060  0EF6  0020               	movlb	0	; select bank0
 10061  0EF7  00EF               	movwf	??_setDimmerLights_OnOff+1
 10062  0EF8  086F               	movf	??_setDimmerLights_OnOff+1,w
 10063  0EF9  00E2               	movwf	setDimmerIntr_DimmingValue@value
 10064  0EFA  0021               	movlb	1	; select bank1
 10065  0EFB  0868               	movf	setDimmerLights_OnOff@lights^(0+128),w
 10066  0EFC  3192  2268  318E   	fcall	_setDimmerIntr_DimmingValue
 10067  0EFF                     l4960:	
 10068                           
 10069                           ;Dimmer_B1.c: 941: }
 10070                           ;Dimmer_B1.c: 943: if (lights == 1) {
 10071  0EFF  0021               	movlb	1	; select bank1
 10072  0F00  0868               	movf	setDimmerLights_OnOff@lights^(0+128),w
 10073  0F01  3A01               	xorlw	1
 10074  0F02  1D03               	skipz
 10075  0F03  2F35               	goto	l4980
 10076                           
 10077                           ;Dimmer_B1.c: 945: DimmerIntr1.TuneGO = 1;
 10078  0F04  173A               	bsf	(_DimmerIntr1^(0+128)+1),6
 10079                           
 10080                           ;Dimmer_B1.c: 951: }
 10081                           ;Dimmer_B1.c: 957: } else if (command == 0) {
 10082                           
 10083                           ;Dimmer_B1.c: 947: } else if (lights == 2) {
 10084  0F05  2F35               	goto	l4980
 10085  0F06                     l4966:	
 10086  0F06  0020               	movlb	0	; select bank0
 10087  0F07  08ED               	movf	setDimmerLights_OnOff@command,f
 10088  0F08  1D03               	skipz
 10089  0F09  2F35               	goto	l4980
 10090                           
 10091                           ;Dimmer_B1.c: 959: setDimmerIntr_ControlStatus(lights, 0);
 10092  0F0A  01A0               	clrf	setDimmerIntr_ControlStatus@command
 10093  0F0B  0021               	movlb	1	; select bank1
 10094  0F0C  0868               	movf	setDimmerLights_OnOff@lights^(0+128),w
 10095  0F0D  3194  2417  318E   	fcall	_setDimmerIntr_ControlStatus
 10096                           
 10097                           ;Dimmer_B1.c: 961: Dimmer.Load_Status = 0;
 10098  0F10  0021               	movlb	1	; select bank1
 10099  0F11  1145               	bcf	_Dimmer^(0+128),2
 10100                           
 10101                           ;Dimmer_B1.c: 962: setDimmerLights_Line(0);
 10102  0F12  3000               	movlw	0
 10103  0F13  3193  2341  318E   	fcall	_setDimmerLights_Line
 10104                           
 10105                           ;Dimmer_B1.c: 966: if (getDelayOff_GO(lights) == 1) {
 10106  0F16  0021               	movlb	1	; select bank1
 10107  0F17  0868               	movf	setDimmerLights_OnOff@lights^(0+128),w
 10108  0F18  3192  22FD  318E   	fcall	_getDelayOff_GO
 10109  0F1B  3A01               	xorlw	1
 10110  0F1C  1D03               	skipz
 10111  0F1D  2F26               	goto	l469
 10112                           
 10113                           ;Dimmer_B1.c: 967: setDelayOff_GO(lights, 0, 0);
 10114  0F1E  0020               	movlb	0	; select bank0
 10115  0F1F  01E5               	clrf	setDelayOff_GO@command
 10116  0F20  01E6               	clrf	setDelayOff_GO@value
 10117  0F21  0021               	movlb	1	; select bank1
 10118  0F22  0868               	movf	setDimmerLights_OnOff@lights^(0+128),w
 10119  0F23  318D  25A0  318E   	fcall	_setDelayOff_GO
 10120  0F26                     l469:	
 10121                           
 10122                           ;Dimmer_B1.c: 968: }
 10123                           ;Dimmer_B1.c: 973: setLED(lights, 1);
 10124  0F26  0020               	movlb	0	; select bank0
 10125  0F27  01A2               	clrf	setLED@command
 10126  0F28  0AA2               	incf	setLED@command,f
 10127  0F29  0021               	movlb	1	; select bank1
 10128  0F2A  0868               	movf	setDimmerLights_OnOff@lights^(0+128),w
 10129  0F2B  3196  266E  318E   	fcall	_setLED
 10130                           
 10131                           ;Dimmer_B1.c: 974: ;;
 10132                           ;Dimmer_B1.c: 978: if (lights == 1) {
 10133  0F2E  0021               	movlb	1	; select bank1
 10134  0F2F  0868               	movf	setDimmerLights_OnOff@lights^(0+128),w
 10135  0F30  3A01               	xorlw	1
 10136  0F31  1D03               	skipz
 10137  0F32  2F35               	goto	l4980
 10138                           
 10139                           ;Dimmer_B1.c: 979: RB1 = 0;
 10140  0F33  0020               	movlb	0	; select bank0
 10141  0F34  108D               	bcf	13,1	;volatile
 10142  0F35                     l4980:	
 10143                           
 10144                           ;Dimmer_B1.c: 981: }
 10145                           ;Dimmer_B1.c: 992: }
 10146                           ;Dimmer_B1.c: 994: setDimmerLights_DimmingClose();
 10147  0F35  3191  21AB  318E   	fcall	_setDimmerLights_DimmingClose
 10148                           
 10149                           ;Dimmer_B1.c: 996: ;;
 10150                           ;Dimmer_B1.c: 998: if (getCmd_Status(1) == 1) {
 10151  0F38  3001               	movlw	1
 10152  0F39  3193  2353  318E   	fcall	_getCmd_Status
 10153  0F3C  3A01               	xorlw	1
 10154  0F3D  1D03               	skipz
 10155  0F3E  0008               	return
 10156                           
 10157                           ;Dimmer_B1.c: 999: if (getMain_All_LightsStatus() == 0) {
 10158  0F3F  3192  2205  318E   	fcall	_getMain_All_LightsStatus
 10159  0F42  3800               	iorlw	0
 10160  0F43  1D03               	skipz
 10161  0F44  0008               	return
 10162                           
 10163                           ;Dimmer_B1.c: 1000: setCmd_Status(1, 0);
 10164  0F45  0020               	movlb	0	; select bank0
 10165  0F46  01A0               	clrf	setCmd_Status@cmd
 10166  0F47  3001               	movlw	1
 10167  0F48  3188  2000  318E   	fcall	_setCmd_Status
 10168                           
 10169                           ;Dimmer_B1.c: 1001: setProductData(11, 0);
 10170  0F4B  0020               	movlb	0	; select bank0
 10171  0F4C  01E2               	clrf	setProductData@value
 10172  0F4D  300B               	movlw	11
 10173  0F4E  3192  225C  318E   	fcall	_setProductData
 10174                           
 10175                           ;Dimmer_B1.c: 1002: setProductData(17, 0);
 10176  0F51  0020               	movlb	0	; select bank0
 10177  0F52  01E2               	clrf	setProductData@value
 10178  0F53  3011               	movlw	17
 10179  0F54  3192  225C         	fcall	_setProductData
 10180                           
 10181                           ;Dimmer_B1.c: 1004: }
 10182                           ;Dimmer_B1.c: 1005: } else {
 10183                           
 10184                           ;Dimmer_B1.c: 1003: ;;
 10185  0F56  0008               	return
 10186  0F57                     __end_of_setDimmerLights_OnOff:	
 10187                           ;Dimmer_B1.c: 1006: ;;
 10188                           
 10189                           
 10190                           	psect	text57
 10191  166E                     __ptext57:	
 10192 ;; *************** function _setLED *****************
 10193 ;; Defined at:
 10194 ;;		line 81 in file "../src/LED_B1.c"
 10195 ;; Parameters:    Size  Location     Type
 10196 ;;  led             1    wreg     unsigned char 
 10197 ;;  command         1    2[BANK0 ] unsigned char 
 10198 ;; Auto vars:     Size  Location     Type
 10199 ;;  led             1    3[BANK0 ] unsigned char 
 10200 ;; Return value:  Size  Location     Type
 10201 ;;		None               void
 10202 ;; Registers used:
 10203 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10204 ;; Tracked objects:
 10205 ;;		On entry : 0/0
 10206 ;;		On exit  : 0/0
 10207 ;;		Unchanged: 0/0
 10208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10209 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10210 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10212 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10213 ;;Total ram usage:        2 bytes
 10214 ;; Hardware stack levels used:    1
 10215 ;; Hardware stack levels required when called:    6
 10216 ;; This function calls:
 10217 ;;		_LedPointSelect
 10218 ;; This function is called by:
 10219 ;;		_setDimmerLights_OnOff
 10220 ;;		_setLED_Initialization
 10221 ;;		_Exception_Main
 10222 ;;		_setSw_Initialization
 10223 ;; This function uses a non-reentrant model
 10224 ;;
 10225                           
 10226                           
 10227                           ;psect for function _setLED
 10228  166E                     _setLED:	
 10229                           
 10230                           ;incstack = 0
 10231                           ; Regs used in _setLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10232                           ;setLED@led stored from wreg
 10233  166E  0020               	movlb	0	; select bank0
 10234  166F  00A3               	movwf	setLED@led
 10235                           
 10236                           ;LED_B1.c: 82: LedPointSelect(led);
 10237  1670  0823               	movf	setLED@led,w
 10238  1671  3192  2274  3196   	fcall	_LedPointSelect
 10239                           
 10240                           ;LED_B1.c: 83: if (command == 0) {
 10241  1674  0020               	movlb	0	; select bank0
 10242  1675  08A2               	movf	setLED@command,f
 10243  1676  1D03               	skipz
 10244  1677  2E7D               	goto	l4752
 10245                           
 10246                           ;LED_B1.c: 112: if (led == 99) {
 10247  1678  0823               	movf	setLED@led,w
 10248  1679  3A63               	xorlw	99
 10249  167A  1D03               	skipz
 10250  167B  2E7D               	goto	l4752
 10251                           
 10252                           ;LED_B1.c: 116: RB5 = 1;
 10253  167C  168D               	bsf	13,5	;volatile
 10254  167D                     l4752:	
 10255                           
 10256                           ;LED_B1.c: 118: }
 10257                           ;LED_B1.c: 120: }
 10258                           ;LED_B1.c: 121: if (command == 1) {
 10259  167D  0822               	movf	setLED@command,w
 10260  167E  3A01               	xorlw	1
 10261  167F  1D03               	skipz
 10262  1680  2E86               	goto	l4758
 10263                           
 10264                           ;LED_B1.c: 150: if (led == 99) {
 10265  1681  0823               	movf	setLED@led,w
 10266  1682  3A63               	xorlw	99
 10267  1683  1D03               	skipz
 10268  1684  2E86               	goto	l4758
 10269                           
 10270                           ;LED_B1.c: 154: RB5 = 0;
 10271  1685  128D               	bcf	13,5	;volatile
 10272  1686                     l4758:	
 10273                           
 10274                           ;LED_B1.c: 156: }
 10275                           ;LED_B1.c: 158: }
 10276                           ;LED_B1.c: 159: if (command == 10) {
 10277  1686  0822               	movf	setLED@command,w
 10278  1687  3A0A               	xorlw	10
 10279  1688  1D03               	skipz
 10280  1689  2E9A               	goto	l4766
 10281                           
 10282                           ;LED_B1.c: 160: LED->GO = 0;
 10283  168A  0021               	movlb	1	; select bank1
 10284  168B  0852               	movf	_LED^(0+128),w
 10285  168C  0086               	movwf	6
 10286  168D  0187               	clrf	7
 10287  168E  1081               	bcf	1,1
 10288                           
 10289                           ;LED_B1.c: 161: LED->Time = 0;
 10290  168F  0A52               	incf	_LED^(0+128),w
 10291  1690  0086               	movwf	6
 10292  1691  0187               	clrf	7
 10293  1692  3000               	movlw	0
 10294  1693  3FC0               	movwi [0]fsr1
 10295  1694  3FC1               	movwi [1]fsr1
 10296                           
 10297                           ;LED_B1.c: 190: if (led == 99) {
 10298  1695  0020               	movlb	0	; select bank0
 10299  1696  0823               	movf	setLED@led,w
 10300  1697  3A63               	xorlw	99
 10301  1698  1903               	btfsc	3,2
 10302                           
 10303                           ;LED_B1.c: 194: RB5 = 1;
 10304  1699  168D               	bsf	13,5	;volatile
 10305  169A                     l4766:	
 10306                           
 10307                           ;LED_B1.c: 196: }
 10308                           ;LED_B1.c: 198: }
 10309                           ;LED_B1.c: 199: if (command == 11) {
 10310  169A  0822               	movf	setLED@command,w
 10311  169B  3A0B               	xorlw	11
 10312  169C  1D03               	skipz
 10313  169D  0008               	return
 10314                           
 10315                           ;LED_B1.c: 200: LED->GO = 1;
 10316  169E  0021               	movlb	1	; select bank1
 10317  169F  0852               	movf	_LED^(0+128),w
 10318  16A0  0086               	movwf	6
 10319  16A1  0187               	clrf	7
 10320  16A2  1481               	bsf	1,1
 10321  16A3  0008               	return
 10322  16A4                     __end_of_setLED:	
 10323                           
 10324                           	psect	text58
 10325  1274                     __ptext58:	
 10326 ;; *************** function _LedPointSelect *****************
 10327 ;; Defined at:
 10328 ;;		line 7 in file "../src/LED_B1.c"
 10329 ;; Parameters:    Size  Location     Type
 10330 ;;  led             1    wreg     unsigned char 
 10331 ;; Auto vars:     Size  Location     Type
 10332 ;;  led             1    1[BANK0 ] unsigned char 
 10333 ;; Return value:  Size  Location     Type
 10334 ;;		None               void
 10335 ;; Registers used:
 10336 ;;		wreg
 10337 ;; Tracked objects:
 10338 ;;		On entry : 0/0
 10339 ;;		On exit  : 0/0
 10340 ;;		Unchanged: 0/0
 10341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10343 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10344 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10345 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10346 ;;Total ram usage:        2 bytes
 10347 ;; Hardware stack levels used:    1
 10348 ;; Hardware stack levels required when called:    5
 10349 ;; This function calls:
 10350 ;;		Nothing
 10351 ;; This function is called by:
 10352 ;;		_setLED_Initialization
 10353 ;;		_setLED
 10354 ;;		_setLED_Main
 10355 ;; This function uses a non-reentrant model
 10356 ;;
 10357                           
 10358                           
 10359                           ;psect for function _LedPointSelect
 10360  1274                     _LedPointSelect:	
 10361                           
 10362                           ;incstack = 0
 10363                           ; Regs used in _LedPointSelect: [wreg]
 10364                           ;LedPointSelect@led stored from wreg
 10365  1274  0020               	movlb	0	; select bank0
 10366  1275  00A1               	movwf	LedPointSelect@led
 10367                           
 10368                           ;LED_B1.c: 24: if (led == 99) {
 10369  1276  0821               	movf	LedPointSelect@led,w
 10370  1277  3A63               	xorlw	99
 10371  1278  1D03               	skipz
 10372  1279  0008               	return
 10373                           
 10374                           ;LED_B1.c: 25: LED = &VarErrLED;
 10375  127A  30E4               	movlw	_VarErrLED& (0+255)
 10376  127B  00A0               	movwf	??_LedPointSelect
 10377  127C  0820               	movf	??_LedPointSelect,w
 10378  127D  0021               	movlb	1	; select bank1
 10379  127E  00D2               	movwf	_LED^(0+128)
 10380  127F  0008               	return
 10381  1280                     __end_of_LedPointSelect:	
 10382                           
 10383                           	psect	text59
 10384  11AB                     __ptext59:	
 10385 ;; *************** function _setDimmerLights_DimmingClose *****************
 10386 ;; Defined at:
 10387 ;;		line 1775 in file "../src/Dimmer_B1.c"
 10388 ;; Parameters:    Size  Location     Type
 10389 ;;		None
 10390 ;; Auto vars:     Size  Location     Type
 10391 ;;		None
 10392 ;; Return value:  Size  Location     Type
 10393 ;;		None               void
 10394 ;; Registers used:
 10395 ;;		wreg, status,2, status,0, pclath, cstack
 10396 ;; Tracked objects:
 10397 ;;		On entry : 0/0
 10398 ;;		On exit  : 0/0
 10399 ;;		Unchanged: 0/0
 10400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10405 ;;Total ram usage:        0 bytes
 10406 ;; Hardware stack levels used:    1
 10407 ;; Hardware stack levels required when called:    6
 10408 ;; This function calls:
 10409 ;;		_setDimmerIntr_Dimming_Sw
 10410 ;; This function is called by:
 10411 ;;		_setDimmerLights_OnOff
 10412 ;; This function uses a non-reentrant model
 10413 ;;
 10414                           
 10415                           
 10416                           ;psect for function _setDimmerLights_DimmingClose
 10417  11AB                     _setDimmerLights_DimmingClose:	
 10418                           
 10419                           ;Dimmer_B1.c: 1777: setDimmerIntr_Dimming_Sw(1, 0);
 10420                           
 10421                           ;incstack = 0
 10422                           ; Regs used in _setDimmerLights_DimmingClose: [wreg+status,2+status,0+pclath+cstack]
 10423  11AB  0020               	movlb	0	; select bank0
 10424  11AC  01A0               	clrf	setDimmerIntr_Dimming_Sw@command
 10425  11AD  3001               	movlw	1
 10426  11AE  3194  2401         	fcall	_setDimmerIntr_Dimming_Sw
 10427  11B0  0008               	return
 10428  11B1                     __end_of_setDimmerLights_DimmingClose:	
 10429                           
 10430                           	psect	text60
 10431  142F                     __ptext60:	
 10432 ;; *************** function _setDimmerIntr_Dimming_RF *****************
 10433 ;; Defined at:
 10434 ;;		line 263 in file "../src/Dimmer_B1.c"
 10435 ;; Parameters:    Size  Location     Type
 10436 ;;  lights          1    wreg     unsigned char 
 10437 ;;  command         1    0[BANK0 ] unsigned char 
 10438 ;; Auto vars:     Size  Location     Type
 10439 ;;  lights          1    2[BANK0 ] unsigned char 
 10440 ;; Return value:  Size  Location     Type
 10441 ;;		None               void
 10442 ;; Registers used:
 10443 ;;		wreg, status,2, status,0
 10444 ;; Tracked objects:
 10445 ;;		On entry : 0/0
 10446 ;;		On exit  : 0/0
 10447 ;;		Unchanged: 0/0
 10448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10449 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10450 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10451 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10452 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10453 ;;Total ram usage:        3 bytes
 10454 ;; Hardware stack levels used:    1
 10455 ;; Hardware stack levels required when called:    5
 10456 ;; This function calls:
 10457 ;;		Nothing
 10458 ;; This function is called by:
 10459 ;;		_setDimmerLights_OnOff
 10460 ;; This function uses a non-reentrant model
 10461 ;;
 10462                           
 10463                           
 10464                           ;psect for function _setDimmerIntr_Dimming_RF
 10465  142F                     _setDimmerIntr_Dimming_RF:	
 10466                           
 10467                           ;incstack = 0
 10468                           ; Regs used in _setDimmerIntr_Dimming_RF: [wreg+status,2+status,0]
 10469                           ;setDimmerIntr_Dimming_RF@lights stored from wreg
 10470  142F  0020               	movlb	0	; select bank0
 10471  1430  00A2               	movwf	setDimmerIntr_Dimming_RF@lights
 10472                           
 10473                           ;Dimmer_B1.c: 265: if (lights == 1) {
 10474  1431  0822               	movf	setDimmerIntr_Dimming_RF@lights,w
 10475  1432  3A01               	xorlw	1
 10476  1433  1D03               	skipz
 10477  1434  0008               	return
 10478                           
 10479                           ;Dimmer_B1.c: 266: DimmerIntr1.Dimming_RF = command == 1 ? 1 : 0;
 10480  1435  0820               	movf	setDimmerIntr_Dimming_RF@command,w
 10481  1436  3A01               	xorlw	1
 10482  1437  3000               	movlw	0
 10483  1438  1903               	skipnz
 10484  1439  3001               	movlw	1
 10485  143A  00A1               	movwf	??_setDimmerIntr_Dimming_RF
 10486  143B  0EA1               	swapf	??_setDimmerIntr_Dimming_RF,f
 10487  143C  0DA1               	rlf	??_setDimmerIntr_Dimming_RF,f
 10488  143D  0DA1               	rlf	??_setDimmerIntr_Dimming_RF,f
 10489  143E  0021               	movlb	1	; select bank1
 10490  143F  0839               	movf	_DimmerIntr1^(0+128),w
 10491  1440  0020               	movlb	0	; select bank0
 10492  1441  0621               	xorwf	??_setDimmerIntr_Dimming_RF,w
 10493  1442  39BF               	andlw	-65
 10494  1443  0621               	xorwf	??_setDimmerIntr_Dimming_RF,w
 10495  1444  0021               	movlb	1	; select bank1
 10496  1445  00B9               	movwf	_DimmerIntr1^(0+128)
 10497  1446  0008               	return
 10498  1447                     __end_of_setDimmerIntr_Dimming_RF:	
 10499                           
 10500                           	psect	text61
 10501  1268                     __ptext61:	
 10502 ;; *************** function _setDimmerIntr_DimmingValue *****************
 10503 ;; Defined at:
 10504 ;;		line 107 in file "../src/Dimmer_B1.c"
 10505 ;; Parameters:    Size  Location     Type
 10506 ;;  lights          1    wreg     unsigned char 
 10507 ;;  value           1   66[BANK0 ] unsigned char 
 10508 ;; Auto vars:     Size  Location     Type
 10509 ;;  lights          1   68[BANK0 ] unsigned char 
 10510 ;; Return value:  Size  Location     Type
 10511 ;;		None               void
 10512 ;; Registers used:
 10513 ;;		wreg
 10514 ;; Tracked objects:
 10515 ;;		On entry : 0/0
 10516 ;;		On exit  : 0/0
 10517 ;;		Unchanged: 0/0
 10518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10519 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10520 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10521 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10522 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10523 ;;Total ram usage:        3 bytes
 10524 ;; Hardware stack levels used:    1
 10525 ;; Hardware stack levels required when called:    5
 10526 ;; This function calls:
 10527 ;;		Nothing
 10528 ;; This function is called by:
 10529 ;;		_setDimmerLights_OnOff
 10530 ;; This function uses a non-reentrant model
 10531 ;;
 10532                           
 10533                           
 10534                           ;psect for function _setDimmerIntr_DimmingValue
 10535  1268                     _setDimmerIntr_DimmingValue:	
 10536                           
 10537                           ;incstack = 0
 10538                           ; Regs used in _setDimmerIntr_DimmingValue: [wreg]
 10539                           ;setDimmerIntr_DimmingValue@lights stored from wreg
 10540  1268  0020               	movlb	0	; select bank0
 10541  1269  00E4               	movwf	setDimmerIntr_DimmingValue@lights
 10542                           
 10543                           ;Dimmer_B1.c: 109: if (lights == 1) {
 10544  126A  0864               	movf	setDimmerIntr_DimmingValue@lights,w
 10545  126B  3A01               	xorlw	1
 10546  126C  1D03               	skipz
 10547  126D  0008               	return
 10548                           
 10549                           ;Dimmer_B1.c: 110: DimmerIntr1.DimmingValue = value;
 10550  126E  0862               	movf	setDimmerIntr_DimmingValue@value,w
 10551  126F  00E3               	movwf	??_setDimmerIntr_DimmingValue
 10552  1270  0863               	movf	??_setDimmerIntr_DimmingValue,w
 10553  1271  0021               	movlb	1	; select bank1
 10554  1272  00BE               	movwf	(_DimmerIntr1^(0+128)+5)
 10555  1273  0008               	return
 10556  1274                     __end_of_setDimmerIntr_DimmingValue:	
 10557                           
 10558                           	psect	text62
 10559  1417                     __ptext62:	
 10560 ;; *************** function _setDimmerIntr_ControlStatus *****************
 10561 ;; Defined at:
 10562 ;;		line 89 in file "../src/Dimmer_B1.c"
 10563 ;; Parameters:    Size  Location     Type
 10564 ;;  lights          1    wreg     unsigned char 
 10565 ;;  command         1    0[BANK0 ] unsigned char 
 10566 ;; Auto vars:     Size  Location     Type
 10567 ;;  lights          1    2[BANK0 ] unsigned char 
 10568 ;; Return value:  Size  Location     Type
 10569 ;;		None               void
 10570 ;; Registers used:
 10571 ;;		wreg, status,2, status,0
 10572 ;; Tracked objects:
 10573 ;;		On entry : 0/0
 10574 ;;		On exit  : 0/0
 10575 ;;		Unchanged: 0/0
 10576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10577 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10578 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10579 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10580 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10581 ;;Total ram usage:        3 bytes
 10582 ;; Hardware stack levels used:    1
 10583 ;; Hardware stack levels required when called:    5
 10584 ;; This function calls:
 10585 ;;		Nothing
 10586 ;; This function is called by:
 10587 ;;		_setDimmerLights_OnOff
 10588 ;; This function uses a non-reentrant model
 10589 ;;
 10590                           
 10591                           
 10592                           ;psect for function _setDimmerIntr_ControlStatus
 10593  1417                     _setDimmerIntr_ControlStatus:	
 10594                           
 10595                           ;incstack = 0
 10596                           ; Regs used in _setDimmerIntr_ControlStatus: [wreg+status,2+status,0]
 10597                           ;setDimmerIntr_ControlStatus@lights stored from wreg
 10598  1417  0020               	movlb	0	; select bank0
 10599  1418  00A2               	movwf	setDimmerIntr_ControlStatus@lights
 10600                           
 10601                           ;Dimmer_B1.c: 91: if (lights == 1) {
 10602  1419  0822               	movf	setDimmerIntr_ControlStatus@lights,w
 10603  141A  3A01               	xorlw	1
 10604  141B  1D03               	skipz
 10605  141C  0008               	return
 10606                           
 10607                           ;Dimmer_B1.c: 92: DimmerIntr1.ControlStatus = command == 1 ? 1 : 0;
 10608  141D  0820               	movf	setDimmerIntr_ControlStatus@command,w
 10609  141E  3A01               	xorlw	1
 10610  141F  3000               	movlw	0
 10611  1420  1903               	skipnz
 10612  1421  3001               	movlw	1
 10613  1422  00A1               	movwf	??_setDimmerIntr_ControlStatus
 10614  1423  0DA1               	rlf	??_setDimmerIntr_ControlStatus,f
 10615  1424  0DA1               	rlf	??_setDimmerIntr_ControlStatus,f
 10616  1425  0DA1               	rlf	??_setDimmerIntr_ControlStatus,f
 10617  1426  0021               	movlb	1	; select bank1
 10618  1427  0839               	movf	_DimmerIntr1^(0+128),w
 10619  1428  0020               	movlb	0	; select bank0
 10620  1429  0621               	xorwf	??_setDimmerIntr_ControlStatus,w
 10621  142A  39F7               	andlw	-9
 10622  142B  0621               	xorwf	??_setDimmerIntr_ControlStatus,w
 10623  142C  0021               	movlb	1	; select bank1
 10624  142D  00B9               	movwf	_DimmerIntr1^(0+128)
 10625  142E  0008               	return
 10626  142F                     __end_of_setDimmerIntr_ControlStatus:	
 10627                           
 10628                           	psect	text63
 10629  0DA0                     __ptext63:	
 10630 ;; *************** function _setDelayOff_GO *****************
 10631 ;; Defined at:
 10632 ;;		line 87 in file "../src/DelayOff_B1.c"
 10633 ;; Parameters:    Size  Location     Type
 10634 ;;  sw              1    wreg     unsigned char 
 10635 ;;  command         1   69[BANK0 ] unsigned char 
 10636 ;;  value           1   70[BANK0 ] unsigned char 
 10637 ;; Auto vars:     Size  Location     Type
 10638 ;;  sw              1   76[BANK0 ] unsigned char 
 10639 ;;  k               1   75[BANK0 ] unsigned char 
 10640 ;;  j               1   74[BANK0 ] unsigned char 
 10641 ;;  i               1   73[BANK0 ] unsigned char 
 10642 ;; Return value:  Size  Location     Type
 10643 ;;		None               void
 10644 ;; Registers used:
 10645 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10646 ;; Tracked objects:
 10647 ;;		On entry : 0/0
 10648 ;;		On exit  : 0/0
 10649 ;;		Unchanged: 0/0
 10650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10651 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10652 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10653 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10654 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10655 ;;Total ram usage:        8 bytes
 10656 ;; Hardware stack levels used:    1
 10657 ;; Hardware stack levels required when called:    6
 10658 ;; This function calls:
 10659 ;;		_DelayOffPointSelect
 10660 ;;		___bmul
 10661 ;;		_setProductData
 10662 ;; This function is called by:
 10663 ;;		_setDimmerLights_OnOff
 10664 ;; This function uses a non-reentrant model
 10665 ;;
 10666                           
 10667                           
 10668                           ;psect for function _setDelayOff_GO
 10669  0DA0                     _setDelayOff_GO:	
 10670                           
 10671                           ;incstack = 0
 10672                           ; Regs used in _setDelayOff_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10673                           ;setDelayOff_GO@sw stored from wreg
 10674  0DA0  0020               	movlb	0	; select bank0
 10675  0DA1  00EC               	movwf	setDelayOff_GO@sw
 10676                           
 10677                           ;DelayOff_B1.c: 89: DelayOffPointSelect(sw);
 10678  0DA2  086C               	movf	setDelayOff_GO@sw,w
 10679  0DA3  3192  2250  318D   	fcall	_DelayOffPointSelect
 10680                           
 10681                           ;DelayOff_B1.c: 90: DelayOff->GO = command == 1 ? 1 : 0;
 10682  0DA6  0020               	movlb	0	; select bank0
 10683  0DA7  0865               	movf	setDelayOff_GO@command,w
 10684  0DA8  3A01               	xorlw	1
 10685  0DA9  3000               	movlw	0
 10686  0DAA  1903               	skipnz
 10687  0DAB  3001               	movlw	1
 10688  0DAC  00E7               	movwf	??_setDelayOff_GO
 10689  0DAD  0021               	movlb	1	; select bank1
 10690  0DAE  0850               	movf	_DelayOff^(0+128),w
 10691  0DAF  0086               	movwf	6
 10692  0DB0  3001               	movlw	1	; select bank2/3
 10693  0DB1  0087               	movwf	7
 10694  0DB2  0020               	movlb	0	; select bank0
 10695  0DB3  0DE7               	rlf	??_setDelayOff_GO,f
 10696  0DB4  0801               	movf	1,w
 10697  0DB5  0667               	xorwf	??_setDelayOff_GO,w
 10698  0DB6  39FD               	andlw	-3
 10699  0DB7  0667               	xorwf	??_setDelayOff_GO,w
 10700  0DB8  0081               	movwf	1
 10701                           
 10702                           ;DelayOff_B1.c: 91: DelayOff->SecondTime = 0;
 10703  0DB9  0021               	movlb	1	; select bank1
 10704  0DBA  0850               	movf	_DelayOff^(0+128),w
 10705  0DBB  3E02               	addlw	2
 10706  0DBC  0086               	movwf	6
 10707  0DBD  3001               	movlw	1	; select bank2/3
 10708  0DBE  0087               	movwf	7
 10709  0DBF  3000               	movlw	0
 10710  0DC0  3FC0               	movwi [0]fsr1
 10711  0DC1  3FC1               	movwi [1]fsr1
 10712                           
 10713                           ;DelayOff_B1.c: 92: DelayOff->MinuteTime = 0;
 10714  0DC2  0850               	movf	_DelayOff^(0+128),w
 10715  0DC3  3E04               	addlw	4
 10716  0DC4  0086               	movwf	6
 10717  0DC5  3001               	movlw	1	; select bank2/3
 10718  0DC6  0087               	movwf	7
 10719  0DC7  0181               	clrf	1
 10720                           
 10721                           ;DelayOff_B1.c: 94: if (command == 1) {
 10722  0DC8  0020               	movlb	0	; select bank0
 10723  0DC9  0865               	movf	setDelayOff_GO@command,w
 10724  0DCA  3A01               	xorlw	1
 10725  0DCB  1D03               	skipz
 10726  0DCC  2E22               	goto	l4658
 10727                           
 10728                           ;DelayOff_B1.c: 96: char i = 5, j = 0, k = 0;
 10729  0DCD  3005               	movlw	5
 10730  0DCE  00E7               	movwf	??_setDelayOff_GO
 10731  0DCF  0867               	movf	??_setDelayOff_GO,w
 10732  0DD0  00E9               	movwf	setDelayOff_GO@i
 10733  0DD1  01EA               	clrf	setDelayOff_GO@j
 10734  0DD2  01EB               	clrf	setDelayOff_GO@k
 10735                           
 10736                           ;DelayOff_B1.c: 97: if (((value % 16) == 5 || (value % 16) == 0) && value <= 0x30) {
 10737  0DD3  300F               	movlw	15
 10738  0DD4  0566               	andwf	setDelayOff_GO@value,w
 10739  0DD5  00E7               	movwf	??_setDelayOff_GO
 10740  0DD6  0867               	movf	??_setDelayOff_GO,w
 10741  0DD7  3A05               	xorlw	5
 10742  0DD8  1903               	skipnz
 10743  0DD9  2DDE               	goto	l4644
 10744  0DDA  0866               	movf	setDelayOff_GO@value,w
 10745  0DDB  390F               	andlw	15
 10746  0DDC  1D03               	btfss	3,2
 10747  0DDD  2E0E               	goto	l4654
 10748  0DDE                     l4644:	
 10749  0DDE  3031               	movlw	49
 10750  0DDF  0266               	subwf	setDelayOff_GO@value,w
 10751  0DE0  1803               	skipnc
 10752  0DE1  2E0E               	goto	l4654
 10753                           
 10754                           ;DelayOff_B1.c: 98: j = value & 0x0f;
 10755  0DE2  0866               	movf	setDelayOff_GO@value,w
 10756  0DE3  390F               	andlw	15
 10757  0DE4  00E7               	movwf	??_setDelayOff_GO
 10758  0DE5  0867               	movf	??_setDelayOff_GO,w
 10759  0DE6  00EA               	movwf	setDelayOff_GO@j
 10760                           
 10761                           ;DelayOff_B1.c: 99: k = (value >> 4) & 0x0f;
 10762  0DE7  0866               	movf	setDelayOff_GO@value,w
 10763  0DE8  00E7               	movwf	??_setDelayOff_GO
 10764  0DE9  3004               	movlw	4
 10765  0DEA                     u4425:	
 10766  0DEA  36E7               	lsrf	??_setDelayOff_GO,f
 10767  0DEB  0B89               	decfsz	9,f
 10768  0DEC  2DEA               	goto	u4425
 10769  0DED  0867               	movf	??_setDelayOff_GO,w
 10770  0DEE  390F               	andlw	15
 10771  0DEF  00E8               	movwf	??_setDelayOff_GO+1
 10772  0DF0  0868               	movf	??_setDelayOff_GO+1,w
 10773  0DF1  00EB               	movwf	setDelayOff_GO@k
 10774                           
 10775                           ;DelayOff_B1.c: 100: DelayOff->Value = j + (k * 10);
 10776  0DF2  300A               	movlw	10
 10777  0DF3  00E7               	movwf	??_setDelayOff_GO
 10778  0DF4  0867               	movf	??_setDelayOff_GO,w
 10779  0DF5  00A0               	movwf	___bmul@multiplicand
 10780  0DF6  086B               	movf	setDelayOff_GO@k,w
 10781  0DF7  3193  2365  318D   	fcall	___bmul
 10782  0DFA  0020               	movlb	0	; select bank0
 10783  0DFB  076A               	addwf	setDelayOff_GO@j,w
 10784  0DFC  00E8               	movwf	??_setDelayOff_GO+1
 10785  0DFD  0021               	movlb	1	; select bank1
 10786  0DFE  0A50               	incf	_DelayOff^(0+128),w
 10787  0DFF  0086               	movwf	6
 10788  0E00  3001               	movlw	1	; select bank2/3
 10789  0E01  0087               	movwf	7
 10790  0E02  0020               	movlb	0	; select bank0
 10791  0E03  0868               	movf	??_setDelayOff_GO+1,w
 10792  0E04  0081               	movwf	1
 10793                           
 10794                           ;DelayOff_B1.c: 102: setProductData(26 + sw, value);
 10795  0E05  0866               	movf	setDelayOff_GO@value,w
 10796  0E06  00E7               	movwf	??_setDelayOff_GO
 10797  0E07  0867               	movf	??_setDelayOff_GO,w
 10798  0E08  00E2               	movwf	setProductData@value
 10799  0E09  086C               	movf	setDelayOff_GO@sw,w
 10800  0E0A  3E1A               	addlw	26
 10801  0E0B  3192  225C         	fcall	_setProductData
 10802                           
 10803                           ;DelayOff_B1.c: 103: } else {
 10804  0E0D  0008               	return
 10805  0E0E                     l4654:	
 10806                           
 10807                           ;DelayOff_B1.c: 104: DelayOff->Value = 0x05;
 10808  0E0E  3005               	movlw	5
 10809  0E0F  0020               	movlb	0	; select bank0
 10810  0E10  00E7               	movwf	??_setDelayOff_GO
 10811  0E11  0021               	movlb	1	; select bank1
 10812  0E12  0A50               	incf	_DelayOff^(0+128),w
 10813  0E13  0086               	movwf	6
 10814  0E14  3001               	movlw	1	; select bank2/3
 10815  0E15  0087               	movwf	7
 10816  0E16  0020               	movlb	0	; select bank0
 10817  0E17  0867               	movf	??_setDelayOff_GO,w
 10818  0E18  0081               	movwf	1
 10819                           
 10820                           ;DelayOff_B1.c: 105: setProductData(26 + sw, 0x05);
 10821  0E19  3005               	movlw	5
 10822  0E1A  00E7               	movwf	??_setDelayOff_GO
 10823  0E1B  0867               	movf	??_setDelayOff_GO,w
 10824  0E1C  00E2               	movwf	setProductData@value
 10825  0E1D  086C               	movf	setDelayOff_GO@sw,w
 10826  0E1E  3E1A               	addlw	26
 10827  0E1F  3192  225C         	fcall	_setProductData
 10828                           
 10829                           ;DelayOff_B1.c: 106: }
 10830                           ;DelayOff_B1.c: 108: } else if (command == 0) {
 10831  0E21  0008               	return
 10832  0E22                     l4658:	
 10833  0E22  0020               	movlb	0	; select bank0
 10834  0E23  08E5               	movf	setDelayOff_GO@command,f
 10835  0E24  1D03               	skipz
 10836  0E25  0008               	return
 10837                           
 10838                           ;DelayOff_B1.c: 109: setProductData(26 + sw, 0);
 10839  0E26  01E2               	clrf	setProductData@value
 10840  0E27  086C               	movf	setDelayOff_GO@sw,w
 10841  0E28  3E1A               	addlw	26
 10842  0E29  3192  225C         	fcall	_setProductData
 10843  0E2B  0008               	return
 10844  0E2C                     __end_of_setDelayOff_GO:	
 10845                           
 10846                           	psect	text64
 10847  1365                     __ptext64:	
 10848 ;; *************** function ___bmul *****************
 10849 ;; Defined at:
 10850 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul8.c"
 10851 ;; Parameters:    Size  Location     Type
 10852 ;;  multiplier      1    wreg     unsigned char 
 10853 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 10854 ;; Auto vars:     Size  Location     Type
 10855 ;;  multiplier      1    3[BANK0 ] unsigned char 
 10856 ;;  product         1    2[BANK0 ] unsigned char 
 10857 ;; Return value:  Size  Location     Type
 10858 ;;                  1    wreg      unsigned char 
 10859 ;; Registers used:
 10860 ;;		wreg, status,2, status,0
 10861 ;; Tracked objects:
 10862 ;;		On entry : 0/0
 10863 ;;		On exit  : 0/0
 10864 ;;		Unchanged: 0/0
 10865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10866 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10867 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10868 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10869 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10870 ;;Total ram usage:        4 bytes
 10871 ;; Hardware stack levels used:    1
 10872 ;; Hardware stack levels required when called:    5
 10873 ;; This function calls:
 10874 ;;		Nothing
 10875 ;; This function is called by:
 10876 ;;		_setDelayOff_GO
 10877 ;;		_DelayTimejudge
 10878 ;; This function uses a non-reentrant model
 10879 ;;
 10880                           
 10881                           
 10882                           ;psect for function ___bmul
 10883  1365                     ___bmul:	
 10884                           
 10885                           ;incstack = 0
 10886                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 10887                           ;___bmul@multiplier stored from wreg
 10888  1365  0020               	movlb	0	; select bank0
 10889  1366  00A3               	movwf	___bmul@multiplier
 10890  1367  01A2               	clrf	___bmul@product
 10891  1368                     l4310:	
 10892  1368  1C23               	btfss	___bmul@multiplier,0
 10893  1369  2B6E               	goto	l4314
 10894  136A  0820               	movf	___bmul@multiplicand,w
 10895  136B  00A1               	movwf	??___bmul
 10896  136C  0821               	movf	??___bmul,w
 10897  136D  07A2               	addwf	___bmul@product,f
 10898  136E                     l4314:	
 10899  136E  1003               	clrc
 10900  136F  0DA0               	rlf	___bmul@multiplicand,f
 10901  1370  1003               	clrc
 10902  1371  0CA3               	rrf	___bmul@multiplier,f
 10903  1372  08A3               	movf	___bmul@multiplier,f
 10904  1373  1D03               	skipz
 10905  1374  2B68               	goto	l4310
 10906  1375  0822               	movf	___bmul@product,w
 10907  1376  0008               	return
 10908  1377                     __end_of___bmul:	
 10909                           
 10910                           	psect	text65
 10911  0800                     __ptext65:	
 10912 ;; *************** function _setCmd_Status *****************
 10913 ;; Defined at:
 10914 ;;		line 651 in file "../src/Main_B1.c"
 10915 ;; Parameters:    Size  Location     Type
 10916 ;;  number          1    wreg     unsigned char 
 10917 ;;  cmd             1    0[BANK0 ] unsigned char 
 10918 ;; Auto vars:     Size  Location     Type
 10919 ;;  number          1    2[BANK0 ] unsigned char 
 10920 ;; Return value:  Size  Location     Type
 10921 ;;		None               void
 10922 ;; Registers used:
 10923 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10924 ;; Tracked objects:
 10925 ;;		On entry : 0/0
 10926 ;;		On exit  : 0/0
 10927 ;;		Unchanged: 0/0
 10928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10929 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10930 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10931 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10932 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10933 ;;Total ram usage:        3 bytes
 10934 ;; Hardware stack levels used:    1
 10935 ;; Hardware stack levels required when called:    5
 10936 ;; This function calls:
 10937 ;;		Nothing
 10938 ;; This function is called by:
 10939 ;;		_setDimmerLights_OnOff
 10940 ;; This function uses a non-reentrant model
 10941 ;;
 10942                           
 10943                           
 10944                           ;psect for function _setCmd_Status
 10945  0800                     _setCmd_Status:	
 10946                           
 10947                           ;incstack = 0
 10948                           ; Regs used in _setCmd_Status: [wreg-fsr0h+status,2+status,0]
 10949                           ;setCmd_Status@number stored from wreg
 10950  0800  0020               	movlb	0	; select bank0
 10951  0801  00A2               	movwf	setCmd_Status@number
 10952                           
 10953                           ;Main_B1.c: 652: switch (number) {
 10954  0802  2812               	goto	l4790
 10955  0803                     l4786:	
 10956                           ;Main_B1.c: 653: case 1:
 10957                           
 10958                           
 10959                           ;Main_B1.c: 654: Cmd.all_off = cmd == 1 ? 1 : 0;
 10960  0803  0820               	movf	setCmd_Status@cmd,w
 10961  0804  3A01               	xorlw	1
 10962  0805  3000               	movlw	0
 10963  0806  1903               	skipnz
 10964  0807  3001               	movlw	1
 10965  0808  00A1               	movwf	??_setCmd_Status
 10966  0809  0021               	movlb	1	; select bank1
 10967  080A  084F               	movf	_Cmd^(0+128),w
 10968  080B  0020               	movlb	0	; select bank0
 10969  080C  0621               	xorwf	??_setCmd_Status,w
 10970  080D  39FE               	andlw	-2
 10971  080E  0621               	xorwf	??_setCmd_Status,w
 10972  080F  0021               	movlb	1	; select bank1
 10973  0810  00CF               	movwf	_Cmd^(0+128)
 10974                           
 10975                           ;Main_B1.c: 656: }
 10976                           
 10977                           ;Main_B1.c: 655: break;
 10978  0811  0008               	return
 10979  0812                     l4790:	
 10980  0812  0020               	movlb	0	; select bank0
 10981  0813  0822               	movf	setCmd_Status@number,w
 10982                           
 10983                           ; Switch size 1, requested type "space"
 10984                           ; Number of cases is 1, Range of values is 1 to 1
 10985                           ; switch strategies available:
 10986                           ; Name         Instructions Cycles
 10987                           ; simple_byte            4     3 (average)
 10988                           ; direct_byte           11     9 (fixed)
 10989                           ; jumptable            263     9 (fixed)
 10990                           ;	Chosen strategy is simple_byte
 10991  0814  3A01               	xorlw	1	; case 1
 10992  0815  1903               	skipnz
 10993  0816  2803               	goto	l4786
 10994  0817  2818               	goto	l1110
 10995  0818                     l1110:	
 10996  0818  0008               	return
 10997  0819                     __end_of_setCmd_Status:	
 10998                           
 10999                           	psect	text66
 11000  1205                     __ptext66:	
 11001 ;; *************** function _getMain_All_LightsStatus *****************
 11002 ;; Defined at:
 11003 ;;		line 373 in file "../src/Main_B1.c"
 11004 ;; Parameters:    Size  Location     Type
 11005 ;;		None
 11006 ;; Auto vars:     Size  Location     Type
 11007 ;;  status          1    0[BANK0 ] unsigned char 
 11008 ;; Return value:  Size  Location     Type
 11009 ;;                  1    wreg      unsigned char 
 11010 ;; Registers used:
 11011 ;;		wreg, status,2
 11012 ;; Tracked objects:
 11013 ;;		On entry : 0/0
 11014 ;;		On exit  : 0/0
 11015 ;;		Unchanged: 0/0
 11016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11018 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11020 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11021 ;;Total ram usage:        1 bytes
 11022 ;; Hardware stack levels used:    1
 11023 ;; Hardware stack levels required when called:    5
 11024 ;; This function calls:
 11025 ;;		Nothing
 11026 ;; This function is called by:
 11027 ;;		_DimmerLights_Main
 11028 ;;		_setDimmerLights_Main
 11029 ;;		_setDimmerLights_OnOff
 11030 ;;		_Flash_Memory_Main
 11031 ;;		_Exception_Main
 11032 ;;		_Load_Main
 11033 ;;		_setTemp_Main
 11034 ;; This function uses a non-reentrant model
 11035 ;;
 11036                           
 11037                           
 11038                           ;psect for function _getMain_All_LightsStatus
 11039  1205                     _getMain_All_LightsStatus:	
 11040                           
 11041                           ;Main_B1.c: 374: char status = 0;
 11042                           
 11043                           ;incstack = 0
 11044                           ; Regs used in _getMain_All_LightsStatus: [wreg+status,2]
 11045  1205  0020               	movlb	0	; select bank0
 11046  1206  01A0               	clrf	getMain_All_LightsStatus@status
 11047                           
 11048                           ;Main_B1.c: 381: status = DimmerLights1.Status == 1 ? 1 : 0;
 11049  1207  3000               	movlw	0
 11050  1208  0022               	movlb	2	; select bank2
 11051  1209  1852               	btfsc	(_DimmerLights1^(0+256)+1),0
 11052  120A  3001               	movlw	1
 11053  120B  0020               	movlb	0	; select bank0
 11054  120C  00A0               	movwf	getMain_All_LightsStatus@status
 11055                           
 11056                           ;Main_B1.c: 420: return status;
 11057  120D  0820               	movf	getMain_All_LightsStatus@status,w
 11058  120E  0008               	return
 11059  120F                     __end_of_getMain_All_LightsStatus:	
 11060                           
 11061                           	psect	text67
 11062  12FD                     __ptext67:	
 11063 ;; *************** function _getDelayOff_GO *****************
 11064 ;; Defined at:
 11065 ;;		line 114 in file "../src/DelayOff_B1.c"
 11066 ;; Parameters:    Size  Location     Type
 11067 ;;  sw              1    wreg     unsigned char 
 11068 ;; Auto vars:     Size  Location     Type
 11069 ;;  sw              1    2[BANK0 ] unsigned char 
 11070 ;;  go              1    3[BANK0 ] unsigned char 
 11071 ;; Return value:  Size  Location     Type
 11072 ;;                  1    wreg      unsigned char 
 11073 ;; Registers used:
 11074 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11075 ;; Tracked objects:
 11076 ;;		On entry : 0/0
 11077 ;;		On exit  : 0/0
 11078 ;;		Unchanged: 0/0
 11079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11081 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11083 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11084 ;;Total ram usage:        2 bytes
 11085 ;; Hardware stack levels used:    1
 11086 ;; Hardware stack levels required when called:    6
 11087 ;; This function calls:
 11088 ;;		_DelayOffPointSelect
 11089 ;; This function is called by:
 11090 ;;		_setDimmerLights_OnOff
 11091 ;; This function uses a non-reentrant model
 11092 ;;
 11093                           
 11094                           
 11095                           ;psect for function _getDelayOff_GO
 11096  12FD                     _getDelayOff_GO:	
 11097                           
 11098                           ;incstack = 0
 11099                           ; Regs used in _getDelayOff_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11100                           ;getDelayOff_GO@sw stored from wreg
 11101  12FD  0020               	movlb	0	; select bank0
 11102  12FE  00A2               	movwf	getDelayOff_GO@sw
 11103                           
 11104                           ;DelayOff_B1.c: 115: DelayOffPointSelect(sw);
 11105  12FF  0822               	movf	getDelayOff_GO@sw,w
 11106  1300  3192  2250         	fcall	_DelayOffPointSelect
 11107                           
 11108                           ;DelayOff_B1.c: 116: char go = DelayOff->GO == 1 ? 1 : 0;
 11109  1302  0021               	movlb	1	; select bank1
 11110  1303  0850               	movf	_DelayOff^(0+128),w
 11111  1304  0086               	movwf	6
 11112  1305  3001               	movlw	1	; select bank2/3
 11113  1306  0087               	movwf	7
 11114  1307  3000               	movlw	0
 11115  1308  1881               	btfsc	1,1
 11116  1309  3001               	movlw	1
 11117  130A  0020               	movlb	0	; select bank0
 11118  130B  00A3               	movwf	getDelayOff_GO@go
 11119                           
 11120                           ;DelayOff_B1.c: 117: return go;
 11121  130C  0823               	movf	getDelayOff_GO@go,w
 11122  130D  0008               	return
 11123  130E                     __end_of_getDelayOff_GO:	
 11124                           
 11125                           	psect	text68
 11126  1353                     __ptext68:	
 11127 ;; *************** function _getCmd_Status *****************
 11128 ;; Defined at:
 11129 ;;		line 659 in file "../src/Main_B1.c"
 11130 ;; Parameters:    Size  Location     Type
 11131 ;;  number          1    wreg     unsigned char 
 11132 ;; Auto vars:     Size  Location     Type
 11133 ;;  number          1    0[BANK0 ] unsigned char 
 11134 ;;  cmd             1    1[BANK0 ] unsigned char 
 11135 ;; Return value:  Size  Location     Type
 11136 ;;                  1    wreg      unsigned char 
 11137 ;; Registers used:
 11138 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11139 ;; Tracked objects:
 11140 ;;		On entry : 0/0
 11141 ;;		On exit  : 0/0
 11142 ;;		Unchanged: 0/0
 11143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11145 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11147 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11148 ;;Total ram usage:        2 bytes
 11149 ;; Hardware stack levels used:    1
 11150 ;; Hardware stack levels required when called:    5
 11151 ;; This function calls:
 11152 ;;		Nothing
 11153 ;; This function is called by:
 11154 ;;		_setDimmerLights_OnOff
 11155 ;; This function uses a non-reentrant model
 11156 ;;
 11157                           
 11158                           
 11159                           ;psect for function _getCmd_Status
 11160  1353                     _getCmd_Status:	
 11161                           
 11162                           ;incstack = 0
 11163                           ; Regs used in _getCmd_Status: [wreg-fsr0h+status,2+status,0]
 11164                           ;getCmd_Status@number stored from wreg
 11165  1353  0020               	movlb	0	; select bank0
 11166  1354  00A0               	movwf	getCmd_Status@number
 11167                           
 11168                           ;Main_B1.c: 660: char cmd = 0;
 11169  1355  01A1               	clrf	getCmd_Status@cmd
 11170                           
 11171                           ;Main_B1.c: 661: switch (number) {
 11172  1356  2B5E               	goto	l4778
 11173  1357                     l4774:	
 11174                           ;Main_B1.c: 662: case 1:
 11175                           
 11176                           
 11177                           ;Main_B1.c: 663: cmd = Cmd.all_off == 1 ? 1 : 0;
 11178  1357  3000               	movlw	0
 11179  1358  0021               	movlb	1	; select bank1
 11180  1359  184F               	btfsc	_Cmd^(0+128),0
 11181  135A  3001               	movlw	1
 11182  135B  0020               	movlb	0	; select bank0
 11183  135C  00A1               	movwf	getCmd_Status@cmd
 11184                           
 11185                           ;Main_B1.c: 665: }
 11186                           
 11187                           ;Main_B1.c: 664: break;
 11188  135D  2B63               	goto	l4780
 11189  135E                     l4778:	
 11190  135E  0820               	movf	getCmd_Status@number,w
 11191                           
 11192                           ; Switch size 1, requested type "space"
 11193                           ; Number of cases is 1, Range of values is 1 to 1
 11194                           ; switch strategies available:
 11195                           ; Name         Instructions Cycles
 11196                           ; simple_byte            4     3 (average)
 11197                           ; direct_byte           11     9 (fixed)
 11198                           ; jumptable            263     9 (fixed)
 11199                           ;	Chosen strategy is simple_byte
 11200  135F  3A01               	xorlw	1	; case 1
 11201  1360  1903               	skipnz
 11202  1361  2B57               	goto	l4774
 11203  1362  2B63               	goto	l4780
 11204  1363                     l4780:	
 11205                           
 11206                           ;Main_B1.c: 666: return cmd;
 11207  1363  0821               	movf	getCmd_Status@cmd,w
 11208  1364  0008               	return
 11209  1365                     __end_of_getCmd_Status:	
 11210                           
 11211                           	psect	text69
 11212  174B                     __ptext69:	
 11213 ;; *************** function _setDimmerLights_Dimming *****************
 11214 ;; Defined at:
 11215 ;;		line 1012 in file "../src/Dimmer_B1.c"
 11216 ;; Parameters:    Size  Location     Type
 11217 ;;  lights          1    wreg     unsigned char 
 11218 ;;  status          1   69[BANK0 ] unsigned char 
 11219 ;; Auto vars:     Size  Location     Type
 11220 ;;  lights          1   72[BANK0 ] unsigned char 
 11221 ;;  value           1   71[BANK0 ] unsigned char 
 11222 ;; Return value:  Size  Location     Type
 11223 ;;		None               void
 11224 ;; Registers used:
 11225 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11226 ;; Tracked objects:
 11227 ;;		On entry : 0/0
 11228 ;;		On exit  : 0/0
 11229 ;;		Unchanged: 0/0
 11230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11231 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11232 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11233 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11234 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11235 ;;Total ram usage:        4 bytes
 11236 ;; Hardware stack levels used:    1
 11237 ;; Hardware stack levels required when called:    8
 11238 ;; This function calls:
 11239 ;;		_getDimmerIntr_DimmingValue
 11240 ;;		_getDimmerLights_ValueToPercent
 11241 ;;		_setBuz
 11242 ;;		_setDimmerIntr_Dimming_Sw
 11243 ;;		_setDimmerLights_Line
 11244 ;;		_setMemory_Modify
 11245 ;;		_setProductData
 11246 ;; This function is called by:
 11247 ;;		_setDimmerLights_Main
 11248 ;; This function uses a non-reentrant model
 11249 ;;
 11250                           
 11251                           
 11252                           ;psect for function _setDimmerLights_Dimming
 11253  174B                     _setDimmerLights_Dimming:	
 11254                           
 11255                           ;incstack = 0
 11256                           ; Regs used in _setDimmerLights_Dimming: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 11257                           ;setDimmerLights_Dimming@lights stored from wreg
 11258  174B  0020               	movlb	0	; select bank0
 11259  174C  00E8               	movwf	setDimmerLights_Dimming@lights
 11260                           
 11261                           ;Dimmer_B1.c: 1013: setDimmerIntr_Dimming_Sw(lights, status);
 11262  174D  0865               	movf	setDimmerLights_Dimming@status,w
 11263  174E  00E6               	movwf	??_setDimmerLights_Dimming
 11264  174F  0866               	movf	??_setDimmerLights_Dimming,w
 11265  1750  00A0               	movwf	setDimmerIntr_Dimming_Sw@command
 11266  1751  0868               	movf	setDimmerLights_Dimming@lights,w
 11267  1752  3194  2401  3197   	fcall	_setDimmerIntr_Dimming_Sw
 11268                           
 11269                           ;Dimmer_B1.c: 1014: if (status == 1) {
 11270  1755  0020               	movlb	0	; select bank0
 11271  1756  0865               	movf	setDimmerLights_Dimming@status,w
 11272  1757  3A01               	xorlw	1
 11273  1758  1D03               	skipz
 11274  1759  2F62               	goto	l4998
 11275                           
 11276                           ;Dimmer_B1.c: 1018: setBuz(1, 100);
 11277  175A  3064               	movlw	100
 11278  175B  00A9               	movwf	setBuz@time
 11279  175C  3000               	movlw	0
 11280  175D  00AA               	movwf	setBuz@time+1
 11281  175E  3001               	movlw	1
 11282  175F  3189  21DA         	fcall	_setBuz
 11283                           
 11284                           ;Dimmer_B1.c: 1019: } else if (status == 0) {
 11285  1761  0008               	return
 11286  1762                     l4998:	
 11287  1762  0020               	movlb	0	; select bank0
 11288  1763  08E5               	movf	setDimmerLights_Dimming@status,f
 11289  1764  1D03               	skipz
 11290  1765  0008               	return
 11291                           
 11292                           ;Dimmer_B1.c: 1022: Dimmer.Load_Status = 0;
 11293  1766  0021               	movlb	1	; select bank1
 11294  1767  1145               	bcf	_Dimmer^(0+128),2
 11295                           
 11296                           ;Dimmer_B1.c: 1023: setDimmerLights_Line(lights);
 11297  1768  0020               	movlb	0	; select bank0
 11298  1769  0868               	movf	setDimmerLights_Dimming@lights,w
 11299  176A  3193  2341  3197   	fcall	_setDimmerLights_Line
 11300                           
 11301                           ;Dimmer_B1.c: 1025: char value = getDimmerIntr_DimmingValue(lights);
 11302  176D  0020               	movlb	0	; select bank0
 11303  176E  0868               	movf	setDimmerLights_Dimming@lights,w
 11304  176F  3192  22CE  3197   	fcall	_getDimmerIntr_DimmingValue
 11305  1772  0020               	movlb	0	; select bank0
 11306  1773  00E6               	movwf	??_setDimmerLights_Dimming
 11307  1774  0866               	movf	??_setDimmerLights_Dimming,w
 11308  1775  00E7               	movwf	setDimmerLights_Dimming@value
 11309                           
 11310                           ;Dimmer_B1.c: 1026: ;;
 11311                           ;Dimmer_B1.c: 1027: setProductData((20 + lights), getDimmerLights_ValueToPercent(value))
      +                          ;
 11312  1776  0867               	movf	setDimmerLights_Dimming@value,w
 11313  1777  318B  2357  3197   	fcall	_getDimmerLights_ValueToPercent
 11314  177A  0020               	movlb	0	; select bank0
 11315  177B  00E6               	movwf	??_setDimmerLights_Dimming
 11316  177C  0866               	movf	??_setDimmerLights_Dimming,w
 11317  177D  00E2               	movwf	setProductData@value
 11318  177E  0868               	movf	setDimmerLights_Dimming@lights,w
 11319  177F  3E14               	addlw	20
 11320  1780  3192  225C  3197   	fcall	_setProductData
 11321                           
 11322                           ;Dimmer_B1.c: 1034: setMemory_Modify(1);
 11323  1783  3001               	movlw	1
 11324  1784  3193  239B         	fcall	_setMemory_Modify
 11325                           
 11326                           ;Dimmer_B1.c: 1038: ;;
 11327                           ;Dimmer_B1.c: 1039: ;;
 11328  1786  0008               	return
 11329  1787                     __end_of_setDimmerLights_Dimming:	
 11330                           
 11331                           	psect	text70
 11332  1341                     __ptext70:	
 11333 ;; *************** function _setDimmerLights_Line *****************
 11334 ;; Defined at:
 11335 ;;		line 1084 in file "../src/Dimmer_B1.c"
 11336 ;; Parameters:    Size  Location     Type
 11337 ;;  lights          1    wreg     unsigned char 
 11338 ;; Auto vars:     Size  Location     Type
 11339 ;;  lights          1    0[BANK0 ] unsigned char 
 11340 ;; Return value:  Size  Location     Type
 11341 ;;		None               void
 11342 ;; Registers used:
 11343 ;;		wreg
 11344 ;; Tracked objects:
 11345 ;;		On entry : 0/0
 11346 ;;		On exit  : 0/0
 11347 ;;		Unchanged: 0/0
 11348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11350 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11352 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11353 ;;Total ram usage:        1 bytes
 11354 ;; Hardware stack levels used:    1
 11355 ;; Hardware stack levels required when called:    5
 11356 ;; This function calls:
 11357 ;;		Nothing
 11358 ;; This function is called by:
 11359 ;;		_setDimmerLights_OnOff
 11360 ;;		_setDimmerLights_Dimming
 11361 ;; This function uses a non-reentrant model
 11362 ;;
 11363                           
 11364                           
 11365                           ;psect for function _setDimmerLights_Line
 11366  1341                     _setDimmerLights_Line:	
 11367                           
 11368                           ;incstack = 0
 11369                           ; Regs used in _setDimmerLights_Line: [wreg]
 11370                           ;setDimmerLights_Line@lights stored from wreg
 11371  1341  0020               	movlb	0	; select bank0
 11372  1342  00A0               	movwf	setDimmerLights_Line@lights
 11373                           
 11374                           ;Dimmer_B1.c: 1085: Dimmer.LoadGO = 1;
 11375  1343  0021               	movlb	1	; select bank1
 11376  1344  14C5               	bsf	_Dimmer^(0+128),1
 11377                           
 11378                           ;Dimmer_B1.c: 1087: DimmerLights1.Line = 0;
 11379  1345  0022               	movlb	2	; select bank2
 11380  1346  10D2               	bcf	(_DimmerLights1^(0+256)+1),1
 11381                           
 11382                           ;Dimmer_B1.c: 1088: if (lights == 1 && lights != 0) {
 11383  1347  0020               	movlb	0	; select bank0
 11384  1348  0820               	movf	setDimmerLights_Line@lights,w
 11385  1349  3A01               	xorlw	1
 11386  134A  1D03               	skipz
 11387  134B  0008               	return
 11388  134C  0820               	movf	setDimmerLights_Line@lights,w
 11389  134D  1903               	btfsc	3,2
 11390  134E  0008               	return
 11391                           
 11392                           ;Dimmer_B1.c: 1089: DimmerLights1.Line = 1;
 11393  134F  0022               	movlb	2	; select bank2
 11394  1350  14D2               	bsf	(_DimmerLights1^(0+256)+1),1
 11395  1351  0020               	movlb	0	; select bank0
 11396  1352  0008               	return
 11397  1353                     __end_of_setDimmerLights_Line:	
 11398                           
 11399                           	psect	text71
 11400  1401                     __ptext71:	
 11401 ;; *************** function _setDimmerIntr_Dimming_Sw *****************
 11402 ;; Defined at:
 11403 ;;		line 224 in file "../src/Dimmer_B1.c"
 11404 ;; Parameters:    Size  Location     Type
 11405 ;;  lights          1    wreg     unsigned char 
 11406 ;;  command         1    0[BANK0 ] unsigned char 
 11407 ;; Auto vars:     Size  Location     Type
 11408 ;;  lights          1    2[BANK0 ] unsigned char 
 11409 ;; Return value:  Size  Location     Type
 11410 ;;		None               void
 11411 ;; Registers used:
 11412 ;;		wreg, status,2, status,0
 11413 ;; Tracked objects:
 11414 ;;		On entry : 0/0
 11415 ;;		On exit  : 0/0
 11416 ;;		Unchanged: 0/0
 11417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11418 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11419 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11420 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11421 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11422 ;;Total ram usage:        3 bytes
 11423 ;; Hardware stack levels used:    1
 11424 ;; Hardware stack levels required when called:    5
 11425 ;; This function calls:
 11426 ;;		Nothing
 11427 ;; This function is called by:
 11428 ;;		_setDimmerLights_Dimming
 11429 ;;		_setDimmerLights_DimmingClose
 11430 ;; This function uses a non-reentrant model
 11431 ;;
 11432                           
 11433                           
 11434                           ;psect for function _setDimmerIntr_Dimming_Sw
 11435  1401                     _setDimmerIntr_Dimming_Sw:	
 11436                           
 11437                           ;incstack = 0
 11438                           ; Regs used in _setDimmerIntr_Dimming_Sw: [wreg+status,2+status,0]
 11439                           ;setDimmerIntr_Dimming_Sw@lights stored from wreg
 11440  1401  0020               	movlb	0	; select bank0
 11441  1402  00A2               	movwf	setDimmerIntr_Dimming_Sw@lights
 11442                           
 11443                           ;Dimmer_B1.c: 226: if (lights == 1) {
 11444  1403  0822               	movf	setDimmerIntr_Dimming_Sw@lights,w
 11445  1404  3A01               	xorlw	1
 11446  1405  1D03               	skipz
 11447  1406  0008               	return
 11448                           
 11449                           ;Dimmer_B1.c: 227: DimmerIntr1.Dimming_Sw = command == 1 ? 1 : 0;
 11450  1407  0820               	movf	setDimmerIntr_Dimming_Sw@command,w
 11451  1408  3A01               	xorlw	1
 11452  1409  3000               	movlw	0
 11453  140A  1903               	skipnz
 11454  140B  3001               	movlw	1
 11455  140C  00A1               	movwf	??_setDimmerIntr_Dimming_Sw
 11456  140D  0EA1               	swapf	??_setDimmerIntr_Dimming_Sw,f
 11457  140E  0021               	movlb	1	; select bank1
 11458  140F  0839               	movf	_DimmerIntr1^(0+128),w
 11459  1410  0020               	movlb	0	; select bank0
 11460  1411  0621               	xorwf	??_setDimmerIntr_Dimming_Sw,w
 11461  1412  39EF               	andlw	-17
 11462  1413  0621               	xorwf	??_setDimmerIntr_Dimming_Sw,w
 11463  1414  0021               	movlb	1	; select bank1
 11464  1415  00B9               	movwf	_DimmerIntr1^(0+128)
 11465  1416  0008               	return
 11466  1417                     __end_of_setDimmerIntr_Dimming_Sw:	
 11467                           
 11468                           	psect	text72
 11469  12CE                     __ptext72:	
 11470 ;; *************** function _getDimmerIntr_DimmingValue *****************
 11471 ;; Defined at:
 11472 ;;		line 125 in file "../src/Dimmer_B1.c"
 11473 ;; Parameters:    Size  Location     Type
 11474 ;;  lights          1    wreg     unsigned char 
 11475 ;; Auto vars:     Size  Location     Type
 11476 ;;  lights          1    1[BANK0 ] unsigned char 
 11477 ;;  value           1    2[BANK0 ] unsigned char 
 11478 ;; Return value:  Size  Location     Type
 11479 ;;                  1    wreg      unsigned char 
 11480 ;; Registers used:
 11481 ;;		wreg, status,2
 11482 ;; Tracked objects:
 11483 ;;		On entry : 0/0
 11484 ;;		On exit  : 0/0
 11485 ;;		Unchanged: 0/0
 11486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11488 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11489 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11490 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11491 ;;Total ram usage:        3 bytes
 11492 ;; Hardware stack levels used:    1
 11493 ;; Hardware stack levels required when called:    5
 11494 ;; This function calls:
 11495 ;;		Nothing
 11496 ;; This function is called by:
 11497 ;;		_setDimmerLights_Dimming
 11498 ;; This function uses a non-reentrant model
 11499 ;;
 11500                           
 11501                           
 11502                           ;psect for function _getDimmerIntr_DimmingValue
 11503  12CE                     _getDimmerIntr_DimmingValue:	
 11504                           
 11505                           ;incstack = 0
 11506                           ; Regs used in _getDimmerIntr_DimmingValue: [wreg+status,2]
 11507                           ;getDimmerIntr_DimmingValue@lights stored from wreg
 11508  12CE  0020               	movlb	0	; select bank0
 11509  12CF  00A1               	movwf	getDimmerIntr_DimmingValue@lights
 11510                           
 11511                           ;Dimmer_B1.c: 126: char value = 0;
 11512  12D0  01A2               	clrf	getDimmerIntr_DimmingValue@value
 11513                           
 11514                           ;Dimmer_B1.c: 128: if (lights == 1) {
 11515  12D1  0821               	movf	getDimmerIntr_DimmingValue@lights,w
 11516  12D2  3A01               	xorlw	1
 11517  12D3  1D03               	skipz
 11518  12D4  2ADB               	goto	l376
 11519                           
 11520                           ;Dimmer_B1.c: 129: value = DimmerIntr1.DimmingValue;
 11521  12D5  0021               	movlb	1	; select bank1
 11522  12D6  083E               	movf	(_DimmerIntr1^(0+128)+5),w
 11523  12D7  0020               	movlb	0	; select bank0
 11524  12D8  00A0               	movwf	??_getDimmerIntr_DimmingValue
 11525  12D9  0820               	movf	??_getDimmerIntr_DimmingValue,w
 11526  12DA  00A2               	movwf	getDimmerIntr_DimmingValue@value
 11527  12DB                     l376:	
 11528                           
 11529                           ;Dimmer_B1.c: 130: }
 11530                           ;Dimmer_B1.c: 142: return value;
 11531  12DB  0822               	movf	getDimmerIntr_DimmingValue@value,w
 11532  12DC  0008               	return
 11533  12DD                     __end_of_getDimmerIntr_DimmingValue:	
 11534                           
 11535                           	psect	text73
 11536  13EB                     __ptext73:	
 11537 ;; *************** function _getDimmerLights_Allow_Condition *****************
 11538 ;; Defined at:
 11539 ;;		line 1045 in file "../src/Dimmer_B1.c"
 11540 ;; Parameters:    Size  Location     Type
 11541 ;;  lights          1    wreg     unsigned char 
 11542 ;; Auto vars:     Size  Location     Type
 11543 ;;  lights          1    0[COMMON] unsigned char 
 11544 ;;  allow           1    2[BANK0 ] unsigned char 
 11545 ;; Return value:  Size  Location     Type
 11546 ;;                  1    wreg      unsigned char 
 11547 ;; Registers used:
 11548 ;;		wreg, status,2, pclath, cstack
 11549 ;; Tracked objects:
 11550 ;;		On entry : 0/0
 11551 ;;		On exit  : 0/0
 11552 ;;		Unchanged: 0/0
 11553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11555 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11556 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11557 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11558 ;;Total ram usage:        3 bytes
 11559 ;; Hardware stack levels used:    1
 11560 ;; Hardware stack levels required when called:    6
 11561 ;; This function calls:
 11562 ;;		_getLoad_OK
 11563 ;; This function is called by:
 11564 ;;		_setDimmerLights_Main
 11565 ;; This function uses a non-reentrant model
 11566 ;;
 11567                           
 11568                           
 11569                           ;psect for function _getDimmerLights_Allow_Condition
 11570  13EB                     _getDimmerLights_Allow_Condition:	
 11571                           
 11572                           ;Dimmer_B1.c: 1046: char allow = 0;
 11573                           
 11574                           ;incstack = 0
 11575                           ; Regs used in _getDimmerLights_Allow_Condition: [wreg+status,2+pclath+cstack]
 11576  13EB  0020               	movlb	0	; select bank0
 11577  13EC  01A2               	clrf	getDimmerLights_Allow_Condition@allow
 11578                           
 11579                           ;Dimmer_B1.c: 1052: allow = getLoad_OK() == 0 && Dimmer.LoadGO == 0 ? 0 : 1;
 11580  13ED  01A3               	clrf	_getDimmerLights_Allow_Condition$1902
 11581  13EE  0AA3               	incf	_getDimmerLights_Allow_Condition$1902,f
 11582  13EF  3191  21D2  3193   	fcall	_getLoad_OK
 11583  13F2  3800               	iorlw	0
 11584  13F3  1D03               	skipz
 11585  13F4  2BFA               	goto	l4938
 11586  13F5  0021               	movlb	1	; select bank1
 11587  13F6  18C5               	btfsc	_Dimmer^(0+128),1
 11588  13F7  2BFA               	goto	l4938
 11589  13F8  0020               	movlb	0	; select bank0
 11590  13F9  01A3               	clrf	_getDimmerLights_Allow_Condition$1902
 11591  13FA                     l4938:	
 11592  13FA  0020               	movlb	0	; select bank0
 11593  13FB  0823               	movf	_getDimmerLights_Allow_Condition$1902,w
 11594  13FC  00A1               	movwf	??_getDimmerLights_Allow_Condition
 11595  13FD  0821               	movf	??_getDimmerLights_Allow_Condition,w
 11596  13FE  00A2               	movwf	getDimmerLights_Allow_Condition@allow
 11597                           
 11598                           ;Dimmer_B1.c: 1079: return allow;
 11599  13FF  0822               	movf	getDimmerLights_Allow_Condition@allow,w
 11600  1400  0008               	return
 11601  1401                     __end_of_getDimmerLights_Allow_Condition:	
 11602                           
 11603                           	psect	text74
 11604  11D2                     __ptext74:	
 11605 ;; *************** function _getLoad_OK *****************
 11606 ;; Defined at:
 11607 ;;		line 274 in file "../src/OverLoad_B1.c"
 11608 ;; Parameters:    Size  Location     Type
 11609 ;;		None
 11610 ;; Auto vars:     Size  Location     Type
 11611 ;;  ok              1    0[BANK0 ] unsigned char 
 11612 ;; Return value:  Size  Location     Type
 11613 ;;                  1    wreg      unsigned char 
 11614 ;; Registers used:
 11615 ;;		wreg, status,2
 11616 ;; Tracked objects:
 11617 ;;		On entry : 0/0
 11618 ;;		On exit  : 0/0
 11619 ;;		Unchanged: 0/0
 11620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11622 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11624 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11625 ;;Total ram usage:        1 bytes
 11626 ;; Hardware stack levels used:    1
 11627 ;; Hardware stack levels required when called:    5
 11628 ;; This function calls:
 11629 ;;		Nothing
 11630 ;; This function is called by:
 11631 ;;		_DimmerLights_Main
 11632 ;;		_getDimmerLights_Allow_Condition
 11633 ;; This function uses a non-reentrant model
 11634 ;;
 11635                           
 11636                           
 11637                           ;psect for function _getLoad_OK
 11638  11D2                     _getLoad_OK:	
 11639                           
 11640                           ;OverLoad_B1.c: 275: char ok = Load.OK == 1 ? 1 : 0;
 11641                           
 11642                           ;incstack = 0
 11643                           ; Regs used in _getLoad_OK: [wreg+status,2]
 11644  11D2  3000               	movlw	0
 11645  11D3  0022               	movlb	2	; select bank2
 11646  11D4  1BA0               	btfsc	_Load^(0+256),7
 11647  11D5  3001               	movlw	1
 11648  11D6  0020               	movlb	0	; select bank0
 11649  11D7  00A0               	movwf	getLoad_OK@ok
 11650                           
 11651                           ;OverLoad_B1.c: 276: return ok;
 11652  11D8  0820               	movf	getLoad_OK@ok,w
 11653  11D9  0008               	return
 11654  11DA                     __end_of_getLoad_OK:	
 11655                           
 11656                           	psect	text75
 11657  163B                     __ptext75:	
 11658 ;; *************** function _getMain_All_Error_Status *****************
 11659 ;; Defined at:
 11660 ;;		line 424 in file "../src/Main_B1.c"
 11661 ;; Parameters:    Size  Location     Type
 11662 ;;  command         1    wreg     unsigned char 
 11663 ;; Auto vars:     Size  Location     Type
 11664 ;;  command         1    5[BANK0 ] unsigned char 
 11665 ;;  status          1    6[BANK0 ] unsigned char 
 11666 ;; Return value:  Size  Location     Type
 11667 ;;                  1    wreg      unsigned char 
 11668 ;; Registers used:
 11669 ;;		wreg, status,2, status,0
 11670 ;; Tracked objects:
 11671 ;;		On entry : 0/0
 11672 ;;		On exit  : 0/0
 11673 ;;		Unchanged: 0/0
 11674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11676 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11677 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11678 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11679 ;;Total ram usage:        7 bytes
 11680 ;; Hardware stack levels used:    1
 11681 ;; Hardware stack levels required when called:    5
 11682 ;; This function calls:
 11683 ;;		Nothing
 11684 ;; This function is called by:
 11685 ;;		_DimmerLights_Main
 11686 ;;		_Exception_Main
 11687 ;;		_Load_Main
 11688 ;;		_setTemp_Main
 11689 ;;		_setSw_Main
 11690 ;; This function uses a non-reentrant model
 11691 ;;
 11692                           
 11693                           
 11694                           ;psect for function _getMain_All_Error_Status
 11695  163B                     _getMain_All_Error_Status:	
 11696                           
 11697                           ;incstack = 0
 11698                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2+status,0]
 11699                           ;getMain_All_Error_Status@command stored from wreg
 11700  163B  0020               	movlb	0	; select bank0
 11701  163C  00A5               	movwf	getMain_All_Error_Status@command
 11702                           
 11703                           ;Main_B1.c: 425: char status = 0;
 11704  163D  01A6               	clrf	getMain_All_Error_Status@status
 11705                           
 11706                           ;Main_B1.c: 436: if (status == 0 && command != 2) {
 11707  163E  08A6               	movf	getMain_All_Error_Status@status,f
 11708  163F  1D03               	skipz
 11709  1640  2E55               	goto	l4916
 11710  1641  0825               	movf	getMain_All_Error_Status@command,w
 11711  1642  3A02               	xorlw	2
 11712  1643  1903               	skipnz
 11713  1644  2E55               	goto	l4916
 11714                           
 11715                           ;Main_B1.c: 437: status = Temp.ERROR == 1 ? 2 : 0;
 11716  1645  0021               	movlb	1	; select bank1
 11717  1646  18D6               	btfsc	_Temp^(0+128),1
 11718  1647  2E4C               	goto	l4914
 11719  1648  0020               	movlb	0	; select bank0
 11720  1649  01A1               	clrf	_getMain_All_Error_Status$3083
 11721  164A  01A2               	clrf	_getMain_All_Error_Status$3083+1
 11722  164B  2E51               	goto	l1069
 11723  164C                     l4914:	
 11724  164C  3002               	movlw	2
 11725  164D  0020               	movlb	0	; select bank0
 11726  164E  00A1               	movwf	_getMain_All_Error_Status$3083
 11727  164F  3000               	movlw	0
 11728  1650  00A2               	movwf	_getMain_All_Error_Status$3083+1
 11729  1651                     l1069:	
 11730  1651  0821               	movf	_getMain_All_Error_Status$3083,w
 11731  1652  00A0               	movwf	??_getMain_All_Error_Status
 11732  1653  0820               	movf	??_getMain_All_Error_Status,w
 11733  1654  00A6               	movwf	getMain_All_Error_Status@status
 11734  1655                     l4916:	
 11735                           
 11736                           ;Main_B1.c: 438: }
 11737                           ;Main_B1.c: 443: if (status == 0 && command != 3) {
 11738  1655  08A6               	movf	getMain_All_Error_Status@status,f
 11739  1656  1D03               	skipz
 11740  1657  2E6C               	goto	l1070
 11741  1658  0825               	movf	getMain_All_Error_Status@command,w
 11742  1659  3A03               	xorlw	3
 11743  165A  1903               	skipnz
 11744  165B  2E6C               	goto	l1070
 11745                           
 11746                           ;Main_B1.c: 444: status = Load.ERROR == 1 ? 3 : 0;
 11747  165C  0022               	movlb	2	; select bank2
 11748  165D  1AA0               	btfsc	_Load^(0+256),5
 11749  165E  2E63               	goto	l4924
 11750  165F  0020               	movlb	0	; select bank0
 11751  1660  01A3               	clrf	_getMain_All_Error_Status$3084
 11752  1661  01A4               	clrf	_getMain_All_Error_Status$3084+1
 11753  1662  2E68               	goto	l1074
 11754  1663                     l4924:	
 11755  1663  3003               	movlw	3
 11756  1664  0020               	movlb	0	; select bank0
 11757  1665  00A3               	movwf	_getMain_All_Error_Status$3084
 11758  1666  3000               	movlw	0
 11759  1667  00A4               	movwf	_getMain_All_Error_Status$3084+1
 11760  1668                     l1074:	
 11761  1668  0823               	movf	_getMain_All_Error_Status$3084,w
 11762  1669  00A0               	movwf	??_getMain_All_Error_Status
 11763  166A  0820               	movf	??_getMain_All_Error_Status,w
 11764  166B  00A6               	movwf	getMain_All_Error_Status@status
 11765  166C                     l1070:	
 11766                           
 11767                           ;Main_B1.c: 445: }
 11768                           ;Main_B1.c: 455: return status;
 11769  166C  0826               	movf	getMain_All_Error_Status@status,w
 11770  166D  0008               	return
 11771  166E                     __end_of_getMain_All_Error_Status:	
 11772                           
 11773                           	psect	text76
 11774  085A                     __ptext76:	
 11775 ;; *************** function _DimmerLights_DimmingFunction *****************
 11776 ;; Defined at:
 11777 ;;		line 1790 in file "../src/Dimmer_B1.c"
 11778 ;; Parameters:    Size  Location     Type
 11779 ;;  lights          1    wreg     unsigned char 
 11780 ;; Auto vars:     Size  Location     Type
 11781 ;;  lights          1    1[BANK0 ] unsigned char 
 11782 ;; Return value:  Size  Location     Type
 11783 ;;		None               void
 11784 ;; Registers used:
 11785 ;;		wreg, status,2, status,0
 11786 ;; Tracked objects:
 11787 ;;		On entry : 0/0
 11788 ;;		On exit  : 0/0
 11789 ;;		Unchanged: 0/0
 11790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11792 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11793 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11794 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11795 ;;Total ram usage:        2 bytes
 11796 ;; Hardware stack levels used:    1
 11797 ;; Hardware stack levels required when called:    5
 11798 ;; This function calls:
 11799 ;;		Nothing
 11800 ;; This function is called by:
 11801 ;;		_DimmerLights_Main
 11802 ;; This function uses a non-reentrant model
 11803 ;;
 11804                           
 11805                           
 11806                           ;psect for function _DimmerLights_DimmingFunction
 11807  085A                     _DimmerLights_DimmingFunction:	
 11808                           
 11809                           ;incstack = 0
 11810                           ; Regs used in _DimmerLights_DimmingFunction: [wreg+status,2+status,0]
 11811                           ;DimmerLights_DimmingFunction@lights stored from wreg
 11812  085A  0020               	movlb	0	; select bank0
 11813  085B  00A1               	movwf	DimmerLights_DimmingFunction@lights
 11814                           
 11815                           ;Dimmer_B1.c: 1792: if (lights == 1) {
 11816  085C  0821               	movf	DimmerLights_DimmingFunction@lights,w
 11817  085D  3A01               	xorlw	1
 11818  085E  1D03               	skipz
 11819  085F  0008               	return
 11820                           
 11821                           ;Dimmer_B1.c: 1793: if (DimmerIntr1.Tune == 1) {
 11822  0860  0021               	movlb	1	; select bank1
 11823  0861  1CB9               	btfss	_DimmerIntr1^(0+128),1
 11824  0862  0008               	return
 11825                           
 11826                           ;Dimmer_B1.c: 1794: DimmerIntr1.Tune = 0;
 11827  0863  10B9               	bcf	_DimmerIntr1^(0+128),1
 11828                           
 11829                           ;Dimmer_B1.c: 1795: DimmerIntr1.TuneTime++;
 11830  0864  3001               	movlw	1
 11831  0865  0020               	movlb	0	; select bank0
 11832  0866  00A0               	movwf	??_DimmerLights_DimmingFunction
 11833  0867  0820               	movf	??_DimmerLights_DimmingFunction,w
 11834  0868  0021               	movlb	1	; select bank1
 11835  0869  07BC               	addwf	(_DimmerIntr1^(0+128)+3),f
 11836                           
 11837                           ;Dimmer_B1.c: 1796: if (DimmerIntr1.TuneTime >= DimmerIntr1.TuneTimeValue) {
 11838  086A  083D               	movf	(_DimmerIntr1^(0+128)+4),w
 11839  086B  023C               	subwf	(_DimmerIntr1^(0+128)+3),w
 11840  086C  1C03               	skipc
 11841  086D  0008               	return
 11842                           
 11843                           ;Dimmer_B1.c: 1797: DimmerIntr1.TuneTime = 0;
 11844  086E  01BC               	clrf	(_DimmerIntr1^(0+128)+3)
 11845                           
 11846                           ;Dimmer_B1.c: 1798: DimmerIntr1.TuneGO = 1;
 11847  086F  173A               	bsf	(_DimmerIntr1^(0+128)+1),6
 11848                           
 11849                           ;Dimmer_B1.c: 1799: if (DimmerIntr1.Dimming_Sw == 1) {
 11850  0870  1E39               	btfss	_DimmerIntr1^(0+128),4
 11851  0871  288A               	goto	l556
 11852                           
 11853                           ;Dimmer_B1.c: 1800: if (DimmerIntr1.Dimming_Status == 0) {
 11854  0872  1AB9               	btfsc	_DimmerIntr1^(0+128),5
 11855  0873  2881               	goto	l5260
 11856                           
 11857                           ;Dimmer_B1.c: 1801: if (DimmerIntr1.DimmingValue < ((char)(70*0.6))) {
 11858  0874  302A               	movlw	42
 11859  0875  023E               	subwf	(_DimmerIntr1^(0+128)+5),w
 11860  0876  1803               	skipnc
 11861  0877  287F               	goto	l558
 11862                           
 11863                           ;Dimmer_B1.c: 1802: DimmerIntr1.DimmingValue++;
 11864  0878  3001               	movlw	1
 11865  0879  0020               	movlb	0	; select bank0
 11866  087A  00A0               	movwf	??_DimmerLights_DimmingFunction
 11867  087B  0820               	movf	??_DimmerLights_DimmingFunction,w
 11868  087C  0021               	movlb	1	; select bank1
 11869  087D  07BE               	addwf	(_DimmerIntr1^(0+128)+5),f
 11870                           
 11871                           ;Dimmer_B1.c: 1803: } else {
 11872  087E  0008               	return
 11873  087F                     l558:	
 11874                           
 11875                           ;Dimmer_B1.c: 1804: DimmerIntr1.Dimming_Status = 1;
 11876  087F  16B9               	bsf	_DimmerIntr1^(0+128),5
 11877                           
 11878                           ;Dimmer_B1.c: 1805: }
 11879                           ;Dimmer_B1.c: 1806: } else {
 11880  0880  0008               	return
 11881  0881                     l5260:	
 11882                           
 11883                           ;Dimmer_B1.c: 1807: if (DimmerIntr1.DimmingValue > ((char)(10*0.6))) {
 11884  0881  3007               	movlw	7
 11885  0882  023E               	subwf	(_DimmerIntr1^(0+128)+5),w
 11886  0883  1C03               	skipc
 11887  0884  2888               	goto	l561
 11888                           
 11889                           ;Dimmer_B1.c: 1808: DimmerIntr1.DimmingValue--;
 11890  0885  3001               	movlw	1
 11891  0886  02BE               	subwf	(_DimmerIntr1^(0+128)+5),f
 11892                           
 11893                           ;Dimmer_B1.c: 1809: } else {
 11894  0887  0008               	return
 11895  0888                     l561:	
 11896                           
 11897                           ;Dimmer_B1.c: 1810: DimmerIntr1.Dimming_Status = 0;
 11898  0888  12B9               	bcf	_DimmerIntr1^(0+128),5
 11899                           
 11900                           ;Dimmer_B1.c: 1811: }
 11901                           ;Dimmer_B1.c: 1812: }
 11902                           ;Dimmer_B1.c: 1813: } else if (DimmerIntr1.Dimming_RF == 1) {
 11903  0889  0008               	return
 11904  088A                     l556:	
 11905  088A  1F39               	btfss	_DimmerIntr1^(0+128),6
 11906  088B  0008               	return
 11907                           
 11908                           ;Dimmer_B1.c: 1814: if (DimmerIntr1.DimmingValue < DimmerIntr1.MaxmumValue) {
 11909  088C  083F               	movf	(_DimmerIntr1^(0+128)+6),w
 11910  088D  023E               	subwf	(_DimmerIntr1^(0+128)+5),w
 11911  088E  1803               	skipnc
 11912  088F  2897               	goto	l5268
 11913                           
 11914                           ;Dimmer_B1.c: 1815: DimmerIntr1.DimmingValue++;
 11915  0890  3001               	movlw	1
 11916  0891  0020               	movlb	0	; select bank0
 11917  0892  00A0               	movwf	??_DimmerLights_DimmingFunction
 11918  0893  0820               	movf	??_DimmerLights_DimmingFunction,w
 11919  0894  0021               	movlb	1	; select bank1
 11920  0895  07BE               	addwf	(_DimmerIntr1^(0+128)+5),f
 11921                           
 11922                           ;Dimmer_B1.c: 1816: } else if (DimmerIntr1.DimmingValue > DimmerIntr1.MaxmumValue) {
 11923  0896  0008               	return
 11924  0897                     l5268:	
 11925  0897  083E               	movf	(_DimmerIntr1^(0+128)+5),w
 11926  0898  023F               	subwf	(_DimmerIntr1^(0+128)+6),w
 11927  0899  1803               	skipnc
 11928  089A  289E               	goto	l567
 11929                           
 11930                           ;Dimmer_B1.c: 1817: DimmerIntr1.DimmingValue--;
 11931  089B  3001               	movlw	1
 11932  089C  02BE               	subwf	(_DimmerIntr1^(0+128)+5),f
 11933                           
 11934                           ;Dimmer_B1.c: 1818: } else {
 11935  089D  0008               	return
 11936  089E                     l567:	
 11937                           
 11938                           ;Dimmer_B1.c: 1819: DimmerIntr1.Dimming_RF = 0;
 11939  089E  1339               	bcf	_DimmerIntr1^(0+128),6
 11940  089F  0008               	return
 11941  08A0                     __end_of_DimmerLights_DimmingFunction:	
 11942                           
 11943                           	psect	text77
 11944  11BD                     __ptext77:	
 11945 ;; *************** function _DimmerLights_Initialization *****************
 11946 ;; Defined at:
 11947 ;;		line 676 in file "../src/Dimmer_B1.c"
 11948 ;; Parameters:    Size  Location     Type
 11949 ;;		None
 11950 ;; Auto vars:     Size  Location     Type
 11951 ;;		None
 11952 ;; Return value:  Size  Location     Type
 11953 ;;		None               void
 11954 ;; Registers used:
 11955 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11956 ;; Tracked objects:
 11957 ;;		On entry : 0/0
 11958 ;;		On exit  : 0/0
 11959 ;;		Unchanged: 0/0
 11960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11965 ;;Total ram usage:        0 bytes
 11966 ;; Hardware stack levels used:    1
 11967 ;; Hardware stack levels required when called:    9
 11968 ;; This function calls:
 11969 ;;		_DimmerIntr_Initialization
 11970 ;;		_setDimmerLights_Initialization
 11971 ;; This function is called by:
 11972 ;;		_main
 11973 ;; This function uses a non-reentrant model
 11974 ;;
 11975                           
 11976                           
 11977                           ;psect for function _DimmerLights_Initialization
 11978  11BD                     _DimmerLights_Initialization:	
 11979                           
 11980                           ;Dimmer_B1.c: 678: setDimmerLights_Initialization(1);
 11981                           
 11982                           ;incstack = 0
 11983                           ; Regs used in _DimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 11984  11BD  3001               	movlw	1
 11985  11BE  3191  217B  3191   	fcall	_setDimmerLights_Initialization
 11986                           
 11987                           ;Dimmer_B1.c: 688: DimmerIntr_Initialization();
 11988  11C1  318A  2233         	fcall	_DimmerIntr_Initialization
 11989  11C3  0008               	return
 11990  11C4                     __end_of_DimmerLights_Initialization:	
 11991                           
 11992                           	psect	text78
 11993  117B                     __ptext78:	
 11994 ;; *************** function _setDimmerLights_Initialization *****************
 11995 ;; Defined at:
 11996 ;;		line 692 in file "../src/Dimmer_B1.c"
 11997 ;; Parameters:    Size  Location     Type
 11998 ;;  lights          1    wreg     unsigned char 
 11999 ;; Auto vars:     Size  Location     Type
 12000 ;;  lights          1    0[COMMON] unsigned char 
 12001 ;; Return value:  Size  Location     Type
 12002 ;;		None               void
 12003 ;; Registers used:
 12004 ;;		wreg
 12005 ;; Tracked objects:
 12006 ;;		On entry : 0/0
 12007 ;;		On exit  : 0/0
 12008 ;;		Unchanged: 0/0
 12009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12014 ;;Total ram usage:        0 bytes
 12015 ;; Hardware stack levels used:    1
 12016 ;; Hardware stack levels required when called:    5
 12017 ;; This function calls:
 12018 ;;		Nothing
 12019 ;; This function is called by:
 12020 ;;		_DimmerLights_Initialization
 12021 ;; This function uses a non-reentrant model
 12022 ;;
 12023                           
 12024                           
 12025                           ;psect for function _setDimmerLights_Initialization
 12026  117B                     _setDimmerLights_Initialization:	
 12027                           
 12028                           ;incstack = 0
 12029                           ; Regs used in _setDimmerLights_Initialization: [wreg]
 12030  117B  0008               	return
 12031  117C                     __end_of_setDimmerLights_Initialization:	
 12032                           
 12033                           	psect	text79
 12034  0A33                     __ptext79:	
 12035 ;; *************** function _DimmerIntr_Initialization *****************
 12036 ;; Defined at:
 12037 ;;		line 7 in file "../src/Dimmer_B1.c"
 12038 ;; Parameters:    Size  Location     Type
 12039 ;;		None
 12040 ;; Auto vars:     Size  Location     Type
 12041 ;;		None
 12042 ;; Return value:  Size  Location     Type
 12043 ;;		None               void
 12044 ;; Registers used:
 12045 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12046 ;; Tracked objects:
 12047 ;;		On entry : 0/0
 12048 ;;		On exit  : 0/0
 12049 ;;		Unchanged: 0/0
 12050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12053 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12054 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12055 ;;Total ram usage:        2 bytes
 12056 ;; Hardware stack levels used:    1
 12057 ;; Hardware stack levels required when called:    8
 12058 ;; This function calls:
 12059 ;;		_Division
 12060 ;;		_getDimmerLights_PercentToValue
 12061 ;;		_getDimmerLights_ValueToPercent
 12062 ;;		_setMemory_Modify
 12063 ;; This function is called by:
 12064 ;;		_DimmerLights_Initialization
 12065 ;; This function uses a non-reentrant model
 12066 ;;
 12067                           
 12068                           
 12069                           ;psect for function _DimmerIntr_Initialization
 12070  0A33                     _DimmerIntr_Initialization:	
 12071                           
 12072                           ;Dimmer_B1.c: 10: DimmerIntr1.TuneTimeValue = 3;
 12073                           
 12074                           ;incstack = 0
 12075                           ; Regs used in _DimmerIntr_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 12076  0A33  3003               	movlw	3
 12077  0A34  0020               	movlb	0	; select bank0
 12078  0A35  00E2               	movwf	??_DimmerIntr_Initialization
 12079  0A36  0862               	movf	??_DimmerIntr_Initialization,w
 12080  0A37  0021               	movlb	1	; select bank1
 12081  0A38  00BD               	movwf	(_DimmerIntr1^(0+128)+4)
 12082                           
 12083                           ;Dimmer_B1.c: 11: DimmerIntr1.MaxmumValue = ((char)(70*0.6));
 12084  0A39  302A               	movlw	42
 12085  0A3A  0020               	movlb	0	; select bank0
 12086  0A3B  00E2               	movwf	??_DimmerIntr_Initialization
 12087  0A3C  0862               	movf	??_DimmerIntr_Initialization,w
 12088  0A3D  0021               	movlb	1	; select bank1
 12089  0A3E  00BF               	movwf	(_DimmerIntr1^(0+128)+6)
 12090                           
 12091                           ;Dimmer_B1.c: 12: DimmerIntr1.MinimumValue = ((char)(10*0.6));
 12092  0A3F  3006               	movlw	6
 12093  0A40  0020               	movlb	0	; select bank0
 12094  0A41  00E2               	movwf	??_DimmerIntr_Initialization
 12095  0A42  0862               	movf	??_DimmerIntr_Initialization,w
 12096  0A43  0021               	movlb	1	; select bank1
 12097  0A44  00C0               	movwf	(_DimmerIntr1^(0+128)+7)
 12098                           
 12099                           ;Dimmer_B1.c: 13: DimmerIntr1.Tune = 0;
 12100  0A45  10B9               	bcf	_DimmerIntr1^(0+128),1
 12101                           
 12102                           ;Dimmer_B1.c: 17: if (myMain.InitDimmer == 1) {
 12103  0A46  1E2A               	btfss	(_myMain^(0+128)+10),4
 12104  0A47  2A57               	goto	l363
 12105                           
 12106                           ;Dimmer_B1.c: 18: product->Data[21] = getDimmerLights_ValueToPercent(((char)(70*0.6)));
 12107  0A48  302A               	movlw	42
 12108  0A49  318B  2357  318A   	fcall	_getDimmerLights_ValueToPercent
 12109  0A4C  0020               	movlb	0	; select bank0
 12110  0A4D  00E2               	movwf	??_DimmerIntr_Initialization
 12111  0A4E  0021               	movlb	1	; select bank1
 12112  0A4F  086E               	movf	_product^(0+128),w
 12113  0A50  3E15               	addlw	21
 12114  0A51  0086               	movwf	6
 12115  0A52  3001               	movlw	1	; select bank2/3
 12116  0A53  0087               	movwf	7
 12117  0A54  0020               	movlb	0	; select bank0
 12118  0A55  0862               	movf	??_DimmerIntr_Initialization,w
 12119  0A56  0081               	movwf	1
 12120  0A57                     l363:	
 12121                           
 12122                           ;Dimmer_B1.c: 19: }
 12123                           ;Dimmer_B1.c: 21: DimmerIntr1.DimmingValue = getDimmerLights_PercentToValue(product->Dat
      +                          a[21]);
 12124  0A57  0021               	movlb	1	; select bank1
 12125  0A58  086E               	movf	_product^(0+128),w
 12126  0A59  3E15               	addlw	21
 12127  0A5A  0086               	movwf	6
 12128  0A5B  3001               	movlw	1	; select bank2/3
 12129  0A5C  0087               	movwf	7
 12130  0A5D  0801               	movf	1,w
 12131  0A5E  318A  22F2  318A   	fcall	_getDimmerLights_PercentToValue
 12132  0A61  0020               	movlb	0	; select bank0
 12133  0A62  00E2               	movwf	??_DimmerIntr_Initialization
 12134  0A63  0862               	movf	??_DimmerIntr_Initialization,w
 12135  0A64  0021               	movlb	1	; select bank1
 12136  0A65  00BE               	movwf	(_DimmerIntr1^(0+128)+5)
 12137                           
 12138                           ;Dimmer_B1.c: 28: DimmerIntr1.TuneValue2 = Division(((char)(70*0.6)), 2);
 12139  0A66  3002               	movlw	2
 12140  0A67  0020               	movlb	0	; select bank0
 12141  0A68  00E2               	movwf	??_DimmerIntr_Initialization
 12142  0A69  0862               	movf	??_DimmerIntr_Initialization,w
 12143  0A6A  00A5               	movwf	Division@num
 12144  0A6B  302A               	movlw	42
 12145  0A6C  3192  22BF  318A   	fcall	_Division
 12146  0A6F  0020               	movlb	0	; select bank0
 12147  0A70  00E3               	movwf	??_DimmerIntr_Initialization+1
 12148  0A71  0863               	movf	??_DimmerIntr_Initialization+1,w
 12149  0A72  0021               	movlb	1	; select bank1
 12150  0A73  00C1               	movwf	(_DimmerIntr1^(0+128)+8)
 12151                           
 12152                           ;Dimmer_B1.c: 29: DimmerIntr1.TuneValue3 = DimmerIntr1.TuneValue2 + (60 - ((char)(70*0.6
      +                          )));
 12153  0A74  0841               	movf	(_DimmerIntr1^(0+128)+8),w
 12154  0A75  3E12               	addlw	18
 12155  0A76  0020               	movlb	0	; select bank0
 12156  0A77  00E2               	movwf	??_DimmerIntr_Initialization
 12157  0A78  0862               	movf	??_DimmerIntr_Initialization,w
 12158  0A79  0021               	movlb	1	; select bank1
 12159  0A7A  00C2               	movwf	(_DimmerIntr1^(0+128)+9)
 12160                           
 12161                           ;Dimmer_B1.c: 30: DimmerIntr1.TuneValue4 = DimmerIntr1.TuneValue3 + DimmerIntr1.TuneValu
      +                          e2;
 12162  0A7B  0842               	movf	(_DimmerIntr1^(0+128)+9),w
 12163  0A7C  0741               	addwf	(_DimmerIntr1^(0+128)+8),w
 12164  0A7D  0020               	movlb	0	; select bank0
 12165  0A7E  00E2               	movwf	??_DimmerIntr_Initialization
 12166  0A7F  0862               	movf	??_DimmerIntr_Initialization,w
 12167  0A80  0021               	movlb	1	; select bank1
 12168  0A81  00C3               	movwf	(_DimmerIntr1^(0+128)+10)
 12169                           
 12170                           ;Dimmer_B1.c: 31: DimmerIntr1.TuneEnd = DimmerIntr1.TuneValue4 + 1;
 12171  0A82  0843               	movf	(_DimmerIntr1^(0+128)+10),w
 12172  0A83  3E01               	addlw	1
 12173  0A84  0020               	movlb	0	; select bank0
 12174  0A85  00E2               	movwf	??_DimmerIntr_Initialization
 12175  0A86  0862               	movf	??_DimmerIntr_Initialization,w
 12176  0A87  0021               	movlb	1	; select bank1
 12177  0A88  00C4               	movwf	(_DimmerIntr1^(0+128)+11)
 12178                           
 12179                           ;Dimmer_B1.c: 81: if (myMain.InitDimmer == 1) {
 12180  0A89  1E2A               	btfss	(_myMain^(0+128)+10),4
 12181  0A8A  0008               	return
 12182                           
 12183                           ;Dimmer_B1.c: 82: myMain.InitDimmer = 0;
 12184  0A8B  122A               	bcf	(_myMain^(0+128)+10),4
 12185                           
 12186                           ;Dimmer_B1.c: 83: myMain.SaveDimmer = 1;
 12187  0A8C  16AA               	bsf	(_myMain^(0+128)+10),5
 12188                           
 12189                           ;Dimmer_B1.c: 84: setMemory_Modify(1);
 12190  0A8D  3001               	movlw	1
 12191  0A8E  3193  239B         	fcall	_setMemory_Modify
 12192  0A90  0008               	return
 12193  0A91                     __end_of_DimmerIntr_Initialization:	
 12194                           
 12195                           	psect	text80
 12196  139B                     __ptext80:	
 12197 ;; *************** function _setMemory_Modify *****************
 12198 ;; Defined at:
 12199 ;;		line 1083 in file "../src/MCU_B1.c"
 12200 ;; Parameters:    Size  Location     Type
 12201 ;;  command         1    wreg     unsigned char 
 12202 ;; Auto vars:     Size  Location     Type
 12203 ;;  command         1    1[BANK0 ] unsigned char 
 12204 ;; Return value:  Size  Location     Type
 12205 ;;		None               void
 12206 ;; Registers used:
 12207 ;;		wreg, status,2, status,0
 12208 ;; Tracked objects:
 12209 ;;		On entry : 0/0
 12210 ;;		On exit  : 0/0
 12211 ;;		Unchanged: 0/0
 12212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12214 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12215 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12216 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12217 ;;Total ram usage:        2 bytes
 12218 ;; Hardware stack levels used:    1
 12219 ;; Hardware stack levels required when called:    5
 12220 ;; This function calls:
 12221 ;;		Nothing
 12222 ;; This function is called by:
 12223 ;;		_DimmerIntr_Initialization
 12224 ;;		_setDimmerLights_Dimming
 12225 ;; This function uses a non-reentrant model
 12226 ;;
 12227                           
 12228                           
 12229                           ;psect for function _setMemory_Modify
 12230  139B                     _setMemory_Modify:	
 12231                           
 12232                           ;incstack = 0
 12233                           ; Regs used in _setMemory_Modify: [wreg+status,2+status,0]
 12234                           ;setMemory_Modify@command stored from wreg
 12235  139B  0020               	movlb	0	; select bank0
 12236  139C  00A1               	movwf	setMemory_Modify@command
 12237                           
 12238                           ;MCU_B1.c: 1084: Memory.Modify = command == 1 ? 1 : 0;
 12239  139D  0821               	movf	setMemory_Modify@command,w
 12240  139E  3A01               	xorlw	1
 12241  139F  3000               	movlw	0
 12242  13A0  1903               	skipnz
 12243  13A1  3001               	movlw	1
 12244  13A2  00A0               	movwf	??_setMemory_Modify
 12245  13A3  0023               	movlb	3	; select bank3
 12246  13A4  0844               	movf	(_Memory^(0+384)+36),w
 12247  13A5  0020               	movlb	0	; select bank0
 12248  13A6  0620               	xorwf	??_setMemory_Modify,w
 12249  13A7  39FE               	andlw	-2
 12250  13A8  0620               	xorwf	??_setMemory_Modify,w
 12251  13A9  0023               	movlb	3	; select bank3
 12252  13AA  00C4               	movwf	(_Memory^(0+384)+36)
 12253                           
 12254                           ;MCU_B1.c: 1085: Memory.Time = 0;
 12255  13AB  01C2               	clrf	(_Memory^(0+384)+34)
 12256  13AC  01C3               	clrf	((_Memory+1)^(0+384)+34)
 12257  13AD  0008               	return
 12258  13AE                     __end_of_setMemory_Modify:	
 12259                           
 12260                           	psect	text81
 12261  0B57                     __ptext81:	
 12262 ;; *************** function _getDimmerLights_ValueToPercent *****************
 12263 ;; Defined at:
 12264 ;;		line 1184 in file "../src/Dimmer_B1.c"
 12265 ;; Parameters:    Size  Location     Type
 12266 ;;  value           1    wreg     unsigned char 
 12267 ;; Auto vars:     Size  Location     Type
 12268 ;;  value           1   62[BANK0 ] unsigned char 
 12269 ;;  i               3   63[BANK0 ] float 
 12270 ;; Return value:  Size  Location     Type
 12271 ;;                  1    wreg      unsigned char 
 12272 ;; Registers used:
 12273 ;;		wreg, status,2, status,0, pclath, cstack
 12274 ;; Tracked objects:
 12275 ;;		On entry : 0/0
 12276 ;;		On exit  : 0/0
 12277 ;;		Unchanged: 0/0
 12278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12280 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12281 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12282 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12283 ;;Total ram usage:        6 bytes
 12284 ;; Hardware stack levels used:    1
 12285 ;; Hardware stack levels required when called:    7
 12286 ;; This function calls:
 12287 ;;		___awtoft
 12288 ;;		___ftadd
 12289 ;;		___ftdiv
 12290 ;;		___ftneg
 12291 ;;		___fttol
 12292 ;; This function is called by:
 12293 ;;		_DimmerIntr_Initialization
 12294 ;;		_setDimmerLights_Dimming
 12295 ;; This function uses a non-reentrant model
 12296 ;;
 12297                           
 12298                           
 12299                           ;psect for function _getDimmerLights_ValueToPercent
 12300  0B57                     _getDimmerLights_ValueToPercent:	
 12301                           
 12302                           ;incstack = 0
 12303                           ; Regs used in _getDimmerLights_ValueToPercent: [wreg+status,2+status,0+pclath+cstack]
 12304                           ;getDimmerLights_ValueToPercent@value stored from wreg
 12305  0B57  0020               	movlb	0	; select bank0
 12306  0B58  00DE               	movwf	getDimmerLights_ValueToPercent@value
 12307                           
 12308                           ;Dimmer_B1.c: 1192: float i = ((char)(70*0.6)) - ((char)(10*0.6));
 12309  0B59  3000               	movlw	0
 12310  0B5A  00DF               	movwf	getDimmerLights_ValueToPercent@i
 12311  0B5B  3010               	movlw	16
 12312  0B5C  00E0               	movwf	getDimmerLights_ValueToPercent@i+1
 12313  0B5D  3042               	movlw	66
 12314  0B5E  00E1               	movwf	getDimmerLights_ValueToPercent@i+2
 12315                           
 12316                           ;Dimmer_B1.c: 1193: i /= 100;
 12317  0B5F  3000               	movlw	0
 12318  0B60  00AE               	movwf	___ftdiv@f2
 12319  0B61  30C8               	movlw	200
 12320  0B62  00AF               	movwf	___ftdiv@f2+1
 12321  0B63  3042               	movlw	66
 12322  0B64  00B0               	movwf	___ftdiv@f2+2
 12323  0B65  085F               	movf	getDimmerLights_ValueToPercent@i,w
 12324  0B66  00B1               	movwf	___ftdiv@f1
 12325  0B67  0860               	movf	getDimmerLights_ValueToPercent@i+1,w
 12326  0B68  00B2               	movwf	___ftdiv@f1+1
 12327  0B69  0861               	movf	getDimmerLights_ValueToPercent@i+2,w
 12328  0B6A  00B3               	movwf	___ftdiv@f1+2
 12329  0B6B  318F  2757  318B   	fcall	___ftdiv
 12330  0B6E  0020               	movlb	0	; select bank0
 12331  0B6F  082E               	movf	?___ftdiv,w
 12332  0B70  00DF               	movwf	getDimmerLights_ValueToPercent@i
 12333  0B71  082F               	movf	?___ftdiv+1,w
 12334  0B72  00E0               	movwf	getDimmerLights_ValueToPercent@i+1
 12335  0B73  0830               	movf	?___ftdiv+2,w
 12336  0B74  00E1               	movwf	getDimmerLights_ValueToPercent@i+2
 12337                           
 12338                           ;Dimmer_B1.c: 1195: return (char) (100 - ((((char)(70*0.6)) - value) / i));
 12339  0B75  085E               	movf	getDimmerLights_ValueToPercent@value,w
 12340  0B76  00DC               	movwf	??_getDimmerLights_ValueToPercent
 12341  0B77  01DD               	clrf	??_getDimmerLights_ValueToPercent+1
 12342  0B78  09DC               	comf	??_getDimmerLights_ValueToPercent,f
 12343  0B79  09DD               	comf	??_getDimmerLights_ValueToPercent+1,f
 12344  0B7A  0ADC               	incf	??_getDimmerLights_ValueToPercent,f
 12345  0B7B  1903               	skipnz
 12346  0B7C  0ADD               	incf	??_getDimmerLights_ValueToPercent+1,f
 12347  0B7D  085C               	movf	??_getDimmerLights_ValueToPercent,w
 12348  0B7E  3E2A               	addlw	42
 12349  0B7F  00A8               	movwf	___awtoft@c
 12350  0B80  3000               	movlw	0
 12351  0B81  3D5D               	addwfc	??_getDimmerLights_ValueToPercent+1,w
 12352  0B82  00A9               	movwf	___awtoft@c+1
 12353  0B83  3195  2591  318B   	fcall	___awtoft
 12354  0B86  0020               	movlb	0	; select bank0
 12355  0B87  0828               	movf	?___awtoft,w
 12356  0B88  00B1               	movwf	___ftdiv@f1
 12357  0B89  0829               	movf	?___awtoft+1,w
 12358  0B8A  00B2               	movwf	___ftdiv@f1+1
 12359  0B8B  082A               	movf	?___awtoft+2,w
 12360  0B8C  00B3               	movwf	___ftdiv@f1+2
 12361  0B8D  085F               	movf	getDimmerLights_ValueToPercent@i,w
 12362  0B8E  00AE               	movwf	___ftdiv@f2
 12363  0B8F  0860               	movf	getDimmerLights_ValueToPercent@i+1,w
 12364  0B90  00AF               	movwf	___ftdiv@f2+1
 12365  0B91  0861               	movf	getDimmerLights_ValueToPercent@i+2,w
 12366  0B92  00B0               	movwf	___ftdiv@f2+2
 12367  0B93  318F  2757  318B   	fcall	___ftdiv
 12368  0B96  0020               	movlb	0	; select bank0
 12369  0B97  082E               	movf	?___ftdiv,w
 12370  0B98  00BE               	movwf	___ftneg@f1
 12371  0B99  082F               	movf	?___ftdiv+1,w
 12372  0B9A  00BF               	movwf	___ftneg@f1+1
 12373  0B9B  0830               	movf	?___ftdiv+2,w
 12374  0B9C  00C0               	movwf	___ftneg@f1+2
 12375  0B9D  3191  21F3  318B   	fcall	___ftneg
 12376  0BA0  0020               	movlb	0	; select bank0
 12377  0BA1  083E               	movf	?___ftneg,w
 12378  0BA2  00C4               	movwf	___ftadd@f2
 12379  0BA3  083F               	movf	?___ftneg+1,w
 12380  0BA4  00C5               	movwf	___ftadd@f2+1
 12381  0BA5  0840               	movf	?___ftneg+2,w
 12382  0BA6  00C6               	movwf	___ftadd@f2+2
 12383  0BA7  3000               	movlw	0
 12384  0BA8  00C1               	movwf	___ftadd@f1
 12385  0BA9  30C8               	movlw	200
 12386  0BAA  00C2               	movwf	___ftadd@f1+1
 12387  0BAB  3042               	movlw	66
 12388  0BAC  00C3               	movwf	___ftadd@f1+2
 12389  0BAD  3183  2367  318B   	fcall	___ftadd
 12390  0BB0  0020               	movlb	0	; select bank0
 12391  0BB1  0841               	movf	?___ftadd,w
 12392  0BB2  00CE               	movwf	___fttol@f1
 12393  0BB3  0842               	movf	?___ftadd+1,w
 12394  0BB4  00CF               	movwf	___fttol@f1+1
 12395  0BB5  0843               	movf	?___ftadd+2,w
 12396  0BB6  00D0               	movwf	___fttol@f1+2
 12397  0BB7  318D  2519         	fcall	___fttol
 12398  0BB9  0020               	movlb	0	; select bank0
 12399  0BBA  084E               	movf	?___fttol,w
 12400  0BBB  0008               	return
 12401  0BBC                     __end_of_getDimmerLights_ValueToPercent:	
 12402                           
 12403                           	psect	text82
 12404  0AF2                     __ptext82:	
 12405 ;; *************** function _getDimmerLights_PercentToValue *****************
 12406 ;; Defined at:
 12407 ;;		line 1168 in file "../src/Dimmer_B1.c"
 12408 ;; Parameters:    Size  Location     Type
 12409 ;;  value           1    wreg     unsigned char 
 12410 ;; Auto vars:     Size  Location     Type
 12411 ;;  value           1   62[BANK0 ] unsigned char 
 12412 ;;  i               3   63[BANK0 ] float 
 12413 ;; Return value:  Size  Location     Type
 12414 ;;                  1    wreg      unsigned char 
 12415 ;; Registers used:
 12416 ;;		wreg, status,2, status,0, pclath, cstack
 12417 ;; Tracked objects:
 12418 ;;		On entry : 0/0
 12419 ;;		On exit  : 0/0
 12420 ;;		Unchanged: 0/0
 12421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12423 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12424 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12425 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12426 ;;Total ram usage:        6 bytes
 12427 ;; Hardware stack levels used:    1
 12428 ;; Hardware stack levels required when called:    7
 12429 ;; This function calls:
 12430 ;;		___awtoft
 12431 ;;		___ftadd
 12432 ;;		___ftdiv
 12433 ;;		___ftmul
 12434 ;;		___ftneg
 12435 ;;		___fttol
 12436 ;; This function is called by:
 12437 ;;		_DimmerIntr_Initialization
 12438 ;;		_setDimmerLights_OnOff
 12439 ;; This function uses a non-reentrant model
 12440 ;;
 12441                           
 12442                           
 12443                           ;psect for function _getDimmerLights_PercentToValue
 12444  0AF2                     _getDimmerLights_PercentToValue:	
 12445                           
 12446                           ;incstack = 0
 12447                           ; Regs used in _getDimmerLights_PercentToValue: [wreg+status,2+status,0+pclath+cstack]
 12448                           ;getDimmerLights_PercentToValue@value stored from wreg
 12449  0AF2  0020               	movlb	0	; select bank0
 12450  0AF3  00DE               	movwf	getDimmerLights_PercentToValue@value
 12451                           
 12452                           ;Dimmer_B1.c: 1176: float i = ((char)(70*0.6)) - ((char)(10*0.6));
 12453  0AF4  3000               	movlw	0
 12454  0AF5  00DF               	movwf	getDimmerLights_PercentToValue@i
 12455  0AF6  3010               	movlw	16
 12456  0AF7  00E0               	movwf	getDimmerLights_PercentToValue@i+1
 12457  0AF8  3042               	movlw	66
 12458  0AF9  00E1               	movwf	getDimmerLights_PercentToValue@i+2
 12459                           
 12460                           ;Dimmer_B1.c: 1177: i /= 100;
 12461  0AFA  3000               	movlw	0
 12462  0AFB  00AE               	movwf	___ftdiv@f2
 12463  0AFC  30C8               	movlw	200
 12464  0AFD  00AF               	movwf	___ftdiv@f2+1
 12465  0AFE  3042               	movlw	66
 12466  0AFF  00B0               	movwf	___ftdiv@f2+2
 12467  0B00  085F               	movf	getDimmerLights_PercentToValue@i,w
 12468  0B01  00B1               	movwf	___ftdiv@f1
 12469  0B02  0860               	movf	getDimmerLights_PercentToValue@i+1,w
 12470  0B03  00B2               	movwf	___ftdiv@f1+1
 12471  0B04  0861               	movf	getDimmerLights_PercentToValue@i+2,w
 12472  0B05  00B3               	movwf	___ftdiv@f1+2
 12473  0B06  318F  2757  318A   	fcall	___ftdiv
 12474  0B09  0020               	movlb	0	; select bank0
 12475  0B0A  082E               	movf	?___ftdiv,w
 12476  0B0B  00DF               	movwf	getDimmerLights_PercentToValue@i
 12477  0B0C  082F               	movf	?___ftdiv+1,w
 12478  0B0D  00E0               	movwf	getDimmerLights_PercentToValue@i+1
 12479  0B0E  0830               	movf	?___ftdiv+2,w
 12480  0B0F  00E1               	movwf	getDimmerLights_PercentToValue@i+2
 12481                           
 12482                           ;Dimmer_B1.c: 1179: return (char) (((char)(70*0.6)) - ((100 - value) * i));
 12483  0B10  085E               	movf	getDimmerLights_PercentToValue@value,w
 12484  0B11  00DC               	movwf	??_getDimmerLights_PercentToValue
 12485  0B12  01DD               	clrf	??_getDimmerLights_PercentToValue+1
 12486  0B13  09DC               	comf	??_getDimmerLights_PercentToValue,f
 12487  0B14  09DD               	comf	??_getDimmerLights_PercentToValue+1,f
 12488  0B15  0ADC               	incf	??_getDimmerLights_PercentToValue,f
 12489  0B16  1903               	skipnz
 12490  0B17  0ADD               	incf	??_getDimmerLights_PercentToValue+1,f
 12491  0B18  085C               	movf	??_getDimmerLights_PercentToValue,w
 12492  0B19  3E64               	addlw	100
 12493  0B1A  00A8               	movwf	___awtoft@c
 12494  0B1B  3000               	movlw	0
 12495  0B1C  3D5D               	addwfc	??_getDimmerLights_PercentToValue+1,w
 12496  0B1D  00A9               	movwf	___awtoft@c+1
 12497  0B1E  3195  2591  318A   	fcall	___awtoft
 12498  0B21  0020               	movlb	0	; select bank0
 12499  0B22  0828               	movf	?___awtoft,w
 12500  0B23  00B1               	movwf	___ftmul@f2
 12501  0B24  0829               	movf	?___awtoft+1,w
 12502  0B25  00B2               	movwf	___ftmul@f2+1
 12503  0B26  082A               	movf	?___awtoft+2,w
 12504  0B27  00B3               	movwf	___ftmul@f2+2
 12505  0B28  085F               	movf	getDimmerLights_PercentToValue@i,w
 12506  0B29  00AE               	movwf	___ftmul@f1
 12507  0B2A  0860               	movf	getDimmerLights_PercentToValue@i+1,w
 12508  0B2B  00AF               	movwf	___ftmul@f1+1
 12509  0B2C  0861               	movf	getDimmerLights_PercentToValue@i+2,w
 12510  0B2D  00B0               	movwf	___ftmul@f1+2
 12511  0B2E  3186  26CC  318A   	fcall	___ftmul
 12512  0B31  0020               	movlb	0	; select bank0
 12513  0B32  082E               	movf	?___ftmul,w
 12514  0B33  00BE               	movwf	___ftneg@f1
 12515  0B34  082F               	movf	?___ftmul+1,w
 12516  0B35  00BF               	movwf	___ftneg@f1+1
 12517  0B36  0830               	movf	?___ftmul+2,w
 12518  0B37  00C0               	movwf	___ftneg@f1+2
 12519  0B38  3191  21F3  318A   	fcall	___ftneg
 12520  0B3B  0020               	movlb	0	; select bank0
 12521  0B3C  083E               	movf	?___ftneg,w
 12522  0B3D  00C4               	movwf	___ftadd@f2
 12523  0B3E  083F               	movf	?___ftneg+1,w
 12524  0B3F  00C5               	movwf	___ftadd@f2+1
 12525  0B40  0840               	movf	?___ftneg+2,w
 12526  0B41  00C6               	movwf	___ftadd@f2+2
 12527  0B42  3000               	movlw	0
 12528  0B43  00C1               	movwf	___ftadd@f1
 12529  0B44  3028               	movlw	40
 12530  0B45  00C2               	movwf	___ftadd@f1+1
 12531  0B46  3042               	movlw	66
 12532  0B47  00C3               	movwf	___ftadd@f1+2
 12533  0B48  3183  2367  318A   	fcall	___ftadd
 12534  0B4B  0020               	movlb	0	; select bank0
 12535  0B4C  0841               	movf	?___ftadd,w
 12536  0B4D  00CE               	movwf	___fttol@f1
 12537  0B4E  0842               	movf	?___ftadd+1,w
 12538  0B4F  00CF               	movwf	___fttol@f1+1
 12539  0B50  0843               	movf	?___ftadd+2,w
 12540  0B51  00D0               	movwf	___fttol@f1+2
 12541  0B52  318D  2519         	fcall	___fttol
 12542  0B54  0020               	movlb	0	; select bank0
 12543  0B55  084E               	movf	?___fttol,w
 12544  0B56  0008               	return
 12545  0B57                     __end_of_getDimmerLights_PercentToValue:	
 12546                           
 12547                           	psect	text83
 12548  0D19                     __ptext83:	
 12549 ;; *************** function ___fttol *****************
 12550 ;; Defined at:
 12551 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
 12552 ;; Parameters:    Size  Location     Type
 12553 ;;  f1              3   46[BANK0 ] float 
 12554 ;; Auto vars:     Size  Location     Type
 12555 ;;  lval            4   55[BANK0 ] unsigned long 
 12556 ;;  exp1            1   59[BANK0 ] unsigned char 
 12557 ;;  sign1           1   54[BANK0 ] unsigned char 
 12558 ;; Return value:  Size  Location     Type
 12559 ;;                  4   46[BANK0 ] long 
 12560 ;; Registers used:
 12561 ;;		wreg, status,2, status,0
 12562 ;; Tracked objects:
 12563 ;;		On entry : 0/0
 12564 ;;		On exit  : 0/0
 12565 ;;		Unchanged: 0/0
 12566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12567 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12568 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12569 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12570 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12571 ;;Total ram usage:       14 bytes
 12572 ;; Hardware stack levels used:    1
 12573 ;; Hardware stack levels required when called:    5
 12574 ;; This function calls:
 12575 ;;		Nothing
 12576 ;; This function is called by:
 12577 ;;		_getDimmerLights_PercentToValue
 12578 ;;		_getDimmerLights_ValueToPercent
 12579 ;; This function uses a non-reentrant model
 12580 ;;
 12581                           
 12582                           
 12583                           ;psect for function ___fttol
 12584  0D19                     ___fttol:	
 12585                           
 12586                           ;incstack = 0
 12587                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 12588  0D19  0020               	movlb	0	; select bank0
 12589  0D1A  084E               	movf	___fttol@f1,w
 12590  0D1B  00D2               	movwf	??___fttol
 12591  0D1C  084F               	movf	___fttol@f1+1,w
 12592  0D1D  00D3               	movwf	??___fttol+1
 12593  0D1E  0850               	movf	___fttol@f1+2,w
 12594  0D1F  00D4               	movwf	??___fttol+2
 12595  0D20  1003               	clrc
 12596  0D21  0D53               	rlf	??___fttol+1,w
 12597  0D22  0D54               	rlf	??___fttol+2,w
 12598  0D23  00D5               	movwf	??___fttol+3
 12599  0D24  0855               	movf	??___fttol+3,w
 12600  0D25  00DB               	movwf	___fttol@exp1
 12601  0D26  08DB               	movf	___fttol@exp1,f
 12602  0D27  1D03               	skipz
 12603  0D28  2D32               	goto	l4558
 12604  0D29  3000               	movlw	0
 12605  0D2A  00D1               	movwf	?___fttol+3
 12606  0D2B  3000               	movlw	0
 12607  0D2C  00D0               	movwf	?___fttol+2
 12608  0D2D  3000               	movlw	0
 12609  0D2E  00CF               	movwf	?___fttol+1
 12610  0D2F  3000               	movlw	0
 12611  0D30  00CE               	movwf	?___fttol
 12612  0D31  0008               	return
 12613  0D32                     l4558:	
 12614  0D32  084E               	movf	___fttol@f1,w
 12615  0D33  00D2               	movwf	??___fttol
 12616  0D34  084F               	movf	___fttol@f1+1,w
 12617  0D35  00D3               	movwf	??___fttol+1
 12618  0D36  0850               	movf	___fttol@f1+2,w
 12619  0D37  00D4               	movwf	??___fttol+2
 12620  0D38  3017               	movlw	23
 12621  0D39                     u4255:	
 12622  0D39  36D4               	lsrf	??___fttol+2,f
 12623  0D3A  0CD3               	rrf	??___fttol+1,f
 12624  0D3B  0CD2               	rrf	??___fttol,f
 12625  0D3C  0B89               	decfsz	9,f
 12626  0D3D  2D39               	goto	u4255
 12627  0D3E  0852               	movf	??___fttol,w
 12628  0D3F  00D5               	movwf	??___fttol+3
 12629  0D40  0855               	movf	??___fttol+3,w
 12630  0D41  00D6               	movwf	___fttol@sign1
 12631  0D42  17CF               	bsf	___fttol@f1+1,7
 12632  0D43  30FF               	movlw	255
 12633  0D44  05CE               	andwf	___fttol@f1,f
 12634  0D45  30FF               	movlw	255
 12635  0D46  05CF               	andwf	___fttol@f1+1,f
 12636  0D47  3000               	movlw	0
 12637  0D48  05D0               	andwf	___fttol@f1+2,f
 12638  0D49  084E               	movf	___fttol@f1,w
 12639  0D4A  00D7               	movwf	___fttol@lval
 12640  0D4B  084F               	movf	___fttol@f1+1,w
 12641  0D4C  00D8               	movwf	___fttol@lval+1
 12642  0D4D  0850               	movf	___fttol@f1+2,w
 12643  0D4E  00D9               	movwf	___fttol@lval+2
 12644  0D4F  01DA               	clrf	___fttol@lval+3
 12645  0D50  308E               	movlw	142
 12646  0D51  02DB               	subwf	___fttol@exp1,f
 12647  0D52  1FDB               	btfss	___fttol@exp1,7
 12648  0D53  2D70               	goto	l4578
 12649  0D54  085B               	movf	___fttol@exp1,w
 12650  0D55  3A80               	xorlw	128
 12651  0D56  3E8F               	addlw	143
 12652  0D57  1803               	skipnc
 12653  0D58  2D62               	goto	l4576
 12654  0D59  3000               	movlw	0
 12655  0D5A  00D1               	movwf	?___fttol+3
 12656  0D5B  3000               	movlw	0
 12657  0D5C  00D0               	movwf	?___fttol+2
 12658  0D5D  3000               	movlw	0
 12659  0D5E  00CF               	movwf	?___fttol+1
 12660  0D5F  3000               	movlw	0
 12661  0D60  00CE               	movwf	?___fttol
 12662  0D61  0008               	return
 12663  0D62                     l4576:	
 12664  0D62  3001               	movlw	1
 12665  0D63                     u4285:	
 12666  0D63  36DA               	lsrf	___fttol@lval+3,f
 12667  0D64  0CD9               	rrf	___fttol@lval+2,f
 12668  0D65  0CD8               	rrf	___fttol@lval+1,f
 12669  0D66  0CD7               	rrf	___fttol@lval,f
 12670  0D67  0B89               	decfsz	9,f
 12671  0D68  2D63               	goto	u4285
 12672  0D69  3001               	movlw	1
 12673  0D6A  00D2               	movwf	??___fttol
 12674  0D6B  0852               	movf	??___fttol,w
 12675  0D6C  07DB               	addwf	___fttol@exp1,f
 12676  0D6D  1903               	btfsc	3,2
 12677  0D6E  2D89               	goto	l4588
 12678  0D6F  2D62               	goto	l4576
 12679  0D70                     l4578:	
 12680  0D70  3018               	movlw	24
 12681  0D71  025B               	subwf	___fttol@exp1,w
 12682  0D72  1C03               	skipc
 12683  0D73  2D86               	goto	l4586
 12684  0D74  3000               	movlw	0
 12685  0D75  00D1               	movwf	?___fttol+3
 12686  0D76  3000               	movlw	0
 12687  0D77  00D0               	movwf	?___fttol+2
 12688  0D78  3000               	movlw	0
 12689  0D79  00CF               	movwf	?___fttol+1
 12690  0D7A  3000               	movlw	0
 12691  0D7B  00CE               	movwf	?___fttol
 12692  0D7C  0008               	return
 12693  0D7D                     l4584:	
 12694  0D7D  3001               	movlw	1
 12695  0D7E                     u4315:	
 12696  0D7E  35D7               	lslf	___fttol@lval,f
 12697  0D7F  0DD8               	rlf	___fttol@lval+1,f
 12698  0D80  0DD9               	rlf	___fttol@lval+2,f
 12699  0D81  0DDA               	rlf	___fttol@lval+3,f
 12700  0D82  0B89               	decfsz	9,f
 12701  0D83  2D7E               	goto	u4315
 12702  0D84  3001               	movlw	1
 12703  0D85  02DB               	subwf	___fttol@exp1,f
 12704  0D86                     l4586:	
 12705  0D86  08DB               	movf	___fttol@exp1,f
 12706  0D87  1D03               	skipz
 12707  0D88  2D7D               	goto	l4584
 12708  0D89                     l4588:	
 12709  0D89  0856               	movf	___fttol@sign1,w
 12710  0D8A  1903               	btfsc	3,2
 12711  0D8B  2D97               	goto	l4592
 12712  0D8C  09D7               	comf	___fttol@lval,f
 12713  0D8D  09D8               	comf	___fttol@lval+1,f
 12714  0D8E  09D9               	comf	___fttol@lval+2,f
 12715  0D8F  09DA               	comf	___fttol@lval+3,f
 12716  0D90  0AD7               	incf	___fttol@lval,f
 12717  0D91  1903               	skipnz
 12718  0D92  0AD8               	incf	___fttol@lval+1,f
 12719  0D93  1903               	skipnz
 12720  0D94  0AD9               	incf	___fttol@lval+2,f
 12721  0D95  1903               	skipnz
 12722  0D96  0ADA               	incf	___fttol@lval+3,f
 12723  0D97                     l4592:	
 12724  0D97  085A               	movf	___fttol@lval+3,w
 12725  0D98  00D1               	movwf	?___fttol+3
 12726  0D99  0859               	movf	___fttol@lval+2,w
 12727  0D9A  00D0               	movwf	?___fttol+2
 12728  0D9B  0858               	movf	___fttol@lval+1,w
 12729  0D9C  00CF               	movwf	?___fttol+1
 12730  0D9D  0857               	movf	___fttol@lval,w
 12731  0D9E  00CE               	movwf	?___fttol
 12732  0D9F  0008               	return
 12733  0DA0                     __end_of___fttol:	
 12734                           
 12735                           	psect	text84
 12736  11F3                     __ptext84:	
 12737 ;; *************** function ___ftneg *****************
 12738 ;; Defined at:
 12739 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftneg.c"
 12740 ;; Parameters:    Size  Location     Type
 12741 ;;  f1              3   30[BANK0 ] float 
 12742 ;; Auto vars:     Size  Location     Type
 12743 ;;		None
 12744 ;; Return value:  Size  Location     Type
 12745 ;;                  3   30[BANK0 ] float 
 12746 ;; Registers used:
 12747 ;;		wreg
 12748 ;; Tracked objects:
 12749 ;;		On entry : 0/0
 12750 ;;		On exit  : 0/0
 12751 ;;		Unchanged: 0/0
 12752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12753 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12756 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12757 ;;Total ram usage:        3 bytes
 12758 ;; Hardware stack levels used:    1
 12759 ;; Hardware stack levels required when called:    5
 12760 ;; This function calls:
 12761 ;;		Nothing
 12762 ;; This function is called by:
 12763 ;;		_getDimmerLights_PercentToValue
 12764 ;;		_getDimmerLights_ValueToPercent
 12765 ;; This function uses a non-reentrant model
 12766 ;;
 12767                           
 12768                           
 12769                           ;psect for function ___ftneg
 12770  11F3                     ___ftneg:	
 12771                           
 12772                           ;incstack = 0
 12773                           ; Regs used in ___ftneg: [wreg]
 12774  11F3  0020               	movlb	0	; select bank0
 12775  11F4  0840               	movf	___ftneg@f1+2,w
 12776  11F5  043F               	iorwf	___ftneg@f1+1,w
 12777  11F6  043E               	iorwf	___ftneg@f1,w
 12778  11F7  1903               	skipnz
 12779  11F8  0008               	return
 12780  11F9  3080               	movlw	128
 12781  11FA  06C0               	xorwf	___ftneg@f1+2,f
 12782  11FB  0008               	return
 12783  11FC                     __end_of___ftneg:	
 12784                           
 12785                           	psect	text85
 12786  06CC                     __ptext85:	
 12787 ;; *************** function ___ftmul *****************
 12788 ;; Defined at:
 12789 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftmul.c"
 12790 ;; Parameters:    Size  Location     Type
 12791 ;;  f1              3   14[BANK0 ] float 
 12792 ;;  f2              3   17[BANK0 ] float 
 12793 ;; Auto vars:     Size  Location     Type
 12794 ;;  f3_as_produc    3   25[BANK0 ] unsigned um
 12795 ;;  sign            1   29[BANK0 ] unsigned char 
 12796 ;;  cntr            1   28[BANK0 ] unsigned char 
 12797 ;;  exp             1   24[BANK0 ] unsigned char 
 12798 ;; Return value:  Size  Location     Type
 12799 ;;                  3   14[BANK0 ] float 
 12800 ;; Registers used:
 12801 ;;		wreg, status,2, status,0, pclath, cstack
 12802 ;; Tracked objects:
 12803 ;;		On entry : 0/0
 12804 ;;		On exit  : 0/0
 12805 ;;		Unchanged: 0/0
 12806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12807 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12808 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12809 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12810 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12811 ;;Total ram usage:       16 bytes
 12812 ;; Hardware stack levels used:    1
 12813 ;; Hardware stack levels required when called:    6
 12814 ;; This function calls:
 12815 ;;		___ftpack
 12816 ;; This function is called by:
 12817 ;;		_getDimmerLights_PercentToValue
 12818 ;; This function uses a non-reentrant model
 12819 ;;
 12820                           
 12821                           
 12822                           ;psect for function ___ftmul
 12823  06CC                     ___ftmul:	
 12824                           
 12825                           ;incstack = 0
 12826                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 12827  06CC  0020               	movlb	0	; select bank0
 12828  06CD  082E               	movf	___ftmul@f1,w
 12829  06CE  00B4               	movwf	??___ftmul
 12830  06CF  082F               	movf	___ftmul@f1+1,w
 12831  06D0  00B5               	movwf	??___ftmul+1
 12832  06D1  0830               	movf	___ftmul@f1+2,w
 12833  06D2  00B6               	movwf	??___ftmul+2
 12834  06D3  1003               	clrc
 12835  06D4  0D35               	rlf	??___ftmul+1,w
 12836  06D5  0D36               	rlf	??___ftmul+2,w
 12837  06D6  00B7               	movwf	??___ftmul+3
 12838  06D7  0837               	movf	??___ftmul+3,w
 12839  06D8  00B8               	movwf	___ftmul@exp
 12840  06D9  08B8               	movf	___ftmul@exp,f
 12841  06DA  1D03               	skipz
 12842  06DB  2EE3               	goto	l4500
 12843  06DC  3000               	movlw	0
 12844  06DD  00AE               	movwf	?___ftmul
 12845  06DE  3000               	movlw	0
 12846  06DF  00AF               	movwf	?___ftmul+1
 12847  06E0  3000               	movlw	0
 12848  06E1  00B0               	movwf	?___ftmul+2
 12849  06E2  0008               	return
 12850  06E3                     l4500:	
 12851  06E3  0831               	movf	___ftmul@f2,w
 12852  06E4  00B4               	movwf	??___ftmul
 12853  06E5  0832               	movf	___ftmul@f2+1,w
 12854  06E6  00B5               	movwf	??___ftmul+1
 12855  06E7  0833               	movf	___ftmul@f2+2,w
 12856  06E8  00B6               	movwf	??___ftmul+2
 12857  06E9  1003               	clrc
 12858  06EA  0D35               	rlf	??___ftmul+1,w
 12859  06EB  0D36               	rlf	??___ftmul+2,w
 12860  06EC  00B7               	movwf	??___ftmul+3
 12861  06ED  0837               	movf	??___ftmul+3,w
 12862  06EE  00BD               	movwf	___ftmul@sign
 12863  06EF  08BD               	movf	___ftmul@sign,f
 12864  06F0  1D03               	skipz
 12865  06F1  2EF9               	goto	l4506
 12866  06F2  3000               	movlw	0
 12867  06F3  00AE               	movwf	?___ftmul
 12868  06F4  3000               	movlw	0
 12869  06F5  00AF               	movwf	?___ftmul+1
 12870  06F6  3000               	movlw	0
 12871  06F7  00B0               	movwf	?___ftmul+2
 12872  06F8  0008               	return
 12873  06F9                     l4506:	
 12874  06F9  083D               	movf	___ftmul@sign,w
 12875  06FA  3E7B               	addlw	123
 12876  06FB  00B4               	movwf	??___ftmul
 12877  06FC  0834               	movf	??___ftmul,w
 12878  06FD  07B8               	addwf	___ftmul@exp,f
 12879  06FE  082E               	movf	___ftmul@f1,w
 12880  06FF  00B4               	movwf	??___ftmul
 12881  0700  082F               	movf	___ftmul@f1+1,w
 12882  0701  00B5               	movwf	??___ftmul+1
 12883  0702  0830               	movf	___ftmul@f1+2,w
 12884  0703  00B6               	movwf	??___ftmul+2
 12885  0704  3010               	movlw	16
 12886  0705                     u4135:	
 12887  0705  36B6               	lsrf	??___ftmul+2,f
 12888  0706  0CB5               	rrf	??___ftmul+1,f
 12889  0707  0CB4               	rrf	??___ftmul,f
 12890  0708  0B89               	decfsz	9,f
 12891  0709  2F05               	goto	u4135
 12892  070A  0834               	movf	??___ftmul,w
 12893  070B  00B7               	movwf	??___ftmul+3
 12894  070C  0837               	movf	??___ftmul+3,w
 12895  070D  00BD               	movwf	___ftmul@sign
 12896  070E  0831               	movf	___ftmul@f2,w
 12897  070F  00B4               	movwf	??___ftmul
 12898  0710  0832               	movf	___ftmul@f2+1,w
 12899  0711  00B5               	movwf	??___ftmul+1
 12900  0712  0833               	movf	___ftmul@f2+2,w
 12901  0713  00B6               	movwf	??___ftmul+2
 12902  0714  3010               	movlw	16
 12903  0715                     u4145:	
 12904  0715  36B6               	lsrf	??___ftmul+2,f
 12905  0716  0CB5               	rrf	??___ftmul+1,f
 12906  0717  0CB4               	rrf	??___ftmul,f
 12907  0718  0B89               	decfsz	9,f
 12908  0719  2F15               	goto	u4145
 12909  071A  0834               	movf	??___ftmul,w
 12910  071B  00B7               	movwf	??___ftmul+3
 12911  071C  0837               	movf	??___ftmul+3,w
 12912  071D  06BD               	xorwf	___ftmul@sign,f
 12913  071E  3080               	movlw	128
 12914  071F  00B4               	movwf	??___ftmul
 12915  0720  0834               	movf	??___ftmul,w
 12916  0721  05BD               	andwf	___ftmul@sign,f
 12917  0722  17AF               	bsf	___ftmul@f1+1,7
 12918  0723  17B2               	bsf	___ftmul@f2+1,7
 12919  0724  30FF               	movlw	255
 12920  0725  05B1               	andwf	___ftmul@f2,f
 12921  0726  30FF               	movlw	255
 12922  0727  05B2               	andwf	___ftmul@f2+1,f
 12923  0728  3000               	movlw	0
 12924  0729  05B3               	andwf	___ftmul@f2+2,f
 12925  072A  3000               	movlw	0
 12926  072B  00B9               	movwf	___ftmul@f3_as_product
 12927  072C  3000               	movlw	0
 12928  072D  00BA               	movwf	___ftmul@f3_as_product+1
 12929  072E  3000               	movlw	0
 12930  072F  00BB               	movwf	___ftmul@f3_as_product+2
 12931  0730  3007               	movlw	7
 12932  0731  00B4               	movwf	??___ftmul
 12933  0732  0834               	movf	??___ftmul,w
 12934  0733  00BC               	movwf	___ftmul@cntr
 12935  0734                     l4518:	
 12936  0734  1C2E               	btfss	___ftmul@f1,0
 12937  0735  2F3C               	goto	l4522
 12938  0736  0831               	movf	___ftmul@f2,w
 12939  0737  07B9               	addwf	___ftmul@f3_as_product,f
 12940  0738  0832               	movf	___ftmul@f2+1,w
 12941  0739  3DBA               	addwfc	___ftmul@f3_as_product+1,f
 12942  073A  0833               	movf	___ftmul@f2+2,w
 12943  073B  3DBB               	addwfc	___ftmul@f3_as_product+2,f
 12944  073C                     l4522:	
 12945  073C  3001               	movlw	1
 12946  073D                     u4165:	
 12947  073D  36B0               	lsrf	___ftmul@f1+2,f
 12948  073E  0CAF               	rrf	___ftmul@f1+1,f
 12949  073F  0CAE               	rrf	___ftmul@f1,f
 12950  0740  0B89               	decfsz	9,f
 12951  0741  2F3D               	goto	u4165
 12952  0742  3001               	movlw	1
 12953  0743                     u4175:	
 12954  0743  35B1               	lslf	___ftmul@f2,f
 12955  0744  0DB2               	rlf	___ftmul@f2+1,f
 12956  0745  0DB3               	rlf	___ftmul@f2+2,f
 12957  0746  0B89               	decfsz	9,f
 12958  0747  2F43               	goto	u4175
 12959  0748  3001               	movlw	1
 12960  0749  02BC               	subwf	___ftmul@cntr,f
 12961  074A  1D03               	btfss	3,2
 12962  074B  2F34               	goto	l4518
 12963  074C  3009               	movlw	9
 12964  074D  00B4               	movwf	??___ftmul
 12965  074E  0834               	movf	??___ftmul,w
 12966  074F  00BC               	movwf	___ftmul@cntr
 12967  0750                     l4530:	
 12968  0750  1C2E               	btfss	___ftmul@f1,0
 12969  0751  2F58               	goto	l4534
 12970  0752  0831               	movf	___ftmul@f2,w
 12971  0753  07B9               	addwf	___ftmul@f3_as_product,f
 12972  0754  0832               	movf	___ftmul@f2+1,w
 12973  0755  3DBA               	addwfc	___ftmul@f3_as_product+1,f
 12974  0756  0833               	movf	___ftmul@f2+2,w
 12975  0757  3DBB               	addwfc	___ftmul@f3_as_product+2,f
 12976  0758                     l4534:	
 12977  0758  3001               	movlw	1
 12978  0759                     u4205:	
 12979  0759  36B0               	lsrf	___ftmul@f1+2,f
 12980  075A  0CAF               	rrf	___ftmul@f1+1,f
 12981  075B  0CAE               	rrf	___ftmul@f1,f
 12982  075C  0B89               	decfsz	9,f
 12983  075D  2F59               	goto	u4205
 12984  075E  3001               	movlw	1
 12985  075F                     u4215:	
 12986  075F  36BB               	lsrf	___ftmul@f3_as_product+2,f
 12987  0760  0CBA               	rrf	___ftmul@f3_as_product+1,f
 12988  0761  0CB9               	rrf	___ftmul@f3_as_product,f
 12989  0762  0B89               	decfsz	9,f
 12990  0763  2F5F               	goto	u4215
 12991  0764  3001               	movlw	1
 12992  0765  02BC               	subwf	___ftmul@cntr,f
 12993  0766  1D03               	btfss	3,2
 12994  0767  2F50               	goto	l4530
 12995  0768  0839               	movf	___ftmul@f3_as_product,w
 12996  0769  00A0               	movwf	___ftpack@arg
 12997  076A  083A               	movf	___ftmul@f3_as_product+1,w
 12998  076B  00A1               	movwf	___ftpack@arg+1
 12999  076C  083B               	movf	___ftmul@f3_as_product+2,w
 13000  076D  00A2               	movwf	___ftpack@arg+2
 13001  076E  0838               	movf	___ftmul@exp,w
 13002  076F  00B4               	movwf	??___ftmul
 13003  0770  0834               	movf	??___ftmul,w
 13004  0771  00A3               	movwf	___ftpack@exp
 13005  0772  083D               	movf	___ftmul@sign,w
 13006  0773  00B5               	movwf	??___ftmul+1
 13007  0774  0835               	movf	??___ftmul+1,w
 13008  0775  00A4               	movwf	___ftpack@sign
 13009  0776  318A  2291         	fcall	___ftpack
 13010  0778  0020               	movlb	0	; select bank0
 13011  0779  0820               	movf	?___ftpack,w
 13012  077A  00AE               	movwf	?___ftmul
 13013  077B  0821               	movf	?___ftpack+1,w
 13014  077C  00AF               	movwf	?___ftmul+1
 13015  077D  0822               	movf	?___ftpack+2,w
 13016  077E  00B0               	movwf	?___ftmul+2
 13017  077F  0008               	return
 13018  0780                     __end_of___ftmul:	
 13019                           
 13020                           	psect	text86
 13021  0F57                     __ptext86:	
 13022 ;; *************** function ___ftdiv *****************
 13023 ;; Defined at:
 13024 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
 13025 ;; Parameters:    Size  Location     Type
 13026 ;;  f2              3   14[BANK0 ] float 
 13027 ;;  f1              3   17[BANK0 ] float 
 13028 ;; Auto vars:     Size  Location     Type
 13029 ;;  f3              3   25[BANK0 ] float 
 13030 ;;  sign            1   29[BANK0 ] unsigned char 
 13031 ;;  exp             1   28[BANK0 ] unsigned char 
 13032 ;;  cntr            1   24[BANK0 ] unsigned char 
 13033 ;; Return value:  Size  Location     Type
 13034 ;;                  3   14[BANK0 ] float 
 13035 ;; Registers used:
 13036 ;;		wreg, status,2, status,0, pclath, cstack
 13037 ;; Tracked objects:
 13038 ;;		On entry : 0/0
 13039 ;;		On exit  : 0/0
 13040 ;;		Unchanged: 0/0
 13041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13042 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13043 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13044 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13045 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13046 ;;Total ram usage:       16 bytes
 13047 ;; Hardware stack levels used:    1
 13048 ;; Hardware stack levels required when called:    6
 13049 ;; This function calls:
 13050 ;;		___ftpack
 13051 ;; This function is called by:
 13052 ;;		_getDimmerLights_PercentToValue
 13053 ;;		_getDimmerLights_ValueToPercent
 13054 ;; This function uses a non-reentrant model
 13055 ;;
 13056                           
 13057                           
 13058                           ;psect for function ___ftdiv
 13059  0F57                     ___ftdiv:	
 13060                           
 13061                           ;incstack = 0
 13062                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 13063  0F57  0020               	movlb	0	; select bank0
 13064  0F58  0831               	movf	___ftdiv@f1,w
 13065  0F59  00B4               	movwf	??___ftdiv
 13066  0F5A  0832               	movf	___ftdiv@f1+1,w
 13067  0F5B  00B5               	movwf	??___ftdiv+1
 13068  0F5C  0833               	movf	___ftdiv@f1+2,w
 13069  0F5D  00B6               	movwf	??___ftdiv+2
 13070  0F5E  1003               	clrc
 13071  0F5F  0D35               	rlf	??___ftdiv+1,w
 13072  0F60  0D36               	rlf	??___ftdiv+2,w
 13073  0F61  00B7               	movwf	??___ftdiv+3
 13074  0F62  0837               	movf	??___ftdiv+3,w
 13075  0F63  00BC               	movwf	___ftdiv@exp
 13076  0F64  08BC               	movf	___ftdiv@exp,f
 13077  0F65  1D03               	skipz
 13078  0F66  2F6E               	goto	l4458
 13079  0F67  3000               	movlw	0
 13080  0F68  00AE               	movwf	?___ftdiv
 13081  0F69  3000               	movlw	0
 13082  0F6A  00AF               	movwf	?___ftdiv+1
 13083  0F6B  3000               	movlw	0
 13084  0F6C  00B0               	movwf	?___ftdiv+2
 13085  0F6D  0008               	return
 13086  0F6E                     l4458:	
 13087  0F6E  082E               	movf	___ftdiv@f2,w
 13088  0F6F  00B4               	movwf	??___ftdiv
 13089  0F70  082F               	movf	___ftdiv@f2+1,w
 13090  0F71  00B5               	movwf	??___ftdiv+1
 13091  0F72  0830               	movf	___ftdiv@f2+2,w
 13092  0F73  00B6               	movwf	??___ftdiv+2
 13093  0F74  1003               	clrc
 13094  0F75  0D35               	rlf	??___ftdiv+1,w
 13095  0F76  0D36               	rlf	??___ftdiv+2,w
 13096  0F77  00B7               	movwf	??___ftdiv+3
 13097  0F78  0837               	movf	??___ftdiv+3,w
 13098  0F79  00BD               	movwf	___ftdiv@sign
 13099  0F7A  08BD               	movf	___ftdiv@sign,f
 13100  0F7B  1D03               	skipz
 13101  0F7C  2F84               	goto	l4464
 13102  0F7D  3000               	movlw	0
 13103  0F7E  00AE               	movwf	?___ftdiv
 13104  0F7F  3000               	movlw	0
 13105  0F80  00AF               	movwf	?___ftdiv+1
 13106  0F81  3000               	movlw	0
 13107  0F82  00B0               	movwf	?___ftdiv+2
 13108  0F83  0008               	return
 13109  0F84                     l4464:	
 13110  0F84  3000               	movlw	0
 13111  0F85  00B9               	movwf	___ftdiv@f3
 13112  0F86  3000               	movlw	0
 13113  0F87  00BA               	movwf	___ftdiv@f3+1
 13114  0F88  3000               	movlw	0
 13115  0F89  00BB               	movwf	___ftdiv@f3+2
 13116  0F8A  3089               	movlw	137
 13117  0F8B  073D               	addwf	___ftdiv@sign,w
 13118  0F8C  00B4               	movwf	??___ftdiv
 13119  0F8D  0834               	movf	??___ftdiv,w
 13120  0F8E  02BC               	subwf	___ftdiv@exp,f
 13121  0F8F  0831               	movf	___ftdiv@f1,w
 13122  0F90  00B4               	movwf	??___ftdiv
 13123  0F91  0832               	movf	___ftdiv@f1+1,w
 13124  0F92  00B5               	movwf	??___ftdiv+1
 13125  0F93  0833               	movf	___ftdiv@f1+2,w
 13126  0F94  00B6               	movwf	??___ftdiv+2
 13127  0F95  3010               	movlw	16
 13128  0F96                     u4055:	
 13129  0F96  36B6               	lsrf	??___ftdiv+2,f
 13130  0F97  0CB5               	rrf	??___ftdiv+1,f
 13131  0F98  0CB4               	rrf	??___ftdiv,f
 13132  0F99  0B89               	decfsz	9,f
 13133  0F9A  2F96               	goto	u4055
 13134  0F9B  0834               	movf	??___ftdiv,w
 13135  0F9C  00B7               	movwf	??___ftdiv+3
 13136  0F9D  0837               	movf	??___ftdiv+3,w
 13137  0F9E  00BD               	movwf	___ftdiv@sign
 13138  0F9F  082E               	movf	___ftdiv@f2,w
 13139  0FA0  00B4               	movwf	??___ftdiv
 13140  0FA1  082F               	movf	___ftdiv@f2+1,w
 13141  0FA2  00B5               	movwf	??___ftdiv+1
 13142  0FA3  0830               	movf	___ftdiv@f2+2,w
 13143  0FA4  00B6               	movwf	??___ftdiv+2
 13144  0FA5  3010               	movlw	16
 13145  0FA6                     u4065:	
 13146  0FA6  36B6               	lsrf	??___ftdiv+2,f
 13147  0FA7  0CB5               	rrf	??___ftdiv+1,f
 13148  0FA8  0CB4               	rrf	??___ftdiv,f
 13149  0FA9  0B89               	decfsz	9,f
 13150  0FAA  2FA6               	goto	u4065
 13151  0FAB  0834               	movf	??___ftdiv,w
 13152  0FAC  00B7               	movwf	??___ftdiv+3
 13153  0FAD  0837               	movf	??___ftdiv+3,w
 13154  0FAE  06BD               	xorwf	___ftdiv@sign,f
 13155  0FAF  3080               	movlw	128
 13156  0FB0  00B4               	movwf	??___ftdiv
 13157  0FB1  0834               	movf	??___ftdiv,w
 13158  0FB2  05BD               	andwf	___ftdiv@sign,f
 13159  0FB3  17B2               	bsf	___ftdiv@f1+1,7
 13160  0FB4  30FF               	movlw	255
 13161  0FB5  05B1               	andwf	___ftdiv@f1,f
 13162  0FB6  30FF               	movlw	255
 13163  0FB7  05B2               	andwf	___ftdiv@f1+1,f
 13164  0FB8  3000               	movlw	0
 13165  0FB9  05B3               	andwf	___ftdiv@f1+2,f
 13166  0FBA  17AF               	bsf	___ftdiv@f2+1,7
 13167  0FBB  30FF               	movlw	255
 13168  0FBC  05AE               	andwf	___ftdiv@f2,f
 13169  0FBD  30FF               	movlw	255
 13170  0FBE  05AF               	andwf	___ftdiv@f2+1,f
 13171  0FBF  3000               	movlw	0
 13172  0FC0  05B0               	andwf	___ftdiv@f2+2,f
 13173  0FC1  3018               	movlw	24
 13174  0FC2  00B4               	movwf	??___ftdiv
 13175  0FC3  0834               	movf	??___ftdiv,w
 13176  0FC4  00B8               	movwf	___ftdiv@cntr
 13177  0FC5                     l4478:	
 13178  0FC5  3001               	movlw	1
 13179  0FC6                     u4075:	
 13180  0FC6  35B9               	lslf	___ftdiv@f3,f
 13181  0FC7  0DBA               	rlf	___ftdiv@f3+1,f
 13182  0FC8  0DBB               	rlf	___ftdiv@f3+2,f
 13183  0FC9  0B89               	decfsz	9,f
 13184  0FCA  2FC6               	goto	u4075
 13185  0FCB  0830               	movf	___ftdiv@f2+2,w
 13186  0FCC  0233               	subwf	___ftdiv@f1+2,w
 13187  0FCD  1D03               	skipz
 13188  0FCE  2FD5               	goto	u4085
 13189  0FCF  082F               	movf	___ftdiv@f2+1,w
 13190  0FD0  0232               	subwf	___ftdiv@f1+1,w
 13191  0FD1  1D03               	skipz
 13192  0FD2  2FD5               	goto	u4085
 13193  0FD3  082E               	movf	___ftdiv@f2,w
 13194  0FD4  0231               	subwf	___ftdiv@f1,w
 13195  0FD5                     u4085:	
 13196  0FD5  1C03               	skipc
 13197  0FD6  2FDE               	goto	l4486
 13198  0FD7  082E               	movf	___ftdiv@f2,w
 13199  0FD8  02B1               	subwf	___ftdiv@f1,f
 13200  0FD9  082F               	movf	___ftdiv@f2+1,w
 13201  0FDA  3BB2               	subwfb	___ftdiv@f1+1,f
 13202  0FDB  0830               	movf	___ftdiv@f2+2,w
 13203  0FDC  3BB3               	subwfb	___ftdiv@f1+2,f
 13204  0FDD  1439               	bsf	___ftdiv@f3,0
 13205  0FDE                     l4486:	
 13206  0FDE  3001               	movlw	1
 13207  0FDF                     u4095:	
 13208  0FDF  35B1               	lslf	___ftdiv@f1,f
 13209  0FE0  0DB2               	rlf	___ftdiv@f1+1,f
 13210  0FE1  0DB3               	rlf	___ftdiv@f1+2,f
 13211  0FE2  0B89               	decfsz	9,f
 13212  0FE3  2FDF               	goto	u4095
 13213  0FE4  3001               	movlw	1
 13214  0FE5  02B8               	subwf	___ftdiv@cntr,f
 13215  0FE6  1D03               	btfss	3,2
 13216  0FE7  2FC5               	goto	l4478
 13217  0FE8  0839               	movf	___ftdiv@f3,w
 13218  0FE9  00A0               	movwf	___ftpack@arg
 13219  0FEA  083A               	movf	___ftdiv@f3+1,w
 13220  0FEB  00A1               	movwf	___ftpack@arg+1
 13221  0FEC  083B               	movf	___ftdiv@f3+2,w
 13222  0FED  00A2               	movwf	___ftpack@arg+2
 13223  0FEE  083C               	movf	___ftdiv@exp,w
 13224  0FEF  00B4               	movwf	??___ftdiv
 13225  0FF0  0834               	movf	??___ftdiv,w
 13226  0FF1  00A3               	movwf	___ftpack@exp
 13227  0FF2  083D               	movf	___ftdiv@sign,w
 13228  0FF3  00B5               	movwf	??___ftdiv+1
 13229  0FF4  0835               	movf	??___ftdiv+1,w
 13230  0FF5  00A4               	movwf	___ftpack@sign
 13231  0FF6  318A  2291         	fcall	___ftpack
 13232  0FF8  0020               	movlb	0	; select bank0
 13233  0FF9  0820               	movf	?___ftpack,w
 13234  0FFA  00AE               	movwf	?___ftdiv
 13235  0FFB  0821               	movf	?___ftpack+1,w
 13236  0FFC  00AF               	movwf	?___ftdiv+1
 13237  0FFD  0822               	movf	?___ftpack+2,w
 13238  0FFE  00B0               	movwf	?___ftdiv+2
 13239  0FFF  0008               	return
 13240  1000                     __end_of___ftdiv:	
 13241                           
 13242                           	psect	text87
 13243  0367                     __ptext87:	
 13244 ;; *************** function ___ftadd *****************
 13245 ;; Defined at:
 13246 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftadd.c"
 13247 ;; Parameters:    Size  Location     Type
 13248 ;;  f1              3   33[BANK0 ] float 
 13249 ;;  f2              3   36[BANK0 ] float 
 13250 ;; Auto vars:     Size  Location     Type
 13251 ;;  exp1            1   45[BANK0 ] unsigned char 
 13252 ;;  exp2            1   44[BANK0 ] unsigned char 
 13253 ;;  sign            1   43[BANK0 ] unsigned char 
 13254 ;; Return value:  Size  Location     Type
 13255 ;;                  3   33[BANK0 ] float 
 13256 ;; Registers used:
 13257 ;;		wreg, status,2, status,0, pclath, cstack
 13258 ;; Tracked objects:
 13259 ;;		On entry : 0/0
 13260 ;;		On exit  : 0/0
 13261 ;;		Unchanged: 0/0
 13262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13263 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13264 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13265 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13266 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13267 ;;Total ram usage:       13 bytes
 13268 ;; Hardware stack levels used:    1
 13269 ;; Hardware stack levels required when called:    6
 13270 ;; This function calls:
 13271 ;;		___ftpack
 13272 ;; This function is called by:
 13273 ;;		_getDimmerLights_PercentToValue
 13274 ;;		_getDimmerLights_ValueToPercent
 13275 ;; This function uses a non-reentrant model
 13276 ;;
 13277                           
 13278                           
 13279                           ;psect for function ___ftadd
 13280  0367                     ___ftadd:	
 13281                           
 13282                           ;incstack = 0
 13283                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 13284  0367  0020               	movlb	0	; select bank0
 13285  0368  0841               	movf	___ftadd@f1,w
 13286  0369  00C7               	movwf	??___ftadd
 13287  036A  0842               	movf	___ftadd@f1+1,w
 13288  036B  00C8               	movwf	??___ftadd+1
 13289  036C  0843               	movf	___ftadd@f1+2,w
 13290  036D  00C9               	movwf	??___ftadd+2
 13291  036E  1003               	clrc
 13292  036F  0D48               	rlf	??___ftadd+1,w
 13293  0370  0D49               	rlf	??___ftadd+2,w
 13294  0371  00CA               	movwf	??___ftadd+3
 13295  0372  084A               	movf	??___ftadd+3,w
 13296  0373  00CD               	movwf	___ftadd@exp1
 13297  0374  0844               	movf	___ftadd@f2,w
 13298  0375  00C7               	movwf	??___ftadd
 13299  0376  0845               	movf	___ftadd@f2+1,w
 13300  0377  00C8               	movwf	??___ftadd+1
 13301  0378  0846               	movf	___ftadd@f2+2,w
 13302  0379  00C9               	movwf	??___ftadd+2
 13303  037A  1003               	clrc
 13304  037B  0D48               	rlf	??___ftadd+1,w
 13305  037C  0D49               	rlf	??___ftadd+2,w
 13306  037D  00CA               	movwf	??___ftadd+3
 13307  037E  084A               	movf	??___ftadd+3,w
 13308  037F  00CC               	movwf	___ftadd@exp2
 13309  0380  084D               	movf	___ftadd@exp1,w
 13310  0381  1903               	btfsc	3,2
 13311  0382  2B8F               	goto	l4388
 13312  0383  084C               	movf	___ftadd@exp2,w
 13313  0384  024D               	subwf	___ftadd@exp1,w
 13314  0385  1803               	skipnc
 13315  0386  2B96               	goto	l4392
 13316  0387  034D               	decf	___ftadd@exp1,w
 13317  0388  3AFF               	xorlw	255
 13318  0389  074C               	addwf	___ftadd@exp2,w
 13319  038A  00C7               	movwf	??___ftadd
 13320  038B  3019               	movlw	25
 13321  038C  0247               	subwf	??___ftadd,w
 13322  038D  1C03               	skipc
 13323  038E  2B96               	goto	l4392
 13324  038F                     l4388:	
 13325  038F  0844               	movf	___ftadd@f2,w
 13326  0390  00C1               	movwf	?___ftadd
 13327  0391  0845               	movf	___ftadd@f2+1,w
 13328  0392  00C2               	movwf	?___ftadd+1
 13329  0393  0846               	movf	___ftadd@f2+2,w
 13330  0394  00C3               	movwf	?___ftadd+2
 13331  0395  0008               	return
 13332  0396                     l4392:	
 13333  0396  084C               	movf	___ftadd@exp2,w
 13334  0397  1903               	btfsc	3,2
 13335  0398  0008               	return
 13336  0399  084D               	movf	___ftadd@exp1,w
 13337  039A  024C               	subwf	___ftadd@exp2,w
 13338  039B  1803               	skipnc
 13339  039C  2BA5               	goto	l4398
 13340  039D  034C               	decf	___ftadd@exp2,w
 13341  039E  3AFF               	xorlw	255
 13342  039F  074D               	addwf	___ftadd@exp1,w
 13343  03A0  00C7               	movwf	??___ftadd
 13344  03A1  3019               	movlw	25
 13345  03A2  0247               	subwf	??___ftadd,w
 13346  03A3  1803               	btfsc	3,0
 13347  03A4  0008               	return
 13348  03A5                     l4398:	
 13349  03A5  3006               	movlw	6
 13350  03A6  00C7               	movwf	??___ftadd
 13351  03A7  0847               	movf	??___ftadd,w
 13352  03A8  00CB               	movwf	___ftadd@sign
 13353  03A9  1BC3               	btfsc	___ftadd@f1+2,7
 13354  03AA  17CB               	bsf	___ftadd@sign,7
 13355  03AB  1BC6               	btfsc	___ftadd@f2+2,7
 13356  03AC  174B               	bsf	___ftadd@sign,6
 13357  03AD  17C2               	bsf	___ftadd@f1+1,7
 13358  03AE  30FF               	movlw	255
 13359  03AF  05C1               	andwf	___ftadd@f1,f
 13360  03B0  30FF               	movlw	255
 13361  03B1  05C2               	andwf	___ftadd@f1+1,f
 13362  03B2  3000               	movlw	0
 13363  03B3  05C3               	andwf	___ftadd@f1+2,f
 13364  03B4  17C5               	bsf	___ftadd@f2+1,7
 13365  03B5  30FF               	movlw	255
 13366  03B6  05C4               	andwf	___ftadd@f2,f
 13367  03B7  30FF               	movlw	255
 13368  03B8  05C5               	andwf	___ftadd@f2+1,f
 13369  03B9  3000               	movlw	0
 13370  03BA  05C6               	andwf	___ftadd@f2+2,f
 13371  03BB  084C               	movf	___ftadd@exp2,w
 13372  03BC  024D               	subwf	___ftadd@exp1,w
 13373  03BD  1803               	skipnc
 13374  03BE  2BE1               	goto	l4420
 13375  03BF                     l4410:	
 13376  03BF  3001               	movlw	1
 13377  03C0                     u3895:	
 13378  03C0  35C4               	lslf	___ftadd@f2,f
 13379  03C1  0DC5               	rlf	___ftadd@f2+1,f
 13380  03C2  0DC6               	rlf	___ftadd@f2+2,f
 13381  03C3  0B89               	decfsz	9,f
 13382  03C4  2BC0               	goto	u3895
 13383  03C5  3001               	movlw	1
 13384  03C6  02CC               	subwf	___ftadd@exp2,f
 13385  03C7  084C               	movf	___ftadd@exp2,w
 13386  03C8  064D               	xorwf	___ftadd@exp1,w
 13387  03C9  1903               	skipnz
 13388  03CA  2BDC               	goto	l4418
 13389  03CB  3001               	movlw	1
 13390  03CC  02CB               	subwf	___ftadd@sign,f
 13391  03CD  084B               	movf	___ftadd@sign,w
 13392  03CE  3907               	andlw	7
 13393  03CF  1903               	btfsc	3,2
 13394  03D0  2BDC               	goto	l4418
 13395  03D1  2BBF               	goto	l4410
 13396  03D2                     l4416:	
 13397  03D2  3001               	movlw	1
 13398  03D3                     u3925:	
 13399  03D3  36C3               	lsrf	___ftadd@f1+2,f
 13400  03D4  0CC2               	rrf	___ftadd@f1+1,f
 13401  03D5  0CC1               	rrf	___ftadd@f1,f
 13402  03D6  0B89               	decfsz	9,f
 13403  03D7  2BD3               	goto	u3925
 13404  03D8  3001               	movlw	1
 13405  03D9  00C7               	movwf	??___ftadd
 13406  03DA  0847               	movf	??___ftadd,w
 13407  03DB  07CD               	addwf	___ftadd@exp1,f
 13408  03DC                     l4418:	
 13409  03DC  084D               	movf	___ftadd@exp1,w
 13410  03DD  064C               	xorwf	___ftadd@exp2,w
 13411  03DE  1903               	btfsc	3,2
 13412  03DF  2C06               	goto	l2015
 13413  03E0  2BD2               	goto	l4416
 13414  03E1                     l4420:	
 13415  03E1  084D               	movf	___ftadd@exp1,w
 13416  03E2  024C               	subwf	___ftadd@exp2,w
 13417  03E3  1803               	skipnc
 13418  03E4  2C06               	goto	l2015
 13419  03E5                     l4422:	
 13420  03E5  3001               	movlw	1
 13421  03E6                     u3955:	
 13422  03E6  35C1               	lslf	___ftadd@f1,f
 13423  03E7  0DC2               	rlf	___ftadd@f1+1,f
 13424  03E8  0DC3               	rlf	___ftadd@f1+2,f
 13425  03E9  0B89               	decfsz	9,f
 13426  03EA  2BE6               	goto	u3955
 13427  03EB  3001               	movlw	1
 13428  03EC  02CD               	subwf	___ftadd@exp1,f
 13429  03ED  084C               	movf	___ftadd@exp2,w
 13430  03EE  064D               	xorwf	___ftadd@exp1,w
 13431  03EF  1903               	skipnz
 13432  03F0  2C02               	goto	l4430
 13433  03F1  3001               	movlw	1
 13434  03F2  02CB               	subwf	___ftadd@sign,f
 13435  03F3  084B               	movf	___ftadd@sign,w
 13436  03F4  3907               	andlw	7
 13437  03F5  1903               	btfsc	3,2
 13438  03F6  2C02               	goto	l4430
 13439  03F7  2BE5               	goto	l4422
 13440  03F8                     l4428:	
 13441  03F8  3001               	movlw	1
 13442  03F9                     u3985:	
 13443  03F9  36C6               	lsrf	___ftadd@f2+2,f
 13444  03FA  0CC5               	rrf	___ftadd@f2+1,f
 13445  03FB  0CC4               	rrf	___ftadd@f2,f
 13446  03FC  0B89               	decfsz	9,f
 13447  03FD  2BF9               	goto	u3985
 13448  03FE  3001               	movlw	1
 13449  03FF  00C7               	movwf	??___ftadd
 13450  0400  0847               	movf	??___ftadd,w
 13451  0401  07CC               	addwf	___ftadd@exp2,f
 13452  0402                     l4430:	
 13453  0402  084D               	movf	___ftadd@exp1,w
 13454  0403  064C               	xorwf	___ftadd@exp2,w
 13455  0404  1D03               	skipz
 13456  0405  2BF8               	goto	l4428
 13457  0406                     l2015:	
 13458  0406  1FCB               	btfss	___ftadd@sign,7
 13459  0407  2C18               	goto	l4434
 13460  0408  30FF               	movlw	255
 13461  0409  06C1               	xorwf	___ftadd@f1,f
 13462  040A  30FF               	movlw	255
 13463  040B  06C2               	xorwf	___ftadd@f1+1,f
 13464  040C  30FF               	movlw	255
 13465  040D  06C3               	xorwf	___ftadd@f1+2,f
 13466  040E  3001               	movlw	1
 13467  040F  07C1               	addwf	___ftadd@f1,f
 13468  0410  3000               	movlw	0
 13469  0411  1803               	skipnc
 13470  0412  3001               	movlw	1
 13471  0413  07C2               	addwf	___ftadd@f1+1,f
 13472  0414  3000               	movlw	0
 13473  0415  1803               	skipnc
 13474  0416  3001               	movlw	1
 13475  0417  07C3               	addwf	___ftadd@f1+2,f
 13476  0418                     l4434:	
 13477  0418  1F4B               	btfss	___ftadd@sign,6
 13478  0419  2C2A               	goto	l4438
 13479  041A  30FF               	movlw	255
 13480  041B  06C4               	xorwf	___ftadd@f2,f
 13481  041C  30FF               	movlw	255
 13482  041D  06C5               	xorwf	___ftadd@f2+1,f
 13483  041E  30FF               	movlw	255
 13484  041F  06C6               	xorwf	___ftadd@f2+2,f
 13485  0420  3001               	movlw	1
 13486  0421  07C4               	addwf	___ftadd@f2,f
 13487  0422  3000               	movlw	0
 13488  0423  1803               	skipnc
 13489  0424  3001               	movlw	1
 13490  0425  07C5               	addwf	___ftadd@f2+1,f
 13491  0426  3000               	movlw	0
 13492  0427  1803               	skipnc
 13493  0428  3001               	movlw	1
 13494  0429  07C6               	addwf	___ftadd@f2+2,f
 13495  042A                     l4438:	
 13496  042A  01CB               	clrf	___ftadd@sign
 13497  042B  0841               	movf	___ftadd@f1,w
 13498  042C  07C4               	addwf	___ftadd@f2,f
 13499  042D  0842               	movf	___ftadd@f1+1,w
 13500  042E  3DC5               	addwfc	___ftadd@f2+1,f
 13501  042F  0843               	movf	___ftadd@f1+2,w
 13502  0430  3DC6               	addwfc	___ftadd@f2+2,f
 13503  0431  1FC6               	btfss	___ftadd@f2+2,7
 13504  0432  2C45               	goto	l4448
 13505  0433  30FF               	movlw	255
 13506  0434  06C4               	xorwf	___ftadd@f2,f
 13507  0435  30FF               	movlw	255
 13508  0436  06C5               	xorwf	___ftadd@f2+1,f
 13509  0437  30FF               	movlw	255
 13510  0438  06C6               	xorwf	___ftadd@f2+2,f
 13511  0439  3001               	movlw	1
 13512  043A  07C4               	addwf	___ftadd@f2,f
 13513  043B  3000               	movlw	0
 13514  043C  1803               	skipnc
 13515  043D  3001               	movlw	1
 13516  043E  07C5               	addwf	___ftadd@f2+1,f
 13517  043F  3000               	movlw	0
 13518  0440  1803               	skipnc
 13519  0441  3001               	movlw	1
 13520  0442  07C6               	addwf	___ftadd@f2+2,f
 13521  0443  01CB               	clrf	___ftadd@sign
 13522  0444  0ACB               	incf	___ftadd@sign,f
 13523  0445                     l4448:	
 13524  0445  0844               	movf	___ftadd@f2,w
 13525  0446  00A0               	movwf	___ftpack@arg
 13526  0447  0845               	movf	___ftadd@f2+1,w
 13527  0448  00A1               	movwf	___ftpack@arg+1
 13528  0449  0846               	movf	___ftadd@f2+2,w
 13529  044A  00A2               	movwf	___ftpack@arg+2
 13530  044B  084D               	movf	___ftadd@exp1,w
 13531  044C  00C7               	movwf	??___ftadd
 13532  044D  0847               	movf	??___ftadd,w
 13533  044E  00A3               	movwf	___ftpack@exp
 13534  044F  084B               	movf	___ftadd@sign,w
 13535  0450  00C8               	movwf	??___ftadd+1
 13536  0451  0848               	movf	??___ftadd+1,w
 13537  0452  00A4               	movwf	___ftpack@sign
 13538  0453  318A  2291         	fcall	___ftpack
 13539  0455  0020               	movlb	0	; select bank0
 13540  0456  0820               	movf	?___ftpack,w
 13541  0457  00C1               	movwf	?___ftadd
 13542  0458  0821               	movf	?___ftpack+1,w
 13543  0459  00C2               	movwf	?___ftadd+1
 13544  045A  0822               	movf	?___ftpack+2,w
 13545  045B  00C3               	movwf	?___ftadd+2
 13546  045C  0008               	return
 13547  045D                     __end_of___ftadd:	
 13548                           
 13549                           	psect	text88
 13550  1591                     __ptext88:	
 13551 ;; *************** function ___awtoft *****************
 13552 ;; Defined at:
 13553 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c"
 13554 ;; Parameters:    Size  Location     Type
 13555 ;;  c               2    8[BANK0 ] int 
 13556 ;; Auto vars:     Size  Location     Type
 13557 ;;  sign            1   13[BANK0 ] unsigned char 
 13558 ;; Return value:  Size  Location     Type
 13559 ;;                  3    8[BANK0 ] float 
 13560 ;; Registers used:
 13561 ;;		wreg, status,2, status,0, pclath, cstack
 13562 ;; Tracked objects:
 13563 ;;		On entry : 0/0
 13564 ;;		On exit  : 0/0
 13565 ;;		Unchanged: 0/0
 13566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13567 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13568 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13569 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13570 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13571 ;;Total ram usage:        6 bytes
 13572 ;; Hardware stack levels used:    1
 13573 ;; Hardware stack levels required when called:    6
 13574 ;; This function calls:
 13575 ;;		___ftpack
 13576 ;; This function is called by:
 13577 ;;		_getDimmerLights_PercentToValue
 13578 ;;		_getDimmerLights_ValueToPercent
 13579 ;; This function uses a non-reentrant model
 13580 ;;
 13581                           
 13582                           
 13583                           ;psect for function ___awtoft
 13584  1591                     ___awtoft:	
 13585                           
 13586                           ;incstack = 0
 13587                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 13588  1591  0020               	movlb	0	; select bank0
 13589  1592  01AD               	clrf	___awtoft@sign
 13590  1593  1FA9               	btfss	___awtoft@c+1,7
 13591  1594  2D9C               	goto	l4376
 13592  1595  09A8               	comf	___awtoft@c,f
 13593  1596  09A9               	comf	___awtoft@c+1,f
 13594  1597  0AA8               	incf	___awtoft@c,f
 13595  1598  1903               	skipnz
 13596  1599  0AA9               	incf	___awtoft@c+1,f
 13597  159A  01AD               	clrf	___awtoft@sign
 13598  159B  0AAD               	incf	___awtoft@sign,f
 13599  159C                     l4376:	
 13600  159C  0828               	movf	___awtoft@c,w
 13601  159D  00A0               	movwf	___ftpack@arg
 13602  159E  0829               	movf	___awtoft@c+1,w
 13603  159F  00A1               	movwf	___ftpack@arg+1
 13604  15A0  01A2               	clrf	___ftpack@arg+2
 13605  15A1  308E               	movlw	142
 13606  15A2  00AB               	movwf	??___awtoft
 13607  15A3  082B               	movf	??___awtoft,w
 13608  15A4  00A3               	movwf	___ftpack@exp
 13609  15A5  082D               	movf	___awtoft@sign,w
 13610  15A6  00AC               	movwf	??___awtoft+1
 13611  15A7  082C               	movf	??___awtoft+1,w
 13612  15A8  00A4               	movwf	___ftpack@sign
 13613  15A9  318A  2291         	fcall	___ftpack
 13614  15AB  0020               	movlb	0	; select bank0
 13615  15AC  0820               	movf	?___ftpack,w
 13616  15AD  00A8               	movwf	?___awtoft
 13617  15AE  0821               	movf	?___ftpack+1,w
 13618  15AF  00A9               	movwf	?___awtoft+1
 13619  15B0  0822               	movf	?___ftpack+2,w
 13620  15B1  00AA               	movwf	?___awtoft+2
 13621  15B2  0008               	return
 13622  15B3                     __end_of___awtoft:	
 13623                           
 13624                           	psect	text89
 13625  0A91                     __ptext89:	
 13626 ;; *************** function ___ftpack *****************
 13627 ;; Defined at:
 13628 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
 13629 ;; Parameters:    Size  Location     Type
 13630 ;;  arg             3    0[BANK0 ] unsigned um
 13631 ;;  exp             1    3[BANK0 ] unsigned char 
 13632 ;;  sign            1    4[BANK0 ] unsigned char 
 13633 ;; Auto vars:     Size  Location     Type
 13634 ;;		None
 13635 ;; Return value:  Size  Location     Type
 13636 ;;                  3    0[BANK0 ] float 
 13637 ;; Registers used:
 13638 ;;		wreg, status,2, status,0
 13639 ;; Tracked objects:
 13640 ;;		On entry : 0/0
 13641 ;;		On exit  : 0/0
 13642 ;;		Unchanged: 0/0
 13643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13644 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13646 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13647 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13648 ;;Total ram usage:        8 bytes
 13649 ;; Hardware stack levels used:    1
 13650 ;; Hardware stack levels required when called:    5
 13651 ;; This function calls:
 13652 ;;		Nothing
 13653 ;; This function is called by:
 13654 ;;		___awtoft
 13655 ;;		___ftadd
 13656 ;;		___ftdiv
 13657 ;;		___ftmul
 13658 ;; This function uses a non-reentrant model
 13659 ;;
 13660                           
 13661                           
 13662                           ;psect for function ___ftpack
 13663  0A91                     ___ftpack:	
 13664                           
 13665                           ;incstack = 0
 13666                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 13667  0A91  0020               	movlb	0	; select bank0
 13668  0A92  0823               	movf	___ftpack@exp,w
 13669  0A93  1903               	btfsc	3,2
 13670  0A94  2A9A               	goto	l4268
 13671  0A95  0822               	movf	___ftpack@arg+2,w
 13672  0A96  0421               	iorwf	___ftpack@arg+1,w
 13673  0A97  0420               	iorwf	___ftpack@arg,w
 13674  0A98  1D03               	skipz
 13675  0A99  2AAB               	goto	l4274
 13676  0A9A                     l4268:	
 13677  0A9A  3000               	movlw	0
 13678  0A9B  00A0               	movwf	?___ftpack
 13679  0A9C  3000               	movlw	0
 13680  0A9D  00A1               	movwf	?___ftpack+1
 13681  0A9E  3000               	movlw	0
 13682  0A9F  00A2               	movwf	?___ftpack+2
 13683  0AA0  0008               	return
 13684  0AA1                     l4272:	
 13685  0AA1  3001               	movlw	1
 13686  0AA2  00A5               	movwf	??___ftpack
 13687  0AA3  0825               	movf	??___ftpack,w
 13688  0AA4  07A3               	addwf	___ftpack@exp,f
 13689  0AA5  3001               	movlw	1
 13690  0AA6                     u3555:	
 13691  0AA6  36A2               	lsrf	___ftpack@arg+2,f
 13692  0AA7  0CA1               	rrf	___ftpack@arg+1,f
 13693  0AA8  0CA0               	rrf	___ftpack@arg,f
 13694  0AA9  0B89               	decfsz	9,f
 13695  0AAA  2AA6               	goto	u3555
 13696  0AAB                     l4274:	
 13697  0AAB  30FE               	movlw	254
 13698  0AAC  0522               	andwf	___ftpack@arg+2,w
 13699  0AAD  1903               	btfsc	3,2
 13700  0AAE  2AC4               	goto	l1986
 13701  0AAF  2AA1               	goto	l4272
 13702  0AB0                     l4276:	
 13703  0AB0  3001               	movlw	1
 13704  0AB1  00A5               	movwf	??___ftpack
 13705  0AB2  0825               	movf	??___ftpack,w
 13706  0AB3  07A3               	addwf	___ftpack@exp,f
 13707  0AB4  3001               	movlw	1
 13708  0AB5  07A0               	addwf	___ftpack@arg,f
 13709  0AB6  3000               	movlw	0
 13710  0AB7  1803               	skipnc
 13711  0AB8  3001               	movlw	1
 13712  0AB9  07A1               	addwf	___ftpack@arg+1,f
 13713  0ABA  3000               	movlw	0
 13714  0ABB  1803               	skipnc
 13715  0ABC  3001               	movlw	1
 13716  0ABD  07A2               	addwf	___ftpack@arg+2,f
 13717  0ABE  3001               	movlw	1
 13718  0ABF                     u3575:	
 13719  0ABF  36A2               	lsrf	___ftpack@arg+2,f
 13720  0AC0  0CA1               	rrf	___ftpack@arg+1,f
 13721  0AC1  0CA0               	rrf	___ftpack@arg,f
 13722  0AC2  0B89               	decfsz	9,f
 13723  0AC3  2ABF               	goto	u3575
 13724  0AC4                     l1986:	
 13725  0AC4  30FF               	movlw	255
 13726  0AC5  0522               	andwf	___ftpack@arg+2,w
 13727  0AC6  1903               	btfsc	3,2
 13728  0AC7  2AD1               	goto	l4284
 13729  0AC8  2AB0               	goto	l4276
 13730  0AC9                     l4282:	
 13731  0AC9  3001               	movlw	1
 13732  0ACA  02A3               	subwf	___ftpack@exp,f
 13733  0ACB  3001               	movlw	1
 13734  0ACC                     u3595:	
 13735  0ACC  35A0               	lslf	___ftpack@arg,f
 13736  0ACD  0DA1               	rlf	___ftpack@arg+1,f
 13737  0ACE  0DA2               	rlf	___ftpack@arg+2,f
 13738  0ACF  0B89               	decfsz	9,f
 13739  0AD0  2ACC               	goto	u3595
 13740  0AD1                     l4284:	
 13741  0AD1  1FA1               	btfss	___ftpack@arg+1,7
 13742  0AD2  2AC9               	goto	l4282
 13743  0AD3  1823               	btfsc	___ftpack@exp,0
 13744  0AD4  2ADB               	goto	l1992
 13745  0AD5  30FF               	movlw	255
 13746  0AD6  05A0               	andwf	___ftpack@arg,f
 13747  0AD7  307F               	movlw	127
 13748  0AD8  05A1               	andwf	___ftpack@arg+1,f
 13749  0AD9  30FF               	movlw	255
 13750  0ADA  05A2               	andwf	___ftpack@arg+2,f
 13751  0ADB                     l1992:	
 13752  0ADB  1003               	clrc
 13753  0ADC  0CA3               	rrf	___ftpack@exp,f
 13754  0ADD  0823               	movf	___ftpack@exp,w
 13755  0ADE  00A5               	movwf	??___ftpack
 13756  0ADF  01A6               	clrf	??___ftpack+1
 13757  0AE0  01A7               	clrf	??___ftpack+2
 13758  0AE1  3010               	movlw	16
 13759  0AE2                     u3625:	
 13760  0AE2  35A5               	lslf	??___ftpack,f
 13761  0AE3  0DA6               	rlf	??___ftpack+1,f
 13762  0AE4  0DA7               	rlf	??___ftpack+2,f
 13763  0AE5  0B89               	decfsz	9,f
 13764  0AE6  2AE2               	goto	u3625
 13765  0AE7  0825               	movf	??___ftpack,w
 13766  0AE8  04A0               	iorwf	___ftpack@arg,f
 13767  0AE9  0826               	movf	??___ftpack+1,w
 13768  0AEA  04A1               	iorwf	___ftpack@arg+1,f
 13769  0AEB  0827               	movf	??___ftpack+2,w
 13770  0AEC  04A2               	iorwf	___ftpack@arg+2,f
 13771  0AED  0824               	movf	___ftpack@sign,w
 13772  0AEE  1903               	btfsc	3,2
 13773  0AEF  0008               	return
 13774  0AF0  17A2               	bsf	___ftpack@arg+2,7
 13775  0AF1  0008               	return
 13776  0AF2                     __end_of___ftpack:	
 13777                           
 13778                           	psect	text90
 13779  12BF                     __ptext90:	
 13780 ;; *************** function _Division *****************
 13781 ;; Defined at:
 13782 ;;		line 1437 in file "../src/Dimmer_B1.c"
 13783 ;; Parameters:    Size  Location     Type
 13784 ;;  value           1    wreg     unsigned char 
 13785 ;;  num             1    5[BANK0 ] unsigned char 
 13786 ;; Auto vars:     Size  Location     Type
 13787 ;;  value           1    8[BANK0 ] unsigned char 
 13788 ;;  result          1    9[BANK0 ] unsigned char 
 13789 ;; Return value:  Size  Location     Type
 13790 ;;                  1    wreg      unsigned char 
 13791 ;; Registers used:
 13792 ;;		wreg, status,2, status,0, pclath, cstack
 13793 ;; Tracked objects:
 13794 ;;		On entry : 0/0
 13795 ;;		On exit  : 0/0
 13796 ;;		Unchanged: 0/0
 13797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13798 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13799 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13800 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13801 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13802 ;;Total ram usage:        5 bytes
 13803 ;; Hardware stack levels used:    1
 13804 ;; Hardware stack levels required when called:    6
 13805 ;; This function calls:
 13806 ;;		___lbdiv
 13807 ;; This function is called by:
 13808 ;;		_DimmerIntr_Initialization
 13809 ;; This function uses a non-reentrant model
 13810 ;;
 13811                           
 13812                           
 13813                           ;psect for function _Division
 13814  12BF                     _Division:	
 13815                           
 13816                           ;incstack = 0
 13817                           ; Regs used in _Division: [wreg+status,2+status,0+pclath+cstack]
 13818                           ;Division@value stored from wreg
 13819  12BF  0020               	movlb	0	; select bank0
 13820  12C0  00A8               	movwf	Division@value
 13821                           
 13822                           ;Dimmer_B1.c: 1438: char result = (char) (value / num);
 13823  12C1  0825               	movf	Division@num,w
 13824  12C2  00A6               	movwf	??_Division
 13825  12C3  0826               	movf	??_Division,w
 13826  12C4  00A0               	movwf	___lbdiv@divisor
 13827  12C5  0828               	movf	Division@value,w
 13828  12C6  3195  256F         	fcall	___lbdiv
 13829  12C8  0020               	movlb	0	; select bank0
 13830  12C9  00A7               	movwf	??_Division+1
 13831  12CA  0827               	movf	??_Division+1,w
 13832  12CB  00A9               	movwf	Division@result
 13833                           
 13834                           ;Dimmer_B1.c: 1439: return result;
 13835  12CC  0829               	movf	Division@result,w
 13836  12CD  0008               	return
 13837  12CE                     __end_of_Division:	
 13838                           
 13839                           	psect	text91
 13840  156F                     __ptext91:	
 13841 ;; *************** function ___lbdiv *****************
 13842 ;; Defined at:
 13843 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lbdiv.c"
 13844 ;; Parameters:    Size  Location     Type
 13845 ;;  dividend        1    wreg     unsigned char 
 13846 ;;  divisor         1    0[BANK0 ] unsigned char 
 13847 ;; Auto vars:     Size  Location     Type
 13848 ;;  dividend        1    2[BANK0 ] unsigned char 
 13849 ;;  quotient        1    4[BANK0 ] unsigned char 
 13850 ;;  counter         1    3[BANK0 ] unsigned char 
 13851 ;; Return value:  Size  Location     Type
 13852 ;;                  1    wreg      unsigned char 
 13853 ;; Registers used:
 13854 ;;		wreg, status,2, status,0
 13855 ;; Tracked objects:
 13856 ;;		On entry : 0/0
 13857 ;;		On exit  : 0/0
 13858 ;;		Unchanged: 0/0
 13859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13860 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13861 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13862 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13863 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13864 ;;Total ram usage:        5 bytes
 13865 ;; Hardware stack levels used:    1
 13866 ;; Hardware stack levels required when called:    5
 13867 ;; This function calls:
 13868 ;;		Nothing
 13869 ;; This function is called by:
 13870 ;;		_Division
 13871 ;; This function uses a non-reentrant model
 13872 ;;
 13873                           
 13874                           
 13875                           ;psect for function ___lbdiv
 13876  156F                     ___lbdiv:	
 13877                           
 13878                           ;incstack = 0
 13879                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
 13880                           ;___lbdiv@dividend stored from wreg
 13881  156F  0020               	movlb	0	; select bank0
 13882  1570  00A2               	movwf	___lbdiv@dividend
 13883  1571  01A4               	clrf	___lbdiv@quotient
 13884  1572  0820               	movf	___lbdiv@divisor,w
 13885  1573  1903               	btfsc	3,2
 13886  1574  2D8F               	goto	l4822
 13887  1575  01A3               	clrf	___lbdiv@counter
 13888  1576  0AA3               	incf	___lbdiv@counter,f
 13889  1577                     l4810:	
 13890  1577  1BA0               	btfsc	___lbdiv@divisor,7
 13891  1578  2D80               	goto	l4812
 13892  1579  1003               	clrc
 13893  157A  0DA0               	rlf	___lbdiv@divisor,f
 13894  157B  3001               	movlw	1
 13895  157C  00A1               	movwf	??___lbdiv
 13896  157D  0821               	movf	??___lbdiv,w
 13897  157E  07A3               	addwf	___lbdiv@counter,f
 13898  157F  2D77               	goto	l4810
 13899  1580                     l4812:	
 13900  1580  1003               	clrc
 13901  1581  0DA4               	rlf	___lbdiv@quotient,f
 13902  1582  0820               	movf	___lbdiv@divisor,w
 13903  1583  0222               	subwf	___lbdiv@dividend,w
 13904  1584  1C03               	skipc
 13905  1585  2D8A               	goto	L6
 13906  1586  0820               	movf	___lbdiv@divisor,w
 13907  1587  02A2               	subwf	___lbdiv@dividend,f
 13908  1588  1424               	bsf	___lbdiv@quotient,0
 13909  1589  1003               	clrc
 13910  158A                     L6:	
 13911  158A  0CA0               	rrf	___lbdiv@divisor,f
 13912  158B  3001               	movlw	1
 13913  158C  02A3               	subwf	___lbdiv@counter,f
 13914  158D  1D03               	btfss	3,2
 13915  158E  2D80               	goto	l4812
 13916  158F                     l4822:	
 13917  158F  0824               	movf	___lbdiv@quotient,w
 13918  1590  0008               	return
 13919  1591                     __end_of___lbdiv:	
 13920                           
 13921                           	psect	text92
 13922  118C                     __ptext92:	
 13923 ;; *************** function _DelayOff_Main *****************
 13924 ;; Defined at:
 13925 ;;		line 41 in file "../src/DelayOff_B1.c"
 13926 ;; Parameters:    Size  Location     Type
 13927 ;;		None
 13928 ;; Auto vars:     Size  Location     Type
 13929 ;;		None
 13930 ;; Return value:  Size  Location     Type
 13931 ;;		None               void
 13932 ;; Registers used:
 13933 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13934 ;; Tracked objects:
 13935 ;;		On entry : 0/0
 13936 ;;		On exit  : 0/0
 13937 ;;		Unchanged: 0/0
 13938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13943 ;;Total ram usage:        0 bytes
 13944 ;; Hardware stack levels used:    1
 13945 ;; Hardware stack levels required when called:    9
 13946 ;; This function calls:
 13947 ;;		_DlyOff_Main
 13948 ;; This function is called by:
 13949 ;;		_main
 13950 ;; This function uses a non-reentrant model
 13951 ;;
 13952                           
 13953                           
 13954                           ;psect for function _DelayOff_Main
 13955  118C                     _DelayOff_Main:	
 13956                           
 13957                           ;DelayOff_B1.c: 43: DlyOff_Main(1);
 13958                           
 13959                           ;incstack = 0
 13960                           ; Regs used in _DelayOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13961  118C  3001               	movlw	1
 13962  118D  318C  2424         	fcall	_DlyOff_Main
 13963  118F  0008               	return
 13964  1190                     __end_of_DelayOff_Main:	
 13965                           
 13966                           	psect	text93
 13967  0C24                     __ptext93:	
 13968 ;; *************** function _DlyOff_Main *****************
 13969 ;; Defined at:
 13970 ;;		line 61 in file "../src/DelayOff_B1.c"
 13971 ;; Parameters:    Size  Location     Type
 13972 ;;  sw              1    wreg     unsigned char 
 13973 ;; Auto vars:     Size  Location     Type
 13974 ;;  sw              1   71[BANK0 ] unsigned char 
 13975 ;; Return value:  Size  Location     Type
 13976 ;;		None               void
 13977 ;; Registers used:
 13978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13979 ;; Tracked objects:
 13980 ;;		On entry : 0/0
 13981 ;;		On exit  : 0/0
 13982 ;;		Unchanged: 0/0
 13983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13985 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13986 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13987 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13988 ;;Total ram usage:        3 bytes
 13989 ;; Hardware stack levels used:    1
 13990 ;; Hardware stack levels required when called:    8
 13991 ;; This function calls:
 13992 ;;		_DelayOffPointSelect
 13993 ;;		_getDimmerLights_Status
 13994 ;;		_setDimmerLights_SwOff
 13995 ;;		_setDimmerLights_SwOn
 13996 ;;		_setProductData
 13997 ;; This function is called by:
 13998 ;;		_DelayOff_Main
 13999 ;; This function uses a non-reentrant model
 14000 ;;
 14001                           
 14002                           
 14003                           ;psect for function _DlyOff_Main
 14004  0C24                     _DlyOff_Main:	
 14005                           
 14006                           ;incstack = 0
 14007                           ; Regs used in _DlyOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14008                           ;DlyOff_Main@sw stored from wreg
 14009  0C24  0020               	movlb	0	; select bank0
 14010  0C25  00E7               	movwf	DlyOff_Main@sw
 14011                           
 14012                           ;DelayOff_B1.c: 63: DelayOffPointSelect(sw);
 14013  0C26  0867               	movf	DlyOff_Main@sw,w
 14014  0C27  3192  2250  318C   	fcall	_DelayOffPointSelect
 14015                           
 14016                           ;DelayOff_B1.c: 64: if (DelayOff->GO == 1) {
 14017  0C2A  0021               	movlb	1	; select bank1
 14018  0C2B  0850               	movf	_DelayOff^(0+128),w
 14019  0C2C  0086               	movwf	6
 14020  0C2D  3001               	movlw	1	; select bank2/3
 14021  0C2E  0087               	movwf	7
 14022  0C2F  1C81               	btfss	1,1
 14023  0C30  0008               	return
 14024                           
 14025                           ;DelayOff_B1.c: 65: DelayOff->SecondTime++;
 14026  0C31  0850               	movf	_DelayOff^(0+128),w
 14027  0C32  3E02               	addlw	2
 14028  0C33  0086               	movwf	6
 14029  0C34  3001               	movlw	1	; select bank2/3
 14030  0C35  0087               	movwf	7
 14031  0C36  3001               	movlw	1
 14032  0C37  0781               	addwf	1,f
 14033  0C38  3141               	addfsr 1,1
 14034  0C39  1803               	skipnc
 14035  0C3A  0A81               	incf	1,f
 14036                           
 14037                           ;DelayOff_B1.c: 66: if (DelayOff->SecondTime >= 60000/20) {
 14038  0C3B  0850               	movf	_DelayOff^(0+128),w
 14039  0C3C  3E02               	addlw	2
 14040  0C3D  0086               	movwf	6
 14041  0C3E  3001               	movlw	1	; select bank2/3
 14042  0C3F  0087               	movwf	7
 14043  0C40  3F40               	moviw [0]fsr1
 14044  0C41  0020               	movlb	0	; select bank0
 14045  0C42  00E5               	movwf	??_DlyOff_Main
 14046  0C43  3F41               	moviw [1]fsr1
 14047  0C44  00E6               	movwf	??_DlyOff_Main+1
 14048  0C45  300B               	movlw	11
 14049  0C46  0266               	subwf	??_DlyOff_Main+1,w
 14050  0C47  30B8               	movlw	184
 14051  0C48  1903               	skipnz
 14052  0C49  0265               	subwf	??_DlyOff_Main,w
 14053  0C4A  1C03               	skipc
 14054  0C4B  0008               	return
 14055                           
 14056                           ;DelayOff_B1.c: 67: DelayOff->SecondTime = 0;
 14057  0C4C  0021               	movlb	1	; select bank1
 14058  0C4D  0850               	movf	_DelayOff^(0+128),w
 14059  0C4E  3E02               	addlw	2
 14060  0C4F  0086               	movwf	6
 14061  0C50  3001               	movlw	1	; select bank2/3
 14062  0C51  0087               	movwf	7
 14063  0C52  3000               	movlw	0
 14064  0C53  3FC0               	movwi [0]fsr1
 14065  0C54  3FC1               	movwi [1]fsr1
 14066                           
 14067                           ;DelayOff_B1.c: 68: DelayOff->MinuteTime++;
 14068  0C55  3001               	movlw	1
 14069  0C56  0020               	movlb	0	; select bank0
 14070  0C57  00E5               	movwf	??_DlyOff_Main
 14071  0C58  0021               	movlb	1	; select bank1
 14072  0C59  0850               	movf	_DelayOff^(0+128),w
 14073  0C5A  3E04               	addlw	4
 14074  0C5B  0086               	movwf	6
 14075  0C5C  3001               	movlw	1	; select bank2/3
 14076  0C5D  0087               	movwf	7
 14077  0C5E  0020               	movlb	0	; select bank0
 14078  0C5F  0865               	movf	??_DlyOff_Main,w
 14079  0C60  0781               	addwf	1,f
 14080                           
 14081                           ;DelayOff_B1.c: 69: if (DelayOff->MinuteTime >= DelayOff->Value) {
 14082  0C61  0021               	movlb	1	; select bank1
 14083  0C62  0850               	movf	_DelayOff^(0+128),w
 14084  0C63  3E04               	addlw	4
 14085  0C64  0086               	movwf	6
 14086  0C65  3001               	movlw	1	; select bank2/3
 14087  0C66  0087               	movwf	7
 14088  0C67  0A50               	incf	_DelayOff^(0+128),w
 14089  0C68  0084               	movwf	4
 14090  0C69  3001               	movlw	1	; select bank2/3
 14091  0C6A  0085               	movwf	5
 14092  0C6B  0800               	movf	0,w
 14093  0C6C  0201               	subwf	1,w
 14094  0C6D  1C03               	skipc
 14095  0C6E  0008               	return
 14096                           
 14097                           ;DelayOff_B1.c: 70: DelayOff->MinuteTime = 0;
 14098  0C6F  0850               	movf	_DelayOff^(0+128),w
 14099  0C70  3E04               	addlw	4
 14100  0C71  0086               	movwf	6
 14101  0C72  3001               	movlw	1	; select bank2/3
 14102  0C73  0087               	movwf	7
 14103  0C74  0181               	clrf	1
 14104                           
 14105                           ;DelayOff_B1.c: 71: DelayOff->GO = 0;
 14106  0C75  0850               	movf	_DelayOff^(0+128),w
 14107  0C76  0086               	movwf	6
 14108  0C77  3001               	movlw	1	; select bank2/3
 14109  0C78  0087               	movwf	7
 14110  0C79  1081               	bcf	1,1
 14111                           
 14112                           ;DelayOff_B1.c: 75: if (getDimmerLights_Status(sw) == 1) {
 14113  0C7A  0020               	movlb	0	; select bank0
 14114  0C7B  0867               	movf	DlyOff_Main@sw,w
 14115  0C7C  3192  22DD  318C   	fcall	_getDimmerLights_Status
 14116  0C7F  3A01               	xorlw	1
 14117  0C80  1D03               	skipz
 14118  0C81  2C8C               	goto	l248
 14119                           
 14120                           ;DelayOff_B1.c: 76: setDimmerLights_SwOn(sw);
 14121  0C82  0020               	movlb	0	; select bank0
 14122  0C83  0867               	movf	DlyOff_Main@sw,w
 14123  0C84  3188  20EA  318C   	fcall	_setDimmerLights_SwOn
 14124                           
 14125                           ;DelayOff_B1.c: 77: setDimmerLights_SwOff(sw);
 14126  0C87  0020               	movlb	0	; select bank0
 14127  0C88  0867               	movf	DlyOff_Main@sw,w
 14128  0C89  3197  2713  318C   	fcall	_setDimmerLights_SwOff
 14129  0C8C                     l248:	
 14130                           
 14131                           ;DelayOff_B1.c: 78: }
 14132                           ;DelayOff_B1.c: 80: setProductData(26 + sw, 0);
 14133  0C8C  0020               	movlb	0	; select bank0
 14134  0C8D  01E2               	clrf	setProductData@value
 14135  0C8E  0867               	movf	DlyOff_Main@sw,w
 14136  0C8F  3E1A               	addlw	26
 14137  0C90  3192  225C         	fcall	_setProductData
 14138  0C92  0008               	return
 14139  0C93                     __end_of_DlyOff_Main:	
 14140                           
 14141                           	psect	text94
 14142  125C                     __ptext94:	
 14143 ;; *************** function _setProductData *****************
 14144 ;; Defined at:
 14145 ;;		line 645 in file "../src/Main_B1.c"
 14146 ;; Parameters:    Size  Location     Type
 14147 ;;  address         1    wreg     unsigned char 
 14148 ;;  value           1   66[BANK0 ] unsigned char 
 14149 ;; Auto vars:     Size  Location     Type
 14150 ;;  address         1   68[BANK0 ] unsigned char 
 14151 ;; Return value:  Size  Location     Type
 14152 ;;		None               void
 14153 ;; Registers used:
 14154 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14155 ;; Tracked objects:
 14156 ;;		On entry : 0/0
 14157 ;;		On exit  : 0/0
 14158 ;;		Unchanged: 0/0
 14159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14160 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14161 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14162 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14163 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14164 ;;Total ram usage:        3 bytes
 14165 ;; Hardware stack levels used:    1
 14166 ;; Hardware stack levels required when called:    5
 14167 ;; This function calls:
 14168 ;;		Nothing
 14169 ;; This function is called by:
 14170 ;;		_DlyOff_Main
 14171 ;;		_setDelayOff_GO
 14172 ;;		_setDimmerLights_OnOff
 14173 ;;		_setDimmerLights_Dimming
 14174 ;;		_setTemp_Main
 14175 ;; This function uses a non-reentrant model
 14176 ;;
 14177                           
 14178                           
 14179                           ;psect for function _setProductData
 14180  125C                     _setProductData:	
 14181                           
 14182                           ;incstack = 0
 14183                           ; Regs used in _setProductData: [wreg+fsr1l+fsr1h+status,2+status,0]
 14184                           ;setProductData@address stored from wreg
 14185  125C  0020               	movlb	0	; select bank0
 14186  125D  00E4               	movwf	setProductData@address
 14187                           
 14188                           ;Main_B1.c: 646: _product.Data[address] = value;
 14189  125E  0862               	movf	setProductData@value,w
 14190  125F  00E3               	movwf	??_setProductData
 14191  1260  0864               	movf	setProductData@address,w
 14192  1261  3EC5               	addlw	__product& (0+255)
 14193  1262  0086               	movwf	6
 14194  1263  3001               	movlw	1	; select bank3/4
 14195  1264  0087               	movwf	7
 14196  1265  0863               	movf	??_setProductData,w
 14197  1266  0081               	movwf	1
 14198  1267  0008               	return
 14199  1268                     __end_of_setProductData:	
 14200                           
 14201                           	psect	text95
 14202  08EA                     __ptext95:	
 14203 ;; *************** function _setDimmerLights_SwOn *****************
 14204 ;; Defined at:
 14205 ;;		line 732 in file "../src/Dimmer_B1.c"
 14206 ;; Parameters:    Size  Location     Type
 14207 ;;  sw              1    wreg     unsigned char 
 14208 ;; Auto vars:     Size  Location     Type
 14209 ;;  sw              1   16[BANK0 ] unsigned char 
 14210 ;;  dimmingStatu    1   15[BANK0 ] unsigned char 
 14211 ;;  idle            1   14[BANK0 ] unsigned char 
 14212 ;; Return value:  Size  Location     Type
 14213 ;;		None               void
 14214 ;; Registers used:
 14215 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14216 ;; Tracked objects:
 14217 ;;		On entry : 0/0
 14218 ;;		On exit  : 0/0
 14219 ;;		Unchanged: 0/0
 14220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14222 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14223 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14224 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14225 ;;Total ram usage:        4 bytes
 14226 ;; Hardware stack levels used:    1
 14227 ;; Hardware stack levels required when called:    7
 14228 ;; This function calls:
 14229 ;;		_DimmerLights_SelectPointer
 14230 ;;		_getDimmerIntr_Dimming_Sw
 14231 ;;		_setBuz
 14232 ;; This function is called by:
 14233 ;;		_DlyOff_Main
 14234 ;;		_setSw_Main
 14235 ;; This function uses a non-reentrant model
 14236 ;;
 14237                           
 14238                           
 14239                           ;psect for function _setDimmerLights_SwOn
 14240  08EA                     _setDimmerLights_SwOn:	
 14241                           
 14242                           ;incstack = 0
 14243                           ; Regs used in _setDimmerLights_SwOn: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14244                           ;setDimmerLights_SwOn@sw stored from wreg
 14245  08EA  0020               	movlb	0	; select bank0
 14246  08EB  00B0               	movwf	setDimmerLights_SwOn@sw
 14247                           
 14248                           ;Dimmer_B1.c: 733: char idle = 0;
 14249  08EC  01AE               	clrf	setDimmerLights_SwOn@idle
 14250                           
 14251                           ;Dimmer_B1.c: 735: char dimmingStatus = 0;
 14252  08ED  01AF               	clrf	setDimmerLights_SwOn@dimmingStatus
 14253                           
 14254                           ;Dimmer_B1.c: 736: dimmingStatus = getDimmerIntr_Dimming_Sw(sw);
 14255  08EE  0830               	movf	setDimmerLights_SwOn@sw,w
 14256  08EF  3192  22B0  3188   	fcall	_getDimmerIntr_Dimming_Sw
 14257  08F2  0020               	movlb	0	; select bank0
 14258  08F3  00AD               	movwf	??_setDimmerLights_SwOn
 14259  08F4  082D               	movf	??_setDimmerLights_SwOn,w
 14260  08F5  00AF               	movwf	setDimmerLights_SwOn@dimmingStatus
 14261                           
 14262                           ;Dimmer_B1.c: 763: DimmerLights_SelectPointer(sw);
 14263  08F6  0830               	movf	setDimmerLights_SwOn@sw,w
 14264  08F7  3192  2219  3188   	fcall	_DimmerLights_SelectPointer
 14265                           
 14266                           ;Dimmer_B1.c: 764: if (idle == 0) {
 14267  08FA  0020               	movlb	0	; select bank0
 14268  08FB  08AE               	movf	setDimmerLights_SwOn@idle,f
 14269  08FC  1D03               	skipz
 14270  08FD  0008               	return
 14271                           
 14272                           ;Dimmer_B1.c: 766: if (dimmingStatus == 0) {
 14273  08FE  08AF               	movf	setDimmerLights_SwOn@dimmingStatus,f
 14274  08FF  1D03               	skipz
 14275  0900  2922               	goto	l4874
 14276                           
 14277                           ;Dimmer_B1.c: 767: DimmerLights->SwFlag = 1;
 14278  0901  087D               	movf	_DimmerLights,w
 14279  0902  0086               	movwf	6
 14280  0903  3001               	movlw	1	; select bank2/3
 14281  0904  0087               	movwf	7
 14282  0905  1401               	bsf	1,0
 14283                           
 14284                           ;Dimmer_B1.c: 768: if (DimmerLights->Status == 0) {
 14285  0906  0A7D               	incf	_DimmerLights,w
 14286  0907  0086               	movwf	6
 14287  0908  3001               	movlw	1	; select bank2/3
 14288  0909  0087               	movwf	7
 14289  090A  1801               	btfsc	1,0
 14290  090B  291C               	goto	l4872
 14291                           
 14292                           ;Dimmer_B1.c: 769: DimmerLights->Status = 1;
 14293  090C  0A7D               	incf	_DimmerLights,w
 14294  090D  0086               	movwf	6
 14295  090E  3001               	movlw	1	; select bank2/3
 14296  090F  0087               	movwf	7
 14297  0910  1401               	bsf	1,0
 14298                           
 14299                           ;Dimmer_B1.c: 770: DimmerLights->Trigger = 1;
 14300  0911  087D               	movf	_DimmerLights,w
 14301  0912  0086               	movwf	6
 14302  0913  3001               	movlw	1	; select bank2/3
 14303  0914  0087               	movwf	7
 14304  0915  1481               	bsf	1,1
 14305                           
 14306                           ;Dimmer_B1.c: 771: DimmerLights->Switch = 1;
 14307  0916  087D               	movf	_DimmerLights,w
 14308  0917  0086               	movwf	6
 14309  0918  3001               	movlw	1	; select bank2/3
 14310  0919  0087               	movwf	7
 14311  091A  1501               	bsf	1,2
 14312                           
 14313                           ;Dimmer_B1.c: 772: } else {
 14314  091B  292C               	goto	l4876
 14315  091C                     l4872:	
 14316                           
 14317                           ;Dimmer_B1.c: 773: DimmerLights->Status = 0;
 14318  091C  0A7D               	incf	_DimmerLights,w
 14319  091D  0086               	movwf	6
 14320  091E  3001               	movlw	1	; select bank2/3
 14321  091F  0087               	movwf	7
 14322  0920  1001               	bcf	1,0
 14323                           
 14324                           ;Dimmer_B1.c: 774: }
 14325                           ;Dimmer_B1.c: 775: } else {
 14326  0921  292C               	goto	l4876
 14327  0922                     l4874:	
 14328                           
 14329                           ;Dimmer_B1.c: 776: DimmerLights->DimmingTrigger = 1;
 14330  0922  087D               	movf	_DimmerLights,w
 14331  0923  0086               	movwf	6
 14332  0924  3001               	movlw	1	; select bank2/3
 14333  0925  0087               	movwf	7
 14334  0926  1601               	bsf	1,4
 14335                           
 14336                           ;Dimmer_B1.c: 777: DimmerLights->DimmingSwitch = 0;
 14337  0927  087D               	movf	_DimmerLights,w
 14338  0928  0086               	movwf	6
 14339  0929  3001               	movlw	1	; select bank2/3
 14340  092A  0087               	movwf	7
 14341  092B  1281               	bcf	1,5
 14342  092C                     l4876:	
 14343                           
 14344                           ;Dimmer_B1.c: 778: }
 14345                           ;Dimmer_B1.c: 779: setBuz(1, 100);
 14346  092C  3064               	movlw	100
 14347  092D  00A9               	movwf	setBuz@time
 14348  092E  3000               	movlw	0
 14349  092F  00AA               	movwf	setBuz@time+1
 14350  0930  3001               	movlw	1
 14351  0931  3189  21DA         	fcall	_setBuz
 14352  0933  0008               	return
 14353  0934                     __end_of_setDimmerLights_SwOn:	
 14354                           
 14355                           	psect	text96
 14356  09DA                     __ptext96:	
 14357 ;; *************** function _setBuz *****************
 14358 ;; Defined at:
 14359 ;;		line 22 in file "../src/Buzzer_B1.c"
 14360 ;; Parameters:    Size  Location     Type
 14361 ;;  count           1    wreg     unsigned char 
 14362 ;;  time            2    9[BANK0 ] int 
 14363 ;; Auto vars:     Size  Location     Type
 14364 ;;  count           1   12[BANK0 ] unsigned char 
 14365 ;; Return value:  Size  Location     Type
 14366 ;;		None               void
 14367 ;; Registers used:
 14368 ;;		wreg, status,2, status,0, pclath, cstack
 14369 ;; Tracked objects:
 14370 ;;		On entry : 0/0
 14371 ;;		On exit  : 0/0
 14372 ;;		Unchanged: 0/0
 14373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14374 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14375 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14376 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14377 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14378 ;;Total ram usage:        4 bytes
 14379 ;; Hardware stack levels used:    1
 14380 ;; Hardware stack levels required when called:    6
 14381 ;; This function calls:
 14382 ;;		___awdiv
 14383 ;; This function is called by:
 14384 ;;		_setDimmerLights_SwOn
 14385 ;;		_setDimmerLights_Dimming
 14386 ;;		_my_MainTimer
 14387 ;;		_Exception_Main
 14388 ;;		_setTemp_Main
 14389 ;; This function uses a non-reentrant model
 14390 ;;
 14391                           
 14392                           
 14393                           ;psect for function _setBuz
 14394  09DA                     _setBuz:	
 14395                           
 14396                           ;incstack = 0
 14397                           ; Regs used in _setBuz: [wreg+status,2+status,0+pclath+cstack]
 14398                           ;setBuz@count stored from wreg
 14399  09DA  0020               	movlb	0	; select bank0
 14400  09DB  00AC               	movwf	setBuz@count
 14401                           
 14402                           ;Buzzer_B1.c: 23: time /= 20;
 14403  09DC  3014               	movlw	20
 14404  09DD  00A0               	movwf	___awdiv@divisor
 14405  09DE  3000               	movlw	0
 14406  09DF  00A1               	movwf	___awdiv@divisor+1
 14407  09E0  082A               	movf	setBuz@time+1,w
 14408  09E1  01A3               	clrf	___awdiv@dividend+1
 14409  09E2  07A3               	addwf	___awdiv@dividend+1,f
 14410  09E3  0829               	movf	setBuz@time,w
 14411  09E4  01A2               	clrf	___awdiv@dividend
 14412  09E5  07A2               	addwf	___awdiv@dividend,f
 14413  09E6  3189  2186  3189   	fcall	___awdiv
 14414  09E9  0020               	movlb	0	; select bank0
 14415  09EA  0821               	movf	?___awdiv+1,w
 14416  09EB  01AA               	clrf	setBuz@time+1
 14417  09EC  07AA               	addwf	setBuz@time+1,f
 14418  09ED  0820               	movf	?___awdiv,w
 14419  09EE  01A9               	clrf	setBuz@time
 14420  09EF  07A9               	addwf	setBuz@time,f
 14421                           
 14422                           ;Buzzer_B1.c: 24: if (Buz1.Enable == 1) {
 14423  09F0  0021               	movlb	1	; select bank1
 14424  09F1  1C2D               	btfss	_Buz1^(0+128),0
 14425  09F2  0008               	return
 14426                           
 14427                           ;Buzzer_B1.c: 25: if (Buz1.GO == 0) {
 14428  09F3  18AD               	btfsc	_Buz1^(0+128),1
 14429  09F4  2A0B               	goto	l58
 14430                           
 14431                           ;Buzzer_B1.c: 26: Buz1.GO = 1;
 14432  09F5  14AD               	bsf	_Buz1^(0+128),1
 14433                           
 14434                           ;Buzzer_B1.c: 27: Buz1.Counter = 0;
 14435  09F6  01AE               	clrf	(_Buz1^(0+128)+1)
 14436  09F7  01AF               	clrf	((_Buz1+1)^(0+128)+1)
 14437                           
 14438                           ;Buzzer_B1.c: 28: Buz1.Count = count;
 14439  09F8  0020               	movlb	0	; select bank0
 14440  09F9  082C               	movf	setBuz@count,w
 14441  09FA  00AB               	movwf	??_setBuz
 14442  09FB  082B               	movf	??_setBuz,w
 14443  09FC  0021               	movlb	1	; select bank1
 14444  09FD  00B0               	movwf	(_Buz1^(0+128)+3)
 14445                           
 14446                           ;Buzzer_B1.c: 29: Buz1.TimeValue = time;
 14447  09FE  0020               	movlb	0	; select bank0
 14448  09FF  082A               	movf	setBuz@time+1,w
 14449  0A00  0021               	movlb	1	; select bank1
 14450  0A01  01B4               	clrf	((_Buz1+1)^(0+128)+6)
 14451  0A02  07B4               	addwf	((_Buz1+1)^(0+128)+6),f
 14452  0A03  0020               	movlb	0	; select bank0
 14453  0A04  0829               	movf	setBuz@time,w
 14454  0A05  0021               	movlb	1	; select bank1
 14455  0A06  01B3               	clrf	(_Buz1^(0+128)+6)
 14456  0A07  07B3               	addwf	(_Buz1^(0+128)+6),f
 14457                           
 14458                           ;Buzzer_B1.c: 30: RB3 = 1;
 14459  0A08  0020               	movlb	0	; select bank0
 14460  0A09  158D               	bsf	13,3	;volatile
 14461                           
 14462                           ;Buzzer_B1.c: 31: } else {
 14463  0A0A  0008               	return
 14464  0A0B                     l58:	
 14465                           
 14466                           ;Buzzer_B1.c: 32: if (Buz1.BufferStatus1 == 0) {
 14467  0A0B  19AD               	btfsc	_Buz1^(0+128),3
 14468  0A0C  2A1F               	goto	l60
 14469                           
 14470                           ;Buzzer_B1.c: 33: Buz1.BufferStatus1 = 1;
 14471  0A0D  15AD               	bsf	_Buz1^(0+128),3
 14472                           
 14473                           ;Buzzer_B1.c: 34: Buz1.CountBuffer1 = count;
 14474  0A0E  0020               	movlb	0	; select bank0
 14475  0A0F  082C               	movf	setBuz@count,w
 14476  0A10  00AB               	movwf	??_setBuz
 14477  0A11  082B               	movf	??_setBuz,w
 14478  0A12  0021               	movlb	1	; select bank1
 14479  0A13  00B1               	movwf	(_Buz1^(0+128)+4)
 14480                           
 14481                           ;Buzzer_B1.c: 35: Buz1.TimeValueBuffer1 = time;
 14482  0A14  0020               	movlb	0	; select bank0
 14483  0A15  082A               	movf	setBuz@time+1,w
 14484  0A16  0021               	movlb	1	; select bank1
 14485  0A17  01B6               	clrf	((_Buz1+1)^(0+128)+8)
 14486  0A18  07B6               	addwf	((_Buz1+1)^(0+128)+8),f
 14487  0A19  0020               	movlb	0	; select bank0
 14488  0A1A  0829               	movf	setBuz@time,w
 14489  0A1B  0021               	movlb	1	; select bank1
 14490  0A1C  01B5               	clrf	(_Buz1^(0+128)+8)
 14491  0A1D  07B5               	addwf	(_Buz1^(0+128)+8),f
 14492                           
 14493                           ;Buzzer_B1.c: 36: } else if (Buz1.BufferStatus2 == 0) {
 14494  0A1E  0008               	return
 14495  0A1F                     l60:	
 14496  0A1F  1A2D               	btfsc	_Buz1^(0+128),4
 14497  0A20  0008               	return
 14498                           
 14499                           ;Buzzer_B1.c: 37: Buz1.BufferStatus2 = 1;
 14500  0A21  162D               	bsf	_Buz1^(0+128),4
 14501                           
 14502                           ;Buzzer_B1.c: 38: Buz1.CountBuffer2 = count;
 14503  0A22  0020               	movlb	0	; select bank0
 14504  0A23  082C               	movf	setBuz@count,w
 14505  0A24  00AB               	movwf	??_setBuz
 14506  0A25  082B               	movf	??_setBuz,w
 14507  0A26  0021               	movlb	1	; select bank1
 14508  0A27  00B2               	movwf	(_Buz1^(0+128)+5)
 14509                           
 14510                           ;Buzzer_B1.c: 39: Buz1.TimeValueBuffer2 = time;
 14511  0A28  0020               	movlb	0	; select bank0
 14512  0A29  082A               	movf	setBuz@time+1,w
 14513  0A2A  0021               	movlb	1	; select bank1
 14514  0A2B  01B8               	clrf	((_Buz1+1)^(0+128)+10)
 14515  0A2C  07B8               	addwf	((_Buz1+1)^(0+128)+10),f
 14516  0A2D  0020               	movlb	0	; select bank0
 14517  0A2E  0829               	movf	setBuz@time,w
 14518  0A2F  0021               	movlb	1	; select bank1
 14519  0A30  01B7               	clrf	(_Buz1^(0+128)+10)
 14520  0A31  07B7               	addwf	(_Buz1^(0+128)+10),f
 14521  0A32  0008               	return
 14522  0A33                     __end_of_setBuz:	
 14523                           
 14524                           	psect	text97
 14525  0986                     __ptext97:	
 14526 ;; *************** function ___awdiv *****************
 14527 ;; Defined at:
 14528 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
 14529 ;; Parameters:    Size  Location     Type
 14530 ;;  divisor         2    0[BANK0 ] int 
 14531 ;;  dividend        2    2[BANK0 ] int 
 14532 ;; Auto vars:     Size  Location     Type
 14533 ;;  quotient        2    7[BANK0 ] int 
 14534 ;;  sign            1    6[BANK0 ] unsigned char 
 14535 ;;  counter         1    5[BANK0 ] unsigned char 
 14536 ;; Return value:  Size  Location     Type
 14537 ;;                  2    0[BANK0 ] int 
 14538 ;; Registers used:
 14539 ;;		wreg, status,2, status,0
 14540 ;; Tracked objects:
 14541 ;;		On entry : 0/0
 14542 ;;		On exit  : 0/0
 14543 ;;		Unchanged: 0/0
 14544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14545 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14546 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14547 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14548 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14549 ;;Total ram usage:        9 bytes
 14550 ;; Hardware stack levels used:    1
 14551 ;; Hardware stack levels required when called:    5
 14552 ;; This function calls:
 14553 ;;		Nothing
 14554 ;; This function is called by:
 14555 ;;		_setBuz
 14556 ;; This function uses a non-reentrant model
 14557 ;;
 14558                           
 14559                           
 14560                           ;psect for function ___awdiv
 14561  0986                     ___awdiv:	
 14562                           
 14563                           ;incstack = 0
 14564                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 14565  0986  0020               	movlb	0	; select bank0
 14566  0987  01A6               	clrf	___awdiv@sign
 14567  0988  1FA1               	btfss	___awdiv@divisor+1,7
 14568  0989  2991               	goto	l4332
 14569  098A  09A0               	comf	___awdiv@divisor,f
 14570  098B  09A1               	comf	___awdiv@divisor+1,f
 14571  098C  0AA0               	incf	___awdiv@divisor,f
 14572  098D  1903               	skipnz
 14573  098E  0AA1               	incf	___awdiv@divisor+1,f
 14574  098F  01A6               	clrf	___awdiv@sign
 14575  0990  0AA6               	incf	___awdiv@sign,f
 14576  0991                     l4332:	
 14577  0991  1FA3               	btfss	___awdiv@dividend+1,7
 14578  0992  299C               	goto	l4338
 14579  0993  09A2               	comf	___awdiv@dividend,f
 14580  0994  09A3               	comf	___awdiv@dividend+1,f
 14581  0995  0AA2               	incf	___awdiv@dividend,f
 14582  0996  1903               	skipnz
 14583  0997  0AA3               	incf	___awdiv@dividend+1,f
 14584  0998  3001               	movlw	1
 14585  0999  00A4               	movwf	??___awdiv
 14586  099A  0824               	movf	??___awdiv,w
 14587  099B  06A6               	xorwf	___awdiv@sign,f
 14588  099C                     l4338:	
 14589  099C  01A7               	clrf	___awdiv@quotient
 14590  099D  01A8               	clrf	___awdiv@quotient+1
 14591  099E  0821               	movf	___awdiv@divisor+1,w
 14592  099F  0420               	iorwf	___awdiv@divisor,w
 14593  09A0  1903               	skipnz
 14594  09A1  29CB               	goto	l4360
 14595  09A2  01A5               	clrf	___awdiv@counter
 14596  09A3  0AA5               	incf	___awdiv@counter,f
 14597  09A4                     l4348:	
 14598  09A4  1BA1               	btfsc	___awdiv@divisor+1,7
 14599  09A5  29B0               	goto	l4350
 14600  09A6  3001               	movlw	1
 14601  09A7                     u3725:	
 14602  09A7  35A0               	lslf	___awdiv@divisor,f
 14603  09A8  0DA1               	rlf	___awdiv@divisor+1,f
 14604  09A9  0B89               	decfsz	9,f
 14605  09AA  29A7               	goto	u3725
 14606  09AB  3001               	movlw	1
 14607  09AC  00A4               	movwf	??___awdiv
 14608  09AD  0824               	movf	??___awdiv,w
 14609  09AE  07A5               	addwf	___awdiv@counter,f
 14610  09AF  29A4               	goto	l4348
 14611  09B0                     l4350:	
 14612  09B0  3001               	movlw	1
 14613  09B1                     u3745:	
 14614  09B1  35A7               	lslf	___awdiv@quotient,f
 14615  09B2  0DA8               	rlf	___awdiv@quotient+1,f
 14616  09B3  0B89               	decfsz	9,f
 14617  09B4  29B1               	goto	u3745
 14618  09B5  0821               	movf	___awdiv@divisor+1,w
 14619  09B6  0223               	subwf	___awdiv@dividend+1,w
 14620  09B7  1D03               	skipz
 14621  09B8  29BB               	goto	u3755
 14622  09B9  0820               	movf	___awdiv@divisor,w
 14623  09BA  0222               	subwf	___awdiv@dividend,w
 14624  09BB                     u3755:	
 14625  09BB  1C03               	skipc
 14626  09BC  29C2               	goto	l4356
 14627  09BD  0820               	movf	___awdiv@divisor,w
 14628  09BE  02A2               	subwf	___awdiv@dividend,f
 14629  09BF  0821               	movf	___awdiv@divisor+1,w
 14630  09C0  3BA3               	subwfb	___awdiv@dividend+1,f
 14631  09C1  1427               	bsf	___awdiv@quotient,0
 14632  09C2                     l4356:	
 14633  09C2  3001               	movlw	1
 14634  09C3                     u3765:	
 14635  09C3  36A1               	lsrf	___awdiv@divisor+1,f
 14636  09C4  0CA0               	rrf	___awdiv@divisor,f
 14637  09C5  0B89               	decfsz	9,f
 14638  09C6  29C3               	goto	u3765
 14639  09C7  3001               	movlw	1
 14640  09C8  02A5               	subwf	___awdiv@counter,f
 14641  09C9  1D03               	btfss	3,2
 14642  09CA  29B0               	goto	l4350
 14643  09CB                     l4360:	
 14644  09CB  0826               	movf	___awdiv@sign,w
 14645  09CC  1903               	btfsc	3,2
 14646  09CD  29D3               	goto	l4364
 14647  09CE  09A7               	comf	___awdiv@quotient,f
 14648  09CF  09A8               	comf	___awdiv@quotient+1,f
 14649  09D0  0AA7               	incf	___awdiv@quotient,f
 14650  09D1  1903               	skipnz
 14651  09D2  0AA8               	incf	___awdiv@quotient+1,f
 14652  09D3                     l4364:	
 14653  09D3  0828               	movf	___awdiv@quotient+1,w
 14654  09D4  01A1               	clrf	?___awdiv+1
 14655  09D5  07A1               	addwf	?___awdiv+1,f
 14656  09D6  0827               	movf	___awdiv@quotient,w
 14657  09D7  01A0               	clrf	?___awdiv
 14658  09D8  07A0               	addwf	?___awdiv,f
 14659  09D9  0008               	return
 14660  09DA                     __end_of___awdiv:	
 14661                           
 14662                           	psect	text98
 14663  12B0                     __ptext98:	
 14664 ;; *************** function _getDimmerIntr_Dimming_Sw *****************
 14665 ;; Defined at:
 14666 ;;		line 242 in file "../src/Dimmer_B1.c"
 14667 ;; Parameters:    Size  Location     Type
 14668 ;;  lights          1    wreg     unsigned char 
 14669 ;; Auto vars:     Size  Location     Type
 14670 ;;  lights          1    0[BANK0 ] unsigned char 
 14671 ;;  status          1    1[BANK0 ] unsigned char 
 14672 ;; Return value:  Size  Location     Type
 14673 ;;                  1    wreg      unsigned char 
 14674 ;; Registers used:
 14675 ;;		wreg, status,2
 14676 ;; Tracked objects:
 14677 ;;		On entry : 0/0
 14678 ;;		On exit  : 0/0
 14679 ;;		Unchanged: 0/0
 14680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14682 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14684 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14685 ;;Total ram usage:        2 bytes
 14686 ;; Hardware stack levels used:    1
 14687 ;; Hardware stack levels required when called:    5
 14688 ;; This function calls:
 14689 ;;		Nothing
 14690 ;; This function is called by:
 14691 ;;		_setDimmerLights_SwOn
 14692 ;; This function uses a non-reentrant model
 14693 ;;
 14694                           
 14695                           
 14696                           ;psect for function _getDimmerIntr_Dimming_Sw
 14697  12B0                     _getDimmerIntr_Dimming_Sw:	
 14698                           
 14699                           ;incstack = 0
 14700                           ; Regs used in _getDimmerIntr_Dimming_Sw: [wreg+status,2]
 14701                           ;getDimmerIntr_Dimming_Sw@lights stored from wreg
 14702  12B0  0020               	movlb	0	; select bank0
 14703  12B1  00A0               	movwf	getDimmerIntr_Dimming_Sw@lights
 14704                           
 14705                           ;Dimmer_B1.c: 243: char status = 0;
 14706  12B2  01A1               	clrf	getDimmerIntr_Dimming_Sw@status
 14707                           
 14708                           ;Dimmer_B1.c: 245: if (lights == 1) {
 14709  12B3  0820               	movf	getDimmerIntr_Dimming_Sw@lights,w
 14710  12B4  3A01               	xorlw	1
 14711  12B5  1D03               	skipz
 14712  12B6  2ABD               	goto	l4712
 14713                           
 14714                           ;Dimmer_B1.c: 246: status = DimmerIntr1.Dimming_Sw == 1 ? 1 : 0;
 14715  12B7  3000               	movlw	0
 14716  12B8  0021               	movlb	1	; select bank1
 14717  12B9  1A39               	btfsc	_DimmerIntr1^(0+128),4
 14718  12BA  3001               	movlw	1
 14719  12BB  0020               	movlb	0	; select bank0
 14720  12BC  00A1               	movwf	getDimmerIntr_Dimming_Sw@status
 14721  12BD                     l4712:	
 14722                           
 14723                           ;Dimmer_B1.c: 247: }
 14724                           ;Dimmer_B1.c: 260: return status;
 14725  12BD  0821               	movf	getDimmerIntr_Dimming_Sw@status,w
 14726  12BE  0008               	return
 14727  12BF                     __end_of_getDimmerIntr_Dimming_Sw:	
 14728                           
 14729                           	psect	text99
 14730  1713                     __ptext99:	
 14731 ;; *************** function _setDimmerLights_SwOff *****************
 14732 ;; Defined at:
 14733 ;;		line 784 in file "../src/Dimmer_B1.c"
 14734 ;; Parameters:    Size  Location     Type
 14735 ;;  sw              1    wreg     unsigned char 
 14736 ;; Auto vars:     Size  Location     Type
 14737 ;;  sw              1    2[BANK0 ] unsigned char 
 14738 ;; Return value:  Size  Location     Type
 14739 ;;		None               void
 14740 ;; Registers used:
 14741 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14742 ;; Tracked objects:
 14743 ;;		On entry : 0/0
 14744 ;;		On exit  : 0/0
 14745 ;;		Unchanged: 0/0
 14746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14748 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14750 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14751 ;;Total ram usage:        1 bytes
 14752 ;; Hardware stack levels used:    1
 14753 ;; Hardware stack levels required when called:    6
 14754 ;; This function calls:
 14755 ;;		_DimmerLights_SelectPointer
 14756 ;; This function is called by:
 14757 ;;		_DlyOff_Main
 14758 ;;		_Exception_Main
 14759 ;;		_setSw_Main
 14760 ;; This function uses a non-reentrant model
 14761 ;;
 14762                           
 14763                           
 14764                           ;psect for function _setDimmerLights_SwOff
 14765  1713                     _setDimmerLights_SwOff:	
 14766                           
 14767                           ;incstack = 0
 14768                           ; Regs used in _setDimmerLights_SwOff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14769                           ;setDimmerLights_SwOff@sw stored from wreg
 14770  1713  0020               	movlb	0	; select bank0
 14771  1714  00A2               	movwf	setDimmerLights_SwOff@sw
 14772                           
 14773                           ;Dimmer_B1.c: 786: DimmerLights_SelectPointer(sw);
 14774  1715  0822               	movf	setDimmerLights_SwOff@sw,w
 14775  1716  3192  2219  3197   	fcall	_DimmerLights_SelectPointer
 14776                           
 14777                           ;Dimmer_B1.c: 788: if (DimmerLights->SwFlag == 1) {
 14778  1719  087D               	movf	_DimmerLights,w
 14779  171A  0086               	movwf	6
 14780  171B  3001               	movlw	1	; select bank2/3
 14781  171C  0087               	movwf	7
 14782  171D  1C01               	btfss	1,0
 14783  171E  0008               	return
 14784                           
 14785                           ;Dimmer_B1.c: 789: DimmerLights->SwFlag = 0;
 14786  171F  087D               	movf	_DimmerLights,w
 14787  1720  0086               	movwf	6
 14788  1721  3001               	movlw	1	; select bank2/3
 14789  1722  0087               	movwf	7
 14790  1723  1001               	bcf	1,0
 14791                           
 14792                           ;Dimmer_B1.c: 790: if (DimmerLights->Status == 1) {
 14793  1724  0A7D               	incf	_DimmerLights,w
 14794  1725  0086               	movwf	6
 14795  1726  3001               	movlw	1	; select bank2/3
 14796  1727  0087               	movwf	7
 14797  1728  1C01               	btfss	1,0
 14798  1729  2F40               	goto	l4888
 14799                           
 14800                           ;Dimmer_B1.c: 791: if (DimmerLights->DimmingSwFlag == 1) {
 14801  172A  087D               	movf	_DimmerLights,w
 14802  172B  0086               	movwf	6
 14803  172C  3001               	movlw	1	; select bank2/3
 14804  172D  0087               	movwf	7
 14805  172E  1D81               	btfss	1,3
 14806  172F  0008               	return
 14807                           
 14808                           ;Dimmer_B1.c: 792: DimmerLights->DimmingSwFlag = 0;
 14809  1730  087D               	movf	_DimmerLights,w
 14810  1731  0086               	movwf	6
 14811  1732  3001               	movlw	1	; select bank2/3
 14812  1733  0087               	movwf	7
 14813  1734  1181               	bcf	1,3
 14814                           
 14815                           ;Dimmer_B1.c: 794: DimmerLights->DimmingTrigger = 1;
 14816  1735  087D               	movf	_DimmerLights,w
 14817  1736  0086               	movwf	6
 14818  1737  3001               	movlw	1	; select bank2/3
 14819  1738  0087               	movwf	7
 14820  1739  1601               	bsf	1,4
 14821                           
 14822                           ;Dimmer_B1.c: 795: DimmerLights->DimmingSwitch = 0;
 14823  173A  087D               	movf	_DimmerLights,w
 14824  173B  0086               	movwf	6
 14825  173C  3001               	movlw	1	; select bank2/3
 14826  173D  0087               	movwf	7
 14827  173E  1281               	bcf	1,5
 14828                           
 14829                           ;Dimmer_B1.c: 796: }
 14830                           ;Dimmer_B1.c: 797: } else {
 14831  173F  0008               	return
 14832  1740                     l4888:	
 14833                           
 14834                           ;Dimmer_B1.c: 798: DimmerLights->Trigger = 1;
 14835  1740  087D               	movf	_DimmerLights,w
 14836  1741  0086               	movwf	6
 14837  1742  3001               	movlw	1	; select bank2/3
 14838  1743  0087               	movwf	7
 14839  1744  1481               	bsf	1,1
 14840                           
 14841                           ;Dimmer_B1.c: 799: DimmerLights->Switch = 0;
 14842  1745  087D               	movf	_DimmerLights,w
 14843  1746  0086               	movwf	6
 14844  1747  3001               	movlw	1	; select bank2/3
 14845  1748  0087               	movwf	7
 14846  1749  1101               	bcf	1,2
 14847  174A  0008               	return
 14848  174B                     __end_of_setDimmerLights_SwOff:	
 14849                           
 14850                           	psect	text100
 14851  12DD                     __ptext100:	
 14852 ;; *************** function _getDimmerLights_Status *****************
 14853 ;; Defined at:
 14854 ;;		line 1135 in file "../src/Dimmer_B1.c"
 14855 ;; Parameters:    Size  Location     Type
 14856 ;;  lights          1    wreg     unsigned char 
 14857 ;; Auto vars:     Size  Location     Type
 14858 ;;  lights          1    2[BANK0 ] unsigned char 
 14859 ;;  status          1    3[BANK0 ] unsigned char 
 14860 ;; Return value:  Size  Location     Type
 14861 ;;                  1    wreg      unsigned char 
 14862 ;; Registers used:
 14863 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14864 ;; Tracked objects:
 14865 ;;		On entry : 0/0
 14866 ;;		On exit  : 0/0
 14867 ;;		Unchanged: 0/0
 14868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14870 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14872 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14873 ;;Total ram usage:        2 bytes
 14874 ;; Hardware stack levels used:    1
 14875 ;; Hardware stack levels required when called:    6
 14876 ;; This function calls:
 14877 ;;		_DimmerLights_SelectPointer
 14878 ;; This function is called by:
 14879 ;;		_DlyOff_Main
 14880 ;;		_Exception_Main
 14881 ;; This function uses a non-reentrant model
 14882 ;;
 14883                           
 14884                           
 14885                           ;psect for function _getDimmerLights_Status
 14886  12DD                     _getDimmerLights_Status:	
 14887                           
 14888                           ;incstack = 0
 14889                           ; Regs used in _getDimmerLights_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 14890                           ;getDimmerLights_Status@lights stored from wreg
 14891  12DD  0020               	movlb	0	; select bank0
 14892  12DE  00A2               	movwf	getDimmerLights_Status@lights
 14893                           
 14894                           ;Dimmer_B1.c: 1136: DimmerLights_SelectPointer(lights);
 14895  12DF  0822               	movf	getDimmerLights_Status@lights,w
 14896  12E0  3192  2219         	fcall	_DimmerLights_SelectPointer
 14897                           
 14898                           ;Dimmer_B1.c: 1137: char status = DimmerLights->Status == 1 ? 1 : 0;
 14899  12E2  0A7D               	incf	_DimmerLights,w
 14900  12E3  0086               	movwf	6
 14901  12E4  3001               	movlw	1	; select bank2/3
 14902  12E5  0087               	movwf	7
 14903  12E6  3000               	movlw	0
 14904  12E7  1801               	btfsc	1,0
 14905  12E8  3001               	movlw	1
 14906  12E9  0020               	movlb	0	; select bank0
 14907  12EA  00A3               	movwf	getDimmerLights_Status@status
 14908                           
 14909                           ;Dimmer_B1.c: 1138: return status;
 14910  12EB  0823               	movf	getDimmerLights_Status@status,w
 14911  12EC  0008               	return
 14912  12ED                     __end_of_getDimmerLights_Status:	
 14913                           
 14914                           	psect	text101
 14915  1219                     __ptext101:	
 14916 ;; *************** function _DimmerLights_SelectPointer *****************
 14917 ;; Defined at:
 14918 ;;		line 655 in file "../src/Dimmer_B1.c"
 14919 ;; Parameters:    Size  Location     Type
 14920 ;;  lights          1    wreg     unsigned char 
 14921 ;; Auto vars:     Size  Location     Type
 14922 ;;  lights          1    1[BANK0 ] unsigned char 
 14923 ;; Return value:  Size  Location     Type
 14924 ;;		None               void
 14925 ;; Registers used:
 14926 ;;		wreg
 14927 ;; Tracked objects:
 14928 ;;		On entry : 0/0
 14929 ;;		On exit  : 0/0
 14930 ;;		Unchanged: 0/0
 14931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14933 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14934 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14935 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14936 ;;Total ram usage:        2 bytes
 14937 ;; Hardware stack levels used:    1
 14938 ;; Hardware stack levels required when called:    5
 14939 ;; This function calls:
 14940 ;;		Nothing
 14941 ;; This function is called by:
 14942 ;;		_setDimmerLights_SwOn
 14943 ;;		_setDimmerLights_SwOff
 14944 ;;		_setDimmerLights_DimmingOn
 14945 ;;		_setDimmerLights_Main
 14946 ;;		_getDimmerLights_Status
 14947 ;;		_setDimmerLights_Status
 14948 ;;		_setDimmerLights_DimmingRun
 14949 ;; This function uses a non-reentrant model
 14950 ;;
 14951                           
 14952                           
 14953                           ;psect for function _DimmerLights_SelectPointer
 14954  1219                     _DimmerLights_SelectPointer:	
 14955                           
 14956                           ;incstack = 0
 14957                           ; Regs used in _DimmerLights_SelectPointer: [wreg]
 14958                           ;DimmerLights_SelectPointer@lights stored from wreg
 14959  1219  0020               	movlb	0	; select bank0
 14960  121A  00A1               	movwf	DimmerLights_SelectPointer@lights
 14961                           
 14962                           ;Dimmer_B1.c: 657: if (lights == 1) {
 14963  121B  0821               	movf	DimmerLights_SelectPointer@lights,w
 14964  121C  3A01               	xorlw	1
 14965  121D  1D03               	skipz
 14966  121E  0008               	return
 14967                           
 14968                           ;Dimmer_B1.c: 658: DimmerLights = &DimmerLights1;
 14969  121F  3051               	movlw	_DimmerLights1& (0+255)
 14970  1220  00A0               	movwf	??_DimmerLights_SelectPointer
 14971  1221  0820               	movf	??_DimmerLights_SelectPointer,w
 14972  1222  00FD               	movwf	_DimmerLights
 14973  1223  0008               	return
 14974  1224                     __end_of_DimmerLights_SelectPointer:	
 14975                           
 14976                           	psect	text102
 14977  1188                     __ptext102:	
 14978 ;; *************** function _DelayOff_Initialization *****************
 14979 ;; Defined at:
 14980 ;;		line 26 in file "../src/DelayOff_B1.c"
 14981 ;; Parameters:    Size  Location     Type
 14982 ;;		None
 14983 ;; Auto vars:     Size  Location     Type
 14984 ;;		None
 14985 ;; Return value:  Size  Location     Type
 14986 ;;		None               void
 14987 ;; Registers used:
 14988 ;;		wreg, status,2, status,0, pclath, cstack
 14989 ;; Tracked objects:
 14990 ;;		On entry : 0/0
 14991 ;;		On exit  : 0/0
 14992 ;;		Unchanged: 0/0
 14993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14998 ;;Total ram usage:        0 bytes
 14999 ;; Hardware stack levels used:    1
 15000 ;; Hardware stack levels required when called:    7
 15001 ;; This function calls:
 15002 ;;		_DlyOff_Initialization
 15003 ;; This function is called by:
 15004 ;;		_main
 15005 ;; This function uses a non-reentrant model
 15006 ;;
 15007                           
 15008                           
 15009                           ;psect for function _DelayOff_Initialization
 15010  1188                     _DelayOff_Initialization:	
 15011                           
 15012                           ;DelayOff_B1.c: 28: DlyOff_Initialization(1);
 15013                           
 15014                           ;incstack = 0
 15015                           ; Regs used in _DelayOff_Initialization: [wreg+status,2+status,0+pclath+cstack]
 15016  1188  3001               	movlw	1
 15017  1189  3191  21A5         	fcall	_DlyOff_Initialization
 15018  118B  0008               	return
 15019  118C                     __end_of_DelayOff_Initialization:	
 15020                           
 15021                           	psect	text103
 15022  11A5                     __ptext103:	
 15023 ;; *************** function _DlyOff_Initialization *****************
 15024 ;; Defined at:
 15025 ;;		line 56 in file "../src/DelayOff_B1.c"
 15026 ;; Parameters:    Size  Location     Type
 15027 ;;  sw              1    wreg     unsigned char 
 15028 ;; Auto vars:     Size  Location     Type
 15029 ;;  sw              1    2[BANK0 ] unsigned char 
 15030 ;; Return value:  Size  Location     Type
 15031 ;;		None               void
 15032 ;; Registers used:
 15033 ;;		wreg, status,2, status,0, pclath, cstack
 15034 ;; Tracked objects:
 15035 ;;		On entry : 0/0
 15036 ;;		On exit  : 0/0
 15037 ;;		Unchanged: 0/0
 15038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15040 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15042 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15043 ;;Total ram usage:        1 bytes
 15044 ;; Hardware stack levels used:    1
 15045 ;; Hardware stack levels required when called:    6
 15046 ;; This function calls:
 15047 ;;		_DelayOffPointSelect
 15048 ;; This function is called by:
 15049 ;;		_DelayOff_Initialization
 15050 ;; This function uses a non-reentrant model
 15051 ;;
 15052                           
 15053                           
 15054                           ;psect for function _DlyOff_Initialization
 15055  11A5                     _DlyOff_Initialization:	
 15056                           
 15057                           ;incstack = 0
 15058                           ; Regs used in _DlyOff_Initialization: [wreg+status,2+status,0+pclath+cstack]
 15059                           ;DlyOff_Initialization@sw stored from wreg
 15060  11A5  0020               	movlb	0	; select bank0
 15061  11A6  00A2               	movwf	DlyOff_Initialization@sw
 15062                           
 15063                           ;DelayOff_B1.c: 57: DelayOffPointSelect(sw);
 15064  11A7  0822               	movf	DlyOff_Initialization@sw,w
 15065  11A8  3192  2250         	fcall	_DelayOffPointSelect
 15066  11AA  0008               	return
 15067  11AB                     __end_of_DlyOff_Initialization:	
 15068                           
 15069                           	psect	text104
 15070  1250                     __ptext104:	
 15071 ;; *************** function _DelayOffPointSelect *****************
 15072 ;; Defined at:
 15073 ;;		line 7 in file "../src/DelayOff_B1.c"
 15074 ;; Parameters:    Size  Location     Type
 15075 ;;  sw              1    wreg     unsigned char 
 15076 ;; Auto vars:     Size  Location     Type
 15077 ;;  sw              1    1[BANK0 ] unsigned char 
 15078 ;; Return value:  Size  Location     Type
 15079 ;;		None               void
 15080 ;; Registers used:
 15081 ;;		wreg
 15082 ;; Tracked objects:
 15083 ;;		On entry : 0/0
 15084 ;;		On exit  : 0/0
 15085 ;;		Unchanged: 0/0
 15086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15088 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15089 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15090 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15091 ;;Total ram usage:        2 bytes
 15092 ;; Hardware stack levels used:    1
 15093 ;; Hardware stack levels required when called:    5
 15094 ;; This function calls:
 15095 ;;		Nothing
 15096 ;; This function is called by:
 15097 ;;		_DlyOff_Initialization
 15098 ;;		_DlyOff_Main
 15099 ;;		_setDelayOff_GO
 15100 ;;		_getDelayOff_GO
 15101 ;; This function uses a non-reentrant model
 15102 ;;
 15103                           
 15104                           
 15105                           ;psect for function _DelayOffPointSelect
 15106  1250                     _DelayOffPointSelect:	
 15107                           
 15108                           ;incstack = 0
 15109                           ; Regs used in _DelayOffPointSelect: [wreg]
 15110                           ;DelayOffPointSelect@sw stored from wreg
 15111  1250  0020               	movlb	0	; select bank0
 15112  1251  00A1               	movwf	DelayOffPointSelect@sw
 15113                           
 15114                           ;DelayOff_B1.c: 9: if (sw == 1) {
 15115  1252  0821               	movf	DelayOffPointSelect@sw,w
 15116  1253  3A01               	xorlw	1
 15117  1254  1D03               	skipz
 15118  1255  0008               	return
 15119                           
 15120                           ;DelayOff_B1.c: 10: DelayOff = &DlySw1;
 15121  1256  3059               	movlw	_DlySw1& (0+255)
 15122  1257  00A0               	movwf	??_DelayOffPointSelect
 15123  1258  0820               	movf	??_DelayOffPointSelect,w
 15124  1259  0021               	movlb	1	; select bank1
 15125  125A  00D0               	movwf	_DelayOff^(0+128)
 15126  125B  0008               	return
 15127  125C                     __end_of_DelayOffPointSelect:	
 15128                           
 15129                           	psect	text105
 15130  08A0                     __ptext105:	
 15131 ;; *************** function _Buzzer_Main *****************
 15132 ;; Defined at:
 15133 ;;		line 46 in file "../src/Buzzer_B1.c"
 15134 ;; Parameters:    Size  Location     Type
 15135 ;;		None
 15136 ;; Auto vars:     Size  Location     Type
 15137 ;;		None
 15138 ;; Return value:  Size  Location     Type
 15139 ;;		None               void
 15140 ;; Registers used:
 15141 ;;		wreg, status,2, status,0
 15142 ;; Tracked objects:
 15143 ;;		On entry : 0/0
 15144 ;;		On exit  : 0/0
 15145 ;;		Unchanged: 0/0
 15146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15149 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15150 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15151 ;;Total ram usage:        1 bytes
 15152 ;; Hardware stack levels used:    1
 15153 ;; Hardware stack levels required when called:    5
 15154 ;; This function calls:
 15155 ;;		Nothing
 15156 ;; This function is called by:
 15157 ;;		_main
 15158 ;; This function uses a non-reentrant model
 15159 ;;
 15160                           
 15161                           
 15162                           ;psect for function _Buzzer_Main
 15163  08A0                     _Buzzer_Main:	
 15164                           
 15165                           ;Buzzer_B1.c: 47: if (Buz1.GO == 1) {
 15166                           
 15167                           ;incstack = 0
 15168                           ; Regs used in _Buzzer_Main: [wreg+status,2+status,0]
 15169  08A0  0021               	movlb	1	; select bank1
 15170  08A1  1CAD               	btfss	_Buz1^(0+128),1
 15171  08A2  0008               	return
 15172                           
 15173                           ;Buzzer_B1.c: 48: Buz1.Counter++;
 15174  08A3  3001               	movlw	1
 15175  08A4  07AE               	addwf	(_Buz1^(0+128)+1),f
 15176  08A5  3000               	movlw	0
 15177  08A6  3DAF               	addwfc	((_Buz1+1)^(0+128)+1),f
 15178                           
 15179                           ;Buzzer_B1.c: 49: if (Buz1.Counter >= Buz1.TimeValue) {
 15180  08A7  0834               	movf	((_Buz1+1)^(0+128)+6),w
 15181  08A8  022F               	subwf	((_Buz1+1)^(0+128)+1),w
 15182  08A9  1D03               	skipz
 15183  08AA  28AD               	goto	u6065
 15184  08AB  0833               	movf	(_Buz1^(0+128)+6),w
 15185  08AC  022E               	subwf	(_Buz1^(0+128)+1),w
 15186  08AD                     u6065:	
 15187  08AD  1C03               	skipc
 15188  08AE  0008               	return
 15189                           
 15190                           ;Buzzer_B1.c: 50: Buz1.Counter = 0;
 15191  08AF  01AE               	clrf	(_Buz1^(0+128)+1)
 15192  08B0  01AF               	clrf	((_Buz1+1)^(0+128)+1)
 15193                           
 15194                           ;Buzzer_B1.c: 51: Buz1.Switch = (RB3 == 1) ? 1 : 0;
 15195  08B1  12AD               	bcf	_Buz1^(0+128),5
 15196  08B2  0020               	movlb	0	; select bank0
 15197  08B3  1D8D               	btfss	13,3	;volatile
 15198  08B4  28B7               	goto	l5704
 15199  08B5  0021               	movlb	1	; select bank1
 15200  08B6  16AD               	bsf	_Buz1^(0+128),5
 15201  08B7                     l5704:	
 15202                           
 15203                           ;Buzzer_B1.c: 52: if (Buz1.Switch == 0) {
 15204  08B7  0021               	movlb	1	; select bank1
 15205  08B8  1AAD               	btfsc	_Buz1^(0+128),5
 15206  08B9  28E3               	goto	l68
 15207                           
 15208                           ;Buzzer_B1.c: 53: if (Buz1.Count == 0) {
 15209  08BA  08B0               	movf	(_Buz1^(0+128)+3),f
 15210  08BB  1D03               	skipz
 15211  08BC  28DF               	goto	l69
 15212                           
 15213                           ;Buzzer_B1.c: 54: if (Buz1.BufferStatus1 == 1) {
 15214  08BD  1DAD               	btfss	_Buz1^(0+128),3
 15215  08BE  28CD               	goto	l70
 15216                           
 15217                           ;Buzzer_B1.c: 55: Buz1.BufferStatus1 = 0;
 15218  08BF  11AD               	bcf	_Buz1^(0+128),3
 15219                           
 15220                           ;Buzzer_B1.c: 56: Buz1.Count = Buz1.CountBuffer1;
 15221  08C0  0831               	movf	(_Buz1^(0+128)+4),w
 15222  08C1  0020               	movlb	0	; select bank0
 15223  08C2  00A0               	movwf	??_Buzzer_Main
 15224  08C3  0820               	movf	??_Buzzer_Main,w
 15225  08C4  0021               	movlb	1	; select bank1
 15226  08C5  00B0               	movwf	(_Buz1^(0+128)+3)
 15227                           
 15228                           ;Buzzer_B1.c: 57: Buz1.TimeValue = Buz1.TimeValueBuffer1;
 15229  08C6  0836               	movf	((_Buz1+1)^(0+128)+8),w
 15230  08C7  01B4               	clrf	((_Buz1+1)^(0+128)+6)
 15231  08C8  07B4               	addwf	((_Buz1+1)^(0+128)+6),f
 15232  08C9  0835               	movf	(_Buz1^(0+128)+8),w
 15233  08CA  01B3               	clrf	(_Buz1^(0+128)+6)
 15234  08CB  07B3               	addwf	(_Buz1^(0+128)+6),f
 15235                           
 15236                           ;Buzzer_B1.c: 58: } else if (Buz1.BufferStatus2 == 1) {
 15237  08CC  0008               	return
 15238  08CD                     l70:	
 15239  08CD  1E2D               	btfss	_Buz1^(0+128),4
 15240  08CE  28DD               	goto	l72
 15241                           
 15242                           ;Buzzer_B1.c: 59: Buz1.BufferStatus2 = 0;
 15243  08CF  122D               	bcf	_Buz1^(0+128),4
 15244                           
 15245                           ;Buzzer_B1.c: 60: Buz1.Count = Buz1.CountBuffer2;
 15246  08D0  0832               	movf	(_Buz1^(0+128)+5),w
 15247  08D1  0020               	movlb	0	; select bank0
 15248  08D2  00A0               	movwf	??_Buzzer_Main
 15249  08D3  0820               	movf	??_Buzzer_Main,w
 15250  08D4  0021               	movlb	1	; select bank1
 15251  08D5  00B0               	movwf	(_Buz1^(0+128)+3)
 15252                           
 15253                           ;Buzzer_B1.c: 61: Buz1.TimeValue = Buz1.TimeValueBuffer2;
 15254  08D6  0838               	movf	((_Buz1+1)^(0+128)+10),w
 15255  08D7  01B4               	clrf	((_Buz1+1)^(0+128)+6)
 15256  08D8  07B4               	addwf	((_Buz1+1)^(0+128)+6),f
 15257  08D9  0837               	movf	(_Buz1^(0+128)+10),w
 15258  08DA  01B3               	clrf	(_Buz1^(0+128)+6)
 15259  08DB  07B3               	addwf	(_Buz1^(0+128)+6),f
 15260                           
 15261                           ;Buzzer_B1.c: 62: } else {
 15262  08DC  0008               	return
 15263  08DD                     l72:	
 15264                           
 15265                           ;Buzzer_B1.c: 63: Buz1.GO = 0;
 15266  08DD  10AD               	bcf	_Buz1^(0+128),1
 15267                           
 15268                           ;Buzzer_B1.c: 64: }
 15269                           ;Buzzer_B1.c: 65: } else {
 15270  08DE  0008               	return
 15271  08DF                     l69:	
 15272                           
 15273                           ;Buzzer_B1.c: 66: Buz1.Switch = 1;
 15274  08DF  16AD               	bsf	_Buz1^(0+128),5
 15275                           
 15276                           ;Buzzer_B1.c: 68: RB3 = 1;
 15277  08E0  0020               	movlb	0	; select bank0
 15278  08E1  158D               	bsf	13,3	;volatile
 15279                           
 15280                           ;Buzzer_B1.c: 69: }
 15281                           ;Buzzer_B1.c: 70: } else {
 15282  08E2  0008               	return
 15283  08E3                     l68:	
 15284                           
 15285                           ;Buzzer_B1.c: 71: Buz1.Switch = 0;
 15286  08E3  12AD               	bcf	_Buz1^(0+128),5
 15287                           
 15288                           ;Buzzer_B1.c: 73: RB3 = 0;
 15289  08E4  0020               	movlb	0	; select bank0
 15290  08E5  118D               	bcf	13,3	;volatile
 15291                           
 15292                           ;Buzzer_B1.c: 75: Buz1.Count--;
 15293  08E6  3001               	movlw	1
 15294  08E7  0021               	movlb	1	; select bank1
 15295  08E8  02B0               	subwf	(_Buz1^(0+128)+3),f
 15296  08E9  0008               	return
 15297  08EA                     __end_of_Buzzer_Main:	
 15298                           
 15299                           	psect	text106
 15300  117C                     __ptext106:	
 15301 ;; *************** function _Buzzer_Initialization *****************
 15302 ;; Defined at:
 15303 ;;		line 11 in file "../src/Buzzer_B1.c"
 15304 ;; Parameters:    Size  Location     Type
 15305 ;;		None
 15306 ;; Auto vars:     Size  Location     Type
 15307 ;;		None
 15308 ;; Return value:  Size  Location     Type
 15309 ;;		None               void
 15310 ;; Registers used:
 15311 ;;		None
 15312 ;; Tracked objects:
 15313 ;;		On entry : 0/0
 15314 ;;		On exit  : 0/0
 15315 ;;		Unchanged: 0/0
 15316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15321 ;;Total ram usage:        0 bytes
 15322 ;; Hardware stack levels used:    1
 15323 ;; Hardware stack levels required when called:    5
 15324 ;; This function calls:
 15325 ;;		Nothing
 15326 ;; This function is called by:
 15327 ;;		_main
 15328 ;; This function uses a non-reentrant model
 15329 ;;
 15330                           
 15331                           
 15332                           ;psect for function _Buzzer_Initialization
 15333  117C                     _Buzzer_Initialization:	
 15334                           
 15335                           ;Buzzer_B1.c: 13: Buz1.Enable = 1;
 15336                           
 15337                           ;incstack = 0
 15338                           ; Regs used in _Buzzer_Initialization: []
 15339  117C  0021               	movlb	1	; select bank1
 15340  117D  142D               	bsf	_Buz1^(0+128),0
 15341  117E  0008               	return
 15342  117F                     __end_of_Buzzer_Initialization:	
 15343                           
 15344                           	psect	intentry
 15345  0004                     __pintentry:	
 15346 ;; *************** function _ISR *****************
 15347 ;; Defined at:
 15348 ;;		line 116 in file "../src/MCU_B1.c"
 15349 ;; Parameters:    Size  Location     Type
 15350 ;;		None
 15351 ;; Auto vars:     Size  Location     Type
 15352 ;;		None
 15353 ;; Return value:  Size  Location     Type
 15354 ;;		None               void
 15355 ;; Registers used:
 15356 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15357 ;; Tracked objects:
 15358 ;;		On entry : 0/0
 15359 ;;		On exit  : 0/0
 15360 ;;		Unchanged: 0/0
 15361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15364 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15365 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15366 ;;Total ram usage:        1 bytes
 15367 ;; Hardware stack levels used:    1
 15368 ;; Hardware stack levels required when called:    4
 15369 ;; This function calls:
 15370 ;;		_IOC_ISR
 15371 ;;		_TMR1_ISR
 15372 ;; This function is called by:
 15373 ;;		Interrupt level 1
 15374 ;; This function uses a non-reentrant model
 15375 ;;
 15376                           
 15377  0004                     _ISR:	
 15378                           
 15379                           ;incstack = 0
 15380                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15381  0004  147E               	bsf	126,0	;set compiler interrupt flag
 15382  0005  3180               	pagesel	$
 15383  0006  0020               	movlb	0	; select bank0
 15384  0007  087F               	movf	127,w
 15385  0008  00FC               	movwf	??_ISR
 15386                           
 15387                           ;MCU_B1.c: 125: if (TMR1IE == 1 && TMR1IF == 1) {
 15388  0009  0021               	movlb	1	; select bank1
 15389  000A  1C11               	btfss	17,0	;volatile
 15390  000B  2812               	goto	i1l6246
 15391  000C  0020               	movlb	0	; select bank0
 15392  000D  1C11               	btfss	17,0	;volatile
 15393  000E  2812               	goto	i1l6246
 15394                           
 15395                           ;MCU_B1.c: 126: TMR1_ISR();
 15396  000F  3194  24B2  3180   	fcall	_TMR1_ISR
 15397  0012                     i1l6246:	
 15398                           
 15399                           ;MCU_B1.c: 127: }
 15400                           ;MCU_B1.c: 138: if (IOCIE == 1 && IOCIF == 1 && IOCBF2 == 1) {
 15401  0012  198B               	btfsc	11,3	;volatile
 15402  0013  1C0B               	btfss	11,0	;volatile
 15403  0014  281A               	goto	i1l842
 15404  0015  0027               	movlb	7	; select bank7
 15405  0016  1D16               	btfss	22,2	;volatile
 15406  0017  281A               	goto	i1l842
 15407                           
 15408                           ;MCU_B1.c: 139: IOC_ISR();
 15409  0018  3191  21EA         	fcall	_IOC_ISR
 15410  001A                     i1l842:	
 15411                           ;MCU_B1.c: 140: }
 15412                           ;MCU_B1.c: 148: return;
 15413                           
 15414  001A  087C               	movf	??_ISR,w
 15415  001B  0020               	movlb	0	; select bank0
 15416  001C  00FF               	movwf	127
 15417  001D  107E               	bcf	126,0	;clear compiler interrupt flag
 15418  001E  0009               	retfie
 15419  001F                     __end_of_ISR:	
 15420                           
 15421                           	psect	text108
 15422  14B2                     __ptext108:	
 15423 ;; *************** function _TMR1_ISR *****************
 15424 ;; Defined at:
 15425 ;;		line 236 in file "../src/MCU_B1.c"
 15426 ;; Parameters:    Size  Location     Type
 15427 ;;		None
 15428 ;; Auto vars:     Size  Location     Type
 15429 ;;		None
 15430 ;; Return value:  Size  Location     Type
 15431 ;;		None               void
 15432 ;; Registers used:
 15433 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15434 ;; Tracked objects:
 15435 ;;		On entry : 0/0
 15436 ;;		On exit  : 0/0
 15437 ;;		Unchanged: 0/0
 15438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15443 ;;Total ram usage:        0 bytes
 15444 ;; Hardware stack levels used:    1
 15445 ;; Hardware stack levels required when called:    1
 15446 ;; This function calls:
 15447 ;;		_DimmerLights_TMR_1
 15448 ;; This function is called by:
 15449 ;;		_ISR
 15450 ;; This function uses a non-reentrant model
 15451 ;;
 15452                           
 15453                           
 15454                           ;psect for function _TMR1_ISR
 15455  14B2                     _TMR1_ISR:	
 15456                           
 15457                           ;MCU_B1.c: 254: DimmerLights_TMR_1();
 15458                           
 15459                           ;incstack = 0
 15460                           ; Regs used in _TMR1_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15461  14B2  3196  26DB  3194   	fcall	_DimmerLights_TMR_1
 15462                           
 15463                           ;MCU_B1.c: 268: Timer1.Count++;
 15464  14B5  3001               	movlw	1
 15465  14B6  0021               	movlb	1	; select bank1
 15466  14B7  07CB               	addwf	(_Timer1^(0+128)+1),f
 15467  14B8  3000               	movlw	0
 15468  14B9  3DCC               	addwfc	((_Timer1+1)^(0+128)+1),f
 15469                           
 15470                           ;MCU_B1.c: 269: if (Timer1.Count == (int)(20*10)) {
 15471  14BA  3001               	movlw	1
 15472  14BB  3ECA               	addlw	_Timer1& (0+255)
 15473  14BC  0086               	movwf	6
 15474  14BD  0187               	clrf	7
 15475  14BE  3F40               	moviw [0]fsr1
 15476  14BF  3AC8               	xorlw	200
 15477  14C0  1D03               	skipz
 15478  14C1  2CC4               	goto	u616_25
 15479  14C2  3F41               	moviw [1]fsr1
 15480  14C3  3A00               	xorlw	0
 15481  14C4                     u616_25:	
 15482  14C4  1D03               	skipz
 15483  14C5  2CC9               	goto	i1l5760
 15484                           
 15485                           ;MCU_B1.c: 270: Timer1.Count = 0;
 15486  14C6  01CB               	clrf	(_Timer1^(0+128)+1)
 15487  14C7  01CC               	clrf	((_Timer1+1)^(0+128)+1)
 15488                           
 15489                           ;MCU_B1.c: 271: Timer1.Timeout = 1;
 15490  14C8  144A               	bsf	_Timer1^(0+128),0
 15491  14C9                     i1l5760:	
 15492                           
 15493                           ;MCU_B1.c: 272: }
 15494                           ;MCU_B1.c: 274: TMR1H = (int)((65536-1480)/256);
 15495  14C9  30FA               	movlw	250
 15496  14CA  0020               	movlb	0	; select bank0
 15497  14CB  0097               	movwf	23	;volatile
 15498                           
 15499                           ;MCU_B1.c: 275: TMR1L = (int)((65536-1480)%256);
 15500  14CC  3038               	movlw	56
 15501  14CD  0096               	movwf	22	;volatile
 15502                           
 15503                           ;MCU_B1.c: 276: TMR1IF = 0;
 15504  14CE  1011               	bcf	17,0	;volatile
 15505  14CF  0008               	return
 15506  14D0                     __end_of_TMR1_ISR:	
 15507                           
 15508                           	psect	text109
 15509  16DB                     __ptext109:	
 15510 ;; *************** function _DimmerLights_TMR_1 *****************
 15511 ;; Defined at:
 15512 ;;		line 1442 in file "../src/Dimmer_B1.c"
 15513 ;; Parameters:    Size  Location     Type
 15514 ;;		None
 15515 ;; Auto vars:     Size  Location     Type
 15516 ;;		None
 15517 ;; Return value:  Size  Location     Type
 15518 ;;		None               void
 15519 ;; Registers used:
 15520 ;;		wreg, status,2, status,0
 15521 ;; Tracked objects:
 15522 ;;		On entry : 0/0
 15523 ;;		On exit  : 0/0
 15524 ;;		Unchanged: 0/0
 15525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15528 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15529 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15530 ;;Total ram usage:        1 bytes
 15531 ;; Hardware stack levels used:    1
 15532 ;; This function calls:
 15533 ;;		Nothing
 15534 ;; This function is called by:
 15535 ;;		_TMR1_ISR
 15536 ;; This function uses a non-reentrant model
 15537 ;;
 15538                           
 15539                           
 15540                           ;psect for function _DimmerLights_TMR_1
 15541  16DB                     _DimmerLights_TMR_1:	
 15542                           
 15543                           ;Dimmer_B1.c: 1444: if (DimmerIntr1.Start == 1) {
 15544                           
 15545                           ;incstack = 0
 15546                           ; Regs used in _DimmerLights_TMR_1: [wreg+status,2+status,0]
 15547  16DB  0021               	movlb	1	; select bank1
 15548  16DC  1D39               	btfss	_DimmerIntr1^(0+128),2
 15549  16DD  2F01               	goto	i1l526
 15550                           
 15551                           ;Dimmer_B1.c: 1445: DimmerIntr1.Count++;
 15552  16DE  3001               	movlw	1
 15553  16DF  00F0               	movwf	??_DimmerLights_TMR_1
 15554  16E0  0870               	movf	??_DimmerLights_TMR_1,w
 15555  16E1  07BB               	addwf	(_DimmerIntr1^(0+128)+2),f
 15556                           
 15557                           ;Dimmer_B1.c: 1447: if (DimmerIntr1.Count == DimmerIntr1.TuneEnd) {
 15558  16E2  083B               	movf	(_DimmerIntr1^(0+128)+2),w
 15559  16E3  0644               	xorwf	(_DimmerIntr1^(0+128)+11),w
 15560  16E4  1D03               	skipz
 15561  16E5  2EE8               	goto	i1l5304
 15562                           
 15563                           ;Dimmer_B1.c: 1448: DimmerIntr1.Count = 0;
 15564  16E6  01BB               	clrf	(_DimmerIntr1^(0+128)+2)
 15565                           
 15566                           ;Dimmer_B1.c: 1449: DimmerIntr1.Start = 0;
 15567  16E7  1139               	bcf	_DimmerIntr1^(0+128),2
 15568  16E8                     i1l5304:	
 15569                           
 15570                           ;Dimmer_B1.c: 1450: }
 15571                           ;Dimmer_B1.c: 1464: if (DimmerIntr1.Count == DimmerIntr1.TuneValue2) {
 15572  16E8  083B               	movf	(_DimmerIntr1^(0+128)+2),w
 15573  16E9  0641               	xorwf	(_DimmerIntr1^(0+128)+8),w
 15574  16EA  1903               	btfsc	3,2
 15575                           
 15576                           ;Dimmer_B1.c: 1465: if (DimmerIntr1.ControlStatus == 1) {
 15577  16EB  1DB9               	btfss	_DimmerIntr1^(0+128),3
 15578  16EC  2EEF               	goto	i1l5310
 15579                           
 15580                           ;Dimmer_B1.c: 1466: RB1 = 0;
 15581  16ED  0020               	movlb	0	; select bank0
 15582  16EE  108D               	bcf	13,1	;volatile
 15583  16EF                     i1l5310:	
 15584                           
 15585                           ;Dimmer_B1.c: 1467: }
 15586                           ;Dimmer_B1.c: 1468: }
 15587                           ;Dimmer_B1.c: 1471: if (DimmerIntr1.Count == DimmerIntr1.TuneValue3) {
 15588  16EF  0021               	movlb	1	; select bank1
 15589  16F0  083B               	movf	(_DimmerIntr1^(0+128)+2),w
 15590  16F1  0642               	xorwf	(_DimmerIntr1^(0+128)+9),w
 15591  16F2  1903               	btfsc	3,2
 15592                           
 15593                           ;Dimmer_B1.c: 1472: if (DimmerIntr1.ControlStatus == 1) {
 15594  16F3  1DB9               	btfss	_DimmerIntr1^(0+128),3
 15595  16F4  2EF7               	goto	i1l5316
 15596                           
 15597                           ;Dimmer_B1.c: 1473: RB1 = 1;
 15598  16F5  0020               	movlb	0	; select bank0
 15599  16F6  148D               	bsf	13,1	;volatile
 15600  16F7                     i1l5316:	
 15601                           
 15602                           ;Dimmer_B1.c: 1474: }
 15603                           ;Dimmer_B1.c: 1475: }
 15604                           ;Dimmer_B1.c: 1478: if (DimmerIntr1.Count == DimmerIntr1.TuneValue4) {
 15605  16F7  0021               	movlb	1	; select bank1
 15606  16F8  083B               	movf	(_DimmerIntr1^(0+128)+2),w
 15607  16F9  0643               	xorwf	(_DimmerIntr1^(0+128)+10),w
 15608  16FA  1D03               	skipz
 15609  16FB  0008               	return
 15610                           
 15611                           ;Dimmer_B1.c: 1479: if (DimmerIntr1.ControlStatus == 1) {
 15612  16FC  1DB9               	btfss	_DimmerIntr1^(0+128),3
 15613  16FD  0008               	return
 15614                           
 15615                           ;Dimmer_B1.c: 1480: RB1 = 0;
 15616  16FE  0020               	movlb	0	; select bank0
 15617  16FF  108D               	bcf	13,1	;volatile
 15618                           
 15619                           ;Dimmer_B1.c: 1481: }
 15620                           ;Dimmer_B1.c: 1484: }
 15621                           ;Dimmer_B1.c: 1486: } else {
 15622  1700  0008               	return
 15623  1701                     i1l526:	
 15624                           
 15625                           ;Dimmer_B1.c: 1487: if (DimmerIntr1.GO == 1) {
 15626  1701  1C39               	btfss	_DimmerIntr1^(0+128),0
 15627  1702  0008               	return
 15628                           
 15629                           ;Dimmer_B1.c: 1488: DimmerIntr1.Count++;
 15630  1703  3001               	movlw	1
 15631  1704  00F0               	movwf	??_DimmerLights_TMR_1
 15632  1705  0870               	movf	??_DimmerLights_TMR_1,w
 15633  1706  07BB               	addwf	(_DimmerIntr1^(0+128)+2),f
 15634                           
 15635                           ;Dimmer_B1.c: 1489: if (DimmerIntr1.Count == 7) {
 15636  1707  083B               	movf	(_DimmerIntr1^(0+128)+2),w
 15637  1708  3A07               	xorlw	7
 15638  1709  1D03               	skipz
 15639  170A  0008               	return
 15640                           
 15641                           ;Dimmer_B1.c: 1490: DimmerIntr1.Count = 0;
 15642  170B  01BB               	clrf	(_DimmerIntr1^(0+128)+2)
 15643                           
 15644                           ;Dimmer_B1.c: 1491: DimmerIntr1.GO = 0;
 15645  170C  1039               	bcf	_DimmerIntr1^(0+128),0
 15646                           
 15647                           ;Dimmer_B1.c: 1492: DimmerIntr1.Start = 1;
 15648  170D  1539               	bsf	_DimmerIntr1^(0+128),2
 15649                           
 15650                           ;Dimmer_B1.c: 1494: if (DimmerIntr1.ControlStatus == 1) {
 15651  170E  1DB9               	btfss	_DimmerIntr1^(0+128),3
 15652  170F  0008               	return
 15653                           
 15654                           ;Dimmer_B1.c: 1495: RB1 = 1;
 15655  1710  0020               	movlb	0	; select bank0
 15656  1711  148D               	bsf	13,1	;volatile
 15657  1712  0008               	return
 15658  1713                     __end_of_DimmerLights_TMR_1:	
 15659                           
 15660                           	psect	text110
 15661  11EA                     __ptext110:	
 15662 ;; *************** function _IOC_ISR *****************
 15663 ;; Defined at:
 15664 ;;		line 395 in file "../src/MCU_B1.c"
 15665 ;; Parameters:    Size  Location     Type
 15666 ;;		None
 15667 ;; Auto vars:     Size  Location     Type
 15668 ;;		None
 15669 ;; Return value:  Size  Location     Type
 15670 ;;		None               void
 15671 ;; Registers used:
 15672 ;;		wreg, status,2, status,0, pclath, cstack
 15673 ;; Tracked objects:
 15674 ;;		On entry : 0/0
 15675 ;;		On exit  : 0/0
 15676 ;;		Unchanged: 0/0
 15677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15682 ;;Total ram usage:        0 bytes
 15683 ;; Hardware stack levels used:    1
 15684 ;; Hardware stack levels required when called:    3
 15685 ;; This function calls:
 15686 ;;		_DimmerLights_IOC_1
 15687 ;; This function is called by:
 15688 ;;		_ISR
 15689 ;; This function uses a non-reentrant model
 15690 ;;
 15691                           
 15692                           
 15693                           ;psect for function _IOC_ISR
 15694  11EA                     _IOC_ISR:	
 15695                           
 15696                           ;MCU_B1.c: 397: if (myMain.PowerON == 1) {
 15697                           
 15698                           ;incstack = 0
 15699                           ; Regs used in _IOC_ISR: [wreg+status,2+status,0+pclath+cstack]
 15700  11EA  0021               	movlb	1	; select bank1
 15701  11EB  1C20               	btfss	_myMain^(0+128),0
 15702  11EC  29EF               	goto	i1l5770
 15703                           
 15704                           ;MCU_B1.c: 403: DimmerLights_IOC_1();
 15705  11ED  3197  27C3         	fcall	_DimmerLights_IOC_1
 15706  11EF                     i1l5770:	
 15707                           
 15708                           ;MCU_B1.c: 416: }
 15709                           ;MCU_B1.c: 418: IOCBF2 = 0;
 15710  11EF  0027               	movlb	7	; select bank7
 15711  11F0  1116               	bcf	22,2	;volatile
 15712                           
 15713                           ;MCU_B1.c: 419: IOCIF = 0;
 15714  11F1  100B               	bcf	11,0	;volatile
 15715  11F2  0008               	return
 15716  11F3                     __end_of_IOC_ISR:	
 15717                           
 15718                           	psect	text111
 15719  17C3                     __ptext111:	
 15720 ;; *************** function _DimmerLights_IOC_1 *****************
 15721 ;; Defined at:
 15722 ;;		line 1537 in file "../src/Dimmer_B1.c"
 15723 ;; Parameters:    Size  Location     Type
 15724 ;;		None
 15725 ;; Auto vars:     Size  Location     Type
 15726 ;;		None
 15727 ;; Return value:  Size  Location     Type
 15728 ;;		None               void
 15729 ;; Registers used:
 15730 ;;		wreg, status,2, status,0, pclath, cstack
 15731 ;; Tracked objects:
 15732 ;;		On entry : 0/0
 15733 ;;		On exit  : 0/0
 15734 ;;		Unchanged: 0/0
 15735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15738 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15739 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15740 ;;Total ram usage:        2 bytes
 15741 ;; Hardware stack levels used:    1
 15742 ;; Hardware stack levels required when called:    2
 15743 ;; This function calls:
 15744 ;;		i1_Division
 15745 ;; This function is called by:
 15746 ;;		_IOC_ISR
 15747 ;; This function uses a non-reentrant model
 15748 ;;
 15749                           
 15750                           
 15751                           ;psect for function _DimmerLights_IOC_1
 15752  17C3                     _DimmerLights_IOC_1:	
 15753                           
 15754                           ;Dimmer_B1.c: 1551: if (DimmerIntr1.Start == 0 && DimmerIntr1.GO == 0) {
 15755                           
 15756                           ;incstack = 0
 15757                           ; Regs used in _DimmerLights_IOC_1: [wreg+status,2+status,0+pclath+cstack]
 15758  17C3  0021               	movlb	1	; select bank1
 15759  17C4  1939               	btfsc	_DimmerIntr1^(0+128),2
 15760  17C5  0008               	return
 15761  17C6  1839               	btfsc	_DimmerIntr1^(0+128),0
 15762  17C7  0008               	return
 15763                           
 15764                           ;Dimmer_B1.c: 1553: if (RB2 != DimmerIntr1.Status) {
 15765  17C8  0E3A               	swapf	(_DimmerIntr1^(0+128)+1),w
 15766  17C9  0C89               	rrf	9,f
 15767  17CA  3901               	andlw	1
 15768  17CB  00FA               	movwf	??_DimmerLights_IOC_1
 15769  17CC  3000               	movlw	0
 15770  17CD  0020               	movlb	0	; select bank0
 15771  17CE  190D               	btfsc	13,2	;volatile
 15772  17CF  3001               	movlw	1
 15773  17D0  067A               	xorwf	??_DimmerLights_IOC_1,w
 15774  17D1  1903               	skipnz
 15775  17D2  0008               	return
 15776                           
 15777                           ;Dimmer_B1.c: 1556: DimmerIntr1.Count = 0;
 15778  17D3  0021               	movlb	1	; select bank1
 15779  17D4  01BB               	clrf	(_DimmerIntr1^(0+128)+2)
 15780                           
 15781                           ;Dimmer_B1.c: 1557: DimmerIntr1.GO = 1;
 15782  17D5  1439               	bsf	_DimmerIntr1^(0+128),0
 15783                           
 15784                           ;Dimmer_B1.c: 1559: if (DimmerIntr1.Dimming_Sw == 1 || DimmerIntr1.Dimming_RF == 1) {
 15785  17D6  1E39               	btfss	_DimmerIntr1^(0+128),4
 15786  17D7  1B39               	btfsc	_DimmerIntr1^(0+128),6
 15787                           
 15788                           ;Dimmer_B1.c: 1560: DimmerIntr1.Tune = 1;
 15789  17D8  14B9               	bsf	_DimmerIntr1^(0+128),1
 15790                           
 15791                           ;Dimmer_B1.c: 1561: }
 15792                           ;Dimmer_B1.c: 1563: if (DimmerIntr1.TuneGO == 1) {
 15793  17D9  1F3A               	btfss	(_DimmerIntr1^(0+128)+1),6
 15794  17DA  2FF9               	goto	i1l5360
 15795                           
 15796                           ;Dimmer_B1.c: 1564: DimmerIntr1.TuneGO = 0;
 15797  17DB  133A               	bcf	(_DimmerIntr1^(0+128)+1),6
 15798                           
 15799                           ;Dimmer_B1.c: 1567: DimmerIntr1.TuneValue2 = Division(DimmerIntr1.DimmingValue, 2);
 15800  17DC  3002               	movlw	2
 15801  17DD  00FA               	movwf	??_DimmerLights_IOC_1
 15802  17DE  087A               	movf	??_DimmerLights_IOC_1,w
 15803  17DF  00F5               	movwf	i1Division@num
 15804  17E0  083E               	movf	(_DimmerIntr1^(0+128)+5),w
 15805  17E1  3187  27F2  3197   	fcall	i1_Division
 15806  17E4  00FB               	movwf	??_DimmerLights_IOC_1+1
 15807  17E5  087B               	movf	??_DimmerLights_IOC_1+1,w
 15808  17E6  0021               	movlb	1	; select bank1
 15809  17E7  00C1               	movwf	(_DimmerIntr1^(0+128)+8)
 15810                           
 15811                           ;Dimmer_B1.c: 1568: DimmerIntr1.TuneValue3 = DimmerIntr1.TuneValue2 + (60 - DimmerIntr1.
      +                          DimmingValue);
 15812  17E8  033E               	decf	(_DimmerIntr1^(0+128)+5),w
 15813  17E9  3AFF               	xorlw	255
 15814  17EA  0741               	addwf	(_DimmerIntr1^(0+128)+8),w
 15815  17EB  3E3C               	addlw	60
 15816  17EC  00FA               	movwf	??_DimmerLights_IOC_1
 15817  17ED  087A               	movf	??_DimmerLights_IOC_1,w
 15818  17EE  00C2               	movwf	(_DimmerIntr1^(0+128)+9)
 15819                           
 15820                           ;Dimmer_B1.c: 1569: DimmerIntr1.TuneValue4 = DimmerIntr1.TuneValue3 + DimmerIntr1.TuneVa
      +                          lue2;
 15821  17EF  0842               	movf	(_DimmerIntr1^(0+128)+9),w
 15822  17F0  0741               	addwf	(_DimmerIntr1^(0+128)+8),w
 15823  17F1  00FA               	movwf	??_DimmerLights_IOC_1
 15824  17F2  087A               	movf	??_DimmerLights_IOC_1,w
 15825  17F3  00C3               	movwf	(_DimmerIntr1^(0+128)+10)
 15826                           
 15827                           ;Dimmer_B1.c: 1570: DimmerIntr1.TuneEnd = DimmerIntr1.TuneValue4 + 5;
 15828  17F4  0843               	movf	(_DimmerIntr1^(0+128)+10),w
 15829  17F5  3E05               	addlw	5
 15830  17F6  00FA               	movwf	??_DimmerLights_IOC_1
 15831  17F7  087A               	movf	??_DimmerLights_IOC_1,w
 15832  17F8  00C4               	movwf	(_DimmerIntr1^(0+128)+11)
 15833  17F9                     i1l5360:	
 15834                           
 15835                           ;Dimmer_B1.c: 1571: }
 15836                           ;Dimmer_B1.c: 1575: DimmerIntr1.Status = RB2 == 1 ? 1 : 0;
 15837  17F9  12BA               	bcf	(_DimmerIntr1^(0+128)+1),5
 15838  17FA  0020               	movlb	0	; select bank0
 15839  17FB  1D0D               	btfss	13,2	;volatile
 15840  17FC  0008               	return
 15841  17FD  0021               	movlb	1	; select bank1
 15842  17FE  16BA               	bsf	(_DimmerIntr1^(0+128)+1),5
 15843  17FF  0008               	return
 15844  1800                     __end_of_DimmerLights_IOC_1:	
 15845                           
 15846                           	psect	text112
 15847  07F2                     __ptext112:	
 15848 ;; *************** function i1_Division *****************
 15849 ;; Defined at:
 15850 ;;		line 1437 in file "../src/Dimmer_B1.c"
 15851 ;; Parameters:    Size  Location     Type
 15852 ;;  value           1    wreg     unsigned char 
 15853 ;;  num             1    5[COMMON] unsigned char 
 15854 ;; Auto vars:     Size  Location     Type
 15855 ;;  value           1    8[COMMON] unsigned char 
 15856 ;;  Division        1    9[COMMON] unsigned char 
 15857 ;; Return value:  Size  Location     Type
 15858 ;;                  1    wreg      unsigned char 
 15859 ;; Registers used:
 15860 ;;		wreg, status,2, status,0, pclath, cstack
 15861 ;; Tracked objects:
 15862 ;;		On entry : 0/0
 15863 ;;		On exit  : 0/0
 15864 ;;		Unchanged: 0/0
 15865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15866 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15867 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15868 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15869 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15870 ;;Total ram usage:        5 bytes
 15871 ;; Hardware stack levels used:    1
 15872 ;; Hardware stack levels required when called:    1
 15873 ;; This function calls:
 15874 ;;		i1___lbdiv
 15875 ;; This function is called by:
 15876 ;;		_DimmerLights_IOC_1
 15877 ;; This function uses a non-reentrant model
 15878 ;;
 15879                           
 15880                           
 15881                           ;psect for function i1_Division
 15882  07F2                     i1_Division:	
 15883                           
 15884                           ;incstack = 0
 15885                           ; Regs used in i1_Division: [wreg+status,2+status,0+pclath+cstack]
 15886                           ;i1Division@value stored from wreg
 15887  07F2  00F8               	movwf	i1Division@value
 15888                           
 15889                           ;Dimmer_B1.c: 1438: char result = (char) (value / num);
 15890  07F3  0875               	movf	i1Division@num,w
 15891  07F4  00F6               	movwf	??i1_Division
 15892  07F5  0876               	movf	??i1_Division,w
 15893  07F6  00F0               	movwf	i1___lbdiv@divisor
 15894  07F7  0878               	movf	i1Division@value,w
 15895  07F8  3195  254E         	fcall	i1___lbdiv
 15896  07FA  00F7               	movwf	??i1_Division+1
 15897  07FB  0877               	movf	??i1_Division+1,w
 15898  07FC  00F9               	movwf	i1Division@result
 15899                           
 15900                           ;Dimmer_B1.c: 1439: return result;
 15901  07FD  0879               	movf	i1Division@result,w
 15902  07FE  0008               	return
 15903  07FF                     __end_ofi1_Division:	
 15904                           
 15905                           	psect	text113
 15906  154E                     __ptext113:	
 15907 ;; *************** function i1___lbdiv *****************
 15908 ;; Defined at:
 15909 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lbdiv.c"
 15910 ;; Parameters:    Size  Location     Type
 15911 ;;  dividend        1    wreg     unsigned char 
 15912 ;;  divisor         1    0[COMMON] unsigned char 
 15913 ;; Auto vars:     Size  Location     Type
 15914 ;;  dividend        1    2[COMMON] unsigned char 
 15915 ;;  __lbdiv         1    4[COMMON] unsigned char 
 15916 ;;  __lbdiv         1    3[COMMON] unsigned char 
 15917 ;; Return value:  Size  Location     Type
 15918 ;;                  1    wreg      unsigned char 
 15919 ;; Registers used:
 15920 ;;		wreg, status,2, status,0
 15921 ;; Tracked objects:
 15922 ;;		On entry : 0/0
 15923 ;;		On exit  : 0/0
 15924 ;;		Unchanged: 0/0
 15925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15926 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15927 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15928 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15929 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15930 ;;Total ram usage:        5 bytes
 15931 ;; Hardware stack levels used:    1
 15932 ;; This function calls:
 15933 ;;		Nothing
 15934 ;; This function is called by:
 15935 ;;		i1_Division
 15936 ;; This function uses a non-reentrant model
 15937 ;;
 15938                           
 15939                           
 15940                           ;psect for function i1___lbdiv
 15941  154E                     i1___lbdiv:	
 15942                           
 15943                           ;incstack = 0
 15944                           ; Regs used in i1___lbdiv: [wreg+status,2+status,0]
 15945                           ;i1___lbdiv@dividend stored from wreg
 15946  154E  00F2               	movwf	i1___lbdiv@dividend
 15947  154F  01F4               	clrf	i1___lbdiv@quotient
 15948  1550  0870               	movf	i1___lbdiv@divisor,w
 15949  1551  1903               	btfsc	3,2
 15950  1552  2D6D               	goto	i1l4848
 15951  1553  01F3               	clrf	i1___lbdiv@counter
 15952  1554  0AF3               	incf	i1___lbdiv@counter,f
 15953  1555                     i1l4836:	
 15954  1555  1BF0               	btfsc	i1___lbdiv@divisor,7
 15955  1556  2D5E               	goto	i1l4838
 15956  1557  1003               	clrc
 15957  1558  0DF0               	rlf	i1___lbdiv@divisor,f
 15958  1559  3001               	movlw	1
 15959  155A  00F1               	movwf	??i1___lbdiv
 15960  155B  0871               	movf	??i1___lbdiv,w
 15961  155C  07F3               	addwf	i1___lbdiv@counter,f
 15962  155D  2D55               	goto	i1l4836
 15963  155E                     i1l4838:	
 15964  155E  1003               	clrc
 15965  155F  0DF4               	rlf	i1___lbdiv@quotient,f
 15966  1560  0870               	movf	i1___lbdiv@divisor,w
 15967  1561  0272               	subwf	i1___lbdiv@dividend,w
 15968  1562  1C03               	skipc
 15969  1563  2D68               	goto	L7
 15970  1564  0870               	movf	i1___lbdiv@divisor,w
 15971  1565  02F2               	subwf	i1___lbdiv@dividend,f
 15972  1566  1474               	bsf	i1___lbdiv@quotient,0
 15973  1567  1003               	clrc
 15974  1568                     L7:	
 15975  1568  0CF0               	rrf	i1___lbdiv@divisor,f
 15976  1569  3001               	movlw	1
 15977  156A  02F3               	subwf	i1___lbdiv@counter,f
 15978  156B  1D03               	btfss	3,2
 15979  156C  2D5E               	goto	i1l4838
 15980  156D                     i1l4848:	
 15981  156D  0874               	movf	i1___lbdiv@quotient,w
 15982  156E  0008               	return
 15983  156F                     __end_ofi1___lbdiv:	
 15984  007E                     btemp	set	126	;btemp
 15985  007E                     pic14e$flags	set	126
 15986  007E                     wtemp	set	126
 15987  007E                     wtemp0	set	126
 15988  0080                     wtemp1	set	128
 15989  0082                     wtemp2	set	130
 15990  0084                     wtemp3	set	132
 15991  0086                     wtemp4	set	134
 15992  0088                     wtemp5	set	136
 15993  007F                     wtemp6	set	127
 15994  007E                     ttemp	set	126
 15995  007E                     ttemp0	set	126
 15996  0081                     ttemp1	set	129
 15997  0084                     ttemp2	set	132
 15998  0087                     ttemp3	set	135
 15999  007F                     ttemp4	set	127
 16000  007E                     ltemp	set	126
 16001  007E                     ltemp0	set	126
 16002  0082                     ltemp1	set	130
 16003  0086                     ltemp2	set	134
 16004  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         172
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     80      80
    BANK1            80      6      79
    BANK2            80      0      62
    BANK3            80      0      69
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    DimmerIntr	PTR struct Dimmer_Interrupt size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    Sw	PTR struct Switch size(1) Largest target is 9
		 -> NULL(NULL[0]), Sw1(BANK2[9]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK1[4]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 8
		 -> NULL(NULL[0]), DimmerLights1(BANK2[8]), 

    product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), _product(BANK3[32]), 

    DelayOff	PTR struct DelayOff size(1) Largest target is 5
		 -> NULL(NULL[0]), DlySw1(BANK2[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _TMR1_ISR->_DimmerLights_TMR_1
    _IOC_ISR->_DimmerLights_IOC_1
    _DimmerLights_IOC_1->i1_Division
    i1_Division->i1___lbdiv

Critical Paths under _main in BANK0

    _my_MainTimer->_setBuz
    _getTemp_AD->_getAD
    _getLoad_AD->_getAD
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_setProductData
    _Switch_Main->_setSw_Main
    _setSw_Main->_setDimmerLights_SwOn
    _setDimmerLights_DimmingOn->_DimmerLights_SelectPointer
    _Switch_Initialization->_setSw_Initialization
    _setSw_Initialization->_setLED
    _Mcu_Initialization->_WDT_Set
    _Load_Main->___lwdiv
    _Load_Initialization->_setLoad_AH_AL_Restore
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Flash_Memory_Main->_Flash_Memory_Modify
    _Flash_Memory_Modify->_Flash_Memory_Read
    _Flash_Memory_Initialization->_Flash_Memory_Read
    _Exception_Main->_setBuz
    _setDimmerLights_Main->_setDimmerLights_OnOff
    _setDimmerLights_OnOff->_setDelayOff_GO
    _setLED->_LedPointSelect
    _setDimmerLights_DimmingClose->_setDimmerIntr_Dimming_Sw
    _setDimmerIntr_DimmingValue->_getDimmerLights_PercentToValue
    _setDelayOff_GO->_setProductData
    _getDelayOff_GO->_DelayOffPointSelect
    _setDimmerLights_Dimming->_setProductData
    _getDimmerLights_Allow_Condition->_getLoad_OK
    _DimmerLights_Initialization->_DimmerIntr_Initialization
    _DimmerIntr_Initialization->_getDimmerLights_PercentToValue
    _DimmerIntr_Initialization->_getDimmerLights_ValueToPercent
    _getDimmerLights_ValueToPercent->___fttol
    _getDimmerLights_PercentToValue->___fttol
    ___fttol->___ftadd
    ___ftneg->___ftdiv
    ___ftneg->___ftmul
    ___ftmul->___awtoft
    ___ftdiv->___awtoft
    ___ftadd->___ftneg
    ___awtoft->___ftpack
    _Division->___lbdiv
    _DelayOff_Main->_DlyOff_Main
    _DlyOff_Main->_setProductData
    _setProductData->_getDimmerLights_ValueToPercent
    _setDimmerLights_SwOn->_setBuz
    _setBuz->___awdiv
    _setDimmerLights_SwOff->_DimmerLights_SelectPointer
    _getDimmerLights_Status->_DimmerLights_SelectPointer
    _DelayOff_Initialization->_DlyOff_Initialization
    _DlyOff_Initialization->_DelayOffPointSelect

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setDimmerLights_OnOff

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4   81192
                                              2 BANK1      4     0      4
              _Buzzer_Initialization
                        _Buzzer_Main
            _DelayOff_Initialization
                      _DelayOff_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
                     _Exception_Main
        _Flash_Memory_Initialization
                  _Flash_Memory_Main
                 _LED_Initialization
                           _LED_Main
                _Load_Initialization
                          _Load_Main
                 _Mcu_Initialization
              _Switch_Initialization
                        _Switch_Main
                _Temp_Initialization
                          _Temp_Main
                           _WDT_Main
                         _getLoad_AD
                         _getTemp_AD
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         1     1      0    1167
                                             13 BANK0      1     1      0
                             _setBuz
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           4     4      0     488
                                              4 BANK0      4     4      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getLoad_AD                                           8     8      0     585
                                              4 BANK0      8     8      0
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                4     1      3     222
                                              0 BANK0      4     1      3
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              0 BANK0      1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0    3145
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                        10    10      0    3145
                                             69 BANK0     10    10      0
                            ___lwdiv
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
                             _setBuz
            _setOverTemp_ADV_Restore
                     _setProductData
 ---------------------------------------------------------------------------------
 (3) _setOverTemp_ADV_Restore                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Switch_Main                                          0     0      0    1755
                         _TouchPower
                         _setSw_Main
 ---------------------------------------------------------------------------------
 (2) _setSw_Main                                           3     3      0    1755
                                             17 BANK0      3     3      0
                      _SwPointSelect
           _getMain_All_Error_Status
                    _getSw_KeyStatus
          _setDimmerLights_DimmingOn
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_DimmingOn                            1     1      0      44
                                              2 BANK0      1     1      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (3) _getSw_KeyStatus                                      4     4      0      48
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _SwPointSelect                                        2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _TouchPower                                           0     0      0       0
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Switch_Initialization                                0     0      0     865
               _setSw_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSw_Initialization                                 1     1      0     865
                                              4 BANK0      1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                            _IOC_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IOC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Load_Main                                           10    10      0    1611
                                              8 BANK0     10    10      0
                            ___lwdiv
                             ___wmul
    _getAll_DimmerIntr_Dimming_Sw_RF
                   _getDimmer_LoadGO
              _getDimmer_Load_Status
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
               _getMain_Lights_Count
              _setLoad_AH_AL_Restore
 ---------------------------------------------------------------------------------
 (2) _getMain_Lights_Count                                 2     2      0      25
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _getDimmer_Load_Status                                1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _getDimmer_LoadGO                                     1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _getAll_DimmerIntr_Dimming_Sw_RF                      1     1      0      24
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     270
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     696
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Load_Initialization                                  0     0      0      90
              _setLoad_AH_AL_Restore
 ---------------------------------------------------------------------------------
 (2) _setLoad_AH_AL_Restore                                2     2      0      90
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0      66
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0      66
                                              2 BANK0      3     3      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0     887
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0     887
                                              4 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Main                                    3     3      0    1640
                                              6 BANK0      3     3      0
                _Flash_Memory_Modify
                _getAll_Sw_KeyStatus
           _getMain_All_LightsStatus
 ---------------------------------------------------------------------------------
 (2) _getAll_Sw_KeyStatus                                  3     3      0      48
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _Flash_Memory_Modify                                  2     2      0    1520
                                              4 BANK0      2     2      0
               _Flash_Memory_Erasing
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                     _setMemory_Data
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Erasing                                 0     0      0       0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Initialization                          2     2      0    1430
                                              4 BANK0      2     2      0
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                     _setMemory_Data
 ---------------------------------------------------------------------------------
 (3) _setMemory_Data                                       3     2      1    1290
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Write                                   2     2      0      91
                                              0 BANK0      2     2      0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (4) _Flash_Memory_Unlock                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Read                                    4     4      0      48
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Exception_Main                                       9     9      0    2625
                                             13 BANK0      9     9      0
               _getDimmerLights_Line
             _getDimmerLights_Status
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
                             _setBuz
              _setDimmerLights_SwOff
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _getDimmerLights_Line                                 1     1      0      24
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0   34969
       _DimmerLights_DimmingFunction
                         _getLoad_OK
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 1     1      0   34739
                                              1 BANK1      1     1      0
         _DimmerLights_SelectPointer
    _getDimmerLights_Allow_Condition
           _getMain_All_LightsStatus
            _setDimmerLights_Dimming
              _setDimmerLights_OnOff
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_OnOff                                4     3      1   19996
                                             77 BANK0      3     2      1
                                              0 BANK1      1     1      0
                      _getCmd_Status
                     _getDelayOff_GO
     _getDimmerLights_PercentToValue
           _getMain_All_LightsStatus
                      _setCmd_Status
                     _setDelayOff_GO
        _setDimmerIntr_ControlStatus
         _setDimmerIntr_DimmingValue
           _setDimmerIntr_Dimming_RF
       _setDimmerLights_DimmingClose
               _setDimmerLights_Line
                             _setLED
                     _setProductData
 ---------------------------------------------------------------------------------
 (3) _setLED                                               2     1      1     821
                                              2 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (4) _LedPointSelect                                       2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_DimmingClose                         0     0      0     222
           _setDimmerIntr_Dimming_Sw
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_Dimming_RF                             3     2      1     133
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_DimmingValue                           3     2      1     133
                                             66 BANK0      3     2      1
     _getDimmerLights_PercentToValue (ARG)
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_ControlStatus                          3     2      1     222
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (4) _setDelayOff_GO                                       8     6      2    1650
                                             69 BANK0      8     6      2
                _DelayOffPointSelect
                             ___bmul
                     _setProductData
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1     270
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) _setCmd_Status                                        3     2      1     133
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _getMain_All_LightsStatus                             1     1      0      24
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _getDelayOff_GO                                       2     2      0      67
                                              2 BANK0      2     2      0
                _DelayOffPointSelect
 ---------------------------------------------------------------------------------
 (4) _getCmd_Status                                        2     2      0      46
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Dimming                              4     3      1   14472
                                             69 BANK0      4     3      1
         _getDimmerIntr_DimmingValue
     _getDimmerLights_ValueToPercent
                             _setBuz
           _setDimmerIntr_Dimming_Sw
               _setDimmerLights_Line
                   _setMemory_Modify
                     _setProductData
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Line                                 1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _setDimmerIntr_Dimming_Sw                             3     2      1     222
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (4) _getDimmerIntr_DimmingValue                           3     3      0      46
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _getDimmerLights_Allow_Condition                      4     4      0      71
                                              1 BANK0      3     3      0
                         _getLoad_OK
 ---------------------------------------------------------------------------------
 (4) _getLoad_OK                                           1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getMain_All_Error_Status                             7     7      0     161
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_DimmingFunction                         2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          0     0      0   27411
          _DimmerIntr_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _DimmerIntr_Initialization                            2     2      0   27411
                                             66 BANK0      2     2      0
                           _Division
     _getDimmerLights_PercentToValue
     _getDimmerLights_ValueToPercent
                   _setMemory_Modify
 ---------------------------------------------------------------------------------
 (4) _setMemory_Modify                                     2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _getDimmerLights_ValueToPercent                       6     6      0   11771
                                             60 BANK0      6     6      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (4) _getDimmerLights_PercentToValue                       6     6      0   15148
                                             60 BANK0      6     6      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     430
                                             46 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftneg                                              3     0      3     223
                                             30 BANK0      3     0      3
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    3377
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftdiv                                             16    10      6    3687
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             13     7      6    4221
                                             33 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___awtoft                                             6     3      3    3142
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2873
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) _Division                                             5     4      1     470
                                              5 BANK0      5     4      1
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              5     4      1     251
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Main                                        0     0      0    2414
                        _DlyOff_Main
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Main                                          3     3      0    2414
                                             69 BANK0      3     3      0
                _DelayOffPointSelect
             _getDimmerLights_Status
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
                     _setProductData
 ---------------------------------------------------------------------------------
 (3) _setProductData                                       3     2      1     845
                                             66 BANK0      3     2      1
     _getDimmerLights_ValueToPercent (ARG)
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOn                                 4     4      0    1326
                                             13 BANK0      4     4      0
         _DimmerLights_SelectPointer
           _getDimmerIntr_Dimming_Sw
                             _setBuz
 ---------------------------------------------------------------------------------
 (2) _setBuz                                               4     2      2    1167
                                              9 BANK0      4     2      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     478
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) _getDimmerIntr_Dimming_Sw                             2     2      0      46
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOff                                1     1      0      44
                                              2 BANK0      1     1      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (2) _getDimmerLights_Status                               2     2      0      67
                                              2 BANK0      2     2      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (4) _DimmerLights_SelectPointer                           2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Initialization                              0     0      0      44
              _DlyOff_Initialization
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Initialization                                1     1      0      44
                                              2 BANK0      1     1      0
                _DelayOffPointSelect
 ---------------------------------------------------------------------------------
 (5) _DelayOffPointSelect                                  2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Main                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  1     1      0     281
                                             12 COMMON     1     1      0
                            _IOC_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0       0
                 _DimmerLights_TMR_1
 ---------------------------------------------------------------------------------
 (9) _DimmerLights_TMR_1                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _IOC_ISR                                              0     0      0     281
                 _DimmerLights_IOC_1
 ---------------------------------------------------------------------------------
 (9) _DimmerLights_IOC_1                                   2     2      0     281
                                             10 COMMON     2     2      0
                         i1_Division
 ---------------------------------------------------------------------------------
 (10) i1_Division                                          5     4      1     281
                                              5 COMMON     5     4      1
                          i1___lbdiv
 ---------------------------------------------------------------------------------
 (11) i1___lbdiv                                           5     4      1     188
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Initialization
   _Buzzer_Main
   _DelayOff_Initialization
     _DlyOff_Initialization
       _DelayOffPointSelect
   _DelayOff_Main
     _DlyOff_Main
       _DelayOffPointSelect
       _getDimmerLights_Status
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOff
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOn
         _DimmerLights_SelectPointer
         _getDimmerIntr_Dimming_Sw
         _setBuz
           ___awdiv
       _setProductData
         _getDimmerLights_ValueToPercent (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
   _DimmerLights_Initialization
     _DimmerIntr_Initialization
       _Division
         ___lbdiv
       _getDimmerLights_PercentToValue
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
       _getDimmerLights_ValueToPercent
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
       _setMemory_Modify
     _setDimmerLights_Initialization
   _DimmerLights_Main
     _DimmerLights_DimmingFunction
     _getLoad_OK
     _getMain_All_Error_Status
     _getMain_All_LightsStatus
     _setDimmerLights_Main
       _DimmerLights_SelectPointer
       _getDimmerLights_Allow_Condition
         _getLoad_OK
       _getMain_All_LightsStatus
       _setDimmerLights_Dimming
         _getDimmerIntr_DimmingValue
         _getDimmerLights_ValueToPercent
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setBuz
           ___awdiv
         _setDimmerIntr_Dimming_Sw
         _setDimmerLights_Line
         _setMemory_Modify
         _setProductData
           _getDimmerLights_ValueToPercent (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
       _setDimmerLights_OnOff
         _getCmd_Status
         _getDelayOff_GO
           _DelayOffPointSelect
         _getDimmerLights_PercentToValue
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _getMain_All_LightsStatus
         _setCmd_Status
         _setDelayOff_GO
           _DelayOffPointSelect
           ___bmul
           _setProductData
             _getDimmerLights_ValueToPercent (ARG)
               ___awtoft
                 ___ftpack
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
         _setDimmerIntr_ControlStatus
         _setDimmerIntr_DimmingValue
           _getDimmerLights_PercentToValue (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
         _setDimmerIntr_Dimming_RF
         _setDimmerLights_DimmingClose
           _setDimmerIntr_Dimming_Sw
         _setDimmerLights_Line
         _setLED
           _LedPointSelect
         _setProductData
           _getDimmerLights_ValueToPercent (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
   _Exception_Main
     _getDimmerLights_Line
     _getDimmerLights_Status
       _DimmerLights_SelectPointer
     _getMain_All_Error_Status
     _getMain_All_LightsStatus
     _setBuz
       ___awdiv
     _setDimmerLights_SwOff
       _DimmerLights_SelectPointer
     _setLED
       _LedPointSelect
   _Flash_Memory_Initialization
     _Flash_Memory_Read
     _Flash_Memory_Write
       _Flash_Memory_Unlock
     _setMemory_Data
   _Flash_Memory_Main
     _Flash_Memory_Modify
       _Flash_Memory_Erasing
         _Flash_Memory_Unlock
       _Flash_Memory_Read
       _Flash_Memory_Write
         _Flash_Memory_Unlock
       _setMemory_Data
     _getAll_Sw_KeyStatus
     _getMain_All_LightsStatus
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _Load_Initialization
     _setLoad_AH_AL_Restore
   _Load_Main
     ___lwdiv
     ___wmul
     _getAll_DimmerIntr_Dimming_Sw_RF
     _getDimmer_LoadGO
     _getDimmer_Load_Status
     _getMain_All_Error_Status
     _getMain_All_LightsStatus
     _getMain_Lights_Count
     _setLoad_AH_AL_Restore
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IOC_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _Switch_Initialization
     _setSw_Initialization
       _setLED
         _LedPointSelect
   _Switch_Main
     _TouchPower
       _Timeout_Counter
       _set_TimeoutCleared
     _setSw_Main
       _SwPointSelect
       _getMain_All_Error_Status
       _getSw_KeyStatus
       _setDimmerLights_DimmingOn
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOff
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOn
         _DimmerLights_SelectPointer
         _getDimmerIntr_Dimming_Sw
         _setBuz
           ___awdiv
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       ___lwdiv
       _getMain_All_Error_Status
       _getMain_All_LightsStatus
       _setBuz
         ___awdiv
       _setOverTemp_ADV_Restore
       _setProductData
         _getDimmerLights_ValueToPercent (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
   _WDT_Main
     _WDT_Clearing
   _getLoad_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getTemp_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_MainTimer
     _setBuz
       ___awdiv

 _ISR (ROOT)
   _IOC_ISR
     _DimmerLights_IOC_1
       i1_Division
         i1___lbdiv
   _TMR1_ISR
     _DimmerLights_TMR_1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      6      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      3E       9       77.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      45      11       86.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     130      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     130      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Mar 18 15:38:56 2015

                    __size_of_Switch_Main 0007                     ?_Flash_Memory_Erasing 0070  
                              __CFG_CP$ON 0000                              _WDT_Clearing 0002  
                   __end_of_setCmd_Status 0819                            ___bmul@product 0022  
               getMain_Lights_Count@count 0020                                        l60 0A1F  
                                      l70 08CD                                        l72 08DD  
                                      l58 0A0B                                        l68 08E3  
                                      l69 08DF                                        _RD 0CA8  
                                      _WR 0CA9                              ___awdiv@sign 0026  
                                      _Sw 00D4                            setTemp_Main@AD 006D  
                     ___wmul@multiplicand 0022                      _getDimmerLights_Line 1224  
                  __end_of_setDelayOff_GO 0E2C                              ___ftadd@exp1 004D  
                            ___ftadd@exp2 004C                      _setDimmerLights_Main 0BBC  
                    _setDimmerLights_Line 1341                              ___ftadd@sign 004B  
                    _setDimmerLights_SwOn 08EA                                       l248 0C8C  
                                     l442 1504                                       l363 0A57  
                                     l376 12DB                                       l561 0888  
                                     l556 088A                                       l469 0F26  
                                     l558 087F                                       l567 089E  
                                     l903 0D11                                       l893 1602  
                                     l879 0854                                       _GIE 005F  
                                     _RA0 0060                                       _RB0 0068  
    __size_of_DimmerLights_Initialization 0007                                       _RB1 0069  
                                     _RB2 006A                                       _RA4 0064  
                                     _LED 00D2                                       _RB3 006B  
                                     _RA6 0066                                       _RB5 006D  
                                     _RA7 0067                                       _ISR 0004  
                                     _WDT 00CD                                       _Cmd 00CF  
            getDimmerLights_Status@lights 0022                                       _Sw1 0148  
              ??_setDimmerIntr_Dimming_RF 0021                ??_setDimmerIntr_Dimming_Sw 0021  
         setDimmerIntr_Dimming_RF@command 0020                     _Buzzer_Initialization 117C  
                         __end_of_ADC_Set 11CB                                       wreg 0009  
    setDimmerLights_Initialization@lights 0070              getDimmerLights_Status@status 0023  
     __end_of_setDimmerIntr_ControlStatus 142F               _setDimmerIntr_ControlStatus 1417  
                       ??_getSw_KeyStatus 0020                                      ?_ISR 0070  
                            ___ftdiv@cntr 0038                           __end_of_IOC_ISR 11F3  
                   _setDimmerLights_OnOff 0EB9                                Load_Main@i 0030  
                            ___ftdiv@sign 003D                                      l1101 0601  
                                    l1110 0818                                      l1205 01D1  
                                    l1070 166C                                      l1206 01CF  
                                    l1046 17C1                                      l2015 0406  
                                    l1074 1668                                      l1069 1651  
                                    l1345 047F                            _Load_Main$3412 002A  
                                    l1195 01F5                                      l1339 052C  
                                    l1700 0243                                      l1197 0081  
                                    l1198 007D                                      l1199 0078  
                         __end_of_IOC_Set 1245                                      l4310 1368  
                                    l5120 133B                                      l1825 14D9  
                                    l4410 03BF                                      l4314 136E  
                                    l4332 0991                                      l4420 03E1  
                                    l4500 06E3                                      l5220 0BE3  
                                    l6012 00D6                                      l4350 09B0  
                                    l4430 0402                                      l4422 03E5  
                                    l5222 0BEA                                      l5062 15EA  
                                    l6006 00A4                                      l1678 13DD  
                                    l4360 09CB                                      l4272 0AA1  
                                    l4416 03D2                                      l5232 0C11  
                                    l5144 16CB                                      l5136 16AD  
                                    l6104 01E4                                      l4338 099C  
                                    l4282 0AC9                                      l4274 0AAB  
                                    l4434 0418                                      l4418 03DC  
                                    l4530 0750                                      l4522 073C  
                                    l4506 06F9                                      l5234 0C18  
                                    l5138 16B9                                      l1698 035F  
                                    l4364 09D3                                      l4356 09C2  
                                    l4348 09A4                                      l4284 0AD1  
                                    l4276 0AB0                                      l4268 0A9A  
                                    l4428 03F8                                      l5260 0881  
                                    l6132 054E                                      l5148 16D4  
                                    l6044 0168                                      l6052 0191  
                                    l4438 042A                                      l4534 0758  
                                    l4518 0734                                      l6150 0594  
                                    l6142 056D                                      l6038 0159  
                                    l4712 12BD                                      l1992 0ADB  
                                    l4376 159C                                      l4448 0445  
                                    l4392 0396                                      l4464 0F84  
                                    l6152 0570                                      l6048 0185  
                                    l5600 13E8                                      l5432 1519  
                                    l4810 1577                                      l1986 0AC4  
                                    l4458 0F6E                                      l6170 05B1  
                                    l6154 059C                                      l6138 055E  
                                    l6058 01A1                                      l5434 151C  
                                    l4812 1580                                      l4388 038F  
                                    l5268 0897                                      l4644 0DDE  
                                    l6172 05DD                                      l6180 05F7  
                                    l6068 01B7                                      l5532 0482  
                                    l5540 0494                                      l4822 158F  
                                    l4398 03A5                                      l4486 0FDE  
                                    l4478 0FC5                                      l4558 0D32  
                                    l4654 0E0E                                      l5278 122C  
                                    l6174 05E7                                      l5470 0C9A  
                                    l5630 0276                                      l5614 022D  
                                    l5438 1521                                      l5704 08B7  
                                    l4592 0D97                                      l4584 0D7D  
                                    l4576 0D62                                      l4752 167D  
                                    l6168 05D5                                      l5640 02AB  
                                    l6280 095D                                      l4586 0D86  
                                    l4578 0D70                                      l4914 164C  
                                    l4658 0E22                                      l5458 1319  
                                    l5570 0503                                      l5538 0491  
                                    l4588 0D89                                      l4924 1663  
                                    l4916 1655                                      l4780 1363  
                                    l5740 1506                                      l5484 0D0A  
                                    l5476 0CAF                                      l5580 0518  
                                    l6276 0952                     _setDimmerLights_SwOff 1713  
                                    l4774 1357                                      l4790 0812  
                                    l4766 169A                                      l4758 1686  
                                    l5814 0833                                      l5582 051A  
                                    l5910 0E5D                                      l4872 091C  
                                    l4960 0EFF                                      l5648 02DC  
                                    l5656 030C                                      l4874 0922  
                                    l4938 13FA                                      l4778 135E  
                                    l4786 0803                                      l5922 0EA2  
                                    l5914 0E74                                      l4876 092C  
                                    l4980 0F35                                      l5684 14D3  
                                    l5596 13E2                                      l5940 17A1  
                                    l4958 0EE8                                      l4966 0F06  
                                    l5918 0E8B                                      l4888 1740  
                                    l5874 07BE                                      l5866 079F  
                                    l5788 0684                                      l5972 005F  
                                    l4998 1762                                      l5990 0080  
                                    l5894 07ED                                      l5878 07C6  
                   _myMain_Initialization 13AE                                      _CFGS 0CAE  
                            __CFG_WDTE$ON 0000                                      _FREE 0CAC  
                                    _LATA 010C                                      _LATB 010D  
                                    _LATC 010E                                      u4205 0759  
                                    u4055 0F96                                      u4215 075F  
                                    u4135 0705                                      u4065 0FA6  
                                    u4145 0715                                      u4075 0FC6  
                                    u4315 0D7E                                      u4085 0FD5  
                                    u4165 073D                                      u5045 16B0  
                                    u4095 0FDF                                      u4175 0743  
                                    u4255 0D39                                      u3625 0AE2  
                                    u4425 0DEA                                      u5065 16BA  
                                    u6025 14DA                                      u3555 0AA6  
                                    u5075 16C4                                      u6035 14DF  
                                    _PEIE 005E                                      u3725 09A7  
                                    u4285 0D63                                      u5085 16CC  
                                    u3575 0ABF                                      u6065 08AD  
                                    u3745 09B1                                      u3755 09BB  
                                    u3595 0ACC                                      u3765 09C3  
                                    u3925 03D3                                      u6325 07AE  
                                    u6265 084B                                      u6425 0E50  
                                    u6505 17B9                                      u3955 03E6  
                                    u6435 0E67                                      u6445 0E7E  
                                    u3895 03C0                                      u4935 13D0  
                                    u6375 07DD                                      u6455 0E95  
                                    u3985 03F9                                      u6465 0EAC  
                                    u5755 04D5                                      u6645 00A2  
                                    u4965 1487                                      u6910 05DB  
                                    u6655 00D4                                      u5775 04EC  
                                    u6745 0198                                      u6665 0118  
                                    u6915 05BA                                      u5795 050A  
                                    u6880 059A                                      u6885 0579  
                                    _LWLO 0CAD                                      _WREN 0CAA  
                                    _WPUB 020D                                      _Buz1 00AD  
                                    _Load 0120                                      _Temp 00D6  
                                    _main 0934                              ___ftpack@arg 0020  
                     __end_of_DlyOff_Main 0C93                              ___ftpack@exp 0023  
                                    fsr0h 0005                                      fsr1h 0007  
                                    fsr0l 0004                                      indf0 0000  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                           __end_of_WDT_Set 1250  
                                    ltemp 007E                                      start 001F  
                                    ttemp 007E                                      wtemp 007E  
       setDimmerLights_SwOn@dimmingStatus 002F      __end_of_DimmerLights_DimmingFunction 08A0  
   __size_of_DimmerLights_DimmingFunction 0046              _DimmerLights_DimmingFunction 085A  
                       ___bmul@multiplier 0023                              ___ftmul@cntr 003C  
                            ___ftmul@sign 003D              __size_of_Temp_Initialization 0003  
    _getDimmerLights_Allow_Condition$1902 0023                         ?_getDimmer_LoadGO 0070  
                                   ??_ISR 007C                              ___fttol@exp1 005B  
                            ___fttol@lval 0057   __end_of_getDimmerLights_Allow_Condition 1401  
__size_of_getDimmerLights_Allow_Condition 0016         ??_getDimmerLights_Allow_Condition 0021  
        ?_getDimmerLights_Allow_Condition 0070           _getDimmerLights_Allow_Condition 13EB  
                  _getDimmerLights_Status 12DD                        ??_getDimmer_LoadGO 0020  
                        __end_of_LED_Main 1198                     ?_getDimmerLights_Line 0070  
                              _DimmerIntr 00D1                     ?_setDimmerLights_Main 0070  
                   ?_setDimmerLights_Line 0070                           ?_setDelayOff_GO 0065  
                   ?_setDimmerLights_SwOn 0070                                     ?_main 00EA  
                         __end_of___awdiv 09DA                           __end_of___lbdiv 1591  
                         __end_of___ftadd 045D                           __end_of___ftdiv 1000  
                         __end_of___ftneg 11FC                           __end_of___ftmul 0780  
                         ___awdiv@divisor 0020                                     _T1CON 0018  
                         __end_of___fttol 0DA0                                     _IOCBF 0396  
                                   _IOCBN 0395                                     _IOCBP 0394  
                                   _IOCIE 005B                                     _IOCIF 0058  
                         __end_of___lwdiv 16DB                                     i1l526 1701  
                                   i1l842 001A                           ___awdiv@counter 0025  
                                   _TMR1H 0017                                     _TMR1L 0016  
                                   _PORTA 000C                                     _PORTB 000D  
                                   _PORTC 000E                              ?_setLED_Main 0070  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E                   __end_of_Timeout_Counter 13D6  
                           __CFG_WRT$HALF 0000    __end_of_getDimmerLights_ValueToPercent 0BBC  
 __size_of_getDimmerLights_ValueToPercent 0065            _getDimmerLights_ValueToPercent 0B57  
                                   _Light 00D3                           i1Division@value 0078  
                        __end_of_TMR1_ISR 14D0                               ?i1_Division 0075  
                 __size_of_setProductData 000C                          __end_of_TMR1_Set 12A4  
      DimmerLights_DimmingFunction@lights 0021                                     _getAD 150E  
                           ___awtoft@sign 002D                             ___ftpack@sign 0024  
                           ??_Buzzer_Main 0020                          __end_of_WDT_Main 139B  
                          __CFG_BOREN$OFF 0000              __end_of_getMain_Lights_Count 123A  
                      Flash_Memory_Read@i 0021                                     ltemp0 007E  
                                   ltemp1 0082                                     ltemp2 0086  
                                   ltemp3 0080            __size_of_setLED_Initialization 0011  
           __end_of_setLED_Initialization 1330                                     ttemp0 007E  
                                   ttemp1 0081                                     ttemp2 0084  
                                   ttemp3 0087                                     ttemp4 007F  
                                   status 0003                                     wtemp0 007E  
                                   wtemp1 0080                                     wtemp2 0082  
                                   wtemp3 0084                                     wtemp4 0086  
                                   wtemp5 0088                                     wtemp6 007F  
                      __size_ofi1___lbdiv 0021                       _getAll_Sw_KeyStatus 130E  
                         ___lbdiv@divisor 0020               __size_of_Flash_Memory_Write 002F  
                         ___lbdiv@counter 0023          __size_of_DelayOff_Initialization 0004  
                  ?_setLoad_AH_AL_Restore 0070                         setTemp_Main@error 0067  
                  ??_Flash_Memory_Erasing 0020               ??_setDimmerLights_DimmingOn 0022  
                         __initialization 0021             ?_DimmerLights_DimmingFunction 0070  
                       ?_setMemory_Modify 0070                          __end_of_Division 12CE  
                 __size_of_getDelayOff_GO 0011                              __end_of_main 0986  
                        __end_of_Fosc_Set 119C            getMain_All_LightsStatus@status 0020  
                      ??_setMemory_Modify 0020              setDimmerLights_OnOff@command 006D  
                          _Exception_Main 0530                                 ??_ADC_Set 0020  
                    _setSw_Initialization 12ED                                    ??_main 0070  
                           ___fttol@sign1 0056                      ?_getAll_Sw_KeyStatus 0070  
             ?_setDimmerIntr_DimmingValue 0062              ??_DimmerLights_SelectPointer 0020  
                          _setMemory_Data 1280                    ?_Buzzer_Initialization 0070  
                 ??_DlyOff_Initialization 0022        setDimmerIntr_ControlStatus@command 0020  
                 _setDimmerLights_Dimming 174B                                 ??_IOC_ISR 007C  
                               ??_IOC_Set 0020                               _DimmerIntr1 00B9  
                _getMain_All_LightsStatus 1205                   ??_Switch_Initialization 0025  
                  ?_setDimmerLights_OnOff 006D                                    ?_getAD 0020  
                  ?_setDimmerLights_SwOff 0070                               _DlyOff_Main 0C24  
                  ?_myMain_Initialization 0070                                    _ADCON0 009D  
                                  _ADCON1 009E          __end_of_getDimmerIntr_Dimming_Sw 12BF  
                                  _ADRESH 009C                                    _ADRESL 009B  
                        ___awdiv@dividend 0022                     _getDimmer_Load_Status 11E2  
                               ??_WDT_Set 0020                          __end_of___awtoft 15B3  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  _ANSELC 018E                          __end_of___ftpack 0AF2  
                _getMain_All_Error_Status 163B                                    _IOCBF2 1CB2  
                                  i1l5310 16EF                                    i1l5304 16E8  
                                  i1l5316 16F7                                    i1l5360 17F9  
                                  i1l6246 0012                                    i1l4836 1555  
                                  i1l4838 155E                                    i1l4848 156D  
                                  i1l5760 14C9                                    i1l5770 11EF  
                                  _FVRCON 0117      getDimmerLights_Allow_Condition@allow 0022  
                                  _PMADRH 0192                                    _PMADRL 0191  
                                  _PMDATH 0194                                    _PMDATL 0193  
                                  _PMCON2 0196                                    u616_25 14C4  
                                  _OSCCON 0099                        __size_of_Load_Main 01B2  
                                  _TMR1IE 0488                                    _TMR1IF 0088  
                                  _IO_Set 1461                                    _WDTCON 0097  
    __end_of_setDimmerLights_DimmingClose 11B1     __size_of_setDimmerLights_DimmingClose 0006  
            _setDimmerLights_DimmingClose 11AB                      Exception_Main@i_3095 0032  
                                  _Dimmer 00C5                                    _DlySw1 0159  
                ?_setOverTemp_ADV_Restore 0070                     __end_of_getCmd_Status 1365  
              __end_of_Mcu_Initialization 1389                       __end_of_Buzzer_Main 08EA  
                                  _Memory 01A0                          i1Division@result 0079  
                                  _Timer1 00CA                                    ___bmul 1365  
                  __end_of_Exception_Main 0602                      Exception_Main@lights 0035  
                                  ___wmul 14D0                       __size_ofi1_Division 000D  
                               ??___awdiv 0024                                 ??___lbdiv 0021  
                               ??___ftadd 0047              __size_of_DelayOffPointSelect 000C  
                               ??___ftdiv 0034                                 ??___ftneg 0041  
                               ??___ftmul 0034                                 ??___fttol 0052  
            ?_Flash_Memory_Initialization 0070                    ??_getDimmerLights_Line 0020  
                               ??___lwdiv 0024                    ??_setDimmerLights_Main 0070  
                  ??_setDimmerLights_Line 0020                      Exception_Main@status 002E  
 __end_of_getAll_DimmerIntr_Dimming_Sw_RF 1219  __size_of_getAll_DimmerIntr_Dimming_Sw_RF 000A  
       ??_getAll_DimmerIntr_Dimming_Sw_RF 0020          ?_getAll_DimmerIntr_Dimming_Sw_RF 0070  
         _getAll_DimmerIntr_Dimming_Sw_RF 120F                    ??_setDimmerLights_SwOn 002D  
                                  _setLED 166E                                    _myMain 00A0  
                  __end_of_setMemory_Data 128C                     ?_setSw_Initialization 0070  
                        ___awdiv@quotient 0027                                    _setBuz 09DA  
                      __size_of_Temp_Main 0003                      Load_Main@LightsCount 002F  
             __end_of_Load_Initialization 1182          ??_setDimmerLights_Initialization 0020  
         ?_setDimmerLights_Initialization 0070                     ??_getAll_Sw_KeyStatus 0020  
        __end_of_setDimmerIntr_Dimming_RF 1447          __end_of_setDimmerIntr_Dimming_Sw 1417  
                   ___ftmul@f3_as_product 0039                         __end_ofi1___lbdiv 156F  
               _setDimmerLights_DimmingOn 15B3                  Flash_Memory_Read@address 0022  
                        ?_Timeout_Counter 0070               getMain_Lights_Count@status1 0021  
             __size_of_DimmerLights_IOC_1 003D                     __end_of_SwPointSelect 12B0  
             __size_of_DimmerLights_TMR_1 0038              __size_of_Flash_Memory_Modify 0086  
                 __size_of_LedPointSelect 000C           setDimmerIntr_Dimming_Sw@command 0020  
                      setTemp_Main@TempGO 006C                          ___lbdiv@dividend 0022  
                     Flash_Memory_Write@i 0021              __size_of_Flash_Memory_Unlock 0009  
                              _TouchPower 13D6                   __end_of__initialization 0045  
         setDimmerIntr_DimmingValue@value 0062           getDimmerIntr_DimmingValue@value 0022  
                               ?_LED_Main 0070                                ___ftadd@f1 0041  
                              ___ftadd@f2 0044                             ?_my_MainTimer 0070  
                              ___ftdiv@f1 0031                                ___ftdiv@f2 002E  
                              ___ftdiv@f3 0039             ?_setDimmerLights_DimmingClose 0070  
                              ___ftneg@f1 003E                                ___awtoft@c 0028  
                     ___bmul@multiplicand 0020              ?_DimmerLights_Initialization 0070  
                              ___ftmul@f1 002E                                ___ftmul@f2 0031  
              ?_DimmerIntr_Initialization 0070                                ___fttol@f1 004E  
                          __pcstackCOMMON 0070                           ?_Exception_Main 0070  
                            __pidataBANK3 152E                             __end_of_getAD 152E  
                               ?_TMR1_ISR 0070                                 ?_TMR1_Set 0070  
                  setLoad_AH_AL_Restore@i 0021                        _LED_Initialization 1190  
                         _getSw_KeyStatus 1330                           ?_setMemory_Data 0020  
          ??_DimmerLights_DimmingFunction 0020          ??_getDimmerLights_PercentToValue 005C  
         ?_getDimmerLights_PercentToValue 0070                 ??_setDimmerLights_Dimming 0066  
           ??_Flash_Memory_Initialization 0024                          ___lbdiv@quotient 0024  
                    _getMain_Lights_Count 122F                                 ?_WDT_Main 0070  
                       __end_of_Load_Main 01FB         setDimmerIntr_ControlStatus@lights 0022  
              __end_of_set_TimeoutCleared 11A5                       ?_LED_Initialization 0070  
                          _setProductData 125C                      __size_of_setLED_Main 0032  
                  ?_getDimmer_Load_Status 0070                                   ??_getAD 0023  
                     _Temp_Initialization 1182                                 ?_Division 0025  
                              __pbssBANK1 00A0                                __pbssBANK2 0120  
                              __pbssBANK3 01A0                                 ?_Fosc_Set 0070  
                             _Buzzer_Main 08A0                         __end_of_Temp_Main 1188  
                                 ?_IO_Set 0070                            ??_my_MainTimer 002D  
                              ??_LED_Main 0025                           __CFG_VCAPEN$OFF 0000  
                 _DelayOff_Initialization 1188                             ??_Switch_Main 0034  
                    ??_LED_Initialization 0025                              _DimmerLights 007D  
                       LedPointSelect@led 0021     getAll_DimmerIntr_Dimming_Sw_RF@status 0020  
                  __size_of_DelayOff_Main 0004                               setBuz@count 002C  
                 ?_getDimmerLights_Status 0070                                __pmaintext 0934  
                          _getDelayOff_GO 12FD                      ?_Temp_Initialization 0070  
                                 ?___bmul 0020                          ??_setDelayOff_GO 0067  
       __end_of_DimmerIntr_Initialization 0A91             ??_DimmerLights_Initialization 0064  
                                 ?___wmul 0020                                ??_TMR1_ISR 0071  
                           ?_setTemp_Main 0070         __size_of_getDimmerIntr_Dimming_Sw 000F  
                              _getLoad_AD 0780                                ??_TMR1_Set 0020  
                              __pintentry 0004                    ??_setSw_Initialization 0024  
                              _getLoad_OK 11D2                 ?_getDimmerIntr_Dimming_Sw 0070  
                                 ?_setLED 0022                     ?_getMain_Lights_Count 0070  
                                 _ADC_Set 11C4                                   ?_setBuz 0029  
                               ?___awtoft 0028                                 ?___ftpack 0020  
                              _getTemp_AD 0E2C        __end_of_DimmerLights_SelectPointer 1224  
              _DimmerLights_SelectPointer 1219                                ??_WDT_Main 0020  
                  __end_of_setProductData 1268             setDimmerLights_Dimming@lights 0068  
                                 _IOC_ISR 11EA                                   _IOC_Set 123A  
           setDimmerLights_Dimming@status 0065     getDimmerLights_Allow_Condition@lights 0070  
                            ??i1_Division 0076                         _Flash_Memory_Main 0819  
               __size_of_getDimmer_LoadGO 0008                         _Flash_Memory_Read 1447  
                      ?_Flash_Memory_Main 0070                        ?_Flash_Memory_Read 0070  
                              ??_Division 0026                                   _WDT_Set 1245  
                  __size_of_setCmd_Status 0019                                ??_Fosc_Set 0020  
                             ?_TouchPower 0070           __end_of_setDimmerLights_Dimming 1787  
                 ??_setLoad_AH_AL_Restore 0020                       getCmd_Status@number 0020  
                         __size_of_IO_Set 001A                       setCmd_Status@number 0022  
       __size_of_setDimmerIntr_Dimming_RF 0018         __size_of_setDimmerIntr_Dimming_Sw 0016  
               ?_setDimmerIntr_Dimming_RF 0020                       ??_Flash_Memory_Main 0026  
               ?_setDimmerIntr_Dimming_Sw 0020                       ??_Flash_Memory_Read 0020  
                  __end_of_getDelayOff_GO 130E            __end_of_getDimmerLights_Status 12ED  
                 __end_of_getSw_KeyStatus 1341                     ??_Temp_Initialization 0020  
                          ??_setTemp_Main 0065                           __size_of___bmul 0012  
                     setProductData@value 0062                                   ___awdiv 0986  
          ??_setDimmerLights_DimmingClose 0023                                   ___lbdiv 156F  
                                 ___ftadd 0367                                   ___ftdiv 0F57  
                                 ___ftneg 11F3                           __size_of___wmul 001E  
                                 ___ftmul 06CC                                   ___fttol 0D19  
                     __end_of_Switch_Main 11D2                        __end_ofi1_Division 07FF  
                                 ___lwdiv 16A4                ??_getMain_All_LightsStatus 0020  
                 ??_Buzzer_Initialization 0020                                ??___awtoft 002B  
                              ??___ftpack 0025                           __size_of_setLED 0036  
                         __size_of_setBuz 0059                                   __ptext1 1787  
                                 __ptext2 13AE                                   __ptext3 0E2C  
                                 __ptext4 0780                                   __ptext5 150E  
                                 __ptext6 1389                                   __ptext7 0002  
                                 __ptext8 1185                                   __ptext9 045D  
                            __size_of_ISR 001B                ??_getMain_All_Error_Status 0020  
                 ??_setDimmerLights_OnOff 006E                           ?_setProductData 0062  
                      i1___lbdiv@dividend 0072                 __end_of_Flash_Memory_Main 085A  
               __end_of_Flash_Memory_Read 1461                   ??_setDimmerLights_SwOff 0022  
                 ??_myMain_Initialization 0020                             _DelayOff_Main 118C  
                       _DimmerLights_Main 14EE            __size_of_DlyOff_Initialization 0006  
               __size_of_setMemory_Modify 0013             __end_of_DlyOff_Initialization 11AB  
                ??_setTemp_Initialization 0020                              ?_DlyOff_Main 0070  
                      ?_DimmerLights_Main 0070                                   _product 00EE  
                          _LedPointSelect 1274                 getAll_Sw_KeyStatus@status 0021  
                         getTemp_AD@ADRES 0026                       _DelayOffPointSelect 1250  
                                 clrloop0 11B8            __size_of_Switch_Initialization 0004  
           __end_of_Switch_Initialization 11A0                      end_of_initialization 0045  
               ??_DelayOff_Initialization 0023                __end_of_Flash_Memory_Write 1609  
      __size_of_setDimmerLights_DimmingOn 0027                                   init_ram 11B1  
                     ??_DimmerLights_Main 0070                      Flash_Memory_Read@ret 0023  
                                 initloop 11B2                                _setSw_Main 01FB  
                  setDimmerLights_SwOn@sw 0030                      Flash_Memory_Modify@i 0025  
                   _setLED_Initialization 131F                           ?_getDelayOff_GO 0070  
                      i1___lbdiv@quotient 0074             __size_of_Flash_Memory_Erasing 000C  
                    ?_DelayOffPointSelect 0070                       _Flash_Memory_Modify 0C93  
                             ?_getLoad_AD 0070                               ?_getLoad_OK 0070  
                  ??_getMain_Lights_Count 0020                             _setCmd_Status 0800  
                     _Flash_Memory_Unlock 11FC                               ?_getTemp_AD 0070  
                     __size_of_TouchPower 0015                  setLED_Initialization@led 0024  
                 setTemp_Main@DangerValue 006A                    setSw_Initialization@sw 0024  
               __end_of_DimmerLights_Main 150E                        _Mcu_Initialization 1377  
        __size_of_setOverTemp_ADV_Restore 001B                      __end_of_my_MainTimer 17C3  
                          ?_DelayOff_Main 0070                          __CFG_FOSC$INTOSC 0000  
                  __end_of_LedPointSelect 1280                  Load_Main@ErrorCountValue 002D  
        setDimmerIntr_DimmingValue@lights 0064          getDimmerIntr_DimmingValue@lights 0021  
                               i1___lbdiv 154E                       ?_Mcu_Initialization 0070  
                    ?_Flash_Memory_Modify 0070                      ?_Flash_Memory_Unlock 0070  
          setDimmerIntr_Dimming_RF@lights 0022           getMain_All_Error_Status@command 0025  
                             ___ftdiv@exp 003C         __end_of_setDimmerLights_DimmingOn 15DA  
                        ??_Exception_Main 002D                             i1Division@num 0075  
                          __end_of_IO_Set 147B                               _Switch_Main 11CB  
                       __size_of_LED_Main 0004                          ?_getSw_KeyStatus 0070  
                        ??_setMemory_Data 0021                               ___ftmul@exp 0038  
             ??_DimmerIntr_Initialization 0062                      ??_Mcu_Initialization 0021  
             __end_of_getAll_Sw_KeyStatus 131F                     ??_DelayOffPointSelect 0020  
                           ?_WDT_Clearing 0070                            ?_setCmd_Status 0020  
                          __end_of___bmul 1377       __size_of_getDimmerIntr_DimmingValue 000F  
                          __end_of___wmul 14EE                         getSw_KeyStatus@sw 0070  
                       __size_of_TMR1_ISR 001E             __size_of_getDimmerLights_Line 000B  
        DimmerLights_SelectPointer@lights 0021                         __size_of_TMR1_Set 000C  
           __size_of_setDimmerLights_Main 0068                            __end_of_setLED 16A4  
           __size_of_setDimmerLights_Line 0012             __size_of_setDimmerLights_SwOn 004A  
                          __end_of_setBuz 0A33                __end_of_DimmerLights_IOC_1 1800  
                 ??_getDimmer_Load_Status 0020                __size_of_Flash_Memory_Main 0041  
              __size_of_Flash_Memory_Read 001A                         __size_of_WDT_Main 0012  
              __end_of_DimmerLights_TMR_1 1713                       start_initialization 0021  
                         ?_LedPointSelect 0070                                 _Load_Main 0049  
                             __end_of_ISR 001F                    __size_of_getCmd_Status 0012  
                        _getDimmer_LoadGO 11DA                     ??_Flash_Memory_Modify 0024  
            __size_of_Load_Initialization 0003                                ?i1___lbdiv 0070  
            ?_setDimmerIntr_ControlStatus 0020           __size_of_setTemp_Initialization 0001  
                   ??_Flash_Memory_Unlock 0020                      __end_of_setTemp_Main 0530  
  __end_of_getDimmerLights_PercentToValue 0B57   __size_of_getDimmerLights_PercentToValue 0065  
          _getDimmerLights_PercentToValue 0AF2                       __size_of_getLoad_AD 0072  
                            ?_Buzzer_Main 0070       getDimmerLights_PercentToValue@value 005E  
                     __size_of_getLoad_OK 0008                        _set_TimeoutCleared 11A0  
                                ??_IO_Set 0020                  __size_of_Timeout_Counter 0015  
                               _VarErrLED 00E4                         __size_of_Division 000F  
                             ?_setSw_Main 0070                       __size_of_getTemp_AD 008D  
                  ?_setLED_Initialization 0070                         __size_of_Fosc_Set 0004  
                               _Temp_Main 1185                       ?_set_TimeoutCleared 0070  
                          ??_WDT_Clearing 0020                     setProductData@address 0064  
                     Exception_Main@count 002F                       Exception_Main@error 0034  
                                ??___bmul 0021                                  ??___wmul 0024  
                  __size_of_SwPointSelect 000C          __end_of_getMain_All_LightsStatus 120F  
                             __pdataBANK3 01C5                                  ??_setLED 0023  
                                ?_ADC_Set 0070                                  ??_setBuz 002B  
                         ??_DelayOff_Main 0068               ?_DimmerLights_SelectPointer 0070  
        __end_of_getMain_All_Error_Status 166E                __size_of_DimmerLights_Main 0020  
                      setMemory_Data@data 0020            setDimmerIntr_Dimming_Sw@lights 0022  
          getDimmerIntr_Dimming_Sw@lights 0020                             ??_setLED_Main 0022  
                       __size_of___awtoft 0022                         __size_of___ftpack 0061  
                                ?_IOC_ISR 0070                               __pbssCOMMON 007D  
                                ?_IOC_Set 0070                   Load_Main@Load_RunStatus 002E  
          getDimmerIntr_Dimming_Sw@status 0021                                 ___latbits 0003  
                        _setMemory_Modify 139B                                ?_Load_Main 0070  
                           __pcstackBANK0 0020                             __pcstackBANK1 00E8  
                    ??_set_TimeoutCleared 0020                 _DimmerIntr_Initialization 0A33  
                           DlyOff_Main@sw 0067                                  ?_WDT_Set 0070  
           ??_setDimmerIntr_ControlStatus 0021                              ??_TouchPower 0020  
                    __size_of_DlyOff_Main 006F               setDimmerLights_DimmingOn@sw 0022  
                           _DimmerLights1 0151                     setDelayOff_GO@command 0065  
          __size_of_setLoad_AH_AL_Restore 001C             __end_of_setLoad_AH_AL_Restore 14B2  
                               __pnvBANK1 00EE               __size_of_LED_Initialization 0004  
                         Exception_Main@i 0030                                ?_Temp_Main 0070  
                        ___lwdiv@dividend 0022                     DelayOffPointSelect@sw 0021  
                           _getCmd_Status 1353                                setBuz@time 0029  
                         ??_setCmd_Status 0021                       setDelayOff_GO@value 0066  
                          Load_Main@error 002C                    _setTemp_Initialization 07FF  
                ?_setDimmerLights_Dimming 0065       __end_of_Flash_Memory_Initialization 06CC  
             _Flash_Memory_Initialization 0602                                  ?___awdiv 0020  
                               __ptext100 12DD                                 __ptext101 1219  
                                ?___lbdiv 0020                                 __ptext110 11EA  
                               __ptext102 1188                                 __ptext111 17C3  
                               __ptext103 11A5                                 __ptext112 07F2  
                               __ptext104 1250                                 __ptext113 154E  
                               __ptext105 08A0                                 __ptext106 117C  
                               __ptext108 14B2                                 __ptext109 16DB  
                                ?___ftadd 0041                                  ?___ftdiv 002E  
                                ?___ftneg 003E                                  ?___ftmul 002E  
                                ?___fttol 004E                     __size_of_my_MainTimer 003C  
                                ?___lwdiv 0020                          ??_setProductData 0063  
                 _setOverTemp_ADV_Restore 147B             __size_of_setSw_Initialization 0010  
          __size_of_Buzzer_Initialization 0003             __end_of_Buzzer_Initialization 117F  
                getDimmerLights_Line@line 0020                        __end_of_TouchPower 13EB  
                     __size_of_setSw_Main 016C        __end_of_getDimmerIntr_DimmingValue 12DD  
            ??_setDimmerIntr_DimmingValue 0063                _getDimmerIntr_DimmingValue 12CE  
          __size_of_setDimmerLights_OnOff 009E             __end_of_setDimmerLights_OnOff 0F57  
          __size_of_setDimmerLights_SwOff 0038            __size_of_myMain_Initialization 0013  
           __end_of_setDimmerLights_SwOff 174B             __end_of_myMain_Initialization 13C1  
                             ??i1___lbdiv 0071                            __size_of_getAD 0020  
                        ___lwdiv@quotient 0025                             _SwPointSelect 12A4  
                     __end_of_setLED_Main 163B                          ??_getDelayOff_GO 0022  
                       i1___lbdiv@divisor 0070                         i1___lbdiv@counter 0073  
             __end_of_Temp_Initialization 1185                            ___wmul@product 0024  
                                _LED_Main 1194                           SwPointSelect@sw 0021  
                               clear_ram0 11B7                              _my_MainTimer 1787  
     __end_of_DimmerLights_Initialization 11C4               _DimmerLights_Initialization 11BD  
                  _Flash_Memory_Main$2681 0028                            ?_getCmd_Status 0070  
                _getDimmerIntr_Dimming_Sw 12B0                                  _GO_nDONE 04E9  
                       ??_Timeout_Counter 0020      __size_of_setDimmerIntr_ControlStatus 0018  
     __size_of_setDimmerIntr_DimmingValue 000C                        _Flash_Memory_Write 15DA  
                            ??_getLoad_AD 0024                                  _TMR1_ISR 14B2  
                            ??_getLoad_OK 0020                                  _TMR1_Set 1298  
                            ??_getTemp_AD 0024                                  _WDT_Main 1389  
                 DlyOff_Initialization@sw 0022                     getSw_KeyStatus@status 0021  
                        __size_of_ADC_Set 0007                         ___wmul@multiplier 0020  
                     ?_Flash_Memory_Write 0070                     __size_of_setTemp_Main 00D3  
                 __size_of_setDelayOff_GO 008C                                  _DelayOff 00D0  
                            setSw_Main@sw 0033                               ??_Load_Main 0028  
                        __size_of_IOC_ISR 0009            getMain_All_Error_Status@status 0026  
                        __size_of_IOC_Set 000B              __end_of_Flash_Memory_Erasing 1298  
                          ?_SwPointSelect 0070                               getAD@adcon0 0023  
                             getAD@adcon1 0020                            setLED_Main@led 0024  
                    __end_of_WDT_Clearing 0004                     _DlyOff_Initialization 11A5  
       __size_of_getMain_All_LightsStatus 000A                                  _Division 12BF  
               ?_getMain_All_LightsStatus 0070                  _setDimmerIntr_Dimming_RF 142F  
             setDimmerLights_OnOff@lights 00E8                  _setDimmerIntr_Dimming_Sw 1401  
                                _Fosc_Set 1198                          __size_of_WDT_Set 000B  
                      __end_of_getLoad_AD 07F2                        __end_of_getLoad_OK 11DA  
                   _Switch_Initialization 119C         __size_of_getMain_All_Error_Status 0033  
                    ??_Flash_Memory_Write 0020                 ?_getMain_All_Error_Status 0070  
                    __size_of_Buzzer_Main 004A                        __end_of_getTemp_AD 0EB9  
                            ?_Switch_Main 0070                         getLoad_AD@channel 0026  
     __size_of_DimmerLights_SelectPointer 000B                                  _SwDetect 00D5  
                             ??_Temp_Main 006F                          getCmd_Status@cmd 0021  
                        setCmd_Status@cmd 0020             _getMain_All_Error_Status$3083 0021  
           _getMain_All_Error_Status$3084 0023                  __end_of_getDimmer_LoadGO 11E2  
                     _Load_Initialization 117F          ??_getDimmerLights_ValueToPercent 005C  
         ?_getDimmerLights_ValueToPercent 0070                                 setLED@led 0023  
               ??_setOverTemp_ADV_Restore 0020                              _setTemp_Main 045D  
                        __size_of___awdiv 0054                          __size_of___lbdiv 0022  
                        __size_of___ftadd 00F6                          __size_of___ftdiv 00A9  
                        __size_of___ftneg 0009                          __size_of___ftmul 00B4  
                        __size_of___fttol 0087                          __size_of___lwdiv 0037  
                setDimmerLights_SwOn@idle 002E                                  ___awtoft 1591  
                        ??_LedPointSelect 0020                                  ___ftpack 0A91  
           __size_of_getMain_Lights_Count 000B                    getDimmer_LoadGO@loadgo 0020  
                       getTemp_AD@channel 0025                               _setLED_Main 1609  
          __size_of_getDimmer_Load_Status 0008                  ?_DelayOff_Initialization 0070  
                        getDelayOff_GO@go 0023                          getDelayOff_GO@sw 0022  
           __end_of_getDimmer_Load_Status 11EA                          setDelayOff_GO@sw 006C  
                         ___lwdiv@divisor 0020                      ?_Load_Initialization 0070  
                         ___lwdiv@counter 0027                                  __ptext10 147B  
                                __ptext11 1182                                  __ptext20 13C1  
                                __ptext12 07FF                                  __ptext21 119C  
                                __ptext13 11CB                                  __ptext30 0049  
                                __ptext22 12ED                                  __ptext14 01FB  
                                __ptext31 122F                                  __ptext23 1377  
                                __ptext15 15B3                                  __ptext40 1609  
                                __ptext32 11E2                                  __ptext24 1245  
                                __ptext16 1330                                  __ptext41 1190  
                                __ptext33 11DA                                  __ptext25 1298  
                                __ptext17 12A4                                  __ptext50 11FC  
                                __ptext42 131F                                  __ptext34 120F  
                                __ptext26 1461                                  __ptext18 13D6  
                                __ptext51 1447                                  __ptext43 0819  
                                __ptext35 14D0                                  __ptext27 123A  
                                __ptext19 11A0                                  __ptext60 142F  
                                __ptext52 0530                                  __ptext44 130E  
                                __ptext36 16A4                                  __ptext28 1198  
                                __ptext61 1268                                  __ptext53 1224  
                                __ptext45 0C93                                  __ptext37 117F  
                                __ptext29 11C4                                  __ptext70 1341  
                                __ptext62 1417                                  __ptext54 14EE  
                                __ptext46 128C                                  __ptext38 1496  
                                __ptext71 1401                                  __ptext63 0DA0  
                                __ptext55 0BBC                                  __ptext47 0602  
                                __ptext39 1194                                  __ptext80 139B  
                                __ptext72 12CE                                  __ptext64 1365  
                                __ptext56 0EB9                                  __ptext48 1280  
                                __ptext81 0B57                                  __ptext73 13EB  
                                __ptext65 0800                                  __ptext57 166E  
                                __ptext49 15DA                                  __ptext90 12BF  
                                __ptext82 0AF2                                  __ptext74 11D2  
                                __ptext66 1205                                  __ptext58 1274  
                                __ptext91 156F                                  __ptext83 0D19  
                                __ptext75 163B                                  __ptext67 12FD  
                                __ptext59 11AB                                  __ptext92 118C  
                                __ptext84 11F3                                  __ptext76 085A  
                                __ptext68 1353                                  __ptext93 0C24  
                                __ptext85 06CC                                  __ptext77 11BD  
                                __ptext69 174B                                  __ptext94 125C  
                                __ptext86 0F57                                  __ptext78 117B  
                                __ptext95 08EA                                  __ptext87 0367  
                                __ptext79 0A33                                  __ptext96 09DA  
                                __ptext88 1591                                  __ptext97 0986  
                                __ptext89 0A91                                  __ptext98 12B0  
                                __ptext99 1713                                  __product 01C5  
                 ??_setLED_Initialization 0024                  ??_getDimmerLights_Status 0022  
            __end_of_getDimmerLights_Line 122F              __end_of_setDimmerLights_Main 0C24  
            __end_of_setDimmerLights_Line 1353                        _DimmerLights_IOC_1 17C3  
            __end_of_setDimmerLights_SwOn 0934                              ??_setSw_Main 0031  
                           setLED@command 0022                             __size_of_main 0052  
      __size_of_DimmerIntr_Initialization 005E                           ??_getCmd_Status 0020  
                      _DimmerLights_TMR_1 16DB                setDimmerLights_Main@lights 00E9  
             __end_of_DelayOffPointSelect 125C                  setOverTemp_ADV_Restore@i 0021  
              ?_setDimmerLights_DimmingOn 0070                  __end_of_setMemory_Modify 13AE  
                     ?_DimmerLights_IOC_1 0070                       ?_DimmerLights_TMR_1 0070  
             __size_of_Mcu_Initialization 0012                              getLoad_OK@ok 0020  
             Flash_Memory_Main@key_Status 0027                  _getAll_Sw_KeyStatus$5433 0022  
                                main@argc 00EA                                  main@argv 00EC  
                    _getSw_KeyStatus$5430 0022       getDimmerLights_ValueToPercent@value 005E  
                __size_of_getSw_KeyStatus 0011              setDimmerLights_Dimming@value 0067  
      __end_of_setDimmerIntr_DimmingValue 1274                _setDimmerIntr_DimmingValue 1268  
             __end_of_Flash_Memory_Modify 0D19              __size_of_getAll_Sw_KeyStatus 0011  
             __end_of_Flash_Memory_Unlock 1205                           ??_SwPointSelect 0020  
                      __end_of_setSw_Main 0367                     ??_Load_Initialization 0022  
                    ??_DimmerLights_IOC_1 007A           getDimmerLights_PercentToValue@i 005F  
                  ?_DlyOff_Initialization 0070                      ??_DimmerLights_TMR_1 0070  
                          Division@result 0029           __end_of_setOverTemp_ADV_Restore 1496  
                             pic14e$flags 007E              ??_getDimmerIntr_DimmingValue 0020  
              setDimmerLights_Line@lights 0020                   setDimmerLights_SwOff@sw 0022  
                                intlevel1 0000                    ?_Switch_Initialization 0070  
                         setDelayOff_GO@i 0069                           setDelayOff_GO@j 006A  
                         setDelayOff_GO@k 006B                     setTemp_Main@SafeValue 0068  
  __end_of_setDimmerLights_Initialization 117C   __size_of_setDimmerLights_Initialization 0001  
          _setDimmerLights_Initialization 117B                   ?_setTemp_Initialization 0070  
                         getLoad_AD@ADRES 0029                               getLoad_AD@i 002B  
                             getLoad_AD@j 0028                               getLoad_AD@k 0027  
                    _Flash_Memory_Erasing 128C                   __size_of_Exception_Main 00D2  
                           Division@value 0028           __end_of_DelayOff_Initialization 118C  
                   __size_of_WDT_Clearing 0002                     __end_of_DelayOff_Main 1190  
                 __size_of_setMemory_Data 000C                            _setDelayOff_GO 0DA0  
             ?_getDimmerIntr_DimmingValue 0070          __size_of_setDimmerLights_Dimming 003C  
             getDimmer_Load_Status@status 0020      __size_of_Flash_Memory_Initialization 00CA  
             __size_of_set_TimeoutCleared 0005                             ??_DlyOff_Main 0065  
                              i1_Division 07F2                     setMemory_Data@address 0022  
              ??_getDimmerIntr_Dimming_Sw 0020              __end_of_setSw_Initialization 12FD  
                         _Timeout_Counter 13C1           __size_of_getDimmerLights_Status 0010  
         getDimmerLights_ValueToPercent@i 005F          Flash_Memory_Initialization@value 0025  
              __end_of_LED_Initialization 1194            __end_of_setTemp_Initialization 0800  
                             Division@num 0025                   setMemory_Modify@command 0021  
                   _setLoad_AH_AL_Restore 1496  
