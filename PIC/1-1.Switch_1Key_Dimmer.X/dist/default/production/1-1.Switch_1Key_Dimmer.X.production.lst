

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Tue Oct 21 16:51:25 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,inline,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,inline,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,inline,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    61                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    63                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    64                           	psect	text45,local,class=CODE,merge=1,inline,delta=2
    65                           	psect	text46,local,class=CODE,merge=1,delta=2
    66                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    67                           	psect	text48,local,class=CODE,merge=1,delta=2
    68                           	psect	text49,local,class=CODE,merge=1,delta=2
    69                           	psect	text50,local,class=CODE,merge=1,delta=2
    70                           	psect	text51,local,class=CODE,merge=1,delta=2
    71                           	psect	text52,local,class=CODE,merge=1,delta=2
    72                           	psect	text53,local,class=CODE,merge=1,delta=2
    73                           	psect	text54,local,class=CODE,merge=1,delta=2
    74                           	psect	text55,local,class=CODE,merge=1,delta=2
    75                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    76                           	psect	text57,local,class=CODE,merge=1,delta=2
    77                           	psect	text58,local,class=CODE,merge=1,delta=2
    78                           	psect	text59,local,class=CODE,merge=1,delta=2
    79                           	psect	text60,local,class=CODE,merge=1,delta=2
    80                           	psect	text61,local,class=CODE,merge=1,delta=2
    81                           	psect	text62,local,class=CODE,merge=1,delta=2
    82                           	psect	text63,local,class=CODE,merge=1,delta=2
    83                           	psect	text64,local,class=CODE,merge=1,inline,delta=2
    84                           	psect	text65,local,class=CODE,merge=1,delta=2
    85                           	psect	text66,local,class=CODE,merge=1,inline,delta=2
    86                           	psect	text67,local,class=CODE,merge=1,delta=2
    87                           	psect	text68,local,class=CODE,merge=1,delta=2
    88                           	psect	text69,local,class=CODE,merge=1,delta=2
    89                           	psect	text70,local,class=CODE,merge=1,delta=2
    90                           	psect	text71,local,class=CODE,merge=1,delta=2
    91                           	psect	text72,local,class=CODE,merge=1,delta=2
    92                           	psect	text73,local,class=CODE,merge=1,delta=2
    93                           	psect	text74,local,class=CODE,merge=1,delta=2
    94                           	psect	text75,local,class=CODE,merge=1,delta=2
    95                           	psect	text76,local,class=CODE,merge=1,delta=2
    96                           	psect	text77,local,class=CODE,merge=1,delta=2
    97                           	psect	text78,local,class=CODE,merge=1,delta=2
    98                           	psect	text79,local,class=CODE,merge=1,delta=2
    99                           	psect	text80,local,class=CODE,merge=1,delta=2
   100                           	psect	text81,local,class=CODE,merge=1,delta=2
   101                           	psect	text82,local,class=CODE,merge=1,delta=2
   102                           	psect	text83,local,class=CODE,merge=1,delta=2
   103                           	psect	text84,local,class=CODE,merge=1,delta=2
   104                           	psect	text85,local,class=CODE,merge=1,delta=2
   105                           	psect	text86,local,class=CODE,merge=1,inline,delta=2
   106                           	psect	text87,local,class=CODE,merge=1,inline,delta=2
   107                           	psect	text88,local,class=CODE,merge=1,delta=2
   108                           	psect	text89,local,class=CODE,merge=1,delta=2
   109                           	psect	text90,local,class=CODE,merge=1,delta=2
   110                           	psect	text91,local,class=CODE,merge=1,delta=2
   111                           	psect	text92,local,class=CODE,merge=1,delta=2
   112                           	psect	text93,local,class=CODE,merge=1,delta=2
   113                           	psect	text94,local,class=CODE,merge=1,delta=2
   114                           	psect	text95,local,class=CODE,merge=1,delta=2
   115                           	psect	text96,local,class=CODE,merge=1,delta=2
   116                           	psect	text97,local,class=CODE,merge=1,delta=2
   117                           	psect	text98,local,class=CODE,merge=1,delta=2
   118                           	psect	text99,local,class=CODE,merge=1,delta=2
   119                           	psect	text100,local,class=CODE,merge=1,delta=2
   120                           	psect	text101,local,class=CODE,merge=1,delta=2
   121                           	psect	text102,local,class=CODE,merge=1,delta=2
   122                           	psect	text103,local,class=CODE,merge=1,delta=2
   123                           	psect	text104,local,class=CODE,merge=1,delta=2
   124                           	psect	text105,local,class=CODE,merge=1,inline,delta=2
   125                           	psect	text106,local,class=CODE,merge=1,delta=2
   126                           	psect	text107,local,class=CODE,merge=1,delta=2
   127                           	psect	text108,local,class=CODE,merge=1,delta=2
   128                           	psect	text109,local,class=CODE,merge=1,inline,delta=2
   129                           	psect	text110,local,class=CODE,merge=1,delta=2
   130                           	psect	text111,local,class=CODE,merge=1,delta=2
   131                           	psect	text112,local,class=CODE,merge=1,delta=2
   132                           	psect	text113,local,class=CODE,merge=1,inline,delta=2
   133                           	psect	text114,local,class=CODE,merge=1,delta=2
   134                           	psect	text115,local,class=CODE,merge=1,delta=2
   135                           	psect	text116,local,class=CODE,merge=1,delta=2
   136                           	psect	text117,local,class=CODE,merge=1,delta=2
   137                           	psect	text118,local,class=CODE,merge=1,inline,delta=2
   138                           	psect	text119,local,class=CODE,merge=1,inline,delta=2
   139                           	psect	text120,local,class=CODE,merge=1,inline,delta=2
   140                           	psect	text121,local,class=CODE,merge=1,inline,delta=2
   141                           	psect	text122,local,class=CODE,merge=1,inline,delta=2
   142                           	psect	text123,local,class=CODE,merge=1,inline,delta=2
   143                           	psect	intentry,global,class=CODE,delta=2
   144                           	psect	text125,local,class=CODE,merge=1,inline,delta=2
   145                           	psect	text126,local,class=CODE,merge=1,inline,delta=2
   146                           	psect	text127,local,class=CODE,merge=1,inline,delta=2
   147                           	psect	text128,local,class=CODE,merge=1,inline,delta=2
   148                           	psect	text129,local,class=CODE,merge=1,inline,delta=2
   149                           	psect	text130,local,class=CODE,merge=1,inline,delta=2
   150                           	psect	text131,local,class=CODE,merge=1,inline,delta=2
   151                           	dabs	1,0x7E,2
   152  0000                     	;# 
   153  0001                     	;# 
   154  0002                     	;# 
   155  0003                     	;# 
   156  0004                     	;# 
   157  0005                     	;# 
   158  0006                     	;# 
   159  0007                     	;# 
   160  0008                     	;# 
   161  0009                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000D                     	;# 
   166  000E                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0015                     	;# 
   171  0016                     	;# 
   172  0016                     	;# 
   173  0017                     	;# 
   174  0018                     	;# 
   175  0019                     	;# 
   176  001A                     	;# 
   177  001B                     	;# 
   178  001C                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  0116                     	;# 
   199  0117                     	;# 
   200  011D                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203  018E                     	;# 
   204  0191                     	;# 
   205  0191                     	;# 
   206  0192                     	;# 
   207  0193                     	;# 
   208  0193                     	;# 
   209  0194                     	;# 
   210  0195                     	;# 
   211  0196                     	;# 
   212  0197                     	;# 
   213  0199                     	;# 
   214  019A                     	;# 
   215  019B                     	;# 
   216  019B                     	;# 
   217  019B                     	;# 
   218  019B                     	;# 
   219  019C                     	;# 
   220  019C                     	;# 
   221  019D                     	;# 
   222  019E                     	;# 
   223  019F                     	;# 
   224  020D                     	;# 
   225  0210                     	;# 
   226  0211                     	;# 
   227  0211                     	;# 
   228  0212                     	;# 
   229  0212                     	;# 
   230  0213                     	;# 
   231  0213                     	;# 
   232  0214                     	;# 
   233  0214                     	;# 
   234  0215                     	;# 
   235  0215                     	;# 
   236  0215                     	;# 
   237  0216                     	;# 
   238  0216                     	;# 
   239  0217                     	;# 
   240  0217                     	;# 
   241  0291                     	;# 
   242  0291                     	;# 
   243  0292                     	;# 
   244  0293                     	;# 
   245  0298                     	;# 
   246  0298                     	;# 
   247  0299                     	;# 
   248  029A                     	;# 
   249  0394                     	;# 
   250  0395                     	;# 
   251  0396                     	;# 
   252  0FE4                     	;# 
   253  0FE5                     	;# 
   254  0FE6                     	;# 
   255  0FE7                     	;# 
   256  0FE8                     	;# 
   257  0FE9                     	;# 
   258  0FEA                     	;# 
   259  0FEB                     	;# 
   260  0FED                     	;# 
   261  0FEE                     	;# 
   262  0FEF                     	;# 
   263  0000                     	;# 
   264  0001                     	;# 
   265  0002                     	;# 
   266  0003                     	;# 
   267  0004                     	;# 
   268  0005                     	;# 
   269  0006                     	;# 
   270  0007                     	;# 
   271  0008                     	;# 
   272  0009                     	;# 
   273  000A                     	;# 
   274  000B                     	;# 
   275  000C                     	;# 
   276  000D                     	;# 
   277  000E                     	;# 
   278  0010                     	;# 
   279  0011                     	;# 
   280  0012                     	;# 
   281  0015                     	;# 
   282  0016                     	;# 
   283  0016                     	;# 
   284  0017                     	;# 
   285  0018                     	;# 
   286  0019                     	;# 
   287  001A                     	;# 
   288  001B                     	;# 
   289  001C                     	;# 
   290  008C                     	;# 
   291  008D                     	;# 
   292  008E                     	;# 
   293  0090                     	;# 
   294  0091                     	;# 
   295  0092                     	;# 
   296  0095                     	;# 
   297  0096                     	;# 
   298  0097                     	;# 
   299  0099                     	;# 
   300  009A                     	;# 
   301  009B                     	;# 
   302  009B                     	;# 
   303  009C                     	;# 
   304  009D                     	;# 
   305  009E                     	;# 
   306  010C                     	;# 
   307  010D                     	;# 
   308  010E                     	;# 
   309  0116                     	;# 
   310  0117                     	;# 
   311  011D                     	;# 
   312  018C                     	;# 
   313  018D                     	;# 
   314  018E                     	;# 
   315  0191                     	;# 
   316  0191                     	;# 
   317  0192                     	;# 
   318  0193                     	;# 
   319  0193                     	;# 
   320  0194                     	;# 
   321  0195                     	;# 
   322  0196                     	;# 
   323  0197                     	;# 
   324  0199                     	;# 
   325  019A                     	;# 
   326  019B                     	;# 
   327  019B                     	;# 
   328  019B                     	;# 
   329  019B                     	;# 
   330  019C                     	;# 
   331  019C                     	;# 
   332  019D                     	;# 
   333  019E                     	;# 
   334  019F                     	;# 
   335  020D                     	;# 
   336  0210                     	;# 
   337  0211                     	;# 
   338  0211                     	;# 
   339  0212                     	;# 
   340  0212                     	;# 
   341  0213                     	;# 
   342  0213                     	;# 
   343  0214                     	;# 
   344  0214                     	;# 
   345  0215                     	;# 
   346  0215                     	;# 
   347  0215                     	;# 
   348  0216                     	;# 
   349  0216                     	;# 
   350  0217                     	;# 
   351  0217                     	;# 
   352  0291                     	;# 
   353  0291                     	;# 
   354  0292                     	;# 
   355  0293                     	;# 
   356  0298                     	;# 
   357  0298                     	;# 
   358  0299                     	;# 
   359  029A                     	;# 
   360  0394                     	;# 
   361  0395                     	;# 
   362  0396                     	;# 
   363  0FE4                     	;# 
   364  0FE5                     	;# 
   365  0FE6                     	;# 
   366  0FE7                     	;# 
   367  0FE8                     	;# 
   368  0FE9                     	;# 
   369  0FEA                     	;# 
   370  0FEB                     	;# 
   371  0FED                     	;# 
   372  0FEE                     	;# 
   373  0FEF                     	;# 
   374  0000                     	;# 
   375  0001                     	;# 
   376  0002                     	;# 
   377  0003                     	;# 
   378  0004                     	;# 
   379  0005                     	;# 
   380  0006                     	;# 
   381  0007                     	;# 
   382  0008                     	;# 
   383  0009                     	;# 
   384  000A                     	;# 
   385  000B                     	;# 
   386  000C                     	;# 
   387  000D                     	;# 
   388  000E                     	;# 
   389  0010                     	;# 
   390  0011                     	;# 
   391  0012                     	;# 
   392  0015                     	;# 
   393  0016                     	;# 
   394  0016                     	;# 
   395  0017                     	;# 
   396  0018                     	;# 
   397  0019                     	;# 
   398  001A                     	;# 
   399  001B                     	;# 
   400  001C                     	;# 
   401  008C                     	;# 
   402  008D                     	;# 
   403  008E                     	;# 
   404  0090                     	;# 
   405  0091                     	;# 
   406  0092                     	;# 
   407  0095                     	;# 
   408  0096                     	;# 
   409  0097                     	;# 
   410  0099                     	;# 
   411  009A                     	;# 
   412  009B                     	;# 
   413  009B                     	;# 
   414  009C                     	;# 
   415  009D                     	;# 
   416  009E                     	;# 
   417  010C                     	;# 
   418  010D                     	;# 
   419  010E                     	;# 
   420  0116                     	;# 
   421  0117                     	;# 
   422  011D                     	;# 
   423  018C                     	;# 
   424  018D                     	;# 
   425  018E                     	;# 
   426  0191                     	;# 
   427  0191                     	;# 
   428  0192                     	;# 
   429  0193                     	;# 
   430  0193                     	;# 
   431  0194                     	;# 
   432  0195                     	;# 
   433  0196                     	;# 
   434  0197                     	;# 
   435  0199                     	;# 
   436  019A                     	;# 
   437  019B                     	;# 
   438  019B                     	;# 
   439  019B                     	;# 
   440  019B                     	;# 
   441  019C                     	;# 
   442  019C                     	;# 
   443  019D                     	;# 
   444  019E                     	;# 
   445  019F                     	;# 
   446  020D                     	;# 
   447  0210                     	;# 
   448  0211                     	;# 
   449  0211                     	;# 
   450  0212                     	;# 
   451  0212                     	;# 
   452  0213                     	;# 
   453  0213                     	;# 
   454  0214                     	;# 
   455  0214                     	;# 
   456  0215                     	;# 
   457  0215                     	;# 
   458  0215                     	;# 
   459  0216                     	;# 
   460  0216                     	;# 
   461  0217                     	;# 
   462  0217                     	;# 
   463  0291                     	;# 
   464  0291                     	;# 
   465  0292                     	;# 
   466  0293                     	;# 
   467  0298                     	;# 
   468  0298                     	;# 
   469  0299                     	;# 
   470  029A                     	;# 
   471  0394                     	;# 
   472  0395                     	;# 
   473  0396                     	;# 
   474  0FE4                     	;# 
   475  0FE5                     	;# 
   476  0FE6                     	;# 
   477  0FE7                     	;# 
   478  0FE8                     	;# 
   479  0FE9                     	;# 
   480  0FEA                     	;# 
   481  0FEB                     	;# 
   482  0FED                     	;# 
   483  0FEE                     	;# 
   484  0FEF                     	;# 
   485  0000                     	;# 
   486  0001                     	;# 
   487  0002                     	;# 
   488  0003                     	;# 
   489  0004                     	;# 
   490  0005                     	;# 
   491  0006                     	;# 
   492  0007                     	;# 
   493  0008                     	;# 
   494  0009                     	;# 
   495  000A                     	;# 
   496  000B                     	;# 
   497  000C                     	;# 
   498  000D                     	;# 
   499  000E                     	;# 
   500  0010                     	;# 
   501  0011                     	;# 
   502  0012                     	;# 
   503  0015                     	;# 
   504  0016                     	;# 
   505  0016                     	;# 
   506  0017                     	;# 
   507  0018                     	;# 
   508  0019                     	;# 
   509  001A                     	;# 
   510  001B                     	;# 
   511  001C                     	;# 
   512  008C                     	;# 
   513  008D                     	;# 
   514  008E                     	;# 
   515  0090                     	;# 
   516  0091                     	;# 
   517  0092                     	;# 
   518  0095                     	;# 
   519  0096                     	;# 
   520  0097                     	;# 
   521  0099                     	;# 
   522  009A                     	;# 
   523  009B                     	;# 
   524  009B                     	;# 
   525  009C                     	;# 
   526  009D                     	;# 
   527  009E                     	;# 
   528  010C                     	;# 
   529  010D                     	;# 
   530  010E                     	;# 
   531  0116                     	;# 
   532  0117                     	;# 
   533  011D                     	;# 
   534  018C                     	;# 
   535  018D                     	;# 
   536  018E                     	;# 
   537  0191                     	;# 
   538  0191                     	;# 
   539  0192                     	;# 
   540  0193                     	;# 
   541  0193                     	;# 
   542  0194                     	;# 
   543  0195                     	;# 
   544  0196                     	;# 
   545  0197                     	;# 
   546  0199                     	;# 
   547  019A                     	;# 
   548  019B                     	;# 
   549  019B                     	;# 
   550  019B                     	;# 
   551  019B                     	;# 
   552  019C                     	;# 
   553  019C                     	;# 
   554  019D                     	;# 
   555  019E                     	;# 
   556  019F                     	;# 
   557  020D                     	;# 
   558  0210                     	;# 
   559  0211                     	;# 
   560  0211                     	;# 
   561  0212                     	;# 
   562  0212                     	;# 
   563  0213                     	;# 
   564  0213                     	;# 
   565  0214                     	;# 
   566  0214                     	;# 
   567  0215                     	;# 
   568  0215                     	;# 
   569  0215                     	;# 
   570  0216                     	;# 
   571  0216                     	;# 
   572  0217                     	;# 
   573  0217                     	;# 
   574  0291                     	;# 
   575  0291                     	;# 
   576  0292                     	;# 
   577  0293                     	;# 
   578  0298                     	;# 
   579  0298                     	;# 
   580  0299                     	;# 
   581  029A                     	;# 
   582  0394                     	;# 
   583  0395                     	;# 
   584  0396                     	;# 
   585  0FE4                     	;# 
   586  0FE5                     	;# 
   587  0FE6                     	;# 
   588  0FE7                     	;# 
   589  0FE8                     	;# 
   590  0FE9                     	;# 
   591  0FEA                     	;# 
   592  0FEB                     	;# 
   593  0FED                     	;# 
   594  0FEE                     	;# 
   595  0FEF                     	;# 
   596  0000                     	;# 
   597  0001                     	;# 
   598  0002                     	;# 
   599  0003                     	;# 
   600  0004                     	;# 
   601  0005                     	;# 
   602  0006                     	;# 
   603  0007                     	;# 
   604  0008                     	;# 
   605  0009                     	;# 
   606  000A                     	;# 
   607  000B                     	;# 
   608  000C                     	;# 
   609  000D                     	;# 
   610  000E                     	;# 
   611  0010                     	;# 
   612  0011                     	;# 
   613  0012                     	;# 
   614  0015                     	;# 
   615  0016                     	;# 
   616  0016                     	;# 
   617  0017                     	;# 
   618  0018                     	;# 
   619  0019                     	;# 
   620  001A                     	;# 
   621  001B                     	;# 
   622  001C                     	;# 
   623  008C                     	;# 
   624  008D                     	;# 
   625  008E                     	;# 
   626  0090                     	;# 
   627  0091                     	;# 
   628  0092                     	;# 
   629  0095                     	;# 
   630  0096                     	;# 
   631  0097                     	;# 
   632  0099                     	;# 
   633  009A                     	;# 
   634  009B                     	;# 
   635  009B                     	;# 
   636  009C                     	;# 
   637  009D                     	;# 
   638  009E                     	;# 
   639  010C                     	;# 
   640  010D                     	;# 
   641  010E                     	;# 
   642  0116                     	;# 
   643  0117                     	;# 
   644  011D                     	;# 
   645  018C                     	;# 
   646  018D                     	;# 
   647  018E                     	;# 
   648  0191                     	;# 
   649  0191                     	;# 
   650  0192                     	;# 
   651  0193                     	;# 
   652  0193                     	;# 
   653  0194                     	;# 
   654  0195                     	;# 
   655  0196                     	;# 
   656  0197                     	;# 
   657  0199                     	;# 
   658  019A                     	;# 
   659  019B                     	;# 
   660  019B                     	;# 
   661  019B                     	;# 
   662  019B                     	;# 
   663  019C                     	;# 
   664  019C                     	;# 
   665  019D                     	;# 
   666  019E                     	;# 
   667  019F                     	;# 
   668  020D                     	;# 
   669  0210                     	;# 
   670  0211                     	;# 
   671  0211                     	;# 
   672  0212                     	;# 
   673  0212                     	;# 
   674  0213                     	;# 
   675  0213                     	;# 
   676  0214                     	;# 
   677  0214                     	;# 
   678  0215                     	;# 
   679  0215                     	;# 
   680  0215                     	;# 
   681  0216                     	;# 
   682  0216                     	;# 
   683  0217                     	;# 
   684  0217                     	;# 
   685  0291                     	;# 
   686  0291                     	;# 
   687  0292                     	;# 
   688  0293                     	;# 
   689  0298                     	;# 
   690  0298                     	;# 
   691  0299                     	;# 
   692  029A                     	;# 
   693  0394                     	;# 
   694  0395                     	;# 
   695  0396                     	;# 
   696  0FE4                     	;# 
   697  0FE5                     	;# 
   698  0FE6                     	;# 
   699  0FE7                     	;# 
   700  0FE8                     	;# 
   701  0FE9                     	;# 
   702  0FEA                     	;# 
   703  0FEB                     	;# 
   704  0FED                     	;# 
   705  0FEE                     	;# 
   706  0FEF                     	;# 
   707  0000                     	;# 
   708  0001                     	;# 
   709  0002                     	;# 
   710  0003                     	;# 
   711  0004                     	;# 
   712  0005                     	;# 
   713  0006                     	;# 
   714  0007                     	;# 
   715  0008                     	;# 
   716  0009                     	;# 
   717  000A                     	;# 
   718  000B                     	;# 
   719  000C                     	;# 
   720  000D                     	;# 
   721  000E                     	;# 
   722  0010                     	;# 
   723  0011                     	;# 
   724  0012                     	;# 
   725  0015                     	;# 
   726  0016                     	;# 
   727  0016                     	;# 
   728  0017                     	;# 
   729  0018                     	;# 
   730  0019                     	;# 
   731  001A                     	;# 
   732  001B                     	;# 
   733  001C                     	;# 
   734  008C                     	;# 
   735  008D                     	;# 
   736  008E                     	;# 
   737  0090                     	;# 
   738  0091                     	;# 
   739  0092                     	;# 
   740  0095                     	;# 
   741  0096                     	;# 
   742  0097                     	;# 
   743  0099                     	;# 
   744  009A                     	;# 
   745  009B                     	;# 
   746  009B                     	;# 
   747  009C                     	;# 
   748  009D                     	;# 
   749  009E                     	;# 
   750  010C                     	;# 
   751  010D                     	;# 
   752  010E                     	;# 
   753  0116                     	;# 
   754  0117                     	;# 
   755  011D                     	;# 
   756  018C                     	;# 
   757  018D                     	;# 
   758  018E                     	;# 
   759  0191                     	;# 
   760  0191                     	;# 
   761  0192                     	;# 
   762  0193                     	;# 
   763  0193                     	;# 
   764  0194                     	;# 
   765  0195                     	;# 
   766  0196                     	;# 
   767  0197                     	;# 
   768  0199                     	;# 
   769  019A                     	;# 
   770  019B                     	;# 
   771  019B                     	;# 
   772  019B                     	;# 
   773  019B                     	;# 
   774  019C                     	;# 
   775  019C                     	;# 
   776  019D                     	;# 
   777  019E                     	;# 
   778  019F                     	;# 
   779  020D                     	;# 
   780  0210                     	;# 
   781  0211                     	;# 
   782  0211                     	;# 
   783  0212                     	;# 
   784  0212                     	;# 
   785  0213                     	;# 
   786  0213                     	;# 
   787  0214                     	;# 
   788  0214                     	;# 
   789  0215                     	;# 
   790  0215                     	;# 
   791  0215                     	;# 
   792  0216                     	;# 
   793  0216                     	;# 
   794  0217                     	;# 
   795  0217                     	;# 
   796  0291                     	;# 
   797  0291                     	;# 
   798  0292                     	;# 
   799  0293                     	;# 
   800  0298                     	;# 
   801  0298                     	;# 
   802  0299                     	;# 
   803  029A                     	;# 
   804  0394                     	;# 
   805  0395                     	;# 
   806  0396                     	;# 
   807  0FE4                     	;# 
   808  0FE5                     	;# 
   809  0FE6                     	;# 
   810  0FE7                     	;# 
   811  0FE8                     	;# 
   812  0FE9                     	;# 
   813  0FEA                     	;# 
   814  0FEB                     	;# 
   815  0FED                     	;# 
   816  0FEE                     	;# 
   817  0FEF                     	;# 
   818  0000                     	;# 
   819  0001                     	;# 
   820  0002                     	;# 
   821  0003                     	;# 
   822  0004                     	;# 
   823  0005                     	;# 
   824  0006                     	;# 
   825  0007                     	;# 
   826  0008                     	;# 
   827  0009                     	;# 
   828  000A                     	;# 
   829  000B                     	;# 
   830  000C                     	;# 
   831  000D                     	;# 
   832  000E                     	;# 
   833  0010                     	;# 
   834  0011                     	;# 
   835  0012                     	;# 
   836  0015                     	;# 
   837  0016                     	;# 
   838  0016                     	;# 
   839  0017                     	;# 
   840  0018                     	;# 
   841  0019                     	;# 
   842  001A                     	;# 
   843  001B                     	;# 
   844  001C                     	;# 
   845  008C                     	;# 
   846  008D                     	;# 
   847  008E                     	;# 
   848  0090                     	;# 
   849  0091                     	;# 
   850  0092                     	;# 
   851  0095                     	;# 
   852  0096                     	;# 
   853  0097                     	;# 
   854  0099                     	;# 
   855  009A                     	;# 
   856  009B                     	;# 
   857  009B                     	;# 
   858  009C                     	;# 
   859  009D                     	;# 
   860  009E                     	;# 
   861  010C                     	;# 
   862  010D                     	;# 
   863  010E                     	;# 
   864  0116                     	;# 
   865  0117                     	;# 
   866  011D                     	;# 
   867  018C                     	;# 
   868  018D                     	;# 
   869  018E                     	;# 
   870  0191                     	;# 
   871  0191                     	;# 
   872  0192                     	;# 
   873  0193                     	;# 
   874  0193                     	;# 
   875  0194                     	;# 
   876  0195                     	;# 
   877  0196                     	;# 
   878  0197                     	;# 
   879  0199                     	;# 
   880  019A                     	;# 
   881  019B                     	;# 
   882  019B                     	;# 
   883  019B                     	;# 
   884  019B                     	;# 
   885  019C                     	;# 
   886  019C                     	;# 
   887  019D                     	;# 
   888  019E                     	;# 
   889  019F                     	;# 
   890  020D                     	;# 
   891  0210                     	;# 
   892  0211                     	;# 
   893  0211                     	;# 
   894  0212                     	;# 
   895  0212                     	;# 
   896  0213                     	;# 
   897  0213                     	;# 
   898  0214                     	;# 
   899  0214                     	;# 
   900  0215                     	;# 
   901  0215                     	;# 
   902  0215                     	;# 
   903  0216                     	;# 
   904  0216                     	;# 
   905  0217                     	;# 
   906  0217                     	;# 
   907  0291                     	;# 
   908  0291                     	;# 
   909  0292                     	;# 
   910  0293                     	;# 
   911  0298                     	;# 
   912  0298                     	;# 
   913  0299                     	;# 
   914  029A                     	;# 
   915  0394                     	;# 
   916  0395                     	;# 
   917  0396                     	;# 
   918  0FE4                     	;# 
   919  0FE5                     	;# 
   920  0FE6                     	;# 
   921  0FE7                     	;# 
   922  0FE8                     	;# 
   923  0FE9                     	;# 
   924  0FEA                     	;# 
   925  0FEB                     	;# 
   926  0FED                     	;# 
   927  0FEE                     	;# 
   928  0FEF                     	;# 
   929  0000                     	;# 
   930  0001                     	;# 
   931  0002                     	;# 
   932  0003                     	;# 
   933  0004                     	;# 
   934  0005                     	;# 
   935  0006                     	;# 
   936  0007                     	;# 
   937  0008                     	;# 
   938  0009                     	;# 
   939  000A                     	;# 
   940  000B                     	;# 
   941  000C                     	;# 
   942  000D                     	;# 
   943  000E                     	;# 
   944  0010                     	;# 
   945  0011                     	;# 
   946  0012                     	;# 
   947  0015                     	;# 
   948  0016                     	;# 
   949  0016                     	;# 
   950  0017                     	;# 
   951  0018                     	;# 
   952  0019                     	;# 
   953  001A                     	;# 
   954  001B                     	;# 
   955  001C                     	;# 
   956  008C                     	;# 
   957  008D                     	;# 
   958  008E                     	;# 
   959  0090                     	;# 
   960  0091                     	;# 
   961  0092                     	;# 
   962  0095                     	;# 
   963  0096                     	;# 
   964  0097                     	;# 
   965  0099                     	;# 
   966  009A                     	;# 
   967  009B                     	;# 
   968  009B                     	;# 
   969  009C                     	;# 
   970  009D                     	;# 
   971  009E                     	;# 
   972  010C                     	;# 
   973  010D                     	;# 
   974  010E                     	;# 
   975  0116                     	;# 
   976  0117                     	;# 
   977  011D                     	;# 
   978  018C                     	;# 
   979  018D                     	;# 
   980  018E                     	;# 
   981  0191                     	;# 
   982  0191                     	;# 
   983  0192                     	;# 
   984  0193                     	;# 
   985  0193                     	;# 
   986  0194                     	;# 
   987  0195                     	;# 
   988  0196                     	;# 
   989  0197                     	;# 
   990  0199                     	;# 
   991  019A                     	;# 
   992  019B                     	;# 
   993  019B                     	;# 
   994  019B                     	;# 
   995  019B                     	;# 
   996  019C                     	;# 
   997  019C                     	;# 
   998  019D                     	;# 
   999  019E                     	;# 
  1000  019F                     	;# 
  1001  020D                     	;# 
  1002  0210                     	;# 
  1003  0211                     	;# 
  1004  0211                     	;# 
  1005  0212                     	;# 
  1006  0212                     	;# 
  1007  0213                     	;# 
  1008  0213                     	;# 
  1009  0214                     	;# 
  1010  0214                     	;# 
  1011  0215                     	;# 
  1012  0215                     	;# 
  1013  0215                     	;# 
  1014  0216                     	;# 
  1015  0216                     	;# 
  1016  0217                     	;# 
  1017  0217                     	;# 
  1018  0291                     	;# 
  1019  0291                     	;# 
  1020  0292                     	;# 
  1021  0293                     	;# 
  1022  0298                     	;# 
  1023  0298                     	;# 
  1024  0299                     	;# 
  1025  029A                     	;# 
  1026  0394                     	;# 
  1027  0395                     	;# 
  1028  0396                     	;# 
  1029  0FE4                     	;# 
  1030  0FE5                     	;# 
  1031  0FE6                     	;# 
  1032  0FE7                     	;# 
  1033  0FE8                     	;# 
  1034  0FE9                     	;# 
  1035  0FEA                     	;# 
  1036  0FEB                     	;# 
  1037  0FED                     	;# 
  1038  0FEE                     	;# 
  1039  0FEF                     	;# 
  1040  0000                     	;# 
  1041  0001                     	;# 
  1042  0002                     	;# 
  1043  0003                     	;# 
  1044  0004                     	;# 
  1045  0005                     	;# 
  1046  0006                     	;# 
  1047  0007                     	;# 
  1048  0008                     	;# 
  1049  0009                     	;# 
  1050  000A                     	;# 
  1051  000B                     	;# 
  1052  000C                     	;# 
  1053  000D                     	;# 
  1054  000E                     	;# 
  1055  0010                     	;# 
  1056  0011                     	;# 
  1057  0012                     	;# 
  1058  0015                     	;# 
  1059  0016                     	;# 
  1060  0016                     	;# 
  1061  0017                     	;# 
  1062  0018                     	;# 
  1063  0019                     	;# 
  1064  001A                     	;# 
  1065  001B                     	;# 
  1066  001C                     	;# 
  1067  008C                     	;# 
  1068  008D                     	;# 
  1069  008E                     	;# 
  1070  0090                     	;# 
  1071  0091                     	;# 
  1072  0092                     	;# 
  1073  0095                     	;# 
  1074  0096                     	;# 
  1075  0097                     	;# 
  1076  0099                     	;# 
  1077  009A                     	;# 
  1078  009B                     	;# 
  1079  009B                     	;# 
  1080  009C                     	;# 
  1081  009D                     	;# 
  1082  009E                     	;# 
  1083  010C                     	;# 
  1084  010D                     	;# 
  1085  010E                     	;# 
  1086  0116                     	;# 
  1087  0117                     	;# 
  1088  011D                     	;# 
  1089  018C                     	;# 
  1090  018D                     	;# 
  1091  018E                     	;# 
  1092  0191                     	;# 
  1093  0191                     	;# 
  1094  0192                     	;# 
  1095  0193                     	;# 
  1096  0193                     	;# 
  1097  0194                     	;# 
  1098  0195                     	;# 
  1099  0196                     	;# 
  1100  0197                     	;# 
  1101  0199                     	;# 
  1102  019A                     	;# 
  1103  019B                     	;# 
  1104  019B                     	;# 
  1105  019B                     	;# 
  1106  019B                     	;# 
  1107  019C                     	;# 
  1108  019C                     	;# 
  1109  019D                     	;# 
  1110  019E                     	;# 
  1111  019F                     	;# 
  1112  020D                     	;# 
  1113  0210                     	;# 
  1114  0211                     	;# 
  1115  0211                     	;# 
  1116  0212                     	;# 
  1117  0212                     	;# 
  1118  0213                     	;# 
  1119  0213                     	;# 
  1120  0214                     	;# 
  1121  0214                     	;# 
  1122  0215                     	;# 
  1123  0215                     	;# 
  1124  0215                     	;# 
  1125  0216                     	;# 
  1126  0216                     	;# 
  1127  0217                     	;# 
  1128  0217                     	;# 
  1129  0291                     	;# 
  1130  0291                     	;# 
  1131  0292                     	;# 
  1132  0293                     	;# 
  1133  0298                     	;# 
  1134  0298                     	;# 
  1135  0299                     	;# 
  1136  029A                     	;# 
  1137  0394                     	;# 
  1138  0395                     	;# 
  1139  0396                     	;# 
  1140  0FE4                     	;# 
  1141  0FE5                     	;# 
  1142  0FE6                     	;# 
  1143  0FE7                     	;# 
  1144  0FE8                     	;# 
  1145  0FE9                     	;# 
  1146  0FEA                     	;# 
  1147  0FEB                     	;# 
  1148  0FED                     	;# 
  1149  0FEE                     	;# 
  1150  0FEF                     	;# 
  1151  0000                     	;# 
  1152  0001                     	;# 
  1153  0002                     	;# 
  1154  0003                     	;# 
  1155  0004                     	;# 
  1156  0005                     	;# 
  1157  0006                     	;# 
  1158  0007                     	;# 
  1159  0008                     	;# 
  1160  0009                     	;# 
  1161  000A                     	;# 
  1162  000B                     	;# 
  1163  000C                     	;# 
  1164  000D                     	;# 
  1165  000E                     	;# 
  1166  0010                     	;# 
  1167  0011                     	;# 
  1168  0012                     	;# 
  1169  0015                     	;# 
  1170  0016                     	;# 
  1171  0016                     	;# 
  1172  0017                     	;# 
  1173  0018                     	;# 
  1174  0019                     	;# 
  1175  001A                     	;# 
  1176  001B                     	;# 
  1177  001C                     	;# 
  1178  008C                     	;# 
  1179  008D                     	;# 
  1180  008E                     	;# 
  1181  0090                     	;# 
  1182  0091                     	;# 
  1183  0092                     	;# 
  1184  0095                     	;# 
  1185  0096                     	;# 
  1186  0097                     	;# 
  1187  0099                     	;# 
  1188  009A                     	;# 
  1189  009B                     	;# 
  1190  009B                     	;# 
  1191  009C                     	;# 
  1192  009D                     	;# 
  1193  009E                     	;# 
  1194  010C                     	;# 
  1195  010D                     	;# 
  1196  010E                     	;# 
  1197  0116                     	;# 
  1198  0117                     	;# 
  1199  011D                     	;# 
  1200  018C                     	;# 
  1201  018D                     	;# 
  1202  018E                     	;# 
  1203  0191                     	;# 
  1204  0191                     	;# 
  1205  0192                     	;# 
  1206  0193                     	;# 
  1207  0193                     	;# 
  1208  0194                     	;# 
  1209  0195                     	;# 
  1210  0196                     	;# 
  1211  0197                     	;# 
  1212  0199                     	;# 
  1213  019A                     	;# 
  1214  019B                     	;# 
  1215  019B                     	;# 
  1216  019B                     	;# 
  1217  019B                     	;# 
  1218  019C                     	;# 
  1219  019C                     	;# 
  1220  019D                     	;# 
  1221  019E                     	;# 
  1222  019F                     	;# 
  1223  020D                     	;# 
  1224  0210                     	;# 
  1225  0211                     	;# 
  1226  0211                     	;# 
  1227  0212                     	;# 
  1228  0212                     	;# 
  1229  0213                     	;# 
  1230  0213                     	;# 
  1231  0214                     	;# 
  1232  0214                     	;# 
  1233  0215                     	;# 
  1234  0215                     	;# 
  1235  0215                     	;# 
  1236  0216                     	;# 
  1237  0216                     	;# 
  1238  0217                     	;# 
  1239  0217                     	;# 
  1240  0291                     	;# 
  1241  0291                     	;# 
  1242  0292                     	;# 
  1243  0293                     	;# 
  1244  0298                     	;# 
  1245  0298                     	;# 
  1246  0299                     	;# 
  1247  029A                     	;# 
  1248  0394                     	;# 
  1249  0395                     	;# 
  1250  0396                     	;# 
  1251  0FE4                     	;# 
  1252  0FE5                     	;# 
  1253  0FE6                     	;# 
  1254  0FE7                     	;# 
  1255  0FE8                     	;# 
  1256  0FE9                     	;# 
  1257  0FEA                     	;# 
  1258  0FEB                     	;# 
  1259  0FED                     	;# 
  1260  0FEE                     	;# 
  1261  0FEF                     	;# 
  1262  0000                     	;# 
  1263  0001                     	;# 
  1264  0002                     	;# 
  1265  0003                     	;# 
  1266  0004                     	;# 
  1267  0005                     	;# 
  1268  0006                     	;# 
  1269  0007                     	;# 
  1270  0008                     	;# 
  1271  0009                     	;# 
  1272  000A                     	;# 
  1273  000B                     	;# 
  1274  000C                     	;# 
  1275  000D                     	;# 
  1276  000E                     	;# 
  1277  0010                     	;# 
  1278  0011                     	;# 
  1279  0012                     	;# 
  1280  0015                     	;# 
  1281  0016                     	;# 
  1282  0016                     	;# 
  1283  0017                     	;# 
  1284  0018                     	;# 
  1285  0019                     	;# 
  1286  001A                     	;# 
  1287  001B                     	;# 
  1288  001C                     	;# 
  1289  008C                     	;# 
  1290  008D                     	;# 
  1291  008E                     	;# 
  1292  0090                     	;# 
  1293  0091                     	;# 
  1294  0092                     	;# 
  1295  0095                     	;# 
  1296  0096                     	;# 
  1297  0097                     	;# 
  1298  0099                     	;# 
  1299  009A                     	;# 
  1300  009B                     	;# 
  1301  009B                     	;# 
  1302  009C                     	;# 
  1303  009D                     	;# 
  1304  009E                     	;# 
  1305  010C                     	;# 
  1306  010D                     	;# 
  1307  010E                     	;# 
  1308  0116                     	;# 
  1309  0117                     	;# 
  1310  011D                     	;# 
  1311  018C                     	;# 
  1312  018D                     	;# 
  1313  018E                     	;# 
  1314  0191                     	;# 
  1315  0191                     	;# 
  1316  0192                     	;# 
  1317  0193                     	;# 
  1318  0193                     	;# 
  1319  0194                     	;# 
  1320  0195                     	;# 
  1321  0196                     	;# 
  1322  0197                     	;# 
  1323  0199                     	;# 
  1324  019A                     	;# 
  1325  019B                     	;# 
  1326  019B                     	;# 
  1327  019B                     	;# 
  1328  019B                     	;# 
  1329  019C                     	;# 
  1330  019C                     	;# 
  1331  019D                     	;# 
  1332  019E                     	;# 
  1333  019F                     	;# 
  1334  020D                     	;# 
  1335  0210                     	;# 
  1336  0211                     	;# 
  1337  0211                     	;# 
  1338  0212                     	;# 
  1339  0212                     	;# 
  1340  0213                     	;# 
  1341  0213                     	;# 
  1342  0214                     	;# 
  1343  0214                     	;# 
  1344  0215                     	;# 
  1345  0215                     	;# 
  1346  0215                     	;# 
  1347  0216                     	;# 
  1348  0216                     	;# 
  1349  0217                     	;# 
  1350  0217                     	;# 
  1351  0291                     	;# 
  1352  0291                     	;# 
  1353  0292                     	;# 
  1354  0293                     	;# 
  1355  0298                     	;# 
  1356  0298                     	;# 
  1357  0299                     	;# 
  1358  029A                     	;# 
  1359  0394                     	;# 
  1360  0395                     	;# 
  1361  0396                     	;# 
  1362  0FE4                     	;# 
  1363  0FE5                     	;# 
  1364  0FE6                     	;# 
  1365  0FE7                     	;# 
  1366  0FE8                     	;# 
  1367  0FE9                     	;# 
  1368  0FEA                     	;# 
  1369  0FEB                     	;# 
  1370  0FED                     	;# 
  1371  0FEE                     	;# 
  1372  0FEF                     	;# 
  1373  0000                     	;# 
  1374  0001                     	;# 
  1375  0002                     	;# 
  1376  0003                     	;# 
  1377  0004                     	;# 
  1378  0005                     	;# 
  1379  0006                     	;# 
  1380  0007                     	;# 
  1381  0008                     	;# 
  1382  0009                     	;# 
  1383  000A                     	;# 
  1384  000B                     	;# 
  1385  000C                     	;# 
  1386  000D                     	;# 
  1387  000E                     	;# 
  1388  0010                     	;# 
  1389  0011                     	;# 
  1390  0012                     	;# 
  1391  0015                     	;# 
  1392  0016                     	;# 
  1393  0016                     	;# 
  1394  0017                     	;# 
  1395  0018                     	;# 
  1396  0019                     	;# 
  1397  001A                     	;# 
  1398  001B                     	;# 
  1399  001C                     	;# 
  1400  008C                     	;# 
  1401  008D                     	;# 
  1402  008E                     	;# 
  1403  0090                     	;# 
  1404  0091                     	;# 
  1405  0092                     	;# 
  1406  0095                     	;# 
  1407  0096                     	;# 
  1408  0097                     	;# 
  1409  0099                     	;# 
  1410  009A                     	;# 
  1411  009B                     	;# 
  1412  009B                     	;# 
  1413  009C                     	;# 
  1414  009D                     	;# 
  1415  009E                     	;# 
  1416  010C                     	;# 
  1417  010D                     	;# 
  1418  010E                     	;# 
  1419  0116                     	;# 
  1420  0117                     	;# 
  1421  011D                     	;# 
  1422  018C                     	;# 
  1423  018D                     	;# 
  1424  018E                     	;# 
  1425  0191                     	;# 
  1426  0191                     	;# 
  1427  0192                     	;# 
  1428  0193                     	;# 
  1429  0193                     	;# 
  1430  0194                     	;# 
  1431  0195                     	;# 
  1432  0196                     	;# 
  1433  0197                     	;# 
  1434  0199                     	;# 
  1435  019A                     	;# 
  1436  019B                     	;# 
  1437  019B                     	;# 
  1438  019B                     	;# 
  1439  019B                     	;# 
  1440  019C                     	;# 
  1441  019C                     	;# 
  1442  019D                     	;# 
  1443  019E                     	;# 
  1444  019F                     	;# 
  1445  020D                     	;# 
  1446  0210                     	;# 
  1447  0211                     	;# 
  1448  0211                     	;# 
  1449  0212                     	;# 
  1450  0212                     	;# 
  1451  0213                     	;# 
  1452  0213                     	;# 
  1453  0214                     	;# 
  1454  0214                     	;# 
  1455  0215                     	;# 
  1456  0215                     	;# 
  1457  0215                     	;# 
  1458  0216                     	;# 
  1459  0216                     	;# 
  1460  0217                     	;# 
  1461  0217                     	;# 
  1462  0291                     	;# 
  1463  0291                     	;# 
  1464  0292                     	;# 
  1465  0293                     	;# 
  1466  0298                     	;# 
  1467  0298                     	;# 
  1468  0299                     	;# 
  1469  029A                     	;# 
  1470  0394                     	;# 
  1471  0395                     	;# 
  1472  0396                     	;# 
  1473  0FE4                     	;# 
  1474  0FE5                     	;# 
  1475  0FE6                     	;# 
  1476  0FE7                     	;# 
  1477  0FE8                     	;# 
  1478  0FE9                     	;# 
  1479  0FEA                     	;# 
  1480  0FEB                     	;# 
  1481  0FED                     	;# 
  1482  0FEE                     	;# 
  1483  0FEF                     	;# 
  1484  0000                     	;# 
  1485  0001                     	;# 
  1486  0002                     	;# 
  1487  0003                     	;# 
  1488  0004                     	;# 
  1489  0005                     	;# 
  1490  0006                     	;# 
  1491  0007                     	;# 
  1492  0008                     	;# 
  1493  0009                     	;# 
  1494  000A                     	;# 
  1495  000B                     	;# 
  1496  000C                     	;# 
  1497  000D                     	;# 
  1498  000E                     	;# 
  1499  0010                     	;# 
  1500  0011                     	;# 
  1501  0012                     	;# 
  1502  0015                     	;# 
  1503  0016                     	;# 
  1504  0016                     	;# 
  1505  0017                     	;# 
  1506  0018                     	;# 
  1507  0019                     	;# 
  1508  001A                     	;# 
  1509  001B                     	;# 
  1510  001C                     	;# 
  1511  008C                     	;# 
  1512  008D                     	;# 
  1513  008E                     	;# 
  1514  0090                     	;# 
  1515  0091                     	;# 
  1516  0092                     	;# 
  1517  0095                     	;# 
  1518  0096                     	;# 
  1519  0097                     	;# 
  1520  0099                     	;# 
  1521  009A                     	;# 
  1522  009B                     	;# 
  1523  009B                     	;# 
  1524  009C                     	;# 
  1525  009D                     	;# 
  1526  009E                     	;# 
  1527  010C                     	;# 
  1528  010D                     	;# 
  1529  010E                     	;# 
  1530  0116                     	;# 
  1531  0117                     	;# 
  1532  011D                     	;# 
  1533  018C                     	;# 
  1534  018D                     	;# 
  1535  018E                     	;# 
  1536  0191                     	;# 
  1537  0191                     	;# 
  1538  0192                     	;# 
  1539  0193                     	;# 
  1540  0193                     	;# 
  1541  0194                     	;# 
  1542  0195                     	;# 
  1543  0196                     	;# 
  1544  0197                     	;# 
  1545  0199                     	;# 
  1546  019A                     	;# 
  1547  019B                     	;# 
  1548  019B                     	;# 
  1549  019B                     	;# 
  1550  019B                     	;# 
  1551  019C                     	;# 
  1552  019C                     	;# 
  1553  019D                     	;# 
  1554  019E                     	;# 
  1555  019F                     	;# 
  1556  020D                     	;# 
  1557  0210                     	;# 
  1558  0211                     	;# 
  1559  0211                     	;# 
  1560  0212                     	;# 
  1561  0212                     	;# 
  1562  0213                     	;# 
  1563  0213                     	;# 
  1564  0214                     	;# 
  1565  0214                     	;# 
  1566  0215                     	;# 
  1567  0215                     	;# 
  1568  0215                     	;# 
  1569  0216                     	;# 
  1570  0216                     	;# 
  1571  0217                     	;# 
  1572  0217                     	;# 
  1573  0291                     	;# 
  1574  0291                     	;# 
  1575  0292                     	;# 
  1576  0293                     	;# 
  1577  0298                     	;# 
  1578  0298                     	;# 
  1579  0299                     	;# 
  1580  029A                     	;# 
  1581  0394                     	;# 
  1582  0395                     	;# 
  1583  0396                     	;# 
  1584  0FE4                     	;# 
  1585  0FE5                     	;# 
  1586  0FE6                     	;# 
  1587  0FE7                     	;# 
  1588  0FE8                     	;# 
  1589  0FE9                     	;# 
  1590  0FEA                     	;# 
  1591  0FEB                     	;# 
  1592  0FED                     	;# 
  1593  0FEE                     	;# 
  1594  0FEF                     	;# 
  1595  0000                     	;# 
  1596  0001                     	;# 
  1597  0002                     	;# 
  1598  0003                     	;# 
  1599  0004                     	;# 
  1600  0005                     	;# 
  1601  0006                     	;# 
  1602  0007                     	;# 
  1603  0008                     	;# 
  1604  0009                     	;# 
  1605  000A                     	;# 
  1606  000B                     	;# 
  1607  000C                     	;# 
  1608  000D                     	;# 
  1609  000E                     	;# 
  1610  0010                     	;# 
  1611  0011                     	;# 
  1612  0012                     	;# 
  1613  0015                     	;# 
  1614  0016                     	;# 
  1615  0016                     	;# 
  1616  0017                     	;# 
  1617  0018                     	;# 
  1618  0019                     	;# 
  1619  001A                     	;# 
  1620  001B                     	;# 
  1621  001C                     	;# 
  1622  008C                     	;# 
  1623  008D                     	;# 
  1624  008E                     	;# 
  1625  0090                     	;# 
  1626  0091                     	;# 
  1627  0092                     	;# 
  1628  0095                     	;# 
  1629  0096                     	;# 
  1630  0097                     	;# 
  1631  0099                     	;# 
  1632  009A                     	;# 
  1633  009B                     	;# 
  1634  009B                     	;# 
  1635  009C                     	;# 
  1636  009D                     	;# 
  1637  009E                     	;# 
  1638  010C                     	;# 
  1639  010D                     	;# 
  1640  010E                     	;# 
  1641  0116                     	;# 
  1642  0117                     	;# 
  1643  011D                     	;# 
  1644  018C                     	;# 
  1645  018D                     	;# 
  1646  018E                     	;# 
  1647  0191                     	;# 
  1648  0191                     	;# 
  1649  0192                     	;# 
  1650  0193                     	;# 
  1651  0193                     	;# 
  1652  0194                     	;# 
  1653  0195                     	;# 
  1654  0196                     	;# 
  1655  0197                     	;# 
  1656  0199                     	;# 
  1657  019A                     	;# 
  1658  019B                     	;# 
  1659  019B                     	;# 
  1660  019B                     	;# 
  1661  019B                     	;# 
  1662  019C                     	;# 
  1663  019C                     	;# 
  1664  019D                     	;# 
  1665  019E                     	;# 
  1666  019F                     	;# 
  1667  020D                     	;# 
  1668  0210                     	;# 
  1669  0211                     	;# 
  1670  0211                     	;# 
  1671  0212                     	;# 
  1672  0212                     	;# 
  1673  0213                     	;# 
  1674  0213                     	;# 
  1675  0214                     	;# 
  1676  0214                     	;# 
  1677  0215                     	;# 
  1678  0215                     	;# 
  1679  0215                     	;# 
  1680  0216                     	;# 
  1681  0216                     	;# 
  1682  0217                     	;# 
  1683  0217                     	;# 
  1684  0291                     	;# 
  1685  0291                     	;# 
  1686  0292                     	;# 
  1687  0293                     	;# 
  1688  0298                     	;# 
  1689  0298                     	;# 
  1690  0299                     	;# 
  1691  029A                     	;# 
  1692  0394                     	;# 
  1693  0395                     	;# 
  1694  0396                     	;# 
  1695  0FE4                     	;# 
  1696  0FE5                     	;# 
  1697  0FE6                     	;# 
  1698  0FE7                     	;# 
  1699  0FE8                     	;# 
  1700  0FE9                     	;# 
  1701  0FEA                     	;# 
  1702  0FEB                     	;# 
  1703  0FED                     	;# 
  1704  0FEE                     	;# 
  1705  0FEF                     	;# 
  1706  0000                     	;# 
  1707  0001                     	;# 
  1708  0002                     	;# 
  1709  0003                     	;# 
  1710  0004                     	;# 
  1711  0005                     	;# 
  1712  0006                     	;# 
  1713  0007                     	;# 
  1714  0008                     	;# 
  1715  0009                     	;# 
  1716  000A                     	;# 
  1717  000B                     	;# 
  1718  000C                     	;# 
  1719  000D                     	;# 
  1720  000E                     	;# 
  1721  0010                     	;# 
  1722  0011                     	;# 
  1723  0012                     	;# 
  1724  0015                     	;# 
  1725  0016                     	;# 
  1726  0016                     	;# 
  1727  0017                     	;# 
  1728  0018                     	;# 
  1729  0019                     	;# 
  1730  001A                     	;# 
  1731  001B                     	;# 
  1732  001C                     	;# 
  1733  008C                     	;# 
  1734  008D                     	;# 
  1735  008E                     	;# 
  1736  0090                     	;# 
  1737  0091                     	;# 
  1738  0092                     	;# 
  1739  0095                     	;# 
  1740  0096                     	;# 
  1741  0097                     	;# 
  1742  0099                     	;# 
  1743  009A                     	;# 
  1744  009B                     	;# 
  1745  009B                     	;# 
  1746  009C                     	;# 
  1747  009D                     	;# 
  1748  009E                     	;# 
  1749  010C                     	;# 
  1750  010D                     	;# 
  1751  010E                     	;# 
  1752  0116                     	;# 
  1753  0117                     	;# 
  1754  011D                     	;# 
  1755  018C                     	;# 
  1756  018D                     	;# 
  1757  018E                     	;# 
  1758  0191                     	;# 
  1759  0191                     	;# 
  1760  0192                     	;# 
  1761  0193                     	;# 
  1762  0193                     	;# 
  1763  0194                     	;# 
  1764  0195                     	;# 
  1765  0196                     	;# 
  1766  0197                     	;# 
  1767  0199                     	;# 
  1768  019A                     	;# 
  1769  019B                     	;# 
  1770  019B                     	;# 
  1771  019B                     	;# 
  1772  019B                     	;# 
  1773  019C                     	;# 
  1774  019C                     	;# 
  1775  019D                     	;# 
  1776  019E                     	;# 
  1777  019F                     	;# 
  1778  020D                     	;# 
  1779  0210                     	;# 
  1780  0211                     	;# 
  1781  0211                     	;# 
  1782  0212                     	;# 
  1783  0212                     	;# 
  1784  0213                     	;# 
  1785  0213                     	;# 
  1786  0214                     	;# 
  1787  0214                     	;# 
  1788  0215                     	;# 
  1789  0215                     	;# 
  1790  0215                     	;# 
  1791  0216                     	;# 
  1792  0216                     	;# 
  1793  0217                     	;# 
  1794  0217                     	;# 
  1795  0291                     	;# 
  1796  0291                     	;# 
  1797  0292                     	;# 
  1798  0293                     	;# 
  1799  0298                     	;# 
  1800  0298                     	;# 
  1801  0299                     	;# 
  1802  029A                     	;# 
  1803  0394                     	;# 
  1804  0395                     	;# 
  1805  0396                     	;# 
  1806  0FE4                     	;# 
  1807  0FE5                     	;# 
  1808  0FE6                     	;# 
  1809  0FE7                     	;# 
  1810  0FE8                     	;# 
  1811  0FE9                     	;# 
  1812  0FEA                     	;# 
  1813  0FEB                     	;# 
  1814  0FED                     	;# 
  1815  0FEE                     	;# 
  1816  0FEF                     	;# 
  1817  0000                     	;# 
  1818  0001                     	;# 
  1819  0002                     	;# 
  1820  0003                     	;# 
  1821  0004                     	;# 
  1822  0005                     	;# 
  1823  0006                     	;# 
  1824  0007                     	;# 
  1825  0008                     	;# 
  1826  0009                     	;# 
  1827  000A                     	;# 
  1828  000B                     	;# 
  1829  000C                     	;# 
  1830  000D                     	;# 
  1831  000E                     	;# 
  1832  0010                     	;# 
  1833  0011                     	;# 
  1834  0012                     	;# 
  1835  0015                     	;# 
  1836  0016                     	;# 
  1837  0016                     	;# 
  1838  0017                     	;# 
  1839  0018                     	;# 
  1840  0019                     	;# 
  1841  001A                     	;# 
  1842  001B                     	;# 
  1843  001C                     	;# 
  1844  008C                     	;# 
  1845  008D                     	;# 
  1846  008E                     	;# 
  1847  0090                     	;# 
  1848  0091                     	;# 
  1849  0092                     	;# 
  1850  0095                     	;# 
  1851  0096                     	;# 
  1852  0097                     	;# 
  1853  0099                     	;# 
  1854  009A                     	;# 
  1855  009B                     	;# 
  1856  009B                     	;# 
  1857  009C                     	;# 
  1858  009D                     	;# 
  1859  009E                     	;# 
  1860  010C                     	;# 
  1861  010D                     	;# 
  1862  010E                     	;# 
  1863  0116                     	;# 
  1864  0117                     	;# 
  1865  011D                     	;# 
  1866  018C                     	;# 
  1867  018D                     	;# 
  1868  018E                     	;# 
  1869  0191                     	;# 
  1870  0191                     	;# 
  1871  0192                     	;# 
  1872  0193                     	;# 
  1873  0193                     	;# 
  1874  0194                     	;# 
  1875  0195                     	;# 
  1876  0196                     	;# 
  1877  0197                     	;# 
  1878  0199                     	;# 
  1879  019A                     	;# 
  1880  019B                     	;# 
  1881  019B                     	;# 
  1882  019B                     	;# 
  1883  019B                     	;# 
  1884  019C                     	;# 
  1885  019C                     	;# 
  1886  019D                     	;# 
  1887  019E                     	;# 
  1888  019F                     	;# 
  1889  020D                     	;# 
  1890  0210                     	;# 
  1891  0211                     	;# 
  1892  0211                     	;# 
  1893  0212                     	;# 
  1894  0212                     	;# 
  1895  0213                     	;# 
  1896  0213                     	;# 
  1897  0214                     	;# 
  1898  0214                     	;# 
  1899  0215                     	;# 
  1900  0215                     	;# 
  1901  0215                     	;# 
  1902  0216                     	;# 
  1903  0216                     	;# 
  1904  0217                     	;# 
  1905  0217                     	;# 
  1906  0291                     	;# 
  1907  0291                     	;# 
  1908  0292                     	;# 
  1909  0293                     	;# 
  1910  0298                     	;# 
  1911  0298                     	;# 
  1912  0299                     	;# 
  1913  029A                     	;# 
  1914  0394                     	;# 
  1915  0395                     	;# 
  1916  0396                     	;# 
  1917  0FE4                     	;# 
  1918  0FE5                     	;# 
  1919  0FE6                     	;# 
  1920  0FE7                     	;# 
  1921  0FE8                     	;# 
  1922  0FE9                     	;# 
  1923  0FEA                     	;# 
  1924  0FEB                     	;# 
  1925  0FED                     	;# 
  1926  0FEE                     	;# 
  1927  0FEF                     	;# 
  1928  0000                     	;# 
  1929  0001                     	;# 
  1930  0002                     	;# 
  1931  0003                     	;# 
  1932  0004                     	;# 
  1933  0005                     	;# 
  1934  0006                     	;# 
  1935  0007                     	;# 
  1936  0008                     	;# 
  1937  0009                     	;# 
  1938  000A                     	;# 
  1939  000B                     	;# 
  1940  000C                     	;# 
  1941  000D                     	;# 
  1942  000E                     	;# 
  1943  0010                     	;# 
  1944  0011                     	;# 
  1945  0012                     	;# 
  1946  0015                     	;# 
  1947  0016                     	;# 
  1948  0016                     	;# 
  1949  0017                     	;# 
  1950  0018                     	;# 
  1951  0019                     	;# 
  1952  001A                     	;# 
  1953  001B                     	;# 
  1954  001C                     	;# 
  1955  008C                     	;# 
  1956  008D                     	;# 
  1957  008E                     	;# 
  1958  0090                     	;# 
  1959  0091                     	;# 
  1960  0092                     	;# 
  1961  0095                     	;# 
  1962  0096                     	;# 
  1963  0097                     	;# 
  1964  0099                     	;# 
  1965  009A                     	;# 
  1966  009B                     	;# 
  1967  009B                     	;# 
  1968  009C                     	;# 
  1969  009D                     	;# 
  1970  009E                     	;# 
  1971  010C                     	;# 
  1972  010D                     	;# 
  1973  010E                     	;# 
  1974  0116                     	;# 
  1975  0117                     	;# 
  1976  011D                     	;# 
  1977  018C                     	;# 
  1978  018D                     	;# 
  1979  018E                     	;# 
  1980  0191                     	;# 
  1981  0191                     	;# 
  1982  0192                     	;# 
  1983  0193                     	;# 
  1984  0193                     	;# 
  1985  0194                     	;# 
  1986  0195                     	;# 
  1987  0196                     	;# 
  1988  0197                     	;# 
  1989  0199                     	;# 
  1990  019A                     	;# 
  1991  019B                     	;# 
  1992  019B                     	;# 
  1993  019B                     	;# 
  1994  019B                     	;# 
  1995  019C                     	;# 
  1996  019C                     	;# 
  1997  019D                     	;# 
  1998  019E                     	;# 
  1999  019F                     	;# 
  2000  020D                     	;# 
  2001  0210                     	;# 
  2002  0211                     	;# 
  2003  0211                     	;# 
  2004  0212                     	;# 
  2005  0212                     	;# 
  2006  0213                     	;# 
  2007  0213                     	;# 
  2008  0214                     	;# 
  2009  0214                     	;# 
  2010  0215                     	;# 
  2011  0215                     	;# 
  2012  0215                     	;# 
  2013  0216                     	;# 
  2014  0216                     	;# 
  2015  0217                     	;# 
  2016  0217                     	;# 
  2017  0291                     	;# 
  2018  0291                     	;# 
  2019  0292                     	;# 
  2020  0293                     	;# 
  2021  0298                     	;# 
  2022  0298                     	;# 
  2023  0299                     	;# 
  2024  029A                     	;# 
  2025  0394                     	;# 
  2026  0395                     	;# 
  2027  0396                     	;# 
  2028  0FE4                     	;# 
  2029  0FE5                     	;# 
  2030  0FE6                     	;# 
  2031  0FE7                     	;# 
  2032  0FE8                     	;# 
  2033  0FE9                     	;# 
  2034  0FEA                     	;# 
  2035  0FEB                     	;# 
  2036  0FED                     	;# 
  2037  0FEE                     	;# 
  2038  0FEF                     	;# 
  2039                           
  2040                           	psect	idataBANK3
  2041  11DC                     __pidataBANK3:	
  2042                           
  2043                           ;initializer for __product
  2044  11DC  3463               	retlw	99
  2045  11DD  3402               	retlw	2
  2046  11DE  3400               	retlw	0
  2047  11DF  3400               	retlw	0
  2048  11E0  3400               	retlw	0
  2049  11E1  3400               	retlw	0
  2050  11E2  3400               	retlw	0
  2051  11E3  3400               	retlw	0
  2052  11E4  3400               	retlw	0
  2053  11E5  3400               	retlw	0
  2054  11E6  3400               	retlw	0
  2055  11E7  3400               	retlw	0
  2056  11E8  34FF               	retlw	255
  2057  11E9  34FF               	retlw	255
  2058  11EA  34FF               	retlw	255
  2059  11EB  3400               	retlw	0
  2060  11EC  3400               	retlw	0
  2061  11ED  3400               	retlw	0
  2062  11EE  3400               	retlw	0
  2063  11EF  3400               	retlw	0
  2064  11F0  3400               	retlw	0
  2065  11F1  3400               	retlw	0
  2066  11F2  3400               	retlw	0
  2067  11F3  3400               	retlw	0
  2068  11F4  3400               	retlw	0
  2069  11F5  3400               	retlw	0
  2070  11F6  3400               	retlw	0
  2071  11F7  3400               	retlw	0
  2072  11F8  3400               	retlw	0
  2073  11F9  3400               	retlw	0
  2074  11FA  3400               	retlw	0
  2075  11FB  3400               	retlw	0
  2076                           
  2077                           	psect	stringtext
  2078  1000                     __pstringtext:	
  2079  1000                     _CC2500_registers_address:	
  2080  1000  3403               	retlw	3
  2081  1001  3416               	retlw	22
  2082  1002  3417               	retlw	23
  2083  1003  341E               	retlw	30
  2084  1004  341F               	retlw	31
  2085  1005  3420               	retlw	32
  2086  1006  342A               	retlw	42
  2087  1007  342B               	retlw	43
  2088  1008  340B               	retlw	11
  2089  1009  340C               	retlw	12
  2090  100A  340D               	retlw	13
  2091  100B  340E               	retlw	14
  2092  100C  340F               	retlw	15
  2093  100D  3410               	retlw	16
  2094  100E  3411               	retlw	17
  2095  100F  3412               	retlw	18
  2096  1010  3413               	retlw	19
  2097  1011  3414               	retlw	20
  2098  1012  340A               	retlw	10
  2099  1013  3415               	retlw	21
  2100  1014  3421               	retlw	33
  2101  1015  3422               	retlw	34
  2102  1016  3418               	retlw	24
  2103  1017  3419               	retlw	25
  2104  1018  341A               	retlw	26
  2105  1019  341B               	retlw	27
  2106  101A  341C               	retlw	28
  2107  101B  341D               	retlw	29
  2108  101C  3423               	retlw	35
  2109  101D  3424               	retlw	36
  2110  101E  3425               	retlw	37
  2111  101F  3426               	retlw	38
  2112  1020  3429               	retlw	41
  2113  1021  342C               	retlw	44
  2114  1022  342D               	retlw	45
  2115  1023  342E               	retlw	46
  2116  1024  3400               	retlw	0
  2117  1025  3401               	retlw	1
  2118  1026  3402               	retlw	2
  2119  1027  3407               	retlw	7
  2120  1028  3408               	retlw	8
  2121  1029  3409               	retlw	9
  2122  102A  3406               	retlw	6
  2123  102B  3404               	retlw	4
  2124  102C  3405               	retlw	5
  2125  102D  3427               	retlw	39
  2126  102E  3428               	retlw	40
  2127  102F                     __end_of_CC2500_registers_address:	
  2128  102F                     _CC2500_rfSettings:	
  2129  102F  3407               	retlw	7
  2130  1030  3407               	retlw	7
  2131  1031  3430               	retlw	48
  2132  1032  3487               	retlw	135
  2133  1033  346B               	retlw	107
  2134  1034  34F8               	retlw	248
  2135  1035  347F               	retlw	127
  2136  1036  343F               	retlw	63
  2137  1037  3409               	retlw	9
  2138  1038  3400               	retlw	0
  2139  1039  345C               	retlw	92
  2140  103A  34A7               	retlw	167
  2141  103B  3462               	retlw	98
  2142  103C  3486               	retlw	134
  2143  103D  3483               	retlw	131
  2144  103E  3403               	retlw	3
  2145  103F  3422               	retlw	34
  2146  1040  34F8               	retlw	248
  2147  1041  3400               	retlw	0
  2148  1042  3444               	retlw	68
  2149  1043  34B6               	retlw	182
  2150  1044  3410               	retlw	16
  2151  1045  3418               	retlw	24
  2152  1046  341D               	retlw	29
  2153  1047  341C               	retlw	28
  2154  1048  34C7               	retlw	199
  2155  1049  3400               	retlw	0
  2156  104A  34B2               	retlw	178
  2157  104B  34EA               	retlw	234
  2158  104C  340A               	retlw	10
  2159  104D  3400               	retlw	0
  2160  104E  3411               	retlw	17
  2161  104F  3459               	retlw	89
  2162  1050  3488               	retlw	136
  2163  1051  3431               	retlw	49
  2164  1052  340B               	retlw	11
  2165  1053  342F               	retlw	47
  2166  1054  342E               	retlw	46
  2167  1055  3406               	retlw	6
  2168  1056  3404               	retlw	4
  2169  1057  3405               	retlw	5
  2170  1058  3400               	retlw	0
  2171  1059  3430               	retlw	48
  2172  105A  34D3               	retlw	211
  2173  105B  3491               	retlw	145
  2174  105C  3441               	retlw	65
  2175  105D  3400               	retlw	0
  2176  105E                     __end_of_CC2500_rfSettings:	
  2177  105E                     _CC2500_patable_vaule:	
  2178  105E  34FE               	retlw	254
  2179  105F  34FE               	retlw	254
  2180  1060  34FE               	retlw	254
  2181  1061  34FE               	retlw	254
  2182  1062  34FE               	retlw	254
  2183  1063  34FE               	retlw	254
  2184  1064  34FE               	retlw	254
  2185  1065  34FE               	retlw	254
  2186  1066                     __end_of_CC2500_patable_vaule:	
  2187                           
  2188                           	psect	nvBANK0
  2189  006F                     __pnvBANK0:	
  2190  006F                     _product:	
  2191  006F                     	ds	1
  2192  000C                     _PORTA	set	12
  2193  000D                     _PORTB	set	13
  2194  000E                     _PORTC	set	14
  2195  0015                     _TMR0	set	21
  2196  005F                     _GIE	set	95
  2197  005B                     _IOCIE	set	91
  2198  0058                     _IOCIF	set	88
  2199  005E                     _PEIE	set	94
  2200  0060                     _RA0	set	96
  2201  0063                     _RA3	set	99
  2202  0064                     _RA4	set	100
  2203  0066                     _RA6	set	102
  2204  0067                     _RA7	set	103
  2205  0068                     _RB0	set	104
  2206  0069                     _RB1	set	105
  2207  006B                     _RB3	set	107
  2208  006C                     _RB4	set	108
  2209  006D                     _RB5	set	109
  2210  0070                     _RC0	set	112
  2211  0071                     _RC1	set	113
  2212  0072                     _RC2	set	114
  2213  0074                     _RC4	set	116
  2214  0075                     _RC5	set	117
  2215  0077                     _RC7	set	119
  2216  005D                     _TMR0IE	set	93
  2217  005A                     _TMR0IF	set	90
  2218  009D                     _ADCON0	set	157
  2219  009E                     _ADCON1	set	158
  2220  009C                     _ADRESH	set	156
  2221  009B                     _ADRESL	set	155
  2222  0095                     _OPTION_REG	set	149
  2223  0099                     _OSCCON	set	153
  2224  008C                     _TRISA	set	140
  2225  008D                     _TRISB	set	141
  2226  008E                     _TRISC	set	142
  2227  04E9                     _GO_nDONE	set	1257
  2228  0117                     _FVRCON	set	279
  2229  010C                     _LATA	set	268
  2230  010D                     _LATB	set	269
  2231  010E                     _LATC	set	270
  2232  018C                     _ANSELA	set	396
  2233  018D                     _ANSELB	set	397
  2234  018E                     _ANSELC	set	398
  2235  0192                     _PMADRH	set	402
  2236  0191                     _PMADRL	set	401
  2237  0196                     _PMCON2	set	406
  2238  0194                     _PMDATH	set	404
  2239  0193                     _PMDATL	set	403
  2240  0CAE                     _CFGS	set	3246
  2241  0CAC                     _FREE	set	3244
  2242  0CAD                     _LWLO	set	3245
  2243  0CA8                     _RD	set	3240
  2244  0CA9                     _WR	set	3241
  2245  0CAA                     _WREN	set	3242
  2246  1069                     _WPUB1	set	4201
  2247  106A                     _WPUB2	set	4202
  2248  0396                     _IOCBF	set	918
  2249  0395                     _IOCBN	set	917
  2250  0394                     _IOCBP	set	916
  2251  1CB2                     _IOCBF2	set	7346
  2252                           
  2253                           ; #config settings
  2254  0000                     
  2255                           	psect	cinit
  2256  0015                     start_initialization:	
  2257  0015                     __initialization:	
  2258                           
  2259                           ; Clear objects allocated to BITCOMMON
  2260  0015  01FC               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  2261                           
  2262                           ; Clear objects allocated to COMMON
  2263  0016  01F8               	clrf	__pbssCOMMON& (0+127)
  2264  0017  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  2265  0018  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  2266  0019  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  2267                           
  2268                           ; Clear objects allocated to BANK0
  2269  001A  01ED               	clrf	__pbssBANK0& (0+127)
  2270  001B  01EE               	clrf	(__pbssBANK0+1)& (0+127)
  2271                           
  2272                           ; Clear objects allocated to BANK1
  2273  001C  30A0               	movlw	low __pbssBANK1
  2274  001D  0084               	movwf	4
  2275  001E  3000               	movlw	high __pbssBANK1
  2276  001F  0085               	movwf	5
  2277  0020  304F               	movlw	79
  2278  0021  319E  262A  3180   	fcall	clear_ram0
  2279                           
  2280                           ; Clear objects allocated to BANK2
  2281  0024  3020               	movlw	low __pbssBANK2
  2282  0025  0084               	movwf	4
  2283  0026  3001               	movlw	high __pbssBANK2
  2284  0027  0085               	movwf	5
  2285  0028  304F               	movlw	79
  2286  0029  319E  262A  3180   	fcall	clear_ram0
  2287                           
  2288                           ; Clear objects allocated to BANK3
  2289  002C  30C0               	movlw	low __pbssBANK3
  2290  002D  0084               	movwf	4
  2291  002E  3001               	movlw	high __pbssBANK3
  2292  002F  0085               	movwf	5
  2293  0030  3018               	movlw	24
  2294  0031  319E  262A  3180   	fcall	clear_ram0
  2295                           
  2296                           ; Initialize objects allocated to BANK3
  2297  0034  30DC               	movlw	low __pidataBANK3
  2298  0035  0084               	movwf	4
  2299  0036  3091               	movlw	(high __pidataBANK3)| (0+128)
  2300  0037  0085               	movwf	5
  2301  0038  30A0               	movlw	low __pdataBANK3
  2302  0039  0086               	movwf	6
  2303  003A  3001               	movlw	high __pdataBANK3
  2304  003B  0087               	movwf	7
  2305  003C  3020               	movlw	32
  2306  003D  319E  2624         	fcall	init_ram
  2307  003F                     end_of_initialization:	
  2308                           ;End of C runtime variable initialization code
  2309                           
  2310  003F                     __end_of__initialization:	
  2311  003F  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  2312  0040  0020               	movlb	0
  2313  0041  3188  2888         	ljmp	_main	;jump to C main() function
  2314                           
  2315                           	psect	bitbssCOMMON
  2316  03E0                     __pbitbssCOMMON:	
  2317  03E0                     _Receive_OK:	
  2318  03E0                     	ds	1
  2319  03E1                     _Transceive_OK:	
  2320  03E1                     	ds	1
  2321                           
  2322                           	psect	bssCOMMON
  2323  0078                     __pbssCOMMON:	
  2324  0078                     _DelayOff:	
  2325  0078                     	ds	1
  2326  0079                     _DimmerLightsIntr:	
  2327  0079                     	ds	1
  2328  007A                     _RFSW:	
  2329  007A                     	ds	1
  2330  007B                     _SPI0Buffer:	
  2331  007B                     	ds	1
  2332                           
  2333                           	psect	bssBANK0
  2334  006D                     __pbssBANK0:	
  2335  006D                     _DimmerLights:	
  2336  006D                     	ds	1
  2337  006E                     _Sw:	
  2338  006E                     	ds	1
  2339                           
  2340                           	psect	bssBANK1
  2341  00A0                     __pbssBANK1:	
  2342  00A0                     _myMain:	
  2343  00A0                     	ds	18
  2344  00B2                     _Buz1:	
  2345  00B2                     	ds	12
  2346  00BE                     _PF1:	
  2347  00BE                     	ds	8
  2348  00C6                     _RF1:	
  2349  00C6                     	ds	5
  2350  00CB                     _LED:	
  2351  00CB                     	ds	2
  2352  00CD                     _RF_Count:	
  2353  00CD                     	ds	2
  2354  00CF                     _CRC:	
  2355  00CF                     	ds	1
  2356  00D0                     _Dimmer:	
  2357  00D0                     	ds	1
  2358  00D1                     _DimmerLights11:	
  2359  00D1                     	ds	1
  2360  00D2                     _DimmerLightsIntrIOC:	
  2361  00D2                     	ds	1
  2362  00D3                     _RSSI:	
  2363  00D3                     	ds	1
  2364  00D4                     _Rx_Length:	
  2365  00D4                     	ds	1
  2366  00D5                     _Tx_Length:	
  2367  00D5                     	ds	1
  2368  00D6                     _r_address:	
  2369  00D6                     	ds	1
  2370  00D7                     _r_data:	
  2371  00D7                     	ds	1
  2372  00D8                     _s_data:	
  2373  00D8                     	ds	1
  2374  00D9                     _Temp1:	
  2375  00D9                     	ds	14
  2376  00E7                     _VarErrLED:	
  2377  00E7                     	ds	4
  2378  00EB                     _Dimmer1:	
  2379  00EB                     	ds	3
  2380  00EE                     _RFSW1:	
  2381  00EE                     	ds	1
  2382                           
  2383                           	psect	bssBANK2
  2384  0120                     __pbssBANK2:	
  2385  0120                     _RF_Data:	
  2386  0120                     	ds	21
  2387  0135                     _Timer0:	
  2388  0135                     	ds	8
  2389  013D                     _Memory:	
  2390  013D                     	ds	37
  2391  0162                     _DlySw1:	
  2392  0162                     	ds	5
  2393  0167                     _VarLED1:	
  2394  0167                     	ds	4
  2395  016B                     _VarLED2:	
  2396  016B                     	ds	4
  2397                           
  2398                           	psect	bssBANK3
  2399  01C0                     __pbssBANK3:	
  2400  01C0                     _DimmerLights1:	
  2401  01C0                     	ds	15
  2402  01CF                     _Sw1:	
  2403  01CF                     	ds	9
  2404                           
  2405                           	psect	dataBANK3
  2406  01A0                     __pdataBANK3:	
  2407  01A0                     __product:	
  2408  01A0                     	ds	32
  2409                           
  2410                           	psect	clrtext
  2411  1E2A                     clear_ram0:	
  2412                           ;	Called with FSR0 containing the base address, and
  2413                           ;	WREG with the size to clear
  2414                           
  2415  1E2A  0064               	clrwdt	;clear the watchdog before getting into this loop
  2416  1E2B                     clrloop0:	
  2417  1E2B  0180               	clrf	0	;clear RAM location pointed to by FSR
  2418  1E2C  3101               	addfsr 0,1
  2419  1E2D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2420  1E2E  2E2B               	goto	clrloop0	;have we reached the end yet?
  2421  1E2F  3400               	retlw	0	;all done for this memory range, return
  2422                           
  2423                           	psect	inittext
  2424  1E24                     init_ram:	
  2425  1E24  00FE               	movwf	126
  2426  1E25                     initloop:	
  2427  1E25  0012               	moviw fsr0++
  2428  1E26  001E               	movwi fsr1++
  2429  1E27  0BFE               	decfsz	126,f
  2430  1E28  2E25               	goto	initloop
  2431  1E29  3400               	retlw	0
  2432                           
  2433                           	psect	cstackCOMMON
  2434  0070                     __pcstackCOMMON:	
  2435  0070                     ?_Timeout_Counter:	
  2436  0070                     ?_set_TimeoutCleared:	
  2437                           ; 0 bytes @ 0x0
  2438                           
  2439  0070                     ?_CC2500_WriteByte:	
  2440                           ; 0 bytes @ 0x0
  2441                           
  2442  0070                     ?_CC2500_WriteCommand:	
  2443                           ; 0 bytes @ 0x0
  2444                           
  2445  0070                     ?_CC2500_ReadStatus:	
  2446                           ; 0 bytes @ 0x0
  2447                           
  2448  0070                     ?_CC2500_ReadByte:	
  2449                           ; 0 bytes @ 0x0
  2450                           
  2451  0070                     ?_CC2500_PowerRST:	
  2452                           ; 0 bytes @ 0x0
  2453                           
  2454  0070                     ?_CC2500_InitSetREG:	
  2455                           ; 0 bytes @ 0x0
  2456                           
  2457  0070                     ?_CC2500_InitPATable:	
  2458                           ; 0 bytes @ 0x0
  2459                           
  2460  0070                     ?_CC2500_ClearTXFIFO:	
  2461                           ; 0 bytes @ 0x0
  2462                           
  2463  0070                     ?_CC2500_ClearRXFIFO:	
  2464                           ; 0 bytes @ 0x0
  2465                           
  2466  0070                     ?_CC2500_FrequencyCabr:	
  2467                           ; 0 bytes @ 0x0
  2468                           
  2469  0070                     ?_CC2500_SIDLEMode:	
  2470                           ; 0 bytes @ 0x0
  2471                           
  2472  0070                     ?_DlyOff_Initialization:	
  2473                           ; 0 bytes @ 0x0
  2474                           
  2475  0070                     ?_DlyOff_Main:	
  2476                           ; 0 bytes @ 0x0
  2477                           
  2478  0070                     ?_setTxData:	
  2479                           ; 0 bytes @ 0x0
  2480                           
  2481  0070                     ?_setDimmerLights_Initialization:	
  2482                           ; 0 bytes @ 0x0
  2483                           
  2484  0070                     ?_Dimmer_Initialization:	
  2485                           ; 0 bytes @ 0x0
  2486                           
  2487  0070                     ?_setMemory_GO:	
  2488                           ; 0 bytes @ 0x0
  2489                           
  2490  0070                     ?_setDimmerLights_Main:	
  2491                           ; 0 bytes @ 0x0
  2492                           
  2493  0070                     ?_setDimmerLights_ERROR:	
  2494                           ; 0 bytes @ 0x0
  2495                           
  2496  0070                     ?_setLED_Initialization:	
  2497                           ; 0 bytes @ 0x0
  2498                           
  2499  0070                     ?_setLED_Main:	
  2500                           ; 0 bytes @ 0x0
  2501                           
  2502  0070                     ?_Fosc_Set:	
  2503                           ; 0 bytes @ 0x0
  2504                           
  2505  0070                     ?_IO_Set:	
  2506                           ; 0 bytes @ 0x0
  2507                           
  2508  0070                     ?_TMR0_Set:	
  2509                           ; 0 bytes @ 0x0
  2510                           
  2511  0070                     ?_ADC_Set:	
  2512                           ; 0 bytes @ 0x0
  2513                           
  2514  0070                     ?_IOC_Set:	
  2515                           ; 0 bytes @ 0x0
  2516                           
  2517  0070                     ?_IOC_ISR:	
  2518                           ; 0 bytes @ 0x0
  2519                           
  2520  0070                     ?_TMR0_ISR:	
  2521                           ; 0 bytes @ 0x0
  2522                           
  2523  0070                     ?_Flash_Memory_Write:	
  2524                           ; 0 bytes @ 0x0
  2525                           
  2526  0070                     ?_Flash_Memory_Modify:	
  2527                           ; 0 bytes @ 0x0
  2528                           
  2529  0070                     ?_setTemp_Initialization:	
  2530                           ; 0 bytes @ 0x0
  2531                           
  2532  0070                     ?_setTemp_Main:	
  2533                           ; 0 bytes @ 0x0
  2534                           
  2535  0070                     ?_setOverTemp_Exceptions:	
  2536                           ; 0 bytes @ 0x0
  2537                           
  2538  0070                     ?_setSw_Enable:	
  2539                           ; 0 bytes @ 0x0
  2540                           
  2541  0070                     ?_setRF_Enable:	
  2542                           ; 0 bytes @ 0x0
  2543                           
  2544  0070                     ?_setPowerFault_Initialization:	
  2545                           ; 0 bytes @ 0x0
  2546                           
  2547  0070                     ?_setPowerFault_Main:	
  2548                           ; 0 bytes @ 0x0
  2549                           
  2550  0070                     ?_setPowerFault_Exceptions:	
  2551                           ; 0 bytes @ 0x0
  2552                           
  2553  0070                     ?_setRF_Initialization:	
  2554                           ; 0 bytes @ 0x0
  2555                           
  2556  0070                     ?_setRF_Main:	
  2557                           ; 0 bytes @ 0x0
  2558                           
  2559  0070                     ?_RF_RxDisable:	
  2560                           ; 0 bytes @ 0x0
  2561                           
  2562  0070                     ?_getRxData:	
  2563                           ; 0 bytes @ 0x0
  2564                           
  2565  0070                     ?_setLog_Code:	
  2566                           ; 0 bytes @ 0x0
  2567                           
  2568  0070                     ?_setControl_Lights_Table:	
  2569                           ; 0 bytes @ 0x0
  2570                           
  2571  0070                     ?_setRFSW_Control:	
  2572                           ; 0 bytes @ 0x0
  2573                           
  2574  0070                     ?_setRFSW_AdjControl:	
  2575                           ; 0 bytes @ 0x0
  2576                           
  2577  0070                     ?_setRF_DimmerValue:	
  2578                           ; 0 bytes @ 0x0
  2579                           
  2580  0070                     ?_setSw_Initialization:	
  2581                           ; 0 bytes @ 0x0
  2582                           
  2583  0070                     ?_setSw_Main:	
  2584                           ; 0 bytes @ 0x0
  2585                           
  2586  0070                     ?_Sw_DimmerOnFunc:	
  2587                           ; 0 bytes @ 0x0
  2588                           
  2589  0070                     ?_Sw_DimmerAdjFunc:	
  2590                           ; 0 bytes @ 0x0
  2591                           
  2592  0070                     ?_Sw_DimmerOffFunc:	
  2593                           ; 0 bytes @ 0x0
  2594                           
  2595  0070                     ?_myMain_Initialization:	
  2596                           ; 0 bytes @ 0x0
  2597                           
  2598  0070                     ?_my_Main:	
  2599                           ; 0 bytes @ 0x0
  2600                           
  2601  0070                     ?_Buzzer_Initialization:	
  2602                           ; 0 bytes @ 0x0
  2603                           
  2604  0070                     ?_Buzzer_Main:	
  2605                           ; 0 bytes @ 0x0
  2606                           
  2607  0070                     ?_CC2500_TxData:	
  2608                           ; 0 bytes @ 0x0
  2609                           
  2610  0070                     ?_CC2500_RxData:	
  2611                           ; 0 bytes @ 0x0
  2612                           
  2613  0070                     ?_CC2500_PowerOnInitial:	
  2614                           ; 0 bytes @ 0x0
  2615                           
  2616  0070                     ?_DelayOffPointSelect:	
  2617                           ; 0 bytes @ 0x0
  2618                           
  2619  0070                     ?_DelayOff_Initialization:	
  2620                           ; 0 bytes @ 0x0
  2621                           
  2622  0070                     ?_DelayOff_Main:	
  2623                           ; 0 bytes @ 0x0
  2624                           
  2625  0070                     ?_DimmerIntrIOCPointSelect:	
  2626                           ; 0 bytes @ 0x0
  2627                           
  2628  0070                     ??_DimmerIntrIOCPointSelect:	
  2629                           ; 0 bytes @ 0x0
  2630                           
  2631  0070                     ?_setDimmerLights_IntrIOC_GO:	
  2632                           ; 0 bytes @ 0x0
  2633                           
  2634  0070                     ?_DimmerIntrPointSelect:	
  2635                           ; 0 bytes @ 0x0
  2636                           
  2637  0070                     ??_DimmerIntrPointSelect:	
  2638                           ; 0 bytes @ 0x0
  2639                           
  2640  0070                     ?_setDimmerLights_IntrControl:	
  2641                           ; 0 bytes @ 0x0
  2642                           
  2643  0070                     ?_DimmerLightsPointSelect:	
  2644                           ; 0 bytes @ 0x0
  2645                           
  2646  0070                     ?_DimmerLights_Initialization:	
  2647                           ; 0 bytes @ 0x0
  2648                           
  2649  0070                     ?_DimmerLights_Close:	
  2650                           ; 0 bytes @ 0x0
  2651                           
  2652  0070                     ?_DimmerLights_Main:	
  2653                           ; 0 bytes @ 0x0
  2654                           
  2655  0070                     ?_DimmerLights_Exceptions:	
  2656                           ; 0 bytes @ 0x0
  2657                           
  2658  0070                     ?_setDimmerLights_AdjRF:	
  2659                           ; 0 bytes @ 0x0
  2660                           
  2661  0070                     ?_LedPointSelect:	
  2662                           ; 0 bytes @ 0x0
  2663                           
  2664  0070                     ?_LED_Initialization:	
  2665                           ; 0 bytes @ 0x0
  2666                           
  2667  0070                     ?_LED_Main:	
  2668                           ; 0 bytes @ 0x0
  2669                           
  2670  0070                     ?_Mcu_Initialization:	
  2671                           ; 0 bytes @ 0x0
  2672                           
  2673  0070                     ?_ISR:	
  2674                           ; 0 bytes @ 0x0
  2675                           
  2676  0070                     ?_setDimmerReClock:	
  2677                           ; 0 bytes @ 0x0
  2678                           
  2679  0070                     ?_Flash_Memory_Initialization:	
  2680                           ; 0 bytes @ 0x0
  2681                           
  2682  0070                     ?_Flash_Memory_Main:	
  2683                           ; 0 bytes @ 0x0
  2684                           
  2685  0070                     ?_Flash_Memory_Unlock:	
  2686                           ; 0 bytes @ 0x0
  2687                           
  2688  0070                     ?_Flash_Memory_Erasing:	
  2689                           ; 0 bytes @ 0x0
  2690                           
  2691  0070                     ?_Temp_Initialization:	
  2692                           ; 0 bytes @ 0x0
  2693                           
  2694  0070                     ?_setTemp_Enable:	
  2695                           ; 0 bytes @ 0x0
  2696                           
  2697  0070                     ?_getTemp_AD:	
  2698                           ; 0 bytes @ 0x0
  2699                           
  2700  0070                     ?_Temp_Main:	
  2701                           ; 0 bytes @ 0x0
  2702                           
  2703  0070                     ?_PowerFault_Initialization:	
  2704                           ; 0 bytes @ 0x0
  2705                           
  2706  0070                     ?_PowerFault_Main:	
  2707                           ; 0 bytes @ 0x0
  2708                           
  2709  0070                     ?_getPowerFault_AD:	
  2710                           ; 0 bytes @ 0x0
  2711                           
  2712  0070                     ?_RF_Initialization:	
  2713                           ; 0 bytes @ 0x0
  2714                           
  2715  0070                     ?_RF_Main:	
  2716                           ; 0 bytes @ 0x0
  2717                           
  2718  0070                     ?_setRF_Learn:	
  2719                           ; 0 bytes @ 0x0
  2720                           
  2721  0070                     ?_RfSWPointSelect:	
  2722                           ; 0 bytes @ 0x0
  2723                           
  2724  0070                     ?_TouchPower:	
  2725                           ; 0 bytes @ 0x0
  2726                           
  2727  0070                     ?_SwPointSelect:	
  2728                           ; 0 bytes @ 0x0
  2729                           
  2730  0070                     ?_Switch_Initialization:	
  2731                           ; 0 bytes @ 0x0
  2732                           
  2733  0070                     ?_Switch_Main:	
  2734                           ; 0 bytes @ 0x0
  2735                           
  2736  0070                     ?_DelayTimejudge:	
  2737                           ; 0 bytes @ 0x0
  2738                           
  2739  0070                     ?_getDimmerLights_StatusFlag:	
  2740                           ; 1 bytes @ 0x0
  2741                           
  2742  0070                     ?_getPercentValue:	
  2743                           ; 1 bytes @ 0x0
  2744                           
  2745  0070                     ?_Flash_Memory_Read:	
  2746                           ; 1 bytes @ 0x0
  2747                           
  2748  0070                     ?_getPF_Safe:	
  2749                           ; 1 bytes @ 0x0
  2750                           
  2751  0070                     ?_setPercentValue:	
  2752                           ; 1 bytes @ 0x0
  2753                           
  2754  0070                     ?_getTemp_Safe:	
  2755                           ; 1 bytes @ 0x0
  2756                           
  2757                           
  2758                           ; 1 bytes @ 0x0
  2759  0070                     	ds	1
  2760  0071                     DimmerIntrIOCPointSelect@lights:	
  2761  0071                     DimmerIntrPointSelect@lights:	
  2762                           ; 1 bytes @ 0x1
  2763                           
  2764                           
  2765                           ; 1 bytes @ 0x1
  2766  0071                     	ds	1
  2767  0072                     ??_setDimmerLights_IntrIOC_GO:	
  2768  0072                     ??_setDimmerLights_IntrControl:	
  2769                           ; 0 bytes @ 0x2
  2770                           
  2771  0072                     setDimmerLights_IntrIOC_GO@lights:	
  2772                           ; 0 bytes @ 0x2
  2773                           
  2774                           
  2775                           ; 1 bytes @ 0x2
  2776  0072                     	ds	1
  2777  0073                     ??_IOC_ISR:	
  2778  0073                     ??_setDimmerReClock:	
  2779                           ; 0 bytes @ 0x3
  2780                           
  2781                           
  2782                           ; 0 bytes @ 0x3
  2783  0073                     	ds	3
  2784  0076                     setDimmerLights_IntrControl@lights:	
  2785                           
  2786                           ; 1 bytes @ 0x6
  2787  0076                     	ds	1
  2788  0077                     ??_TMR0_ISR:	
  2789  0077                     ??_ISR:	
  2790                           ; 0 bytes @ 0x7
  2791                           
  2792                           
  2793                           ; 0 bytes @ 0x7
  2794  0077                     	ds	1
  2795                           
  2796                           	psect	cstackBANK0
  2797  0020                     __pcstackBANK0:	
  2798  0020                     ??_Timeout_Counter:	
  2799  0020                     ??_set_TimeoutCleared:	
  2800                           ; 0 bytes @ 0x0
  2801                           
  2802  0020                     ??_CC2500_WriteByte:	
  2803                           ; 0 bytes @ 0x0
  2804                           
  2805  0020                     ??_CC2500_ReadByte:	
  2806                           ; 0 bytes @ 0x0
  2807                           
  2808  0020                     ?_DelayTime_1us:	
  2809                           ; 0 bytes @ 0x0
  2810                           
  2811  0020                     ??_setTxData:	
  2812                           ; 0 bytes @ 0x0
  2813                           
  2814  0020                     ??_Dimmer_Initialization:	
  2815                           ; 0 bytes @ 0x0
  2816                           
  2817  0020                     ??_getDimmerLights_StatusFlag:	
  2818                           ; 0 bytes @ 0x0
  2819                           
  2820  0020                     ??_setMemory_GO:	
  2821                           ; 0 bytes @ 0x0
  2822                           
  2823  0020                     ??_Fosc_Set:	
  2824                           ; 0 bytes @ 0x0
  2825                           
  2826  0020                     ??_IO_Set:	
  2827                           ; 0 bytes @ 0x0
  2828                           
  2829  0020                     ??_TMR0_Set:	
  2830                           ; 0 bytes @ 0x0
  2831                           
  2832  0020                     ??_ADC_Set:	
  2833                           ; 0 bytes @ 0x0
  2834                           
  2835  0020                     ??_IOC_Set:	
  2836                           ; 0 bytes @ 0x0
  2837                           
  2838  0020                     ??_Flash_Memory_Read:	
  2839                           ; 0 bytes @ 0x0
  2840                           
  2841  0020                     ??_Flash_Memory_Write:	
  2842                           ; 0 bytes @ 0x0
  2843                           
  2844  0020                     ??_setTemp_Initialization:	
  2845                           ; 0 bytes @ 0x0
  2846                           
  2847  0020                     ??_getPF_Safe:	
  2848                           ; 0 bytes @ 0x0
  2849                           
  2850  0020                     ??_setRF_Enable:	
  2851                           ; 0 bytes @ 0x0
  2852                           
  2853  0020                     ??_setPowerFault_Initialization:	
  2854                           ; 0 bytes @ 0x0
  2855                           
  2856  0020                     ??_setRF_Initialization:	
  2857                           ; 0 bytes @ 0x0
  2858                           
  2859  0020                     ??_myMain_Initialization:	
  2860                           ; 0 bytes @ 0x0
  2861                           
  2862  0020                     ??_Buzzer_Initialization:	
  2863                           ; 0 bytes @ 0x0
  2864                           
  2865  0020                     ??_Buzzer_Main:	
  2866                           ; 0 bytes @ 0x0
  2867                           
  2868  0020                     ??_DelayOffPointSelect:	
  2869                           ; 0 bytes @ 0x0
  2870                           
  2871  0020                     ??_DimmerLightsPointSelect:	
  2872                           ; 0 bytes @ 0x0
  2873                           
  2874  0020                     ??_LedPointSelect:	
  2875                           ; 0 bytes @ 0x0
  2876                           
  2877  0020                     ??_Mcu_Initialization:	
  2878                           ; 0 bytes @ 0x0
  2879                           
  2880  0020                     ??_Flash_Memory_Unlock:	
  2881                           ; 0 bytes @ 0x0
  2882                           
  2883  0020                     ??_Flash_Memory_Erasing:	
  2884                           ; 0 bytes @ 0x0
  2885                           
  2886  0020                     ??_Temp_Initialization:	
  2887                           ; 0 bytes @ 0x0
  2888                           
  2889  0020                     ??_setTemp_Enable:	
  2890                           ; 0 bytes @ 0x0
  2891                           
  2892  0020                     ??_getTemp_Safe:	
  2893                           ; 0 bytes @ 0x0
  2894                           
  2895  0020                     ??_PowerFault_Initialization:	
  2896                           ; 0 bytes @ 0x0
  2897                           
  2898  0020                     ??_setRF_Learn:	
  2899                           ; 0 bytes @ 0x0
  2900                           
  2901  0020                     ??_RfSWPointSelect:	
  2902                           ; 0 bytes @ 0x0
  2903                           
  2904  0020                     ??_TouchPower:	
  2905                           ; 0 bytes @ 0x0
  2906                           
  2907  0020                     ??_SwPointSelect:	
  2908                           ; 0 bytes @ 0x0
  2909                           
  2910  0020                     ?___bmul:	
  2911                           ; 0 bytes @ 0x0
  2912                           
  2913  0020                     ?_getBuz_GO:	
  2914                           ; 1 bytes @ 0x0
  2915                           
  2916  0020                     ?_getAD:	
  2917                           ; 2 bytes @ 0x0
  2918                           
  2919  0020                     ?___awdiv:	
  2920                           ; 2 bytes @ 0x0
  2921                           
  2922  0020                     ?___ftpack:	
  2923                           ; 2 bytes @ 0x0
  2924                           
  2925  0020                     getDimmerLights_StatusFlag@Status:	
  2926                           ; 3 bytes @ 0x0
  2927                           
  2928  0020                     LedPointSelect@led:	
  2929                           ; 1 bytes @ 0x0
  2930                           
  2931  0020                     getAD@adcon1:	
  2932                           ; 1 bytes @ 0x0
  2933                           
  2934  0020                     setTemp_Enable@command:	
  2935                           ; 1 bytes @ 0x0
  2936                           
  2937  0020                     getTemp_Safe@result:	
  2938                           ; 1 bytes @ 0x0
  2939                           
  2940  0020                     getPF_Safe@i:	
  2941                           ; 1 bytes @ 0x0
  2942                           
  2943  0020                     setRF_Learn@command:	
  2944                           ; 1 bytes @ 0x0
  2945                           
  2946  0020                     setRF_Enable@command:	
  2947                           ; 1 bytes @ 0x0
  2948                           
  2949  0020                     ___bmul@multiplicand:	
  2950                           ; 1 bytes @ 0x0
  2951                           
  2952  0020                     DelayTime_1us@count:	
  2953                           ; 1 bytes @ 0x0
  2954                           
  2955  0020                     ___awdiv@divisor:	
  2956                           ; 2 bytes @ 0x0
  2957                           
  2958  0020                     ___ftpack@arg:	
  2959                           ; 2 bytes @ 0x0
  2960                           
  2961                           
  2962                           ; 3 bytes @ 0x0
  2963  0020                     	ds	1
  2964  0021                     ?_setLED:	
  2965  0021                     ??_setLED_Main:	
  2966                           ; 0 bytes @ 0x1
  2967                           
  2968  0021                     ??_RF_Initialization:	
  2969                           ; 0 bytes @ 0x1
  2970                           
  2971  0021                     ??___bmul:	
  2972                           ; 0 bytes @ 0x1
  2973                           
  2974  0021                     CC2500_WriteByte@loop_a:	
  2975                           ; 0 bytes @ 0x1
  2976                           
  2977  0021                     CC2500_ReadByte@loop_b:	
  2978                           ; 1 bytes @ 0x1
  2979                           
  2980  0021                     DelayOffPointSelect@sw:	
  2981                           ; 1 bytes @ 0x1
  2982                           
  2983  0021                     DimmerLightsPointSelect@lights:	
  2984                           ; 1 bytes @ 0x1
  2985                           
  2986  0021                     setLED@command:	
  2987                           ; 1 bytes @ 0x1
  2988                           
  2989  0021                     Flash_Memory_Read@i:	
  2990                           ; 1 bytes @ 0x1
  2991                           
  2992  0021                     Flash_Memory_Write@i:	
  2993                           ; 1 bytes @ 0x1
  2994                           
  2995  0021                     RfSWPointSelect@sw:	
  2996                           ; 1 bytes @ 0x1
  2997                           
  2998  0021                     SwPointSelect@sw:	
  2999                           ; 1 bytes @ 0x1
  3000                           
  3001                           
  3002                           ; 1 bytes @ 0x1
  3003  0021                     	ds	1
  3004  0022                     ??_CC2500_WriteCommand:	
  3005  0022                     ??_CC2500_ReadStatus:	
  3006                           ; 0 bytes @ 0x2
  3007                           
  3008  0022                     ??_DelayTime_1us:	
  3009                           ; 0 bytes @ 0x2
  3010                           
  3011  0022                     ?_CC2500_WriteREG:	
  3012                           ; 0 bytes @ 0x2
  3013                           
  3014  0022                     ??_DlyOff_Initialization:	
  3015                           ; 0 bytes @ 0x2
  3016                           
  3017  0022                     ?_setSw_Status:	
  3018                           ; 0 bytes @ 0x2
  3019                           
  3020  0022                     ?_setRFSW_Status:	
  3021                           ; 0 bytes @ 0x2
  3022                           
  3023  0022                     ?_setDimmerLights_Trigger:	
  3024                           ; 0 bytes @ 0x2
  3025                           
  3026  0022                     ?_setDimmerLights_Switch:	
  3027                           ; 0 bytes @ 0x2
  3028                           
  3029  0022                     ??_setDimmerLights_Initialization:	
  3030                           ; 0 bytes @ 0x2
  3031                           
  3032  0022                     ?_setDimmerLights_TriggerERROR:	
  3033                           ; 0 bytes @ 0x2
  3034                           
  3035  0022                     ??_setLED:	
  3036                           ; 0 bytes @ 0x2
  3037                           
  3038  0022                     ??_setSw_Enable:	
  3039                           ; 0 bytes @ 0x2
  3040                           
  3041  0022                     ??_getBuz_GO:	
  3042                           ; 0 bytes @ 0x2
  3043                           
  3044  0022                     ?_setDimmerLights_AdjGo:	
  3045                           ; 0 bytes @ 0x2
  3046                           
  3047  0022                     ?_setDimmerLights_TriggerAdj:	
  3048                           ; 0 bytes @ 0x2
  3049                           
  3050  0022                     CC2500_WriteREG@value:	
  3051                           ; 0 bytes @ 0x2
  3052                           
  3053  0022                     DlyOff_Initialization@sw:	
  3054                           ; 1 bytes @ 0x2
  3055                           
  3056  0022                     setDimmerLights_TriggerERROR@command:	
  3057                           ; 1 bytes @ 0x2
  3058                           
  3059  0022                     setDimmerLights_Switch@command:	
  3060                           ; 1 bytes @ 0x2
  3061                           
  3062  0022                     setDimmerLights_AdjGo@command:	
  3063                           ; 1 bytes @ 0x2
  3064                           
  3065  0022                     setDimmerLights_Trigger@command:	
  3066                           ; 1 bytes @ 0x2
  3067                           
  3068  0022                     setDimmerLights_TriggerAdj@command:	
  3069                           ; 1 bytes @ 0x2
  3070                           
  3071  0022                     setLED@led:	
  3072                           ; 1 bytes @ 0x2
  3073                           
  3074  0022                     Flash_Memory_Read@address:	
  3075                           ; 1 bytes @ 0x2
  3076                           
  3077  0022                     setMemory_GO@command:	
  3078                           ; 1 bytes @ 0x2
  3079                           
  3080  0022                     setRFSW_Status@command:	
  3081                           ; 1 bytes @ 0x2
  3082                           
  3083  0022                     setSw_Enable@command:	
  3084                           ; 1 bytes @ 0x2
  3085                           
  3086  0022                     setSw_Status@command:	
  3087                           ; 1 bytes @ 0x2
  3088                           
  3089  0022                     ___bmul@product:	
  3090                           ; 1 bytes @ 0x2
  3091                           
  3092  0022                     DelayTime_1us@i:	
  3093                           ; 1 bytes @ 0x2
  3094                           
  3095  0022                     ___awdiv@dividend:	
  3096                           ; 2 bytes @ 0x2
  3097                           
  3098                           
  3099                           ; 2 bytes @ 0x2
  3100  0022                     	ds	1
  3101  0023                     ??_CC2500_WriteREG:	
  3102  0023                     ??_setSw_Status:	
  3103                           ; 0 bytes @ 0x3
  3104                           
  3105  0023                     ??_setRFSW_Status:	
  3106                           ; 0 bytes @ 0x3
  3107                           
  3108  0023                     ??_setDimmerLights_Trigger:	
  3109                           ; 0 bytes @ 0x3
  3110                           
  3111  0023                     ??_setDimmerLights_Switch:	
  3112                           ; 0 bytes @ 0x3
  3113                           
  3114  0023                     ?_setDimmerLights:	
  3115                           ; 0 bytes @ 0x3
  3116                           
  3117  0023                     ??_setDimmerLights_TriggerERROR:	
  3118                           ; 0 bytes @ 0x3
  3119                           
  3120  0023                     ??_setLED_Initialization:	
  3121                           ; 0 bytes @ 0x3
  3122                           
  3123  0023                     ??_setSw_Initialization:	
  3124                           ; 0 bytes @ 0x3
  3125                           
  3126  0023                     ??_DelayOff_Initialization:	
  3127                           ; 0 bytes @ 0x3
  3128                           
  3129  0023                     ??_DimmerLights_Close:	
  3130                           ; 0 bytes @ 0x3
  3131                           
  3132  0023                     ??_setDimmerLights_AdjGo:	
  3133                           ; 0 bytes @ 0x3
  3134                           
  3135  0023                     ??_setDimmerLights_TriggerAdj:	
  3136                           ; 0 bytes @ 0x3
  3137                           
  3138  0023                     ??_getAD:	
  3139                           ; 0 bytes @ 0x3
  3140                           
  3141  0023                     CC2500_WriteCommand@command:	
  3142                           ; 0 bytes @ 0x3
  3143                           
  3144  0023                     CC2500_ReadStatus@status_addr:	
  3145                           ; 1 bytes @ 0x3
  3146                           
  3147  0023                     setDimmerLights_Initialization@lights:	
  3148                           ; 1 bytes @ 0x3
  3149                           
  3150  0023                     setDimmerLights_TriggerERROR@lights:	
  3151                           ; 1 bytes @ 0x3
  3152                           
  3153  0023                     setDimmerLights@status:	
  3154                           ; 1 bytes @ 0x3
  3155                           
  3156  0023                     setDimmerLights_Switch@lights:	
  3157                           ; 1 bytes @ 0x3
  3158                           
  3159  0023                     setDimmerLights_AdjGo@lights:	
  3160                           ; 1 bytes @ 0x3
  3161                           
  3162  0023                     setDimmerLights_Trigger@lights:	
  3163                           ; 1 bytes @ 0x3
  3164                           
  3165  0023                     setDimmerLights_TriggerAdj@lights:	
  3166                           ; 1 bytes @ 0x3
  3167                           
  3168  0023                     setLED_Initialization@led:	
  3169                           ; 1 bytes @ 0x3
  3170                           
  3171  0023                     setLED_Main@led:	
  3172                           ; 1 bytes @ 0x3
  3173                           
  3174  0023                     getAD@adcon0:	
  3175                           ; 1 bytes @ 0x3
  3176                           
  3177  0023                     Flash_Memory_Read@ret:	
  3178                           ; 1 bytes @ 0x3
  3179                           
  3180  0023                     setRFSW_Status@sw:	
  3181                           ; 1 bytes @ 0x3
  3182                           
  3183  0023                     setSw_Initialization@sw:	
  3184                           ; 1 bytes @ 0x3
  3185                           
  3186  0023                     setSw_Status@sw:	
  3187                           ; 1 bytes @ 0x3
  3188                           
  3189  0023                     ___bmul@multiplier:	
  3190                           ; 1 bytes @ 0x3
  3191                           
  3192  0023                     ___ftpack@exp:	
  3193                           ; 1 bytes @ 0x3
  3194                           
  3195                           
  3196                           ; 1 bytes @ 0x3
  3197  0023                     	ds	1
  3198  0024                     ??_CC2500_ClearTXFIFO:	
  3199  0024                     ??_CC2500_ClearRXFIFO:	
  3200                           ; 0 bytes @ 0x4
  3201                           
  3202  0024                     ??_CC2500_SIDLEMode:	
  3203                           ; 0 bytes @ 0x4
  3204                           
  3205  0024                     ??_DelayTimejudge:	
  3206                           ; 0 bytes @ 0x4
  3207                           
  3208  0024                     ??_setDimmerLights:	
  3209                           ; 0 bytes @ 0x4
  3210                           
  3211  0024                     ??_setDimmerLights_ERROR:	
  3212                           ; 0 bytes @ 0x4
  3213                           
  3214  0024                     ??_Flash_Memory_Modify:	
  3215                           ; 0 bytes @ 0x4
  3216                           
  3217  0024                     ??_RF_RxDisable:	
  3218                           ; 0 bytes @ 0x4
  3219                           
  3220  0024                     ??_Sw_DimmerAdjFunc:	
  3221                           ; 0 bytes @ 0x4
  3222                           
  3223  0024                     ??_CC2500_TxData:	
  3224                           ; 0 bytes @ 0x4
  3225                           
  3226  0024                     ??_CC2500_RxData:	
  3227                           ; 0 bytes @ 0x4
  3228                           
  3229  0024                     ??_DimmerLights_Initialization:	
  3230                           ; 0 bytes @ 0x4
  3231                           
  3232  0024                     ??_LED_Initialization:	
  3233                           ; 0 bytes @ 0x4
  3234                           
  3235  0024                     ??_LED_Main:	
  3236                           ; 0 bytes @ 0x4
  3237                           
  3238  0024                     ??_getTemp_AD:	
  3239                           ; 0 bytes @ 0x4
  3240                           
  3241  0024                     ??_getPowerFault_AD:	
  3242                           ; 0 bytes @ 0x4
  3243                           
  3244  0024                     ??_Switch_Initialization:	
  3245                           ; 0 bytes @ 0x4
  3246                           
  3247  0024                     ??___awdiv:	
  3248                           ; 0 bytes @ 0x4
  3249                           
  3250  0024                     CC2500_WriteREG@w_addr:	
  3251                           ; 0 bytes @ 0x4
  3252                           
  3253  0024                     Sw_DimmerAdjFunc@Idle:	
  3254                           ; 1 bytes @ 0x4
  3255                           
  3256  0024                     ___ftpack@sign:	
  3257                           ; 1 bytes @ 0x4
  3258                           
  3259  0024                     getBuz_GO@i:	
  3260                           ; 1 bytes @ 0x4
  3261                           
  3262  0024                     DelayTime_1us@j:	
  3263                           ; 2 bytes @ 0x4
  3264                           
  3265                           
  3266                           ; 2 bytes @ 0x4
  3267  0024                     	ds	1
  3268  0025                     ??_CC2500_InitSetREG:	
  3269  0025                     ??_CC2500_InitPATable:	
  3270                           ; 0 bytes @ 0x5
  3271                           
  3272  0025                     ??___ftpack:	
  3273                           ; 0 bytes @ 0x5
  3274                           
  3275  0025                     CC2500_TxData@loop_e:	
  3276                           ; 0 bytes @ 0x5
  3277                           
  3278  0025                     CC2500_RxData@loop_f:	
  3279                           ; 1 bytes @ 0x5
  3280                           
  3281  0025                     setDimmerLights_ERROR@lights:	
  3282                           ; 1 bytes @ 0x5
  3283                           
  3284  0025                     setDimmerLights@lights:	
  3285                           ; 1 bytes @ 0x5
  3286                           
  3287  0025                     Flash_Memory_Modify@i:	
  3288                           ; 1 bytes @ 0x5
  3289                           
  3290  0025                     getTemp_AD@channel:	
  3291                           ; 1 bytes @ 0x5
  3292                           
  3293  0025                     getPowerFault_AD@channel:	
  3294                           ; 1 bytes @ 0x5
  3295                           
  3296  0025                     Sw_DimmerAdjFunc@sw:	
  3297                           ; 1 bytes @ 0x5
  3298                           
  3299  0025                     ___awdiv@counter:	
  3300                           ; 1 bytes @ 0x5
  3301                           
  3302                           
  3303                           ; 1 bytes @ 0x5
  3304  0025                     	ds	1
  3305  0026                     ??_CC2500_PowerRST:	
  3306  0026                     ??_CC2500_FrequencyCabr:	
  3307                           ; 0 bytes @ 0x6
  3308                           
  3309  0026                     ??_Flash_Memory_Main:	
  3310                           ; 0 bytes @ 0x6
  3311                           
  3312  0026                     CC2500_InitSetREG@temp1:	
  3313                           ; 0 bytes @ 0x6
  3314                           
  3315  0026                     CC2500_InitPATable@temp:	
  3316                           ; 1 bytes @ 0x6
  3317                           
  3318  0026                     DelayTimejudge@i:	
  3319                           ; 1 bytes @ 0x6
  3320                           
  3321  0026                     ___awdiv@sign:	
  3322                           ; 1 bytes @ 0x6
  3323                           
  3324                           
  3325                           ; 1 bytes @ 0x6
  3326  0026                     	ds	1
  3327  0027                     CC2500_InitSetREG@temp2:	
  3328  0027                     CC2500_InitPATable@loop_d:	
  3329                           ; 1 bytes @ 0x7
  3330                           
  3331  0027                     DelayTimejudge@j:	
  3332                           ; 1 bytes @ 0x7
  3333                           
  3334  0027                     ___awdiv@quotient:	
  3335                           ; 1 bytes @ 0x7
  3336                           
  3337                           
  3338                           ; 2 bytes @ 0x7
  3339  0027                     	ds	1
  3340  0028                     ?___awtoft:	
  3341  0028                     CC2500_InitSetREG@loop_c:	
  3342                           ; 3 bytes @ 0x8
  3343                           
  3344  0028                     DelayTimejudge@k:	
  3345                           ; 1 bytes @ 0x8
  3346                           
  3347  0028                     ___awtoft@c:	
  3348                           ; 1 bytes @ 0x8
  3349                           
  3350                           
  3351                           ; 2 bytes @ 0x8
  3352  0028                     	ds	1
  3353  0029                     ?_setBuz:	
  3354  0029                     ??_CC2500_PowerOnInitial:	
  3355                           ; 0 bytes @ 0x9
  3356                           
  3357  0029                     DelayTimejudge@value:	
  3358                           ; 0 bytes @ 0x9
  3359                           
  3360  0029                     setBuz@time:	
  3361                           ; 1 bytes @ 0x9
  3362                           
  3363                           
  3364                           ; 2 bytes @ 0x9
  3365  0029                     	ds	1
  3366  002A                     ?_setDelayOff_GO:	
  3367  002A                     setDelayOff_GO@command:	
  3368                           ; 0 bytes @ 0xA
  3369                           
  3370                           
  3371                           ; 1 bytes @ 0xA
  3372  002A                     	ds	1
  3373  002B                     ??_setBuz:	
  3374  002B                     ??___awtoft:	
  3375                           ; 0 bytes @ 0xB
  3376                           
  3377  002B                     setDelayOff_GO@value:	
  3378                           ; 0 bytes @ 0xB
  3379                           
  3380                           
  3381                           ; 1 bytes @ 0xB
  3382  002B                     	ds	1
  3383  002C                     ??_setDelayOff_GO:	
  3384  002C                     setBuz@count:	
  3385                           ; 0 bytes @ 0xC
  3386                           
  3387                           
  3388                           ; 1 bytes @ 0xC
  3389  002C                     	ds	1
  3390  002D                     ??_setLog_Code:	
  3391  002D                     ??_my_Main:	
  3392                           ; 0 bytes @ 0xD
  3393                           
  3394  002D                     ??_DimmerLights_Exceptions:	
  3395                           ; 0 bytes @ 0xD
  3396                           
  3397  002D                     DimmerLights_Exceptions@status:	
  3398                           ; 0 bytes @ 0xD
  3399                           
  3400  002D                     ___awtoft@sign:	
  3401                           ; 1 bytes @ 0xD
  3402                           
  3403                           
  3404                           ; 1 bytes @ 0xD
  3405  002D                     	ds	1
  3406  002E                     ??_setOverTemp_Exceptions:	
  3407  002E                     ??_setPowerFault_Exceptions:	
  3408                           ; 0 bytes @ 0xE
  3409                           
  3410  002E                     ?___ftdiv:	
  3411                           ; 0 bytes @ 0xE
  3412                           
  3413  002E                     ?___ftmul:	
  3414                           ; 3 bytes @ 0xE
  3415                           
  3416  002E                     setDelayOff_GO@sw:	
  3417                           ; 3 bytes @ 0xE
  3418                           
  3419  002E                     ___ftdiv@f2:	
  3420                           ; 1 bytes @ 0xE
  3421                           
  3422  002E                     ___ftmul@f1:	
  3423                           ; 3 bytes @ 0xE
  3424                           
  3425                           
  3426                           ; 3 bytes @ 0xE
  3427  002E                     	ds	1
  3428  002F                     setOverTemp_Exceptions@i:	
  3429  002F                     setPowerFault_Exceptions@i:	
  3430                           ; 1 bytes @ 0xF
  3431                           
  3432                           
  3433                           ; 1 bytes @ 0xF
  3434  002F                     	ds	1
  3435  0030                     setOverTemp_Exceptions@command:	
  3436  0030                     setPowerFault_Exceptions@command:	
  3437                           ; 1 bytes @ 0x10
  3438                           
  3439                           
  3440                           ; 1 bytes @ 0x10
  3441  0030                     	ds	1
  3442  0031                     ??_setTemp_Main:	
  3443  0031                     ??_setPowerFault_Main:	
  3444                           ; 0 bytes @ 0x11
  3445                           
  3446  0031                     ___ftdiv@f1:	
  3447                           ; 0 bytes @ 0x11
  3448                           
  3449  0031                     ___ftmul@f2:	
  3450                           ; 3 bytes @ 0x11
  3451                           
  3452                           
  3453                           ; 3 bytes @ 0x11
  3454  0031                     	ds	1
  3455  0032                     ??_Temp_Main:	
  3456  0032                     ??_PowerFault_Main:	
  3457                           ; 0 bytes @ 0x12
  3458                           
  3459                           
  3460                           ; 0 bytes @ 0x12
  3461  0032                     	ds	2
  3462  0034                     ??___ftdiv:	
  3463  0034                     ??___ftmul:	
  3464                           ; 0 bytes @ 0x14
  3465                           
  3466                           
  3467                           ; 0 bytes @ 0x14
  3468  0034                     	ds	4
  3469  0038                     ___ftdiv@cntr:	
  3470  0038                     ___ftmul@exp:	
  3471                           ; 1 bytes @ 0x18
  3472                           
  3473                           
  3474                           ; 1 bytes @ 0x18
  3475  0038                     	ds	1
  3476  0039                     ___ftdiv@f3:	
  3477  0039                     ___ftmul@f3_as_product:	
  3478                           ; 3 bytes @ 0x19
  3479                           
  3480                           
  3481                           ; 3 bytes @ 0x19
  3482  0039                     	ds	3
  3483  003C                     ___ftdiv@exp:	
  3484  003C                     ___ftmul@cntr:	
  3485                           ; 1 bytes @ 0x1C
  3486                           
  3487                           
  3488                           ; 1 bytes @ 0x1C
  3489  003C                     	ds	1
  3490  003D                     ___ftdiv@sign:	
  3491  003D                     ___ftmul@sign:	
  3492                           ; 1 bytes @ 0x1D
  3493                           
  3494                           
  3495                           ; 1 bytes @ 0x1D
  3496  003D                     	ds	1
  3497  003E                     ?___ftadd:	
  3498  003E                     ___ftadd@f1:	
  3499                           ; 3 bytes @ 0x1E
  3500                           
  3501                           
  3502                           ; 3 bytes @ 0x1E
  3503  003E                     	ds	3
  3504  0041                     ___ftadd@f2:	
  3505                           
  3506                           ; 3 bytes @ 0x21
  3507  0041                     	ds	3
  3508  0044                     ??___ftadd:	
  3509                           
  3510                           ; 0 bytes @ 0x24
  3511  0044                     	ds	4
  3512  0048                     ___ftadd@sign:	
  3513                           
  3514                           ; 1 bytes @ 0x28
  3515  0048                     	ds	1
  3516  0049                     ___ftadd@exp2:	
  3517                           
  3518                           ; 1 bytes @ 0x29
  3519  0049                     	ds	1
  3520  004A                     ___ftadd@exp1:	
  3521                           
  3522                           ; 1 bytes @ 0x2A
  3523  004A                     	ds	1
  3524  004B                     ?___fttol:	
  3525  004B                     ___fttol@f1:	
  3526                           ; 4 bytes @ 0x2B
  3527                           
  3528                           
  3529                           ; 3 bytes @ 0x2B
  3530  004B                     	ds	4
  3531  004F                     ??___fttol:	
  3532                           
  3533                           ; 0 bytes @ 0x2F
  3534  004F                     	ds	4
  3535  0053                     ___fttol@sign1:	
  3536                           
  3537                           ; 1 bytes @ 0x33
  3538  0053                     	ds	1
  3539  0054                     ___fttol@lval:	
  3540                           
  3541                           ; 4 bytes @ 0x34
  3542  0054                     	ds	4
  3543  0058                     ___fttol@exp1:	
  3544                           
  3545                           ; 1 bytes @ 0x38
  3546  0058                     	ds	1
  3547  0059                     ??_getPercentValue:	
  3548  0059                     ??_setPercentValue:	
  3549                           ; 0 bytes @ 0x39
  3550                           
  3551  0059                     setPercentValue@value:	
  3552                           ; 0 bytes @ 0x39
  3553                           
  3554                           
  3555                           ; 1 bytes @ 0x39
  3556  0059                     	ds	1
  3557  005A                     setPercentValue@i:	
  3558                           
  3559                           ; 3 bytes @ 0x3A
  3560  005A                     	ds	1
  3561  005B                     getPercentValue@value:	
  3562                           
  3563                           ; 1 bytes @ 0x3B
  3564  005B                     	ds	1
  3565  005C                     getPercentValue@i:	
  3566                           
  3567                           ; 3 bytes @ 0x3C
  3568  005C                     	ds	1
  3569  005D                     ?_setRF_DimmerLights:	
  3570  005D                     ??_Flash_Memory_Initialization:	
  3571                           ; 0 bytes @ 0x3D
  3572                           
  3573  005D                     setRF_DimmerLights@on:	
  3574                           ; 0 bytes @ 0x3D
  3575                           
  3576                           
  3577                           ; 1 bytes @ 0x3D
  3578  005D                     	ds	1
  3579  005E                     ??_setRF_DimmerLights:	
  3580  005E                     Flash_Memory_Initialization@i:	
  3581                           ; 0 bytes @ 0x3E
  3582                           
  3583                           
  3584                           ; 1 bytes @ 0x3E
  3585  005E                     	ds	1
  3586  005F                     ??_setDimmerLights_AdjRF:	
  3587                           
  3588                           ; 0 bytes @ 0x3F
  3589  005F                     	ds	1
  3590  0060                     setDimmerLights_AdjRF@lights:	
  3591  0060                     setRF_DimmerLights@status:	
  3592                           ; 1 bytes @ 0x40
  3593                           
  3594                           
  3595                           ; 1 bytes @ 0x40
  3596  0060                     	ds	1
  3597  0061                     ??_setRF_DimmerValue:	
  3598  0061                     setRF_DimmerLights@lights:	
  3599                           ; 0 bytes @ 0x41
  3600                           
  3601                           
  3602                           ; 1 bytes @ 0x41
  3603  0061                     	ds	1
  3604  0062                     ??_DlyOff_Main:	
  3605  0062                     ?_setDimmerLights_Adj:	
  3606                           ; 0 bytes @ 0x42
  3607                           
  3608  0062                     ??_setRFSW_Control:	
  3609                           ; 0 bytes @ 0x42
  3610                           
  3611  0062                     ??_Sw_DimmerOnFunc:	
  3612                           ; 0 bytes @ 0x42
  3613                           
  3614  0062                     ??_Sw_DimmerOffFunc:	
  3615                           ; 0 bytes @ 0x42
  3616                           
  3617  0062                     setDimmerLights_Adj@status:	
  3618                           ; 0 bytes @ 0x42
  3619                           
  3620  0062                     Sw_DimmerOnFunc@Idle:	
  3621                           ; 1 bytes @ 0x42
  3622                           
  3623                           
  3624                           ; 1 bytes @ 0x42
  3625  0062                     	ds	1
  3626  0063                     ??_setDimmerLights_Adj:	
  3627  0063                     setRFSW_Control@sw:	
  3628                           ; 0 bytes @ 0x43
  3629                           
  3630  0063                     setRF_DimmerValue@lights:	
  3631                           ; 1 bytes @ 0x43
  3632                           
  3633  0063                     Sw_DimmerOnFunc@sw:	
  3634                           ; 1 bytes @ 0x43
  3635                           
  3636                           
  3637                           ; 1 bytes @ 0x43
  3638  0063                     	ds	1
  3639  0064                     ??_setRFSW_AdjControl:	
  3640  0064                     DlyOff_Main@sw:	
  3641                           ; 0 bytes @ 0x44
  3642                           
  3643  0064                     setDimmerLights_Adj@lights:	
  3644                           ; 1 bytes @ 0x44
  3645                           
  3646  0064                     Sw_DimmerOffFunc@sw:	
  3647                           ; 1 bytes @ 0x44
  3648                           
  3649                           
  3650                           ; 1 bytes @ 0x44
  3651  0064                     	ds	1
  3652  0065                     ??_setDimmerLights_Main:	
  3653  0065                     ??_setSw_Main:	
  3654                           ; 0 bytes @ 0x45
  3655                           
  3656  0065                     ??_DelayOff_Main:	
  3657                           ; 0 bytes @ 0x45
  3658                           
  3659  0065                     setDimmerLights_Main@clear:	
  3660                           ; 0 bytes @ 0x45
  3661                           
  3662                           
  3663                           ; 1 bytes @ 0x45
  3664  0065                     	ds	1
  3665  0066                     setDimmerLights_Main@lights:	
  3666  0066                     setRFSW_AdjControl@sw:	
  3667                           ; 1 bytes @ 0x46
  3668                           
  3669                           
  3670                           ; 1 bytes @ 0x46
  3671  0066                     	ds	1
  3672  0067                     ??_setRF_Main:	
  3673  0067                     ??_getRxData:	
  3674                           ; 0 bytes @ 0x47
  3675                           
  3676  0067                     ??_setControl_Lights_Table:	
  3677                           ; 0 bytes @ 0x47
  3678                           
  3679  0067                     ??_DimmerLights_Main:	
  3680                           ; 0 bytes @ 0x47
  3681                           
  3682  0067                     _setSw_Main$4946:	
  3683                           ; 0 bytes @ 0x47
  3684                           
  3685                           
  3686                           ; 1 bytes @ 0x47
  3687  0067                     	ds	1
  3688  0068                     _setRF_Main$4076:	
  3689  0068                     setSw_Main@sw:	
  3690                           ; 1 bytes @ 0x48
  3691                           
  3692                           
  3693                           ; 1 bytes @ 0x48
  3694  0068                     	ds	1
  3695  0069                     ??_RF_Main:	
  3696  0069                     ??_Switch_Main:	
  3697                           ; 0 bytes @ 0x49
  3698                           
  3699  0069                     ?_main:	
  3700                           ; 0 bytes @ 0x49
  3701                           
  3702  0069                     main@argc:	
  3703                           ; 2 bytes @ 0x49
  3704                           
  3705                           
  3706                           ; 2 bytes @ 0x49
  3707  0069                     	ds	2
  3708  006B                     main@argv:	
  3709                           
  3710                           ; 2 bytes @ 0x4B
  3711  006B                     	ds	2
  3712  006D                     ??_main:	
  3713                           
  3714                           	psect	maintext
  3715  0888                     __pmaintext:	
  3716                           ; 0 bytes @ 0x4D
  3717 ;;
  3718 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3719 ;;
  3720 ;; *************** function _main *****************
  3721 ;; Defined at:
  3722 ;;		line 7 in file "../src/main_B1.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  argc            2   73[BANK0 ] int 
  3725 ;;  argv            2   75[BANK0 ] PTR PTR unsigned char 
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;		None
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  2   73[BANK0 ] int 
  3730 ;; Registers used:
  3731 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3732 ;; Tracked objects:
  3733 ;;		On entry : 17F/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3737 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3740 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3741 ;;Total ram usage:        4 bytes
  3742 ;; Hardware stack levels required when called:   15
  3743 ;; This function calls:
  3744 ;;		_Buzzer_Initialization
  3745 ;;		_Buzzer_Main
  3746 ;;		_CC2500_PowerOnInitial
  3747 ;;		_DelayOff_Initialization
  3748 ;;		_DelayOff_Main
  3749 ;;		_DimmerLights_Initialization
  3750 ;;		_DimmerLights_Main
  3751 ;;		_Flash_Memory_Initialization
  3752 ;;		_Flash_Memory_Main
  3753 ;;		_LED_Initialization
  3754 ;;		_LED_Main
  3755 ;;		_Mcu_Initialization
  3756 ;;		_PowerFault_Initialization
  3757 ;;		_PowerFault_Main
  3758 ;;		_RF_Initialization
  3759 ;;		_RF_Main
  3760 ;;		_Switch_Initialization
  3761 ;;		_Switch_Main
  3762 ;;		_Temp_Initialization
  3763 ;;		_Temp_Main
  3764 ;;		_getPowerFault_AD
  3765 ;;		_getTemp_AD
  3766 ;;		_myMain_Initialization
  3767 ;;		_my_Main
  3768 ;; This function is called by:
  3769 ;;		Startup code after reset
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772                           
  3773                           
  3774                           ;psect for function _main
  3775  0888                     _main:	
  3776                           
  3777                           ;main_B1.c: 9: myMain_Initialization();
  3778                           
  3779                           ;incstack = 0
  3780                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3781  0888  319F  2790  3188   	fcall	_myMain_Initialization
  3782                           
  3783                           ;main_B1.c: 10: Mcu_Initialization();
  3784  088B  319F  2754  3188   	fcall	_Mcu_Initialization
  3785                           
  3786                           ;main_B1.c: 11: Flash_Memory_Initialization();
  3787  088E  3184  242A  3188   	fcall	_Flash_Memory_Initialization
  3788                           
  3789                           ;main_B1.c: 12: LED_Initialization();
  3790  0891  319E  26EA  3188   	fcall	_LED_Initialization
  3791                           
  3792                           ;main_B1.c: 13: Buzzer_Initialization();
  3793  0894  319D  25E3  3188   	fcall	_Buzzer_Initialization
  3794                           
  3795                           ;main_B1.c: 15: ;;
  3796                           ;main_B1.c: 16: Temp_Initialization();
  3797  0897  319D  25F5  3188   	fcall	_Temp_Initialization
  3798                           
  3799                           ;main_B1.c: 17: ;;
  3800                           ;main_B1.c: 18: PowerFault_Initialization();
  3801  089A  319D  25E6  3188   	fcall	_PowerFault_Initialization
  3802                           
  3803                           ;main_B1.c: 19: DelayOff_Initialization();
  3804  089D  319E  260B  3188   	fcall	_DelayOff_Initialization
  3805                           
  3806                           ;main_B1.c: 21: DimmerLights_Initialization();
  3807  08A0  319F  270F  3188   	fcall	_DimmerLights_Initialization
  3808                           
  3809                           ;main_B1.c: 22: ;;
  3810                           ;main_B1.c: 23: ;;
  3811                           ;main_B1.c: 24: ;;
  3812                           ;main_B1.c: 25: Switch_Initialization();
  3813  08A3  319E  267D  3188   	fcall	_Switch_Initialization
  3814                           
  3815                           ;main_B1.c: 26: RF_Initialization();
  3816  08A6  319D  25EC  3188   	fcall	_RF_Initialization
  3817                           
  3818                           ;main_B1.c: 27: CC2500_PowerOnInitial();
  3819  08A9  3190  20D1  3188   	fcall	_CC2500_PowerOnInitial
  3820  08AC                     l7911:	
  3821                           ;main_B1.c: 28: ;;
  3822                           ;main_B1.c: 31: while (1) {
  3823                           
  3824                           
  3825                           ;main_B1.c: 33: if (myMain.PowerON) {
  3826  08AC  0021               	movlb	1	; select bank1
  3827  08AD  1C20               	btfss	_myMain^(0+128),0
  3828  08AE  28B7               	goto	l7915
  3829                           
  3830                           ;main_B1.c: 35: ;;
  3831                           ;main_B1.c: 39: ;;
  3832                           ;main_B1.c: 43: getTemp_AD(0x09);
  3833  08AF  3009               	movlw	9
  3834  08B0  3194  2457  3188   	fcall	_getTemp_AD
  3835                           
  3836                           ;main_B1.c: 47: getPowerFault_AD(0x11);
  3837  08B3  3011               	movlw	17
  3838  08B4  3192  22EF  3188   	fcall	_getPowerFault_AD
  3839  08B7                     l7915:	
  3840                           
  3841                           ;main_B1.c: 62: }
  3842                           ;main_B1.c: 65: if (myMain.T0_Timerout) {
  3843  08B7  0021               	movlb	1	; select bank1
  3844  08B8  1CA0               	btfss	_myMain^(0+128),1
  3845  08B9  28AC               	goto	l7911
  3846                           
  3847                           ;main_B1.c: 66: myMain.T0_Timerout = 0;
  3848  08BA  10A0               	bcf	_myMain^(0+128),1
  3849                           
  3850                           ;main_B1.c: 67: my_Main();
  3851  08BB  3196  2691  3188   	fcall	_my_Main
  3852                           
  3853                           ;main_B1.c: 68: ;;
  3854                           ;main_B1.c: 69: ;;
  3855                           ;main_B1.c: 70: ;;
  3856                           ;main_B1.c: 71: if (myMain.PowerON) {
  3857  08BE  0021               	movlb	1	; select bank1
  3858  08BF  1C20               	btfss	_myMain^(0+128),0
  3859  08C0  28AC               	goto	l7911
  3860                           
  3861                           ;main_B1.c: 72: Flash_Memory_Main();
  3862  08C1  3191  219D  3188   	fcall	_Flash_Memory_Main
  3863                           
  3864                           ;main_B1.c: 74: LED_Main();
  3865  08C4  319E  26F6  3188   	fcall	_LED_Main
  3866                           
  3867                           ;main_B1.c: 75: Buzzer_Main();
  3868  08C7  3197  2766  3188   	fcall	_Buzzer_Main
  3869                           
  3870                           ;main_B1.c: 77: ;;
  3871                           ;main_B1.c: 78: Temp_Main();
  3872  08CA  319D  25F8  3188   	fcall	_Temp_Main
  3873                           
  3874                           ;main_B1.c: 79: ;;
  3875                           ;main_B1.c: 80: PowerFault_Main();
  3876  08CD  319D  25E9  3188   	fcall	_PowerFault_Main
  3877                           
  3878                           ;main_B1.c: 82: ;;
  3879                           ;main_B1.c: 83: DimmerLights_Main();
  3880  08D0  319E  2637  3188   	fcall	_DimmerLights_Main
  3881                           
  3882                           ;main_B1.c: 84: Switch_Main();
  3883  08D3  319E  261B  3188   	fcall	_Switch_Main
  3884                           
  3885                           ;main_B1.c: 85: ;;
  3886                           ;main_B1.c: 86: ;;
  3887                           ;main_B1.c: 88: RF_Main();
  3888  08D6  319D  25EF  3188   	fcall	_RF_Main
  3889                           
  3890                           ;main_B1.c: 89: DelayOff_Main();
  3891  08D9  319E  260F  3188   	fcall	_DelayOff_Main
  3892                           
  3893                           ;main_B1.c: 90: ;;
  3894  08DC  28AC               	goto	l7911
  3895  08DD                     __end_of_main:	
  3896                           ;main_B1.c: 91: }
  3897                           ;main_B1.c: 92: }
  3898                           ;main_B1.c: 110: }
  3899                           ;main_B1.c: 111: return (0);
  3900                           ;	Return value of _main is never used
  3901                           
  3902                           
  3903                           	psect	text1
  3904  1691                     __ptext1:	
  3905 ;; *************** function _my_Main *****************
  3906 ;; Defined at:
  3907 ;;		line 128 in file "../src/main_B1.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;		None
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;		None
  3912 ;; Return value:  Size  Location     Type
  3913 ;;		None               void
  3914 ;; Registers used:
  3915 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3925 ;;Total ram usage:        0 bytes
  3926 ;; Hardware stack levels used:    1
  3927 ;; Hardware stack levels required when called:    7
  3928 ;; This function calls:
  3929 ;;		_setBuz
  3930 ;;		_setRF_Enable
  3931 ;;		_setSw_Enable
  3932 ;;		_setTemp_Enable
  3933 ;; This function is called by:
  3934 ;;		_main
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           
  3939                           ;psect for function _my_Main
  3940  1691                     _my_Main:	
  3941                           
  3942                           ;main_B1.c: 130: if (myMain.PowerON == 0) {
  3943                           
  3944                           ;incstack = 0
  3945                           ; Regs used in _my_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3946  1691  0021               	movlb	1	; select bank1
  3947  1692  1820               	btfsc	_myMain^(0+128),0
  3948  1693  2EBE               	goto	l7295
  3949                           
  3950                           ;main_B1.c: 131: myMain.PowerCount++;
  3951  1694  3001               	movlw	1
  3952  1695  07A1               	addwf	(_myMain^(0+128)+1),f
  3953  1696  3000               	movlw	0
  3954  1697  3DA2               	addwfc	((_myMain+1)^(0+128)+1),f
  3955                           
  3956                           ;main_B1.c: 132: if (myMain.PowerCount == 150)
  3957  1698  3001               	movlw	1
  3958  1699  3EA0               	addlw	_myMain& (0+255)
  3959  169A  0086               	movwf	6
  3960  169B  0187               	clrf	7
  3961  169C  3F40               	moviw [0]fsr1
  3962  169D  3A96               	xorlw	150
  3963  169E  1D03               	skipz
  3964  169F  2EA2               	goto	u6805
  3965  16A0  3F41               	moviw [1]fsr1
  3966  16A1  3A00               	xorlw	0
  3967  16A2                     u6805:	
  3968  16A2  1D03               	skipz
  3969  16A3  0008               	return
  3970                           
  3971                           ;main_B1.c: 133: {
  3972                           ;main_B1.c: 134: myMain.PowerCount = 0;
  3973  16A4  01A1               	clrf	(_myMain^(0+128)+1)
  3974  16A5  01A2               	clrf	((_myMain+1)^(0+128)+1)
  3975                           
  3976                           ;main_B1.c: 135: myMain.PowerON = 1;
  3977  16A6  1420               	bsf	_myMain^(0+128),0
  3978                           
  3979                           ;main_B1.c: 138: setTemp_Enable(1);
  3980  16A7  3001               	movlw	1
  3981  16A8  319E  266C  3196   	fcall	_setTemp_Enable
  3982                           
  3983                           ;main_B1.c: 142: ;;
  3984                           ;main_B1.c: 148: setBuz(3, 50);
  3985  16AB  3032               	movlw	50
  3986  16AC  0020               	movlb	0	; select bank0
  3987  16AD  00A9               	movwf	setBuz@time
  3988  16AE  3000               	movlw	0
  3989  16AF  00AA               	movwf	setBuz@time+1
  3990  16B0  3003               	movlw	3
  3991  16B1  3189  2134  3196   	fcall	_setBuz
  3992                           
  3993                           ;main_B1.c: 149: myMain.SelfTest = 1;
  3994  16B4  0021               	movlb	1	; select bank1
  3995  16B5  1720               	bsf	_myMain^(0+128),6
  3996                           
  3997                           ;main_B1.c: 151: setSw_Enable(1);
  3998  16B6  3001               	movlw	1
  3999  16B7  319F  2763  3196   	fcall	_setSw_Enable
  4000                           
  4001                           ;main_B1.c: 154: setRF_Enable(1);
  4002  16BA  3001               	movlw	1
  4003  16BB  319F  2737         	fcall	_setRF_Enable
  4004                           
  4005                           ;main_B1.c: 158: }
  4006                           ;main_B1.c: 159: } else {
  4007  16BD  0008               	return
  4008  16BE                     l7295:	
  4009                           
  4010                           ;main_B1.c: 167: myMain.Count1++;
  4011  16BE  3001               	movlw	1
  4012  16BF  0021               	movlb	1	; select bank1
  4013  16C0  07A5               	addwf	(_myMain^(0+128)+5),f
  4014  16C1  3000               	movlw	0
  4015  16C2  3DA6               	addwfc	((_myMain+1)^(0+128)+5),f
  4016                           
  4017                           ;main_B1.c: 168: if (myMain.Count1 == 100)
  4018  16C3  3005               	movlw	5
  4019  16C4  3EA0               	addlw	_myMain& (0+255)
  4020  16C5  0086               	movwf	6
  4021  16C6  0187               	clrf	7
  4022  16C7  3F40               	moviw [0]fsr1
  4023  16C8  3A64               	xorlw	100
  4024  16C9  1D03               	skipz
  4025  16CA  2ECD               	goto	u6815
  4026  16CB  3F41               	moviw [1]fsr1
  4027  16CC  3A00               	xorlw	0
  4028  16CD                     u6815:	
  4029  16CD  1D03               	skipz
  4030  16CE  0008               	return
  4031                           
  4032                           ;main_B1.c: 169: {
  4033                           ;main_B1.c: 170: myMain.Count1 = 0;
  4034  16CF  01A5               	clrf	(_myMain^(0+128)+5)
  4035  16D0  01A6               	clrf	((_myMain+1)^(0+128)+5)
  4036                           
  4037                           ;main_B1.c: 183: if (myMain.Flag) {
  4038  16D1  1DA0               	btfss	_myMain^(0+128),3
  4039  16D2  2ED5               	goto	l2537
  4040                           
  4041                           ;main_B1.c: 184: myMain.Flag = 0;
  4042  16D3  11A0               	bcf	_myMain^(0+128),3
  4043                           
  4044                           ;main_B1.c: 193: } else {
  4045  16D4  0008               	return
  4046  16D5                     l2537:	
  4047                           
  4048                           ;main_B1.c: 194: myMain.Flag = 1;
  4049  16D5  15A0               	bsf	_myMain^(0+128),3
  4050  16D6  0008               	return
  4051  16D7                     __end_of_my_Main:	
  4052                           
  4053                           	psect	text2
  4054  1E6C                     __ptext2:	
  4055 ;; *************** function _setTemp_Enable *****************
  4056 ;; Defined at:
  4057 ;;		line 16 in file "../src/OverTemperature_B1.c"
  4058 ;; Parameters:    Size  Location     Type
  4059 ;;  command         1    wreg     unsigned char 
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;  command         1    0[BANK0 ] unsigned char 
  4062 ;; Return value:  Size  Location     Type
  4063 ;;		None               void
  4064 ;; Registers used:
  4065 ;;		wreg
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4072 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4074 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4075 ;;Total ram usage:        1 bytes
  4076 ;; Hardware stack levels used:    1
  4077 ;; Hardware stack levels required when called:    5
  4078 ;; This function calls:
  4079 ;;		Nothing
  4080 ;; This function is called by:
  4081 ;;		_my_Main
  4082 ;; This function uses a non-reentrant model
  4083 ;;
  4084                           
  4085                           
  4086                           ;psect for function _setTemp_Enable
  4087  1E6C                     _setTemp_Enable:	
  4088                           
  4089                           ;incstack = 0
  4090                           ; Regs used in _setTemp_Enable: [wreg]
  4091                           ;setTemp_Enable@command stored from wreg
  4092  1E6C  0020               	movlb	0	; select bank0
  4093  1E6D  00A0               	movwf	setTemp_Enable@command
  4094                           
  4095                           ;OverTemperature_B1.c: 17: Temp1.Enable = command;
  4096  1E6E  0820               	movf	setTemp_Enable@command,w
  4097  1E6F  0021               	movlb	1	; select bank1
  4098  1E70  1059               	bcf	_Temp1^(0+128),0
  4099  1E71  1D03               	skipz
  4100  1E72  1459               	bsf	_Temp1^(0+128),0
  4101  1E73  0008               	return
  4102  1E74                     __end_of_setTemp_Enable:	
  4103                           
  4104                           	psect	text3
  4105  1F90                     __ptext3:	
  4106 ;; *************** function _myMain_Initialization *****************
  4107 ;; Defined at:
  4108 ;;		line 116 in file "../src/main_B1.c"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;		None
  4111 ;; Auto vars:     Size  Location     Type
  4112 ;;		None
  4113 ;; Return value:  Size  Location     Type
  4114 ;;		None               void
  4115 ;; Registers used:
  4116 ;;		wreg, fsr1l, fsr1h
  4117 ;; Tracked objects:
  4118 ;;		On entry : 0/0
  4119 ;;		On exit  : 0/0
  4120 ;;		Unchanged: 0/0
  4121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4124 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4125 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4126 ;;Total ram usage:        1 bytes
  4127 ;; Hardware stack levels used:    1
  4128 ;; Hardware stack levels required when called:    5
  4129 ;; This function calls:
  4130 ;;		Nothing
  4131 ;; This function is called by:
  4132 ;;		_main
  4133 ;; This function uses a non-reentrant model
  4134 ;;
  4135                           
  4136                           
  4137                           ;psect for function _myMain_Initialization
  4138  1F90                     _myMain_Initialization:	
  4139                           
  4140                           ;main_B1.c: 118: product = &_product;
  4141                           
  4142                           ;incstack = 0
  4143                           ; Regs used in _myMain_Initialization: [wregfsr1]
  4144  1F90  30A0               	movlw	__product& (0+255)
  4145  1F91  0020               	movlb	0	; select bank0
  4146  1F92  00A0               	movwf	??_myMain_Initialization
  4147  1F93  0820               	movf	??_myMain_Initialization,w
  4148  1F94  00EF               	movwf	_product
  4149                           
  4150                           ;main_B1.c: 119: product->Data[20] = 209;
  4151  1F95  30D1               	movlw	209
  4152  1F96  00A0               	movwf	??_myMain_Initialization
  4153  1F97  086F               	movf	_product,w
  4154  1F98  3E14               	addlw	20
  4155  1F99  0086               	movwf	6
  4156  1F9A  3001               	movlw	1	; select bank2/3
  4157  1F9B  0087               	movwf	7
  4158  1F9C  0820               	movf	??_myMain_Initialization,w
  4159  1F9D  0081               	movwf	1
  4160  1F9E  0008               	return
  4161  1F9F                     __end_of_myMain_Initialization:	
  4162                           
  4163                           	psect	text4
  4164  1457                     __ptext4:	
  4165 ;; *************** function _getTemp_AD *****************
  4166 ;; Defined at:
  4167 ;;		line 33 in file "../src/OverTemperature_B1.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;  channel         1    wreg     unsigned char 
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;  channel         1    5[BANK0 ] unsigned char 
  4172 ;; Return value:  Size  Location     Type
  4173 ;;		None               void
  4174 ;; Registers used:
  4175 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4176 ;; Tracked objects:
  4177 ;;		On entry : 0/0
  4178 ;;		On exit  : 0/0
  4179 ;;		Unchanged: 0/0
  4180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4182 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4183 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4184 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4185 ;;Total ram usage:        2 bytes
  4186 ;; Hardware stack levels used:    1
  4187 ;; Hardware stack levels required when called:    7
  4188 ;; This function calls:
  4189 ;;		_getAD
  4190 ;; This function is called by:
  4191 ;;		_main
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           
  4196                           ;psect for function _getTemp_AD
  4197  1457                     _getTemp_AD:	
  4198                           
  4199                           ;incstack = 0
  4200                           ; Regs used in _getTemp_AD: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4201                           ;getTemp_AD@channel stored from wreg
  4202  1457  0020               	movlb	0	; select bank0
  4203  1458  00A5               	movwf	getTemp_AD@channel
  4204                           
  4205                           ;OverTemperature_B1.c: 34: if (Temp1.ADtoGO == 1) {
  4206  1459  0021               	movlb	1	; select bank1
  4207  145A  1D59               	btfss	_Temp1^(0+128),2
  4208  145B  0008               	return
  4209                           
  4210                           ;OverTemperature_B1.c: 35: Temp1.ADRES = getAD(channel, 0xf0);
  4211  145C  30F0               	movlw	240
  4212  145D  0020               	movlb	0	; select bank0
  4213  145E  00A4               	movwf	??_getTemp_AD
  4214  145F  0824               	movf	??_getTemp_AD,w
  4215  1460  00A0               	movwf	getAD@adcon1
  4216  1461  0825               	movf	getTemp_AD@channel,w
  4217  1462  3191  21BC  3194   	fcall	_getAD
  4218  1465  0020               	movlb	0	; select bank0
  4219  1466  0821               	movf	?_getAD+1,w
  4220  1467  0021               	movlb	1	; select bank1
  4221  1468  01E6               	clrf	((_Temp1+1)^(0+128)+12)
  4222  1469  07E6               	addwf	((_Temp1+1)^(0+128)+12),f
  4223  146A  0020               	movlb	0	; select bank0
  4224  146B  0820               	movf	?_getAD,w
  4225  146C  0021               	movlb	1	; select bank1
  4226  146D  01E5               	clrf	(_Temp1^(0+128)+12)
  4227  146E  07E5               	addwf	(_Temp1^(0+128)+12),f
  4228                           
  4229                           ;OverTemperature_B1.c: 36: if (Temp1.ADH[0] < Temp1.ADRES) {
  4230  146F  0866               	movf	((_Temp1+1)^(0+128)+12),w
  4231  1470  0262               	subwf	((_Temp1+1)^(0+128)+8),w
  4232  1471  1D03               	skipz
  4233  1472  2C75               	goto	u6755
  4234  1473  0865               	movf	(_Temp1^(0+128)+12),w
  4235  1474  0261               	subwf	(_Temp1^(0+128)+8),w
  4236  1475                     u6755:	
  4237  1475  1803               	skipnc
  4238  1476  2C7E               	goto	l7237
  4239                           
  4240                           ;OverTemperature_B1.c: 37: Temp1.ADH[0] = Temp1.ADRES;
  4241  1477  0866               	movf	((_Temp1+1)^(0+128)+12),w
  4242  1478  01E2               	clrf	((_Temp1+1)^(0+128)+8)
  4243  1479  07E2               	addwf	((_Temp1+1)^(0+128)+8),f
  4244  147A  0865               	movf	(_Temp1^(0+128)+12),w
  4245  147B  01E1               	clrf	(_Temp1^(0+128)+8)
  4246  147C  07E1               	addwf	(_Temp1^(0+128)+8),f
  4247                           
  4248                           ;OverTemperature_B1.c: 38: } else if (Temp1.ADH[1] < Temp1.ADRES) {
  4249  147D  0008               	return
  4250  147E                     l7237:	
  4251  147E  0866               	movf	((_Temp1+1)^(0+128)+12),w
  4252  147F  0264               	subwf	((_Temp1+1)^(0+128)+10),w
  4253  1480  1D03               	skipz
  4254  1481  2C84               	goto	u6765
  4255  1482  0865               	movf	(_Temp1^(0+128)+12),w
  4256  1483  0263               	subwf	(_Temp1^(0+128)+10),w
  4257  1484                     u6765:	
  4258  1484  1803               	skipnc
  4259  1485  0008               	return
  4260                           
  4261                           ;OverTemperature_B1.c: 39: Temp1.ADH[1] = Temp1.ADRES;
  4262  1486  0866               	movf	((_Temp1+1)^(0+128)+12),w
  4263  1487  01E4               	clrf	((_Temp1+1)^(0+128)+10)
  4264  1488  07E4               	addwf	((_Temp1+1)^(0+128)+10),f
  4265  1489  0865               	movf	(_Temp1^(0+128)+12),w
  4266  148A  01E3               	clrf	(_Temp1^(0+128)+10)
  4267  148B  07E3               	addwf	(_Temp1^(0+128)+10),f
  4268  148C  0008               	return
  4269  148D                     __end_of_getTemp_AD:	
  4270                           
  4271                           	psect	text5
  4272  12EF                     __ptext5:	
  4273 ;; *************** function _getPowerFault_AD *****************
  4274 ;; Defined at:
  4275 ;;		line 45 in file "../src/PowerFault_B1.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;  channel         1    wreg     unsigned char 
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;  channel         1    5[BANK0 ] unsigned char 
  4280 ;; Return value:  Size  Location     Type
  4281 ;;		None               void
  4282 ;; Registers used:
  4283 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4290 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4291 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4292 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4293 ;;Total ram usage:        2 bytes
  4294 ;; Hardware stack levels used:    1
  4295 ;; Hardware stack levels required when called:    7
  4296 ;; This function calls:
  4297 ;;		_getAD
  4298 ;; This function is called by:
  4299 ;;		_main
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303                           
  4304                           ;psect for function _getPowerFault_AD
  4305  12EF                     _getPowerFault_AD:	
  4306                           
  4307                           ;incstack = 0
  4308                           ; Regs used in _getPowerFault_AD: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4309                           ;getPowerFault_AD@channel stored from wreg
  4310  12EF  0020               	movlb	0	; select bank0
  4311  12F0  00A5               	movwf	getPowerFault_AD@channel
  4312                           
  4313                           ;PowerFault_B1.c: 46: if (PF1.ADtoGO == 1) {
  4314  12F1  0021               	movlb	1	; select bank1
  4315  12F2  1DBE               	btfss	_PF1^(0+128),3
  4316  12F3  0008               	return
  4317                           
  4318                           ;PowerFault_B1.c: 47: PF1.ADRES = getAD(channel, 0xf0);
  4319  12F4  30F0               	movlw	240
  4320  12F5  0020               	movlb	0	; select bank0
  4321  12F6  00A4               	movwf	??_getPowerFault_AD
  4322  12F7  0824               	movf	??_getPowerFault_AD,w
  4323  12F8  00A0               	movwf	getAD@adcon1
  4324  12F9  0825               	movf	getPowerFault_AD@channel,w
  4325  12FA  3191  21BC  3192   	fcall	_getAD
  4326  12FD  0020               	movlb	0	; select bank0
  4327  12FE  0821               	movf	?_getAD+1,w
  4328  12FF  0021               	movlb	1	; select bank1
  4329  1300  01C5               	clrf	((_PF1+1)^(0+128)+6)
  4330  1301  07C5               	addwf	((_PF1+1)^(0+128)+6),f
  4331  1302  0020               	movlb	0	; select bank0
  4332  1303  0820               	movf	?_getAD,w
  4333  1304  0021               	movlb	1	; select bank1
  4334  1305  01C4               	clrf	(_PF1^(0+128)+6)
  4335  1306  07C4               	addwf	(_PF1^(0+128)+6),f
  4336                           
  4337                           ;PowerFault_B1.c: 48: if (PF1.AD < PF1.ADRES) {
  4338  1307  0845               	movf	((_PF1+1)^(0+128)+6),w
  4339  1308  0243               	subwf	((_PF1+1)^(0+128)+4),w
  4340  1309  1D03               	skipz
  4341  130A  2B0D               	goto	u6785
  4342  130B  0844               	movf	(_PF1^(0+128)+6),w
  4343  130C  0242               	subwf	(_PF1^(0+128)+4),w
  4344  130D                     u6785:	
  4345  130D  1803               	skipnc
  4346  130E  0008               	return
  4347                           
  4348                           ;PowerFault_B1.c: 49: PF1.AD = PF1.ADRES;
  4349  130F  0845               	movf	((_PF1+1)^(0+128)+6),w
  4350  1310  01C3               	clrf	((_PF1+1)^(0+128)+4)
  4351  1311  07C3               	addwf	((_PF1+1)^(0+128)+4),f
  4352  1312  0844               	movf	(_PF1^(0+128)+6),w
  4353  1313  01C2               	clrf	(_PF1^(0+128)+4)
  4354  1314  07C2               	addwf	(_PF1^(0+128)+4),f
  4355  1315  0008               	return
  4356  1316                     __end_of_getPowerFault_AD:	
  4357                           
  4358                           	psect	text6
  4359  11BC                     __ptext6:	
  4360 ;; *************** function _getAD *****************
  4361 ;; Defined at:
  4362 ;;		line 343 in file "../src/MCU_B1.c"
  4363 ;; Parameters:    Size  Location     Type
  4364 ;;  adcon0          1    wreg     unsigned char 
  4365 ;;  adcon1          1    0[BANK0 ] unsigned char 
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;  adcon0          1    3[BANK0 ] unsigned char 
  4368 ;; Return value:  Size  Location     Type
  4369 ;;                  2    0[BANK0 ] int 
  4370 ;; Registers used:
  4371 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4372 ;; Tracked objects:
  4373 ;;		On entry : 0/0
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4377 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4378 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4380 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4381 ;;Total ram usage:        4 bytes
  4382 ;; Hardware stack levels used:    1
  4383 ;; Hardware stack levels required when called:    6
  4384 ;; This function calls:
  4385 ;;		_Timeout_Counter
  4386 ;;		_set_TimeoutCleared
  4387 ;; This function is called by:
  4388 ;;		_getTemp_AD
  4389 ;;		_getPowerFault_AD
  4390 ;; This function uses a non-reentrant model
  4391 ;;
  4392                           
  4393                           
  4394                           ;psect for function _getAD
  4395  11BC                     _getAD:	
  4396                           
  4397                           ;incstack = 0
  4398                           ; Regs used in _getAD: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4399                           ;getAD@adcon0 stored from wreg
  4400  11BC  0020               	movlb	0	; select bank0
  4401  11BD  00A3               	movwf	getAD@adcon0
  4402                           
  4403                           ;MCU_B1.c: 344: ADCON0 = adcon0;
  4404  11BE  0823               	movf	getAD@adcon0,w
  4405  11BF  0021               	movlb	1	; select bank1
  4406  11C0  009D               	movwf	29	;volatile
  4407                           
  4408                           ;MCU_B1.c: 345: ADCON1 = adcon1;
  4409  11C1  0020               	movlb	0	; select bank0
  4410  11C2  0820               	movf	getAD@adcon1,w
  4411  11C3  0021               	movlb	1	; select bank1
  4412  11C4  009E               	movwf	30	;volatile
  4413                           
  4414                           ;MCU_B1.c: 346: GO_nDONE = 1;
  4415  11C5  149D               	bsf	29,1	;volatile
  4416                           
  4417                           ;MCU_B1.c: 347: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  4418  11C6  29CA               	goto	l6749
  4419  11C7                     l6747:	
  4420                           
  4421                           ;MCU_B1.c: 348: Timeout_Counter();
  4422  11C7  3190  20BC  3191   	fcall	_Timeout_Counter
  4423  11CA                     l6749:	
  4424  11CA  0021               	movlb	1	; select bank1
  4425  11CB  1C9D               	btfss	29,1	;volatile
  4426  11CC  29CF               	goto	l6753
  4427  11CD  1D2F               	btfss	(_myMain^(0+128)+15),2
  4428  11CE  29C7               	goto	l6747
  4429  11CF                     l6753:	
  4430                           
  4431                           ;MCU_B1.c: 349: };
  4432                           ;MCU_B1.c: 350: set_TimeoutCleared();
  4433  11CF  319E  261F         	fcall	_set_TimeoutCleared
  4434                           
  4435                           ;MCU_B1.c: 351: return ((ADRESH*256)+ADRESL);
  4436  11D1  0021               	movlb	1	; select bank1
  4437  11D2  081C               	movf	28,w	;volatile
  4438  11D3  0020               	movlb	0	; select bank0
  4439  11D4  01A1               	clrf	?_getAD+1
  4440  11D5  07A1               	addwf	?_getAD+1,f
  4441  11D6  0021               	movlb	1	; select bank1
  4442  11D7  081B               	movf	27,w	;volatile
  4443  11D8  0020               	movlb	0	; select bank0
  4444  11D9  01A0               	clrf	?_getAD
  4445  11DA  07A0               	addwf	?_getAD,f
  4446  11DB  0008               	return
  4447  11DC                     __end_of_getAD:	
  4448                           
  4449                           	psect	text7
  4450  1DF8                     __ptext7:	
  4451 ;; *************** function _Temp_Main *****************
  4452 ;; Defined at:
  4453 ;;		line 50 in file "../src/OverTemperature_B1.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;		None
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;		None
  4458 ;; Return value:  Size  Location     Type
  4459 ;;		None               void
  4460 ;; Registers used:
  4461 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4462 ;; Tracked objects:
  4463 ;;		On entry : 0/0
  4464 ;;		On exit  : 0/0
  4465 ;;		Unchanged: 0/0
  4466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4471 ;;Total ram usage:        0 bytes
  4472 ;; Hardware stack levels used:    1
  4473 ;; Hardware stack levels required when called:   11
  4474 ;; This function calls:
  4475 ;;		_setTemp_Main
  4476 ;; This function is called by:
  4477 ;;		_main
  4478 ;; This function uses a non-reentrant model
  4479 ;;
  4480                           
  4481                           
  4482                           ;psect for function _Temp_Main
  4483  1DF8                     _Temp_Main:	
  4484                           
  4485                           ;OverTemperature_B1.c: 52: setTemp_Main();
  4486                           
  4487                           ;incstack = 0
  4488                           ; Regs used in _Temp_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4489  1DF8  318E  26F3         	fcall	_setTemp_Main
  4490  1DFA  0008               	return
  4491  1DFB                     __end_of_Temp_Main:	
  4492                           
  4493                           	psect	text8
  4494  0EF3                     __ptext8:	
  4495 ;; *************** function _setTemp_Main *****************
  4496 ;; Defined at:
  4497 ;;		line 57 in file "../src/OverTemperature_B1.c"
  4498 ;; Parameters:    Size  Location     Type
  4499 ;;		None
  4500 ;; Auto vars:     Size  Location     Type
  4501 ;;		None
  4502 ;; Return value:  Size  Location     Type
  4503 ;;		None               void
  4504 ;; Registers used:
  4505 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4506 ;; Tracked objects:
  4507 ;;		On entry : 0/0
  4508 ;;		On exit  : 0/0
  4509 ;;		Unchanged: 0/0
  4510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4513 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4514 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4515 ;;Total ram usage:        1 bytes
  4516 ;; Hardware stack levels used:    1
  4517 ;; Hardware stack levels required when called:   10
  4518 ;; This function calls:
  4519 ;;		_getPF_Safe
  4520 ;;		_setOverTemp_Exceptions
  4521 ;; This function is called by:
  4522 ;;		_Temp_Main
  4523 ;; This function uses a non-reentrant model
  4524 ;;
  4525                           
  4526                           
  4527                           ;psect for function _setTemp_Main
  4528  0EF3                     _setTemp_Main:	
  4529                           
  4530                           ;OverTemperature_B1.c: 58: if (Temp1.Enable == 1) {
  4531                           
  4532                           ;incstack = 0
  4533                           ; Regs used in _setTemp_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4534  0EF3  0021               	movlb	1	; select bank1
  4535  0EF4  1C59               	btfss	_Temp1^(0+128),0
  4536  0EF5  0008               	return
  4537                           
  4538                           ;OverTemperature_B1.c: 59: if (Temp1.ADtoGO == 0) {
  4539  0EF6  1959               	btfsc	_Temp1^(0+128),2
  4540  0EF7  2F15               	goto	l7705
  4541                           
  4542                           ;OverTemperature_B1.c: 60: Temp1.Time++;
  4543  0EF8  3001               	movlw	1
  4544  0EF9  07DA               	addwf	(_Temp1^(0+128)+1),f
  4545  0EFA  3000               	movlw	0
  4546  0EFB  3DDB               	addwfc	((_Temp1+1)^(0+128)+1),f
  4547                           
  4548                           ;OverTemperature_B1.c: 62: {
  4549                           ;OverTemperature_B1.c: 63: if (1 == 1 && getPF_Safe() == 1) {
  4550  0EFC  3001               	movlw	1
  4551  0EFD  025B               	subwf	((_Temp1+1)^(0+128)+1),w
  4552  0EFE  30F4               	movlw	244
  4553  0EFF  1903               	skipnz
  4554  0F00  025A               	subwf	(_Temp1^(0+128)+1),w
  4555  0F01  1C03               	skipc
  4556  0F02  0008               	return
  4557  0F03  319E  2664  318E   	fcall	_getPF_Safe
  4558  0F06  3A01               	xorlw	1
  4559  0F07  1D03               	skipz
  4560  0F08  2F0F               	goto	l7703
  4561                           
  4562                           ;OverTemperature_B1.c: 64: Temp1.Time = 0;
  4563  0F09  0021               	movlb	1	; select bank1
  4564  0F0A  01DA               	clrf	(_Temp1^(0+128)+1)
  4565  0F0B  01DB               	clrf	((_Temp1+1)^(0+128)+1)
  4566                           
  4567                           ;OverTemperature_B1.c: 65: Temp1.ADtoGO = 1;
  4568  0F0C  1559               	bsf	_Temp1^(0+128),2
  4569                           
  4570                           ;OverTemperature_B1.c: 66: Temp1.Safe = 0;
  4571  0F0D  1259               	bcf	_Temp1^(0+128),4
  4572                           
  4573                           ;OverTemperature_B1.c: 68: } else {
  4574  0F0E  0008               	return
  4575  0F0F                     l7703:	
  4576                           
  4577                           ;OverTemperature_B1.c: 69: Temp1.Time = 1000;
  4578  0F0F  30E8               	movlw	232
  4579  0F10  0021               	movlb	1	; select bank1
  4580  0F11  00DA               	movwf	(_Temp1^(0+128)+1)
  4581  0F12  3003               	movlw	3
  4582  0F13  00DB               	movwf	(_Temp1^(0+128)+2)
  4583                           
  4584                           ;OverTemperature_B1.c: 70: }
  4585                           ;OverTemperature_B1.c: 71: }
  4586                           ;OverTemperature_B1.c: 72: } else {
  4587  0F14  0008               	return
  4588  0F15                     l7705:	
  4589                           
  4590                           ;OverTemperature_B1.c: 73: Temp1.Time++;
  4591  0F15  3001               	movlw	1
  4592  0F16  07DA               	addwf	(_Temp1^(0+128)+1),f
  4593  0F17  3000               	movlw	0
  4594  0F18  3DDB               	addwfc	((_Temp1+1)^(0+128)+1),f
  4595                           
  4596                           ;OverTemperature_B1.c: 74: if (Temp1.Time >= 4) {
  4597  0F19  3000               	movlw	0
  4598  0F1A  025B               	subwf	((_Temp1+1)^(0+128)+1),w
  4599  0F1B  3004               	movlw	4
  4600  0F1C  1903               	skipnz
  4601  0F1D  025A               	subwf	(_Temp1^(0+128)+1),w
  4602  0F1E  1C03               	skipc
  4603  0F1F  0008               	return
  4604                           
  4605                           ;OverTemperature_B1.c: 75: Temp1.Time = 0;
  4606  0F20  01DA               	clrf	(_Temp1^(0+128)+1)
  4607  0F21  01DB               	clrf	((_Temp1+1)^(0+128)+1)
  4608                           
  4609                           ;OverTemperature_B1.c: 76: Temp1.ADtoGO = 0;
  4610  0F22  1159               	bcf	_Temp1^(0+128),2
  4611                           
  4612                           ;OverTemperature_B1.c: 77: Temp1.AD = Temp1.ADH[1];
  4613  0F23  0864               	movf	((_Temp1+1)^(0+128)+10),w
  4614  0F24  01E0               	clrf	((_Temp1+1)^(0+128)+6)
  4615  0F25  07E0               	addwf	((_Temp1+1)^(0+128)+6),f
  4616  0F26  0863               	movf	(_Temp1^(0+128)+10),w
  4617  0F27  01DF               	clrf	(_Temp1^(0+128)+6)
  4618  0F28  07DF               	addwf	(_Temp1^(0+128)+6),f
  4619                           
  4620                           ;OverTemperature_B1.c: 78: if (Temp1.ERROR == 1) {
  4621  0F29  1CD9               	btfss	_Temp1^(0+128),1
  4622  0F2A  2F42               	goto	l7727
  4623                           
  4624                           ;OverTemperature_B1.c: 79: if (Temp1.AD >= 600) {
  4625  0F2B  3002               	movlw	2
  4626  0F2C  0260               	subwf	((_Temp1+1)^(0+128)+6),w
  4627  0F2D  3058               	movlw	88
  4628  0F2E  1903               	skipnz
  4629  0F2F  025F               	subwf	(_Temp1^(0+128)+6),w
  4630  0F30  1C03               	skipc
  4631  0F31  2F59               	goto	l7737
  4632                           
  4633                           ;OverTemperature_B1.c: 80: Temp1.Count++;
  4634  0F32  3001               	movlw	1
  4635  0F33  0020               	movlb	0	; select bank0
  4636  0F34  00B1               	movwf	??_setTemp_Main
  4637  0F35  0831               	movf	??_setTemp_Main,w
  4638  0F36  0021               	movlb	1	; select bank1
  4639  0F37  07DC               	addwf	(_Temp1^(0+128)+3),f
  4640                           
  4641                           ;OverTemperature_B1.c: 81: if (Temp1.Count >= 3) {
  4642  0F38  3003               	movlw	3
  4643  0F39  025C               	subwf	(_Temp1^(0+128)+3),w
  4644  0F3A  1C03               	skipc
  4645  0F3B  2F5B               	goto	l7739
  4646                           
  4647                           ;OverTemperature_B1.c: 82: Temp1.Count = 0;
  4648  0F3C  01DC               	clrf	(_Temp1^(0+128)+3)
  4649                           
  4650                           ;OverTemperature_B1.c: 83: setOverTemp_Exceptions(0);
  4651  0F3D  3000               	movlw	0
  4652  0F3E  3196  264B  318E   	fcall	_setOverTemp_Exceptions
  4653                           
  4654                           ;OverTemperature_B1.c: 84: }
  4655                           ;OverTemperature_B1.c: 85: } else {
  4656  0F41  2F5B               	goto	l7739
  4657  0F42                     l7727:	
  4658                           ;OverTemperature_B1.c: 87: }
  4659                           ;OverTemperature_B1.c: 88: } else {
  4660                           
  4661                           ;OverTemperature_B1.c: 86: Temp1.Count = 0;
  4662                           
  4663                           
  4664                           ;OverTemperature_B1.c: 89: if (Temp1.AD <= 550) {
  4665  0F42  3002               	movlw	2
  4666  0F43  0260               	subwf	((_Temp1+1)^(0+128)+6),w
  4667  0F44  3027               	movlw	39
  4668  0F45  1903               	skipnz
  4669  0F46  025F               	subwf	(_Temp1^(0+128)+6),w
  4670  0F47  1803               	skipnc
  4671  0F48  2F59               	goto	l7737
  4672                           
  4673                           ;OverTemperature_B1.c: 90: Temp1.Count++;
  4674  0F49  3001               	movlw	1
  4675  0F4A  0020               	movlb	0	; select bank0
  4676  0F4B  00B1               	movwf	??_setTemp_Main
  4677  0F4C  0831               	movf	??_setTemp_Main,w
  4678  0F4D  0021               	movlb	1	; select bank1
  4679  0F4E  07DC               	addwf	(_Temp1^(0+128)+3),f
  4680                           
  4681                           ;OverTemperature_B1.c: 91: if (Temp1.Count >= 3) {
  4682  0F4F  3003               	movlw	3
  4683  0F50  025C               	subwf	(_Temp1^(0+128)+3),w
  4684  0F51  1C03               	skipc
  4685  0F52  2F5B               	goto	l7739
  4686                           
  4687                           ;OverTemperature_B1.c: 92: Temp1.Count = 0;
  4688  0F53  01DC               	clrf	(_Temp1^(0+128)+3)
  4689                           
  4690                           ;OverTemperature_B1.c: 93: setOverTemp_Exceptions(1);
  4691  0F54  3001               	movlw	1
  4692  0F55  3196  264B  318E   	fcall	_setOverTemp_Exceptions
  4693                           
  4694                           ;OverTemperature_B1.c: 94: }
  4695                           ;OverTemperature_B1.c: 95: } else {
  4696  0F58  2F5B               	goto	l7739
  4697  0F59                     l7737:	
  4698                           
  4699                           ;OverTemperature_B1.c: 96: Temp1.Count = 0;
  4700  0F59  0021               	movlb	1	; select bank1
  4701  0F5A  01DC               	clrf	(_Temp1^(0+128)+3)
  4702  0F5B                     l7739:	
  4703                           
  4704                           ;OverTemperature_B1.c: 97: }
  4705                           ;OverTemperature_B1.c: 98: }
  4706                           ;OverTemperature_B1.c: 99: if (Temp1.ERROR == 0) {
  4707  0F5B  0021               	movlb	1	; select bank1
  4708  0F5C  1CD9               	btfss	_Temp1^(0+128),1
  4709                           
  4710                           ;OverTemperature_B1.c: 100: Temp1.Safe = 1;
  4711  0F5D  1659               	bsf	_Temp1^(0+128),4
  4712                           
  4713                           ;OverTemperature_B1.c: 101: }
  4714                           ;OverTemperature_B1.c: 102: product->Data[24]=Temp1.AD >> 8;
  4715  0F5E  0860               	movf	((_Temp1+1)^(0+128)+6),w
  4716  0F5F  0020               	movlb	0	; select bank0
  4717  0F60  00B1               	movwf	??_setTemp_Main
  4718  0F61  086F               	movf	_product,w
  4719  0F62  3E18               	addlw	24
  4720  0F63  0086               	movwf	6
  4721  0F64  3001               	movlw	1	; select bank2/3
  4722  0F65  0087               	movwf	7
  4723  0F66  0831               	movf	??_setTemp_Main,w
  4724  0F67  0081               	movwf	1
  4725                           
  4726                           ;OverTemperature_B1.c: 103: product->Data[25]=Temp1.AD;
  4727  0F68  0021               	movlb	1	; select bank1
  4728  0F69  085F               	movf	(_Temp1^(0+128)+6),w
  4729  0F6A  0020               	movlb	0	; select bank0
  4730  0F6B  00B1               	movwf	??_setTemp_Main
  4731  0F6C  086F               	movf	_product,w
  4732  0F6D  3E19               	addlw	25
  4733  0F6E  0086               	movwf	6
  4734  0F6F  3001               	movlw	1	; select bank2/3
  4735  0F70  0087               	movwf	7
  4736  0F71  0831               	movf	??_setTemp_Main,w
  4737  0F72  0081               	movwf	1
  4738                           
  4739                           ;OverTemperature_B1.c: 106: Temp1.ADH[0] = 0;
  4740  0F73  0021               	movlb	1	; select bank1
  4741  0F74  01E1               	clrf	(_Temp1^(0+128)+8)
  4742  0F75  01E2               	clrf	((_Temp1+1)^(0+128)+8)
  4743                           
  4744                           ;OverTemperature_B1.c: 107: Temp1.ADH[1] = 0;
  4745  0F76  01E3               	clrf	(_Temp1^(0+128)+10)
  4746  0F77  01E4               	clrf	((_Temp1+1)^(0+128)+10)
  4747  0F78  0008               	return
  4748  0F79                     __end_of_setTemp_Main:	
  4749                           
  4750                           	psect	text9
  4751  164B                     __ptext9:	
  4752 ;; *************** function _setOverTemp_Exceptions *****************
  4753 ;; Defined at:
  4754 ;;		line 114 in file "../src/OverTemperature_B1.c"
  4755 ;; Parameters:    Size  Location     Type
  4756 ;;  command         1    wreg     unsigned char 
  4757 ;; Auto vars:     Size  Location     Type
  4758 ;;  command         1   16[BANK0 ] unsigned char 
  4759 ;;  i               1   15[BANK0 ] unsigned char 
  4760 ;; Return value:  Size  Location     Type
  4761 ;;		None               void
  4762 ;; Registers used:
  4763 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4764 ;; Tracked objects:
  4765 ;;		On entry : 0/0
  4766 ;;		On exit  : 0/0
  4767 ;;		Unchanged: 0/0
  4768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4770 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4771 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4772 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4773 ;;Total ram usage:        3 bytes
  4774 ;; Hardware stack levels used:    1
  4775 ;; Hardware stack levels required when called:    9
  4776 ;; This function calls:
  4777 ;;		_DimmerLights_Exceptions
  4778 ;;		_setBuz
  4779 ;;		_setLED
  4780 ;;		_setRF_Enable
  4781 ;;		_setSw_Enable
  4782 ;; This function is called by:
  4783 ;;		_setTemp_Main
  4784 ;; This function uses a non-reentrant model
  4785 ;;
  4786                           
  4787                           
  4788                           ;psect for function _setOverTemp_Exceptions
  4789  164B                     _setOverTemp_Exceptions:	
  4790                           
  4791                           ;incstack = 0
  4792                           ; Regs used in _setOverTemp_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  4793                           ;setOverTemp_Exceptions@command stored from wreg
  4794  164B  0020               	movlb	0	; select bank0
  4795  164C  00B0               	movwf	setOverTemp_Exceptions@command
  4796                           
  4797                           ;OverTemperature_B1.c: 115: char i = command == 1 ? 0 : 1;
  4798  164D  0830               	movf	setOverTemp_Exceptions@command,w
  4799  164E  3A01               	xorlw	1
  4800  164F  3000               	movlw	0
  4801  1650  1D03               	skipz
  4802  1651  3001               	movlw	1
  4803  1652  00AE               	movwf	??_setOverTemp_Exceptions
  4804  1653  082E               	movf	??_setOverTemp_Exceptions,w
  4805  1654  00AF               	movwf	setOverTemp_Exceptions@i
  4806                           
  4807                           ;OverTemperature_B1.c: 116: Temp1.ERROR = command;
  4808  1655  0830               	movf	setOverTemp_Exceptions@command,w
  4809  1656  0021               	movlb	1	; select bank1
  4810  1657  10D9               	bcf	_Temp1^(0+128),1
  4811  1658  1D03               	skipz
  4812  1659  14D9               	bsf	_Temp1^(0+128),1
  4813                           
  4814                           ;OverTemperature_B1.c: 117: Temp1.Safe = i;
  4815  165A  0020               	movlb	0	; select bank0
  4816  165B  082F               	movf	setOverTemp_Exceptions@i,w
  4817  165C  0021               	movlb	1	; select bank1
  4818  165D  1259               	bcf	_Temp1^(0+128),4
  4819  165E  1D03               	skipz
  4820  165F  1659               	bsf	_Temp1^(0+128),4
  4821                           
  4822                           ;OverTemperature_B1.c: 118: if (command == 1) {
  4823  1660  0020               	movlb	0	; select bank0
  4824  1661  0830               	movf	setOverTemp_Exceptions@command,w
  4825  1662  3A01               	xorlw	1
  4826  1663  1D03               	skipz
  4827  1664  2E71               	goto	l7583
  4828                           
  4829                           ;OverTemperature_B1.c: 119: DimmerLights_Exceptions(1);
  4830  1665  3001               	movlw	1
  4831  1666  3195  253D  3196   	fcall	_DimmerLights_Exceptions
  4832                           
  4833                           ;OverTemperature_B1.c: 121: setLED(2, 1);
  4834  1669  0020               	movlb	0	; select bank0
  4835  166A  01A1               	clrf	setLED@command
  4836  166B  0AA1               	incf	setLED@command,f
  4837  166C  3002               	movlw	2
  4838  166D  318B  2305  3196   	fcall	_setLED
  4839                           
  4840                           ;OverTemperature_B1.c: 123: } else if (command == 0) {
  4841  1670  2E7D               	goto	l7587
  4842  1671                     l7583:	
  4843  1671  0020               	movlb	0	; select bank0
  4844  1672  08B0               	movf	setOverTemp_Exceptions@command,f
  4845  1673  1D03               	skipz
  4846  1674  2E7D               	goto	l7587
  4847                           
  4848                           ;OverTemperature_B1.c: 124: setBuz(2, 100);
  4849  1675  3064               	movlw	100
  4850  1676  00A9               	movwf	setBuz@time
  4851  1677  3000               	movlw	0
  4852  1678  00AA               	movwf	setBuz@time+1
  4853  1679  3002               	movlw	2
  4854  167A  3189  2134  3196   	fcall	_setBuz
  4855  167D                     l7587:	
  4856                           
  4857                           ;OverTemperature_B1.c: 125: }
  4858                           ;OverTemperature_B1.c: 128: setLED(99, command + 10);
  4859  167D  0020               	movlb	0	; select bank0
  4860  167E  0830               	movf	setOverTemp_Exceptions@command,w
  4861  167F  3E0A               	addlw	10
  4862  1680  00AE               	movwf	??_setOverTemp_Exceptions
  4863  1681  082E               	movf	??_setOverTemp_Exceptions,w
  4864  1682  00A1               	movwf	setLED@command
  4865  1683  3063               	movlw	99
  4866  1684  318B  2305  3196   	fcall	_setLED
  4867                           
  4868                           ;OverTemperature_B1.c: 130: setSw_Enable(i);
  4869  1687  0020               	movlb	0	; select bank0
  4870  1688  082F               	movf	setOverTemp_Exceptions@i,w
  4871  1689  319F  2763  3196   	fcall	_setSw_Enable
  4872                           
  4873                           ;OverTemperature_B1.c: 132: setRF_Enable(i);
  4874  168C  0020               	movlb	0	; select bank0
  4875  168D  082F               	movf	setOverTemp_Exceptions@i,w
  4876  168E  319F  2737         	fcall	_setRF_Enable
  4877  1690  0008               	return
  4878  1691                     __end_of_setOverTemp_Exceptions:	
  4879                           
  4880                           	psect	text10
  4881  1E64                     __ptext10:	
  4882 ;; *************** function _getPF_Safe *****************
  4883 ;; Defined at:
  4884 ;;		line 34 in file "../src/PowerFault_B1.c"
  4885 ;; Parameters:    Size  Location     Type
  4886 ;;		None
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;  i               1    0[BANK0 ] unsigned char 
  4889 ;; Return value:  Size  Location     Type
  4890 ;;                  1    wreg      unsigned char 
  4891 ;; Registers used:
  4892 ;;		wreg, status,2
  4893 ;; Tracked objects:
  4894 ;;		On entry : 0/0
  4895 ;;		On exit  : 0/0
  4896 ;;		Unchanged: 0/0
  4897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4899 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4901 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4902 ;;Total ram usage:        1 bytes
  4903 ;; Hardware stack levels used:    1
  4904 ;; Hardware stack levels required when called:    5
  4905 ;; This function calls:
  4906 ;;		Nothing
  4907 ;; This function is called by:
  4908 ;;		_setTemp_Main
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912                           
  4913                           ;psect for function _getPF_Safe
  4914  1E64                     _getPF_Safe:	
  4915                           
  4916                           ;PowerFault_B1.c: 35: char i = PF1.Safe;
  4917                           
  4918                           ;incstack = 0
  4919                           ; Regs used in _getPF_Safe: [wreg+status,2]
  4920  1E64  3000               	movlw	0
  4921  1E65  0021               	movlb	1	; select bank1
  4922  1E66  193E               	btfsc	_PF1^(0+128),2
  4923  1E67  3001               	movlw	1
  4924  1E68  0020               	movlb	0	; select bank0
  4925  1E69  00A0               	movwf	getPF_Safe@i
  4926                           
  4927                           ;PowerFault_B1.c: 36: return i;
  4928  1E6A  0820               	movf	getPF_Safe@i,w
  4929  1E6B  0008               	return
  4930  1E6C                     __end_of_getPF_Safe:	
  4931                           
  4932                           	psect	text11
  4933  1DF5                     __ptext11:	
  4934 ;; *************** function _Temp_Initialization *****************
  4935 ;; Defined at:
  4936 ;;		line 9 in file "../src/OverTemperature_B1.c"
  4937 ;; Parameters:    Size  Location     Type
  4938 ;;		None
  4939 ;; Auto vars:     Size  Location     Type
  4940 ;;		None
  4941 ;; Return value:  Size  Location     Type
  4942 ;;		None               void
  4943 ;; Registers used:
  4944 ;;		status,2, status,0, pclath, cstack
  4945 ;; Tracked objects:
  4946 ;;		On entry : 0/0
  4947 ;;		On exit  : 0/0
  4948 ;;		Unchanged: 0/0
  4949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4954 ;;Total ram usage:        0 bytes
  4955 ;; Hardware stack levels used:    1
  4956 ;; Hardware stack levels required when called:    6
  4957 ;; This function calls:
  4958 ;;		_setTemp_Initialization
  4959 ;; This function is called by:
  4960 ;;		_main
  4961 ;; This function uses a non-reentrant model
  4962 ;;
  4963                           
  4964                           
  4965                           ;psect for function _Temp_Initialization
  4966  1DF5                     _Temp_Initialization:	
  4967                           
  4968                           ;OverTemperature_B1.c: 11: setTemp_Initialization();
  4969                           
  4970                           ;incstack = 0
  4971                           ; Regs used in _Temp_Initialization: [status,2+status,0+pclath+cstack]
  4972  1DF5  319D  25F2         	fcall	_setTemp_Initialization
  4973  1DF7  0008               	return
  4974  1DF8                     __end_of_Temp_Initialization:	
  4975                           
  4976                           	psect	text12
  4977  1DF2                     __ptext12:	
  4978 ;; *************** function _setTemp_Initialization *****************
  4979 ;; Defined at:
  4980 ;;		line 45 in file "../src/OverTemperature_B1.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;		None
  4983 ;; Auto vars:     Size  Location     Type
  4984 ;;		None
  4985 ;; Return value:  Size  Location     Type
  4986 ;;		None               void
  4987 ;; Registers used:
  4988 ;;		None
  4989 ;; Tracked objects:
  4990 ;;		On entry : 0/0
  4991 ;;		On exit  : 0/0
  4992 ;;		Unchanged: 0/0
  4993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4998 ;;Total ram usage:        0 bytes
  4999 ;; Hardware stack levels used:    1
  5000 ;; Hardware stack levels required when called:    5
  5001 ;; This function calls:
  5002 ;;		Nothing
  5003 ;; This function is called by:
  5004 ;;		_Temp_Initialization
  5005 ;; This function uses a non-reentrant model
  5006 ;;
  5007                           
  5008                           
  5009                           ;psect for function _setTemp_Initialization
  5010  1DF2                     _setTemp_Initialization:	
  5011                           
  5012                           ;OverTemperature_B1.c: 46: Temp1.Safe = 1;
  5013                           
  5014                           ;incstack = 0
  5015                           ; Regs used in _setTemp_Initialization: []
  5016  1DF2  0021               	movlb	1	; select bank1
  5017  1DF3  1659               	bsf	_Temp1^(0+128),4
  5018  1DF4  0008               	return
  5019  1DF5                     __end_of_setTemp_Initialization:	
  5020                           
  5021                           	psect	text13
  5022  1E1B                     __ptext13:	
  5023 ;; *************** function _Switch_Main *****************
  5024 ;; Defined at:
  5025 ;;		line 67 in file "../src/Switch_B1.c"
  5026 ;; Parameters:    Size  Location     Type
  5027 ;;		None
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;		None
  5030 ;; Return value:  Size  Location     Type
  5031 ;;		None               void
  5032 ;; Registers used:
  5033 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5034 ;; Tracked objects:
  5035 ;;		On entry : 0/0
  5036 ;;		On exit  : 0/0
  5037 ;;		Unchanged: 0/0
  5038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5043 ;;Total ram usage:        0 bytes
  5044 ;; Hardware stack levels used:    1
  5045 ;; Hardware stack levels required when called:   11
  5046 ;; This function calls:
  5047 ;;		_setSw_Main
  5048 ;; This function is called by:
  5049 ;;		_main
  5050 ;; This function uses a non-reentrant model
  5051 ;;
  5052                           
  5053                           
  5054                           ;psect for function _Switch_Main
  5055  1E1B                     _Switch_Main:	
  5056                           
  5057                           ;Switch_B1.c: 69: setSw_Main(1);
  5058                           
  5059                           ;incstack = 0
  5060                           ; Regs used in _Switch_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5061  1E1B  3001               	movlw	1
  5062  1E1C  3181  21F9         	fcall	_setSw_Main
  5063  1E1E  0008               	return
  5064  1E1F                     __end_of_Switch_Main:	
  5065                           
  5066                           	psect	text14
  5067  01F9                     __ptext14:	
  5068 ;; *************** function _setSw_Main *****************
  5069 ;; Defined at:
  5070 ;;		line 117 in file "../src/Switch_B1.c"
  5071 ;; Parameters:    Size  Location     Type
  5072 ;;  sw              1    wreg     unsigned char 
  5073 ;; Auto vars:     Size  Location     Type
  5074 ;;  sw              1   72[BANK0 ] unsigned char 
  5075 ;; Return value:  Size  Location     Type
  5076 ;;		None               void
  5077 ;; Registers used:
  5078 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5079 ;; Tracked objects:
  5080 ;;		On entry : 0/0
  5081 ;;		On exit  : 0/0
  5082 ;;		Unchanged: 0/0
  5083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5085 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5086 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5087 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5088 ;;Total ram usage:        4 bytes
  5089 ;; Hardware stack levels used:    1
  5090 ;; Hardware stack levels required when called:   10
  5091 ;; This function calls:
  5092 ;;		_SwPointSelect
  5093 ;;		_Sw_DimmerAdjFunc
  5094 ;;		_Sw_DimmerOffFunc
  5095 ;;		_Sw_DimmerOnFunc
  5096 ;;		_setBuz
  5097 ;;		_setRF_Learn
  5098 ;; This function is called by:
  5099 ;;		_Switch_Main
  5100 ;; This function uses a non-reentrant model
  5101 ;;
  5102                           
  5103                           
  5104                           ;psect for function _setSw_Main
  5105  01F9                     _setSw_Main:	
  5106                           
  5107                           ;incstack = 0
  5108                           ; Regs used in _setSw_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5109                           ;setSw_Main@sw stored from wreg
  5110  01F9  0020               	movlb	0	; select bank0
  5111  01FA  00E8               	movwf	setSw_Main@sw
  5112                           
  5113                           ;Switch_B1.c: 118: SwPointSelect(sw);
  5114  01FB  0868               	movf	setSw_Main@sw,w
  5115  01FC  319E  26C7  3181   	fcall	_SwPointSelect
  5116                           
  5117                           ;Switch_B1.c: 119: if (Sw->Enable == 1) {
  5118  01FF  0020               	movlb	0	; select bank0
  5119  0200  086E               	movf	_Sw,w
  5120  0201  0086               	movwf	6
  5121  0202  3001               	movlw	1	; select bank2/3
  5122  0203  0087               	movwf	7
  5123  0204  1C01               	btfss	1,0
  5124  0205  0008               	return
  5125                           
  5126                           ;Switch_B1.c: 139: Sw->Touch = (RA6 == 1 || RA4 == 1 || RA0 == 1 || RB1 == 1) ? 1 : 0;
  5127  0206  01E7               	clrf	_setSw_Main$4946
  5128  0207  0AE7               	incf	_setSw_Main$4946,f
  5129  0208  1F0C               	btfss	12,6	;volatile
  5130  0209  1A0C               	btfsc	12,4	;volatile
  5131  020A  2A0F               	goto	l6997
  5132  020B  1C0C               	btfss	12,0	;volatile
  5133  020C  188D               	btfsc	13,1	;volatile
  5134  020D  2A0F               	goto	l6997
  5135  020E  01E7               	clrf	_setSw_Main$4946
  5136  020F                     l6997:	
  5137  020F  086E               	movf	_Sw,w
  5138  0210  0086               	movwf	6
  5139  0211  3001               	movlw	1	; select bank2/3
  5140  0212  0087               	movwf	7
  5141  0213  0867               	movf	_setSw_Main$4946,w
  5142  0214  1081               	bcf	1,1
  5143  0215  1D03               	skipz
  5144  0216  1481               	bsf	1,1
  5145                           
  5146                           ;Switch_B1.c: 141: if (Sw->Touch == 1) {
  5147  0217  086E               	movf	_Sw,w
  5148  0218  0086               	movwf	6
  5149  0219  3001               	movlw	1	; select bank2/3
  5150  021A  0087               	movwf	7
  5151  021B  1C81               	btfss	1,1
  5152  021C  2AE1               	goto	l7047
  5153                           
  5154                           ;Switch_B1.c: 142: if (Sw->Debounce == 0) {
  5155  021D  086E               	movf	_Sw,w
  5156  021E  0086               	movwf	6
  5157  021F  3001               	movlw	1	; select bank2/3
  5158  0220  0087               	movwf	7
  5159  0221  1901               	btfsc	1,2
  5160  0222  2A44               	goto	l7013
  5161                           
  5162                           ;Switch_B1.c: 143: Sw->DebounceTime++;
  5163  0223  3001               	movlw	1
  5164  0224  00E5               	movwf	??_setSw_Main
  5165  0225  086E               	movf	_Sw,w
  5166  0226  3E02               	addlw	2
  5167  0227  0086               	movwf	6
  5168  0228  3001               	movlw	1	; select bank2/3
  5169  0229  0087               	movwf	7
  5170  022A  0865               	movf	??_setSw_Main,w
  5171  022B  0781               	addwf	1,f
  5172                           
  5173                           ;Switch_B1.c: 144: if (Sw->DebounceTime >= 5) {
  5174  022C  086E               	movf	_Sw,w
  5175  022D  3E02               	addlw	2
  5176  022E  0086               	movwf	6
  5177  022F  3001               	movlw	1	; select bank2/3
  5178  0230  0087               	movwf	7
  5179  0231  3005               	movlw	5
  5180  0232  0201               	subwf	1,w
  5181  0233  1C03               	skipc
  5182  0234  0008               	return
  5183                           
  5184                           ;Switch_B1.c: 145: Sw->DebounceTime = 0;
  5185  0235  086E               	movf	_Sw,w
  5186  0236  3E02               	addlw	2
  5187  0237  0086               	movwf	6
  5188  0238  3001               	movlw	1	; select bank2/3
  5189  0239  0087               	movwf	7
  5190  023A  0181               	clrf	1
  5191                           
  5192                           ;Switch_B1.c: 146: Sw->Debounce = 1;
  5193  023B  086E               	movf	_Sw,w
  5194  023C  0086               	movwf	6
  5195  023D  3001               	movlw	1	; select bank2/3
  5196  023E  0087               	movwf	7
  5197  023F  1501               	bsf	1,2
  5198                           
  5199                           ;Switch_B1.c: 149: Sw_DimmerOnFunc(sw);
  5200  0240  0868               	movf	setSw_Main@sw,w
  5201  0241  3188  20DD         	fcall	_Sw_DimmerOnFunc
  5202                           
  5203                           ;Switch_B1.c: 173: }
  5204                           ;Switch_B1.c: 174: } else {
  5205  0243  0008               	return
  5206  0244                     l7013:	
  5207                           
  5208                           ;Switch_B1.c: 175: if (Sw->Hold1 == 0) {
  5209  0244  0020               	movlb	0	; select bank0
  5210  0245  086E               	movf	_Sw,w
  5211  0246  0086               	movwf	6
  5212  0247  3001               	movlw	1	; select bank2/3
  5213  0248  0087               	movwf	7
  5214  0249  1981               	btfsc	1,3
  5215  024A  2A71               	goto	l7023
  5216                           
  5217                           ;Switch_B1.c: 176: Sw->Hold1Time++;
  5218  024B  086E               	movf	_Sw,w
  5219  024C  3E03               	addlw	3
  5220  024D  0086               	movwf	6
  5221  024E  3001               	movlw	1	; select bank2/3
  5222  024F  0087               	movwf	7
  5223  0250  3001               	movlw	1
  5224  0251  0781               	addwf	1,f
  5225  0252  3141               	addfsr 1,1
  5226  0253  1803               	skipnc
  5227  0254  0A81               	incf	1,f
  5228                           
  5229                           ;Switch_B1.c: 177: if (Sw->Hold1Time >= 150) {
  5230  0255  086E               	movf	_Sw,w
  5231  0256  3E03               	addlw	3
  5232  0257  0086               	movwf	6
  5233  0258  3001               	movlw	1	; select bank2/3
  5234  0259  0087               	movwf	7
  5235  025A  3F40               	moviw [0]fsr1
  5236  025B  00E5               	movwf	??_setSw_Main
  5237  025C  3F41               	moviw [1]fsr1
  5238  025D  00E6               	movwf	??_setSw_Main+1
  5239  025E  3000               	movlw	0
  5240  025F  0266               	subwf	??_setSw_Main+1,w
  5241  0260  3096               	movlw	150
  5242  0261  1903               	skipnz
  5243  0262  0265               	subwf	??_setSw_Main,w
  5244  0263  1C03               	skipc
  5245  0264  0008               	return
  5246                           
  5247                           ;Switch_B1.c: 178: Sw->Hold1Time = 0;
  5248  0265  086E               	movf	_Sw,w
  5249  0266  3E03               	addlw	3
  5250  0267  0086               	movwf	6
  5251  0268  3001               	movlw	1	; select bank2/3
  5252  0269  0087               	movwf	7
  5253  026A  3000               	movlw	0
  5254  026B  3FC0               	movwi [0]fsr1
  5255  026C  3FC1               	movwi [1]fsr1
  5256                           
  5257                           ;Switch_B1.c: 181: Sw_DimmerAdjFunc(sw);
  5258  026D  0868               	movf	setSw_Main@sw,w
  5259  026E  3193  23F1         	fcall	_Sw_DimmerAdjFunc
  5260                           
  5261                           ;Switch_B1.c: 184: }
  5262                           ;Switch_B1.c: 185: } else {
  5263  0270  0008               	return
  5264  0271                     l7023:	
  5265                           
  5266                           ;Switch_B1.c: 186: if (Sw->Hold2 == 0) {
  5267  0271  0020               	movlb	0	; select bank0
  5268  0272  086E               	movf	_Sw,w
  5269  0273  0086               	movwf	6
  5270  0274  3001               	movlw	1	; select bank2/3
  5271  0275  0087               	movwf	7
  5272  0276  1A01               	btfsc	1,4
  5273  0277  2AAF               	goto	l7037
  5274                           
  5275                           ;Switch_B1.c: 187: Sw->Hold2Time++;
  5276  0278  086E               	movf	_Sw,w
  5277  0279  3E05               	addlw	5
  5278  027A  0086               	movwf	6
  5279  027B  3001               	movlw	1	; select bank2/3
  5280  027C  0087               	movwf	7
  5281  027D  3001               	movlw	1
  5282  027E  0781               	addwf	1,f
  5283  027F  3141               	addfsr 1,1
  5284  0280  1803               	skipnc
  5285  0281  0A81               	incf	1,f
  5286                           
  5287                           ;Switch_B1.c: 188: if (Sw->Hold2Time >= 150) {
  5288  0282  086E               	movf	_Sw,w
  5289  0283  3E05               	addlw	5
  5290  0284  0086               	movwf	6
  5291  0285  3001               	movlw	1	; select bank2/3
  5292  0286  0087               	movwf	7
  5293  0287  3F40               	moviw [0]fsr1
  5294  0288  00E5               	movwf	??_setSw_Main
  5295  0289  3F41               	moviw [1]fsr1
  5296  028A  00E6               	movwf	??_setSw_Main+1
  5297  028B  3000               	movlw	0
  5298  028C  0266               	subwf	??_setSw_Main+1,w
  5299  028D  3096               	movlw	150
  5300  028E  1903               	skipnz
  5301  028F  0265               	subwf	??_setSw_Main,w
  5302  0290  1C03               	skipc
  5303  0291  0008               	return
  5304                           
  5305                           ;Switch_B1.c: 189: Sw->Hold2Time = 0;
  5306  0292  086E               	movf	_Sw,w
  5307  0293  3E05               	addlw	5
  5308  0294  0086               	movwf	6
  5309  0295  3001               	movlw	1	; select bank2/3
  5310  0296  0087               	movwf	7
  5311  0297  3000               	movlw	0
  5312  0298  3FC0               	movwi [0]fsr1
  5313  0299  3FC1               	movwi [1]fsr1
  5314                           
  5315                           ;Switch_B1.c: 190: Sw->Hold2 = 1;
  5316  029A  086E               	movf	_Sw,w
  5317  029B  0086               	movwf	6
  5318  029C  3001               	movlw	1	; select bank2/3
  5319  029D  0087               	movwf	7
  5320  029E  1601               	bsf	1,4
  5321                           
  5322                           ;Switch_B1.c: 193: setRF_Learn(1);
  5323  029F  3001               	movlw	1
  5324  02A0  319E  265C  3181   	fcall	_setRF_Learn
  5325                           
  5326                           ;Switch_B1.c: 195: if (myMain.First == 1) {
  5327  02A3  0021               	movlb	1	; select bank1
  5328  02A4  1FA0               	btfss	_myMain^(0+128),7
  5329  02A5  0008               	return
  5330                           
  5331                           ;Switch_B1.c: 196: setBuz(2, 100);
  5332  02A6  3064               	movlw	100
  5333  02A7  0020               	movlb	0	; select bank0
  5334  02A8  00A9               	movwf	setBuz@time
  5335  02A9  3000               	movlw	0
  5336  02AA  00AA               	movwf	setBuz@time+1
  5337  02AB  3002               	movlw	2
  5338  02AC  3189  2134         	fcall	_setBuz
  5339                           
  5340                           ;Switch_B1.c: 197: }
  5341                           ;Switch_B1.c: 199: }
  5342                           ;Switch_B1.c: 200: } else {
  5343  02AE  0008               	return
  5344  02AF                     l7037:	
  5345                           
  5346                           ;Switch_B1.c: 201: if (Sw->Hold3 == 0) {
  5347  02AF  0020               	movlb	0	; select bank0
  5348  02B0  086E               	movf	_Sw,w
  5349  02B1  0086               	movwf	6
  5350  02B2  3001               	movlw	1	; select bank2/3
  5351  02B3  0087               	movwf	7
  5352  02B4  1A81               	btfsc	1,5
  5353  02B5  0008               	return
  5354                           
  5355                           ;Switch_B1.c: 202: Sw->Hold3Time++;
  5356  02B6  086E               	movf	_Sw,w
  5357  02B7  3E07               	addlw	7
  5358  02B8  0086               	movwf	6
  5359  02B9  3001               	movlw	1	; select bank2/3
  5360  02BA  0087               	movwf	7
  5361  02BB  3001               	movlw	1
  5362  02BC  0781               	addwf	1,f
  5363  02BD  3141               	addfsr 1,1
  5364  02BE  1803               	skipnc
  5365  02BF  0A81               	incf	1,f
  5366                           
  5367                           ;Switch_B1.c: 203: if (Sw->Hold3Time >= 300) {
  5368  02C0  086E               	movf	_Sw,w
  5369  02C1  3E07               	addlw	7
  5370  02C2  0086               	movwf	6
  5371  02C3  3001               	movlw	1	; select bank2/3
  5372  02C4  0087               	movwf	7
  5373  02C5  3F40               	moviw [0]fsr1
  5374  02C6  00E5               	movwf	??_setSw_Main
  5375  02C7  3F41               	moviw [1]fsr1
  5376  02C8  00E6               	movwf	??_setSw_Main+1
  5377  02C9  3001               	movlw	1
  5378  02CA  0266               	subwf	??_setSw_Main+1,w
  5379  02CB  302C               	movlw	44
  5380  02CC  1903               	skipnz
  5381  02CD  0265               	subwf	??_setSw_Main,w
  5382  02CE  1C03               	skipc
  5383  02CF  0008               	return
  5384                           
  5385                           ;Switch_B1.c: 204: Sw->Hold3Time = 0;
  5386  02D0  086E               	movf	_Sw,w
  5387  02D1  3E07               	addlw	7
  5388  02D2  0086               	movwf	6
  5389  02D3  3001               	movlw	1	; select bank2/3
  5390  02D4  0087               	movwf	7
  5391  02D5  3000               	movlw	0
  5392  02D6  3FC0               	movwi [0]fsr1
  5393  02D7  3FC1               	movwi [1]fsr1
  5394                           
  5395                           ;Switch_B1.c: 205: Sw->Hold3 = 1;
  5396  02D8  086E               	movf	_Sw,w
  5397  02D9  0086               	movwf	6
  5398  02DA  3001               	movlw	1	; select bank2/3
  5399  02DB  0087               	movwf	7
  5400  02DC  1681               	bsf	1,5
  5401                           
  5402                           ;Switch_B1.c: 208: setRF_Learn(0);
  5403  02DD  3000               	movlw	0
  5404  02DE  319E  265C         	fcall	_setRF_Learn
  5405                           
  5406                           ;Switch_B1.c: 211: }
  5407                           ;Switch_B1.c: 212: }
  5408                           ;Switch_B1.c: 213: }
  5409                           ;Switch_B1.c: 214: }
  5410                           ;Switch_B1.c: 215: }
  5411                           ;Switch_B1.c: 216: } else {
  5412  02E0  0008               	return
  5413  02E1                     l7047:	
  5414                           
  5415                           ;Switch_B1.c: 217: if (Sw->Debounce == 1) {
  5416  02E1  0020               	movlb	0	; select bank0
  5417  02E2  086E               	movf	_Sw,w
  5418  02E3  0086               	movwf	6
  5419  02E4  3001               	movlw	1	; select bank2/3
  5420  02E5  0087               	movwf	7
  5421  02E6  1D01               	btfss	1,2
  5422  02E7  0008               	return
  5423                           
  5424                           ;Switch_B1.c: 218: Sw->DebounceTime++;
  5425  02E8  3001               	movlw	1
  5426  02E9  00E5               	movwf	??_setSw_Main
  5427  02EA  086E               	movf	_Sw,w
  5428  02EB  3E02               	addlw	2
  5429  02EC  0086               	movwf	6
  5430  02ED  3001               	movlw	1	; select bank2/3
  5431  02EE  0087               	movwf	7
  5432  02EF  0865               	movf	??_setSw_Main,w
  5433  02F0  0781               	addwf	1,f
  5434                           
  5435                           ;Switch_B1.c: 219: if (Sw->DebounceTime >= 5) {
  5436  02F1  086E               	movf	_Sw,w
  5437  02F2  3E02               	addlw	2
  5438  02F3  0086               	movwf	6
  5439  02F4  3001               	movlw	1	; select bank2/3
  5440  02F5  0087               	movwf	7
  5441  02F6  3005               	movlw	5
  5442  02F7  0201               	subwf	1,w
  5443  02F8  1C03               	skipc
  5444  02F9  0008               	return
  5445                           
  5446                           ;Switch_B1.c: 220: Sw->DebounceTime = 0;
  5447  02FA  086E               	movf	_Sw,w
  5448  02FB  3E02               	addlw	2
  5449  02FC  0086               	movwf	6
  5450  02FD  3001               	movlw	1	; select bank2/3
  5451  02FE  0087               	movwf	7
  5452  02FF  0181               	clrf	1
  5453                           
  5454                           ;Switch_B1.c: 221: Sw->Debounce = 0;
  5455  0300  086E               	movf	_Sw,w
  5456  0301  0086               	movwf	6
  5457  0302  3001               	movlw	1	; select bank2/3
  5458  0303  0087               	movwf	7
  5459  0304  1101               	bcf	1,2
  5460                           
  5461                           ;Switch_B1.c: 222: Sw->Hold1Time = 0;
  5462  0305  086E               	movf	_Sw,w
  5463  0306  3E03               	addlw	3
  5464  0307  0086               	movwf	6
  5465  0308  3001               	movlw	1	; select bank2/3
  5466  0309  0087               	movwf	7
  5467  030A  3000               	movlw	0
  5468  030B  3FC0               	movwi [0]fsr1
  5469  030C  3FC1               	movwi [1]fsr1
  5470                           
  5471                           ;Switch_B1.c: 223: Sw->Hold1 = 0;
  5472  030D  086E               	movf	_Sw,w
  5473  030E  0086               	movwf	6
  5474  030F  3001               	movlw	1	; select bank2/3
  5475  0310  0087               	movwf	7
  5476  0311  1181               	bcf	1,3
  5477                           
  5478                           ;Switch_B1.c: 224: Sw->Hold2Time = 0;
  5479  0312  086E               	movf	_Sw,w
  5480  0313  3E05               	addlw	5
  5481  0314  0086               	movwf	6
  5482  0315  3001               	movlw	1	; select bank2/3
  5483  0316  0087               	movwf	7
  5484  0317  3000               	movlw	0
  5485  0318  3FC0               	movwi [0]fsr1
  5486  0319  3FC1               	movwi [1]fsr1
  5487                           
  5488                           ;Switch_B1.c: 225: Sw->Hold2 = 0;
  5489  031A  086E               	movf	_Sw,w
  5490  031B  0086               	movwf	6
  5491  031C  3001               	movlw	1	; select bank2/3
  5492  031D  0087               	movwf	7
  5493  031E  1201               	bcf	1,4
  5494                           
  5495                           ;Switch_B1.c: 226: Sw->Hold3Time = 0;
  5496  031F  086E               	movf	_Sw,w
  5497  0320  3E07               	addlw	7
  5498  0321  0086               	movwf	6
  5499  0322  3001               	movlw	1	; select bank2/3
  5500  0323  0087               	movwf	7
  5501  0324  3000               	movlw	0
  5502  0325  3FC0               	movwi [0]fsr1
  5503  0326  3FC1               	movwi [1]fsr1
  5504                           
  5505                           ;Switch_B1.c: 227: Sw->Hold3 = 0;
  5506  0327  086E               	movf	_Sw,w
  5507  0328  0086               	movwf	6
  5508  0329  3001               	movlw	1	; select bank2/3
  5509  032A  0087               	movwf	7
  5510  032B  1281               	bcf	1,5
  5511                           
  5512                           ;Switch_B1.c: 229: Sw_DimmerOffFunc(sw);
  5513  032C  0868               	movf	setSw_Main@sw,w
  5514  032D  318C  2499  3181   	fcall	_Sw_DimmerOffFunc
  5515                           
  5516                           ;Switch_B1.c: 232: setRF_Learn(0);
  5517  0330  3000               	movlw	0
  5518  0331  319E  265C         	fcall	_setRF_Learn
  5519  0333  0008               	return
  5520  0334                     __end_of_setSw_Main:	
  5521                           
  5522                           	psect	text15
  5523  1E5C                     __ptext15:	
  5524 ;; *************** function _setRF_Learn *****************
  5525 ;; Defined at:
  5526 ;;		line 23 in file "../src/RF_Control_B1.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;  command         1    wreg     unsigned char 
  5529 ;; Auto vars:     Size  Location     Type
  5530 ;;  command         1    0[BANK0 ] unsigned char 
  5531 ;; Return value:  Size  Location     Type
  5532 ;;		None               void
  5533 ;; Registers used:
  5534 ;;		wreg
  5535 ;; Tracked objects:
  5536 ;;		On entry : 0/0
  5537 ;;		On exit  : 0/0
  5538 ;;		Unchanged: 0/0
  5539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5541 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5543 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5544 ;;Total ram usage:        1 bytes
  5545 ;; Hardware stack levels used:    1
  5546 ;; Hardware stack levels required when called:    5
  5547 ;; This function calls:
  5548 ;;		Nothing
  5549 ;; This function is called by:
  5550 ;;		_setSw_Main
  5551 ;; This function uses a non-reentrant model
  5552 ;;
  5553                           
  5554                           
  5555                           ;psect for function _setRF_Learn
  5556  1E5C                     _setRF_Learn:	
  5557                           
  5558                           ;incstack = 0
  5559                           ; Regs used in _setRF_Learn: [wreg]
  5560                           ;setRF_Learn@command stored from wreg
  5561  1E5C  0020               	movlb	0	; select bank0
  5562  1E5D  00A0               	movwf	setRF_Learn@command
  5563                           
  5564                           ;RF_Control_B1.c: 24: RF1.Learn = command;
  5565  1E5E  0820               	movf	setRF_Learn@command,w
  5566  1E5F  0021               	movlb	1	; select bank1
  5567  1E60  1346               	bcf	_RF1^(0+128),6
  5568  1E61  1D03               	skipz
  5569  1E62  1746               	bsf	_RF1^(0+128),6
  5570  1E63  0008               	return
  5571  1E64                     __end_of_setRF_Learn:	
  5572                           
  5573                           	psect	text16
  5574  08DD                     __ptext16:	
  5575 ;; *************** function _Sw_DimmerOnFunc *****************
  5576 ;; Defined at:
  5577 ;;		line 241 in file "../src/Switch_B1.c"
  5578 ;; Parameters:    Size  Location     Type
  5579 ;;  sw              1    wreg     unsigned char 
  5580 ;; Auto vars:     Size  Location     Type
  5581 ;;  sw              1   67[BANK0 ] unsigned char 
  5582 ;;  Idle            1   66[BANK0 ] unsigned char 
  5583 ;; Return value:  Size  Location     Type
  5584 ;;		None               void
  5585 ;; Registers used:
  5586 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/0
  5589 ;;		On exit  : 0/0
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5593 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5595 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5596 ;;Total ram usage:        2 bytes
  5597 ;; Hardware stack levels used:    1
  5598 ;; Hardware stack levels required when called:    9
  5599 ;; This function calls:
  5600 ;;		_setBuz
  5601 ;;		_setDimmerLights_Switch
  5602 ;;		_setDimmerLights_Trigger
  5603 ;;		_setRFSW_Status
  5604 ;;		_setRF_DimmerLights
  5605 ;;		_setTxData
  5606 ;; This function is called by:
  5607 ;;		_setSw_Main
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           
  5611                           
  5612                           ;psect for function _Sw_DimmerOnFunc
  5613  08DD                     _Sw_DimmerOnFunc:	
  5614                           
  5615                           ;incstack = 0
  5616                           ; Regs used in _Sw_DimmerOnFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5617                           ;Sw_DimmerOnFunc@sw stored from wreg
  5618  08DD  0020               	movlb	0	; select bank0
  5619  08DE  00E3               	movwf	Sw_DimmerOnFunc@sw
  5620                           
  5621                           ;Switch_B1.c: 242: char Idle = 1;
  5622  08DF  01E2               	clrf	Sw_DimmerOnFunc@Idle
  5623  08E0  0AE2               	incf	Sw_DimmerOnFunc@Idle,f
  5624                           
  5625                           ;Switch_B1.c: 263: if (Idle == 1) {
  5626  08E1  0862               	movf	Sw_DimmerOnFunc@Idle,w
  5627  08E2  3A01               	xorlw	1
  5628  08E3  1D03               	skipz
  5629  08E4  0008               	return
  5630                           
  5631                           ;Switch_B1.c: 264: Sw->Flag = 1;
  5632  08E5  086E               	movf	_Sw,w
  5633  08E6  0086               	movwf	6
  5634  08E7  3001               	movlw	1	; select bank2/3
  5635  08E8  0087               	movwf	7
  5636  08E9  1781               	bsf	1,7
  5637                           
  5638                           ;Switch_B1.c: 265: setBuz(1, 100);
  5639  08EA  3064               	movlw	100
  5640  08EB  00A9               	movwf	setBuz@time
  5641  08EC  3000               	movlw	0
  5642  08ED  00AA               	movwf	setBuz@time+1
  5643  08EE  3001               	movlw	1
  5644  08EF  3189  2134  3188   	fcall	_setBuz
  5645                           
  5646                           ;Switch_B1.c: 266: if (Sw->Status == 0) {
  5647  08F2  0020               	movlb	0	; select bank0
  5648  08F3  086E               	movf	_Sw,w
  5649  08F4  0086               	movwf	6
  5650  08F5  3001               	movlw	1	; select bank2/3
  5651  08F6  0087               	movwf	7
  5652  08F7  1B01               	btfsc	1,6
  5653  08F8  2922               	goto	l6377
  5654                           
  5655                           ;Switch_B1.c: 267: Sw->Status = 1;
  5656  08F9  086E               	movf	_Sw,w
  5657  08FA  0086               	movwf	6
  5658  08FB  3001               	movlw	1	; select bank2/3
  5659  08FC  0087               	movwf	7
  5660  08FD  1701               	bsf	1,6
  5661                           
  5662                           ;Switch_B1.c: 268: setRFSW_Status(sw, 1);
  5663  08FE  01A2               	clrf	setRFSW_Status@command
  5664  08FF  0AA2               	incf	setRFSW_Status@command,f
  5665  0900  0863               	movf	Sw_DimmerOnFunc@sw,w
  5666  0901  319F  2729  3188   	fcall	_setRFSW_Status
  5667                           
  5668                           ;Switch_B1.c: 270: setDimmerLights_Trigger(sw, 1);
  5669  0904  0020               	movlb	0	; select bank0
  5670  0905  01A2               	clrf	setDimmerLights_Trigger@command
  5671  0906  0AA2               	incf	setDimmerLights_Trigger@command,f
  5672  0907  0863               	movf	Sw_DimmerOnFunc@sw,w
  5673  0908  319F  27AF  3188   	fcall	_setDimmerLights_Trigger
  5674                           
  5675                           ;Switch_B1.c: 271: setDimmerLights_Switch(sw, 1);
  5676  090B  0020               	movlb	0	; select bank0
  5677  090C  01A2               	clrf	setDimmerLights_Switch@command
  5678  090D  0AA2               	incf	setDimmerLights_Switch@command,f
  5679  090E  0863               	movf	Sw_DimmerOnFunc@sw,w
  5680  090F  319F  279F  3188   	fcall	_setDimmerLights_Switch
  5681                           
  5682                           ;Switch_B1.c: 273: setRF_DimmerLights(sw, Sw->Status);
  5683  0912  0020               	movlb	0	; select bank0
  5684  0913  086E               	movf	_Sw,w
  5685  0914  0086               	movwf	6
  5686  0915  3001               	movlw	1	; select bank2/3
  5687  0916  0087               	movwf	7
  5688  0917  3000               	movlw	0
  5689  0918  1B01               	btfsc	1,6
  5690  0919  3001               	movlw	1
  5691  091A  00DD               	movwf	setRF_DimmerLights@on
  5692  091B  0863               	movf	Sw_DimmerOnFunc@sw,w
  5693  091C  3187  2792  3188   	fcall	_setRF_DimmerLights
  5694                           
  5695                           ;Switch_B1.c: 274: setTxData();
  5696  091F  3184  24F1         	fcall	_setTxData
  5697                           
  5698                           ;Switch_B1.c: 276: } else {
  5699  0921  0008               	return
  5700  0922                     l6377:	
  5701                           
  5702                           ;Switch_B1.c: 277: Sw->Status = 0;
  5703  0922  0020               	movlb	0	; select bank0
  5704  0923  086E               	movf	_Sw,w
  5705  0924  0086               	movwf	6
  5706  0925  3001               	movlw	1	; select bank2/3
  5707  0926  0087               	movwf	7
  5708  0927  1301               	bcf	1,6
  5709                           
  5710                           ;Switch_B1.c: 278: setRFSW_Status(sw, Sw->Status);
  5711  0928  086E               	movf	_Sw,w
  5712  0929  0086               	movwf	6
  5713  092A  3001               	movlw	1	; select bank2/3
  5714  092B  0087               	movwf	7
  5715  092C  3000               	movlw	0
  5716  092D  1B01               	btfsc	1,6
  5717  092E  3001               	movlw	1
  5718  092F  00A2               	movwf	setRFSW_Status@command
  5719  0930  0863               	movf	Sw_DimmerOnFunc@sw,w
  5720  0931  319F  2729         	fcall	_setRFSW_Status
  5721  0933  0008               	return
  5722  0934                     __end_of_Sw_DimmerOnFunc:	
  5723                           
  5724                           	psect	text17
  5725  0C99                     __ptext17:	
  5726 ;; *************** function _Sw_DimmerOffFunc *****************
  5727 ;; Defined at:
  5728 ;;		line 284 in file "../src/Switch_B1.c"
  5729 ;; Parameters:    Size  Location     Type
  5730 ;;  sw              1    wreg     unsigned char 
  5731 ;; Auto vars:     Size  Location     Type
  5732 ;;  sw              1   68[BANK0 ] unsigned char 
  5733 ;; Return value:  Size  Location     Type
  5734 ;;		None               void
  5735 ;; Registers used:
  5736 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5737 ;; Tracked objects:
  5738 ;;		On entry : 0/0
  5739 ;;		On exit  : 0/0
  5740 ;;		Unchanged: 0/0
  5741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5743 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5744 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5745 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5746 ;;Total ram usage:        3 bytes
  5747 ;; Hardware stack levels used:    1
  5748 ;; Hardware stack levels required when called:    9
  5749 ;; This function calls:
  5750 ;;		_setDelayOff_GO
  5751 ;;		_setDimmerLights_AdjGo
  5752 ;;		_setDimmerLights_Switch
  5753 ;;		_setDimmerLights_Trigger
  5754 ;;		_setDimmerLights_TriggerAdj
  5755 ;;		_setRF_DimmerLights
  5756 ;;		_setTxData
  5757 ;; This function is called by:
  5758 ;;		_setSw_Main
  5759 ;; This function uses a non-reentrant model
  5760 ;;
  5761                           
  5762                           
  5763                           ;psect for function _Sw_DimmerOffFunc
  5764  0C99                     _Sw_DimmerOffFunc:	
  5765                           
  5766                           ;incstack = 0
  5767                           ; Regs used in _Sw_DimmerOffFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5768                           ;Sw_DimmerOffFunc@sw stored from wreg
  5769  0C99  0020               	movlb	0	; select bank0
  5770  0C9A  00E4               	movwf	Sw_DimmerOffFunc@sw
  5771                           
  5772                           ;Switch_B1.c: 285: if (Sw->Flag == 1) {
  5773  0C9B  086E               	movf	_Sw,w
  5774  0C9C  0086               	movwf	6
  5775  0C9D  3001               	movlw	1	; select bank2/3
  5776  0C9E  0087               	movwf	7
  5777  0C9F  1F81               	btfss	1,7
  5778  0CA0  0008               	return
  5779                           
  5780                           ;Switch_B1.c: 286: Sw->Flag = 0;
  5781  0CA1  086E               	movf	_Sw,w
  5782  0CA2  0086               	movwf	6
  5783  0CA3  3001               	movlw	1	; select bank2/3
  5784  0CA4  0087               	movwf	7
  5785  0CA5  1381               	bcf	1,7
  5786                           
  5787                           ;Switch_B1.c: 287: if (Sw->Status == 1) {
  5788  0CA6  086E               	movf	_Sw,w
  5789  0CA7  0086               	movwf	6
  5790  0CA8  3001               	movlw	1	; select bank2/3
  5791  0CA9  0087               	movwf	7
  5792  0CAA  1F01               	btfss	1,6
  5793  0CAB  2CE4               	goto	l6413
  5794                           
  5795                           ;Switch_B1.c: 288: if (Sw->Adj == 1) {
  5796  0CAC  0A6E               	incf	_Sw,w
  5797  0CAD  0086               	movwf	6
  5798  0CAE  3001               	movlw	1	; select bank2/3
  5799  0CAF  0087               	movwf	7
  5800  0CB0  1C01               	btfss	1,0
  5801  0CB1  0008               	return
  5802                           
  5803                           ;Switch_B1.c: 289: Sw->Adj = 0;
  5804  0CB2  0A6E               	incf	_Sw,w
  5805  0CB3  0086               	movwf	6
  5806  0CB4  3001               	movlw	1	; select bank2/3
  5807  0CB5  0087               	movwf	7
  5808  0CB6  1001               	bcf	1,0
  5809                           
  5810                           ;Switch_B1.c: 290: setDimmerLights_TriggerAdj(sw, 1);
  5811  0CB7  01A2               	clrf	setDimmerLights_TriggerAdj@command
  5812  0CB8  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  5813  0CB9  0864               	movf	Sw_DimmerOffFunc@sw,w
  5814  0CBA  319F  27DF  318C   	fcall	_setDimmerLights_TriggerAdj
  5815                           
  5816                           ;Switch_B1.c: 291: setDimmerLights_AdjGo(sw, 0);
  5817  0CBD  0020               	movlb	0	; select bank0
  5818  0CBE  01A2               	clrf	setDimmerLights_AdjGo@command
  5819  0CBF  0864               	movf	Sw_DimmerOffFunc@sw,w
  5820  0CC0  319F  27CF  318C   	fcall	_setDimmerLights_AdjGo
  5821                           
  5822                           ;Switch_B1.c: 293: product->Data[17]=product->Data[26 + sw];
  5823  0CC3  0020               	movlb	0	; select bank0
  5824  0CC4  0864               	movf	Sw_DimmerOffFunc@sw,w
  5825  0CC5  3E1A               	addlw	26
  5826  0CC6  076F               	addwf	_product,w
  5827  0CC7  00E2               	movwf	??_Sw_DimmerOffFunc
  5828  0CC8  0862               	movf	??_Sw_DimmerOffFunc,w
  5829  0CC9  0086               	movwf	6
  5830  0CCA  3001               	movlw	1	; select bank2/3
  5831  0CCB  0087               	movwf	7
  5832  0CCC  0801               	movf	1,w
  5833  0CCD  00E3               	movwf	??_Sw_DimmerOffFunc+1
  5834  0CCE  086F               	movf	_product,w
  5835  0CCF  3E11               	addlw	17
  5836  0CD0  0086               	movwf	6
  5837  0CD1  3001               	movlw	1	; select bank2/3
  5838  0CD2  0087               	movwf	7
  5839  0CD3  0863               	movf	??_Sw_DimmerOffFunc+1,w
  5840  0CD4  0081               	movwf	1
  5841                           
  5842                           ;Switch_B1.c: 294: setRF_DimmerLights(sw, Sw->Status);
  5843  0CD5  086E               	movf	_Sw,w
  5844  0CD6  0086               	movwf	6
  5845  0CD7  3001               	movlw	1	; select bank2/3
  5846  0CD8  0087               	movwf	7
  5847  0CD9  3000               	movlw	0
  5848  0CDA  1B01               	btfsc	1,6
  5849  0CDB  3001               	movlw	1
  5850  0CDC  00DD               	movwf	setRF_DimmerLights@on
  5851  0CDD  0864               	movf	Sw_DimmerOffFunc@sw,w
  5852  0CDE  3187  2792  318C   	fcall	_setRF_DimmerLights
  5853                           
  5854                           ;Switch_B1.c: 295: setTxData();
  5855  0CE1  3184  24F1         	fcall	_setTxData
  5856                           
  5857                           ;Switch_B1.c: 297: }
  5858                           ;Switch_B1.c: 298: } else {
  5859  0CE3  0008               	return
  5860  0CE4                     l6413:	
  5861                           
  5862                           ;Switch_B1.c: 299: setDimmerLights_Trigger(sw, 1);
  5863  0CE4  0020               	movlb	0	; select bank0
  5864  0CE5  01A2               	clrf	setDimmerLights_Trigger@command
  5865  0CE6  0AA2               	incf	setDimmerLights_Trigger@command,f
  5866  0CE7  0864               	movf	Sw_DimmerOffFunc@sw,w
  5867  0CE8  319F  27AF  318C   	fcall	_setDimmerLights_Trigger
  5868                           
  5869                           ;Switch_B1.c: 300: setDimmerLights_Switch(sw, 0);
  5870  0CEB  0020               	movlb	0	; select bank0
  5871  0CEC  01A2               	clrf	setDimmerLights_Switch@command
  5872  0CED  0864               	movf	Sw_DimmerOffFunc@sw,w
  5873  0CEE  319F  279F  318C   	fcall	_setDimmerLights_Switch
  5874                           
  5875                           ;Switch_B1.c: 302: setDelayOff_GO(sw, 0, 0);
  5876  0CF1  0020               	movlb	0	; select bank0
  5877  0CF2  01AA               	clrf	setDelayOff_GO@command
  5878  0CF3  01AB               	clrf	setDelayOff_GO@value
  5879  0CF4  0864               	movf	Sw_DimmerOffFunc@sw,w
  5880  0CF5  318B  23CC  318C   	fcall	_setDelayOff_GO
  5881                           
  5882                           ;Switch_B1.c: 303: setRF_DimmerLights(sw, Sw->Status);
  5883  0CF8  0020               	movlb	0	; select bank0
  5884  0CF9  086E               	movf	_Sw,w
  5885  0CFA  0086               	movwf	6
  5886  0CFB  3001               	movlw	1	; select bank2/3
  5887  0CFC  0087               	movwf	7
  5888  0CFD  3000               	movlw	0
  5889  0CFE  1B01               	btfsc	1,6
  5890  0CFF  3001               	movlw	1
  5891  0D00  00DD               	movwf	setRF_DimmerLights@on
  5892  0D01  0864               	movf	Sw_DimmerOffFunc@sw,w
  5893  0D02  3187  2792  318C   	fcall	_setRF_DimmerLights
  5894                           
  5895                           ;Switch_B1.c: 304: setTxData();
  5896  0D05  3184  24F1         	fcall	_setTxData
  5897  0D07  0008               	return
  5898  0D08                     __end_of_Sw_DimmerOffFunc:	
  5899                           
  5900                           	psect	text18
  5901  13F1                     __ptext18:	
  5902 ;; *************** function _Sw_DimmerAdjFunc *****************
  5903 ;; Defined at:
  5904 ;;		line 311 in file "../src/Switch_B1.c"
  5905 ;; Parameters:    Size  Location     Type
  5906 ;;  sw              1    wreg     unsigned char 
  5907 ;; Auto vars:     Size  Location     Type
  5908 ;;  sw              1    5[BANK0 ] unsigned char 
  5909 ;;  Idle            1    4[BANK0 ] unsigned char 
  5910 ;; Return value:  Size  Location     Type
  5911 ;;		None               void
  5912 ;; Registers used:
  5913 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5914 ;; Tracked objects:
  5915 ;;		On entry : 0/0
  5916 ;;		On exit  : 0/0
  5917 ;;		Unchanged: 0/0
  5918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5920 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5922 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5923 ;;Total ram usage:        2 bytes
  5924 ;; Hardware stack levels used:    1
  5925 ;; Hardware stack levels required when called:    7
  5926 ;; This function calls:
  5927 ;;		_setDimmerLights_AdjGo
  5928 ;;		_setDimmerLights_TriggerAdj
  5929 ;;		_setRFSW_Status
  5930 ;; This function is called by:
  5931 ;;		_setSw_Main
  5932 ;; This function uses a non-reentrant model
  5933 ;;
  5934                           
  5935                           
  5936                           ;psect for function _Sw_DimmerAdjFunc
  5937  13F1                     _Sw_DimmerAdjFunc:	
  5938                           
  5939                           ;incstack = 0
  5940                           ; Regs used in _Sw_DimmerAdjFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5941                           ;Sw_DimmerAdjFunc@sw stored from wreg
  5942  13F1  0020               	movlb	0	; select bank0
  5943  13F2  00A5               	movwf	Sw_DimmerAdjFunc@sw
  5944                           
  5945                           ;Switch_B1.c: 312: char Idle = 1;
  5946  13F3  01A4               	clrf	Sw_DimmerAdjFunc@Idle
  5947  13F4  0AA4               	incf	Sw_DimmerAdjFunc@Idle,f
  5948                           
  5949                           ;Switch_B1.c: 332: if (Idle == 1) {
  5950  13F5  0824               	movf	Sw_DimmerAdjFunc@Idle,w
  5951  13F6  3A01               	xorlw	1
  5952  13F7  1D03               	skipz
  5953  13F8  0008               	return
  5954                           
  5955                           ;Switch_B1.c: 333: if (Sw->Flag == 1) {
  5956  13F9  086E               	movf	_Sw,w
  5957  13FA  0086               	movwf	6
  5958  13FB  3001               	movlw	1	; select bank2/3
  5959  13FC  0087               	movwf	7
  5960  13FD  1F81               	btfss	1,7
  5961  13FE  0008               	return
  5962                           
  5963                           ;Switch_B1.c: 334: Sw->Hold1 = 1;
  5964  13FF  086E               	movf	_Sw,w
  5965  1400  0086               	movwf	6
  5966  1401  3001               	movlw	1	; select bank2/3
  5967  1402  0087               	movwf	7
  5968  1403  1581               	bsf	1,3
  5969                           
  5970                           ;Switch_B1.c: 335: Sw->Adj = 1;
  5971  1404  0A6E               	incf	_Sw,w
  5972  1405  0086               	movwf	6
  5973  1406  3001               	movlw	1	; select bank2/3
  5974  1407  0087               	movwf	7
  5975  1408  1401               	bsf	1,0
  5976                           
  5977                           ;Switch_B1.c: 336: Sw->Status = 1;
  5978  1409  086E               	movf	_Sw,w
  5979  140A  0086               	movwf	6
  5980  140B  3001               	movlw	1	; select bank2/3
  5981  140C  0087               	movwf	7
  5982  140D  1701               	bsf	1,6
  5983                           
  5984                           ;Switch_B1.c: 337: setRFSW_Status(sw, 1);
  5985  140E  01A2               	clrf	setRFSW_Status@command
  5986  140F  0AA2               	incf	setRFSW_Status@command,f
  5987  1410  0825               	movf	Sw_DimmerAdjFunc@sw,w
  5988  1411  319F  2729  3193   	fcall	_setRFSW_Status
  5989                           
  5990                           ;Switch_B1.c: 339: setDimmerLights_TriggerAdj(sw, 1);
  5991  1414  0020               	movlb	0	; select bank0
  5992  1415  01A2               	clrf	setDimmerLights_TriggerAdj@command
  5993  1416  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  5994  1417  0825               	movf	Sw_DimmerAdjFunc@sw,w
  5995  1418  319F  27DF  3193   	fcall	_setDimmerLights_TriggerAdj
  5996                           
  5997                           ;Switch_B1.c: 340: setDimmerLights_AdjGo(sw, 1);
  5998  141B  0020               	movlb	0	; select bank0
  5999  141C  01A2               	clrf	setDimmerLights_AdjGo@command
  6000  141D  0AA2               	incf	setDimmerLights_AdjGo@command,f
  6001  141E  0825               	movf	Sw_DimmerAdjFunc@sw,w
  6002  141F  319F  27CF         	fcall	_setDimmerLights_AdjGo
  6003  1421  0008               	return
  6004  1422                     __end_of_Sw_DimmerAdjFunc:	
  6005                           
  6006                           	psect	text19
  6007  1FDF                     __ptext19:	
  6008 ;; *************** function _setDimmerLights_TriggerAdj *****************
  6009 ;; Defined at:
  6010 ;;		line 711 in file "../src/Dimmer_B1.c"
  6011 ;; Parameters:    Size  Location     Type
  6012 ;;  lights          1    wreg     unsigned char 
  6013 ;;  command         1    2[BANK0 ] unsigned char 
  6014 ;; Auto vars:     Size  Location     Type
  6015 ;;  lights          1    3[BANK0 ] unsigned char 
  6016 ;; Return value:  Size  Location     Type
  6017 ;;		None               void
  6018 ;; Registers used:
  6019 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6020 ;; Tracked objects:
  6021 ;;		On entry : 0/0
  6022 ;;		On exit  : 0/0
  6023 ;;		Unchanged: 0/0
  6024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6025 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6026 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6028 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6029 ;;Total ram usage:        2 bytes
  6030 ;; Hardware stack levels used:    1
  6031 ;; Hardware stack levels required when called:    6
  6032 ;; This function calls:
  6033 ;;		_DimmerLightsPointSelect
  6034 ;; This function is called by:
  6035 ;;		_Sw_DimmerOffFunc
  6036 ;;		_Sw_DimmerAdjFunc
  6037 ;; This function uses a non-reentrant model
  6038 ;;
  6039                           
  6040                           
  6041                           ;psect for function _setDimmerLights_TriggerAdj
  6042  1FDF                     _setDimmerLights_TriggerAdj:	
  6043                           
  6044                           ;incstack = 0
  6045                           ; Regs used in _setDimmerLights_TriggerAdj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6046                           ;setDimmerLights_TriggerAdj@lights stored from wreg
  6047  1FDF  0020               	movlb	0	; select bank0
  6048  1FE0  00A3               	movwf	setDimmerLights_TriggerAdj@lights
  6049                           
  6050                           ;Dimmer_B1.c: 713: DimmerLightsPointSelect(lights);
  6051  1FE1  0823               	movf	setDimmerLights_TriggerAdj@lights,w
  6052  1FE2  319E  26B1         	fcall	_DimmerLightsPointSelect
  6053                           
  6054                           ;Dimmer_B1.c: 714: DimmerLights->TriggerAdj = command;
  6055  1FE4  0020               	movlb	0	; select bank0
  6056  1FE5  086D               	movf	_DimmerLights,w
  6057  1FE6  3E08               	addlw	8
  6058  1FE7  0086               	movwf	6
  6059  1FE8  3001               	movlw	1	; select bank2/3
  6060  1FE9  0087               	movwf	7
  6061  1FEA  0822               	movf	setDimmerLights_TriggerAdj@command,w
  6062  1FEB  1201               	bcf	1,4
  6063  1FEC  1D03               	skipz
  6064  1FED  1601               	bsf	1,4
  6065  1FEE  0008               	return
  6066  1FEF                     __end_of_setDimmerLights_TriggerAdj:	
  6067                           
  6068                           	psect	text20
  6069  1FCF                     __ptext20:	
  6070 ;; *************** function _setDimmerLights_AdjGo *****************
  6071 ;; Defined at:
  6072 ;;		line 699 in file "../src/Dimmer_B1.c"
  6073 ;; Parameters:    Size  Location     Type
  6074 ;;  lights          1    wreg     unsigned char 
  6075 ;;  command         1    2[BANK0 ] unsigned char 
  6076 ;; Auto vars:     Size  Location     Type
  6077 ;;  lights          1    3[BANK0 ] unsigned char 
  6078 ;; Return value:  Size  Location     Type
  6079 ;;		None               void
  6080 ;; Registers used:
  6081 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6082 ;; Tracked objects:
  6083 ;;		On entry : 0/0
  6084 ;;		On exit  : 0/0
  6085 ;;		Unchanged: 0/0
  6086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6087 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6088 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6090 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6091 ;;Total ram usage:        2 bytes
  6092 ;; Hardware stack levels used:    1
  6093 ;; Hardware stack levels required when called:    6
  6094 ;; This function calls:
  6095 ;;		_DimmerLightsPointSelect
  6096 ;; This function is called by:
  6097 ;;		_Sw_DimmerOffFunc
  6098 ;;		_Sw_DimmerAdjFunc
  6099 ;; This function uses a non-reentrant model
  6100 ;;
  6101                           
  6102                           
  6103                           ;psect for function _setDimmerLights_AdjGo
  6104  1FCF                     _setDimmerLights_AdjGo:	
  6105                           
  6106                           ;incstack = 0
  6107                           ; Regs used in _setDimmerLights_AdjGo: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6108                           ;setDimmerLights_AdjGo@lights stored from wreg
  6109  1FCF  0020               	movlb	0	; select bank0
  6110  1FD0  00A3               	movwf	setDimmerLights_AdjGo@lights
  6111                           
  6112                           ;Dimmer_B1.c: 701: DimmerLightsPointSelect(lights);
  6113  1FD1  0823               	movf	setDimmerLights_AdjGo@lights,w
  6114  1FD2  319E  26B1         	fcall	_DimmerLightsPointSelect
  6115                           
  6116                           ;Dimmer_B1.c: 702: DimmerLights->AdjGo = command;
  6117  1FD4  0020               	movlb	0	; select bank0
  6118  1FD5  086D               	movf	_DimmerLights,w
  6119  1FD6  3E08               	addlw	8
  6120  1FD7  0086               	movwf	6
  6121  1FD8  3001               	movlw	1	; select bank2/3
  6122  1FD9  0087               	movwf	7
  6123  1FDA  0822               	movf	setDimmerLights_AdjGo@command,w
  6124  1FDB  1181               	bcf	1,3
  6125  1FDC  1D03               	skipz
  6126  1FDD  1581               	bsf	1,3
  6127  1FDE  0008               	return
  6128  1FDF                     __end_of_setDimmerLights_AdjGo:	
  6129                           
  6130                           	psect	text21
  6131  1E7D                     __ptext21:	
  6132 ;; *************** function _Switch_Initialization *****************
  6133 ;; Defined at:
  6134 ;;		line 41 in file "../src/Switch_B1.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;		None
  6137 ;; Auto vars:     Size  Location     Type
  6138 ;;		None
  6139 ;; Return value:  Size  Location     Type
  6140 ;;		None               void
  6141 ;; Registers used:
  6142 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6143 ;; Tracked objects:
  6144 ;;		On entry : 0/0
  6145 ;;		On exit  : 0/0
  6146 ;;		Unchanged: 0/0
  6147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6152 ;;Total ram usage:        0 bytes
  6153 ;; Hardware stack levels used:    1
  6154 ;; Hardware stack levels required when called:    8
  6155 ;; This function calls:
  6156 ;;		_TouchPower
  6157 ;;		_setSw_Initialization
  6158 ;; This function is called by:
  6159 ;;		_main
  6160 ;; This function uses a non-reentrant model
  6161 ;;
  6162                           
  6163                           
  6164                           ;psect for function _Switch_Initialization
  6165  1E7D                     _Switch_Initialization:	
  6166                           
  6167                           ;Switch_B1.c: 42: TouchPower();
  6168                           
  6169                           ;incstack = 0
  6170                           ; Regs used in _Switch_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6171  1E7D  319F  2781  319E   	fcall	_TouchPower
  6172                           
  6173                           ;Switch_B1.c: 44: WPUB1 = 0;
  6174  1E80  0024               	movlb	4	; select bank4
  6175  1E81  108D               	bcf	13,1	;volatile
  6176                           
  6177                           ;Switch_B1.c: 53: setSw_Initialization(1);
  6178  1E82  3001               	movlw	1
  6179  1E83  319F  27BF         	fcall	_setSw_Initialization
  6180  1E85  0008               	return
  6181  1E86                     __end_of_Switch_Initialization:	
  6182                           
  6183                           	psect	text22
  6184  1FBF                     __ptext22:	
  6185 ;; *************** function _setSw_Initialization *****************
  6186 ;; Defined at:
  6187 ;;		line 83 in file "../src/Switch_B1.c"
  6188 ;; Parameters:    Size  Location     Type
  6189 ;;  sw              1    wreg     unsigned char 
  6190 ;; Auto vars:     Size  Location     Type
  6191 ;;  sw              1    3[BANK0 ] unsigned char 
  6192 ;; Return value:  Size  Location     Type
  6193 ;;		None               void
  6194 ;; Registers used:
  6195 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6196 ;; Tracked objects:
  6197 ;;		On entry : 0/0
  6198 ;;		On exit  : 0/0
  6199 ;;		Unchanged: 0/0
  6200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6202 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6204 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6205 ;;Total ram usage:        1 bytes
  6206 ;; Hardware stack levels used:    1
  6207 ;; Hardware stack levels required when called:    7
  6208 ;; This function calls:
  6209 ;;		_setLED
  6210 ;; This function is called by:
  6211 ;;		_Switch_Initialization
  6212 ;; This function uses a non-reentrant model
  6213 ;;
  6214                           
  6215                           
  6216                           ;psect for function _setSw_Initialization
  6217  1FBF                     _setSw_Initialization:	
  6218                           
  6219                           ;incstack = 0
  6220                           ; Regs used in _setSw_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6221                           ;setSw_Initialization@sw stored from wreg
  6222  1FBF  0020               	movlb	0	; select bank0
  6223  1FC0  00A3               	movwf	setSw_Initialization@sw
  6224                           
  6225                           ;Switch_B1.c: 84: setLED(sw, 1);
  6226  1FC1  01A1               	clrf	setLED@command
  6227  1FC2  0AA1               	incf	setLED@command,f
  6228  1FC3  0823               	movf	setSw_Initialization@sw,w
  6229  1FC4  318B  2305  319F   	fcall	_setLED
  6230                           
  6231                           ;Switch_B1.c: 86: setLED(sw + 1, 1);
  6232  1FC7  0020               	movlb	0	; select bank0
  6233  1FC8  01A1               	clrf	setLED@command
  6234  1FC9  0AA1               	incf	setLED@command,f
  6235  1FCA  0823               	movf	setSw_Initialization@sw,w
  6236  1FCB  3E01               	addlw	1
  6237  1FCC  318B  2305         	fcall	_setLED
  6238  1FCE  0008               	return
  6239  1FCF                     __end_of_setSw_Initialization:	
  6240                           
  6241                           	psect	text23
  6242  1F81                     __ptext23:	
  6243 ;; *************** function _TouchPower *****************
  6244 ;; Defined at:
  6245 ;;		line 10 in file "../src/Switch_B1.c"
  6246 ;; Parameters:    Size  Location     Type
  6247 ;;		None
  6248 ;; Auto vars:     Size  Location     Type
  6249 ;;		None
  6250 ;; Return value:  Size  Location     Type
  6251 ;;		None               void
  6252 ;; Registers used:
  6253 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6254 ;; Tracked objects:
  6255 ;;		On entry : 0/0
  6256 ;;		On exit  : 0/0
  6257 ;;		Unchanged: 0/0
  6258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6263 ;;Total ram usage:        0 bytes
  6264 ;; Hardware stack levels used:    1
  6265 ;; Hardware stack levels required when called:    6
  6266 ;; This function calls:
  6267 ;;		_Timeout_Counter
  6268 ;;		_set_TimeoutCleared
  6269 ;; This function is called by:
  6270 ;;		_Switch_Initialization
  6271 ;; This function uses a non-reentrant model
  6272 ;;
  6273                           
  6274                           
  6275                           ;psect for function _TouchPower
  6276  1F81                     _TouchPower:	
  6277                           
  6278                           ;Switch_B1.c: 11: while (RC5 == 0 && myMain.Timeout == 0) {
  6279                           
  6280                           ;incstack = 0
  6281                           ; Regs used in _TouchPower: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6282  1F81  2F87               	goto	l6975
  6283  1F82                     l2238:	
  6284                           
  6285                           ;Switch_B1.c: 12: RC5 = 1;
  6286  1F82  0020               	movlb	0	; select bank0
  6287  1F83  168E               	bsf	14,5	;volatile
  6288                           
  6289                           ;Switch_B1.c: 13: Timeout_Counter();
  6290  1F84  3190  20BC  319F   	fcall	_Timeout_Counter
  6291  1F87                     l6975:	
  6292  1F87  0020               	movlb	0	; select bank0
  6293  1F88  1A8E               	btfsc	14,5	;volatile
  6294  1F89  2F8D               	goto	l6979
  6295  1F8A  0021               	movlb	1	; select bank1
  6296  1F8B  1D2F               	btfss	(_myMain^(0+128)+15),2
  6297  1F8C  2F82               	goto	l2238
  6298  1F8D                     l6979:	
  6299                           
  6300                           ;Switch_B1.c: 14: }
  6301                           ;Switch_B1.c: 15: set_TimeoutCleared();
  6302  1F8D  319E  261F         	fcall	_set_TimeoutCleared
  6303  1F8F  0008               	return
  6304  1F90                     __end_of_TouchPower:	
  6305                           
  6306                           	psect	text24
  6307  1DEF                     __ptext24:	
  6308 ;; *************** function _RF_Main *****************
  6309 ;; Defined at:
  6310 ;;		line 16 in file "../src/RF_Control_B1.c"
  6311 ;; Parameters:    Size  Location     Type
  6312 ;;		None
  6313 ;; Auto vars:     Size  Location     Type
  6314 ;;		None
  6315 ;; Return value:  Size  Location     Type
  6316 ;;		None               void
  6317 ;; Registers used:
  6318 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6319 ;; Tracked objects:
  6320 ;;		On entry : 0/0
  6321 ;;		On exit  : 0/0
  6322 ;;		Unchanged: 0/0
  6323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6328 ;;Total ram usage:        0 bytes
  6329 ;; Hardware stack levels used:    1
  6330 ;; Hardware stack levels required when called:   14
  6331 ;; This function calls:
  6332 ;;		_setRF_Main
  6333 ;; This function is called by:
  6334 ;;		_main
  6335 ;; This function uses a non-reentrant model
  6336 ;;
  6337                           
  6338                           
  6339                           ;psect for function _RF_Main
  6340  1DEF                     _RF_Main:	
  6341                           
  6342                           ;RF_Control_B1.c: 18: setRF_Main();
  6343                           
  6344                           ;incstack = 0
  6345                           ; Regs used in _RF_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6346  1DEF  318B  2367         	fcall	_setRF_Main
  6347  1DF1  0008               	return
  6348  1DF2                     __end_of_RF_Main:	
  6349                           
  6350                           	psect	text25
  6351  0B67                     __ptext25:	
  6352 ;; *************** function _setRF_Main *****************
  6353 ;; Defined at:
  6354 ;;		line 51 in file "../src/RF_Control_B1.c"
  6355 ;; Parameters:    Size  Location     Type
  6356 ;;		None
  6357 ;; Auto vars:     Size  Location     Type
  6358 ;;  Receive_OK      1    0        unsigned char 
  6359 ;;  loop_f          1    0        unsigned char 
  6360 ;; Return value:  Size  Location     Type
  6361 ;;		None               void
  6362 ;; Registers used:
  6363 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6364 ;; Tracked objects:
  6365 ;;		On entry : 0/0
  6366 ;;		On exit  : 0/0
  6367 ;;		Unchanged: 0/0
  6368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6370 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6371 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6372 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6373 ;;Total ram usage:        2 bytes
  6374 ;; Hardware stack levels used:    1
  6375 ;; Hardware stack levels required when called:   13
  6376 ;; This function calls:
  6377 ;;		_CC2500_RxData
  6378 ;;		_CC2500_TxData
  6379 ;;		_CC2500_WriteCommand
  6380 ;;		_RF_RxDisable
  6381 ;;		_getBuz_GO
  6382 ;;		_getRxData
  6383 ;; This function is called by:
  6384 ;;		_RF_Main
  6385 ;; This function uses a non-reentrant model
  6386 ;;
  6387                           
  6388                           
  6389                           ;psect for function _setRF_Main
  6390  0B67                     _setRF_Main:	
  6391                           
  6392                           ;RF_Control_B1.c: 52: char loop_f, Receive_OK;
  6393                           ;RF_Control_B1.c: 53: if (RF1.Enable == 1) {
  6394                           
  6395                           ;incstack = 0
  6396                           ; Regs used in _setRF_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6397  0B67  0021               	movlb	1	; select bank1
  6398  0B68  1C46               	btfss	_RF1^(0+128),0
  6399  0B69  0008               	return
  6400                           
  6401                           ;RF_Control_B1.c: 56: if (getBuz_GO() == 0) {
  6402  0B6A  319F  27EF  318B   	fcall	_getBuz_GO
  6403  0B6D  0020               	movlb	0	; select bank0
  6404  0B6E  0821               	movf	?_getBuz_GO+1,w
  6405  0B6F  0420               	iorwf	?_getBuz_GO,w
  6406  0B70  1D03               	skipz
  6407  0B71  0008               	return
  6408                           
  6409                           ;RF_Control_B1.c: 66: RF1.Key = (RA6 == 1 || RA4 == 1 || RA0 == 1 || RB1 == 1) ? 1 : 0;
  6410  0B72  01E8               	clrf	_setRF_Main$4076
  6411  0B73  0AE8               	incf	_setRF_Main$4076,f
  6412  0B74  1F0C               	btfss	12,6	;volatile
  6413  0B75  1A0C               	btfsc	12,4	;volatile
  6414  0B76  2B7B               	goto	l7819
  6415  0B77  1C0C               	btfss	12,0	;volatile
  6416  0B78  188D               	btfsc	13,1	;volatile
  6417  0B79  2B7B               	goto	l7819
  6418  0B7A  01E8               	clrf	_setRF_Main$4076
  6419  0B7B                     l7819:	
  6420  0B7B  0868               	movf	_setRF_Main$4076,w
  6421  0B7C  0021               	movlb	1	; select bank1
  6422  0B7D  13C6               	bcf	_RF1^(0+128),7
  6423  0B7E  1D03               	skipz
  6424  0B7F  17C6               	bsf	_RF1^(0+128),7
  6425                           
  6426                           ;RF_Control_B1.c: 68: if (RF1.Key == 1 && RF1.Learn == 0) {
  6427  0B80  1BC6               	btfsc	_RF1^(0+128),7
  6428  0B81  1B46               	btfsc	_RF1^(0+128),6
  6429  0B82  2B87               	goto	l1867
  6430                           
  6431                           ;RF_Control_B1.c: 69: RF1.Run = 1;
  6432  0B83  14C7               	bsf	(_RF1^(0+128)+1),1
  6433                           
  6434                           ;RF_Control_B1.c: 70: RF_RxDisable();
  6435  0B84  319F  2772         	fcall	_RF_RxDisable
  6436                           
  6437                           ;RF_Control_B1.c: 71: } else {
  6438  0B86  0008               	return
  6439  0B87                     l1867:	
  6440                           
  6441                           ;RF_Control_B1.c: 72: if (RF1.Run == 1 && RF1.Learn == 0) {
  6442  0B87  18C7               	btfsc	(_RF1^(0+128)+1),1
  6443  0B88  1B46               	btfsc	_RF1^(0+128),6
  6444  0B89  2B97               	goto	l7839
  6445                           
  6446                           ;RF_Control_B1.c: 73: RF1.Count++;
  6447  0B8A  3001               	movlw	1
  6448  0B8B  0020               	movlb	0	; select bank0
  6449  0B8C  00E7               	movwf	??_setRF_Main
  6450  0B8D  0867               	movf	??_setRF_Main,w
  6451  0B8E  0021               	movlb	1	; select bank1
  6452  0B8F  07C9               	addwf	(_RF1^(0+128)+3),f
  6453                           
  6454                           ;RF_Control_B1.c: 74: if (RF1.Count == 20) {
  6455  0B90  0849               	movf	(_RF1^(0+128)+3),w
  6456  0B91  3A14               	xorlw	20
  6457  0B92  1D03               	skipz
  6458  0B93  0008               	return
  6459                           
  6460                           ;RF_Control_B1.c: 75: RF1.Count = 0;
  6461  0B94  01C9               	clrf	(_RF1^(0+128)+3)
  6462                           
  6463                           ;RF_Control_B1.c: 76: RF1.Run = 0;
  6464  0B95  10C7               	bcf	(_RF1^(0+128)+1),1
  6465                           
  6466                           ;RF_Control_B1.c: 77: }
  6467                           ;RF_Control_B1.c: 78: } else {
  6468  0B96  0008               	return
  6469  0B97                     l7839:	
  6470                           
  6471                           ;RF_Control_B1.c: 79: RF1.Count = 0;
  6472  0B97  01C9               	clrf	(_RF1^(0+128)+3)
  6473                           
  6474                           ;RF_Control_B1.c: 80: RF1.Run = 0;
  6475  0B98  10C7               	bcf	(_RF1^(0+128)+1),1
  6476                           
  6477                           ;RF_Control_B1.c: 82: if (RF1.TransceiveGO == 1 && RF1.Learn == 0) {
  6478  0B99  1946               	btfsc	_RF1^(0+128),2
  6479  0B9A  1B46               	btfsc	_RF1^(0+128),6
  6480  0B9B  2BAA               	goto	l1872
  6481                           
  6482                           ;RF_Control_B1.c: 83: RF1.TransceiveGO = 0;
  6483  0B9C  1146               	bcf	_RF1^(0+128),2
  6484                           
  6485                           ;RF_Control_B1.c: 84: RF1.RxStatus = 0;
  6486  0B9D  11C6               	bcf	_RF1^(0+128),3
  6487                           
  6488                           ;RF_Control_B1.c: 85: RF1.ReceiveGO = 0;
  6489  0B9E  10C6               	bcf	_RF1^(0+128),1
  6490                           
  6491                           ;RF_Control_B1.c: 88: CC2500_WriteCommand(0x3B);
  6492  0B9F  303B               	movlw	59
  6493  0BA0  3191  2113  318B   	fcall	_CC2500_WriteCommand
  6494                           
  6495                           ;RF_Control_B1.c: 89: CC2500_WriteCommand(0x3A);
  6496  0BA3  303A               	movlw	58
  6497  0BA4  3191  2113  318B   	fcall	_CC2500_WriteCommand
  6498                           
  6499                           ;RF_Control_B1.c: 90: CC2500_TxData();
  6500  0BA7  318A  22A4         	fcall	_CC2500_TxData
  6501                           
  6502                           ;RF_Control_B1.c: 92: } else {
  6503  0BA9  0008               	return
  6504  0BAA                     l1872:	
  6505                           
  6506                           ;RF_Control_B1.c: 94: if (RF1.RxStatus == 1) {
  6507  0BAA  1DC6               	btfss	_RF1^(0+128),3
  6508  0BAB  2BBB               	goto	l1874
  6509                           
  6510                           ;RF_Control_B1.c: 95: CC2500_RxData();
  6511  0BAC  318D  25F8  318B   	fcall	_CC2500_RxData
  6512                           
  6513                           ;RF_Control_B1.c: 96: if (RF1.ReceiveGO == 1) {
  6514  0BAF  0021               	movlb	1	; select bank1
  6515  0BB0  1CC6               	btfss	_RF1^(0+128),1
  6516  0BB1  0008               	return
  6517                           
  6518                           ;RF_Control_B1.c: 97: RF1.ReceiveGO = 0;
  6519  0BB2  10C6               	bcf	_RF1^(0+128),1
  6520                           
  6521                           ;RF_Control_B1.c: 104: getRxData();
  6522  0BB3  3197  271E         	fcall	_getRxData
  6523                           
  6524                           ;RF_Control_B1.c: 106: RF1.Run = 1;
  6525  0BB5  0021               	movlb	1	; select bank1
  6526  0BB6  14C7               	bsf	(_RF1^(0+128)+1),1
  6527                           
  6528                           ;RF_Control_B1.c: 107: RB5 = RB5 == 1 ? 0 : 1;
  6529  0BB7  3020               	movlw	32
  6530  0BB8  0020               	movlb	0	; select bank0
  6531  0BB9  068D               	xorwf	13,f
  6532                           
  6533                           ;RF_Control_B1.c: 108: }
  6534                           ;RF_Control_B1.c: 109: } else {
  6535  0BBA  0008               	return
  6536  0BBB                     l1874:	
  6537                           
  6538                           ;RF_Control_B1.c: 111: if (RF1.RxStatus == 0 && RF1.ReceiveGO == 0) {
  6539  0BBB  19C6               	btfsc	_RF1^(0+128),3
  6540  0BBC  0008               	return
  6541  0BBD  18C6               	btfsc	_RF1^(0+128),1
  6542  0BBE  0008               	return
  6543                           
  6544                           ;RF_Control_B1.c: 112: RF1.RxStatus = 1;
  6545  0BBF  15C6               	bsf	_RF1^(0+128),3
  6546                           
  6547                           ;RF_Control_B1.c: 114: CC2500_WriteCommand(0x3B);
  6548  0BC0  303B               	movlw	59
  6549  0BC1  3191  2113  318B   	fcall	_CC2500_WriteCommand
  6550                           
  6551                           ;RF_Control_B1.c: 115: CC2500_WriteCommand(0x3A);
  6552  0BC4  303A               	movlw	58
  6553  0BC5  3191  2113  318B   	fcall	_CC2500_WriteCommand
  6554                           
  6555                           ;RF_Control_B1.c: 116: CC2500_WriteCommand(0x34);
  6556  0BC8  3034               	movlw	52
  6557  0BC9  3191  2113         	fcall	_CC2500_WriteCommand
  6558  0BCB  0008               	return
  6559  0BCC                     __end_of_setRF_Main:	
  6560                           
  6561                           	psect	text26
  6562  171E                     __ptext26:	
  6563 ;; *************** function _getRxData *****************
  6564 ;; Defined at:
  6565 ;;		line 201 in file "../src/RF_Control_B1.c"
  6566 ;; Parameters:    Size  Location     Type
  6567 ;;		None
  6568 ;; Auto vars:     Size  Location     Type
  6569 ;;		None
  6570 ;; Return value:  Size  Location     Type
  6571 ;;		None               void
  6572 ;; Registers used:
  6573 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6574 ;; Tracked objects:
  6575 ;;		On entry : 0/0
  6576 ;;		On exit  : 0/0
  6577 ;;		Unchanged: 0/0
  6578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6583 ;;Total ram usage:        0 bytes
  6584 ;; Hardware stack levels used:    1
  6585 ;; Hardware stack levels required when called:   12
  6586 ;; This function calls:
  6587 ;;		_setControl_Lights_Table
  6588 ;;		_setLog_Code
  6589 ;; This function is called by:
  6590 ;;		_setRF_Main
  6591 ;; This function uses a non-reentrant model
  6592 ;;
  6593                           
  6594                           
  6595                           ;psect for function _getRxData
  6596  171E                     _getRxData:	
  6597                           
  6598                           ;RF_Control_B1.c: 202: if (RF1.Learn == 1) {
  6599                           
  6600                           ;incstack = 0
  6601                           ; Regs used in _getRxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6602  171E  0021               	movlb	1	; select bank1
  6603  171F  1F46               	btfss	_RF1^(0+128),6
  6604  1720  2F2C               	goto	l7605
  6605                           
  6606                           ;RF_Control_B1.c: 203: if (RF_Data[0] == 0x0 && RF_Data[1] == 0x64)
  6607  1721  0022               	movlb	2	; select bank2
  6608  1722  08A0               	movf	_RF_Data^(0+256),f
  6609  1723  1D03               	skipz
  6610  1724  0008               	return
  6611  1725  0821               	movf	(_RF_Data^(0+256)+1),w
  6612  1726  3A64               	xorlw	100
  6613  1727  1D03               	skipz
  6614  1728  0008               	return
  6615                           
  6616                           ;RF_Control_B1.c: 204: {
  6617                           ;RF_Control_B1.c: 205: setLog_Code();
  6618  1729  3188  2002         	fcall	_setLog_Code
  6619                           
  6620                           ;RF_Control_B1.c: 206: }
  6621                           ;RF_Control_B1.c: 207: } else {
  6622  172B  0008               	return
  6623  172C                     l7605:	
  6624                           
  6625                           ;RF_Control_B1.c: 208: if (RF_Data[0] == 0x00 && RF_Data[1] == 0x02)
  6626  172C  0022               	movlb	2	; select bank2
  6627  172D  08A0               	movf	_RF_Data^(0+256),f
  6628  172E  1D03               	skipz
  6629  172F  0008               	return
  6630  1730  0821               	movf	(_RF_Data^(0+256)+1),w
  6631  1731  3A02               	xorlw	2
  6632  1732  1D03               	skipz
  6633  1733  0008               	return
  6634                           
  6635                           ;RF_Control_B1.c: 209: {
  6636                           ;RF_Control_B1.c: 210: if (RF_Data[12] == 0xff && RF_Data[13] == 0xff && RF_Data[14] == 
      +                          0xff) {
  6637  1734  082C               	movf	(_RF_Data^(0+256)+12),w
  6638  1735  3AFF               	xorlw	255
  6639  1736  1D03               	skipz
  6640  1737  2F42               	goto	l7617
  6641  1738  082D               	movf	(_RF_Data^(0+256)+13),w
  6642  1739  3AFF               	xorlw	255
  6643  173A  1D03               	skipz
  6644  173B  2F42               	goto	l7617
  6645  173C  082E               	movf	(_RF_Data^(0+256)+14),w
  6646  173D  3AFF               	xorlw	255
  6647  173E  1D03               	skipz
  6648  173F  2F42               	goto	l7617
  6649                           
  6650                           ;RF_Control_B1.c: 211: __nop();
  6651  1740  0000               	nop
  6652                           
  6653                           ;RF_Control_B1.c: 212: } else {
  6654  1741  0008               	return
  6655  1742                     l7617:	
  6656                           
  6657                           ;RF_Control_B1.c: 213: if (RF_Data[12] == product->Data[12] && RF_Data[13] == product->D
      +                          ata[13] && RF_Data[14] == product->Data[14]) {
  6658  1742  0020               	movlb	0	; select bank0
  6659  1743  086F               	movf	_product,w
  6660  1744  3E0C               	addlw	12
  6661  1745  0086               	movwf	6
  6662  1746  3001               	movlw	1	; select bank2/3
  6663  1747  0087               	movwf	7
  6664  1748  0022               	movlb	2	; select bank2
  6665  1749  082C               	movf	(_RF_Data^(0+256)+12),w
  6666  174A  0601               	xorwf	1,w
  6667  174B  1D03               	skipz
  6668  174C  0008               	return
  6669  174D  0020               	movlb	0	; select bank0
  6670  174E  086F               	movf	_product,w
  6671  174F  3E0D               	addlw	13
  6672  1750  0086               	movwf	6
  6673  1751  3001               	movlw	1	; select bank2/3
  6674  1752  0087               	movwf	7
  6675  1753  0022               	movlb	2	; select bank2
  6676  1754  082D               	movf	(_RF_Data^(0+256)+13),w
  6677  1755  0601               	xorwf	1,w
  6678  1756  1D03               	skipz
  6679  1757  0008               	return
  6680  1758  0020               	movlb	0	; select bank0
  6681  1759  086F               	movf	_product,w
  6682  175A  3E0E               	addlw	14
  6683  175B  0086               	movwf	6
  6684  175C  3001               	movlw	1	; select bank2/3
  6685  175D  0087               	movwf	7
  6686  175E  0022               	movlb	2	; select bank2
  6687  175F  082E               	movf	(_RF_Data^(0+256)+14),w
  6688  1760  0601               	xorwf	1,w
  6689  1761  1D03               	skipz
  6690  1762  0008               	return
  6691                           
  6692                           ;RF_Control_B1.c: 214: setControl_Lights_Table();
  6693  1763  318C  2432         	fcall	_setControl_Lights_Table
  6694                           
  6695                           ;RF_Control_B1.c: 221: {
  6696                           ;RF_Control_B1.c: 222: ;
  6697                           
  6698                           ;RF_Control_B1.c: 218: {
  6699                           ;RF_Control_B1.c: 219: ;
  6700                           ;RF_Control_B1.c: 220: } else if (RF_Data[0] == 0x0 && RF_Data[1] == 0x65)
  6701                           
  6702                           ;RF_Control_B1.c: 215: }
  6703                           ;RF_Control_B1.c: 216: }
  6704                           ;RF_Control_B1.c: 217: } else if (RF_Data[0] == 0xff && RF_Data[1] == 0x02)
  6705  1765  0008               	return
  6706  1766                     __end_of_getRxData:	
  6707                           
  6708                           	psect	text27
  6709  0802                     __ptext27:	
  6710 ;; *************** function _setLog_Code *****************
  6711 ;; Defined at:
  6712 ;;		line 232 in file "../src/RF_Control_B1.c"
  6713 ;; Parameters:    Size  Location     Type
  6714 ;;		None
  6715 ;; Auto vars:     Size  Location     Type
  6716 ;;		None
  6717 ;; Return value:  Size  Location     Type
  6718 ;;		None               void
  6719 ;; Registers used:
  6720 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6721 ;; Tracked objects:
  6722 ;;		On entry : 0/0
  6723 ;;		On exit  : 0/0
  6724 ;;		Unchanged: 0/0
  6725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6728 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6729 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6730 ;;Total ram usage:        1 bytes
  6731 ;; Hardware stack levels used:    1
  6732 ;; Hardware stack levels required when called:    7
  6733 ;; This function calls:
  6734 ;;		_setBuz
  6735 ;; This function is called by:
  6736 ;;		_getRxData
  6737 ;; This function uses a non-reentrant model
  6738 ;;
  6739                           
  6740                           
  6741                           ;psect for function _setLog_Code
  6742  0802                     _setLog_Code:	
  6743                           
  6744                           ;RF_Control_B1.c: 233: product->Data[12]=RF_Data[12];
  6745                           
  6746                           ;incstack = 0
  6747                           ; Regs used in _setLog_Code: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6748  0802  0022               	movlb	2	; select bank2
  6749  0803  082C               	movf	(_RF_Data^(0+256)+12),w
  6750  0804  0020               	movlb	0	; select bank0
  6751  0805  00AD               	movwf	??_setLog_Code
  6752  0806  086F               	movf	_product,w
  6753  0807  3E0C               	addlw	12
  6754  0808  0086               	movwf	6
  6755  0809  3001               	movlw	1	; select bank2/3
  6756  080A  0087               	movwf	7
  6757  080B  082D               	movf	??_setLog_Code,w
  6758  080C  0081               	movwf	1
  6759                           
  6760                           ;RF_Control_B1.c: 234: product->Data[13]=RF_Data[13];
  6761  080D  0022               	movlb	2	; select bank2
  6762  080E  082D               	movf	(_RF_Data^(0+256)+13),w
  6763  080F  0020               	movlb	0	; select bank0
  6764  0810  00AD               	movwf	??_setLog_Code
  6765  0811  086F               	movf	_product,w
  6766  0812  3E0D               	addlw	13
  6767  0813  0086               	movwf	6
  6768  0814  3001               	movlw	1	; select bank2/3
  6769  0815  0087               	movwf	7
  6770  0816  082D               	movf	??_setLog_Code,w
  6771  0817  0081               	movwf	1
  6772                           
  6773                           ;RF_Control_B1.c: 235: product->Data[14]=RF_Data[14];
  6774  0818  0022               	movlb	2	; select bank2
  6775  0819  082E               	movf	(_RF_Data^(0+256)+14),w
  6776  081A  0020               	movlb	0	; select bank0
  6777  081B  00AD               	movwf	??_setLog_Code
  6778  081C  086F               	movf	_product,w
  6779  081D  3E0E               	addlw	14
  6780  081E  0086               	movwf	6
  6781  081F  3001               	movlw	1	; select bank2/3
  6782  0820  0087               	movwf	7
  6783  0821  082D               	movf	??_setLog_Code,w
  6784  0822  0081               	movwf	1
  6785                           
  6786                           ;RF_Control_B1.c: 236: setBuz(1, 100);
  6787  0823  3064               	movlw	100
  6788  0824  00A9               	movwf	setBuz@time
  6789  0825  3000               	movlw	0
  6790  0826  00AA               	movwf	setBuz@time+1
  6791  0827  3001               	movlw	1
  6792  0828  3189  2134  3188   	fcall	_setBuz
  6793                           
  6794                           ;RF_Control_B1.c: 237: RF1.Learn = 0;
  6795  082B  0021               	movlb	1	; select bank1
  6796  082C  1346               	bcf	_RF1^(0+128),6
  6797                           
  6798                           ;RF_Control_B1.c: 238: if (myMain.First) {
  6799  082D  1FA0               	btfss	_myMain^(0+128),7
  6800  082E  2831               	goto	l1908
  6801                           
  6802                           ;RF_Control_B1.c: 239: Memory.LoopSave=1;
  6803  082F  0022               	movlb	2	; select bank2
  6804  0830  1561               	bsf	(_Memory^(0+256)+36),2
  6805  0831                     l1908:	
  6806                           
  6807                           ;RF_Control_B1.c: 240: }
  6808                           ;RF_Control_B1.c: 241: Memory.Modify=1;
  6809  0831  0022               	movlb	2	; select bank2
  6810  0832  1461               	bsf	(_Memory^(0+256)+36),0
  6811  0833  0008               	return
  6812  0834                     __end_of_setLog_Code:	
  6813                           
  6814                           	psect	text28
  6815  0C32                     __ptext28:	
  6816 ;; *************** function _setControl_Lights_Table *****************
  6817 ;; Defined at:
  6818 ;;		line 245 in file "../src/RF_Control_B1.c"
  6819 ;; Parameters:    Size  Location     Type
  6820 ;;		None
  6821 ;; Auto vars:     Size  Location     Type
  6822 ;;		None
  6823 ;; Return value:  Size  Location     Type
  6824 ;;		None               void
  6825 ;; Registers used:
  6826 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6827 ;; Tracked objects:
  6828 ;;		On entry : 0/0
  6829 ;;		On exit  : 0/0
  6830 ;;		Unchanged: 0/0
  6831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6836 ;;Total ram usage:        0 bytes
  6837 ;; Hardware stack levels used:    1
  6838 ;; Hardware stack levels required when called:   11
  6839 ;; This function calls:
  6840 ;;		_setBuz
  6841 ;;		_setDimmerLights
  6842 ;;		_setRFSW_AdjControl
  6843 ;;		_setRFSW_Control
  6844 ;;		_setRFSW_Status
  6845 ;;		_setSw_Status
  6846 ;;		_setTxData
  6847 ;; This function is called by:
  6848 ;;		_getRxData
  6849 ;; This function uses a non-reentrant model
  6850 ;;
  6851                           
  6852                           
  6853                           ;psect for function _setControl_Lights_Table
  6854  0C32                     _setControl_Lights_Table:	
  6855                           
  6856                           ;RF_Control_B1.c: 246: if (RF_Data[15] == 0x00) {
  6857                           
  6858                           ;incstack = 0
  6859                           ; Regs used in _setControl_Lights_Table: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  6860  0C32  0022               	movlb	2	; select bank2
  6861  0C33  08AF               	movf	(_RF_Data^(0+256)+15),f
  6862  0C34  1D03               	skipz
  6863  0C35  2C6C               	goto	l7565
  6864                           
  6865                           ;RF_Control_B1.c: 248: setDimmerLights(1, 0);
  6866  0C36  0020               	movlb	0	; select bank0
  6867  0C37  01A3               	clrf	setDimmerLights@status
  6868  0C38  3001               	movlw	1
  6869  0C39  318E  2672  318C   	fcall	_setDimmerLights
  6870                           
  6871                           ;RF_Control_B1.c: 249: setRFSW_Status(1, 0);
  6872  0C3C  0020               	movlb	0	; select bank0
  6873  0C3D  01A2               	clrf	setRFSW_Status@command
  6874  0C3E  3001               	movlw	1
  6875  0C3F  319F  2729  318C   	fcall	_setRFSW_Status
  6876                           
  6877                           ;RF_Control_B1.c: 250: setSw_Status(1, 0);
  6878  0C42  0020               	movlb	0	; select bank0
  6879  0C43  01A2               	clrf	setSw_Status@command
  6880  0C44  3001               	movlw	1
  6881  0C45  319F  2745  318C   	fcall	_setSw_Status
  6882                           
  6883                           ;RF_Control_B1.c: 263: product->Data[9]=0;
  6884  0C48  0020               	movlb	0	; select bank0
  6885  0C49  086F               	movf	_product,w
  6886  0C4A  3E09               	addlw	9
  6887  0C4B  0086               	movwf	6
  6888  0C4C  3001               	movlw	1	; select bank2/3
  6889  0C4D  0087               	movwf	7
  6890  0C4E  0181               	clrf	1
  6891                           
  6892                           ;RF_Control_B1.c: 264: product->Data[11]=0;
  6893  0C4F  086F               	movf	_product,w
  6894  0C50  3E0B               	addlw	11
  6895  0C51  0086               	movwf	6
  6896  0C52  3001               	movlw	1	; select bank2/3
  6897  0C53  0087               	movwf	7
  6898  0C54  0181               	clrf	1
  6899                           
  6900                           ;RF_Control_B1.c: 265: product->Data[15]=0;
  6901  0C55  086F               	movf	_product,w
  6902  0C56  3E0F               	addlw	15
  6903  0C57  0086               	movwf	6
  6904  0C58  3001               	movlw	1	; select bank2/3
  6905  0C59  0087               	movwf	7
  6906  0C5A  0181               	clrf	1
  6907                           
  6908                           ;RF_Control_B1.c: 266: product->Data[17]=0;
  6909  0C5B  086F               	movf	_product,w
  6910  0C5C  3E11               	addlw	17
  6911  0C5D  0086               	movwf	6
  6912  0C5E  3001               	movlw	1	; select bank2/3
  6913  0C5F  0087               	movwf	7
  6914  0C60  0181               	clrf	1
  6915                           
  6916                           ;RF_Control_B1.c: 267: setBuz(1, 100);
  6917  0C61  3064               	movlw	100
  6918  0C62  00A9               	movwf	setBuz@time
  6919  0C63  3000               	movlw	0
  6920  0C64  00AA               	movwf	setBuz@time+1
  6921  0C65  3001               	movlw	1
  6922  0C66  3189  2134  318C   	fcall	_setBuz
  6923                           
  6924                           ;RF_Control_B1.c: 268: setTxData();
  6925  0C69  3184  24F1         	fcall	_setTxData
  6926                           
  6927                           ;RF_Control_B1.c: 269: } else if (RF_Data[15] == 0x20) {
  6928  0C6B  0008               	return
  6929  0C6C                     l7565:	
  6930  0C6C  0022               	movlb	2	; select bank2
  6931  0C6D  082F               	movf	(_RF_Data^(0+256)+15),w
  6932  0C6E  3A20               	xorlw	32
  6933  0C6F  1D03               	skipz
  6934  0C70  2C87               	goto	l7571
  6935                           
  6936                           ;RF_Control_B1.c: 270: product->Data[9]=0;
  6937  0C71  0020               	movlb	0	; select bank0
  6938  0C72  086F               	movf	_product,w
  6939  0C73  3E09               	addlw	9
  6940  0C74  0086               	movwf	6
  6941  0C75  3001               	movlw	1	; select bank2/3
  6942  0C76  0087               	movwf	7
  6943  0C77  0181               	clrf	1
  6944                           
  6945                           ;RF_Control_B1.c: 271: product->Data[11]=0;
  6946  0C78  086F               	movf	_product,w
  6947  0C79  3E0B               	addlw	11
  6948  0C7A  0086               	movwf	6
  6949  0C7B  3001               	movlw	1	; select bank2/3
  6950  0C7C  0087               	movwf	7
  6951  0C7D  0181               	clrf	1
  6952                           
  6953                           ;RF_Control_B1.c: 272: product->Data[17]=0;
  6954  0C7E  086F               	movf	_product,w
  6955  0C7F  3E11               	addlw	17
  6956  0C80  0086               	movwf	6
  6957  0C81  3001               	movlw	1	; select bank2/3
  6958  0C82  0087               	movwf	7
  6959  0C83  0181               	clrf	1
  6960                           
  6961                           ;RF_Control_B1.c: 273: setTxData();
  6962  0C84  3184  24F1         	fcall	_setTxData
  6963                           
  6964                           ;RF_Control_B1.c: 274: }
  6965  0C86  0008               	return
  6966  0C87                     l7571:	
  6967                           
  6968                           ;RF_Control_B1.c: 276: else if (RF_Data[15] == 0x01) {
  6969  0C87  0022               	movlb	2	; select bank2
  6970  0C88  082F               	movf	(_RF_Data^(0+256)+15),w
  6971  0C89  3A01               	xorlw	1
  6972  0C8A  1D03               	skipz
  6973  0C8B  2C90               	goto	l7575
  6974                           
  6975                           ;RF_Control_B1.c: 277: setRFSW_Control(1);
  6976  0C8C  3001               	movlw	1
  6977  0C8D  3187  2707         	fcall	_setRFSW_Control
  6978                           
  6979                           ;RF_Control_B1.c: 278: }
  6980  0C8F  0008               	return
  6981  0C90                     l7575:	
  6982                           
  6983                           ;RF_Control_B1.c: 280: else if (RF_Data[15] == 0x11) {
  6984  0C90  0022               	movlb	2	; select bank2
  6985  0C91  082F               	movf	(_RF_Data^(0+256)+15),w
  6986  0C92  3A11               	xorlw	17
  6987  0C93  1D03               	skipz
  6988  0C94  0008               	return
  6989                           
  6990                           ;RF_Control_B1.c: 281: setRFSW_AdjControl(1);
  6991  0C95  3001               	movlw	1
  6992  0C96  3194  24C6         	fcall	_setRFSW_AdjControl
  6993  0C98  0008               	return
  6994  0C99                     __end_of_setControl_Lights_Table:	
  6995                           
  6996                           	psect	text29
  6997  0707                     __ptext29:	
  6998 ;; *************** function _setRFSW_Control *****************
  6999 ;; Defined at:
  7000 ;;		line 333 in file "../src/RF_Control_B1.c"
  7001 ;; Parameters:    Size  Location     Type
  7002 ;;  sw              1    wreg     unsigned char 
  7003 ;; Auto vars:     Size  Location     Type
  7004 ;;  sw              1   67[BANK0 ] unsigned char 
  7005 ;; Return value:  Size  Location     Type
  7006 ;;		None               void
  7007 ;; Registers used:
  7008 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7009 ;; Tracked objects:
  7010 ;;		On entry : 0/0
  7011 ;;		On exit  : 0/0
  7012 ;;		Unchanged: 0/0
  7013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7015 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7016 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7017 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7018 ;;Total ram usage:        2 bytes
  7019 ;; Hardware stack levels used:    1
  7020 ;; Hardware stack levels required when called:    9
  7021 ;; This function calls:
  7022 ;;		_RfSWPointSelect
  7023 ;;		_setBuz
  7024 ;;		_setDelayOff_GO
  7025 ;;		_setDimmerLights_Switch
  7026 ;;		_setDimmerLights_Trigger
  7027 ;;		_setRF_DimmerLights
  7028 ;;		_setSw_Status
  7029 ;;		_setTxData
  7030 ;; This function is called by:
  7031 ;;		_setControl_Lights_Table
  7032 ;; This function uses a non-reentrant model
  7033 ;;
  7034                           
  7035                           
  7036                           ;psect for function _setRFSW_Control
  7037  0707                     _setRFSW_Control:	
  7038                           
  7039                           ;incstack = 0
  7040                           ; Regs used in _setRFSW_Control: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7041                           ;setRFSW_Control@sw stored from wreg
  7042  0707  0020               	movlb	0	; select bank0
  7043  0708  00E3               	movwf	setRFSW_Control@sw
  7044                           
  7045                           ;RF_Control_B1.c: 334: RfSWPointSelect(sw);
  7046  0709  0863               	movf	setRFSW_Control@sw,w
  7047  070A  319E  26BC  3187   	fcall	_RfSWPointSelect
  7048                           
  7049                           ;RF_Control_B1.c: 335: if (RFSW->Status == 0) {
  7050  070D  087A               	movf	_RFSW,w
  7051  070E  0086               	movwf	6
  7052  070F  0187               	clrf	7
  7053  0710  1801               	btfsc	1,0
  7054  0711  2F46               	goto	l5873
  7055                           
  7056                           ;RF_Control_B1.c: 336: if (RF_Data[16] == 0x80) {
  7057  0712  0022               	movlb	2	; select bank2
  7058  0713  0830               	movf	(_RF_Data^(0+256)+16),w
  7059  0714  3A80               	xorlw	128
  7060  0715  1D03               	skipz
  7061  0716  2F24               	goto	l5863
  7062                           
  7063                           ;RF_Control_B1.c: 337: setDelayOff_GO(sw, 1, RF_Data[17]);
  7064  0717  0020               	movlb	0	; select bank0
  7065  0718  01AA               	clrf	setDelayOff_GO@command
  7066  0719  0AAA               	incf	setDelayOff_GO@command,f
  7067  071A  0022               	movlb	2	; select bank2
  7068  071B  0831               	movf	(_RF_Data^(0+256)+17),w
  7069  071C  0020               	movlb	0	; select bank0
  7070  071D  00E2               	movwf	??_setRFSW_Control
  7071  071E  0862               	movf	??_setRFSW_Control,w
  7072  071F  00AB               	movwf	setDelayOff_GO@value
  7073  0720  0863               	movf	setRFSW_Control@sw,w
  7074  0721  318B  23CC  3187   	fcall	_setDelayOff_GO
  7075  0724                     l5863:	
  7076                           
  7077                           ;RF_Control_B1.c: 338: }
  7078                           ;RF_Control_B1.c: 339: RFSW->Status = 1;
  7079  0724  087A               	movf	_RFSW,w
  7080  0725  0086               	movwf	6
  7081  0726  0187               	clrf	7
  7082  0727  1401               	bsf	1,0
  7083                           
  7084                           ;RF_Control_B1.c: 340: setSw_Status(sw, 1);
  7085  0728  0020               	movlb	0	; select bank0
  7086  0729  01A2               	clrf	setSw_Status@command
  7087  072A  0AA2               	incf	setSw_Status@command,f
  7088  072B  0863               	movf	setRFSW_Control@sw,w
  7089  072C  319F  2745  3187   	fcall	_setSw_Status
  7090                           
  7091                           ;RF_Control_B1.c: 342: setDimmerLights_Trigger(sw, 1);
  7092  072F  0020               	movlb	0	; select bank0
  7093  0730  01A2               	clrf	setDimmerLights_Trigger@command
  7094  0731  0AA2               	incf	setDimmerLights_Trigger@command,f
  7095  0732  0863               	movf	setRFSW_Control@sw,w
  7096  0733  319F  27AF  3187   	fcall	_setDimmerLights_Trigger
  7097                           
  7098                           ;RF_Control_B1.c: 343: setDimmerLights_Switch(sw, 1);
  7099  0736  0020               	movlb	0	; select bank0
  7100  0737  01A2               	clrf	setDimmerLights_Switch@command
  7101  0738  0AA2               	incf	setDimmerLights_Switch@command,f
  7102  0739  0863               	movf	setRFSW_Control@sw,w
  7103  073A  319F  279F  3187   	fcall	_setDimmerLights_Switch
  7104                           
  7105                           ;RF_Control_B1.c: 345: setRF_DimmerLights(sw, RFSW->Status);
  7106  073D  087A               	movf	_RFSW,w
  7107  073E  0086               	movwf	6
  7108  073F  0187               	clrf	7
  7109  0740  3000               	movlw	0
  7110  0741  1801               	btfsc	1,0
  7111  0742  3001               	movlw	1
  7112  0743  0020               	movlb	0	; select bank0
  7113  0744  00DD               	movwf	setRF_DimmerLights@on
  7114  0745  2F82               	goto	L1
  7115  0746                     l5873:	
  7116                           ;RF_Control_B1.c: 346: } else {
  7117                           
  7118                           
  7119                           ;RF_Control_B1.c: 347: if (RF_Data[16] == 0x80) {
  7120  0746  0022               	movlb	2	; select bank2
  7121  0747  0830               	movf	(_RF_Data^(0+256)+16),w
  7122  0748  3A80               	xorlw	128
  7123  0749  1D03               	skipz
  7124  074A  2F5C               	goto	l5877
  7125                           
  7126                           ;RF_Control_B1.c: 348: setDelayOff_GO(sw, 1, RF_Data[17]);
  7127  074B  0020               	movlb	0	; select bank0
  7128  074C  01AA               	clrf	setDelayOff_GO@command
  7129  074D  0AAA               	incf	setDelayOff_GO@command,f
  7130  074E  0022               	movlb	2	; select bank2
  7131  074F  0831               	movf	(_RF_Data^(0+256)+17),w
  7132  0750  0020               	movlb	0	; select bank0
  7133  0751  00E2               	movwf	??_setRFSW_Control
  7134  0752  0862               	movf	??_setRFSW_Control,w
  7135  0753  00AB               	movwf	setDelayOff_GO@value
  7136  0754  0863               	movf	setRFSW_Control@sw,w
  7137  0755  318B  23CC  3187   	fcall	_setDelayOff_GO
  7138                           
  7139                           ;RF_Control_B1.c: 349: setRF_DimmerLights(sw, 1);
  7140  0758  0020               	movlb	0	; select bank0
  7141  0759  01DD               	clrf	setRF_DimmerLights@on
  7142  075A  0ADD               	incf	setRF_DimmerLights@on,f
  7143  075B  2F82               	goto	L1
  7144  075C                     l5877:	
  7145                           ;RF_Control_B1.c: 350: } else {
  7146                           
  7147                           
  7148                           ;RF_Control_B1.c: 351: RFSW->Status = 0;
  7149  075C  087A               	movf	_RFSW,w
  7150  075D  0086               	movwf	6
  7151  075E  0187               	clrf	7
  7152  075F  1001               	bcf	1,0
  7153                           
  7154                           ;RF_Control_B1.c: 352: setSw_Status(sw, 0);
  7155  0760  0020               	movlb	0	; select bank0
  7156  0761  01A2               	clrf	setSw_Status@command
  7157  0762  0863               	movf	setRFSW_Control@sw,w
  7158  0763  319F  2745  3187   	fcall	_setSw_Status
  7159                           
  7160                           ;RF_Control_B1.c: 354: setDimmerLights_Trigger(sw, 1);
  7161  0766  0020               	movlb	0	; select bank0
  7162  0767  01A2               	clrf	setDimmerLights_Trigger@command
  7163  0768  0AA2               	incf	setDimmerLights_Trigger@command,f
  7164  0769  0863               	movf	setRFSW_Control@sw,w
  7165  076A  319F  27AF  3187   	fcall	_setDimmerLights_Trigger
  7166                           
  7167                           ;RF_Control_B1.c: 355: setDimmerLights_Switch(sw, RFSW->Status);
  7168  076D  087A               	movf	_RFSW,w
  7169  076E  0086               	movwf	6
  7170  076F  0187               	clrf	7
  7171  0770  3000               	movlw	0
  7172  0771  1801               	btfsc	1,0
  7173  0772  3001               	movlw	1
  7174  0773  0020               	movlb	0	; select bank0
  7175  0774  00A2               	movwf	setDimmerLights_Switch@command
  7176  0775  0863               	movf	setRFSW_Control@sw,w
  7177  0776  319F  279F  3187   	fcall	_setDimmerLights_Switch
  7178                           
  7179                           ;RF_Control_B1.c: 357: setDelayOff_GO(sw, 0, 0);
  7180  0779  0020               	movlb	0	; select bank0
  7181  077A  01AA               	clrf	setDelayOff_GO@command
  7182  077B  01AB               	clrf	setDelayOff_GO@value
  7183  077C  0863               	movf	setRFSW_Control@sw,w
  7184  077D  318B  23CC  3187   	fcall	_setDelayOff_GO
  7185                           
  7186                           ;RF_Control_B1.c: 358: setRF_DimmerLights(sw, 0);
  7187  0780  0020               	movlb	0	; select bank0
  7188  0781  01DD               	clrf	setRF_DimmerLights@on
  7189  0782                     L1:	
  7190  0782  0863               	movf	setRFSW_Control@sw,w
  7191  0783  3187  2792  3187   	fcall	_setRF_DimmerLights
  7192                           
  7193                           ;RF_Control_B1.c: 359: }
  7194                           ;RF_Control_B1.c: 360: }
  7195                           ;RF_Control_B1.c: 361: setBuz(1, 100);
  7196  0786  3064               	movlw	100
  7197  0787  0020               	movlb	0	; select bank0
  7198  0788  00A9               	movwf	setBuz@time
  7199  0789  3000               	movlw	0
  7200  078A  00AA               	movwf	setBuz@time+1
  7201  078B  3001               	movlw	1
  7202  078C  3189  2134  3187   	fcall	_setBuz
  7203                           
  7204                           ;RF_Control_B1.c: 362: setTxData();
  7205  078F  3184  24F1         	fcall	_setTxData
  7206  0791  0008               	return
  7207  0792                     __end_of_setRFSW_Control:	
  7208                           
  7209                           	psect	text30
  7210  0BCC                     __ptext30:	
  7211 ;; *************** function _setDelayOff_GO *****************
  7212 ;; Defined at:
  7213 ;;		line 86 in file "../src/DelayOff_B1.c"
  7214 ;; Parameters:    Size  Location     Type
  7215 ;;  sw              1    wreg     unsigned char 
  7216 ;;  command         1   10[BANK0 ] unsigned char 
  7217 ;;  value           1   11[BANK0 ] unsigned char 
  7218 ;; Auto vars:     Size  Location     Type
  7219 ;;  sw              1   14[BANK0 ] unsigned char 
  7220 ;; Return value:  Size  Location     Type
  7221 ;;		None               void
  7222 ;; Registers used:
  7223 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7224 ;; Tracked objects:
  7225 ;;		On entry : 0/0
  7226 ;;		On exit  : 0/0
  7227 ;;		Unchanged: 0/0
  7228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7229 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7230 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7231 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7232 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7233 ;;Total ram usage:        5 bytes
  7234 ;; Hardware stack levels used:    1
  7235 ;; Hardware stack levels required when called:    7
  7236 ;; This function calls:
  7237 ;;		_DelayOffPointSelect
  7238 ;;		_DelayTimejudge
  7239 ;; This function is called by:
  7240 ;;		_setRFSW_Control
  7241 ;;		_Sw_DimmerOffFunc
  7242 ;; This function uses a non-reentrant model
  7243 ;;
  7244                           
  7245                           
  7246                           ;psect for function _setDelayOff_GO
  7247  0BCC                     _setDelayOff_GO:	
  7248                           
  7249                           ;incstack = 0
  7250                           ; Regs used in _setDelayOff_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7251                           ;setDelayOff_GO@sw stored from wreg
  7252  0BCC  0020               	movlb	0	; select bank0
  7253  0BCD  00AE               	movwf	setDelayOff_GO@sw
  7254                           
  7255                           ;DelayOff_B1.c: 87: DelayOffPointSelect(sw);
  7256  0BCE  082E               	movf	setDelayOff_GO@sw,w
  7257  0BCF  319E  269B  318B   	fcall	_DelayOffPointSelect
  7258                           
  7259                           ;DelayOff_B1.c: 88: if (DelayOff->Enable == 1) {
  7260  0BD2  0878               	movf	_DelayOff,w
  7261  0BD3  0086               	movwf	6
  7262  0BD4  3001               	movlw	1	; select bank2/3
  7263  0BD5  0087               	movwf	7
  7264  0BD6  1C01               	btfss	1,0
  7265  0BD7  0008               	return
  7266                           
  7267                           ;DelayOff_B1.c: 89: DelayOff->GO = command == 1 ? 1 : 0;
  7268  0BD8  0020               	movlb	0	; select bank0
  7269  0BD9  082A               	movf	setDelayOff_GO@command,w
  7270  0BDA  3A01               	xorlw	1
  7271  0BDB  3000               	movlw	0
  7272  0BDC  1903               	skipnz
  7273  0BDD  3001               	movlw	1
  7274  0BDE  00AC               	movwf	??_setDelayOff_GO
  7275  0BDF  0878               	movf	_DelayOff,w
  7276  0BE0  0086               	movwf	6
  7277  0BE1  3001               	movlw	1	; select bank2/3
  7278  0BE2  0087               	movwf	7
  7279  0BE3  0DAC               	rlf	??_setDelayOff_GO,f
  7280  0BE4  0801               	movf	1,w
  7281  0BE5  062C               	xorwf	??_setDelayOff_GO,w
  7282  0BE6  39FD               	andlw	-3
  7283  0BE7  062C               	xorwf	??_setDelayOff_GO,w
  7284  0BE8  0081               	movwf	1
  7285                           
  7286                           ;DelayOff_B1.c: 90: if (command == 1) {
  7287  0BE9  082A               	movf	setDelayOff_GO@command,w
  7288  0BEA  3A01               	xorlw	1
  7289  0BEB  1D03               	skipz
  7290  0BEC  2C17               	goto	l5677
  7291                           
  7292                           ;DelayOff_B1.c: 91: DelayOff->Value = DelayTimejudge(value);
  7293  0BED  082B               	movf	setDelayOff_GO@value,w
  7294  0BEE  3193  2340  318B   	fcall	_DelayTimejudge
  7295  0BF1  0020               	movlb	0	; select bank0
  7296  0BF2  00AC               	movwf	??_setDelayOff_GO
  7297  0BF3  0A78               	incf	_DelayOff,w
  7298  0BF4  0086               	movwf	6
  7299  0BF5  3001               	movlw	1	; select bank2/3
  7300  0BF6  0087               	movwf	7
  7301  0BF7  082C               	movf	??_setDelayOff_GO,w
  7302  0BF8  0081               	movwf	1
  7303                           
  7304                           ;DelayOff_B1.c: 92: if (((value % 16) == 5 || (value % 16) == 0) && value <= 0x25) {
  7305  0BF9  300F               	movlw	15
  7306  0BFA  052B               	andwf	setDelayOff_GO@value,w
  7307  0BFB  00AC               	movwf	??_setDelayOff_GO
  7308  0BFC  082C               	movf	??_setDelayOff_GO,w
  7309  0BFD  3A05               	xorlw	5
  7310  0BFE  1903               	skipnz
  7311  0BFF  2C04               	goto	l5671
  7312  0C00  082B               	movf	setDelayOff_GO@value,w
  7313  0C01  390F               	andlw	15
  7314  0C02  1D03               	btfss	3,2
  7315  0C03  2C0A               	goto	l5675
  7316  0C04                     l5671:	
  7317  0C04  3026               	movlw	38
  7318  0C05  022B               	subwf	setDelayOff_GO@value,w
  7319  0C06  1803               	skipnc
  7320  0C07  2C0A               	goto	l5675
  7321                           
  7322                           ;DelayOff_B1.c: 93: product->Data[26 + sw]=value;
  7323  0C08  082B               	movf	setDelayOff_GO@value,w
  7324  0C09  2C0B               	goto	L2
  7325  0C0A                     l5675:	
  7326                           ;DelayOff_B1.c: 94: } else {
  7327                           
  7328                           
  7329                           ;DelayOff_B1.c: 95: product->Data[26 + sw]=0x05;
  7330  0C0A  3005               	movlw	5
  7331  0C0B                     L2:	
  7332  0C0B  00AC               	movwf	??_setDelayOff_GO
  7333  0C0C  082E               	movf	setDelayOff_GO@sw,w
  7334  0C0D  3E1A               	addlw	26
  7335  0C0E  076F               	addwf	_product,w
  7336  0C0F  00AD               	movwf	??_setDelayOff_GO+1
  7337  0C10  082D               	movf	??_setDelayOff_GO+1,w
  7338  0C11  0086               	movwf	6
  7339  0C12  3001               	movlw	1	; select bank2/3
  7340  0C13  0087               	movwf	7
  7341  0C14  082C               	movf	??_setDelayOff_GO,w
  7342  0C15  0081               	movwf	1
  7343                           
  7344                           ;DelayOff_B1.c: 96: }
  7345                           ;DelayOff_B1.c: 97: } else if (command == 0) {
  7346  0C16  2C23               	goto	l5681
  7347  0C17                     l5677:	
  7348  0C17  08AA               	movf	setDelayOff_GO@command,f
  7349  0C18  1D03               	skipz
  7350  0C19  2C23               	goto	l5681
  7351                           
  7352                           ;DelayOff_B1.c: 98: product->Data[sw + 26]=0;
  7353  0C1A  082E               	movf	setDelayOff_GO@sw,w
  7354  0C1B  3E1A               	addlw	26
  7355  0C1C  076F               	addwf	_product,w
  7356  0C1D  00AC               	movwf	??_setDelayOff_GO
  7357  0C1E  082C               	movf	??_setDelayOff_GO,w
  7358  0C1F  0086               	movwf	6
  7359  0C20  3001               	movlw	1	; select bank2/3
  7360  0C21  0087               	movwf	7
  7361  0C22  0181               	clrf	1
  7362  0C23                     l5681:	
  7363                           
  7364                           ;DelayOff_B1.c: 99: }
  7365                           ;DelayOff_B1.c: 100: DelayOff->SecondTime = 0;
  7366  0C23  0878               	movf	_DelayOff,w
  7367  0C24  3E02               	addlw	2
  7368  0C25  0086               	movwf	6
  7369  0C26  3001               	movlw	1	; select bank2/3
  7370  0C27  0087               	movwf	7
  7371  0C28  3000               	movlw	0
  7372  0C29  3FC0               	movwi [0]fsr1
  7373  0C2A  3FC1               	movwi [1]fsr1
  7374                           
  7375                           ;DelayOff_B1.c: 101: DelayOff->MinuteTime = 0;
  7376  0C2B  0878               	movf	_DelayOff,w
  7377  0C2C  3E04               	addlw	4
  7378  0C2D  0086               	movwf	6
  7379  0C2E  3001               	movlw	1	; select bank2/3
  7380  0C2F  0087               	movwf	7
  7381  0C30  0181               	clrf	1
  7382  0C31  0008               	return
  7383  0C32                     __end_of_setDelayOff_GO:	
  7384                           
  7385                           	psect	text31
  7386  1340                     __ptext31:	
  7387 ;; *************** function _DelayTimejudge *****************
  7388 ;; Defined at:
  7389 ;;		line 106 in file "../src/DelayOff_B1.c"
  7390 ;; Parameters:    Size  Location     Type
  7391 ;;  value           1    wreg     unsigned char 
  7392 ;; Auto vars:     Size  Location     Type
  7393 ;;  value           1    9[BANK0 ] unsigned char 
  7394 ;;  k               1    8[BANK0 ] unsigned char 
  7395 ;;  j               1    7[BANK0 ] unsigned char 
  7396 ;;  i               1    6[BANK0 ] unsigned char 
  7397 ;; Return value:  Size  Location     Type
  7398 ;;                  1    wreg      unsigned char 
  7399 ;; Registers used:
  7400 ;;		wreg, status,2, status,0, pclath, cstack
  7401 ;; Tracked objects:
  7402 ;;		On entry : 0/0
  7403 ;;		On exit  : 0/0
  7404 ;;		Unchanged: 0/0
  7405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7407 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7408 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7409 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7410 ;;Total ram usage:        6 bytes
  7411 ;; Hardware stack levels used:    1
  7412 ;; Hardware stack levels required when called:    6
  7413 ;; This function calls:
  7414 ;;		___bmul
  7415 ;; This function is called by:
  7416 ;;		_setDelayOff_GO
  7417 ;; This function uses a non-reentrant model
  7418 ;;
  7419                           
  7420                           
  7421                           ;psect for function _DelayTimejudge
  7422  1340                     _DelayTimejudge:	
  7423                           
  7424                           ;incstack = 0
  7425                           ; Regs used in _DelayTimejudge: [wreg+status,2+status,0+pclath+cstack]
  7426                           ;DelayTimejudge@value stored from wreg
  7427  1340  0020               	movlb	0	; select bank0
  7428  1341  00A9               	movwf	DelayTimejudge@value
  7429                           
  7430                           ;DelayOff_B1.c: 107: char i = 5, j = 0, k = 0;
  7431  1342  3005               	movlw	5
  7432  1343  00A4               	movwf	??_DelayTimejudge
  7433  1344  0824               	movf	??_DelayTimejudge,w
  7434  1345  00A6               	movwf	DelayTimejudge@i
  7435  1346  01A7               	clrf	DelayTimejudge@j
  7436  1347  01A8               	clrf	DelayTimejudge@k
  7437                           
  7438                           ;DelayOff_B1.c: 108: if (value <= 0x30) {
  7439  1348  3031               	movlw	49
  7440  1349  0229               	subwf	DelayTimejudge@value,w
  7441  134A  1803               	skipnc
  7442  134B  2B68               	goto	l5469
  7443                           
  7444                           ;DelayOff_B1.c: 109: j = value & 0x0f;
  7445  134C  0829               	movf	DelayTimejudge@value,w
  7446  134D  390F               	andlw	15
  7447  134E  00A4               	movwf	??_DelayTimejudge
  7448  134F  0824               	movf	??_DelayTimejudge,w
  7449  1350  00A7               	movwf	DelayTimejudge@j
  7450                           
  7451                           ;DelayOff_B1.c: 110: k = (value >> 4) & 0x0f;
  7452  1351  0829               	movf	DelayTimejudge@value,w
  7453  1352  00A4               	movwf	??_DelayTimejudge
  7454  1353  3004               	movlw	4
  7455  1354                     u4175:	
  7456  1354  36A4               	lsrf	??_DelayTimejudge,f
  7457  1355  0B89               	decfsz	9,f
  7458  1356  2B54               	goto	u4175
  7459  1357  0824               	movf	??_DelayTimejudge,w
  7460  1358  390F               	andlw	15
  7461  1359  00A5               	movwf	??_DelayTimejudge+1
  7462  135A  0825               	movf	??_DelayTimejudge+1,w
  7463  135B  00A8               	movwf	DelayTimejudge@k
  7464                           
  7465                           ;DelayOff_B1.c: 111: i = j + (k * 10);
  7466  135C  300A               	movlw	10
  7467  135D  00A4               	movwf	??_DelayTimejudge
  7468  135E  0824               	movf	??_DelayTimejudge,w
  7469  135F  00A0               	movwf	___bmul@multiplicand
  7470  1360  0828               	movf	DelayTimejudge@k,w
  7471  1361  3190  2082         	fcall	___bmul
  7472  1363  0020               	movlb	0	; select bank0
  7473  1364  0727               	addwf	DelayTimejudge@j,w
  7474  1365  00A5               	movwf	??_DelayTimejudge+1
  7475  1366  0825               	movf	??_DelayTimejudge+1,w
  7476  1367  00A6               	movwf	DelayTimejudge@i
  7477  1368                     l5469:	
  7478                           
  7479                           ;DelayOff_B1.c: 112: }
  7480                           ;DelayOff_B1.c: 133: return i;
  7481  1368  0826               	movf	DelayTimejudge@i,w
  7482  1369  0008               	return
  7483  136A                     __end_of_DelayTimejudge:	
  7484                           
  7485                           	psect	text32
  7486  1082                     __ptext32:	
  7487 ;; *************** function ___bmul *****************
  7488 ;; Defined at:
  7489 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul8.c"
  7490 ;; Parameters:    Size  Location     Type
  7491 ;;  multiplier      1    wreg     unsigned char 
  7492 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  7493 ;; Auto vars:     Size  Location     Type
  7494 ;;  multiplier      1    3[BANK0 ] unsigned char 
  7495 ;;  product         1    2[BANK0 ] unsigned char 
  7496 ;; Return value:  Size  Location     Type
  7497 ;;                  1    wreg      unsigned char 
  7498 ;; Registers used:
  7499 ;;		wreg, status,2, status,0
  7500 ;; Tracked objects:
  7501 ;;		On entry : 0/0
  7502 ;;		On exit  : 0/0
  7503 ;;		Unchanged: 0/0
  7504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7505 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7506 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7507 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7508 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7509 ;;Total ram usage:        4 bytes
  7510 ;; Hardware stack levels used:    1
  7511 ;; Hardware stack levels required when called:    5
  7512 ;; This function calls:
  7513 ;;		Nothing
  7514 ;; This function is called by:
  7515 ;;		_DelayTimejudge
  7516 ;; This function uses a non-reentrant model
  7517 ;;
  7518                           
  7519                           
  7520                           ;psect for function ___bmul
  7521  1082                     ___bmul:	
  7522                           
  7523                           ;incstack = 0
  7524                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7525                           ;___bmul@multiplier stored from wreg
  7526  1082  0020               	movlb	0	; select bank0
  7527  1083  00A3               	movwf	___bmul@multiplier
  7528  1084  01A2               	clrf	___bmul@product
  7529  1085                     l5439:	
  7530  1085  1C23               	btfss	___bmul@multiplier,0
  7531  1086  288B               	goto	l5443
  7532  1087  0820               	movf	___bmul@multiplicand,w
  7533  1088  00A1               	movwf	??___bmul
  7534  1089  0821               	movf	??___bmul,w
  7535  108A  07A2               	addwf	___bmul@product,f
  7536  108B                     l5443:	
  7537  108B  1003               	clrc
  7538  108C  0DA0               	rlf	___bmul@multiplicand,f
  7539  108D  1003               	clrc
  7540  108E  0CA3               	rrf	___bmul@multiplier,f
  7541  108F  08A3               	movf	___bmul@multiplier,f
  7542  1090  1D03               	skipz
  7543  1091  2885               	goto	l5439
  7544  1092  0822               	movf	___bmul@product,w
  7545  1093  0008               	return
  7546  1094                     __end_of___bmul:	
  7547                           
  7548                           	psect	text33
  7549  14C6                     __ptext33:	
  7550 ;; *************** function _setRFSW_AdjControl *****************
  7551 ;; Defined at:
  7552 ;;		line 366 in file "../src/RF_Control_B1.c"
  7553 ;; Parameters:    Size  Location     Type
  7554 ;;  sw              1    wreg     unsigned char 
  7555 ;; Auto vars:     Size  Location     Type
  7556 ;;  sw              1   70[BANK0 ] unsigned char 
  7557 ;; Return value:  Size  Location     Type
  7558 ;;		None               void
  7559 ;; Registers used:
  7560 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7561 ;; Tracked objects:
  7562 ;;		On entry : 0/0
  7563 ;;		On exit  : 0/0
  7564 ;;		Unchanged: 0/0
  7565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7567 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7568 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7569 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7570 ;;Total ram usage:        3 bytes
  7571 ;; Hardware stack levels used:    1
  7572 ;; Hardware stack levels required when called:   10
  7573 ;; This function calls:
  7574 ;;		_RfSWPointSelect
  7575 ;;		_setRF_DimmerValue
  7576 ;;		_setTxData
  7577 ;; This function is called by:
  7578 ;;		_setControl_Lights_Table
  7579 ;; This function uses a non-reentrant model
  7580 ;;
  7581                           
  7582                           
  7583                           ;psect for function _setRFSW_AdjControl
  7584  14C6                     _setRFSW_AdjControl:	
  7585                           
  7586                           ;incstack = 0
  7587                           ; Regs used in _setRFSW_AdjControl: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7588                           ;setRFSW_AdjControl@sw stored from wreg
  7589  14C6  0020               	movlb	0	; select bank0
  7590  14C7  00E6               	movwf	setRFSW_AdjControl@sw
  7591                           
  7592                           ;RF_Control_B1.c: 367: RfSWPointSelect(sw);
  7593  14C8  0866               	movf	setRFSW_AdjControl@sw,w
  7594  14C9  319E  26BC  3194   	fcall	_RfSWPointSelect
  7595                           
  7596                           ;RF_Control_B1.c: 368: if (RFSW->Status == 1) {
  7597  14CC  087A               	movf	_RFSW,w
  7598  14CD  0086               	movwf	6
  7599  14CE  0187               	clrf	7
  7600  14CF  1C01               	btfss	1,0
  7601  14D0  2CD9               	goto	l5901
  7602                           
  7603                           ;RF_Control_B1.c: 369: Memory.Modify=1;
  7604  14D1  0022               	movlb	2	; select bank2
  7605  14D2  1461               	bsf	(_Memory^(0+256)+36),0
  7606                           
  7607                           ;RF_Control_B1.c: 370: setRF_DimmerValue(sw);
  7608  14D3  0020               	movlb	0	; select bank0
  7609  14D4  0866               	movf	setRFSW_AdjControl@sw,w
  7610  14D5  3194  2422  3194   	fcall	_setRF_DimmerValue
  7611                           
  7612                           ;RF_Control_B1.c: 371: } else {
  7613  14D8  2CEB               	goto	l1935
  7614  14D9                     l5901:	
  7615                           
  7616                           ;RF_Control_B1.c: 372: product->Data[9]=product->Data[20 + sw];
  7617  14D9  0020               	movlb	0	; select bank0
  7618  14DA  0866               	movf	setRFSW_AdjControl@sw,w
  7619  14DB  3E14               	addlw	20
  7620  14DC  076F               	addwf	_product,w
  7621  14DD  00E4               	movwf	??_setRFSW_AdjControl
  7622  14DE  0864               	movf	??_setRFSW_AdjControl,w
  7623  14DF  0086               	movwf	6
  7624  14E0  3001               	movlw	1	; select bank2/3
  7625  14E1  0087               	movwf	7
  7626  14E2  0801               	movf	1,w
  7627  14E3  00E5               	movwf	??_setRFSW_AdjControl+1
  7628  14E4  086F               	movf	_product,w
  7629  14E5  3E09               	addlw	9
  7630  14E6  0086               	movwf	6
  7631  14E7  3001               	movlw	1	; select bank2/3
  7632  14E8  0087               	movwf	7
  7633  14E9  0865               	movf	??_setRFSW_AdjControl+1,w
  7634  14EA  0081               	movwf	1
  7635  14EB                     l1935:	
  7636                           
  7637                           ;RF_Control_B1.c: 373: }
  7638                           ;RF_Control_B1.c: 374: product->Data[17]=product->Data[26 + sw];
  7639  14EB  0020               	movlb	0	; select bank0
  7640  14EC  0866               	movf	setRFSW_AdjControl@sw,w
  7641  14ED  3E1A               	addlw	26
  7642  14EE  076F               	addwf	_product,w
  7643  14EF  00E4               	movwf	??_setRFSW_AdjControl
  7644  14F0  0864               	movf	??_setRFSW_AdjControl,w
  7645  14F1  0086               	movwf	6
  7646  14F2  3001               	movlw	1	; select bank2/3
  7647  14F3  0087               	movwf	7
  7648  14F4  0801               	movf	1,w
  7649  14F5  00E5               	movwf	??_setRFSW_AdjControl+1
  7650  14F6  086F               	movf	_product,w
  7651  14F7  3E11               	addlw	17
  7652  14F8  0086               	movwf	6
  7653  14F9  3001               	movlw	1	; select bank2/3
  7654  14FA  0087               	movwf	7
  7655  14FB  0865               	movf	??_setRFSW_AdjControl+1,w
  7656  14FC  0081               	movwf	1
  7657                           
  7658                           ;RF_Control_B1.c: 375: setTxData();
  7659  14FD  3184  24F1         	fcall	_setTxData
  7660  14FF  0008               	return
  7661  1500                     __end_of_setRFSW_AdjControl:	
  7662                           
  7663                           	psect	text34
  7664  1422                     __ptext34:	
  7665 ;; *************** function _setRF_DimmerValue *****************
  7666 ;; Defined at:
  7667 ;;		line 386 in file "../src/RF_Control_B1.c"
  7668 ;; Parameters:    Size  Location     Type
  7669 ;;  lights          1    wreg     unsigned char 
  7670 ;; Auto vars:     Size  Location     Type
  7671 ;;  lights          1   67[BANK0 ] unsigned char 
  7672 ;; Return value:  Size  Location     Type
  7673 ;;		None               void
  7674 ;; Registers used:
  7675 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7676 ;; Tracked objects:
  7677 ;;		On entry : 0/0
  7678 ;;		On exit  : 0/0
  7679 ;;		Unchanged: 0/0
  7680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7682 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7683 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7684 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7685 ;;Total ram usage:        3 bytes
  7686 ;; Hardware stack levels used:    1
  7687 ;; Hardware stack levels required when called:    9
  7688 ;; This function calls:
  7689 ;;		_setDimmerLights_AdjRF
  7690 ;; This function is called by:
  7691 ;;		_setRFSW_AdjControl
  7692 ;; This function uses a non-reentrant model
  7693 ;;
  7694                           
  7695                           
  7696                           ;psect for function _setRF_DimmerValue
  7697  1422                     _setRF_DimmerValue:	
  7698                           
  7699                           ;incstack = 0
  7700                           ; Regs used in _setRF_DimmerValue: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7701                           ;setRF_DimmerValue@lights stored from wreg
  7702  1422  0020               	movlb	0	; select bank0
  7703  1423  00E3               	movwf	setRF_DimmerValue@lights
  7704                           
  7705                           ;RF_Control_B1.c: 387: if (RF_Data[9] > 0x64) {
  7706  1424  3065               	movlw	101
  7707  1425  0022               	movlb	2	; select bank2
  7708  1426  0229               	subwf	(_RF_Data^(0+256)+9),w
  7709  1427  1C03               	skipc
  7710  1428  2C2F               	goto	l5745
  7711                           
  7712                           ;RF_Control_B1.c: 388: RF_Data[9] = 0x64;
  7713  1429  3064               	movlw	100
  7714  142A  0020               	movlb	0	; select bank0
  7715  142B  00E1               	movwf	??_setRF_DimmerValue
  7716  142C  0861               	movf	??_setRF_DimmerValue,w
  7717  142D  0022               	movlb	2	; select bank2
  7718  142E  00A9               	movwf	(_RF_Data^(0+256)+9)
  7719  142F                     l5745:	
  7720                           
  7721                           ;RF_Control_B1.c: 389: }
  7722                           ;RF_Control_B1.c: 390: product->Data[9]=RF_Data[9];
  7723  142F  0829               	movf	(_RF_Data^(0+256)+9),w
  7724  1430  0020               	movlb	0	; select bank0
  7725  1431  00E1               	movwf	??_setRF_DimmerValue
  7726  1432  086F               	movf	_product,w
  7727  1433  3E09               	addlw	9
  7728  1434  0086               	movwf	6
  7729  1435  3001               	movlw	1	; select bank2/3
  7730  1436  0087               	movwf	7
  7731  1437  0861               	movf	??_setRF_DimmerValue,w
  7732  1438  0081               	movwf	1
  7733                           
  7734                           ;RF_Control_B1.c: 391: product->Data[11]=lights;
  7735  1439  0863               	movf	setRF_DimmerValue@lights,w
  7736  143A  00E1               	movwf	??_setRF_DimmerValue
  7737  143B  086F               	movf	_product,w
  7738  143C  3E0B               	addlw	11
  7739  143D  0086               	movwf	6
  7740  143E  3001               	movlw	1	; select bank2/3
  7741  143F  0087               	movwf	7
  7742  1440  0861               	movf	??_setRF_DimmerValue,w
  7743  1441  0081               	movwf	1
  7744                           
  7745                           ;RF_Control_B1.c: 392: product->Data[(20 + lights)]=product->Data[9];
  7746  1442  086F               	movf	_product,w
  7747  1443  3E09               	addlw	9
  7748  1444  0086               	movwf	6
  7749  1445  3001               	movlw	1	; select bank2/3
  7750  1446  0087               	movwf	7
  7751  1447  0801               	movf	1,w
  7752  1448  00E1               	movwf	??_setRF_DimmerValue
  7753  1449  0863               	movf	setRF_DimmerValue@lights,w
  7754  144A  3E14               	addlw	20
  7755  144B  076F               	addwf	_product,w
  7756  144C  00E2               	movwf	??_setRF_DimmerValue+1
  7757  144D  0862               	movf	??_setRF_DimmerValue+1,w
  7758  144E  0086               	movwf	6
  7759  144F  3001               	movlw	1	; select bank2/3
  7760  1450  0087               	movwf	7
  7761  1451  0861               	movf	??_setRF_DimmerValue,w
  7762  1452  0081               	movwf	1
  7763                           
  7764                           ;RF_Control_B1.c: 393: setDimmerLights_AdjRF(lights);
  7765  1453  0863               	movf	setRF_DimmerValue@lights,w
  7766  1454  3192  22A6         	fcall	_setDimmerLights_AdjRF
  7767  1456  0008               	return
  7768  1457                     __end_of_setRF_DimmerValue:	
  7769                           
  7770                           	psect	text35
  7771  12A6                     __ptext35:	
  7772 ;; *************** function _setDimmerLights_AdjRF *****************
  7773 ;; Defined at:
  7774 ;;		line 679 in file "../src/Dimmer_B1.c"
  7775 ;; Parameters:    Size  Location     Type
  7776 ;;  lights          1    wreg     unsigned char 
  7777 ;; Auto vars:     Size  Location     Type
  7778 ;;  lights          1   64[BANK0 ] unsigned char 
  7779 ;; Return value:  Size  Location     Type
  7780 ;;		None               void
  7781 ;; Registers used:
  7782 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7783 ;; Tracked objects:
  7784 ;;		On entry : 0/0
  7785 ;;		On exit  : 0/0
  7786 ;;		Unchanged: 0/0
  7787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7789 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7790 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7791 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7792 ;;Total ram usage:        2 bytes
  7793 ;; Hardware stack levels used:    1
  7794 ;; Hardware stack levels required when called:    8
  7795 ;; This function calls:
  7796 ;;		_DimmerLightsPointSelect
  7797 ;;		_getPercentValue
  7798 ;; This function is called by:
  7799 ;;		_setRF_DimmerValue
  7800 ;; This function uses a non-reentrant model
  7801 ;;
  7802                           
  7803                           
  7804                           ;psect for function _setDimmerLights_AdjRF
  7805  12A6                     _setDimmerLights_AdjRF:	
  7806                           
  7807                           ;incstack = 0
  7808                           ; Regs used in _setDimmerLights_AdjRF: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7809                           ;setDimmerLights_AdjRF@lights stored from wreg
  7810  12A6  0020               	movlb	0	; select bank0
  7811  12A7  00E0               	movwf	setDimmerLights_AdjRF@lights
  7812                           
  7813                           ;Dimmer_B1.c: 681: DimmerLightsPointSelect(lights);
  7814  12A8  0860               	movf	setDimmerLights_AdjRF@lights,w
  7815  12A9  319E  26B1  3192   	fcall	_DimmerLightsPointSelect
  7816                           
  7817                           ;Dimmer_B1.c: 682: DimmerLights->AdjRF = 1;
  7818  12AC  0020               	movlb	0	; select bank0
  7819  12AD  086D               	movf	_DimmerLights,w
  7820  12AE  0086               	movwf	6
  7821  12AF  3001               	movlw	1	; select bank2/3
  7822  12B0  0087               	movwf	7
  7823  12B1  1501               	bsf	1,2
  7824                           
  7825                           ;Dimmer_B1.c: 683: DimmerLights->Signal = 1;
  7826  12B2  086D               	movf	_DimmerLights,w
  7827  12B3  0086               	movwf	6
  7828  12B4  3001               	movlw	1	; select bank2/3
  7829  12B5  0087               	movwf	7
  7830  12B6  1481               	bsf	1,1
  7831                           
  7832                           ;Dimmer_B1.c: 684: DimmerLights->MaxmumValue = getPercentValue(product->Data[9]);
  7833  12B7  086F               	movf	_product,w
  7834  12B8  3E09               	addlw	9
  7835  12B9  0086               	movwf	6
  7836  12BA  3001               	movlw	1	; select bank2/3
  7837  12BB  0087               	movwf	7
  7838  12BC  0801               	movf	1,w
  7839  12BD  3189  21E8         	fcall	_getPercentValue
  7840  12BF  0020               	movlb	0	; select bank0
  7841  12C0  00DF               	movwf	??_setDimmerLights_AdjRF
  7842  12C1  086D               	movf	_DimmerLights,w
  7843  12C2  3E05               	addlw	5
  7844  12C3  0086               	movwf	6
  7845  12C4  3001               	movlw	1	; select bank2/3
  7846  12C5  0087               	movwf	7
  7847  12C6  085F               	movf	??_setDimmerLights_AdjRF,w
  7848  12C7  0081               	movwf	1
  7849  12C8  0008               	return
  7850  12C9                     __end_of_setDimmerLights_AdjRF:	
  7851                           
  7852                           	psect	text36
  7853  09E8                     __ptext36:	
  7854 ;; *************** function _getPercentValue *****************
  7855 ;; Defined at:
  7856 ;;		line 752 in file "../src/Dimmer_B1.c"
  7857 ;; Parameters:    Size  Location     Type
  7858 ;;  value           1    wreg     unsigned char 
  7859 ;; Auto vars:     Size  Location     Type
  7860 ;;  value           1   59[BANK0 ] unsigned char 
  7861 ;;  i               3   60[BANK0 ] float 
  7862 ;; Return value:  Size  Location     Type
  7863 ;;                  1    wreg      unsigned char 
  7864 ;; Registers used:
  7865 ;;		wreg, status,2, status,0, pclath, cstack
  7866 ;; Tracked objects:
  7867 ;;		On entry : 0/0
  7868 ;;		On exit  : 0/0
  7869 ;;		Unchanged: 0/0
  7870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7872 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7873 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7874 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7875 ;;Total ram usage:        6 bytes
  7876 ;; Hardware stack levels used:    1
  7877 ;; Hardware stack levels required when called:    7
  7878 ;; This function calls:
  7879 ;;		___awtoft
  7880 ;;		___ftadd
  7881 ;;		___ftdiv
  7882 ;;		___ftmul
  7883 ;;		___fttol
  7884 ;; This function is called by:
  7885 ;;		_setDimmerLights_AdjRF
  7886 ;; This function uses a non-reentrant model
  7887 ;;
  7888                           
  7889                           
  7890                           ;psect for function _getPercentValue
  7891  09E8                     _getPercentValue:	
  7892                           
  7893                           ;incstack = 0
  7894                           ; Regs used in _getPercentValue: [wreg+status,2+status,0+pclath+cstack]
  7895                           ;getPercentValue@value stored from wreg
  7896  09E8  0020               	movlb	0	; select bank0
  7897  09E9  00DB               	movwf	getPercentValue@value
  7898                           
  7899                           ;Dimmer_B1.c: 754: float i = ((char)((100-25)*0.8)) - ((char)((100-60)*0.8));
  7900  09EA  3000               	movlw	0
  7901  09EB  00DC               	movwf	getPercentValue@i
  7902  09EC  30E0               	movlw	224
  7903  09ED  00DD               	movwf	getPercentValue@i+1
  7904  09EE  3041               	movlw	65
  7905  09EF  00DE               	movwf	getPercentValue@i+2
  7906                           
  7907                           ;Dimmer_B1.c: 755: i /= 100;
  7908  09F0  3000               	movlw	0
  7909  09F1  00AE               	movwf	___ftdiv@f2
  7910  09F2  30C8               	movlw	200
  7911  09F3  00AF               	movwf	___ftdiv@f2+1
  7912  09F4  3042               	movlw	66
  7913  09F5  00B0               	movwf	___ftdiv@f2+2
  7914  09F6  085C               	movf	getPercentValue@i,w
  7915  09F7  00B1               	movwf	___ftdiv@f1
  7916  09F8  085D               	movf	getPercentValue@i+1,w
  7917  09F9  00B2               	movwf	___ftdiv@f1+1
  7918  09FA  085E               	movf	getPercentValue@i+2,w
  7919  09FB  00B3               	movwf	___ftdiv@f1+2
  7920  09FC  3186  265E  3189   	fcall	___ftdiv
  7921  09FF  0020               	movlb	0	; select bank0
  7922  0A00  082E               	movf	?___ftdiv,w
  7923  0A01  00DC               	movwf	getPercentValue@i
  7924  0A02  082F               	movf	?___ftdiv+1,w
  7925  0A03  00DD               	movwf	getPercentValue@i+1
  7926  0A04  0830               	movf	?___ftdiv+2,w
  7927  0A05  00DE               	movwf	getPercentValue@i+2
  7928                           
  7929                           ;Dimmer_B1.c: 756: return (char) (((100 - value) * i) + ((char)((100-60)*0.8)));
  7930  0A06  085B               	movf	getPercentValue@value,w
  7931  0A07  00D9               	movwf	??_getPercentValue
  7932  0A08  01DA               	clrf	??_getPercentValue+1
  7933  0A09  09D9               	comf	??_getPercentValue,f
  7934  0A0A  09DA               	comf	??_getPercentValue+1,f
  7935  0A0B  0AD9               	incf	??_getPercentValue,f
  7936  0A0C  1903               	skipnz
  7937  0A0D  0ADA               	incf	??_getPercentValue+1,f
  7938  0A0E  0859               	movf	??_getPercentValue,w
  7939  0A0F  3E64               	addlw	100
  7940  0A10  00A8               	movwf	___awtoft@c
  7941  0A11  3000               	movlw	0
  7942  0A12  3D5A               	addwfc	??_getPercentValue+1,w
  7943  0A13  00A9               	movwf	___awtoft@c+1
  7944  0A14  3192  221D  3189   	fcall	___awtoft
  7945  0A17  0020               	movlb	0	; select bank0
  7946  0A18  0828               	movf	?___awtoft,w
  7947  0A19  00B1               	movwf	___ftmul@f2
  7948  0A1A  0829               	movf	?___awtoft+1,w
  7949  0A1B  00B2               	movwf	___ftmul@f2+1
  7950  0A1C  082A               	movf	?___awtoft+2,w
  7951  0A1D  00B3               	movwf	___ftmul@f2+2
  7952  0A1E  085C               	movf	getPercentValue@i,w
  7953  0A1F  00AE               	movwf	___ftmul@f1
  7954  0A20  085D               	movf	getPercentValue@i+1,w
  7955  0A21  00AF               	movwf	___ftmul@f1+1
  7956  0A22  085E               	movf	getPercentValue@i+2,w
  7957  0A23  00B0               	movwf	___ftmul@f1+2
  7958  0A24  3185  25AA  3189   	fcall	___ftmul
  7959  0A27  0020               	movlb	0	; select bank0
  7960  0A28  082E               	movf	?___ftmul,w
  7961  0A29  00C1               	movwf	___ftadd@f2
  7962  0A2A  082F               	movf	?___ftmul+1,w
  7963  0A2B  00C2               	movwf	___ftadd@f2+1
  7964  0A2C  0830               	movf	?___ftmul+2,w
  7965  0A2D  00C3               	movwf	___ftadd@f2+2
  7966  0A2E  3000               	movlw	0
  7967  0A2F  00BE               	movwf	___ftadd@f1
  7968  0A30  3000               	movlw	0
  7969  0A31  00BF               	movwf	___ftadd@f1+1
  7970  0A32  3042               	movlw	66
  7971  0A33  00C0               	movwf	___ftadd@f1+2
  7972  0A34  3183  2334  3189   	fcall	___ftadd
  7973  0A37  0020               	movlb	0	; select bank0
  7974  0A38  083E               	movf	?___ftadd,w
  7975  0A39  00CB               	movwf	___fttol@f1
  7976  0A3A  083F               	movf	?___ftadd+1,w
  7977  0A3B  00CC               	movwf	___fttol@f1+1
  7978  0A3C  0840               	movf	?___ftadd+2,w
  7979  0A3D  00CD               	movwf	___fttol@f1+2
  7980  0A3E  318F  2779         	fcall	___fttol
  7981  0A40  0020               	movlb	0	; select bank0
  7982  0A41  084B               	movf	?___fttol,w
  7983  0A42  0008               	return
  7984  0A43                     __end_of_getPercentValue:	
  7985                           
  7986                           	psect	text37
  7987  05AA                     __ptext37:	
  7988 ;; *************** function ___ftmul *****************
  7989 ;; Defined at:
  7990 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftmul.c"
  7991 ;; Parameters:    Size  Location     Type
  7992 ;;  f1              3   14[BANK0 ] float 
  7993 ;;  f2              3   17[BANK0 ] float 
  7994 ;; Auto vars:     Size  Location     Type
  7995 ;;  f3_as_produc    3   25[BANK0 ] unsigned um
  7996 ;;  sign            1   29[BANK0 ] unsigned char 
  7997 ;;  cntr            1   28[BANK0 ] unsigned char 
  7998 ;;  exp             1   24[BANK0 ] unsigned char 
  7999 ;; Return value:  Size  Location     Type
  8000 ;;                  3   14[BANK0 ] float 
  8001 ;; Registers used:
  8002 ;;		wreg, status,2, status,0, pclath, cstack
  8003 ;; Tracked objects:
  8004 ;;		On entry : 0/0
  8005 ;;		On exit  : 0/0
  8006 ;;		Unchanged: 0/0
  8007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8008 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8009 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8010 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8011 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8012 ;;Total ram usage:       16 bytes
  8013 ;; Hardware stack levels used:    1
  8014 ;; Hardware stack levels required when called:    6
  8015 ;; This function calls:
  8016 ;;		___ftpack
  8017 ;; This function is called by:
  8018 ;;		_getPercentValue
  8019 ;; This function uses a non-reentrant model
  8020 ;;
  8021                           
  8022                           
  8023                           ;psect for function ___ftmul
  8024  05AA                     ___ftmul:	
  8025                           
  8026                           ;incstack = 0
  8027                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8028  05AA  0020               	movlb	0	; select bank0
  8029  05AB  082E               	movf	___ftmul@f1,w
  8030  05AC  00B4               	movwf	??___ftmul
  8031  05AD  082F               	movf	___ftmul@f1+1,w
  8032  05AE  00B5               	movwf	??___ftmul+1
  8033  05AF  0830               	movf	___ftmul@f1+2,w
  8034  05B0  00B6               	movwf	??___ftmul+2
  8035  05B1  1003               	clrc
  8036  05B2  0D35               	rlf	??___ftmul+1,w
  8037  05B3  0D36               	rlf	??___ftmul+2,w
  8038  05B4  00B7               	movwf	??___ftmul+3
  8039  05B5  0837               	movf	??___ftmul+3,w
  8040  05B6  00B8               	movwf	___ftmul@exp
  8041  05B7  08B8               	movf	___ftmul@exp,f
  8042  05B8  1D03               	skipz
  8043  05B9  2DC1               	goto	l5337
  8044  05BA  3000               	movlw	0
  8045  05BB  00AE               	movwf	?___ftmul
  8046  05BC  3000               	movlw	0
  8047  05BD  00AF               	movwf	?___ftmul+1
  8048  05BE  3000               	movlw	0
  8049  05BF  00B0               	movwf	?___ftmul+2
  8050  05C0  0008               	return
  8051  05C1                     l5337:	
  8052  05C1  0831               	movf	___ftmul@f2,w
  8053  05C2  00B4               	movwf	??___ftmul
  8054  05C3  0832               	movf	___ftmul@f2+1,w
  8055  05C4  00B5               	movwf	??___ftmul+1
  8056  05C5  0833               	movf	___ftmul@f2+2,w
  8057  05C6  00B6               	movwf	??___ftmul+2
  8058  05C7  1003               	clrc
  8059  05C8  0D35               	rlf	??___ftmul+1,w
  8060  05C9  0D36               	rlf	??___ftmul+2,w
  8061  05CA  00B7               	movwf	??___ftmul+3
  8062  05CB  0837               	movf	??___ftmul+3,w
  8063  05CC  00BD               	movwf	___ftmul@sign
  8064  05CD  08BD               	movf	___ftmul@sign,f
  8065  05CE  1D03               	skipz
  8066  05CF  2DD7               	goto	l5343
  8067  05D0  3000               	movlw	0
  8068  05D1  00AE               	movwf	?___ftmul
  8069  05D2  3000               	movlw	0
  8070  05D3  00AF               	movwf	?___ftmul+1
  8071  05D4  3000               	movlw	0
  8072  05D5  00B0               	movwf	?___ftmul+2
  8073  05D6  0008               	return
  8074  05D7                     l5343:	
  8075  05D7  083D               	movf	___ftmul@sign,w
  8076  05D8  3E7B               	addlw	123
  8077  05D9  00B4               	movwf	??___ftmul
  8078  05DA  0834               	movf	??___ftmul,w
  8079  05DB  07B8               	addwf	___ftmul@exp,f
  8080  05DC  082E               	movf	___ftmul@f1,w
  8081  05DD  00B4               	movwf	??___ftmul
  8082  05DE  082F               	movf	___ftmul@f1+1,w
  8083  05DF  00B5               	movwf	??___ftmul+1
  8084  05E0  0830               	movf	___ftmul@f1+2,w
  8085  05E1  00B6               	movwf	??___ftmul+2
  8086  05E2  3010               	movlw	16
  8087  05E3                     u3925:	
  8088  05E3  36B6               	lsrf	??___ftmul+2,f
  8089  05E4  0CB5               	rrf	??___ftmul+1,f
  8090  05E5  0CB4               	rrf	??___ftmul,f
  8091  05E6  0B89               	decfsz	9,f
  8092  05E7  2DE3               	goto	u3925
  8093  05E8  0834               	movf	??___ftmul,w
  8094  05E9  00B7               	movwf	??___ftmul+3
  8095  05EA  0837               	movf	??___ftmul+3,w
  8096  05EB  00BD               	movwf	___ftmul@sign
  8097  05EC  0831               	movf	___ftmul@f2,w
  8098  05ED  00B4               	movwf	??___ftmul
  8099  05EE  0832               	movf	___ftmul@f2+1,w
  8100  05EF  00B5               	movwf	??___ftmul+1
  8101  05F0  0833               	movf	___ftmul@f2+2,w
  8102  05F1  00B6               	movwf	??___ftmul+2
  8103  05F2  3010               	movlw	16
  8104  05F3                     u3935:	
  8105  05F3  36B6               	lsrf	??___ftmul+2,f
  8106  05F4  0CB5               	rrf	??___ftmul+1,f
  8107  05F5  0CB4               	rrf	??___ftmul,f
  8108  05F6  0B89               	decfsz	9,f
  8109  05F7  2DF3               	goto	u3935
  8110  05F8  0834               	movf	??___ftmul,w
  8111  05F9  00B7               	movwf	??___ftmul+3
  8112  05FA  0837               	movf	??___ftmul+3,w
  8113  05FB  06BD               	xorwf	___ftmul@sign,f
  8114  05FC  3080               	movlw	128
  8115  05FD  00B4               	movwf	??___ftmul
  8116  05FE  0834               	movf	??___ftmul,w
  8117  05FF  05BD               	andwf	___ftmul@sign,f
  8118  0600  17AF               	bsf	___ftmul@f1+1,7
  8119  0601  17B2               	bsf	___ftmul@f2+1,7
  8120  0602  30FF               	movlw	255
  8121  0603  05B1               	andwf	___ftmul@f2,f
  8122  0604  30FF               	movlw	255
  8123  0605  05B2               	andwf	___ftmul@f2+1,f
  8124  0606  3000               	movlw	0
  8125  0607  05B3               	andwf	___ftmul@f2+2,f
  8126  0608  3000               	movlw	0
  8127  0609  00B9               	movwf	___ftmul@f3_as_product
  8128  060A  3000               	movlw	0
  8129  060B  00BA               	movwf	___ftmul@f3_as_product+1
  8130  060C  3000               	movlw	0
  8131  060D  00BB               	movwf	___ftmul@f3_as_product+2
  8132  060E  3007               	movlw	7
  8133  060F  00B4               	movwf	??___ftmul
  8134  0610  0834               	movf	??___ftmul,w
  8135  0611  00BC               	movwf	___ftmul@cntr
  8136  0612                     l5355:	
  8137  0612  1C2E               	btfss	___ftmul@f1,0
  8138  0613  2E1A               	goto	l5359
  8139  0614  0831               	movf	___ftmul@f2,w
  8140  0615  07B9               	addwf	___ftmul@f3_as_product,f
  8141  0616  0832               	movf	___ftmul@f2+1,w
  8142  0617  3DBA               	addwfc	___ftmul@f3_as_product+1,f
  8143  0618  0833               	movf	___ftmul@f2+2,w
  8144  0619  3DBB               	addwfc	___ftmul@f3_as_product+2,f
  8145  061A                     l5359:	
  8146  061A  3001               	movlw	1
  8147  061B                     u3955:	
  8148  061B  36B0               	lsrf	___ftmul@f1+2,f
  8149  061C  0CAF               	rrf	___ftmul@f1+1,f
  8150  061D  0CAE               	rrf	___ftmul@f1,f
  8151  061E  0B89               	decfsz	9,f
  8152  061F  2E1B               	goto	u3955
  8153  0620  3001               	movlw	1
  8154  0621                     u3965:	
  8155  0621  35B1               	lslf	___ftmul@f2,f
  8156  0622  0DB2               	rlf	___ftmul@f2+1,f
  8157  0623  0DB3               	rlf	___ftmul@f2+2,f
  8158  0624  0B89               	decfsz	9,f
  8159  0625  2E21               	goto	u3965
  8160  0626  3001               	movlw	1
  8161  0627  02BC               	subwf	___ftmul@cntr,f
  8162  0628  1D03               	btfss	3,2
  8163  0629  2E12               	goto	l5355
  8164  062A  3009               	movlw	9
  8165  062B  00B4               	movwf	??___ftmul
  8166  062C  0834               	movf	??___ftmul,w
  8167  062D  00BC               	movwf	___ftmul@cntr
  8168  062E                     l5367:	
  8169  062E  1C2E               	btfss	___ftmul@f1,0
  8170  062F  2E36               	goto	l5371
  8171  0630  0831               	movf	___ftmul@f2,w
  8172  0631  07B9               	addwf	___ftmul@f3_as_product,f
  8173  0632  0832               	movf	___ftmul@f2+1,w
  8174  0633  3DBA               	addwfc	___ftmul@f3_as_product+1,f
  8175  0634  0833               	movf	___ftmul@f2+2,w
  8176  0635  3DBB               	addwfc	___ftmul@f3_as_product+2,f
  8177  0636                     l5371:	
  8178  0636  3001               	movlw	1
  8179  0637                     u3995:	
  8180  0637  36B0               	lsrf	___ftmul@f1+2,f
  8181  0638  0CAF               	rrf	___ftmul@f1+1,f
  8182  0639  0CAE               	rrf	___ftmul@f1,f
  8183  063A  0B89               	decfsz	9,f
  8184  063B  2E37               	goto	u3995
  8185  063C  3001               	movlw	1
  8186  063D                     u4005:	
  8187  063D  36BB               	lsrf	___ftmul@f3_as_product+2,f
  8188  063E  0CBA               	rrf	___ftmul@f3_as_product+1,f
  8189  063F  0CB9               	rrf	___ftmul@f3_as_product,f
  8190  0640  0B89               	decfsz	9,f
  8191  0641  2E3D               	goto	u4005
  8192  0642  3001               	movlw	1
  8193  0643  02BC               	subwf	___ftmul@cntr,f
  8194  0644  1D03               	btfss	3,2
  8195  0645  2E2E               	goto	l5367
  8196  0646  0839               	movf	___ftmul@f3_as_product,w
  8197  0647  00A0               	movwf	___ftpack@arg
  8198  0648  083A               	movf	___ftmul@f3_as_product+1,w
  8199  0649  00A1               	movwf	___ftpack@arg+1
  8200  064A  083B               	movf	___ftmul@f3_as_product+2,w
  8201  064B  00A2               	movwf	___ftpack@arg+2
  8202  064C  0838               	movf	___ftmul@exp,w
  8203  064D  00B4               	movwf	??___ftmul
  8204  064E  0834               	movf	??___ftmul,w
  8205  064F  00A3               	movwf	___ftpack@exp
  8206  0650  083D               	movf	___ftmul@sign,w
  8207  0651  00B5               	movwf	??___ftmul+1
  8208  0652  0835               	movf	??___ftmul+1,w
  8209  0653  00A4               	movwf	___ftpack@sign
  8210  0654  318A  2243         	fcall	___ftpack
  8211  0656  0020               	movlb	0	; select bank0
  8212  0657  0820               	movf	?___ftpack,w
  8213  0658  00AE               	movwf	?___ftmul
  8214  0659  0821               	movf	?___ftpack+1,w
  8215  065A  00AF               	movwf	?___ftmul+1
  8216  065B  0822               	movf	?___ftpack+2,w
  8217  065C  00B0               	movwf	?___ftmul+2
  8218  065D  0008               	return
  8219  065E                     __end_of___ftmul:	
  8220                           
  8221                           	psect	text38
  8222  0334                     __ptext38:	
  8223 ;; *************** function ___ftadd *****************
  8224 ;; Defined at:
  8225 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftadd.c"
  8226 ;; Parameters:    Size  Location     Type
  8227 ;;  f1              3   30[BANK0 ] float 
  8228 ;;  f2              3   33[BANK0 ] float 
  8229 ;; Auto vars:     Size  Location     Type
  8230 ;;  exp1            1   42[BANK0 ] unsigned char 
  8231 ;;  exp2            1   41[BANK0 ] unsigned char 
  8232 ;;  sign            1   40[BANK0 ] unsigned char 
  8233 ;; Return value:  Size  Location     Type
  8234 ;;                  3   30[BANK0 ] float 
  8235 ;; Registers used:
  8236 ;;		wreg, status,2, status,0, pclath, cstack
  8237 ;; Tracked objects:
  8238 ;;		On entry : 0/0
  8239 ;;		On exit  : 0/0
  8240 ;;		Unchanged: 0/0
  8241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8242 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8243 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8244 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8245 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8246 ;;Total ram usage:       13 bytes
  8247 ;; Hardware stack levels used:    1
  8248 ;; Hardware stack levels required when called:    6
  8249 ;; This function calls:
  8250 ;;		___ftpack
  8251 ;; This function is called by:
  8252 ;;		_getPercentValue
  8253 ;; This function uses a non-reentrant model
  8254 ;;
  8255                           
  8256                           
  8257                           ;psect for function ___ftadd
  8258  0334                     ___ftadd:	
  8259                           
  8260                           ;incstack = 0
  8261                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8262  0334  0020               	movlb	0	; select bank0
  8263  0335  083E               	movf	___ftadd@f1,w
  8264  0336  00C4               	movwf	??___ftadd
  8265  0337  083F               	movf	___ftadd@f1+1,w
  8266  0338  00C5               	movwf	??___ftadd+1
  8267  0339  0840               	movf	___ftadd@f1+2,w
  8268  033A  00C6               	movwf	??___ftadd+2
  8269  033B  1003               	clrc
  8270  033C  0D45               	rlf	??___ftadd+1,w
  8271  033D  0D46               	rlf	??___ftadd+2,w
  8272  033E  00C7               	movwf	??___ftadd+3
  8273  033F  0847               	movf	??___ftadd+3,w
  8274  0340  00CA               	movwf	___ftadd@exp1
  8275  0341  0841               	movf	___ftadd@f2,w
  8276  0342  00C4               	movwf	??___ftadd
  8277  0343  0842               	movf	___ftadd@f2+1,w
  8278  0344  00C5               	movwf	??___ftadd+1
  8279  0345  0843               	movf	___ftadd@f2+2,w
  8280  0346  00C6               	movwf	??___ftadd+2
  8281  0347  1003               	clrc
  8282  0348  0D45               	rlf	??___ftadd+1,w
  8283  0349  0D46               	rlf	??___ftadd+2,w
  8284  034A  00C7               	movwf	??___ftadd+3
  8285  034B  0847               	movf	??___ftadd+3,w
  8286  034C  00C9               	movwf	___ftadd@exp2
  8287  034D  084A               	movf	___ftadd@exp1,w
  8288  034E  1903               	btfsc	3,2
  8289  034F  2B5C               	goto	l5225
  8290  0350  0849               	movf	___ftadd@exp2,w
  8291  0351  024A               	subwf	___ftadd@exp1,w
  8292  0352  1803               	skipnc
  8293  0353  2B63               	goto	l5229
  8294  0354  034A               	decf	___ftadd@exp1,w
  8295  0355  3AFF               	xorlw	255
  8296  0356  0749               	addwf	___ftadd@exp2,w
  8297  0357  00C4               	movwf	??___ftadd
  8298  0358  3019               	movlw	25
  8299  0359  0244               	subwf	??___ftadd,w
  8300  035A  1C03               	skipc
  8301  035B  2B63               	goto	l5229
  8302  035C                     l5225:	
  8303  035C  0841               	movf	___ftadd@f2,w
  8304  035D  00BE               	movwf	?___ftadd
  8305  035E  0842               	movf	___ftadd@f2+1,w
  8306  035F  00BF               	movwf	?___ftadd+1
  8307  0360  0843               	movf	___ftadd@f2+2,w
  8308  0361  00C0               	movwf	?___ftadd+2
  8309  0362  0008               	return
  8310  0363                     l5229:	
  8311  0363  0849               	movf	___ftadd@exp2,w
  8312  0364  1903               	btfsc	3,2
  8313  0365  0008               	return
  8314  0366  084A               	movf	___ftadd@exp1,w
  8315  0367  0249               	subwf	___ftadd@exp2,w
  8316  0368  1803               	skipnc
  8317  0369  2B72               	goto	l5235
  8318  036A  0349               	decf	___ftadd@exp2,w
  8319  036B  3AFF               	xorlw	255
  8320  036C  074A               	addwf	___ftadd@exp1,w
  8321  036D  00C4               	movwf	??___ftadd
  8322  036E  3019               	movlw	25
  8323  036F  0244               	subwf	??___ftadd,w
  8324  0370  1803               	btfsc	3,0
  8325  0371  0008               	return
  8326  0372                     l5235:	
  8327  0372  3006               	movlw	6
  8328  0373  00C4               	movwf	??___ftadd
  8329  0374  0844               	movf	??___ftadd,w
  8330  0375  00C8               	movwf	___ftadd@sign
  8331  0376  1BC0               	btfsc	___ftadd@f1+2,7
  8332  0377  17C8               	bsf	___ftadd@sign,7
  8333  0378  1BC3               	btfsc	___ftadd@f2+2,7
  8334  0379  1748               	bsf	___ftadd@sign,6
  8335  037A  17BF               	bsf	___ftadd@f1+1,7
  8336  037B  30FF               	movlw	255
  8337  037C  05BE               	andwf	___ftadd@f1,f
  8338  037D  30FF               	movlw	255
  8339  037E  05BF               	andwf	___ftadd@f1+1,f
  8340  037F  3000               	movlw	0
  8341  0380  05C0               	andwf	___ftadd@f1+2,f
  8342  0381  17C2               	bsf	___ftadd@f2+1,7
  8343  0382  30FF               	movlw	255
  8344  0383  05C1               	andwf	___ftadd@f2,f
  8345  0384  30FF               	movlw	255
  8346  0385  05C2               	andwf	___ftadd@f2+1,f
  8347  0386  3000               	movlw	0
  8348  0387  05C3               	andwf	___ftadd@f2+2,f
  8349  0388  0849               	movf	___ftadd@exp2,w
  8350  0389  024A               	subwf	___ftadd@exp1,w
  8351  038A  1803               	skipnc
  8352  038B  2BAE               	goto	l5257
  8353  038C                     l5247:	
  8354  038C  3001               	movlw	1
  8355  038D                     u3685:	
  8356  038D  35C1               	lslf	___ftadd@f2,f
  8357  038E  0DC2               	rlf	___ftadd@f2+1,f
  8358  038F  0DC3               	rlf	___ftadd@f2+2,f
  8359  0390  0B89               	decfsz	9,f
  8360  0391  2B8D               	goto	u3685
  8361  0392  3001               	movlw	1
  8362  0393  02C9               	subwf	___ftadd@exp2,f
  8363  0394  0849               	movf	___ftadd@exp2,w
  8364  0395  064A               	xorwf	___ftadd@exp1,w
  8365  0396  1903               	skipnz
  8366  0397  2BA9               	goto	l5255
  8367  0398  3001               	movlw	1
  8368  0399  02C8               	subwf	___ftadd@sign,f
  8369  039A  0848               	movf	___ftadd@sign,w
  8370  039B  3907               	andlw	7
  8371  039C  1903               	btfsc	3,2
  8372  039D  2BA9               	goto	l5255
  8373  039E  2B8C               	goto	l5247
  8374  039F                     l5253:	
  8375  039F  3001               	movlw	1
  8376  03A0                     u3715:	
  8377  03A0  36C0               	lsrf	___ftadd@f1+2,f
  8378  03A1  0CBF               	rrf	___ftadd@f1+1,f
  8379  03A2  0CBE               	rrf	___ftadd@f1,f
  8380  03A3  0B89               	decfsz	9,f
  8381  03A4  2BA0               	goto	u3715
  8382  03A5  3001               	movlw	1
  8383  03A6  00C4               	movwf	??___ftadd
  8384  03A7  0844               	movf	??___ftadd,w
  8385  03A8  07CA               	addwf	___ftadd@exp1,f
  8386  03A9                     l5255:	
  8387  03A9  084A               	movf	___ftadd@exp1,w
  8388  03AA  0649               	xorwf	___ftadd@exp2,w
  8389  03AB  1903               	btfsc	3,2
  8390  03AC  2BD3               	goto	l2740
  8391  03AD  2B9F               	goto	l5253
  8392  03AE                     l5257:	
  8393  03AE  084A               	movf	___ftadd@exp1,w
  8394  03AF  0249               	subwf	___ftadd@exp2,w
  8395  03B0  1803               	skipnc
  8396  03B1  2BD3               	goto	l2740
  8397  03B2                     l5259:	
  8398  03B2  3001               	movlw	1
  8399  03B3                     u3745:	
  8400  03B3  35BE               	lslf	___ftadd@f1,f
  8401  03B4  0DBF               	rlf	___ftadd@f1+1,f
  8402  03B5  0DC0               	rlf	___ftadd@f1+2,f
  8403  03B6  0B89               	decfsz	9,f
  8404  03B7  2BB3               	goto	u3745
  8405  03B8  3001               	movlw	1
  8406  03B9  02CA               	subwf	___ftadd@exp1,f
  8407  03BA  0849               	movf	___ftadd@exp2,w
  8408  03BB  064A               	xorwf	___ftadd@exp1,w
  8409  03BC  1903               	skipnz
  8410  03BD  2BCF               	goto	l5267
  8411  03BE  3001               	movlw	1
  8412  03BF  02C8               	subwf	___ftadd@sign,f
  8413  03C0  0848               	movf	___ftadd@sign,w
  8414  03C1  3907               	andlw	7
  8415  03C2  1903               	btfsc	3,2
  8416  03C3  2BCF               	goto	l5267
  8417  03C4  2BB2               	goto	l5259
  8418  03C5                     l5265:	
  8419  03C5  3001               	movlw	1
  8420  03C6                     u3775:	
  8421  03C6  36C3               	lsrf	___ftadd@f2+2,f
  8422  03C7  0CC2               	rrf	___ftadd@f2+1,f
  8423  03C8  0CC1               	rrf	___ftadd@f2,f
  8424  03C9  0B89               	decfsz	9,f
  8425  03CA  2BC6               	goto	u3775
  8426  03CB  3001               	movlw	1
  8427  03CC  00C4               	movwf	??___ftadd
  8428  03CD  0844               	movf	??___ftadd,w
  8429  03CE  07C9               	addwf	___ftadd@exp2,f
  8430  03CF                     l5267:	
  8431  03CF  084A               	movf	___ftadd@exp1,w
  8432  03D0  0649               	xorwf	___ftadd@exp2,w
  8433  03D1  1D03               	skipz
  8434  03D2  2BC5               	goto	l5265
  8435  03D3                     l2740:	
  8436  03D3  1FC8               	btfss	___ftadd@sign,7
  8437  03D4  2BE5               	goto	l5271
  8438  03D5  30FF               	movlw	255
  8439  03D6  06BE               	xorwf	___ftadd@f1,f
  8440  03D7  30FF               	movlw	255
  8441  03D8  06BF               	xorwf	___ftadd@f1+1,f
  8442  03D9  30FF               	movlw	255
  8443  03DA  06C0               	xorwf	___ftadd@f1+2,f
  8444  03DB  3001               	movlw	1
  8445  03DC  07BE               	addwf	___ftadd@f1,f
  8446  03DD  3000               	movlw	0
  8447  03DE  1803               	skipnc
  8448  03DF  3001               	movlw	1
  8449  03E0  07BF               	addwf	___ftadd@f1+1,f
  8450  03E1  3000               	movlw	0
  8451  03E2  1803               	skipnc
  8452  03E3  3001               	movlw	1
  8453  03E4  07C0               	addwf	___ftadd@f1+2,f
  8454  03E5                     l5271:	
  8455  03E5  1F48               	btfss	___ftadd@sign,6
  8456  03E6  2BF7               	goto	l5275
  8457  03E7  30FF               	movlw	255
  8458  03E8  06C1               	xorwf	___ftadd@f2,f
  8459  03E9  30FF               	movlw	255
  8460  03EA  06C2               	xorwf	___ftadd@f2+1,f
  8461  03EB  30FF               	movlw	255
  8462  03EC  06C3               	xorwf	___ftadd@f2+2,f
  8463  03ED  3001               	movlw	1
  8464  03EE  07C1               	addwf	___ftadd@f2,f
  8465  03EF  3000               	movlw	0
  8466  03F0  1803               	skipnc
  8467  03F1  3001               	movlw	1
  8468  03F2  07C2               	addwf	___ftadd@f2+1,f
  8469  03F3  3000               	movlw	0
  8470  03F4  1803               	skipnc
  8471  03F5  3001               	movlw	1
  8472  03F6  07C3               	addwf	___ftadd@f2+2,f
  8473  03F7                     l5275:	
  8474  03F7  01C8               	clrf	___ftadd@sign
  8475  03F8  083E               	movf	___ftadd@f1,w
  8476  03F9  07C1               	addwf	___ftadd@f2,f
  8477  03FA  083F               	movf	___ftadd@f1+1,w
  8478  03FB  3DC2               	addwfc	___ftadd@f2+1,f
  8479  03FC  0840               	movf	___ftadd@f1+2,w
  8480  03FD  3DC3               	addwfc	___ftadd@f2+2,f
  8481  03FE  1FC3               	btfss	___ftadd@f2+2,7
  8482  03FF  2C12               	goto	l5285
  8483  0400  30FF               	movlw	255
  8484  0401  06C1               	xorwf	___ftadd@f2,f
  8485  0402  30FF               	movlw	255
  8486  0403  06C2               	xorwf	___ftadd@f2+1,f
  8487  0404  30FF               	movlw	255
  8488  0405  06C3               	xorwf	___ftadd@f2+2,f
  8489  0406  3001               	movlw	1
  8490  0407  07C1               	addwf	___ftadd@f2,f
  8491  0408  3000               	movlw	0
  8492  0409  1803               	skipnc
  8493  040A  3001               	movlw	1
  8494  040B  07C2               	addwf	___ftadd@f2+1,f
  8495  040C  3000               	movlw	0
  8496  040D  1803               	skipnc
  8497  040E  3001               	movlw	1
  8498  040F  07C3               	addwf	___ftadd@f2+2,f
  8499  0410  01C8               	clrf	___ftadd@sign
  8500  0411  0AC8               	incf	___ftadd@sign,f
  8501  0412                     l5285:	
  8502  0412  0841               	movf	___ftadd@f2,w
  8503  0413  00A0               	movwf	___ftpack@arg
  8504  0414  0842               	movf	___ftadd@f2+1,w
  8505  0415  00A1               	movwf	___ftpack@arg+1
  8506  0416  0843               	movf	___ftadd@f2+2,w
  8507  0417  00A2               	movwf	___ftpack@arg+2
  8508  0418  084A               	movf	___ftadd@exp1,w
  8509  0419  00C4               	movwf	??___ftadd
  8510  041A  0844               	movf	??___ftadd,w
  8511  041B  00A3               	movwf	___ftpack@exp
  8512  041C  0848               	movf	___ftadd@sign,w
  8513  041D  00C5               	movwf	??___ftadd+1
  8514  041E  0845               	movf	??___ftadd+1,w
  8515  041F  00A4               	movwf	___ftpack@sign
  8516  0420  318A  2243         	fcall	___ftpack
  8517  0422  0020               	movlb	0	; select bank0
  8518  0423  0820               	movf	?___ftpack,w
  8519  0424  00BE               	movwf	?___ftadd
  8520  0425  0821               	movf	?___ftpack+1,w
  8521  0426  00BF               	movwf	?___ftadd+1
  8522  0427  0822               	movf	?___ftpack+2,w
  8523  0428  00C0               	movwf	?___ftadd+2
  8524  0429  0008               	return
  8525  042A                     __end_of___ftadd:	
  8526                           
  8527                           	psect	text39
  8528  1FEF                     __ptext39:	
  8529 ;; *************** function _getBuz_GO *****************
  8530 ;; Defined at:
  8531 ;;		line 82 in file "../src/Buzzer_B1.c"
  8532 ;; Parameters:    Size  Location     Type
  8533 ;;		None
  8534 ;; Auto vars:     Size  Location     Type
  8535 ;;  i               2    4[BANK0 ] int 
  8536 ;; Return value:  Size  Location     Type
  8537 ;;                  2    0[BANK0 ] int 
  8538 ;; Registers used:
  8539 ;;		wreg, status,2, status,0
  8540 ;; Tracked objects:
  8541 ;;		On entry : 0/0
  8542 ;;		On exit  : 0/0
  8543 ;;		Unchanged: 0/0
  8544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8545 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8546 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8547 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8548 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8549 ;;Total ram usage:        6 bytes
  8550 ;; Hardware stack levels used:    1
  8551 ;; Hardware stack levels required when called:    5
  8552 ;; This function calls:
  8553 ;;		Nothing
  8554 ;; This function is called by:
  8555 ;;		_setRF_Main
  8556 ;; This function uses a non-reentrant model
  8557 ;;
  8558                           
  8559                           
  8560                           ;psect for function _getBuz_GO
  8561  1FEF                     _getBuz_GO:	
  8562                           
  8563                           ;Buzzer_B1.c: 83: int i = Buz1.GO;
  8564                           
  8565                           ;incstack = 0
  8566                           ; Regs used in _getBuz_GO: [wreg+status,2+status,0]
  8567  1FEF  0021               	movlb	1	; select bank1
  8568  1FF0  0C32               	rrf	_Buz1^(0+128),w
  8569  1FF1  3901               	andlw	1
  8570  1FF2  0020               	movlb	0	; select bank0
  8571  1FF3  00A2               	movwf	??_getBuz_GO
  8572  1FF4  01A3               	clrf	??_getBuz_GO+1
  8573  1FF5  0822               	movf	??_getBuz_GO,w
  8574  1FF6  00A4               	movwf	getBuz_GO@i
  8575  1FF7  0823               	movf	??_getBuz_GO+1,w
  8576  1FF8  00A5               	movwf	getBuz_GO@i+1
  8577                           
  8578                           ;Buzzer_B1.c: 84: return i;
  8579  1FF9  0825               	movf	getBuz_GO@i+1,w
  8580  1FFA  01A1               	clrf	?_getBuz_GO+1
  8581  1FFB  07A1               	addwf	?_getBuz_GO+1,f
  8582  1FFC  0824               	movf	getBuz_GO@i,w
  8583  1FFD  01A0               	clrf	?_getBuz_GO
  8584  1FFE  07A0               	addwf	?_getBuz_GO,f
  8585  1FFF  0008               	return
  8586  2000                     __end_of_getBuz_GO:	
  8587                           
  8588                           	psect	text40
  8589  1F72                     __ptext40:	
  8590 ;; *************** function _RF_RxDisable *****************
  8591 ;; Defined at:
  8592 ;;		line 190 in file "../src/RF_Control_B1.c"
  8593 ;; Parameters:    Size  Location     Type
  8594 ;;		None
  8595 ;; Auto vars:     Size  Location     Type
  8596 ;;		None
  8597 ;; Return value:  Size  Location     Type
  8598 ;;		None               void
  8599 ;; Registers used:
  8600 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8601 ;; Tracked objects:
  8602 ;;		On entry : 0/0
  8603 ;;		On exit  : 0/0
  8604 ;;		Unchanged: 0/0
  8605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8610 ;;Total ram usage:        0 bytes
  8611 ;; Hardware stack levels used:    1
  8612 ;; Hardware stack levels required when called:    7
  8613 ;; This function calls:
  8614 ;;		_CC2500_WriteCommand
  8615 ;; This function is called by:
  8616 ;;		_setRF_Main
  8617 ;; This function uses a non-reentrant model
  8618 ;;
  8619                           
  8620                           
  8621                           ;psect for function _RF_RxDisable
  8622  1F72                     _RF_RxDisable:	
  8623                           
  8624                           ;RF_Control_B1.c: 191: if (RF1.ReceiveGO == 1 || RF1.RxStatus == 1) {
  8625                           
  8626                           ;incstack = 0
  8627                           ; Regs used in _RF_RxDisable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8628  1F72  0021               	movlb	1	; select bank1
  8629  1F73  18C6               	btfsc	_RF1^(0+128),1
  8630  1F74  2F77               	goto	l1890
  8631  1F75  1DC6               	btfss	_RF1^(0+128),3
  8632  1F76  0008               	return
  8633  1F77                     l1890:	
  8634                           
  8635                           ;RF_Control_B1.c: 192: RF1.RxStatus = 0;
  8636  1F77  11C6               	bcf	_RF1^(0+128),3
  8637                           
  8638                           ;RF_Control_B1.c: 193: RF1.ReceiveGO = 0;
  8639  1F78  10C6               	bcf	_RF1^(0+128),1
  8640                           
  8641                           ;RF_Control_B1.c: 194: CC2500_WriteCommand(0x36);
  8642  1F79  3036               	movlw	54
  8643  1F7A  3191  2113  319F   	fcall	_CC2500_WriteCommand
  8644                           
  8645                           ;RF_Control_B1.c: 195: CC2500_WriteCommand(0x3A);
  8646  1F7D  303A               	movlw	58
  8647  1F7E  3191  2113         	fcall	_CC2500_WriteCommand
  8648  1F80  0008               	return
  8649  1F81                     __end_of_RF_RxDisable:	
  8650                           
  8651                           	psect	text41
  8652  0AA4                     __ptext41:	
  8653 ;; *************** function _CC2500_TxData *****************
  8654 ;; Defined at:
  8655 ;;		line 32 in file "../src/CC2500_B1.c"
  8656 ;; Parameters:    Size  Location     Type
  8657 ;;		None
  8658 ;; Auto vars:     Size  Location     Type
  8659 ;;  loop_e          1    5[BANK0 ] unsigned char 
  8660 ;; Return value:  Size  Location     Type
  8661 ;;		None               void
  8662 ;; Registers used:
  8663 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8664 ;; Tracked objects:
  8665 ;;		On entry : 0/0
  8666 ;;		On exit  : 0/0
  8667 ;;		Unchanged: 0/0
  8668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8670 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8671 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8672 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8673 ;;Total ram usage:        2 bytes
  8674 ;; Hardware stack levels used:    1
  8675 ;; Hardware stack levels required when called:    7
  8676 ;; This function calls:
  8677 ;;		_CC2500_WriteByte
  8678 ;;		_CC2500_WriteCommand
  8679 ;;		_Timeout_Counter
  8680 ;;		_set_TimeoutCleared
  8681 ;; This function is called by:
  8682 ;;		_setRF_Main
  8683 ;; This function uses a non-reentrant model
  8684 ;;
  8685                           
  8686                           
  8687                           ;psect for function _CC2500_TxData
  8688  0AA4                     _CC2500_TxData:	
  8689                           
  8690                           ;CC2500_B1.c: 33: unsigned char loop_e;
  8691                           ;CC2500_B1.c: 35: RC4 = 0;
  8692                           
  8693                           ;incstack = 0
  8694                           ; Regs used in _CC2500_TxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8695  0AA4  0020               	movlb	0	; select bank0
  8696  0AA5  120E               	bcf	14,4	;volatile
  8697                           
  8698                           ;CC2500_B1.c: 36: SPI0Buffer = 0x3F + 0x40;
  8699  0AA6  307F               	movlw	127
  8700  0AA7  00A4               	movwf	??_CC2500_TxData
  8701  0AA8  0824               	movf	??_CC2500_TxData,w
  8702  0AA9  00FB               	movwf	_SPI0Buffer
  8703                           
  8704                           ;CC2500_B1.c: 37: while (RC2 == 1 && myMain.Timeout == 0) {
  8705  0AAA  2AAE               	goto	l6053
  8706  0AAB                     l6051:	
  8707                           
  8708                           ;CC2500_B1.c: 38: Timeout_Counter();
  8709  0AAB  3190  20BC  318A   	fcall	_Timeout_Counter
  8710  0AAE                     l6053:	
  8711  0AAE  0020               	movlb	0	; select bank0
  8712  0AAF  1D0E               	btfss	14,2	;volatile
  8713  0AB0  2AB4               	goto	l6057
  8714  0AB1  0021               	movlb	1	; select bank1
  8715  0AB2  1D2F               	btfss	(_myMain^(0+128)+15),2
  8716  0AB3  2AAB               	goto	l6051
  8717  0AB4                     l6057:	
  8718                           
  8719                           ;CC2500_B1.c: 39: };
  8720                           ;CC2500_B1.c: 40: set_TimeoutCleared();
  8721  0AB4  319E  261F  318A   	fcall	_set_TimeoutCleared
  8722                           
  8723                           ;CC2500_B1.c: 42: CC2500_WriteByte();
  8724  0AB7  3190  2094  318A   	fcall	_CC2500_WriteByte
  8725                           
  8726                           ;CC2500_B1.c: 43: SPI0Buffer = Tx_Length;
  8727  0ABA  0021               	movlb	1	; select bank1
  8728  0ABB  0855               	movf	_Tx_Length^(0+128),w
  8729  0ABC  0020               	movlb	0	; select bank0
  8730  0ABD  00A4               	movwf	??_CC2500_TxData
  8731  0ABE  0824               	movf	??_CC2500_TxData,w
  8732  0ABF  00FB               	movwf	_SPI0Buffer
  8733                           
  8734                           ;CC2500_B1.c: 44: CC2500_WriteByte();
  8735  0AC0  3190  2094  318A   	fcall	_CC2500_WriteByte
  8736                           
  8737                           ;CC2500_B1.c: 45: for (loop_e = 0; loop_e < Tx_Length; loop_e++) {
  8738  0AC3  0020               	movlb	0	; select bank0
  8739  0AC4  01A5               	clrf	CC2500_TxData@loop_e
  8740  0AC5                     l6071:	
  8741  0AC5  0021               	movlb	1	; select bank1
  8742  0AC6  0855               	movf	_Tx_Length^(0+128),w
  8743  0AC7  0020               	movlb	0	; select bank0
  8744  0AC8  0225               	subwf	CC2500_TxData@loop_e,w
  8745  0AC9  1803               	btfsc	3,0
  8746  0ACA  2ADD               	goto	l243
  8747                           
  8748                           ;CC2500_B1.c: 46: SPI0Buffer = RF_Data[loop_e];
  8749  0ACB  0825               	movf	CC2500_TxData@loop_e,w
  8750  0ACC  3E20               	addlw	_RF_Data& (0+255)
  8751  0ACD  0086               	movwf	6
  8752  0ACE  3001               	movlw	1	; select bank2/3
  8753  0ACF  0087               	movwf	7
  8754  0AD0  0801               	movf	1,w
  8755  0AD1  00A4               	movwf	??_CC2500_TxData
  8756  0AD2  0824               	movf	??_CC2500_TxData,w
  8757  0AD3  00FB               	movwf	_SPI0Buffer
  8758                           
  8759                           ;CC2500_B1.c: 47: CC2500_WriteByte();
  8760  0AD4  3190  2094  318A   	fcall	_CC2500_WriteByte
  8761  0AD7  3001               	movlw	1
  8762  0AD8  0020               	movlb	0	; select bank0
  8763  0AD9  00A4               	movwf	??_CC2500_TxData
  8764  0ADA  0824               	movf	??_CC2500_TxData,w
  8765  0ADB  07A5               	addwf	CC2500_TxData@loop_e,f
  8766  0ADC  2AC5               	goto	l6071
  8767  0ADD                     l243:	
  8768                           
  8769                           ;CC2500_B1.c: 48: }
  8770                           ;CC2500_B1.c: 49: RC4 = 1;
  8771  0ADD  160E               	bsf	14,4	;volatile
  8772                           
  8773                           ;CC2500_B1.c: 50: CC2500_WriteCommand(0x35);
  8774  0ADE  3035               	movlw	53
  8775  0ADF  3191  2113  318A   	fcall	_CC2500_WriteCommand
  8776                           
  8777                           ;CC2500_B1.c: 51: while (RB0 == 0 && myMain.Timeout == 0) {
  8778  0AE2  2AE6               	goto	l6077
  8779  0AE3                     l6075:	
  8780                           
  8781                           ;CC2500_B1.c: 52: Timeout_Counter();
  8782  0AE3  3190  20BC  318A   	fcall	_Timeout_Counter
  8783  0AE6                     l6077:	
  8784  0AE6  0020               	movlb	0	; select bank0
  8785  0AE7  180D               	btfsc	13,0	;volatile
  8786  0AE8  2AEC               	goto	l6081
  8787  0AE9  0021               	movlb	1	; select bank1
  8788  0AEA  1D2F               	btfss	(_myMain^(0+128)+15),2
  8789  0AEB  2AE3               	goto	l6075
  8790  0AEC                     l6081:	
  8791                           
  8792                           ;CC2500_B1.c: 53: };
  8793                           ;CC2500_B1.c: 54: set_TimeoutCleared();
  8794  0AEC  319E  261F  318A   	fcall	_set_TimeoutCleared
  8795                           
  8796                           ;CC2500_B1.c: 56: while (RB0 == 1 && myMain.Timeout == 0) {
  8797  0AEF  2AF3               	goto	l6085
  8798  0AF0                     l6083:	
  8799                           
  8800                           ;CC2500_B1.c: 57: Timeout_Counter();
  8801  0AF0  3190  20BC  318A   	fcall	_Timeout_Counter
  8802  0AF3                     l6085:	
  8803  0AF3  0020               	movlb	0	; select bank0
  8804  0AF4  1C0D               	btfss	13,0	;volatile
  8805  0AF5  2AF9               	goto	l6089
  8806  0AF6  0021               	movlb	1	; select bank1
  8807  0AF7  1D2F               	btfss	(_myMain^(0+128)+15),2
  8808  0AF8  2AF0               	goto	l6083
  8809  0AF9                     l6089:	
  8810                           
  8811                           ;CC2500_B1.c: 58: };
  8812                           ;CC2500_B1.c: 59: set_TimeoutCleared();
  8813  0AF9  319E  261F  318A   	fcall	_set_TimeoutCleared
  8814                           
  8815                           ;CC2500_B1.c: 61: CC2500_WriteCommand(0x36);
  8816  0AFC  3036               	movlw	54
  8817  0AFD  3191  2113  318A   	fcall	_CC2500_WriteCommand
  8818                           
  8819                           ;CC2500_B1.c: 62: CC2500_WriteCommand(0x3B);
  8820  0B00  303B               	movlw	59
  8821  0B01  3191  2113         	fcall	_CC2500_WriteCommand
  8822                           
  8823                           ;CC2500_B1.c: 63: Transceive_OK = 1;
  8824  0B03  14FC               	bsf	_Transceive_OK/(0+8),_Transceive_OK& (0+7)
  8825  0B04  0008               	return
  8826  0B05                     __end_of_CC2500_TxData:	
  8827                           
  8828                           	psect	text42
  8829  0DF8                     __ptext42:	
  8830 ;; *************** function _CC2500_RxData *****************
  8831 ;; Defined at:
  8832 ;;		line 69 in file "../src/CC2500_B1.c"
  8833 ;; Parameters:    Size  Location     Type
  8834 ;;		None
  8835 ;; Auto vars:     Size  Location     Type
  8836 ;;  loop_f          1    5[BANK0 ] unsigned char 
  8837 ;; Return value:  Size  Location     Type
  8838 ;;		None               void
  8839 ;; Registers used:
  8840 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8841 ;; Tracked objects:
  8842 ;;		On entry : 0/0
  8843 ;;		On exit  : 0/0
  8844 ;;		Unchanged: 0/0
  8845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8847 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8848 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8849 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8850 ;;Total ram usage:        2 bytes
  8851 ;; Hardware stack levels used:    1
  8852 ;; Hardware stack levels required when called:    7
  8853 ;; This function calls:
  8854 ;;		_CC2500_ReadByte
  8855 ;;		_CC2500_ReadStatus
  8856 ;;		_CC2500_WriteByte
  8857 ;;		_CC2500_WriteCommand
  8858 ;;		_Timeout_Counter
  8859 ;;		_set_TimeoutCleared
  8860 ;; This function is called by:
  8861 ;;		_setRF_Main
  8862 ;; This function uses a non-reentrant model
  8863 ;;
  8864                           
  8865                           
  8866                           ;psect for function _CC2500_RxData
  8867  0DF8                     _CC2500_RxData:	
  8868                           
  8869                           ;CC2500_B1.c: 70: unsigned char loop_f;
  8870                           ;CC2500_B1.c: 74: if (RB0 == 1)
  8871                           
  8872                           ;incstack = 0
  8873                           ; Regs used in _CC2500_RxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8874  0DF8  0020               	movlb	0	; select bank0
  8875  0DF9  180D               	btfsc	13,0	;volatile
  8876  0DFA  2DFF               	goto	l6103
  8877  0DFB  2E08               	goto	l6109
  8878  0DFC                     l6101:	
  8879                           ;CC2500_B1.c: 75: {
  8880                           ;CC2500_B1.c: 76: while (RB0 == 1 && myMain.Timeout == 0) {
  8881                           
  8882                           
  8883                           ;CC2500_B1.c: 77: Timeout_Counter();
  8884  0DFC  3190  20BC  318D   	fcall	_Timeout_Counter
  8885  0DFF                     l6103:	
  8886  0DFF  0020               	movlb	0	; select bank0
  8887  0E00  1C0D               	btfss	13,0	;volatile
  8888  0E01  2E05               	goto	l6107
  8889  0E02  0021               	movlb	1	; select bank1
  8890  0E03  1D2F               	btfss	(_myMain^(0+128)+15),2
  8891  0E04  2DFC               	goto	l6101
  8892  0E05                     l6107:	
  8893                           
  8894                           ;CC2500_B1.c: 78: };
  8895                           ;CC2500_B1.c: 79: set_TimeoutCleared();
  8896  0E05  319E  261F  318D   	fcall	_set_TimeoutCleared
  8897  0E08                     l6109:	
  8898                           
  8899                           ;CC2500_B1.c: 80: }
  8900                           ;CC2500_B1.c: 82: CC2500_ReadStatus(0x3B);
  8901  0E08  303B               	movlw	59
  8902  0E09  3192  2261  318D   	fcall	_CC2500_ReadStatus
  8903                           
  8904                           ;CC2500_B1.c: 83: if (s_data != 0) {
  8905  0E0C  0021               	movlb	1	; select bank1
  8906  0E0D  0858               	movf	_s_data^(0+128),w
  8907  0E0E  1903               	btfsc	3,2
  8908  0E0F  0008               	return
  8909                           
  8910                           ;CC2500_B1.c: 84: RC4 = 0;
  8911  0E10  0020               	movlb	0	; select bank0
  8912  0E11  120E               	bcf	14,4	;volatile
  8913                           
  8914                           ;CC2500_B1.c: 85: SPI0Buffer = 0x3F + 0xC0;
  8915  0E12  30FF               	movlw	255
  8916  0E13  00A4               	movwf	??_CC2500_RxData
  8917  0E14  0824               	movf	??_CC2500_RxData,w
  8918  0E15  00FB               	movwf	_SPI0Buffer
  8919                           
  8920                           ;CC2500_B1.c: 86: while (RC2 == 1 && myMain.Timeout == 0) {
  8921  0E16  2E1D               	goto	l6119
  8922  0E17                     l6121:	
  8923  0E17  0021               	movlb	1	; select bank1
  8924  0E18  192F               	btfsc	(_myMain^(0+128)+15),2
  8925  0E19  2E20               	goto	l268
  8926                           
  8927                           ;CC2500_B1.c: 87: Timeout_Counter();
  8928  0E1A  3190  20BC  318D   	fcall	_Timeout_Counter
  8929  0E1D                     l6119:	
  8930  0E1D  0020               	movlb	0	; select bank0
  8931  0E1E  190E               	btfsc	14,2	;volatile
  8932  0E1F  2E17               	goto	l6121
  8933  0E20                     l268:	
  8934                           
  8935                           ;CC2500_B1.c: 88: };
  8936                           ;CC2500_B1.c: 89: if (myMain.Timeout == 0) {
  8937  0E20  0021               	movlb	1	; select bank1
  8938  0E21  192F               	btfsc	(_myMain^(0+128)+15),2
  8939  0E22  2E6C               	goto	l269
  8940                           
  8941                           ;CC2500_B1.c: 90: CC2500_WriteByte();
  8942  0E23  3190  2094  318D   	fcall	_CC2500_WriteByte
  8943                           
  8944                           ;CC2500_B1.c: 92: CC2500_ReadByte();
  8945  0E26  3190  20FC  318D   	fcall	_CC2500_ReadByte
  8946                           
  8947                           ;CC2500_B1.c: 93: Rx_Length = SPI0Buffer;
  8948  0E29  087B               	movf	_SPI0Buffer,w
  8949  0E2A  0020               	movlb	0	; select bank0
  8950  0E2B  00A4               	movwf	??_CC2500_RxData
  8951  0E2C  0824               	movf	??_CC2500_RxData,w
  8952  0E2D  0021               	movlb	1	; select bank1
  8953  0E2E  00D4               	movwf	_Rx_Length^(0+128)
  8954                           
  8955                           ;CC2500_B1.c: 94: for (loop_f = 0; loop_f < Rx_Length; loop_f++) {
  8956  0E2F  0020               	movlb	0	; select bank0
  8957  0E30  01A5               	clrf	CC2500_RxData@loop_f
  8958  0E31                     l6135:	
  8959  0E31  0021               	movlb	1	; select bank1
  8960  0E32  0854               	movf	_Rx_Length^(0+128),w
  8961  0E33  0020               	movlb	0	; select bank0
  8962  0E34  0225               	subwf	CC2500_RxData@loop_f,w
  8963  0E35  1803               	btfsc	3,0
  8964  0E36  2E49               	goto	l6137
  8965                           
  8966                           ;CC2500_B1.c: 95: CC2500_ReadByte();
  8967  0E37  3190  20FC  318D   	fcall	_CC2500_ReadByte
  8968                           
  8969                           ;CC2500_B1.c: 96: RF_Data[loop_f] = SPI0Buffer;
  8970  0E3A  087B               	movf	_SPI0Buffer,w
  8971  0E3B  0020               	movlb	0	; select bank0
  8972  0E3C  00A4               	movwf	??_CC2500_RxData
  8973  0E3D  0825               	movf	CC2500_RxData@loop_f,w
  8974  0E3E  3E20               	addlw	_RF_Data& (0+255)
  8975  0E3F  0086               	movwf	6
  8976  0E40  3001               	movlw	1	; select bank2/3
  8977  0E41  0087               	movwf	7
  8978  0E42  0824               	movf	??_CC2500_RxData,w
  8979  0E43  0081               	movwf	1
  8980  0E44  3001               	movlw	1
  8981  0E45  00A4               	movwf	??_CC2500_RxData
  8982  0E46  0824               	movf	??_CC2500_RxData,w
  8983  0E47  07A5               	addwf	CC2500_RxData@loop_f,f
  8984  0E48  2E31               	goto	l6135
  8985  0E49                     l6137:	
  8986                           
  8987                           ;CC2500_B1.c: 97: }
  8988                           ;CC2500_B1.c: 98: CC2500_ReadByte();
  8989  0E49  3190  20FC  318D   	fcall	_CC2500_ReadByte
  8990                           
  8991                           ;CC2500_B1.c: 99: RSSI = SPI0Buffer;
  8992  0E4C  087B               	movf	_SPI0Buffer,w
  8993  0E4D  0020               	movlb	0	; select bank0
  8994  0E4E  00A4               	movwf	??_CC2500_RxData
  8995  0E4F  0824               	movf	??_CC2500_RxData,w
  8996  0E50  0021               	movlb	1	; select bank1
  8997  0E51  00D3               	movwf	_RSSI^(0+128)
  8998                           
  8999                           ;CC2500_B1.c: 100: CC2500_ReadByte();
  9000  0E52  3190  20FC  318D   	fcall	_CC2500_ReadByte
  9001                           
  9002                           ;CC2500_B1.c: 101: CRC = SPI0Buffer;
  9003  0E55  087B               	movf	_SPI0Buffer,w
  9004  0E56  0020               	movlb	0	; select bank0
  9005  0E57  00A4               	movwf	??_CC2500_RxData
  9006  0E58  0824               	movf	??_CC2500_RxData,w
  9007  0E59  0021               	movlb	1	; select bank1
  9008  0E5A  00CF               	movwf	_CRC^(0+128)
  9009                           
  9010                           ;CC2500_B1.c: 102: RC4 = 1;
  9011  0E5B  0020               	movlb	0	; select bank0
  9012  0E5C  160E               	bsf	14,4	;volatile
  9013                           
  9014                           ;CC2500_B1.c: 103: if (CRC & 0x80)
  9015  0E5D  0021               	movlb	1	; select bank1
  9016  0E5E  1BCF               	btfsc	_CRC^(0+128),7
  9017                           
  9018                           ;CC2500_B1.c: 104: Receive_OK = 1;
  9019  0E5F  147C               	bsf	_Receive_OK/(0+8),_Receive_OK& (0+7)
  9020                           
  9021                           ;CC2500_B1.c: 106: CC2500_WriteCommand(0x36);
  9022  0E60  3036               	movlw	54
  9023  0E61  3191  2113  318D   	fcall	_CC2500_WriteCommand
  9024                           
  9025                           ;CC2500_B1.c: 107: CC2500_WriteCommand(0x3A);
  9026  0E64  303A               	movlw	58
  9027  0E65  3191  2113  318D   	fcall	_CC2500_WriteCommand
  9028                           
  9029                           ;CC2500_B1.c: 108: RF1.RxStatus = 0;
  9030  0E68  0021               	movlb	1	; select bank1
  9031  0E69  11C6               	bcf	_RF1^(0+128),3
  9032                           
  9033                           ;CC2500_B1.c: 109: RF1.ReceiveGO = 1;
  9034  0E6A  14C6               	bsf	_RF1^(0+128),1
  9035                           
  9036                           ;CC2500_B1.c: 110: } else {
  9037  0E6B  2E6E               	goto	l6155
  9038  0E6C                     l269:	
  9039                           
  9040                           ;CC2500_B1.c: 111: RC4 = 1;
  9041  0E6C  0020               	movlb	0	; select bank0
  9042  0E6D  160E               	bsf	14,4	;volatile
  9043  0E6E                     l6155:	
  9044                           
  9045                           ;CC2500_B1.c: 112: }
  9046                           ;CC2500_B1.c: 113: set_TimeoutCleared();
  9047  0E6E  319E  261F         	fcall	_set_TimeoutCleared
  9048  0E70  0021               	movlb	1	; select bank1
  9049  0E71  0008               	return
  9050  0E72                     __end_of_CC2500_RxData:	
  9051                           
  9052                           	psect	text43
  9053  1261                     __ptext43:	
  9054 ;; *************** function _CC2500_ReadStatus *****************
  9055 ;; Defined at:
  9056 ;;		line 304 in file "../src/CC2500_B1.c"
  9057 ;; Parameters:    Size  Location     Type
  9058 ;;  status_addr     1    wreg     unsigned char 
  9059 ;; Auto vars:     Size  Location     Type
  9060 ;;  status_addr     1    3[BANK0 ] unsigned char 
  9061 ;; Return value:  Size  Location     Type
  9062 ;;		None               void
  9063 ;; Registers used:
  9064 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9065 ;; Tracked objects:
  9066 ;;		On entry : 0/0
  9067 ;;		On exit  : 0/0
  9068 ;;		Unchanged: 0/0
  9069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9071 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9072 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9073 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9074 ;;Total ram usage:        2 bytes
  9075 ;; Hardware stack levels used:    1
  9076 ;; Hardware stack levels required when called:    6
  9077 ;; This function calls:
  9078 ;;		_CC2500_ReadByte
  9079 ;;		_CC2500_WriteByte
  9080 ;;		_Timeout_Counter
  9081 ;;		_set_TimeoutCleared
  9082 ;; This function is called by:
  9083 ;;		_CC2500_RxData
  9084 ;; This function uses a non-reentrant model
  9085 ;;
  9086                           
  9087                           
  9088                           ;psect for function _CC2500_ReadStatus
  9089  1261                     _CC2500_ReadStatus:	
  9090                           
  9091                           ;incstack = 0
  9092                           ; Regs used in _CC2500_ReadStatus: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9093                           ;CC2500_ReadStatus@status_addr stored from wreg
  9094  1261  0020               	movlb	0	; select bank0
  9095  1262  00A3               	movwf	CC2500_ReadStatus@status_addr
  9096                           
  9097                           ;CC2500_B1.c: 305: RC4 = 0;
  9098  1263  120E               	bcf	14,4	;volatile
  9099                           
  9100                           ;CC2500_B1.c: 306: SPI0Buffer = status_addr + 0xC0;
  9101  1264  0823               	movf	CC2500_ReadStatus@status_addr,w
  9102  1265  3EC0               	addlw	192
  9103  1266  00A2               	movwf	??_CC2500_ReadStatus
  9104  1267  0822               	movf	??_CC2500_ReadStatus,w
  9105  1268  00FB               	movwf	_SPI0Buffer
  9106                           
  9107                           ;CC2500_B1.c: 308: while (RC2 == 1 && myMain.Timeout == 0) {
  9108  1269  2A6D               	goto	l5927
  9109  126A                     l5925:	
  9110                           
  9111                           ;CC2500_B1.c: 309: Timeout_Counter();
  9112  126A  3190  20BC  3192   	fcall	_Timeout_Counter
  9113  126D                     l5927:	
  9114  126D  0020               	movlb	0	; select bank0
  9115  126E  1D0E               	btfss	14,2	;volatile
  9116  126F  2A73               	goto	l5931
  9117  1270  0021               	movlb	1	; select bank1
  9118  1271  1D2F               	btfss	(_myMain^(0+128)+15),2
  9119  1272  2A6A               	goto	l5925
  9120  1273                     l5931:	
  9121                           
  9122                           ;CC2500_B1.c: 310: };
  9123                           ;CC2500_B1.c: 311: set_TimeoutCleared();
  9124  1273  319E  261F  3192   	fcall	_set_TimeoutCleared
  9125                           
  9126                           ;CC2500_B1.c: 313: CC2500_WriteByte();
  9127  1276  3190  2094  3192   	fcall	_CC2500_WriteByte
  9128                           
  9129                           ;CC2500_B1.c: 314: CC2500_ReadByte();
  9130  1279  3190  20FC         	fcall	_CC2500_ReadByte
  9131                           
  9132                           ;CC2500_B1.c: 315: RC4 = 1;
  9133  127B  0020               	movlb	0	; select bank0
  9134  127C  160E               	bsf	14,4	;volatile
  9135                           
  9136                           ;CC2500_B1.c: 317: s_data = SPI0Buffer;
  9137  127D  087B               	movf	_SPI0Buffer,w
  9138  127E  00A2               	movwf	??_CC2500_ReadStatus
  9139  127F  0822               	movf	??_CC2500_ReadStatus,w
  9140  1280  0021               	movlb	1	; select bank1
  9141  1281  00D8               	movwf	_s_data^(0+128)
  9142  1282  0008               	return
  9143  1283                     __end_of_CC2500_ReadStatus:	
  9144                           
  9145                           	psect	text44
  9146  10FC                     __ptext44:	
  9147 ;; *************** function _CC2500_ReadByte *****************
  9148 ;; Defined at:
  9149 ;;		line 238 in file "../src/CC2500_B1.c"
  9150 ;; Parameters:    Size  Location     Type
  9151 ;;		None
  9152 ;; Auto vars:     Size  Location     Type
  9153 ;;  loop_b          1    1[BANK0 ] unsigned char 
  9154 ;; Return value:  Size  Location     Type
  9155 ;;		None               void
  9156 ;; Registers used:
  9157 ;;		wreg, status,2, status,0
  9158 ;; Tracked objects:
  9159 ;;		On entry : 0/0
  9160 ;;		On exit  : 0/0
  9161 ;;		Unchanged: 0/0
  9162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9164 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9165 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9166 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9167 ;;Total ram usage:        2 bytes
  9168 ;; Hardware stack levels used:    1
  9169 ;; Hardware stack levels required when called:    5
  9170 ;; This function calls:
  9171 ;;		Nothing
  9172 ;; This function is called by:
  9173 ;;		_CC2500_RxData
  9174 ;;		_CC2500_ReadStatus
  9175 ;;		_CC2500_ReadREG
  9176 ;; This function uses a non-reentrant model
  9177 ;;
  9178                           
  9179                           
  9180                           ;psect for function _CC2500_ReadByte
  9181  10FC                     _CC2500_ReadByte:	
  9182                           
  9183                           ;CC2500_B1.c: 239: unsigned char loop_b;
  9184                           ;CC2500_B1.c: 240: for (loop_b = 0; loop_b < 8; loop_b++) {
  9185                           
  9186                           ;incstack = 0
  9187                           ; Regs used in _CC2500_ReadByte: [wreg+status,2+status,0]
  9188  10FC  0020               	movlb	0	; select bank0
  9189  10FD  01A1               	clrf	CC2500_ReadByte@loop_b
  9190  10FE                     L3:	
  9191  10FE  3008               	movlw	8
  9192  10FF  0221               	subwf	CC2500_ReadByte@loop_b,w
  9193  1100  1803               	btfsc	3,0
  9194  1101  0008               	return
  9195                           
  9196                           ;CC2500_B1.c: 241: RC1 = 1;
  9197  1102  148E               	bsf	14,1	;volatile
  9198                           
  9199                           ;CC2500_B1.c: 242: SPI0Buffer <<= 1;
  9200  1103  1003               	clrc
  9201  1104  0DFB               	rlf	_SPI0Buffer,f
  9202                           
  9203                           ;CC2500_B1.c: 243: if (RC2 == 1)
  9204  1105  1D0E               	btfss	14,2	;volatile
  9205  1106  2909               	goto	l5793
  9206                           
  9207                           ;CC2500_B1.c: 244: SPI0Buffer |= 0x01;
  9208  1107  147B               	bsf	_SPI0Buffer,0
  9209  1108  290D               	goto	l5795
  9210  1109                     l5793:	
  9211                           
  9212                           ;CC2500_B1.c: 245: else
  9213                           ;CC2500_B1.c: 246: SPI0Buffer &= 0xFE;
  9214  1109  30FE               	movlw	254
  9215  110A  00A0               	movwf	??_CC2500_ReadByte
  9216  110B  0820               	movf	??_CC2500_ReadByte,w
  9217  110C  05FB               	andwf	_SPI0Buffer,f
  9218  110D                     l5795:	
  9219                           
  9220                           ;CC2500_B1.c: 247: RC1 = 0;
  9221  110D  108E               	bcf	14,1	;volatile
  9222  110E  3001               	movlw	1
  9223  110F  00A0               	movwf	??_CC2500_ReadByte
  9224  1110  0820               	movf	??_CC2500_ReadByte,w
  9225  1111  07A1               	addwf	CC2500_ReadByte@loop_b,f
  9226  1112  28FE               	goto	L3
  9227  1113                     __end_of_CC2500_ReadByte:	
  9228                           
  9229                           	psect	text45
  9230  1DEC                     __ptext45:	
  9231 ;; *************** function _RF_Initialization *****************
  9232 ;; Defined at:
  9233 ;;		line 9 in file "../src/RF_Control_B1.c"
  9234 ;; Parameters:    Size  Location     Type
  9235 ;;		None
  9236 ;; Auto vars:     Size  Location     Type
  9237 ;;		None
  9238 ;; Return value:  Size  Location     Type
  9239 ;;		None               void
  9240 ;; Registers used:
  9241 ;;		wreg, status,2, status,0, pclath, cstack
  9242 ;; Tracked objects:
  9243 ;;		On entry : 0/0
  9244 ;;		On exit  : 0/0
  9245 ;;		Unchanged: 0/0
  9246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9251 ;;Total ram usage:        0 bytes
  9252 ;; Hardware stack levels used:    1
  9253 ;; Hardware stack levels required when called:    6
  9254 ;; This function calls:
  9255 ;;		_setRF_Initialization
  9256 ;; This function is called by:
  9257 ;;		_main
  9258 ;; This function uses a non-reentrant model
  9259 ;;
  9260                           
  9261                           
  9262                           ;psect for function _RF_Initialization
  9263  1DEC                     _RF_Initialization:	
  9264                           
  9265                           ;RF_Control_B1.c: 11: setRF_Initialization();
  9266                           
  9267                           ;incstack = 0
  9268                           ; Regs used in _RF_Initialization: [wreg+status,2+status,0+pclath+cstack]
  9269  1DEC  319E  2645         	fcall	_setRF_Initialization
  9270  1DEE  0008               	return
  9271  1DEF                     __end_of_RF_Initialization:	
  9272                           
  9273                           	psect	text46
  9274  1E45                     __ptext46:	
  9275 ;; *************** function _setRF_Initialization *****************
  9276 ;; Defined at:
  9277 ;;		line 43 in file "../src/RF_Control_B1.c"
  9278 ;; Parameters:    Size  Location     Type
  9279 ;;		None
  9280 ;; Auto vars:     Size  Location     Type
  9281 ;;		None
  9282 ;; Return value:  Size  Location     Type
  9283 ;;		None               void
  9284 ;; Registers used:
  9285 ;;		wreg
  9286 ;; Tracked objects:
  9287 ;;		On entry : 0/0
  9288 ;;		On exit  : 0/0
  9289 ;;		Unchanged: 0/0
  9290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9293 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9294 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9295 ;;Total ram usage:        1 bytes
  9296 ;; Hardware stack levels used:    1
  9297 ;; Hardware stack levels required when called:    5
  9298 ;; This function calls:
  9299 ;;		Nothing
  9300 ;; This function is called by:
  9301 ;;		_RF_Initialization
  9302 ;; This function uses a non-reentrant model
  9303 ;;
  9304                           
  9305                           
  9306                           ;psect for function _setRF_Initialization
  9307  1E45                     _setRF_Initialization:	
  9308                           
  9309                           ;RF_Control_B1.c: 45: Tx_Length = 21;
  9310                           
  9311                           ;incstack = 0
  9312                           ; Regs used in _setRF_Initialization: [wreg]
  9313  1E45  3015               	movlw	21
  9314  1E46  0020               	movlb	0	; select bank0
  9315  1E47  00A0               	movwf	??_setRF_Initialization
  9316  1E48  0820               	movf	??_setRF_Initialization,w
  9317  1E49  0021               	movlb	1	; select bank1
  9318  1E4A  00D5               	movwf	_Tx_Length^(0+128)
  9319  1E4B  0008               	return
  9320  1E4C                     __end_of_setRF_Initialization:	
  9321                           
  9322                           	psect	text47
  9323  1DE9                     __ptext47:	
  9324 ;; *************** function _PowerFault_Main *****************
  9325 ;; Defined at:
  9326 ;;		line 17 in file "../src/PowerFault_B1.c"
  9327 ;; Parameters:    Size  Location     Type
  9328 ;;		None
  9329 ;; Auto vars:     Size  Location     Type
  9330 ;;		None
  9331 ;; Return value:  Size  Location     Type
  9332 ;;		None               void
  9333 ;; Registers used:
  9334 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9335 ;; Tracked objects:
  9336 ;;		On entry : 0/0
  9337 ;;		On exit  : 0/0
  9338 ;;		Unchanged: 0/0
  9339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9344 ;;Total ram usage:        0 bytes
  9345 ;; Hardware stack levels used:    1
  9346 ;; Hardware stack levels required when called:   11
  9347 ;; This function calls:
  9348 ;;		_setPowerFault_Main
  9349 ;; This function is called by:
  9350 ;;		_main
  9351 ;; This function uses a non-reentrant model
  9352 ;;
  9353                           
  9354                           
  9355                           ;psect for function _PowerFault_Main
  9356  1DE9                     _PowerFault_Main:	
  9357                           
  9358                           ;PowerFault_B1.c: 19: setPowerFault_Main();
  9359                           
  9360                           ;incstack = 0
  9361                           ; Regs used in _PowerFault_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9362  1DE9  318D  2508         	fcall	_setPowerFault_Main
  9363  1DEB  0008               	return
  9364  1DEC                     __end_of_PowerFault_Main:	
  9365                           
  9366                           	psect	text48
  9367  0D08                     __ptext48:	
  9368 ;; *************** function _setPowerFault_Main *****************
  9369 ;; Defined at:
  9370 ;;		line 55 in file "../src/PowerFault_B1.c"
  9371 ;; Parameters:    Size  Location     Type
  9372 ;;		None
  9373 ;; Auto vars:     Size  Location     Type
  9374 ;;		None
  9375 ;; Return value:  Size  Location     Type
  9376 ;;		None               void
  9377 ;; Registers used:
  9378 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9379 ;; Tracked objects:
  9380 ;;		On entry : 0/0
  9381 ;;		On exit  : 0/0
  9382 ;;		Unchanged: 0/0
  9383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9386 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9387 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9388 ;;Total ram usage:        1 bytes
  9389 ;; Hardware stack levels used:    1
  9390 ;; Hardware stack levels required when called:   10
  9391 ;; This function calls:
  9392 ;;		_getTemp_Safe
  9393 ;;		_setPowerFault_Exceptions
  9394 ;; This function is called by:
  9395 ;;		_PowerFault_Main
  9396 ;; This function uses a non-reentrant model
  9397 ;;
  9398                           
  9399                           
  9400                           ;psect for function _setPowerFault_Main
  9401  0D08                     _setPowerFault_Main:	
  9402                           
  9403                           ;PowerFault_B1.c: 56: if (PF1.Enable == 1) {
  9404                           
  9405                           ;incstack = 0
  9406                           ; Regs used in _setPowerFault_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9407  0D08  0021               	movlb	1	; select bank1
  9408  0D09  1C3E               	btfss	_PF1^(0+128),0
  9409  0D0A  0008               	return
  9410                           
  9411                           ;PowerFault_B1.c: 57: if (PF1.ADtoGO == 0) {
  9412  0D0B  19BE               	btfsc	_PF1^(0+128),3
  9413  0D0C  2D2A               	goto	l7763
  9414                           
  9415                           ;PowerFault_B1.c: 58: PF1.Time++;
  9416  0D0D  3001               	movlw	1
  9417  0D0E  07C0               	addwf	(_PF1^(0+128)+2),f
  9418  0D0F  3000               	movlw	0
  9419  0D10  3DC1               	addwfc	((_PF1+1)^(0+128)+2),f
  9420                           
  9421                           ;PowerFault_B1.c: 60: {
  9422                           ;PowerFault_B1.c: 61: if (1 == 1 && getTemp_Safe() == 1) {
  9423  0D11  3002               	movlw	2
  9424  0D12  0241               	subwf	((_PF1+1)^(0+128)+2),w
  9425  0D13  30BC               	movlw	188
  9426  0D14  1903               	skipnz
  9427  0D15  0240               	subwf	(_PF1^(0+128)+2),w
  9428  0D16  1C03               	skipc
  9429  0D17  0008               	return
  9430  0D18  319E  2654  318D   	fcall	_getTemp_Safe
  9431  0D1B  3A01               	xorlw	1
  9432  0D1C  1D03               	skipz
  9433  0D1D  2D24               	goto	l7761
  9434                           
  9435                           ;PowerFault_B1.c: 62: PF1.Time = 0;
  9436  0D1E  0021               	movlb	1	; select bank1
  9437  0D1F  01C0               	clrf	(_PF1^(0+128)+2)
  9438  0D20  01C1               	clrf	((_PF1+1)^(0+128)+2)
  9439                           
  9440                           ;PowerFault_B1.c: 63: PF1.ADtoGO = 1;
  9441  0D21  15BE               	bsf	_PF1^(0+128),3
  9442                           
  9443                           ;PowerFault_B1.c: 64: PF1.Safe = 0;
  9444  0D22  113E               	bcf	_PF1^(0+128),2
  9445                           
  9446                           ;PowerFault_B1.c: 65: } else {
  9447  0D23  0008               	return
  9448  0D24                     l7761:	
  9449                           
  9450                           ;PowerFault_B1.c: 66: PF1.Time = 700;
  9451  0D24  30BC               	movlw	188
  9452  0D25  0021               	movlb	1	; select bank1
  9453  0D26  00C0               	movwf	(_PF1^(0+128)+2)
  9454  0D27  3002               	movlw	2
  9455  0D28  00C1               	movwf	(_PF1^(0+128)+3)
  9456                           
  9457                           ;PowerFault_B1.c: 67: }
  9458                           ;PowerFault_B1.c: 68: }
  9459                           ;PowerFault_B1.c: 69: } else {
  9460  0D29  0008               	return
  9461  0D2A                     l7763:	
  9462                           
  9463                           ;PowerFault_B1.c: 70: PF1.Time++;
  9464  0D2A  3001               	movlw	1
  9465  0D2B  07C0               	addwf	(_PF1^(0+128)+2),f
  9466  0D2C  3000               	movlw	0
  9467  0D2D  3DC1               	addwfc	((_PF1+1)^(0+128)+2),f
  9468                           
  9469                           ;PowerFault_B1.c: 71: if (PF1.Time >= 2)
  9470  0D2E  3000               	movlw	0
  9471  0D2F  0241               	subwf	((_PF1+1)^(0+128)+2),w
  9472  0D30  3002               	movlw	2
  9473  0D31  1903               	skipnz
  9474  0D32  0240               	subwf	(_PF1^(0+128)+2),w
  9475  0D33  1C03               	skipc
  9476  0D34  0008               	return
  9477                           
  9478                           ;PowerFault_B1.c: 72: {
  9479                           ;PowerFault_B1.c: 73: PF1.Time = 0;
  9480  0D35  01C0               	clrf	(_PF1^(0+128)+2)
  9481  0D36  01C1               	clrf	((_PF1+1)^(0+128)+2)
  9482                           
  9483                           ;PowerFault_B1.c: 74: PF1.ADtoGO = 0;
  9484  0D37  11BE               	bcf	_PF1^(0+128),3
  9485                           
  9486                           ;PowerFault_B1.c: 76: if (PF1.ERROR == 1) {
  9487  0D38  1CBE               	btfss	_PF1^(0+128),1
  9488  0D39  2D58               	goto	l7785
  9489                           
  9490                           ;PowerFault_B1.c: 77: if (PF1.AD <= (300 + 100) && PF1.AD >= (300 - 100)) {
  9491  0D3A  3001               	movlw	1
  9492  0D3B  0243               	subwf	((_PF1+1)^(0+128)+4),w
  9493  0D3C  3091               	movlw	145
  9494  0D3D  1903               	skipnz
  9495  0D3E  0242               	subwf	(_PF1^(0+128)+4),w
  9496  0D3F  1803               	skipnc
  9497  0D40  2D76               	goto	l7797
  9498  0D41  3000               	movlw	0
  9499  0D42  0243               	subwf	((_PF1+1)^(0+128)+4),w
  9500  0D43  30C8               	movlw	200
  9501  0D44  1903               	skipnz
  9502  0D45  0242               	subwf	(_PF1^(0+128)+4),w
  9503  0D46  1C03               	skipc
  9504  0D47  2D76               	goto	l7797
  9505                           
  9506                           ;PowerFault_B1.c: 78: PF1.Count++;
  9507  0D48  3001               	movlw	1
  9508  0D49  0020               	movlb	0	; select bank0
  9509  0D4A  00B1               	movwf	??_setPowerFault_Main
  9510  0D4B  0831               	movf	??_setPowerFault_Main,w
  9511  0D4C  0021               	movlb	1	; select bank1
  9512  0D4D  07BF               	addwf	(_PF1^(0+128)+1),f
  9513                           
  9514                           ;PowerFault_B1.c: 79: if (PF1.Count > 1) {
  9515  0D4E  3002               	movlw	2
  9516  0D4F  023F               	subwf	(_PF1^(0+128)+1),w
  9517  0D50  1C03               	skipc
  9518  0D51  2D78               	goto	l7799
  9519                           
  9520                           ;PowerFault_B1.c: 80: PF1.Count = 0;
  9521  0D52  01BF               	clrf	(_PF1^(0+128)+1)
  9522                           
  9523                           ;PowerFault_B1.c: 81: setPowerFault_Exceptions(0);
  9524  0D53  3000               	movlw	0
  9525  0D54  3194  248D  318D   	fcall	_setPowerFault_Exceptions
  9526                           
  9527                           ;PowerFault_B1.c: 82: }
  9528                           ;PowerFault_B1.c: 83: } else {
  9529  0D57  2D78               	goto	l7799
  9530  0D58                     l7785:	
  9531                           ;PowerFault_B1.c: 85: }
  9532                           ;PowerFault_B1.c: 86: } else {
  9533                           
  9534                           ;PowerFault_B1.c: 84: PF1.Count = 0;
  9535                           
  9536                           
  9537                           ;PowerFault_B1.c: 87: if (PF1.AD >= (300 + 100) || PF1.AD <= (310 - 100)) {
  9538  0D58  3001               	movlw	1
  9539  0D59  0243               	subwf	((_PF1+1)^(0+128)+4),w
  9540  0D5A  3090               	movlw	144
  9541  0D5B  1903               	skipnz
  9542  0D5C  0242               	subwf	(_PF1^(0+128)+4),w
  9543  0D5D  1803               	skipnc
  9544  0D5E  2D66               	goto	l7789
  9545  0D5F  3000               	movlw	0
  9546  0D60  0243               	subwf	((_PF1+1)^(0+128)+4),w
  9547  0D61  30D3               	movlw	211
  9548  0D62  1903               	skipnz
  9549  0D63  0242               	subwf	(_PF1^(0+128)+4),w
  9550  0D64  1803               	skipnc
  9551  0D65  2D76               	goto	l7797
  9552  0D66                     l7789:	
  9553                           
  9554                           ;PowerFault_B1.c: 88: PF1.Count++;
  9555  0D66  3001               	movlw	1
  9556  0D67  0020               	movlb	0	; select bank0
  9557  0D68  00B1               	movwf	??_setPowerFault_Main
  9558  0D69  0831               	movf	??_setPowerFault_Main,w
  9559  0D6A  0021               	movlb	1	; select bank1
  9560  0D6B  07BF               	addwf	(_PF1^(0+128)+1),f
  9561                           
  9562                           ;PowerFault_B1.c: 89: if (PF1.Count > 1) {
  9563  0D6C  3002               	movlw	2
  9564  0D6D  023F               	subwf	(_PF1^(0+128)+1),w
  9565  0D6E  1C03               	skipc
  9566  0D6F  2D78               	goto	l7799
  9567                           
  9568                           ;PowerFault_B1.c: 90: PF1.Count = 0;
  9569  0D70  01BF               	clrf	(_PF1^(0+128)+1)
  9570                           
  9571                           ;PowerFault_B1.c: 91: setPowerFault_Exceptions(1);
  9572  0D71  3001               	movlw	1
  9573  0D72  3194  248D  318D   	fcall	_setPowerFault_Exceptions
  9574                           
  9575                           ;PowerFault_B1.c: 92: }
  9576                           ;PowerFault_B1.c: 93: } else {
  9577  0D75  2D78               	goto	l7799
  9578  0D76                     l7797:	
  9579                           
  9580                           ;PowerFault_B1.c: 94: PF1.Count = 0;
  9581  0D76  0021               	movlb	1	; select bank1
  9582  0D77  01BF               	clrf	(_PF1^(0+128)+1)
  9583  0D78                     l7799:	
  9584                           
  9585                           ;PowerFault_B1.c: 95: }
  9586                           ;PowerFault_B1.c: 97: }
  9587                           ;PowerFault_B1.c: 98: if (PF1.ERROR == 0) {
  9588  0D78  0021               	movlb	1	; select bank1
  9589  0D79  1CBE               	btfss	_PF1^(0+128),1
  9590                           
  9591                           ;PowerFault_B1.c: 99: PF1.Safe = 1;
  9592  0D7A  153E               	bsf	_PF1^(0+128),2
  9593                           
  9594                           ;PowerFault_B1.c: 100: }
  9595                           ;PowerFault_B1.c: 101: PF1.AD = 0;
  9596  0D7B  01C2               	clrf	(_PF1^(0+128)+4)
  9597  0D7C  01C3               	clrf	((_PF1+1)^(0+128)+4)
  9598  0D7D  0008               	return
  9599  0D7E                     __end_of_setPowerFault_Main:	
  9600                           
  9601                           	psect	text49
  9602  148D                     __ptext49:	
  9603 ;; *************** function _setPowerFault_Exceptions *****************
  9604 ;; Defined at:
  9605 ;;		line 107 in file "../src/PowerFault_B1.c"
  9606 ;; Parameters:    Size  Location     Type
  9607 ;;  command         1    wreg     unsigned char 
  9608 ;; Auto vars:     Size  Location     Type
  9609 ;;  command         1   16[BANK0 ] unsigned char 
  9610 ;;  i               1   15[BANK0 ] unsigned char 
  9611 ;; Return value:  Size  Location     Type
  9612 ;;		None               void
  9613 ;; Registers used:
  9614 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9615 ;; Tracked objects:
  9616 ;;		On entry : 0/0
  9617 ;;		On exit  : 0/0
  9618 ;;		Unchanged: 0/0
  9619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9621 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9622 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9623 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9624 ;;Total ram usage:        3 bytes
  9625 ;; Hardware stack levels used:    1
  9626 ;; Hardware stack levels required when called:    9
  9627 ;; This function calls:
  9628 ;;		_DimmerLights_Exceptions
  9629 ;;		_setLED
  9630 ;;		_setRF_Enable
  9631 ;;		_setSw_Enable
  9632 ;; This function is called by:
  9633 ;;		_setPowerFault_Main
  9634 ;; This function uses a non-reentrant model
  9635 ;;
  9636                           
  9637                           
  9638                           ;psect for function _setPowerFault_Exceptions
  9639  148D                     _setPowerFault_Exceptions:	
  9640                           
  9641                           ;incstack = 0
  9642                           ; Regs used in _setPowerFault_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  9643                           ;setPowerFault_Exceptions@command stored from wreg
  9644  148D  0020               	movlb	0	; select bank0
  9645  148E  00B0               	movwf	setPowerFault_Exceptions@command
  9646                           
  9647                           ;PowerFault_B1.c: 108: char i = command == 1 ? 0 : 1;
  9648  148F  0830               	movf	setPowerFault_Exceptions@command,w
  9649  1490  3A01               	xorlw	1
  9650  1491  3000               	movlw	0
  9651  1492  1D03               	skipz
  9652  1493  3001               	movlw	1
  9653  1494  00AE               	movwf	??_setPowerFault_Exceptions
  9654  1495  082E               	movf	??_setPowerFault_Exceptions,w
  9655  1496  00AF               	movwf	setPowerFault_Exceptions@i
  9656                           
  9657                           ;PowerFault_B1.c: 109: PF1.ERROR = command;
  9658  1497  0830               	movf	setPowerFault_Exceptions@command,w
  9659  1498  0021               	movlb	1	; select bank1
  9660  1499  10BE               	bcf	_PF1^(0+128),1
  9661  149A  1D03               	skipz
  9662  149B  14BE               	bsf	_PF1^(0+128),1
  9663                           
  9664                           ;PowerFault_B1.c: 110: PF1.Safe = i;
  9665  149C  0020               	movlb	0	; select bank0
  9666  149D  082F               	movf	setPowerFault_Exceptions@i,w
  9667  149E  0021               	movlb	1	; select bank1
  9668  149F  113E               	bcf	_PF1^(0+128),2
  9669  14A0  1D03               	skipz
  9670  14A1  153E               	bsf	_PF1^(0+128),2
  9671                           
  9672                           ;PowerFault_B1.c: 111: if (command == 1) {
  9673  14A2  0020               	movlb	0	; select bank0
  9674  14A3  0830               	movf	setPowerFault_Exceptions@command,w
  9675  14A4  3A01               	xorlw	1
  9676  14A5  1D03               	skipz
  9677  14A6  2CB2               	goto	l1704
  9678                           
  9679                           ;PowerFault_B1.c: 112: DimmerLights_Exceptions(3);
  9680  14A7  3003               	movlw	3
  9681  14A8  3195  253D  3194   	fcall	_DimmerLights_Exceptions
  9682                           
  9683                           ;PowerFault_B1.c: 114: setLED(2, 1);
  9684  14AB  0020               	movlb	0	; select bank0
  9685  14AC  01A1               	clrf	setLED@command
  9686  14AD  0AA1               	incf	setLED@command,f
  9687  14AE  3002               	movlw	2
  9688  14AF  318B  2305  3194   	fcall	_setLED
  9689  14B2                     l1704:	
  9690                           
  9691                           ;PowerFault_B1.c: 116: }
  9692                           ;PowerFault_B1.c: 117: setLED(99, command + 10);
  9693  14B2  0020               	movlb	0	; select bank0
  9694  14B3  0830               	movf	setPowerFault_Exceptions@command,w
  9695  14B4  3E0A               	addlw	10
  9696  14B5  00AE               	movwf	??_setPowerFault_Exceptions
  9697  14B6  082E               	movf	??_setPowerFault_Exceptions,w
  9698  14B7  00A1               	movwf	setLED@command
  9699  14B8  3063               	movlw	99
  9700  14B9  318B  2305  3194   	fcall	_setLED
  9701                           
  9702                           ;PowerFault_B1.c: 119: setSw_Enable(i);
  9703  14BC  0020               	movlb	0	; select bank0
  9704  14BD  082F               	movf	setPowerFault_Exceptions@i,w
  9705  14BE  319F  2763  3194   	fcall	_setSw_Enable
  9706                           
  9707                           ;PowerFault_B1.c: 121: setRF_Enable(i);
  9708  14C1  0020               	movlb	0	; select bank0
  9709  14C2  082F               	movf	setPowerFault_Exceptions@i,w
  9710  14C3  319F  2737         	fcall	_setRF_Enable
  9711  14C5  0008               	return
  9712  14C6                     __end_of_setPowerFault_Exceptions:	
  9713                           
  9714                           	psect	text50
  9715  1F63                     __ptext50:	
  9716 ;; *************** function _setSw_Enable *****************
  9717 ;; Defined at:
  9718 ;;		line 91 in file "../src/Switch_B1.c"
  9719 ;; Parameters:    Size  Location     Type
  9720 ;;  command         1    wreg     unsigned char 
  9721 ;; Auto vars:     Size  Location     Type
  9722 ;;  command         1    2[BANK0 ] unsigned char 
  9723 ;; Return value:  Size  Location     Type
  9724 ;;		None               void
  9725 ;; Registers used:
  9726 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9727 ;; Tracked objects:
  9728 ;;		On entry : 0/0
  9729 ;;		On exit  : 0/0
  9730 ;;		Unchanged: 0/0
  9731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9733 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9735 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9736 ;;Total ram usage:        1 bytes
  9737 ;; Hardware stack levels used:    1
  9738 ;; Hardware stack levels required when called:    6
  9739 ;; This function calls:
  9740 ;;		_SwPointSelect
  9741 ;; This function is called by:
  9742 ;;		_setOverTemp_Exceptions
  9743 ;;		_setPowerFault_Exceptions
  9744 ;;		_my_Main
  9745 ;; This function uses a non-reentrant model
  9746 ;;
  9747                           
  9748                           
  9749                           ;psect for function _setSw_Enable
  9750  1F63                     _setSw_Enable:	
  9751                           
  9752                           ;incstack = 0
  9753                           ; Regs used in _setSw_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9754                           ;setSw_Enable@command stored from wreg
  9755  1F63  0020               	movlb	0	; select bank0
  9756  1F64  00A2               	movwf	setSw_Enable@command
  9757                           
  9758                           ;Switch_B1.c: 94: SwPointSelect(1);
  9759  1F65  3001               	movlw	1
  9760  1F66  319E  26C7         	fcall	_SwPointSelect
  9761                           
  9762                           ;Switch_B1.c: 95: Sw->Enable = command;
  9763  1F68  0020               	movlb	0	; select bank0
  9764  1F69  086E               	movf	_Sw,w
  9765  1F6A  0086               	movwf	6
  9766  1F6B  3001               	movlw	1	; select bank2/3
  9767  1F6C  0087               	movwf	7
  9768  1F6D  0822               	movf	setSw_Enable@command,w
  9769  1F6E  1001               	bcf	1,0
  9770  1F6F  1D03               	skipz
  9771  1F70  1401               	bsf	1,0
  9772  1F71  0008               	return
  9773  1F72                     __end_of_setSw_Enable:	
  9774                           
  9775                           	psect	text51
  9776  1F37                     __ptext51:	
  9777 ;; *************** function _setRF_Enable *****************
  9778 ;; Defined at:
  9779 ;;		line 178 in file "../src/RF_Control_B1.c"
  9780 ;; Parameters:    Size  Location     Type
  9781 ;;  command         1    wreg     unsigned char 
  9782 ;; Auto vars:     Size  Location     Type
  9783 ;;  command         1    0[BANK0 ] unsigned char 
  9784 ;; Return value:  Size  Location     Type
  9785 ;;		None               void
  9786 ;; Registers used:
  9787 ;;		wreg, status,2
  9788 ;; Tracked objects:
  9789 ;;		On entry : 0/0
  9790 ;;		On exit  : 0/0
  9791 ;;		Unchanged: 0/0
  9792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9794 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9796 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9797 ;;Total ram usage:        1 bytes
  9798 ;; Hardware stack levels used:    1
  9799 ;; Hardware stack levels required when called:    5
  9800 ;; This function calls:
  9801 ;;		Nothing
  9802 ;; This function is called by:
  9803 ;;		_setOverTemp_Exceptions
  9804 ;;		_setPowerFault_Exceptions
  9805 ;;		_my_Main
  9806 ;; This function uses a non-reentrant model
  9807 ;;
  9808                           
  9809                           
  9810                           ;psect for function _setRF_Enable
  9811  1F37                     _setRF_Enable:	
  9812                           
  9813                           ;incstack = 0
  9814                           ; Regs used in _setRF_Enable: [wreg+status,2]
  9815                           ;setRF_Enable@command stored from wreg
  9816  1F37  0020               	movlb	0	; select bank0
  9817  1F38  00A0               	movwf	setRF_Enable@command
  9818                           
  9819                           ;RF_Control_B1.c: 179: RF1.Enable = command;
  9820  1F39  0820               	movf	setRF_Enable@command,w
  9821  1F3A  0021               	movlb	1	; select bank1
  9822  1F3B  1046               	bcf	_RF1^(0+128),0
  9823  1F3C  1D03               	skipz
  9824  1F3D  1446               	bsf	_RF1^(0+128),0
  9825                           
  9826                           ;RF_Control_B1.c: 180: RF1.Learn = 0;
  9827  1F3E  1346               	bcf	_RF1^(0+128),6
  9828                           
  9829                           ;RF_Control_B1.c: 181: RF1.TransceiveGO = 0;
  9830  1F3F  1146               	bcf	_RF1^(0+128),2
  9831                           
  9832                           ;RF_Control_B1.c: 182: RF1.RxStatus = 0;
  9833  1F40  11C6               	bcf	_RF1^(0+128),3
  9834                           
  9835                           ;RF_Control_B1.c: 183: RF1.ReceiveGO = 0;
  9836  1F41  10C6               	bcf	_RF1^(0+128),1
  9837                           
  9838                           ;RF_Control_B1.c: 184: RF1.DebounceTime = 0;
  9839  1F42  01CA               	clrf	(_RF1^(0+128)+4)
  9840                           
  9841                           ;RF_Control_B1.c: 185: RF1.Debounce = 0;
  9842  1F43  12C6               	bcf	_RF1^(0+128),5
  9843  1F44  0008               	return
  9844  1F45                     __end_of_setRF_Enable:	
  9845                           
  9846                           	psect	text52
  9847  153D                     __ptext52:	
  9848 ;; *************** function _DimmerLights_Exceptions *****************
  9849 ;; Defined at:
  9850 ;;		line 513 in file "../src/Dimmer_B1.c"
  9851 ;; Parameters:    Size  Location     Type
  9852 ;;  status          1    wreg     unsigned char 
  9853 ;; Auto vars:     Size  Location     Type
  9854 ;;  status          1   13[BANK0 ] unsigned char 
  9855 ;; Return value:  Size  Location     Type
  9856 ;;		None               void
  9857 ;; Registers used:
  9858 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9859 ;; Tracked objects:
  9860 ;;		On entry : 0/0
  9861 ;;		On exit  : 0/0
  9862 ;;		Unchanged: 0/0
  9863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9865 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9867 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9868 ;;Total ram usage:        1 bytes
  9869 ;; Hardware stack levels used:    1
  9870 ;; Hardware stack levels required when called:    8
  9871 ;; This function calls:
  9872 ;;		_getDimmerLights_StatusFlag
  9873 ;;		_setBuz
  9874 ;;		_setDimmerLights_ERROR
  9875 ;;		_setDimmerLights_TriggerERROR
  9876 ;; This function is called by:
  9877 ;;		_setOverTemp_Exceptions
  9878 ;;		_setPowerFault_Exceptions
  9879 ;; This function uses a non-reentrant model
  9880 ;;
  9881                           
  9882                           
  9883                           ;psect for function _DimmerLights_Exceptions
  9884  153D                     _DimmerLights_Exceptions:	
  9885                           
  9886                           ;incstack = 0
  9887                           ; Regs used in _DimmerLights_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  9888                           ;DimmerLights_Exceptions@status stored from wreg
  9889  153D  0020               	movlb	0	; select bank0
  9890  153E  00AD               	movwf	DimmerLights_Exceptions@status
  9891                           
  9892                           ;Dimmer_B1.c: 514: if (status == 1) {
  9893  153F  082D               	movf	DimmerLights_Exceptions@status,w
  9894  1540  3A01               	xorlw	1
  9895  1541  1D03               	skipz
  9896  1542  2D53               	goto	l7533
  9897                           
  9898                           ;Dimmer_B1.c: 515: if (getDimmerLights_StatusFlag() == 1) {
  9899  1543  3190  2066  3195   	fcall	_getDimmerLights_StatusFlag
  9900  1546  3A01               	xorlw	1
  9901  1547  1D03               	skipz
  9902  1548  2D6B               	goto	l7541
  9903                           
  9904                           ;Dimmer_B1.c: 516: setBuz(10, 300);
  9905  1549  302C               	movlw	44
  9906  154A  0020               	movlb	0	; select bank0
  9907  154B  00A9               	movwf	setBuz@time
  9908  154C  3001               	movlw	1
  9909  154D  00AA               	movwf	setBuz@time+1
  9910  154E  300A               	movlw	10
  9911  154F  3189  2134  3195   	fcall	_setBuz
  9912  1552  2D6B               	goto	l7541
  9913  1553                     l7533:	
  9914                           ;Dimmer_B1.c: 528: } else if (status == 2)
  9915                           
  9916                           ;Dimmer_B1.c: 517: }
  9917                           ;Dimmer_B1.c: 520: setDimmerLights_ERROR(1);
  9918                           
  9919  1553  0020               	movlb	0	; select bank0
  9920  1554  082D               	movf	DimmerLights_Exceptions@status,w
  9921  1555  3A02               	xorlw	2
  9922  1556  1D03               	skipz
  9923  1557  2D66               	goto	l7539
  9924                           
  9925                           ;Dimmer_B1.c: 529: {
  9926                           ;Dimmer_B1.c: 530: setBuz(5, 300);
  9927  1558  302C               	movlw	44
  9928  1559  00A9               	movwf	setBuz@time
  9929  155A  3001               	movlw	1
  9930  155B  00AA               	movwf	setBuz@time+1
  9931  155C  3005               	movlw	5
  9932  155D  3189  2134  3195   	fcall	_setBuz
  9933                           
  9934                           ;Dimmer_B1.c: 531: setDimmerLights_ERROR(Dimmer->Load);
  9935  1560  0021               	movlb	1	; select bank1
  9936  1561  0A50               	incf	_Dimmer^(0+128),w
  9937  1562  0086               	movwf	6
  9938  1563  0187               	clrf	7
  9939  1564  0801               	movf	1,w
  9940  1565  2D6C               	goto	L4
  9941  1566                     l7539:	
  9942                           ;Dimmer_B1.c: 532: } else if (status == 3)
  9943                           
  9944  1566  0020               	movlb	0	; select bank0
  9945  1567  082D               	movf	DimmerLights_Exceptions@status,w
  9946  1568  3A03               	xorlw	3
  9947  1569  1D03               	skipz
  9948  156A  2D6F               	goto	l783
  9949  156B                     l7541:	
  9950                           
  9951                           ;Dimmer_B1.c: 533: {
  9952                           ;Dimmer_B1.c: 535: setDimmerLights_ERROR(1);
  9953  156B  3001               	movlw	1
  9954  156C                     L4:	
  9955  156C  3197  27B0  3195   	fcall	_setDimmerLights_ERROR
  9956  156F                     l783:	
  9957                           
  9958                           ;Dimmer_B1.c: 543: }
  9959                           ;Dimmer_B1.c: 546: setDimmerLights_TriggerERROR(1, 0);
  9960  156F  0020               	movlb	0	; select bank0
  9961  1570  01A2               	clrf	setDimmerLights_TriggerERROR@command
  9962  1571  3001               	movlw	1
  9963  1572  3193  236A  3195   	fcall	_setDimmerLights_TriggerERROR
  9964                           
  9965                           ;Dimmer_B1.c: 555: if (myMain.SelfTest == 0) {
  9966  1575  0021               	movlb	1	; select bank1
  9967  1576  1B20               	btfsc	_myMain^(0+128),6
  9968  1577  0008               	return
  9969                           
  9970                           ;Dimmer_B1.c: 556: myMain.i = 0;
  9971  1578  102E               	bcf	(_myMain^(0+128)+14),0
  9972                           
  9973                           ;Dimmer_B1.c: 557: myMain.j = 0;
  9974  1579  10AE               	bcf	(_myMain^(0+128)+14),1
  9975                           
  9976                           ;Dimmer_B1.c: 558: myMain.k = 1;
  9977  157A  152E               	bsf	(_myMain^(0+128)+14),2
  9978                           
  9979                           ;Dimmer_B1.c: 559: myMain.Count2 = 0;
  9980  157B  01A7               	clrf	(_myMain^(0+128)+7)
  9981  157C  01A8               	clrf	((_myMain+1)^(0+128)+7)
  9982  157D  0008               	return
  9983  157E                     __end_of_DimmerLights_Exceptions:	
  9984                           
  9985                           	psect	text53
  9986  136A                     __ptext53:	
  9987 ;; *************** function _setDimmerLights_TriggerERROR *****************
  9988 ;; Defined at:
  9989 ;;		line 582 in file "../src/Dimmer_B1.c"
  9990 ;; Parameters:    Size  Location     Type
  9991 ;;  lights          1    wreg     unsigned char 
  9992 ;;  command         1    2[BANK0 ] unsigned char 
  9993 ;; Auto vars:     Size  Location     Type
  9994 ;;  lights          1    3[BANK0 ] unsigned char 
  9995 ;; Return value:  Size  Location     Type
  9996 ;;		None               void
  9997 ;; Registers used:
  9998 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9999 ;; Tracked objects:
 10000 ;;		On entry : 0/0
 10001 ;;		On exit  : 0/0
 10002 ;;		Unchanged: 0/0
 10003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10004 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10005 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10007 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10008 ;;Total ram usage:        2 bytes
 10009 ;; Hardware stack levels used:    1
 10010 ;; Hardware stack levels required when called:    6
 10011 ;; This function calls:
 10012 ;;		_DimmerLightsPointSelect
 10013 ;; This function is called by:
 10014 ;;		_DimmerLights_Exceptions
 10015 ;; This function uses a non-reentrant model
 10016 ;;
 10017                           
 10018                           
 10019                           ;psect for function _setDimmerLights_TriggerERROR
 10020  136A                     _setDimmerLights_TriggerERROR:	
 10021                           
 10022                           ;incstack = 0
 10023                           ; Regs used in _setDimmerLights_TriggerERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 10024                           ;setDimmerLights_TriggerERROR@lights stored from wreg
 10025  136A  0020               	movlb	0	; select bank0
 10026  136B  00A3               	movwf	setDimmerLights_TriggerERROR@lights
 10027                           
 10028                           ;Dimmer_B1.c: 584: DimmerLightsPointSelect(lights);
 10029  136C  0823               	movf	setDimmerLights_TriggerERROR@lights,w
 10030  136D  319E  26B1         	fcall	_DimmerLightsPointSelect
 10031                           
 10032                           ;Dimmer_B1.c: 585: DimmerLights->Trigger = command;
 10033  136F  0020               	movlb	0	; select bank0
 10034  1370  086D               	movf	_DimmerLights,w
 10035  1371  3E08               	addlw	8
 10036  1372  0086               	movwf	6
 10037  1373  3001               	movlw	1	; select bank2/3
 10038  1374  0087               	movwf	7
 10039  1375  0822               	movf	setDimmerLights_TriggerERROR@command,w
 10040  1376  1101               	bcf	1,2
 10041  1377  1D03               	skipz
 10042  1378  1501               	bsf	1,2
 10043                           
 10044                           ;Dimmer_B1.c: 586: DimmerLights->Switch = command;
 10045  1379  086D               	movf	_DimmerLights,w
 10046  137A  3E08               	addlw	8
 10047  137B  0086               	movwf	6
 10048  137C  3001               	movlw	1	; select bank2/3
 10049  137D  0087               	movwf	7
 10050  137E  0822               	movf	setDimmerLights_TriggerERROR@command,w
 10051  137F  1081               	bcf	1,1
 10052  1380  1D03               	skipz
 10053  1381  1481               	bsf	1,1
 10054                           
 10055                           ;Dimmer_B1.c: 587: DimmerLights->TriggerAdj = command;
 10056  1382  086D               	movf	_DimmerLights,w
 10057  1383  3E08               	addlw	8
 10058  1384  0086               	movwf	6
 10059  1385  3001               	movlw	1	; select bank2/3
 10060  1386  0087               	movwf	7
 10061  1387  0822               	movf	setDimmerLights_TriggerERROR@command,w
 10062  1388  1201               	bcf	1,4
 10063  1389  1D03               	skipz
 10064  138A  1601               	bsf	1,4
 10065                           
 10066                           ;Dimmer_B1.c: 588: DimmerLights->AdjGo = command;
 10067  138B  086D               	movf	_DimmerLights,w
 10068  138C  3E08               	addlw	8
 10069  138D  0086               	movwf	6
 10070  138E  3001               	movlw	1	; select bank2/3
 10071  138F  0087               	movwf	7
 10072  1390  0822               	movf	setDimmerLights_TriggerERROR@command,w
 10073  1391  1181               	bcf	1,3
 10074  1392  1D03               	skipz
 10075  1393  1581               	bsf	1,3
 10076  1394  0008               	return
 10077  1395                     __end_of_setDimmerLights_TriggerERROR:	
 10078                           
 10079                           	psect	text54
 10080  17B0                     __ptext54:	
 10081 ;; *************** function _setDimmerLights_ERROR *****************
 10082 ;; Defined at:
 10083 ;;		line 564 in file "../src/Dimmer_B1.c"
 10084 ;; Parameters:    Size  Location     Type
 10085 ;;  lights          1    wreg     unsigned char 
 10086 ;; Auto vars:     Size  Location     Type
 10087 ;;  lights          1    5[BANK0 ] unsigned char 
 10088 ;; Return value:  Size  Location     Type
 10089 ;;		None               void
 10090 ;; Registers used:
 10091 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10092 ;; Tracked objects:
 10093 ;;		On entry : 0/0
 10094 ;;		On exit  : 0/0
 10095 ;;		Unchanged: 0/0
 10096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10098 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10099 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10100 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10101 ;;Total ram usage:        2 bytes
 10102 ;; Hardware stack levels used:    1
 10103 ;; Hardware stack levels required when called:    7
 10104 ;; This function calls:
 10105 ;;		_DimmerLightsPointSelect
 10106 ;;		_setLED
 10107 ;;		_setRFSW_Status
 10108 ;;		_setSw_Status
 10109 ;; This function is called by:
 10110 ;;		_DimmerLights_Exceptions
 10111 ;; This function uses a non-reentrant model
 10112 ;;
 10113                           
 10114                           
 10115                           ;psect for function _setDimmerLights_ERROR
 10116  17B0                     _setDimmerLights_ERROR:	
 10117                           
 10118                           ;incstack = 0
 10119                           ; Regs used in _setDimmerLights_ERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 10120                           ;setDimmerLights_ERROR@lights stored from wreg
 10121  17B0  0020               	movlb	0	; select bank0
 10122  17B1  00A5               	movwf	setDimmerLights_ERROR@lights
 10123                           
 10124                           ;Dimmer_B1.c: 565: DimmerLightsPointSelect(lights);
 10125  17B2  0825               	movf	setDimmerLights_ERROR@lights,w
 10126  17B3  319E  26B1  3197   	fcall	_DimmerLightsPointSelect
 10127                           
 10128                           ;Dimmer_B1.c: 566: if (DimmerLights->Status == 1) {
 10129  17B6  0020               	movlb	0	; select bank0
 10130  17B7  086D               	movf	_DimmerLights,w
 10131  17B8  0086               	movwf	6
 10132  17B9  3001               	movlw	1	; select bank2/3
 10133  17BA  0087               	movwf	7
 10134  17BB  1E81               	btfss	1,5
 10135  17BC  0008               	return
 10136                           
 10137                           ;Dimmer_B1.c: 568: DimmerLights->Signal = 0;
 10138  17BD  086D               	movf	_DimmerLights,w
 10139  17BE  0086               	movwf	6
 10140  17BF  3001               	movlw	1	; select bank2/3
 10141  17C0  0087               	movwf	7
 10142  17C1  1081               	bcf	1,1
 10143                           
 10144                           ;Dimmer_B1.c: 569: DimmerLights->AdjFlag = 0;
 10145  17C2  086D               	movf	_DimmerLights,w
 10146  17C3  0086               	movwf	6
 10147  17C4  3001               	movlw	1	; select bank2/3
 10148  17C5  0087               	movwf	7
 10149  17C6  1181               	bcf	1,3
 10150                           
 10151                           ;Dimmer_B1.c: 570: DimmerLights->AdjStatus = 0;
 10152  17C7  086D               	movf	_DimmerLights,w
 10153  17C8  0086               	movwf	6
 10154  17C9  3001               	movlw	1	; select bank2/3
 10155  17CA  0087               	movwf	7
 10156  17CB  1201               	bcf	1,4
 10157                           
 10158                           ;Dimmer_B1.c: 571: DimmerLights->StatusFlag = 0;
 10159  17CC  086D               	movf	_DimmerLights,w
 10160  17CD  0086               	movwf	6
 10161  17CE  3001               	movlw	1	; select bank2/3
 10162  17CF  0087               	movwf	7
 10163  17D0  1301               	bcf	1,6
 10164                           
 10165                           ;Dimmer_B1.c: 572: DimmerLights->DimmingTimeValue = 7;
 10166  17D1  3007               	movlw	7
 10167  17D2  00A4               	movwf	??_setDimmerLights_ERROR
 10168  17D3  086D               	movf	_DimmerLights,w
 10169  17D4  3E02               	addlw	2
 10170  17D5  0086               	movwf	6
 10171  17D6  3001               	movlw	1	; select bank2/3
 10172  17D7  0087               	movwf	7
 10173  17D8  0824               	movf	??_setDimmerLights_ERROR,w
 10174  17D9  0081               	movwf	1
 10175                           
 10176                           ;Dimmer_B1.c: 573: DimmerLights->DimmingValue = DimmerLights->MinimumValue;
 10177  17DA  086D               	movf	_DimmerLights,w
 10178  17DB  3E06               	addlw	6
 10179  17DC  0086               	movwf	6
 10180  17DD  3001               	movlw	1	; select bank2/3
 10181  17DE  0087               	movwf	7
 10182  17DF  0801               	movf	1,w
 10183  17E0  00A4               	movwf	??_setDimmerLights_ERROR
 10184  17E1  086D               	movf	_DimmerLights,w
 10185  17E2  3E04               	addlw	4
 10186  17E3  0086               	movwf	6
 10187  17E4  3001               	movlw	1	; select bank2/3
 10188  17E5  0087               	movwf	7
 10189  17E6  0824               	movf	??_setDimmerLights_ERROR,w
 10190  17E7  0081               	movwf	1
 10191                           
 10192                           ;Dimmer_B1.c: 574: Dimmer->Detect = 1;
 10193  17E8  0021               	movlb	1	; select bank1
 10194  17E9  0850               	movf	_Dimmer^(0+128),w
 10195  17EA  0086               	movwf	6
 10196  17EB  0187               	clrf	7
 10197  17EC  1401               	bsf	1,0
 10198                           
 10199                           ;Dimmer_B1.c: 575: ;;
 10200                           ;Dimmer_B1.c: 576: setLED(lights, 1);
 10201  17ED  0020               	movlb	0	; select bank0
 10202  17EE  01A1               	clrf	setLED@command
 10203  17EF  0AA1               	incf	setLED@command,f
 10204  17F0  0825               	movf	setDimmerLights_ERROR@lights,w
 10205  17F1  318B  2305  3197   	fcall	_setLED
 10206                           
 10207                           ;Dimmer_B1.c: 577: setSw_Status(lights, 0);
 10208  17F4  0020               	movlb	0	; select bank0
 10209  17F5  01A2               	clrf	setSw_Status@command
 10210  17F6  0825               	movf	setDimmerLights_ERROR@lights,w
 10211  17F7  319F  2745  3197   	fcall	_setSw_Status
 10212                           
 10213                           ;Dimmer_B1.c: 578: setRFSW_Status(lights, 0);
 10214  17FA  0020               	movlb	0	; select bank0
 10215  17FB  01A2               	clrf	setRFSW_Status@command
 10216  17FC  0825               	movf	setDimmerLights_ERROR@lights,w
 10217  17FD  319F  2729         	fcall	_setRFSW_Status
 10218  17FF  0008               	return
 10219  1800                     __end_of_setDimmerLights_ERROR:	
 10220                           
 10221                           	psect	text55
 10222  1E54                     __ptext55:	
 10223 ;; *************** function _getTemp_Safe *****************
 10224 ;; Defined at:
 10225 ;;		line 21 in file "../src/OverTemperature_B1.c"
 10226 ;; Parameters:    Size  Location     Type
 10227 ;;		None
 10228 ;; Auto vars:     Size  Location     Type
 10229 ;;  result          1    0[BANK0 ] unsigned char 
 10230 ;; Return value:  Size  Location     Type
 10231 ;;                  1    wreg      unsigned char 
 10232 ;; Registers used:
 10233 ;;		wreg, status,2
 10234 ;; Tracked objects:
 10235 ;;		On entry : 0/0
 10236 ;;		On exit  : 0/0
 10237 ;;		Unchanged: 0/0
 10238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10240 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10242 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10243 ;;Total ram usage:        1 bytes
 10244 ;; Hardware stack levels used:    1
 10245 ;; Hardware stack levels required when called:    5
 10246 ;; This function calls:
 10247 ;;		Nothing
 10248 ;; This function is called by:
 10249 ;;		_setPowerFault_Main
 10250 ;; This function uses a non-reentrant model
 10251 ;;
 10252                           
 10253                           
 10254                           ;psect for function _getTemp_Safe
 10255  1E54                     _getTemp_Safe:	
 10256                           
 10257                           ;OverTemperature_B1.c: 22: char result = Temp1.Safe;
 10258                           
 10259                           ;incstack = 0
 10260                           ; Regs used in _getTemp_Safe: [wreg+status,2]
 10261  1E54  3000               	movlw	0
 10262  1E55  0021               	movlb	1	; select bank1
 10263  1E56  1A59               	btfsc	_Temp1^(0+128),4
 10264  1E57  3001               	movlw	1
 10265  1E58  0020               	movlb	0	; select bank0
 10266  1E59  00A0               	movwf	getTemp_Safe@result
 10267                           
 10268                           ;OverTemperature_B1.c: 23: return result;
 10269  1E5A  0820               	movf	getTemp_Safe@result,w
 10270  1E5B  0008               	return
 10271  1E5C                     __end_of_getTemp_Safe:	
 10272                           
 10273                           	psect	text56
 10274  1DE6                     __ptext56:	
 10275 ;; *************** function _PowerFault_Initialization *****************
 10276 ;; Defined at:
 10277 ;;		line 10 in file "../src/PowerFault_B1.c"
 10278 ;; Parameters:    Size  Location     Type
 10279 ;;		None
 10280 ;; Auto vars:     Size  Location     Type
 10281 ;;		None
 10282 ;; Return value:  Size  Location     Type
 10283 ;;		None               void
 10284 ;; Registers used:
 10285 ;;		status,2, status,0, pclath, cstack
 10286 ;; Tracked objects:
 10287 ;;		On entry : 0/0
 10288 ;;		On exit  : 0/0
 10289 ;;		Unchanged: 0/0
 10290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10295 ;;Total ram usage:        0 bytes
 10296 ;; Hardware stack levels used:    1
 10297 ;; Hardware stack levels required when called:    6
 10298 ;; This function calls:
 10299 ;;		_setPowerFault_Initialization
 10300 ;; This function is called by:
 10301 ;;		_main
 10302 ;; This function uses a non-reentrant model
 10303 ;;
 10304                           
 10305                           
 10306                           ;psect for function _PowerFault_Initialization
 10307  1DE6                     _PowerFault_Initialization:	
 10308                           
 10309                           ;PowerFault_B1.c: 12: setPowerFault_Initialization();
 10310                           
 10311                           ;incstack = 0
 10312                           ; Regs used in _PowerFault_Initialization: [status,2+status,0+pclath+cstack]
 10313  1DE6  319E  2617         	fcall	_setPowerFault_Initialization
 10314  1DE8  0008               	return
 10315  1DE9                     __end_of_PowerFault_Initialization:	
 10316                           
 10317                           	psect	text57
 10318  1E17                     __ptext57:	
 10319 ;; *************** function _setPowerFault_Initialization *****************
 10320 ;; Defined at:
 10321 ;;		line 24 in file "../src/PowerFault_B1.c"
 10322 ;; Parameters:    Size  Location     Type
 10323 ;;		None
 10324 ;; Auto vars:     Size  Location     Type
 10325 ;;		None
 10326 ;; Return value:  Size  Location     Type
 10327 ;;		None               void
 10328 ;; Registers used:
 10329 ;;		None
 10330 ;; Tracked objects:
 10331 ;;		On entry : 0/0
 10332 ;;		On exit  : 0/0
 10333 ;;		Unchanged: 0/0
 10334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10339 ;;Total ram usage:        0 bytes
 10340 ;; Hardware stack levels used:    1
 10341 ;; Hardware stack levels required when called:    5
 10342 ;; This function calls:
 10343 ;;		Nothing
 10344 ;; This function is called by:
 10345 ;;		_PowerFault_Initialization
 10346 ;; This function uses a non-reentrant model
 10347 ;;
 10348                           
 10349                           
 10350                           ;psect for function _setPowerFault_Initialization
 10351  1E17                     _setPowerFault_Initialization:	
 10352                           
 10353                           ;PowerFault_B1.c: 25: PF1.Enable = 1;
 10354                           
 10355                           ;incstack = 0
 10356                           ; Regs used in _setPowerFault_Initialization: []
 10357  1E17  0021               	movlb	1	; select bank1
 10358  1E18  143E               	bsf	_PF1^(0+128),0
 10359                           
 10360                           ;PowerFault_B1.c: 26: PF1.Safe = 1;
 10361  1E19  153E               	bsf	_PF1^(0+128),2
 10362  1E1A  0008               	return
 10363  1E1B                     __end_of_setPowerFault_Initialization:	
 10364                           
 10365                           	psect	text58
 10366  1F54                     __ptext58:	
 10367 ;; *************** function _Mcu_Initialization *****************
 10368 ;; Defined at:
 10369 ;;		line 30 in file "../src/MCU_B1.c"
 10370 ;; Parameters:    Size  Location     Type
 10371 ;;		None
 10372 ;; Auto vars:     Size  Location     Type
 10373 ;;		None
 10374 ;; Return value:  Size  Location     Type
 10375 ;;		None               void
 10376 ;; Registers used:
 10377 ;;		wreg, status,2, status,0, pclath, cstack
 10378 ;; Tracked objects:
 10379 ;;		On entry : 0/0
 10380 ;;		On exit  : 0/0
 10381 ;;		Unchanged: 0/0
 10382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10387 ;;Total ram usage:        0 bytes
 10388 ;; Hardware stack levels used:    1
 10389 ;; Hardware stack levels required when called:    6
 10390 ;; This function calls:
 10391 ;;		_ADC_Set
 10392 ;;		_Fosc_Set
 10393 ;;		_IOC_Set
 10394 ;;		_IO_Set
 10395 ;;		_TMR0_Set
 10396 ;; This function is called by:
 10397 ;;		_main
 10398 ;; This function uses a non-reentrant model
 10399 ;;
 10400                           
 10401                           
 10402                           ;psect for function _Mcu_Initialization
 10403  1F54                     _Mcu_Initialization:	
 10404                           
 10405                           ;MCU_B1.c: 32: Fosc_Set();
 10406                           
 10407                           ;incstack = 0
 10408                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
 10409  1F54  319E  2613  319F   	fcall	_Fosc_Set
 10410                           
 10411                           ;MCU_B1.c: 34: IO_Set();
 10412  1F57  3191  212C  319F   	fcall	_IO_Set
 10413                           
 10414                           ;MCU_B1.c: 36: TMR0_Set();
 10415  1F5A  319E  264C  319F   	fcall	_TMR0_Set
 10416                           
 10417                           ;MCU_B1.c: 38: ;;
 10418                           ;MCU_B1.c: 40: ADC_Set();
 10419  1F5D  319E  263E  319F   	fcall	_ADC_Set
 10420                           
 10421                           ;MCU_B1.c: 44: ;;
 10422                           ;MCU_B1.c: 46: IOC_Set();
 10423  1F60  319F  271C         	fcall	_IOC_Set
 10424  1F62  0008               	return
 10425  1F63                     __end_of_Mcu_Initialization:	
 10426                           
 10427                           	psect	text59
 10428  1E4C                     __ptext59:	
 10429 ;; *************** function _TMR0_Set *****************
 10430 ;; Defined at:
 10431 ;;		line 126 in file "../src/MCU_B1.c"
 10432 ;; Parameters:    Size  Location     Type
 10433 ;;		None
 10434 ;; Auto vars:     Size  Location     Type
 10435 ;;		None
 10436 ;; Return value:  Size  Location     Type
 10437 ;;		None               void
 10438 ;; Registers used:
 10439 ;;		wreg, status,2
 10440 ;; Tracked objects:
 10441 ;;		On entry : 0/0
 10442 ;;		On exit  : 0/0
 10443 ;;		Unchanged: 0/0
 10444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10449 ;;Total ram usage:        0 bytes
 10450 ;; Hardware stack levels used:    1
 10451 ;; Hardware stack levels required when called:    5
 10452 ;; This function calls:
 10453 ;;		Nothing
 10454 ;; This function is called by:
 10455 ;;		_Mcu_Initialization
 10456 ;; This function uses a non-reentrant model
 10457 ;;
 10458                           
 10459                           
 10460                           ;psect for function _TMR0_Set
 10461  1E4C                     _TMR0_Set:	
 10462                           
 10463                           ;MCU_B1.c: 128: OPTION_REG = 0x00;
 10464                           
 10465                           ;incstack = 0
 10466                           ; Regs used in _TMR0_Set: [wreg+status,2]
 10467  1E4C  0021               	movlb	1	; select bank1
 10468  1E4D  0195               	clrf	21	;volatile
 10469                           
 10470                           ;MCU_B1.c: 129: TMR0 = (256-190);
 10471  1E4E  3042               	movlw	66
 10472  1E4F  0020               	movlb	0	; select bank0
 10473  1E50  0095               	movwf	21	;volatile
 10474                           
 10475                           ;MCU_B1.c: 130: TMR0IE = 1;
 10476  1E51  168B               	bsf	11,5	;volatile
 10477                           
 10478                           ;MCU_B1.c: 131: GIE = 1;
 10479  1E52  178B               	bsf	11,7	;volatile
 10480  1E53  0008               	return
 10481  1E54                     __end_of_TMR0_Set:	
 10482                           
 10483                           	psect	text60
 10484  112C                     __ptext60:	
 10485 ;; *************** function _IO_Set *****************
 10486 ;; Defined at:
 10487 ;;		line 60 in file "../src/MCU_B1.c"
 10488 ;; Parameters:    Size  Location     Type
 10489 ;;		None
 10490 ;; Auto vars:     Size  Location     Type
 10491 ;;		None
 10492 ;; Return value:  Size  Location     Type
 10493 ;;		None               void
 10494 ;; Registers used:
 10495 ;;		wreg, status,2
 10496 ;; Tracked objects:
 10497 ;;		On entry : 0/0
 10498 ;;		On exit  : 0/0
 10499 ;;		Unchanged: 0/0
 10500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10505 ;;Total ram usage:        0 bytes
 10506 ;; Hardware stack levels used:    1
 10507 ;; Hardware stack levels required when called:    5
 10508 ;; This function calls:
 10509 ;;		Nothing
 10510 ;; This function is called by:
 10511 ;;		_Mcu_Initialization
 10512 ;; This function uses a non-reentrant model
 10513 ;;
 10514                           
 10515                           
 10516                           ;psect for function _IO_Set
 10517  112C                     _IO_Set:	
 10518                           
 10519                           ;MCU_B1.c: 88: TRISA = 0b01110111;;
 10520                           
 10521                           ;incstack = 0
 10522                           ; Regs used in _IO_Set: [wreg+status,2]
 10523  112C  3077               	movlw	119
 10524  112D  0021               	movlb	1	; select bank1
 10525  112E  008C               	movwf	12	;volatile
 10526                           
 10527                           ;MCU_B1.c: 89: TRISB = 0b00000111;;
 10528  112F  3007               	movlw	7
 10529  1130  008D               	movwf	13	;volatile
 10530                           
 10531                           ;MCU_B1.c: 90: TRISC = 0b00001100;;
 10532  1131  300C               	movlw	12
 10533  1132  008E               	movwf	14	;volatile
 10534                           
 10535                           ;MCU_B1.c: 91: LATA = 0b00000000;;
 10536  1133  0022               	movlb	2	; select bank2
 10537  1134  018C               	clrf	12	;volatile
 10538                           
 10539                           ;MCU_B1.c: 92: LATB = 0b00000010;;
 10540  1135  3002               	movlw	2
 10541  1136  008D               	movwf	13	;volatile
 10542                           
 10543                           ;MCU_B1.c: 93: LATC = 0b00000000;;
 10544  1137  018E               	clrf	14	;volatile
 10545                           
 10546                           ;MCU_B1.c: 94: ANSELA = 0b00100010;;
 10547  1138  3022               	movlw	34
 10548  1139  0023               	movlb	3	; select bank3
 10549  113A  008C               	movwf	12	;volatile
 10550                           
 10551                           ;MCU_B1.c: 95: ANSELB = 0b00000000;;
 10552  113B  018D               	clrf	13	;volatile
 10553                           
 10554                           ;MCU_B1.c: 96: ANSELC = 0b00000000;;
 10555  113C  018E               	clrf	14	;volatile
 10556                           
 10557                           ;MCU_B1.c: 97: PORTA = 0b01110111;;
 10558  113D  3077               	movlw	119
 10559  113E  0020               	movlb	0	; select bank0
 10560  113F  008C               	movwf	12	;volatile
 10561                           
 10562                           ;MCU_B1.c: 98: PORTB = 0b00000111;;
 10563  1140  3007               	movlw	7
 10564  1141  008D               	movwf	13	;volatile
 10565                           
 10566                           ;MCU_B1.c: 99: PORTC = 0b00001100;;
 10567  1142  300C               	movlw	12
 10568  1143  008E               	movwf	14	;volatile
 10569  1144  0008               	return
 10570  1145                     __end_of_IO_Set:	
 10571                           
 10572                           	psect	text61
 10573  1F1C                     __ptext61:	
 10574 ;; *************** function _IOC_Set *****************
 10575 ;; Defined at:
 10576 ;;		line 263 in file "../src/MCU_B1.c"
 10577 ;; Parameters:    Size  Location     Type
 10578 ;;		None
 10579 ;; Auto vars:     Size  Location     Type
 10580 ;;		None
 10581 ;; Return value:  Size  Location     Type
 10582 ;;		None               void
 10583 ;; Registers used:
 10584 ;;		wreg, status,2
 10585 ;; Tracked objects:
 10586 ;;		On entry : 0/0
 10587 ;;		On exit  : 0/0
 10588 ;;		Unchanged: 0/0
 10589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10594 ;;Total ram usage:        0 bytes
 10595 ;; Hardware stack levels used:    1
 10596 ;; Hardware stack levels required when called:    5
 10597 ;; This function calls:
 10598 ;;		Nothing
 10599 ;; This function is called by:
 10600 ;;		_Mcu_Initialization
 10601 ;; This function uses a non-reentrant model
 10602 ;;
 10603                           
 10604                           
 10605                           ;psect for function _IOC_Set
 10606  1F1C                     _IOC_Set:	
 10607                           
 10608                           ;MCU_B1.c: 264: WPUB2 = 0;
 10609                           
 10610                           ;incstack = 0
 10611                           ; Regs used in _IOC_Set: [wreg+status,2]
 10612  1F1C  0024               	movlb	4	; select bank4
 10613  1F1D  110D               	bcf	13,2	;volatile
 10614                           
 10615                           ;MCU_B1.c: 266: IOCBP = 0b00000100;
 10616  1F1E  3004               	movlw	4
 10617  1F1F  0027               	movlb	7	; select bank7
 10618  1F20  0094               	movwf	20	;volatile
 10619                           
 10620                           ;MCU_B1.c: 267: IOCBN = 0b00000100;
 10621  1F21  3004               	movlw	4
 10622  1F22  0095               	movwf	21	;volatile
 10623                           
 10624                           ;MCU_B1.c: 282: IOCBF = 0b00000000;
 10625  1F23  0196               	clrf	22	;volatile
 10626                           
 10627                           ;MCU_B1.c: 284: IOCIE = 1;
 10628  1F24  158B               	bsf	11,3	;volatile
 10629                           
 10630                           ;MCU_B1.c: 285: IOCIF = 0;
 10631  1F25  100B               	bcf	11,0	;volatile
 10632                           
 10633                           ;MCU_B1.c: 286: PEIE = 1;
 10634  1F26  170B               	bsf	11,6	;volatile
 10635                           
 10636                           ;MCU_B1.c: 287: GIE = 1;
 10637  1F27  178B               	bsf	11,7	;volatile
 10638  1F28  0008               	return
 10639  1F29                     __end_of_IOC_Set:	
 10640                           
 10641                           	psect	text62
 10642  1E13                     __ptext62:	
 10643 ;; *************** function _Fosc_Set *****************
 10644 ;; Defined at:
 10645 ;;		line 56 in file "../src/MCU_B1.c"
 10646 ;; Parameters:    Size  Location     Type
 10647 ;;		None
 10648 ;; Auto vars:     Size  Location     Type
 10649 ;;		None
 10650 ;; Return value:  Size  Location     Type
 10651 ;;		None               void
 10652 ;; Registers used:
 10653 ;;		wreg
 10654 ;; Tracked objects:
 10655 ;;		On entry : 0/0
 10656 ;;		On exit  : 0/0
 10657 ;;		Unchanged: 0/0
 10658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10663 ;;Total ram usage:        0 bytes
 10664 ;; Hardware stack levels used:    1
 10665 ;; Hardware stack levels required when called:    5
 10666 ;; This function calls:
 10667 ;;		Nothing
 10668 ;; This function is called by:
 10669 ;;		_Mcu_Initialization
 10670 ;; This function uses a non-reentrant model
 10671 ;;
 10672                           
 10673                           
 10674                           ;psect for function _Fosc_Set
 10675  1E13                     _Fosc_Set:	
 10676                           
 10677                           ;MCU_B1.c: 57: OSCCON = 0x78;
 10678                           
 10679                           ;incstack = 0
 10680                           ; Regs used in _Fosc_Set: [wreg]
 10681  1E13  3078               	movlw	120
 10682  1E14  0021               	movlb	1	; select bank1
 10683  1E15  0099               	movwf	25	;volatile
 10684  1E16  0008               	return
 10685  1E17                     __end_of_Fosc_Set:	
 10686                           
 10687                           	psect	text63
 10688  1E3E                     __ptext63:	
 10689 ;; *************** function _ADC_Set *****************
 10690 ;; Defined at:
 10691 ;;		line 309 in file "../src/MCU_B1.c"
 10692 ;; Parameters:    Size  Location     Type
 10693 ;;		None
 10694 ;; Auto vars:     Size  Location     Type
 10695 ;;		None
 10696 ;; Return value:  Size  Location     Type
 10697 ;;		None               void
 10698 ;; Registers used:
 10699 ;;		wreg
 10700 ;; Tracked objects:
 10701 ;;		On entry : 0/0
 10702 ;;		On exit  : 0/0
 10703 ;;		Unchanged: 0/0
 10704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10709 ;;Total ram usage:        0 bytes
 10710 ;; Hardware stack levels used:    1
 10711 ;; Hardware stack levels required when called:    5
 10712 ;; This function calls:
 10713 ;;		Nothing
 10714 ;; This function is called by:
 10715 ;;		_Mcu_Initialization
 10716 ;; This function uses a non-reentrant model
 10717 ;;
 10718                           
 10719                           
 10720                           ;psect for function _ADC_Set
 10721  1E3E                     _ADC_Set:	
 10722                           
 10723                           ;MCU_B1.c: 310: ADCON1 = 0xf2;
 10724                           
 10725                           ;incstack = 0
 10726                           ; Regs used in _ADC_Set: [wreg]
 10727  1E3E  30F2               	movlw	242
 10728  1E3F  0021               	movlb	1	; select bank1
 10729  1E40  009E               	movwf	30	;volatile
 10730                           
 10731                           ;MCU_B1.c: 311: FVRCON = 0xc0;
 10732  1E41  30C0               	movlw	192
 10733  1E42  0022               	movlb	2	; select bank2
 10734  1E43  0097               	movwf	23	;volatile
 10735  1E44  0008               	return
 10736  1E45                     __end_of_ADC_Set:	
 10737                           
 10738                           	psect	text64
 10739  1EF6                     __ptext64:	
 10740 ;; *************** function _LED_Main *****************
 10741 ;; Defined at:
 10742 ;;		line 47 in file "../src/LED_B1.c"
 10743 ;; Parameters:    Size  Location     Type
 10744 ;;		None
 10745 ;; Auto vars:     Size  Location     Type
 10746 ;;		None
 10747 ;; Return value:  Size  Location     Type
 10748 ;;		None               void
 10749 ;; Registers used:
 10750 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10751 ;; Tracked objects:
 10752 ;;		On entry : 0/0
 10753 ;;		On exit  : 0/0
 10754 ;;		Unchanged: 0/0
 10755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10760 ;;Total ram usage:        0 bytes
 10761 ;; Hardware stack levels used:    1
 10762 ;; Hardware stack levels required when called:    7
 10763 ;; This function calls:
 10764 ;;		_setLED_Main
 10765 ;; This function is called by:
 10766 ;;		_main
 10767 ;; This function uses a non-reentrant model
 10768 ;;
 10769                           
 10770                           
 10771                           ;psect for function _LED_Main
 10772  1EF6                     _LED_Main:	
 10773                           
 10774                           ;LED_B1.c: 49: setLED_Main(1);
 10775                           
 10776                           ;incstack = 0
 10777                           ; Regs used in _LED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10778  1EF6  3001               	movlw	1
 10779  1EF7  3196  26D7  319E   	fcall	_setLED_Main
 10780                           
 10781                           ;LED_B1.c: 52: setLED_Main(2);
 10782  1EFA  3002               	movlw	2
 10783  1EFB  3196  26D7  319E   	fcall	_setLED_Main
 10784                           
 10785                           ;LED_B1.c: 58: setLED_Main(99);
 10786  1EFE  3063               	movlw	99
 10787  1EFF  3196  26D7         	fcall	_setLED_Main
 10788  1F01  0008               	return
 10789  1F02                     __end_of_LED_Main:	
 10790                           
 10791                           	psect	text65
 10792  16D7                     __ptext65:	
 10793 ;; *************** function _setLED_Main *****************
 10794 ;; Defined at:
 10795 ;;		line 192 in file "../src/LED_B1.c"
 10796 ;; Parameters:    Size  Location     Type
 10797 ;;  led             1    wreg     unsigned char 
 10798 ;; Auto vars:     Size  Location     Type
 10799 ;;  led             1    3[BANK0 ] unsigned char 
 10800 ;; Return value:  Size  Location     Type
 10801 ;;		None               void
 10802 ;; Registers used:
 10803 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10804 ;; Tracked objects:
 10805 ;;		On entry : 0/0
 10806 ;;		On exit  : 0/0
 10807 ;;		Unchanged: 0/0
 10808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10810 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10811 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10812 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10813 ;;Total ram usage:        3 bytes
 10814 ;; Hardware stack levels used:    1
 10815 ;; Hardware stack levels required when called:    6
 10816 ;; This function calls:
 10817 ;;		_LedPointSelect
 10818 ;; This function is called by:
 10819 ;;		_LED_Main
 10820 ;; This function uses a non-reentrant model
 10821 ;;
 10822                           
 10823                           
 10824                           ;psect for function _setLED_Main
 10825  16D7                     _setLED_Main:	
 10826                           
 10827                           ;incstack = 0
 10828                           ; Regs used in _setLED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10829                           ;setLED_Main@led stored from wreg
 10830  16D7  0020               	movlb	0	; select bank0
 10831  16D8  00A3               	movwf	setLED_Main@led
 10832                           
 10833                           ;LED_B1.c: 193: LedPointSelect(led);
 10834  16D9  0823               	movf	setLED_Main@led,w
 10835  16DA  3192  223F  3196   	fcall	_LedPointSelect
 10836                           
 10837                           ;LED_B1.c: 194: if (LED->GO == 1) {
 10838  16DD  0021               	movlb	1	; select bank1
 10839  16DE  084B               	movf	_LED^(0+128),w
 10840  16DF  0086               	movwf	6
 10841  16E0  084C               	movf	(_LED+1)^(0+128),w
 10842  16E1  0087               	movwf	7
 10843  16E2  1C81               	btfss	1,1
 10844  16E3  0008               	return
 10845                           
 10846                           ;LED_B1.c: 195: LED->Time++;
 10847  16E4  084B               	movf	_LED^(0+128),w
 10848  16E5  0086               	movwf	6
 10849  16E6  084C               	movf	(_LED+1)^(0+128),w
 10850  16E7  0087               	movwf	7
 10851  16E8  3141               	addfsr 1,1
 10852  16E9  3001               	movlw	1
 10853  16EA  0781               	addwf	1,f
 10854  16EB  3141               	addfsr 1,1
 10855  16EC  1803               	skipnc
 10856  16ED  0A81               	incf	1,f
 10857                           
 10858                           ;LED_B1.c: 196: if (LED->Time >= 500 / 10) {
 10859  16EE  084B               	movf	_LED^(0+128),w
 10860  16EF  0086               	movwf	6
 10861  16F0  084C               	movf	(_LED+1)^(0+128),w
 10862  16F1  0087               	movwf	7
 10863  16F2  3141               	addfsr 1,1
 10864  16F3  3F40               	moviw [0]fsr1
 10865  16F4  0020               	movlb	0	; select bank0
 10866  16F5  00A1               	movwf	??_setLED_Main
 10867  16F6  3F41               	moviw [1]fsr1
 10868  16F7  00A2               	movwf	??_setLED_Main+1
 10869  16F8  3000               	movlw	0
 10870  16F9  0222               	subwf	??_setLED_Main+1,w
 10871  16FA  3032               	movlw	50
 10872  16FB  1903               	skipnz
 10873  16FC  0221               	subwf	??_setLED_Main,w
 10874  16FD  1C03               	skipc
 10875  16FE  0008               	return
 10876                           
 10877                           ;LED_B1.c: 197: LED->Time = 0;
 10878  16FF  0021               	movlb	1	; select bank1
 10879  1700  084B               	movf	_LED^(0+128),w
 10880  1701  0086               	movwf	6
 10881  1702  084C               	movf	(_LED+1)^(0+128),w
 10882  1703  0087               	movwf	7
 10883  1704  3141               	addfsr 1,1
 10884  1705  3000               	movlw	0
 10885  1706  3FC0               	movwi [0]fsr1
 10886  1707  3FC1               	movwi [1]fsr1
 10887                           
 10888                           ;LED_B1.c: 199: if (led == 1) {
 10889  1708  0020               	movlb	0	; select bank0
 10890  1709  0823               	movf	setLED_Main@led,w
 10891  170A  3A01               	xorlw	1
 10892  170B  1D03               	skipz
 10893  170C  2F10               	goto	l7681
 10894                           
 10895                           ;LED_B1.c: 200: RA3 = RA3 == 1 ? 0 : 1;
 10896  170D  3008               	movlw	8
 10897  170E  068C               	xorwf	12,f
 10898                           
 10899                           ;LED_B1.c: 201: }
 10900  170F  0008               	return
 10901  1710                     l7681:	
 10902                           
 10903                           ;LED_B1.c: 204: else if (led == 2) {
 10904  1710  0823               	movf	setLED_Main@led,w
 10905  1711  3A02               	xorlw	2
 10906  1712  1D03               	skipz
 10907  1713  2F17               	goto	l7685
 10908                           
 10909                           ;LED_B1.c: 205: RC7 = RC7 == 1 ? 0 : 1;
 10910  1714  3080               	movlw	128
 10911  1715  068E               	xorwf	14,f
 10912                           
 10913                           ;LED_B1.c: 206: }
 10914  1716  0008               	return
 10915  1717                     l7685:	
 10916                           
 10917                           ;LED_B1.c: 214: else if (led == 99) {
 10918  1717  0823               	movf	setLED_Main@led,w
 10919  1718  3A63               	xorlw	99
 10920  1719  1D03               	skipz
 10921  171A  0008               	return
 10922                           
 10923                           ;LED_B1.c: 215: RB5 = RB5 == 1 ? 0 : 1;
 10924  171B  3020               	movlw	32
 10925  171C  068D               	xorwf	13,f
 10926  171D  0008               	return
 10927  171E                     __end_of_setLED_Main:	
 10928                           
 10929                           	psect	text66
 10930  1EEA                     __ptext66:	
 10931 ;; *************** function _LED_Initialization *****************
 10932 ;; Defined at:
 10933 ;;		line 31 in file "../src/LED_B1.c"
 10934 ;; Parameters:    Size  Location     Type
 10935 ;;		None
 10936 ;; Auto vars:     Size  Location     Type
 10937 ;;		None
 10938 ;; Return value:  Size  Location     Type
 10939 ;;		None               void
 10940 ;; Registers used:
 10941 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10942 ;; Tracked objects:
 10943 ;;		On entry : 0/0
 10944 ;;		On exit  : 0/0
 10945 ;;		Unchanged: 0/0
 10946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10951 ;;Total ram usage:        0 bytes
 10952 ;; Hardware stack levels used:    1
 10953 ;; Hardware stack levels required when called:    8
 10954 ;; This function calls:
 10955 ;;		_setLED_Initialization
 10956 ;; This function is called by:
 10957 ;;		_main
 10958 ;; This function uses a non-reentrant model
 10959 ;;
 10960                           
 10961                           
 10962                           ;psect for function _LED_Initialization
 10963  1EEA                     _LED_Initialization:	
 10964                           
 10965                           ;LED_B1.c: 33: setLED_Initialization(1);
 10966                           
 10967                           ;incstack = 0
 10968                           ; Regs used in _LED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10969  1EEA  3001               	movlw	1
 10970  1EEB  3190  2070  319E   	fcall	_setLED_Initialization
 10971                           
 10972                           ;LED_B1.c: 36: setLED_Initialization(2);
 10973  1EEE  3002               	movlw	2
 10974  1EEF  3190  2070  319E   	fcall	_setLED_Initialization
 10975                           
 10976                           ;LED_B1.c: 42: setLED_Initialization(99);
 10977  1EF2  3063               	movlw	99
 10978  1EF3  3190  2070         	fcall	_setLED_Initialization
 10979  1EF5  0008               	return
 10980  1EF6                     __end_of_LED_Initialization:	
 10981                           
 10982                           	psect	text67
 10983  1070                     __ptext67:	
 10984 ;; *************** function _setLED_Initialization *****************
 10985 ;; Defined at:
 10986 ;;		line 63 in file "../src/LED_B1.c"
 10987 ;; Parameters:    Size  Location     Type
 10988 ;;  led             1    wreg     unsigned char 
 10989 ;; Auto vars:     Size  Location     Type
 10990 ;;  led             1    3[BANK0 ] unsigned char 
 10991 ;; Return value:  Size  Location     Type
 10992 ;;		None               void
 10993 ;; Registers used:
 10994 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10995 ;; Tracked objects:
 10996 ;;		On entry : 0/0
 10997 ;;		On exit  : 0/0
 10998 ;;		Unchanged: 0/0
 10999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11001 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11003 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11004 ;;Total ram usage:        1 bytes
 11005 ;; Hardware stack levels used:    1
 11006 ;; Hardware stack levels required when called:    7
 11007 ;; This function calls:
 11008 ;;		_LedPointSelect
 11009 ;;		_setLED
 11010 ;; This function is called by:
 11011 ;;		_LED_Initialization
 11012 ;; This function uses a non-reentrant model
 11013 ;;
 11014                           
 11015                           
 11016                           ;psect for function _setLED_Initialization
 11017  1070                     _setLED_Initialization:	
 11018                           
 11019                           ;incstack = 0
 11020                           ; Regs used in _setLED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 11021                           ;setLED_Initialization@led stored from wreg
 11022  1070  0020               	movlb	0	; select bank0
 11023  1071  00A3               	movwf	setLED_Initialization@led
 11024                           
 11025                           ;LED_B1.c: 64: LedPointSelect(led);
 11026  1072  0823               	movf	setLED_Initialization@led,w
 11027  1073  3192  223F  3190   	fcall	_LedPointSelect
 11028                           
 11029                           ;LED_B1.c: 65: LED->Enable = 1;
 11030  1076  0021               	movlb	1	; select bank1
 11031  1077  084B               	movf	_LED^(0+128),w
 11032  1078  0086               	movwf	6
 11033  1079  084C               	movf	(_LED+1)^(0+128),w
 11034  107A  0087               	movwf	7
 11035  107B  1401               	bsf	1,0
 11036                           
 11037                           ;LED_B1.c: 66: setLED(led, 0);
 11038  107C  0020               	movlb	0	; select bank0
 11039  107D  01A1               	clrf	setLED@command
 11040  107E  0823               	movf	setLED_Initialization@led,w
 11041  107F  318B  2305         	fcall	_setLED
 11042  1081  0008               	return
 11043  1082                     __end_of_setLED_Initialization:	
 11044                           
 11045                           	psect	text68
 11046  119D                     __ptext68:	
 11047 ;; *************** function _Flash_Memory_Main *****************
 11048 ;; Defined at:
 11049 ;;		line 790 in file "../src/MCU_B1.c"
 11050 ;; Parameters:    Size  Location     Type
 11051 ;;		None
 11052 ;; Auto vars:     Size  Location     Type
 11053 ;;		None
 11054 ;; Return value:  Size  Location     Type
 11055 ;;		None               void
 11056 ;; Registers used:
 11057 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11058 ;; Tracked objects:
 11059 ;;		On entry : 0/0
 11060 ;;		On exit  : 0/0
 11061 ;;		Unchanged: 0/0
 11062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11067 ;;Total ram usage:        0 bytes
 11068 ;; Hardware stack levels used:    1
 11069 ;; Hardware stack levels required when called:    8
 11070 ;; This function calls:
 11071 ;;		_Flash_Memory_Modify
 11072 ;; This function is called by:
 11073 ;;		_main
 11074 ;; This function uses a non-reentrant model
 11075 ;;
 11076                           
 11077                           
 11078                           ;psect for function _Flash_Memory_Main
 11079  119D                     _Flash_Memory_Main:	
 11080                           
 11081                           ;MCU_B1.c: 791: if (Memory.GO == 1) {
 11082                           
 11083                           ;incstack = 0
 11084                           ; Regs used in _Flash_Memory_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11085  119D  0022               	movlb	2	; select bank2
 11086  119E  1CE1               	btfss	(_Memory^(0+256)+36),1
 11087  119F  0008               	return
 11088                           
 11089                           ;MCU_B1.c: 792: if (Memory.Modify == 1) {
 11090  11A0  1C61               	btfss	(_Memory^(0+256)+36),0
 11091  11A1  29BA               	goto	l1230
 11092                           
 11093                           ;MCU_B1.c: 793: Memory.Time++;
 11094  11A2  3001               	movlw	1
 11095  11A3  07DF               	addwf	(_Memory^(0+256)+34),f
 11096  11A4  3000               	movlw	0
 11097  11A5  3DE0               	addwfc	((_Memory+1)^(0+256)+34),f
 11098                           
 11099                           ;MCU_B1.c: 794: if (Memory.Time == 25)
 11100  11A6  3022               	movlw	34
 11101  11A7  3E3D               	addlw	_Memory& (0+255)
 11102  11A8  0086               	movwf	6
 11103  11A9  3001               	movlw	1	; select bank2/3
 11104  11AA  0087               	movwf	7
 11105  11AB  3F40               	moviw [0]fsr1
 11106  11AC  3A19               	xorlw	25
 11107  11AD  1D03               	skipz
 11108  11AE  29B1               	goto	u6735
 11109  11AF  3F41               	moviw [1]fsr1
 11110  11B0  3A00               	xorlw	0
 11111  11B1                     u6735:	
 11112  11B1  1D03               	skipz
 11113  11B2  0008               	return
 11114                           
 11115                           ;MCU_B1.c: 795: {
 11116                           ;MCU_B1.c: 796: Memory.Time = 0;
 11117  11B3  01DF               	clrf	(_Memory^(0+256)+34)
 11118  11B4  01E0               	clrf	((_Memory+1)^(0+256)+34)
 11119                           
 11120                           ;MCU_B1.c: 797: Memory.Modify = 0;
 11121  11B5  1061               	bcf	(_Memory^(0+256)+36),0
 11122                           
 11123                           ;MCU_B1.c: 798: Memory.GO = 0;
 11124  11B6  10E1               	bcf	(_Memory^(0+256)+36),1
 11125                           
 11126                           ;MCU_B1.c: 799: Flash_Memory_Modify();
 11127  11B7  3195  25C1         	fcall	_Flash_Memory_Modify
 11128                           
 11129                           ;MCU_B1.c: 800: }
 11130                           ;MCU_B1.c: 801: } else {
 11131  11B9  0008               	return
 11132  11BA                     l1230:	
 11133                           
 11134                           ;MCU_B1.c: 802: Memory.GO = 0;
 11135  11BA  10E1               	bcf	(_Memory^(0+256)+36),1
 11136  11BB  0008               	return
 11137  11BC                     __end_of_Flash_Memory_Main:	
 11138                           
 11139                           	psect	text69
 11140  15C1                     __ptext69:	
 11141 ;; *************** function _Flash_Memory_Modify *****************
 11142 ;; Defined at:
 11143 ;;		line 859 in file "../src/MCU_B1.c"
 11144 ;; Parameters:    Size  Location     Type
 11145 ;;		None
 11146 ;; Auto vars:     Size  Location     Type
 11147 ;;  i               1    5[BANK0 ] unsigned char 
 11148 ;; Return value:  Size  Location     Type
 11149 ;;		None               void
 11150 ;; Registers used:
 11151 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11152 ;; Tracked objects:
 11153 ;;		On entry : 0/0
 11154 ;;		On exit  : 0/0
 11155 ;;		Unchanged: 0/0
 11156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11158 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11159 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11160 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11161 ;;Total ram usage:        2 bytes
 11162 ;; Hardware stack levels used:    1
 11163 ;; Hardware stack levels required when called:    7
 11164 ;; This function calls:
 11165 ;;		_Flash_Memory_Erasing
 11166 ;;		_Flash_Memory_Read
 11167 ;;		_Flash_Memory_Write
 11168 ;; This function is called by:
 11169 ;;		_Flash_Memory_Main
 11170 ;; This function uses a non-reentrant model
 11171 ;;
 11172                           
 11173                           
 11174                           ;psect for function _Flash_Memory_Modify
 11175  15C1                     _Flash_Memory_Modify:	
 11176                           
 11177                           ;MCU_B1.c: 860: char i = 0;
 11178                           
 11179                           ;incstack = 0
 11180                           ; Regs used in _Flash_Memory_Modify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11181  15C1  0020               	movlb	0	; select bank0
 11182  15C2  01A5               	clrf	Flash_Memory_Modify@i
 11183                           
 11184                           ;MCU_B1.c: 861: for (i = 0; i < 32; i++) {
 11185  15C3  01A5               	clrf	Flash_Memory_Modify@i
 11186  15C4  3020               	movlw	32
 11187  15C5  0225               	subwf	Flash_Memory_Modify@i,w
 11188  15C6  1803               	btfsc	3,0
 11189  15C7  2DDD               	goto	l6771
 11190  15C8                     l6765:	
 11191                           
 11192                           ;MCU_B1.c: 862: Memory.Data[i] = Flash_Memory_Read(i);
 11193  15C8  0825               	movf	Flash_Memory_Modify@i,w
 11194  15C9  3191  2145  3195   	fcall	_Flash_Memory_Read
 11195  15CC  0020               	movlb	0	; select bank0
 11196  15CD  00A4               	movwf	??_Flash_Memory_Modify
 11197  15CE  0825               	movf	Flash_Memory_Modify@i,w
 11198  15CF  3E3D               	addlw	_Memory& (0+255)
 11199  15D0  0086               	movwf	6
 11200  15D1  3001               	movlw	1	; select bank2/3
 11201  15D2  0087               	movwf	7
 11202  15D3  0824               	movf	??_Flash_Memory_Modify,w
 11203  15D4  0081               	movwf	1
 11204  15D5  3001               	movlw	1
 11205  15D6  00A4               	movwf	??_Flash_Memory_Modify
 11206  15D7  0824               	movf	??_Flash_Memory_Modify,w
 11207  15D8  07A5               	addwf	Flash_Memory_Modify@i,f
 11208  15D9  3020               	movlw	32
 11209  15DA  0225               	subwf	Flash_Memory_Modify@i,w
 11210  15DB  1C03               	skipc
 11211  15DC  2DC8               	goto	l6765
 11212  15DD                     l6771:	
 11213                           
 11214                           ;MCU_B1.c: 863: }
 11215                           ;MCU_B1.c: 864: Memory.Data[0]=product->Data[12];
 11216  15DD  086F               	movf	_product,w
 11217  15DE  0086               	movwf	6
 11218  15DF  3001               	movlw	1	; select bank2/3
 11219  15E0  0087               	movwf	7
 11220  15E1  3001               	movlw	1	; select bank2/3
 11221  15E2  3F4C               	moviw [12]fsr1
 11222  15E3  0022               	movlb	2	; select bank2
 11223  15E4  00BD               	movwf	_Memory^(0+256)
 11224                           
 11225                           ;MCU_B1.c: 865: Memory.Data[1]=product->Data[13];
 11226  15E5  0020               	movlb	0	; select bank0
 11227  15E6  086F               	movf	_product,w
 11228  15E7  0086               	movwf	6
 11229  15E8  3001               	movlw	1	; select bank2/3
 11230  15E9  0087               	movwf	7
 11231  15EA  3001               	movlw	1	; select bank2/3
 11232  15EB  3F4D               	moviw [13]fsr1
 11233  15EC  0022               	movlb	2	; select bank2
 11234  15ED  00BE               	movwf	(_Memory^(0+256)+1)
 11235                           
 11236                           ;MCU_B1.c: 866: Memory.Data[2]=product->Data[14];
 11237  15EE  0020               	movlb	0	; select bank0
 11238  15EF  086F               	movf	_product,w
 11239  15F0  0086               	movwf	6
 11240  15F1  3001               	movlw	1	; select bank2/3
 11241  15F2  0087               	movwf	7
 11242  15F3  3001               	movlw	1	; select bank2/3
 11243  15F4  3F4E               	moviw [14]fsr1
 11244  15F5  0022               	movlb	2	; select bank2
 11245  15F6  00BF               	movwf	(_Memory^(0+256)+2)
 11246                           
 11247                           ;MCU_B1.c: 872: if (Memory.LoopSave == 1) {
 11248  15F7  1D61               	btfss	(_Memory^(0+256)+36),2
 11249  15F8  2DFD               	goto	l1252
 11250                           
 11251                           ;MCU_B1.c: 873: Memory.LoopSave = 0;
 11252  15F9  1161               	bcf	(_Memory^(0+256)+36),2
 11253                           
 11254                           ;MCU_B1.c: 874: myMain.FirstOpen = 0;
 11255  15FA  0021               	movlb	1	; select bank1
 11256  15FB  12A0               	bcf	_myMain^(0+128),5
 11257                           
 11258                           ;MCU_B1.c: 875: myMain.First = 0;
 11259  15FC  13A0               	bcf	_myMain^(0+128),7
 11260  15FD                     l1252:	
 11261                           
 11262                           ;MCU_B1.c: 877: }
 11263                           ;MCU_B1.c: 878: GIE = 0;
 11264  15FD  138B               	bcf	11,7	;volatile
 11265                           
 11266                           ;MCU_B1.c: 879: Flash_Memory_Erasing();
 11267  15FE  319E  26DE  3195   	fcall	_Flash_Memory_Erasing
 11268                           
 11269                           ;MCU_B1.c: 880: Flash_Memory_Write();
 11270  1601  3193  23C2         	fcall	_Flash_Memory_Write
 11271                           
 11272                           ;MCU_B1.c: 881: GIE = 1;
 11273  1603  178B               	bsf	11,7	;volatile
 11274  1604  0008               	return
 11275  1605                     __end_of_Flash_Memory_Modify:	
 11276                           
 11277                           	psect	text70
 11278  1EDE                     __ptext70:	
 11279 ;; *************** function _Flash_Memory_Erasing *****************
 11280 ;; Defined at:
 11281 ;;		line 848 in file "../src/MCU_B1.c"
 11282 ;; Parameters:    Size  Location     Type
 11283 ;;		None
 11284 ;; Auto vars:     Size  Location     Type
 11285 ;;		None
 11286 ;; Return value:  Size  Location     Type
 11287 ;;		None               void
 11288 ;; Registers used:
 11289 ;;		wreg, status,2, status,0, pclath, cstack
 11290 ;; Tracked objects:
 11291 ;;		On entry : 0/0
 11292 ;;		On exit  : 0/0
 11293 ;;		Unchanged: 0/0
 11294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11299 ;;Total ram usage:        0 bytes
 11300 ;; Hardware stack levels used:    1
 11301 ;; Hardware stack levels required when called:    6
 11302 ;; This function calls:
 11303 ;;		_Flash_Memory_Unlock
 11304 ;; This function is called by:
 11305 ;;		_Flash_Memory_Modify
 11306 ;; This function uses a non-reentrant model
 11307 ;;
 11308                           
 11309                           
 11310                           ;psect for function _Flash_Memory_Erasing
 11311  1EDE                     _Flash_Memory_Erasing:	
 11312                           
 11313                           ;MCU_B1.c: 849: CFGS = 0;
 11314                           
 11315                           ;incstack = 0
 11316                           ; Regs used in _Flash_Memory_Erasing: [wreg+status,2+status,0+pclath+cstack]
 11317  1EDE  0023               	movlb	3	; select bank3
 11318  1EDF  1315               	bcf	21,6	;volatile
 11319                           
 11320                           ;MCU_B1.c: 850: PMADRH = 0x30;
 11321  1EE0  3030               	movlw	48
 11322  1EE1  0092               	movwf	18	;volatile
 11323                           
 11324                           ;MCU_B1.c: 851: PMADRL = 0x00;
 11325  1EE2  0191               	clrf	17	;volatile
 11326                           
 11327                           ;MCU_B1.c: 852: FREE = 1;
 11328  1EE3  1615               	bsf	21,4	;volatile
 11329                           
 11330                           ;MCU_B1.c: 853: WREN = 1;
 11331  1EE4  1515               	bsf	21,2	;volatile
 11332                           
 11333                           ;MCU_B1.c: 854: Flash_Memory_Unlock();
 11334  1EE5  319E  2674         	fcall	_Flash_Memory_Unlock
 11335                           
 11336                           ;MCU_B1.c: 855: WREN = 0;
 11337  1EE7  0023               	movlb	3	; select bank3
 11338  1EE8  1115               	bcf	21,2	;volatile
 11339  1EE9  0008               	return
 11340  1EEA                     __end_of_Flash_Memory_Erasing:	
 11341                           
 11342                           	psect	text71
 11343  042A                     __ptext71:	
 11344 ;; *************** function _Flash_Memory_Initialization *****************
 11345 ;; Defined at:
 11346 ;;		line 749 in file "../src/MCU_B1.c"
 11347 ;; Parameters:    Size  Location     Type
 11348 ;;		None
 11349 ;; Auto vars:     Size  Location     Type
 11350 ;;  i               1   62[BANK0 ] unsigned char 
 11351 ;; Return value:  Size  Location     Type
 11352 ;;		None               void
 11353 ;; Registers used:
 11354 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11355 ;; Tracked objects:
 11356 ;;		On entry : 0/0
 11357 ;;		On exit  : 0/0
 11358 ;;		Unchanged: 0/0
 11359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11361 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11362 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11363 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11364 ;;Total ram usage:        2 bytes
 11365 ;; Hardware stack levels used:    1
 11366 ;; Hardware stack levels required when called:    8
 11367 ;; This function calls:
 11368 ;;		_Flash_Memory_Read
 11369 ;;		_Flash_Memory_Write
 11370 ;;		_setPercentValue
 11371 ;; This function is called by:
 11372 ;;		_main
 11373 ;; This function uses a non-reentrant model
 11374 ;;
 11375                           
 11376                           
 11377                           ;psect for function _Flash_Memory_Initialization
 11378  042A                     _Flash_Memory_Initialization:	
 11379                           
 11380                           ;MCU_B1.c: 750: char i = 0;
 11381                           
 11382                           ;incstack = 0
 11383                           ; Regs used in _Flash_Memory_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 11384  042A  0020               	movlb	0	; select bank0
 11385  042B  01DE               	clrf	Flash_Memory_Initialization@i
 11386                           
 11387                           ;MCU_B1.c: 751: if (Flash_Memory_Read(31) == 0xaa) {
 11388  042C  301F               	movlw	31
 11389  042D  3191  2145  3184   	fcall	_Flash_Memory_Read
 11390  0430  3AAA               	xorlw	170
 11391  0431  1D03               	skipz
 11392  0432  2C9C               	goto	l7175
 11393                           
 11394                           ;MCU_B1.c: 752: product->Data[12] = Flash_Memory_Read(0);
 11395  0433  3000               	movlw	0
 11396  0434  3191  2145  3184   	fcall	_Flash_Memory_Read
 11397  0437  0020               	movlb	0	; select bank0
 11398  0438  00DD               	movwf	??_Flash_Memory_Initialization
 11399  0439  086F               	movf	_product,w
 11400  043A  3E0C               	addlw	12
 11401  043B  0086               	movwf	6
 11402  043C  3001               	movlw	1	; select bank2/3
 11403  043D  0087               	movwf	7
 11404  043E  085D               	movf	??_Flash_Memory_Initialization,w
 11405  043F  0081               	movwf	1
 11406                           
 11407                           ;MCU_B1.c: 753: product->Data[13] = Flash_Memory_Read(1);
 11408  0440  3001               	movlw	1
 11409  0441  3191  2145  3184   	fcall	_Flash_Memory_Read
 11410  0444  0020               	movlb	0	; select bank0
 11411  0445  00DD               	movwf	??_Flash_Memory_Initialization
 11412  0446  086F               	movf	_product,w
 11413  0447  3E0D               	addlw	13
 11414  0448  0086               	movwf	6
 11415  0449  3001               	movlw	1	; select bank2/3
 11416  044A  0087               	movwf	7
 11417  044B  085D               	movf	??_Flash_Memory_Initialization,w
 11418  044C  0081               	movwf	1
 11419                           
 11420                           ;MCU_B1.c: 754: product->Data[14] = Flash_Memory_Read(2);
 11421  044D  3002               	movlw	2
 11422  044E  3191  2145  3184   	fcall	_Flash_Memory_Read
 11423  0451  0020               	movlb	0	; select bank0
 11424  0452  00DD               	movwf	??_Flash_Memory_Initialization
 11425  0453  086F               	movf	_product,w
 11426  0454  3E0E               	addlw	14
 11427  0455  0086               	movwf	6
 11428  0456  3001               	movlw	1	; select bank2/3
 11429  0457  0087               	movwf	7
 11430  0458  085D               	movf	??_Flash_Memory_Initialization,w
 11431  0459  0081               	movwf	1
 11432                           
 11433                           ;MCU_B1.c: 760: i = setPercentValue(((char)((100-60)*0.8)));
 11434  045A  3020               	movlw	32
 11435  045B  3196  2605  3184   	fcall	_setPercentValue
 11436  045E  0020               	movlb	0	; select bank0
 11437  045F  00DD               	movwf	??_Flash_Memory_Initialization
 11438  0460  085D               	movf	??_Flash_Memory_Initialization,w
 11439  0461  00DE               	movwf	Flash_Memory_Initialization@i
 11440                           
 11441                           ;MCU_B1.c: 761: product->Data[21] = i;
 11442  0462  085E               	movf	Flash_Memory_Initialization@i,w
 11443  0463  00DD               	movwf	??_Flash_Memory_Initialization
 11444  0464  086F               	movf	_product,w
 11445  0465  3E15               	addlw	21
 11446  0466  0086               	movwf	6
 11447  0467  3001               	movlw	1	; select bank2/3
 11448  0468  0087               	movwf	7
 11449  0469  085D               	movf	??_Flash_Memory_Initialization,w
 11450  046A  0081               	movwf	1
 11451                           
 11452                           ;MCU_B1.c: 762: product->Data[22] = i;
 11453  046B  085E               	movf	Flash_Memory_Initialization@i,w
 11454  046C  00DD               	movwf	??_Flash_Memory_Initialization
 11455  046D  086F               	movf	_product,w
 11456  046E  3E16               	addlw	22
 11457  046F  0086               	movwf	6
 11458  0470  3001               	movlw	1	; select bank2/3
 11459  0471  0087               	movwf	7
 11460  0472  085D               	movf	??_Flash_Memory_Initialization,w
 11461  0473  0081               	movwf	1
 11462                           
 11463                           ;MCU_B1.c: 763: product->Data[23] = i;
 11464  0474  085E               	movf	Flash_Memory_Initialization@i,w
 11465  0475  00DD               	movwf	??_Flash_Memory_Initialization
 11466  0476  086F               	movf	_product,w
 11467  0477  3E17               	addlw	23
 11468  0478  0086               	movwf	6
 11469  0479  3001               	movlw	1	; select bank2/3
 11470  047A  0087               	movwf	7
 11471  047B  085D               	movf	??_Flash_Memory_Initialization,w
 11472  047C  0081               	movwf	1
 11473                           
 11474                           ;MCU_B1.c: 765: if (product->Data[12] == 0xff && product->Data[13] == 0xff && product->D
      +                          ata[14] == 0xff) {
 11475  047D  086F               	movf	_product,w
 11476  047E  3E0C               	addlw	12
 11477  047F  0086               	movwf	6
 11478  0480  3001               	movlw	1	; select bank2/3
 11479  0481  0087               	movwf	7
 11480  0482  0801               	movf	1,w
 11481  0483  3AFF               	xorlw	255
 11482  0484  1D03               	skipz
 11483  0485  0008               	return
 11484  0486  086F               	movf	_product,w
 11485  0487  3E0D               	addlw	13
 11486  0488  0086               	movwf	6
 11487  0489  3001               	movlw	1	; select bank2/3
 11488  048A  0087               	movwf	7
 11489  048B  0801               	movf	1,w
 11490  048C  3AFF               	xorlw	255
 11491  048D  1D03               	skipz
 11492  048E  0008               	return
 11493  048F  086F               	movf	_product,w
 11494  0490  3E0E               	addlw	14
 11495  0491  0086               	movwf	6
 11496  0492  3001               	movlw	1	; select bank2/3
 11497  0493  0087               	movwf	7
 11498  0494  0801               	movf	1,w
 11499  0495  3AFF               	xorlw	255
 11500  0496  1D03               	skipz
 11501  0497  0008               	return
 11502                           
 11503                           ;MCU_B1.c: 766: myMain.FirstOpen = 1;
 11504  0498  0021               	movlb	1	; select bank1
 11505  0499  16A0               	bsf	_myMain^(0+128),5
 11506                           
 11507                           ;MCU_B1.c: 767: myMain.First = 1;
 11508  049A  17A0               	bsf	_myMain^(0+128),7
 11509                           
 11510                           ;MCU_B1.c: 768: }
 11511                           ;MCU_B1.c: 769: } else {
 11512  049B  0008               	return
 11513  049C                     l7175:	
 11514                           
 11515                           ;MCU_B1.c: 770: i = setPercentValue(((char)((100-60)*0.8)));
 11516  049C  3020               	movlw	32
 11517  049D  3196  2605  3184   	fcall	_setPercentValue
 11518  04A0  0020               	movlb	0	; select bank0
 11519  04A1  00DD               	movwf	??_Flash_Memory_Initialization
 11520  04A2  085D               	movf	??_Flash_Memory_Initialization,w
 11521  04A3  00DE               	movwf	Flash_Memory_Initialization@i
 11522                           
 11523                           ;MCU_B1.c: 771: Memory.Data[0]=0xff;
 11524  04A4  30FF               	movlw	255
 11525  04A5  00DD               	movwf	??_Flash_Memory_Initialization
 11526  04A6  085D               	movf	??_Flash_Memory_Initialization,w
 11527  04A7  0022               	movlb	2	; select bank2
 11528  04A8  00BD               	movwf	_Memory^(0+256)
 11529                           
 11530                           ;MCU_B1.c: 772: Memory.Data[1]=0xff;
 11531  04A9  30FF               	movlw	255
 11532  04AA  0020               	movlb	0	; select bank0
 11533  04AB  00DD               	movwf	??_Flash_Memory_Initialization
 11534  04AC  085D               	movf	??_Flash_Memory_Initialization,w
 11535  04AD  0022               	movlb	2	; select bank2
 11536  04AE  00BE               	movwf	(_Memory^(0+256)+1)
 11537                           
 11538                           ;MCU_B1.c: 773: Memory.Data[2]=0xff;
 11539  04AF  30FF               	movlw	255
 11540  04B0  0020               	movlb	0	; select bank0
 11541  04B1  00DD               	movwf	??_Flash_Memory_Initialization
 11542  04B2  085D               	movf	??_Flash_Memory_Initialization,w
 11543  04B3  0022               	movlb	2	; select bank2
 11544  04B4  00BF               	movwf	(_Memory^(0+256)+2)
 11545                           
 11546                           ;MCU_B1.c: 774: Memory.Data[3]=0xff;
 11547  04B5  30FF               	movlw	255
 11548  04B6  0020               	movlb	0	; select bank0
 11549  04B7  00DD               	movwf	??_Flash_Memory_Initialization
 11550  04B8  085D               	movf	??_Flash_Memory_Initialization,w
 11551  04B9  0022               	movlb	2	; select bank2
 11552  04BA  00C0               	movwf	(_Memory^(0+256)+3)
 11553                           
 11554                           ;MCU_B1.c: 775: Memory.Data[4]=0xff;
 11555  04BB  30FF               	movlw	255
 11556  04BC  0020               	movlb	0	; select bank0
 11557  04BD  00DD               	movwf	??_Flash_Memory_Initialization
 11558  04BE  085D               	movf	??_Flash_Memory_Initialization,w
 11559  04BF  0022               	movlb	2	; select bank2
 11560  04C0  00C1               	movwf	(_Memory^(0+256)+4)
 11561                           
 11562                           ;MCU_B1.c: 776: Memory.Data[5]=0xff;
 11563  04C1  30FF               	movlw	255
 11564  04C2  0020               	movlb	0	; select bank0
 11565  04C3  00DD               	movwf	??_Flash_Memory_Initialization
 11566  04C4  085D               	movf	??_Flash_Memory_Initialization,w
 11567  04C5  0022               	movlb	2	; select bank2
 11568  04C6  00C2               	movwf	(_Memory^(0+256)+5)
 11569                           
 11570                           ;MCU_B1.c: 777: Memory.Data[31]=0xaa;
 11571  04C7  30AA               	movlw	170
 11572  04C8  0020               	movlb	0	; select bank0
 11573  04C9  00DD               	movwf	??_Flash_Memory_Initialization
 11574  04CA  085D               	movf	??_Flash_Memory_Initialization,w
 11575  04CB  0022               	movlb	2	; select bank2
 11576  04CC  00DC               	movwf	(_Memory^(0+256)+31)
 11577                           
 11578                           ;MCU_B1.c: 778: product->Data[21] = i;
 11579  04CD  0020               	movlb	0	; select bank0
 11580  04CE  085E               	movf	Flash_Memory_Initialization@i,w
 11581  04CF  00DD               	movwf	??_Flash_Memory_Initialization
 11582  04D0  086F               	movf	_product,w
 11583  04D1  3E15               	addlw	21
 11584  04D2  0086               	movwf	6
 11585  04D3  3001               	movlw	1	; select bank2/3
 11586  04D4  0087               	movwf	7
 11587  04D5  085D               	movf	??_Flash_Memory_Initialization,w
 11588  04D6  0081               	movwf	1
 11589                           
 11590                           ;MCU_B1.c: 779: product->Data[22] = i;
 11591  04D7  085E               	movf	Flash_Memory_Initialization@i,w
 11592  04D8  00DD               	movwf	??_Flash_Memory_Initialization
 11593  04D9  086F               	movf	_product,w
 11594  04DA  3E16               	addlw	22
 11595  04DB  0086               	movwf	6
 11596  04DC  3001               	movlw	1	; select bank2/3
 11597  04DD  0087               	movwf	7
 11598  04DE  085D               	movf	??_Flash_Memory_Initialization,w
 11599  04DF  0081               	movwf	1
 11600                           
 11601                           ;MCU_B1.c: 780: product->Data[23] = i;
 11602  04E0  085E               	movf	Flash_Memory_Initialization@i,w
 11603  04E1  00DD               	movwf	??_Flash_Memory_Initialization
 11604  04E2  086F               	movf	_product,w
 11605  04E3  3E17               	addlw	23
 11606  04E4  0086               	movwf	6
 11607  04E5  3001               	movlw	1	; select bank2/3
 11608  04E6  0087               	movwf	7
 11609  04E7  085D               	movf	??_Flash_Memory_Initialization,w
 11610  04E8  0081               	movwf	1
 11611                           
 11612                           ;MCU_B1.c: 781: GIE = 0;
 11613  04E9  138B               	bcf	11,7	;volatile
 11614                           
 11615                           ;MCU_B1.c: 782: Flash_Memory_Write();
 11616  04EA  3193  23C2         	fcall	_Flash_Memory_Write
 11617                           
 11618                           ;MCU_B1.c: 783: GIE = 1;
 11619  04EC  178B               	bsf	11,7	;volatile
 11620                           
 11621                           ;MCU_B1.c: 784: myMain.FirstOpen = 1;
 11622  04ED  0021               	movlb	1	; select bank1
 11623  04EE  16A0               	bsf	_myMain^(0+128),5
 11624                           
 11625                           ;MCU_B1.c: 785: myMain.First = 1;
 11626  04EF  17A0               	bsf	_myMain^(0+128),7
 11627  04F0  0008               	return
 11628  04F1                     __end_of_Flash_Memory_Initialization:	
 11629                           
 11630                           	psect	text72
 11631  13C2                     __ptext72:	
 11632 ;; *************** function _Flash_Memory_Write *****************
 11633 ;; Defined at:
 11634 ;;		line 829 in file "../src/MCU_B1.c"
 11635 ;; Parameters:    Size  Location     Type
 11636 ;;		None
 11637 ;; Auto vars:     Size  Location     Type
 11638 ;;  i               1    1[BANK0 ] unsigned char 
 11639 ;; Return value:  Size  Location     Type
 11640 ;;		None               void
 11641 ;; Registers used:
 11642 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11643 ;; Tracked objects:
 11644 ;;		On entry : 0/0
 11645 ;;		On exit  : 0/0
 11646 ;;		Unchanged: 0/0
 11647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11649 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11650 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11651 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11652 ;;Total ram usage:        2 bytes
 11653 ;; Hardware stack levels used:    1
 11654 ;; Hardware stack levels required when called:    6
 11655 ;; This function calls:
 11656 ;;		_Flash_Memory_Unlock
 11657 ;; This function is called by:
 11658 ;;		_Flash_Memory_Initialization
 11659 ;;		_Flash_Memory_Modify
 11660 ;; This function uses a non-reentrant model
 11661 ;;
 11662                           
 11663                           
 11664                           ;psect for function _Flash_Memory_Write
 11665  13C2                     _Flash_Memory_Write:	
 11666                           
 11667                           ;MCU_B1.c: 830: char i = 0;
 11668                           
 11669                           ;incstack = 0
 11670                           ; Regs used in _Flash_Memory_Write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11671  13C2  0020               	movlb	0	; select bank0
 11672  13C3  01A1               	clrf	Flash_Memory_Write@i
 11673                           
 11674                           ;MCU_B1.c: 831: CFGS = 0;
 11675  13C4  0023               	movlb	3	; select bank3
 11676  13C5  1315               	bcf	21,6	;volatile
 11677                           
 11678                           ;MCU_B1.c: 832: PMADRH = 0x30;
 11679  13C6  3030               	movlw	48
 11680  13C7  0092               	movwf	18	;volatile
 11681                           
 11682                           ;MCU_B1.c: 833: PMDATH = 0;
 11683  13C8  0194               	clrf	20	;volatile
 11684                           
 11685                           ;MCU_B1.c: 834: FREE = 0;
 11686  13C9  1215               	bcf	21,4	;volatile
 11687                           
 11688                           ;MCU_B1.c: 835: LWLO = 1;
 11689  13CA  1695               	bsf	21,5	;volatile
 11690                           
 11691                           ;MCU_B1.c: 836: WREN = 1;
 11692  13CB  1515               	bsf	21,2	;volatile
 11693                           
 11694                           ;MCU_B1.c: 837: for (i = 0; i < 32; i++) {
 11695  13CC  0020               	movlb	0	; select bank0
 11696  13CD  01A1               	clrf	Flash_Memory_Write@i
 11697  13CE  3020               	movlw	32
 11698  13CF  0221               	subwf	Flash_Memory_Write@i,w
 11699  13D0  1803               	btfsc	3,0
 11700  13D1  2BEA               	goto	l1243
 11701  13D2                     l6251:	
 11702                           
 11703                           ;MCU_B1.c: 838: PMADRL = i;
 11704  13D2  0821               	movf	Flash_Memory_Write@i,w
 11705  13D3  0023               	movlb	3	; select bank3
 11706  13D4  0091               	movwf	17	;volatile
 11707                           
 11708                           ;MCU_B1.c: 839: PMDATL = Memory.Data[i];
 11709  13D5  0020               	movlb	0	; select bank0
 11710  13D6  0821               	movf	Flash_Memory_Write@i,w
 11711  13D7  3E3D               	addlw	_Memory& (0+255)
 11712  13D8  0086               	movwf	6
 11713  13D9  3001               	movlw	1	; select bank2/3
 11714  13DA  0087               	movwf	7
 11715  13DB  0801               	movf	1,w
 11716  13DC  0023               	movlb	3	; select bank3
 11717  13DD  0093               	movwf	19	;volatile
 11718                           
 11719                           ;MCU_B1.c: 840: Flash_Memory_Unlock();
 11720  13DE  319E  2674  3193   	fcall	_Flash_Memory_Unlock
 11721  13E1  3001               	movlw	1
 11722  13E2  0020               	movlb	0	; select bank0
 11723  13E3  00A0               	movwf	??_Flash_Memory_Write
 11724  13E4  0820               	movf	??_Flash_Memory_Write,w
 11725  13E5  07A1               	addwf	Flash_Memory_Write@i,f
 11726  13E6  3020               	movlw	32
 11727  13E7  0221               	subwf	Flash_Memory_Write@i,w
 11728  13E8  1C03               	skipc
 11729  13E9  2BD2               	goto	l6251
 11730  13EA                     l1243:	
 11731                           
 11732                           ;MCU_B1.c: 841: }
 11733                           ;MCU_B1.c: 842: LWLO = 0;
 11734  13EA  0023               	movlb	3	; select bank3
 11735  13EB  1295               	bcf	21,5	;volatile
 11736                           
 11737                           ;MCU_B1.c: 843: Flash_Memory_Unlock();
 11738  13EC  319E  2674         	fcall	_Flash_Memory_Unlock
 11739                           
 11740                           ;MCU_B1.c: 844: WREN = 0;
 11741  13EE  0023               	movlb	3	; select bank3
 11742  13EF  1115               	bcf	21,2	;volatile
 11743  13F0  0008               	return
 11744  13F1                     __end_of_Flash_Memory_Write:	
 11745                           
 11746                           	psect	text73
 11747  1E74                     __ptext73:	
 11748 ;; *************** function _Flash_Memory_Unlock *****************
 11749 ;; Defined at:
 11750 ;;		line 808 in file "../src/MCU_B1.c"
 11751 ;; Parameters:    Size  Location     Type
 11752 ;;		None
 11753 ;; Auto vars:     Size  Location     Type
 11754 ;;		None
 11755 ;; Return value:  Size  Location     Type
 11756 ;;		None               void
 11757 ;; Registers used:
 11758 ;;		wreg
 11759 ;; Tracked objects:
 11760 ;;		On entry : 0/0
 11761 ;;		On exit  : 0/0
 11762 ;;		Unchanged: 0/0
 11763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11768 ;;Total ram usage:        0 bytes
 11769 ;; Hardware stack levels used:    1
 11770 ;; Hardware stack levels required when called:    5
 11771 ;; This function calls:
 11772 ;;		Nothing
 11773 ;; This function is called by:
 11774 ;;		_Flash_Memory_Write
 11775 ;;		_Flash_Memory_Erasing
 11776 ;; This function uses a non-reentrant model
 11777 ;;
 11778                           
 11779                           
 11780                           ;psect for function _Flash_Memory_Unlock
 11781  1E74                     _Flash_Memory_Unlock:	
 11782                           
 11783                           ;MCU_B1.c: 809: PMCON2 = 0x55;
 11784                           
 11785                           ;incstack = 0
 11786                           ; Regs used in _Flash_Memory_Unlock: [wreg]
 11787  1E74  3055               	movlw	85
 11788  1E75  0023               	movlb	3	; select bank3
 11789  1E76  0096               	movwf	22	;volatile
 11790                           
 11791                           ;MCU_B1.c: 810: PMCON2 = 0xaa;
 11792  1E77  30AA               	movlw	170
 11793  1E78  0096               	movwf	22	;volatile
 11794                           
 11795                           ;MCU_B1.c: 811: WR = 1;
 11796  1E79  1495               	bsf	21,1	;volatile
 11797                           
 11798                           ;MCU_B1.c: 812: __nop();
 11799  1E7A  0000               	nop
 11800                           
 11801                           ;MCU_B1.c: 813: __nop();
 11802  1E7B  0000               	nop
 11803  1E7C  0008               	return
 11804  1E7D                     __end_of_Flash_Memory_Unlock:	
 11805                           
 11806                           	psect	text74
 11807  1145                     __ptext74:	
 11808 ;; *************** function _Flash_Memory_Read *****************
 11809 ;; Defined at:
 11810 ;;		line 817 in file "../src/MCU_B1.c"
 11811 ;; Parameters:    Size  Location     Type
 11812 ;;  address         1    wreg     unsigned char 
 11813 ;; Auto vars:     Size  Location     Type
 11814 ;;  address         1    2[BANK0 ] unsigned char 
 11815 ;;  ret             1    3[BANK0 ] unsigned char 
 11816 ;;  i               1    1[BANK0 ] unsigned char 
 11817 ;; Return value:  Size  Location     Type
 11818 ;;                  1    wreg      unsigned char 
 11819 ;; Registers used:
 11820 ;;		wreg, status,2
 11821 ;; Tracked objects:
 11822 ;;		On entry : 0/0
 11823 ;;		On exit  : 0/0
 11824 ;;		Unchanged: 0/0
 11825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11827 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11828 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11829 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11830 ;;Total ram usage:        4 bytes
 11831 ;; Hardware stack levels used:    1
 11832 ;; Hardware stack levels required when called:    5
 11833 ;; This function calls:
 11834 ;;		Nothing
 11835 ;; This function is called by:
 11836 ;;		_Flash_Memory_Initialization
 11837 ;;		_Flash_Memory_Modify
 11838 ;; This function uses a non-reentrant model
 11839 ;;
 11840                           
 11841                           
 11842                           ;psect for function _Flash_Memory_Read
 11843  1145                     _Flash_Memory_Read:	
 11844                           
 11845                           ;incstack = 0
 11846                           ; Regs used in _Flash_Memory_Read: [wreg+status,2]
 11847                           ;Flash_Memory_Read@address stored from wreg
 11848  1145  0020               	movlb	0	; select bank0
 11849  1146  00A2               	movwf	Flash_Memory_Read@address
 11850                           
 11851                           ;MCU_B1.c: 818: char i = 0, ret = 0;
 11852  1147  01A1               	clrf	Flash_Memory_Read@i
 11853  1148  01A3               	clrf	Flash_Memory_Read@ret
 11854                           
 11855                           ;MCU_B1.c: 819: PMADRH = 0x30;
 11856  1149  3030               	movlw	48
 11857  114A  0023               	movlb	3	; select bank3
 11858  114B  0092               	movwf	18	;volatile
 11859                           
 11860                           ;MCU_B1.c: 820: PMADRL = address;
 11861  114C  0020               	movlb	0	; select bank0
 11862  114D  0822               	movf	Flash_Memory_Read@address,w
 11863  114E  0023               	movlb	3	; select bank3
 11864  114F  0091               	movwf	17	;volatile
 11865                           
 11866                           ;MCU_B1.c: 821: CFGS = 0;
 11867  1150  1315               	bcf	21,6	;volatile
 11868                           
 11869                           ;MCU_B1.c: 822: RD = 1;
 11870  1151  1415               	bsf	21,0	;volatile
 11871                           
 11872                           ;MCU_B1.c: 823: i = PMDATH;
 11873  1152  0814               	movf	20,w	;volatile
 11874  1153  0020               	movlb	0	; select bank0
 11875  1154  00A0               	movwf	??_Flash_Memory_Read
 11876  1155  0820               	movf	??_Flash_Memory_Read,w
 11877  1156  00A1               	movwf	Flash_Memory_Read@i
 11878                           
 11879                           ;MCU_B1.c: 824: ret = PMDATL;
 11880  1157  0023               	movlb	3	; select bank3
 11881  1158  0813               	movf	19,w	;volatile
 11882  1159  0020               	movlb	0	; select bank0
 11883  115A  00A0               	movwf	??_Flash_Memory_Read
 11884  115B  0820               	movf	??_Flash_Memory_Read,w
 11885  115C  00A3               	movwf	Flash_Memory_Read@ret
 11886                           
 11887                           ;MCU_B1.c: 825: return ret;
 11888  115D  0823               	movf	Flash_Memory_Read@ret,w
 11889  115E  0008               	return
 11890  115F                     __end_of_Flash_Memory_Read:	
 11891                           
 11892                           	psect	text75
 11893  1E37                     __ptext75:	
 11894 ;; *************** function _DimmerLights_Main *****************
 11895 ;; Defined at:
 11896 ;;		line 407 in file "../src/Dimmer_B1.c"
 11897 ;; Parameters:    Size  Location     Type
 11898 ;;		None
 11899 ;; Auto vars:     Size  Location     Type
 11900 ;;		None
 11901 ;; Return value:  Size  Location     Type
 11902 ;;		None               void
 11903 ;; Registers used:
 11904 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11905 ;; Tracked objects:
 11906 ;;		On entry : 0/0
 11907 ;;		On exit  : 0/0
 11908 ;;		Unchanged: 0/0
 11909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11914 ;;Total ram usage:        0 bytes
 11915 ;; Hardware stack levels used:    1
 11916 ;; Hardware stack levels required when called:   11
 11917 ;; This function calls:
 11918 ;;		_DimmerLights_Close
 11919 ;;		_setDimmerLights_Main
 11920 ;; This function is called by:
 11921 ;;		_main
 11922 ;; This function uses a non-reentrant model
 11923 ;;
 11924                           
 11925                           
 11926                           ;psect for function _DimmerLights_Main
 11927  1E37                     _DimmerLights_Main:	
 11928                           
 11929                           ;Dimmer_B1.c: 410: setDimmerLights_Main(1);
 11930                           
 11931                           ;incstack = 0
 11932                           ; Regs used in _DimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11933  1E37  3001               	movlw	1
 11934  1E38  3189  218D  319E   	fcall	_setDimmerLights_Main
 11935                           
 11936                           ;Dimmer_B1.c: 421: DimmerLights_Close();
 11937  1E3B  3190  20A8         	fcall	_DimmerLights_Close
 11938  1E3D  0008               	return
 11939  1E3E                     __end_of_DimmerLights_Main:	
 11940                           
 11941                           	psect	text76
 11942  098D                     __ptext76:	
 11943 ;; *************** function _setDimmerLights_Main *****************
 11944 ;; Defined at:
 11945 ;;		line 425 in file "../src/Dimmer_B1.c"
 11946 ;; Parameters:    Size  Location     Type
 11947 ;;  lights          1    wreg     unsigned char 
 11948 ;; Auto vars:     Size  Location     Type
 11949 ;;  lights          1   70[BANK0 ] unsigned char 
 11950 ;;  clear           1   69[BANK0 ] unsigned char 
 11951 ;; Return value:  Size  Location     Type
 11952 ;;		None               void
 11953 ;; Registers used:
 11954 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11955 ;; Tracked objects:
 11956 ;;		On entry : 0/0
 11957 ;;		On exit  : 0/0
 11958 ;;		Unchanged: 0/0
 11959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11961 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11963 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11964 ;;Total ram usage:        2 bytes
 11965 ;; Hardware stack levels used:    1
 11966 ;; Hardware stack levels required when called:   10
 11967 ;; This function calls:
 11968 ;;		_DimmerLightsPointSelect
 11969 ;;		_setBuz
 11970 ;;		_setDimmerLights
 11971 ;;		_setDimmerLights_Adj
 11972 ;; This function is called by:
 11973 ;;		_DimmerLights_Main
 11974 ;; This function uses a non-reentrant model
 11975 ;;
 11976                           
 11977                           
 11978                           ;psect for function _setDimmerLights_Main
 11979  098D                     _setDimmerLights_Main:	
 11980                           
 11981                           ;incstack = 0
 11982                           ; Regs used in _setDimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11983                           ;setDimmerLights_Main@lights stored from wreg
 11984  098D  0020               	movlb	0	; select bank0
 11985  098E  00E6               	movwf	setDimmerLights_Main@lights
 11986                           
 11987                           ;Dimmer_B1.c: 426: char clear = 1;
 11988  098F  01E5               	clrf	setDimmerLights_Main@clear
 11989  0990  0AE5               	incf	setDimmerLights_Main@clear,f
 11990                           
 11991                           ;Dimmer_B1.c: 427: DimmerLightsPointSelect(lights);
 11992  0991  0866               	movf	setDimmerLights_Main@lights,w
 11993  0992  319E  26B1  3189   	fcall	_DimmerLightsPointSelect
 11994                           
 11995                           ;Dimmer_B1.c: 447: if (DimmerLights->Trigger == 1) {
 11996  0995  0020               	movlb	0	; select bank0
 11997  0996  086D               	movf	_DimmerLights,w
 11998  0997  3E08               	addlw	8
 11999  0998  0086               	movwf	6
 12000  0999  3001               	movlw	1	; select bank2/3
 12001  099A  0087               	movwf	7
 12002  099B  1D01               	btfss	1,2
 12003  099C  29BA               	goto	l7649
 12004                           
 12005                           ;Dimmer_B1.c: 448: if (clear == 1) {
 12006  099D  0865               	movf	setDimmerLights_Main@clear,w
 12007  099E  3A01               	xorlw	1
 12008  099F  1D03               	skipz
 12009  09A0  0008               	return
 12010                           
 12011                           ;Dimmer_B1.c: 449: DimmerLights->Trigger = 0;
 12012  09A1  086D               	movf	_DimmerLights,w
 12013  09A2  3E08               	addlw	8
 12014  09A3  0086               	movwf	6
 12015  09A4  3001               	movlw	1	; select bank2/3
 12016  09A5  0087               	movwf	7
 12017  09A6  1101               	bcf	1,2
 12018                           
 12019                           ;Dimmer_B1.c: 450: if (DimmerLights->Switch == 1) {
 12020  09A7  086D               	movf	_DimmerLights,w
 12021  09A8  3E08               	addlw	8
 12022  09A9  0086               	movwf	6
 12023  09AA  3001               	movlw	1	; select bank2/3
 12024  09AB  0087               	movwf	7
 12025  09AC  1C81               	btfss	1,1
 12026  09AD  29B4               	goto	l7647
 12027                           
 12028                           ;Dimmer_B1.c: 451: setDimmerLights(lights, 1);
 12029  09AE  01A3               	clrf	setDimmerLights@status
 12030  09AF  0AA3               	incf	setDimmerLights@status,f
 12031  09B0  0866               	movf	setDimmerLights_Main@lights,w
 12032  09B1  318E  2672         	fcall	_setDimmerLights
 12033                           
 12034                           ;Dimmer_B1.c: 452: } else {
 12035  09B3  0008               	return
 12036  09B4                     l7647:	
 12037                           
 12038                           ;Dimmer_B1.c: 453: setDimmerLights(lights, 0);
 12039  09B4  0020               	movlb	0	; select bank0
 12040  09B5  01A3               	clrf	setDimmerLights@status
 12041  09B6  0866               	movf	setDimmerLights_Main@lights,w
 12042  09B7  318E  2672         	fcall	_setDimmerLights
 12043                           
 12044                           ;Dimmer_B1.c: 454: }
 12045                           ;Dimmer_B1.c: 458: }
 12046                           ;Dimmer_B1.c: 459: } else {
 12047  09B9  0008               	return
 12048  09BA                     l7649:	
 12049                           
 12050                           ;Dimmer_B1.c: 460: if (DimmerLights->TriggerAdj == 1) {
 12051  09BA  0020               	movlb	0	; select bank0
 12052  09BB  086D               	movf	_DimmerLights,w
 12053  09BC  3E08               	addlw	8
 12054  09BD  0086               	movwf	6
 12055  09BE  3001               	movlw	1	; select bank2/3
 12056  09BF  0087               	movwf	7
 12057  09C0  1E01               	btfss	1,4
 12058  09C1  0008               	return
 12059                           
 12060                           ;Dimmer_B1.c: 461: if (clear == 1) {
 12061  09C2  0865               	movf	setDimmerLights_Main@clear,w
 12062  09C3  3A01               	xorlw	1
 12063  09C4  1D03               	skipz
 12064  09C5  0008               	return
 12065                           
 12066                           ;Dimmer_B1.c: 462: DimmerLights->TriggerAdj = 0;
 12067  09C6  086D               	movf	_DimmerLights,w
 12068  09C7  3E08               	addlw	8
 12069  09C8  0086               	movwf	6
 12070  09C9  3001               	movlw	1	; select bank2/3
 12071  09CA  0087               	movwf	7
 12072  09CB  1201               	bcf	1,4
 12073                           
 12074                           ;Dimmer_B1.c: 463: if (DimmerLights->AdjGo == 1) {
 12075  09CC  086D               	movf	_DimmerLights,w
 12076  09CD  3E08               	addlw	8
 12077  09CE  0086               	movwf	6
 12078  09CF  3001               	movlw	1	; select bank2/3
 12079  09D0  0087               	movwf	7
 12080  09D1  1D81               	btfss	1,3
 12081  09D2  29E2               	goto	l7659
 12082                           
 12083                           ;Dimmer_B1.c: 464: setDimmerLights_Adj(lights, 1);
 12084  09D3  01E2               	clrf	setDimmerLights_Adj@status
 12085  09D4  0AE2               	incf	setDimmerLights_Adj@status,f
 12086  09D5  0866               	movf	setDimmerLights_Main@lights,w
 12087  09D6  3195  2500  3189   	fcall	_setDimmerLights_Adj
 12088                           
 12089                           ;Dimmer_B1.c: 465: setBuz(1, 100);
 12090  09D9  3064               	movlw	100
 12091  09DA  0020               	movlb	0	; select bank0
 12092  09DB  00A9               	movwf	setBuz@time
 12093  09DC  3000               	movlw	0
 12094  09DD  00AA               	movwf	setBuz@time+1
 12095  09DE  3001               	movlw	1
 12096  09DF  3189  2134         	fcall	_setBuz
 12097                           
 12098                           ;Dimmer_B1.c: 466: } else {
 12099  09E1  0008               	return
 12100  09E2                     l7659:	
 12101                           
 12102                           ;Dimmer_B1.c: 467: setDimmerLights_Adj(lights, 0);
 12103  09E2  0020               	movlb	0	; select bank0
 12104  09E3  01E2               	clrf	setDimmerLights_Adj@status
 12105  09E4  0866               	movf	setDimmerLights_Main@lights,w
 12106  09E5  3195  2500         	fcall	_setDimmerLights_Adj
 12107  09E7  0008               	return
 12108  09E8                     __end_of_setDimmerLights_Main:	
 12109                           
 12110                           	psect	text77
 12111  1500                     __ptext77:	
 12112 ;; *************** function _setDimmerLights_Adj *****************
 12113 ;; Defined at:
 12114 ;;		line 646 in file "../src/Dimmer_B1.c"
 12115 ;; Parameters:    Size  Location     Type
 12116 ;;  lights          1    wreg     unsigned char 
 12117 ;;  status          1   66[BANK0 ] unsigned char 
 12118 ;; Auto vars:     Size  Location     Type
 12119 ;;  lights          1   68[BANK0 ] unsigned char 
 12120 ;; Return value:  Size  Location     Type
 12121 ;;		None               void
 12122 ;; Registers used:
 12123 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12124 ;; Tracked objects:
 12125 ;;		On entry : 0/0
 12126 ;;		On exit  : 0/0
 12127 ;;		Unchanged: 0/0
 12128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12129 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12130 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12131 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12132 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12133 ;;Total ram usage:        3 bytes
 12134 ;; Hardware stack levels used:    1
 12135 ;; Hardware stack levels required when called:    9
 12136 ;; This function calls:
 12137 ;;		_DimmerLightsPointSelect
 12138 ;;		_setRF_DimmerLights
 12139 ;;		_setTxData
 12140 ;; This function is called by:
 12141 ;;		_setDimmerLights_Main
 12142 ;; This function uses a non-reentrant model
 12143 ;;
 12144                           
 12145                           
 12146                           ;psect for function _setDimmerLights_Adj
 12147  1500                     _setDimmerLights_Adj:	
 12148                           
 12149                           ;incstack = 0
 12150                           ; Regs used in _setDimmerLights_Adj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12151                           ;setDimmerLights_Adj@lights stored from wreg
 12152  1500  0020               	movlb	0	; select bank0
 12153  1501  00E4               	movwf	setDimmerLights_Adj@lights
 12154                           
 12155                           ;Dimmer_B1.c: 647: DimmerLightsPointSelect(lights);
 12156  1502  0864               	movf	setDimmerLights_Adj@lights,w
 12157  1503  319E  26B1  3195   	fcall	_DimmerLightsPointSelect
 12158                           
 12159                           ;Dimmer_B1.c: 648: if (status == 1) {
 12160  1506  0020               	movlb	0	; select bank0
 12161  1507  0862               	movf	setDimmerLights_Adj@status,w
 12162  1508  3A01               	xorlw	1
 12163  1509  1D03               	skipz
 12164  150A  2D16               	goto	l6205
 12165                           
 12166                           ;Dimmer_B1.c: 649: DimmerLights->AdjFlag = 1;
 12167  150B  086D               	movf	_DimmerLights,w
 12168  150C  0086               	movwf	6
 12169  150D  3001               	movlw	1	; select bank2/3
 12170  150E  0087               	movwf	7
 12171  150F  1581               	bsf	1,3
 12172                           
 12173                           ;Dimmer_B1.c: 650: DimmerLights->Signal = 1;
 12174  1510  086D               	movf	_DimmerLights,w
 12175  1511  0086               	movwf	6
 12176  1512  3001               	movlw	1	; select bank2/3
 12177  1513  0087               	movwf	7
 12178  1514  1481               	bsf	1,1
 12179                           
 12180                           ;Dimmer_B1.c: 651: } else {
 12181  1515  0008               	return
 12182  1516                     l6205:	
 12183                           
 12184                           ;Dimmer_B1.c: 652: if (DimmerLights->AdjFlag == 1) {
 12185  1516  086D               	movf	_DimmerLights,w
 12186  1517  0086               	movwf	6
 12187  1518  3001               	movlw	1	; select bank2/3
 12188  1519  0087               	movwf	7
 12189  151A  1D81               	btfss	1,3
 12190  151B  0008               	return
 12191                           
 12192                           ;Dimmer_B1.c: 654: DimmerLights->Signal = 0;
 12193  151C  086D               	movf	_DimmerLights,w
 12194  151D  0086               	movwf	6
 12195  151E  3001               	movlw	1	; select bank2/3
 12196  151F  0087               	movwf	7
 12197  1520  1081               	bcf	1,1
 12198                           
 12199                           ;Dimmer_B1.c: 655: DimmerLights->AdjFlag = 0;
 12200  1521  086D               	movf	_DimmerLights,w
 12201  1522  0086               	movwf	6
 12202  1523  3001               	movlw	1	; select bank2/3
 12203  1524  0087               	movwf	7
 12204  1525  1181               	bcf	1,3
 12205                           
 12206                           ;Dimmer_B1.c: 656: ;;
 12207                           ;Dimmer_B1.c: 657: DimmerLights->MaxmumValue = DimmerLights->DimmingValue;
 12208  1526  086D               	movf	_DimmerLights,w
 12209  1527  3E04               	addlw	4
 12210  1528  0086               	movwf	6
 12211  1529  3001               	movlw	1	; select bank2/3
 12212  152A  0087               	movwf	7
 12213  152B  0801               	movf	1,w
 12214  152C  00E3               	movwf	??_setDimmerLights_Adj
 12215  152D  086D               	movf	_DimmerLights,w
 12216  152E  3E05               	addlw	5
 12217  152F  0086               	movwf	6
 12218  1530  3001               	movlw	1	; select bank2/3
 12219  1531  0087               	movwf	7
 12220  1532  0863               	movf	??_setDimmerLights_Adj,w
 12221  1533  0081               	movwf	1
 12222                           
 12223                           ;Dimmer_B1.c: 665: setRF_DimmerLights(lights, 1);
 12224  1534  01DD               	clrf	setRF_DimmerLights@on
 12225  1535  0ADD               	incf	setRF_DimmerLights@on,f
 12226  1536  0864               	movf	setDimmerLights_Adj@lights,w
 12227  1537  3187  2792  3195   	fcall	_setRF_DimmerLights
 12228                           
 12229                           ;Dimmer_B1.c: 666: setTxData();
 12230  153A  3184  24F1         	fcall	_setTxData
 12231  153C  0008               	return
 12232  153D                     __end_of_setDimmerLights_Adj:	
 12233                           
 12234                           	psect	text78
 12235  0E72                     __ptext78:	
 12236 ;; *************** function _setDimmerLights *****************
 12237 ;; Defined at:
 12238 ;;		line 593 in file "../src/Dimmer_B1.c"
 12239 ;; Parameters:    Size  Location     Type
 12240 ;;  lights          1    wreg     unsigned char 
 12241 ;;  status          1    3[BANK0 ] unsigned char 
 12242 ;; Auto vars:     Size  Location     Type
 12243 ;;  lights          1    5[BANK0 ] unsigned char 
 12244 ;; Return value:  Size  Location     Type
 12245 ;;		None               void
 12246 ;; Registers used:
 12247 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12248 ;; Tracked objects:
 12249 ;;		On entry : 0/0
 12250 ;;		On exit  : 0/0
 12251 ;;		Unchanged: 0/0
 12252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12253 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12254 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12255 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12256 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12257 ;;Total ram usage:        3 bytes
 12258 ;; Hardware stack levels used:    1
 12259 ;; Hardware stack levels required when called:    7
 12260 ;; This function calls:
 12261 ;;		_DimmerLightsPointSelect
 12262 ;;		_setLED
 12263 ;;		_setMemory_GO
 12264 ;; This function is called by:
 12265 ;;		_setDimmerLights_Main
 12266 ;;		_setControl_Lights_Table
 12267 ;; This function uses a non-reentrant model
 12268 ;;
 12269                           
 12270                           
 12271                           ;psect for function _setDimmerLights
 12272  0E72                     _setDimmerLights:	
 12273                           
 12274                           ;incstack = 0
 12275                           ; Regs used in _setDimmerLights: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12276                           ;setDimmerLights@lights stored from wreg
 12277  0E72  0020               	movlb	0	; select bank0
 12278  0E73  00A5               	movwf	setDimmerLights@lights
 12279                           
 12280                           ;Dimmer_B1.c: 594: DimmerLightsPointSelect(lights);
 12281  0E74  0825               	movf	setDimmerLights@lights,w
 12282  0E75  319E  26B1  318E   	fcall	_DimmerLightsPointSelect
 12283                           
 12284                           ;Dimmer_B1.c: 595: Dimmer->Load = lights;
 12285  0E78  0020               	movlb	0	; select bank0
 12286  0E79  0825               	movf	setDimmerLights@lights,w
 12287  0E7A  00A4               	movwf	??_setDimmerLights
 12288  0E7B  0021               	movlb	1	; select bank1
 12289  0E7C  0A50               	incf	_Dimmer^(0+128),w
 12290  0E7D  0086               	movwf	6
 12291  0E7E  0187               	clrf	7
 12292  0E7F  0020               	movlb	0	; select bank0
 12293  0E80  0824               	movf	??_setDimmerLights,w
 12294  0E81  0081               	movwf	1
 12295                           
 12296                           ;Dimmer_B1.c: 596: if (status == 1) {
 12297  0E82  0823               	movf	setDimmerLights@status,w
 12298  0E83  3A01               	xorlw	1
 12299  0E84  1D03               	skipz
 12300  0E85  2EC7               	goto	l7511
 12301                           
 12302                           ;Dimmer_B1.c: 597: DimmerLights->Status = 1;
 12303  0E86  086D               	movf	_DimmerLights,w
 12304  0E87  0086               	movwf	6
 12305  0E88  3001               	movlw	1	; select bank2/3
 12306  0E89  0087               	movwf	7
 12307  0E8A  1681               	bsf	1,5
 12308                           
 12309                           ;Dimmer_B1.c: 598: setLED(lights, 0);
 12310  0E8B  01A1               	clrf	setLED@command
 12311  0E8C  0825               	movf	setDimmerLights@lights,w
 12312  0E8D  318B  2305  318E   	fcall	_setLED
 12313                           
 12314                           ;Dimmer_B1.c: 599: RC7=!0;
 12315  0E90  0020               	movlb	0	; select bank0
 12316  0E91  178E               	bsf	14,7	;volatile
 12317                           
 12318                           ;Dimmer_B1.c: 600: ;;
 12319                           ;Dimmer_B1.c: 602: DimmerLights->Signal = 1;
 12320  0E92  086D               	movf	_DimmerLights,w
 12321  0E93  0086               	movwf	6
 12322  0E94  3001               	movlw	1	; select bank2/3
 12323  0E95  0087               	movwf	7
 12324  0E96  1481               	bsf	1,1
 12325                           
 12326                           ;Dimmer_B1.c: 603: DimmerLights->DimmingTimeValue = 7;
 12327  0E97  3007               	movlw	7
 12328  0E98  00A4               	movwf	??_setDimmerLights
 12329  0E99  086D               	movf	_DimmerLights,w
 12330  0E9A  3E02               	addlw	2
 12331  0E9B  0086               	movwf	6
 12332  0E9C  3001               	movlw	1	; select bank2/3
 12333  0E9D  0087               	movwf	7
 12334  0E9E  0824               	movf	??_setDimmerLights,w
 12335  0E9F  0081               	movwf	1
 12336                           
 12337                           ;Dimmer_B1.c: 605: if (DimmerLights->StatusFlag == 0) {
 12338  0EA0  086D               	movf	_DimmerLights,w
 12339  0EA1  0086               	movwf	6
 12340  0EA2  3001               	movlw	1	; select bank2/3
 12341  0EA3  0087               	movwf	7
 12342  0EA4  1B01               	btfsc	1,6
 12343  0EA5  0008               	return
 12344                           
 12345                           ;Dimmer_B1.c: 606: DimmerLights->StatusFlag = 1;
 12346  0EA6  086D               	movf	_DimmerLights,w
 12347  0EA7  0086               	movwf	6
 12348  0EA8  3001               	movlw	1	; select bank2/3
 12349  0EA9  0087               	movwf	7
 12350  0EAA  1701               	bsf	1,6
 12351                           
 12352                           ;Dimmer_B1.c: 607: ;;
 12353                           ;Dimmer_B1.c: 608: setMemory_GO(0);
 12354  0EAB  3000               	movlw	0
 12355  0EAC  3190  20E6         	fcall	_setMemory_GO
 12356                           
 12357                           ;Dimmer_B1.c: 611: DimmerLights->DimmingValue = DimmerLights->MaxmumValue;
 12358  0EAE  0020               	movlb	0	; select bank0
 12359  0EAF  086D               	movf	_DimmerLights,w
 12360  0EB0  3E05               	addlw	5
 12361  0EB1  0086               	movwf	6
 12362  0EB2  3001               	movlw	1	; select bank2/3
 12363  0EB3  0087               	movwf	7
 12364  0EB4  0801               	movf	1,w
 12365  0EB5  00A4               	movwf	??_setDimmerLights
 12366  0EB6  086D               	movf	_DimmerLights,w
 12367  0EB7  3E04               	addlw	4
 12368  0EB8  0086               	movwf	6
 12369  0EB9  3001               	movlw	1	; select bank2/3
 12370  0EBA  0087               	movwf	7
 12371  0EBB  0824               	movf	??_setDimmerLights,w
 12372  0EBC  0081               	movwf	1
 12373                           
 12374                           ;Dimmer_B1.c: 615: DimmerLights->DimmingValue = ((char)((100-60)*0.8));
 12375  0EBD  3020               	movlw	32
 12376  0EBE  00A4               	movwf	??_setDimmerLights
 12377  0EBF  086D               	movf	_DimmerLights,w
 12378  0EC0  3E04               	addlw	4
 12379  0EC1  0086               	movwf	6
 12380  0EC2  3001               	movlw	1	; select bank2/3
 12381  0EC3  0087               	movwf	7
 12382  0EC4  0824               	movf	??_setDimmerLights,w
 12383  0EC5  0081               	movwf	1
 12384                           
 12385                           ;Dimmer_B1.c: 617: }
 12386                           ;Dimmer_B1.c: 618: } else {
 12387  0EC6  0008               	return
 12388  0EC7                     l7511:	
 12389                           
 12390                           ;Dimmer_B1.c: 619: DimmerLights->Status = 0;
 12391  0EC7  086D               	movf	_DimmerLights,w
 12392  0EC8  0086               	movwf	6
 12393  0EC9  3001               	movlw	1	; select bank2/3
 12394  0ECA  0087               	movwf	7
 12395  0ECB  1281               	bcf	1,5
 12396                           
 12397                           ;Dimmer_B1.c: 621: DimmerLights->DimmingValue = DimmerLights->MinimumValue;
 12398  0ECC  086D               	movf	_DimmerLights,w
 12399  0ECD  3E06               	addlw	6
 12400  0ECE  0086               	movwf	6
 12401  0ECF  3001               	movlw	1	; select bank2/3
 12402  0ED0  0087               	movwf	7
 12403  0ED1  0801               	movf	1,w
 12404  0ED2  00A4               	movwf	??_setDimmerLights
 12405  0ED3  086D               	movf	_DimmerLights,w
 12406  0ED4  3E04               	addlw	4
 12407  0ED5  0086               	movwf	6
 12408  0ED6  3001               	movlw	1	; select bank2/3
 12409  0ED7  0087               	movwf	7
 12410  0ED8  0824               	movf	??_setDimmerLights,w
 12411  0ED9  0081               	movwf	1
 12412                           
 12413                           ;Dimmer_B1.c: 628: DimmerLights->Signal = 1;
 12414  0EDA  086D               	movf	_DimmerLights,w
 12415  0EDB  0086               	movwf	6
 12416  0EDC  3001               	movlw	1	; select bank2/3
 12417  0EDD  0087               	movwf	7
 12418  0EDE  1481               	bsf	1,1
 12419                           
 12420                           ;Dimmer_B1.c: 629: DimmerLights->AdjFlag = 0;
 12421  0EDF  086D               	movf	_DimmerLights,w
 12422  0EE0  0086               	movwf	6
 12423  0EE1  3001               	movlw	1	; select bank2/3
 12424  0EE2  0087               	movwf	7
 12425  0EE3  1181               	bcf	1,3
 12426                           
 12427                           ;Dimmer_B1.c: 630: DimmerLights->AdjStatus = 0;
 12428  0EE4  086D               	movf	_DimmerLights,w
 12429  0EE5  0086               	movwf	6
 12430  0EE6  3001               	movlw	1	; select bank2/3
 12431  0EE7  0087               	movwf	7
 12432  0EE8  1201               	bcf	1,4
 12433                           
 12434                           ;Dimmer_B1.c: 631: DimmerLights->DimmingTimeValue = 7;
 12435  0EE9  3007               	movlw	7
 12436  0EEA  00A4               	movwf	??_setDimmerLights
 12437  0EEB  086D               	movf	_DimmerLights,w
 12438  0EEC  3E02               	addlw	2
 12439  0EED  0086               	movwf	6
 12440  0EEE  3001               	movlw	1	; select bank2/3
 12441  0EEF  0087               	movwf	7
 12442  0EF0  0824               	movf	??_setDimmerLights,w
 12443  0EF1  0081               	movwf	1
 12444  0EF2  0008               	return
 12445  0EF3                     __end_of_setDimmerLights:	
 12446                           
 12447                           	psect	text79
 12448  0B05                     __ptext79:	
 12449 ;; *************** function _setLED *****************
 12450 ;; Defined at:
 12451 ;;		line 70 in file "../src/LED_B1.c"
 12452 ;; Parameters:    Size  Location     Type
 12453 ;;  led             1    wreg     unsigned char 
 12454 ;;  command         1    1[BANK0 ] unsigned char 
 12455 ;; Auto vars:     Size  Location     Type
 12456 ;;  led             1    2[BANK0 ] unsigned char 
 12457 ;; Return value:  Size  Location     Type
 12458 ;;		None               void
 12459 ;; Registers used:
 12460 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12461 ;; Tracked objects:
 12462 ;;		On entry : 0/0
 12463 ;;		On exit  : 0/0
 12464 ;;		Unchanged: 0/0
 12465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12466 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12467 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12469 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12470 ;;Total ram usage:        2 bytes
 12471 ;; Hardware stack levels used:    1
 12472 ;; Hardware stack levels required when called:    6
 12473 ;; This function calls:
 12474 ;;		_LedPointSelect
 12475 ;; This function is called by:
 12476 ;;		_setDimmerLights_ERROR
 12477 ;;		_setDimmerLights
 12478 ;;		_setLED_Initialization
 12479 ;;		_setOverTemp_Exceptions
 12480 ;;		_setPowerFault_Exceptions
 12481 ;;		_setSw_Initialization
 12482 ;; This function uses a non-reentrant model
 12483 ;;
 12484                           
 12485                           
 12486                           ;psect for function _setLED
 12487  0B05                     _setLED:	
 12488                           
 12489                           ;incstack = 0
 12490                           ; Regs used in _setLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12491                           ;setLED@led stored from wreg
 12492  0B05  0020               	movlb	0	; select bank0
 12493  0B06  00A2               	movwf	setLED@led
 12494                           
 12495                           ;LED_B1.c: 71: LedPointSelect(led);
 12496  0B07  0822               	movf	setLED@led,w
 12497  0B08  3192  223F  318B   	fcall	_LedPointSelect
 12498                           
 12499                           ;LED_B1.c: 72: if (command == 0) {
 12500  0B0B  0020               	movlb	0	; select bank0
 12501  0B0C  08A1               	movf	setLED@command,f
 12502  0B0D  1D03               	skipz
 12503  0B0E  2B21               	goto	l7451
 12504                           
 12505                           ;LED_B1.c: 74: if (led == 1) {
 12506  0B0F  0822               	movf	setLED@led,w
 12507  0B10  3A01               	xorlw	1
 12508  0B11  1D03               	skipz
 12509  0B12  2B15               	goto	l7443
 12510                           
 12511                           ;LED_B1.c: 78: RA3 = 1;
 12512  0B13  158C               	bsf	12,3	;volatile
 12513                           
 12514                           ;LED_B1.c: 80: }
 12515  0B14  0008               	return
 12516  0B15                     l7443:	
 12517                           
 12518                           ;LED_B1.c: 83: else if (led == 2) {
 12519  0B15  0822               	movf	setLED@led,w
 12520  0B16  3A02               	xorlw	2
 12521  0B17  1D03               	skipz
 12522  0B18  2B1B               	goto	l7447
 12523                           
 12524                           ;LED_B1.c: 87: RC7 = 1;
 12525  0B19  178E               	bsf	14,7	;volatile
 12526                           
 12527                           ;LED_B1.c: 89: }
 12528  0B1A  0008               	return
 12529  0B1B                     l7447:	
 12530                           
 12531                           ;LED_B1.c: 101: else if (led == 99) {
 12532  0B1B  0822               	movf	setLED@led,w
 12533  0B1C  3A63               	xorlw	99
 12534  0B1D  1D03               	skipz
 12535  0B1E  0008               	return
 12536                           
 12537                           ;LED_B1.c: 105: RB5 = 1;
 12538  0B1F  168D               	bsf	13,5	;volatile
 12539                           
 12540                           ;LED_B1.c: 107: }
 12541                           ;LED_B1.c: 109: } else if (command == 1) {
 12542  0B20  0008               	return
 12543  0B21                     l7451:	
 12544  0B21  0821               	movf	setLED@command,w
 12545  0B22  3A01               	xorlw	1
 12546  0B23  1D03               	skipz
 12547  0B24  2B37               	goto	l7465
 12548                           
 12549                           ;LED_B1.c: 111: if (led == 1) {
 12550  0B25  0822               	movf	setLED@led,w
 12551  0B26  3A01               	xorlw	1
 12552  0B27  1D03               	skipz
 12553  0B28  2B2B               	goto	l7457
 12554                           
 12555                           ;LED_B1.c: 115: RA3 = 0;
 12556  0B29  118C               	bcf	12,3	;volatile
 12557                           
 12558                           ;LED_B1.c: 117: }
 12559  0B2A  0008               	return
 12560  0B2B                     l7457:	
 12561                           
 12562                           ;LED_B1.c: 120: else if (led == 2) {
 12563  0B2B  0822               	movf	setLED@led,w
 12564  0B2C  3A02               	xorlw	2
 12565  0B2D  1D03               	skipz
 12566  0B2E  2B31               	goto	l7461
 12567                           
 12568                           ;LED_B1.c: 124: RC7 = 0;
 12569  0B2F  138E               	bcf	14,7	;volatile
 12570                           
 12571                           ;LED_B1.c: 126: }
 12572  0B30  0008               	return
 12573  0B31                     l7461:	
 12574                           
 12575                           ;LED_B1.c: 138: else if (led == 99) {
 12576  0B31  0822               	movf	setLED@led,w
 12577  0B32  3A63               	xorlw	99
 12578  0B33  1D03               	skipz
 12579  0B34  0008               	return
 12580                           
 12581                           ;LED_B1.c: 142: RB5 = 0;
 12582  0B35  128D               	bcf	13,5	;volatile
 12583                           
 12584                           ;LED_B1.c: 144: }
 12585                           ;LED_B1.c: 146: } else if (command == 10) {
 12586  0B36  0008               	return
 12587  0B37                     l7465:	
 12588  0B37  0821               	movf	setLED@command,w
 12589  0B38  3A0A               	xorlw	10
 12590  0B39  1D03               	skipz
 12591  0B3A  2B5C               	goto	l7481
 12592                           
 12593                           ;LED_B1.c: 147: LED->GO = 0;
 12594  0B3B  0021               	movlb	1	; select bank1
 12595  0B3C  084B               	movf	_LED^(0+128),w
 12596  0B3D  0086               	movwf	6
 12597  0B3E  084C               	movf	(_LED+1)^(0+128),w
 12598  0B3F  0087               	movwf	7
 12599  0B40  1081               	bcf	1,1
 12600                           
 12601                           ;LED_B1.c: 148: LED->Time = 0;
 12602  0B41  084B               	movf	_LED^(0+128),w
 12603  0B42  0086               	movwf	6
 12604  0B43  084C               	movf	(_LED+1)^(0+128),w
 12605  0B44  0087               	movwf	7
 12606  0B45  3141               	addfsr 1,1
 12607  0B46  3000               	movlw	0
 12608  0B47  3FC0               	movwi [0]fsr1
 12609  0B48  3FC1               	movwi [1]fsr1
 12610                           
 12611                           ;LED_B1.c: 150: if (led == 1) {
 12612  0B49  0020               	movlb	0	; select bank0
 12613  0B4A  0822               	movf	setLED@led,w
 12614  0B4B  3A01               	xorlw	1
 12615  0B4C  1D03               	skipz
 12616  0B4D  2B50               	goto	l7473
 12617                           
 12618                           ;LED_B1.c: 154: RA3 = 1;
 12619  0B4E  158C               	bsf	12,3	;volatile
 12620                           
 12621                           ;LED_B1.c: 156: }
 12622  0B4F  0008               	return
 12623  0B50                     l7473:	
 12624                           
 12625                           ;LED_B1.c: 159: else if (led == 2) {
 12626  0B50  0822               	movf	setLED@led,w
 12627  0B51  3A02               	xorlw	2
 12628  0B52  1D03               	skipz
 12629  0B53  2B56               	goto	l7477
 12630                           
 12631                           ;LED_B1.c: 163: RC7 = 1;
 12632  0B54  178E               	bsf	14,7	;volatile
 12633                           
 12634                           ;LED_B1.c: 165: }
 12635  0B55  0008               	return
 12636  0B56                     l7477:	
 12637                           
 12638                           ;LED_B1.c: 177: else if (led == 99) {
 12639  0B56  0822               	movf	setLED@led,w
 12640  0B57  3A63               	xorlw	99
 12641  0B58  1D03               	skipz
 12642  0B59  0008               	return
 12643                           
 12644                           ;LED_B1.c: 181: RB5 = 1;
 12645  0B5A  168D               	bsf	13,5	;volatile
 12646                           
 12647                           ;LED_B1.c: 183: }
 12648                           ;LED_B1.c: 185: } else if (command == 11) {
 12649  0B5B  0008               	return
 12650  0B5C                     l7481:	
 12651  0B5C  0821               	movf	setLED@command,w
 12652  0B5D  3A0B               	xorlw	11
 12653  0B5E  1D03               	skipz
 12654  0B5F  0008               	return
 12655                           
 12656                           ;LED_B1.c: 186: LED->GO = 1;
 12657  0B60  0021               	movlb	1	; select bank1
 12658  0B61  084B               	movf	_LED^(0+128),w
 12659  0B62  0086               	movwf	6
 12660  0B63  084C               	movf	(_LED+1)^(0+128),w
 12661  0B64  0087               	movwf	7
 12662  0B65  1481               	bsf	1,1
 12663  0B66  0008               	return
 12664  0B67                     __end_of_setLED:	
 12665                           
 12666                           	psect	text80
 12667  123F                     __ptext80:	
 12668 ;; *************** function _LedPointSelect *****************
 12669 ;; Defined at:
 12670 ;;		line 7 in file "../src/LED_B1.c"
 12671 ;; Parameters:    Size  Location     Type
 12672 ;;  led             1    wreg     unsigned char 
 12673 ;; Auto vars:     Size  Location     Type
 12674 ;;  led             1    0[BANK0 ] unsigned char 
 12675 ;; Return value:  Size  Location     Type
 12676 ;;		None               void
 12677 ;; Registers used:
 12678 ;;		wreg, status,2, status,0
 12679 ;; Tracked objects:
 12680 ;;		On entry : 0/0
 12681 ;;		On exit  : 0/0
 12682 ;;		Unchanged: 0/0
 12683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12685 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12687 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12688 ;;Total ram usage:        1 bytes
 12689 ;; Hardware stack levels used:    1
 12690 ;; Hardware stack levels required when called:    5
 12691 ;; This function calls:
 12692 ;;		Nothing
 12693 ;; This function is called by:
 12694 ;;		_setLED_Initialization
 12695 ;;		_setLED
 12696 ;;		_setLED_Main
 12697 ;; This function uses a non-reentrant model
 12698 ;;
 12699                           
 12700                           
 12701                           ;psect for function _LedPointSelect
 12702  123F                     _LedPointSelect:	
 12703                           
 12704                           ;incstack = 0
 12705                           ; Regs used in _LedPointSelect: [wreg+status,2+status,0]
 12706                           ;LedPointSelect@led stored from wreg
 12707  123F  0020               	movlb	0	; select bank0
 12708  1240  00A0               	movwf	LedPointSelect@led
 12709                           
 12710                           ;LED_B1.c: 9: if (led == 1) {
 12711  1241  0820               	movf	LedPointSelect@led,w
 12712  1242  3A01               	xorlw	1
 12713  1243  1D03               	skipz
 12714  1244  2A4B               	goto	l7427
 12715                           
 12716                           ;LED_B1.c: 10: LED = &VarLED1;
 12717  1245  3067               	movlw	low _VarLED1
 12718  1246  0021               	movlb	1	; select bank1
 12719  1247  00CB               	movwf	_LED^(0+128)
 12720  1248  3001               	movlw	high _VarLED1
 12721  1249  00CC               	movwf	(_LED+1)^(0+128)
 12722                           
 12723                           ;LED_B1.c: 11: }
 12724  124A  0008               	return
 12725  124B                     l7427:	
 12726                           
 12727                           ;LED_B1.c: 14: else if (led == 2) {
 12728  124B  0020               	movlb	0	; select bank0
 12729  124C  0820               	movf	LedPointSelect@led,w
 12730  124D  3A02               	xorlw	2
 12731  124E  1D03               	skipz
 12732  124F  2A56               	goto	l7431
 12733                           
 12734                           ;LED_B1.c: 15: LED = &VarLED2;
 12735  1250  306B               	movlw	low _VarLED2
 12736  1251  0021               	movlb	1	; select bank1
 12737  1252  00CB               	movwf	_LED^(0+128)
 12738  1253  3001               	movlw	high _VarLED2
 12739  1254  00CC               	movwf	(_LED+1)^(0+128)
 12740                           
 12741                           ;LED_B1.c: 16: }
 12742  1255  0008               	return
 12743  1256                     l7431:	
 12744                           
 12745                           ;LED_B1.c: 24: else if (led == 99) {
 12746  1256  0020               	movlb	0	; select bank0
 12747  1257  0820               	movf	LedPointSelect@led,w
 12748  1258  3A63               	xorlw	99
 12749  1259  1D03               	skipz
 12750  125A  0008               	return
 12751                           
 12752                           ;LED_B1.c: 25: LED = &VarErrLED;
 12753  125B  30E7               	movlw	low _VarErrLED
 12754  125C  0021               	movlb	1	; select bank1
 12755  125D  00CB               	movwf	_LED^(0+128)
 12756  125E  3000               	movlw	high _VarErrLED
 12757  125F  00CC               	movwf	(_LED+1)^(0+128)
 12758  1260  0008               	return
 12759  1261                     __end_of_LedPointSelect:	
 12760                           
 12761                           	psect	text81
 12762  10A8                     __ptext81:	
 12763 ;; *************** function _DimmerLights_Close *****************
 12764 ;; Defined at:
 12765 ;;		line 396 in file "../src/Dimmer_B1.c"
 12766 ;; Parameters:    Size  Location     Type
 12767 ;;		None
 12768 ;; Auto vars:     Size  Location     Type
 12769 ;;		None
 12770 ;; Return value:  Size  Location     Type
 12771 ;;		None               void
 12772 ;; Registers used:
 12773 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12774 ;; Tracked objects:
 12775 ;;		On entry : 0/0
 12776 ;;		On exit  : 0/0
 12777 ;;		Unchanged: 0/0
 12778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12783 ;;Total ram usage:        0 bytes
 12784 ;; Hardware stack levels used:    1
 12785 ;; Hardware stack levels required when called:    6
 12786 ;; This function calls:
 12787 ;;		_getDimmerLights_StatusFlag
 12788 ;;		_setMemory_GO
 12789 ;; This function is called by:
 12790 ;;		_DimmerLights_Main
 12791 ;; This function uses a non-reentrant model
 12792 ;;
 12793                           
 12794                           
 12795                           ;psect for function _DimmerLights_Close
 12796  10A8                     _DimmerLights_Close:	
 12797                           
 12798                           ;Dimmer_B1.c: 397: if (Dimmer->Detect == 1) {
 12799                           
 12800                           ;incstack = 0
 12801                           ; Regs used in _DimmerLights_Close: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12802  10A8  0021               	movlb	1	; select bank1
 12803  10A9  0850               	movf	_Dimmer^(0+128),w
 12804  10AA  0086               	movwf	6
 12805  10AB  0187               	clrf	7
 12806  10AC  1C01               	btfss	1,0
 12807  10AD  0008               	return
 12808                           
 12809                           ;Dimmer_B1.c: 398: Dimmer->Detect = 0;
 12810  10AE  0850               	movf	_Dimmer^(0+128),w
 12811  10AF  0086               	movwf	6
 12812  10B0  0187               	clrf	7
 12813  10B1  1001               	bcf	1,0
 12814                           
 12815                           ;Dimmer_B1.c: 399: if (getDimmerLights_StatusFlag() == 0) {
 12816  10B2  3190  2066  3190   	fcall	_getDimmerLights_StatusFlag
 12817  10B5  3800               	iorlw	0
 12818  10B6  1D03               	skipz
 12819  10B7  0008               	return
 12820                           
 12821                           ;Dimmer_B1.c: 400: ;;
 12822                           ;Dimmer_B1.c: 401: setMemory_GO(1);
 12823  10B8  3001               	movlw	1
 12824  10B9  3190  20E6         	fcall	_setMemory_GO
 12825  10BB  0008               	return
 12826  10BC                     __end_of_DimmerLights_Close:	
 12827                           
 12828                           	psect	text82
 12829  10E6                     __ptext82:	
 12830 ;; *************** function _setMemory_GO *****************
 12831 ;; Defined at:
 12832 ;;		line 885 in file "../src/MCU_B1.c"
 12833 ;; Parameters:    Size  Location     Type
 12834 ;;  command         1    wreg     unsigned char 
 12835 ;; Auto vars:     Size  Location     Type
 12836 ;;  command         1    2[BANK0 ] unsigned char 
 12837 ;; Return value:  Size  Location     Type
 12838 ;;		None               void
 12839 ;; Registers used:
 12840 ;;		wreg, status,2, status,0
 12841 ;; Tracked objects:
 12842 ;;		On entry : 0/0
 12843 ;;		On exit  : 0/0
 12844 ;;		Unchanged: 0/0
 12845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12847 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12848 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12849 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12850 ;;Total ram usage:        3 bytes
 12851 ;; Hardware stack levels used:    1
 12852 ;; Hardware stack levels required when called:    5
 12853 ;; This function calls:
 12854 ;;		Nothing
 12855 ;; This function is called by:
 12856 ;;		_DimmerLights_Close
 12857 ;;		_setDimmerLights
 12858 ;; This function uses a non-reentrant model
 12859 ;;
 12860                           
 12861                           
 12862                           ;psect for function _setMemory_GO
 12863  10E6                     _setMemory_GO:	
 12864                           
 12865                           ;incstack = 0
 12866                           ; Regs used in _setMemory_GO: [wreg+status,2+status,0]
 12867                           ;setMemory_GO@command stored from wreg
 12868  10E6  0020               	movlb	0	; select bank0
 12869  10E7  00A2               	movwf	setMemory_GO@command
 12870                           
 12871                           ;MCU_B1.c: 886: Memory.GO = command;
 12872  10E8  0822               	movf	setMemory_GO@command,w
 12873  10E9  0022               	movlb	2	; select bank2
 12874  10EA  10E1               	bcf	(_Memory^(0+256)+36),1
 12875  10EB  1D03               	skipz
 12876  10EC  14E1               	bsf	(_Memory^(0+256)+36),1
 12877                           
 12878                           ;MCU_B1.c: 887: if (command == 0) {
 12879  10ED  0020               	movlb	0	; select bank0
 12880  10EE  08A2               	movf	setMemory_GO@command,f
 12881  10EF  1D03               	skipz
 12882  10F0  0008               	return
 12883                           
 12884                           ;MCU_B1.c: 888: Memory.Time = command;
 12885  10F1  0822               	movf	setMemory_GO@command,w
 12886  10F2  00A0               	movwf	??_setMemory_GO
 12887  10F3  01A1               	clrf	??_setMemory_GO+1
 12888  10F4  0820               	movf	??_setMemory_GO,w
 12889  10F5  0022               	movlb	2	; select bank2
 12890  10F6  00DF               	movwf	(_Memory^(0+256)+34)
 12891  10F7  0020               	movlb	0	; select bank0
 12892  10F8  0821               	movf	??_setMemory_GO+1,w
 12893  10F9  0022               	movlb	2	; select bank2
 12894  10FA  00E0               	movwf	((_Memory+1)^(0+256)+34)
 12895  10FB  0008               	return
 12896  10FC                     __end_of_setMemory_GO:	
 12897                           
 12898                           	psect	text83
 12899  1066                     __ptext83:	
 12900 ;; *************** function _getDimmerLights_StatusFlag *****************
 12901 ;; Defined at:
 12902 ;;		line 475 in file "../src/Dimmer_B1.c"
 12903 ;; Parameters:    Size  Location     Type
 12904 ;;		None
 12905 ;; Auto vars:     Size  Location     Type
 12906 ;;  Status          1    0[BANK0 ] unsigned char 
 12907 ;; Return value:  Size  Location     Type
 12908 ;;                  1    wreg      unsigned char 
 12909 ;; Registers used:
 12910 ;;		wreg, status,2
 12911 ;; Tracked objects:
 12912 ;;		On entry : 0/0
 12913 ;;		On exit  : 0/0
 12914 ;;		Unchanged: 0/0
 12915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12917 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12919 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12920 ;;Total ram usage:        1 bytes
 12921 ;; Hardware stack levels used:    1
 12922 ;; Hardware stack levels required when called:    5
 12923 ;; This function calls:
 12924 ;;		Nothing
 12925 ;; This function is called by:
 12926 ;;		_DimmerLights_Close
 12927 ;;		_DimmerLights_Exceptions
 12928 ;; This function uses a non-reentrant model
 12929 ;;
 12930                           
 12931                           
 12932                           ;psect for function _getDimmerLights_StatusFlag
 12933  1066                     _getDimmerLights_StatusFlag:	
 12934                           
 12935                           ;Dimmer_B1.c: 476: char Status = 0;
 12936                           
 12937                           ;incstack = 0
 12938                           ; Regs used in _getDimmerLights_StatusFlag: [wreg+status,2]
 12939  1066  0020               	movlb	0	; select bank0
 12940  1067  01A0               	clrf	getDimmerLights_StatusFlag@Status
 12941                           
 12942                           ;Dimmer_B1.c: 487: Status = (DimmerLights1.StatusFlag == 1) ? 1 : 0;
 12943  1068  3000               	movlw	0
 12944  1069  0023               	movlb	3	; select bank3
 12945  106A  1B40               	btfsc	_DimmerLights1^(0+384),6
 12946  106B  3001               	movlw	1
 12947  106C  0020               	movlb	0	; select bank0
 12948  106D  00A0               	movwf	getDimmerLights_StatusFlag@Status
 12949                           
 12950                           ;Dimmer_B1.c: 490: return Status;
 12951  106E  0820               	movf	getDimmerLights_StatusFlag@Status,w
 12952  106F  0008               	return
 12953  1070                     __end_of_getDimmerLights_StatusFlag:	
 12954                           
 12955                           	psect	text84
 12956  1F0F                     __ptext84:	
 12957 ;; *************** function _DimmerLights_Initialization *****************
 12958 ;; Defined at:
 12959 ;;		line 334 in file "../src/Dimmer_B1.c"
 12960 ;; Parameters:    Size  Location     Type
 12961 ;;		None
 12962 ;; Auto vars:     Size  Location     Type
 12963 ;;		None
 12964 ;; Return value:  Size  Location     Type
 12965 ;;		None               void
 12966 ;; Registers used:
 12967 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12968 ;; Tracked objects:
 12969 ;;		On entry : 0/0
 12970 ;;		On exit  : 0/0
 12971 ;;		Unchanged: 0/0
 12972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12975 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12976 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12977 ;;Total ram usage:        1 bytes
 12978 ;; Hardware stack levels used:    1
 12979 ;; Hardware stack levels required when called:    7
 12980 ;; This function calls:
 12981 ;;		_Dimmer_Initialization
 12982 ;;		_setDimmerLights_Initialization
 12983 ;; This function is called by:
 12984 ;;		_main
 12985 ;; This function uses a non-reentrant model
 12986 ;;
 12987                           
 12988                           
 12989                           ;psect for function _DimmerLights_Initialization
 12990  1F0F                     _DimmerLights_Initialization:	
 12991                           
 12992                           ;Dimmer_B1.c: 337: DimmerLights11 = &DimmerLights1;
 12993                           
 12994                           ;incstack = 0
 12995                           ; Regs used in _DimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 12996  1F0F  30C0               	movlw	_DimmerLights1& (0+255)
 12997  1F10  0020               	movlb	0	; select bank0
 12998  1F11  00A4               	movwf	??_DimmerLights_Initialization
 12999  1F12  0824               	movf	??_DimmerLights_Initialization,w
 13000  1F13  0021               	movlb	1	; select bank1
 13001  1F14  00D1               	movwf	_DimmerLights11^(0+128)
 13002                           
 13003                           ;Dimmer_B1.c: 338: setDimmerLights_Initialization(1);
 13004  1F15  3001               	movlw	1
 13005  1F16  3193  2395  319F   	fcall	_setDimmerLights_Initialization
 13006                           
 13007                           ;Dimmer_B1.c: 352: Dimmer_Initialization();
 13008  1F19  319E  2630         	fcall	_Dimmer_Initialization
 13009  1F1B  0008               	return
 13010  1F1C                     __end_of_DimmerLights_Initialization:	
 13011                           
 13012                           	psect	text85
 13013  1395                     __ptext85:	
 13014 ;; *************** function _setDimmerLights_Initialization *****************
 13015 ;; Defined at:
 13016 ;;		line 357 in file "../src/Dimmer_B1.c"
 13017 ;; Parameters:    Size  Location     Type
 13018 ;;  lights          1    wreg     unsigned char 
 13019 ;; Auto vars:     Size  Location     Type
 13020 ;;  lights          1    3[BANK0 ] unsigned char 
 13021 ;; Return value:  Size  Location     Type
 13022 ;;		None               void
 13023 ;; Registers used:
 13024 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13025 ;; Tracked objects:
 13026 ;;		On entry : 0/0
 13027 ;;		On exit  : 0/0
 13028 ;;		Unchanged: 0/0
 13029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13031 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13032 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13033 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13034 ;;Total ram usage:        2 bytes
 13035 ;; Hardware stack levels used:    1
 13036 ;; Hardware stack levels required when called:    6
 13037 ;; This function calls:
 13038 ;;		_DimmerLightsPointSelect
 13039 ;; This function is called by:
 13040 ;;		_DimmerLights_Initialization
 13041 ;; This function uses a non-reentrant model
 13042 ;;
 13043                           
 13044                           
 13045                           ;psect for function _setDimmerLights_Initialization
 13046  1395                     _setDimmerLights_Initialization:	
 13047                           
 13048                           ;incstack = 0
 13049                           ; Regs used in _setDimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
 13050                           ;setDimmerLights_Initialization@lights stored from wreg
 13051  1395  0020               	movlb	0	; select bank0
 13052  1396  00A3               	movwf	setDimmerLights_Initialization@lights
 13053                           
 13054                           ;Dimmer_B1.c: 359: DimmerLightsPointSelect(lights);
 13055  1397  0823               	movf	setDimmerLights_Initialization@lights,w
 13056  1398  319E  26B1         	fcall	_DimmerLightsPointSelect
 13057                           
 13058                           ;Dimmer_B1.c: 360: DimmerLights->Clear = 1;
 13059  139A  0020               	movlb	0	; select bank0
 13060  139B  086D               	movf	_DimmerLights,w
 13061  139C  3E09               	addlw	9
 13062  139D  0086               	movwf	6
 13063  139E  3001               	movlw	1	; select bank2/3
 13064  139F  0087               	movwf	7
 13065  13A0  1501               	bsf	1,2
 13066                           
 13067                           ;Dimmer_B1.c: 366: DimmerLights->MaxmumValue = ((char)((100-60)*0.8));
 13068  13A1  3020               	movlw	32
 13069  13A2  00A2               	movwf	??_setDimmerLights_Initialization
 13070  13A3  086D               	movf	_DimmerLights,w
 13071  13A4  3E05               	addlw	5
 13072  13A5  0086               	movwf	6
 13073  13A6  3001               	movlw	1	; select bank2/3
 13074  13A7  0087               	movwf	7
 13075  13A8  0822               	movf	??_setDimmerLights_Initialization,w
 13076  13A9  0081               	movwf	1
 13077                           
 13078                           ;Dimmer_B1.c: 367: DimmerLights->MinimumValue = ((char)((100-25)*0.8));
 13079  13AA  303C               	movlw	60
 13080  13AB  00A2               	movwf	??_setDimmerLights_Initialization
 13081  13AC  086D               	movf	_DimmerLights,w
 13082  13AD  3E06               	addlw	6
 13083  13AE  0086               	movwf	6
 13084  13AF  3001               	movlw	1	; select bank2/3
 13085  13B0  0087               	movwf	7
 13086  13B1  0822               	movf	??_setDimmerLights_Initialization,w
 13087  13B2  0081               	movwf	1
 13088                           
 13089                           ;Dimmer_B1.c: 377: DimmerLights->DimmingValue = DimmerLights->MinimumValue;
 13090  13B3  086D               	movf	_DimmerLights,w
 13091  13B4  3E06               	addlw	6
 13092  13B5  0086               	movwf	6
 13093  13B6  3001               	movlw	1	; select bank2/3
 13094  13B7  0087               	movwf	7
 13095  13B8  0801               	movf	1,w
 13096  13B9  00A2               	movwf	??_setDimmerLights_Initialization
 13097  13BA  086D               	movf	_DimmerLights,w
 13098  13BB  3E04               	addlw	4
 13099  13BC  0086               	movwf	6
 13100  13BD  3001               	movlw	1	; select bank2/3
 13101  13BE  0087               	movwf	7
 13102  13BF  0822               	movf	??_setDimmerLights_Initialization,w
 13103  13C0  0081               	movwf	1
 13104  13C1  0008               	return
 13105  13C2                     __end_of_setDimmerLights_Initialization:	
 13106                           
 13107                           	psect	text86
 13108  1E30                     __ptext86:	
 13109 ;; *************** function _Dimmer_Initialization *****************
 13110 ;; Defined at:
 13111 ;;		line 786 in file "../src/Dimmer_B1.c"
 13112 ;; Parameters:    Size  Location     Type
 13113 ;;		None
 13114 ;; Auto vars:     Size  Location     Type
 13115 ;;		None
 13116 ;; Return value:  Size  Location     Type
 13117 ;;		None               void
 13118 ;; Registers used:
 13119 ;;		wreg
 13120 ;; Tracked objects:
 13121 ;;		On entry : 0/0
 13122 ;;		On exit  : 0/0
 13123 ;;		Unchanged: 0/0
 13124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13127 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13128 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13129 ;;Total ram usage:        1 bytes
 13130 ;; Hardware stack levels used:    1
 13131 ;; Hardware stack levels required when called:    5
 13132 ;; This function calls:
 13133 ;;		Nothing
 13134 ;; This function is called by:
 13135 ;;		_DimmerLights_Initialization
 13136 ;; This function uses a non-reentrant model
 13137 ;;
 13138                           
 13139                           
 13140                           ;psect for function _Dimmer_Initialization
 13141  1E30                     _Dimmer_Initialization:	
 13142                           
 13143                           ;Dimmer_B1.c: 788: Dimmer = &Dimmer1;
 13144                           
 13145                           ;incstack = 0
 13146                           ; Regs used in _Dimmer_Initialization: [wreg]
 13147  1E30  30EB               	movlw	_Dimmer1& (0+255)
 13148  1E31  0020               	movlb	0	; select bank0
 13149  1E32  00A0               	movwf	??_Dimmer_Initialization
 13150  1E33  0820               	movf	??_Dimmer_Initialization,w
 13151  1E34  0021               	movlb	1	; select bank1
 13152  1E35  00D0               	movwf	_Dimmer^(0+128)
 13153  1E36  0008               	return
 13154  1E37                     __end_of_Dimmer_Initialization:	
 13155                           
 13156                           	psect	text87
 13157  1E0F                     __ptext87:	
 13158 ;; *************** function _DelayOff_Main *****************
 13159 ;; Defined at:
 13160 ;;		line 41 in file "../src/DelayOff_B1.c"
 13161 ;; Parameters:    Size  Location     Type
 13162 ;;		None
 13163 ;; Auto vars:     Size  Location     Type
 13164 ;;		None
 13165 ;; Return value:  Size  Location     Type
 13166 ;;		None               void
 13167 ;; Registers used:
 13168 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13169 ;; Tracked objects:
 13170 ;;		On entry : 0/0
 13171 ;;		On exit  : 0/0
 13172 ;;		Unchanged: 0/0
 13173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13178 ;;Total ram usage:        0 bytes
 13179 ;; Hardware stack levels used:    1
 13180 ;; Hardware stack levels required when called:   10
 13181 ;; This function calls:
 13182 ;;		_DlyOff_Main
 13183 ;; This function is called by:
 13184 ;;		_main
 13185 ;; This function uses a non-reentrant model
 13186 ;;
 13187                           
 13188                           
 13189                           ;psect for function _DelayOff_Main
 13190  1E0F                     _DelayOff_Main:	
 13191                           
 13192                           ;DelayOff_B1.c: 43: DlyOff_Main(1);
 13193                           
 13194                           ;incstack = 0
 13195                           ; Regs used in _DelayOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13196  1E0F  3001               	movlw	1
 13197  1E10  318D  257E         	fcall	_DlyOff_Main
 13198  1E12  0008               	return
 13199  1E13                     __end_of_DelayOff_Main:	
 13200                           
 13201                           	psect	text88
 13202  0D7E                     __ptext88:	
 13203 ;; *************** function _DlyOff_Main *****************
 13204 ;; Defined at:
 13205 ;;		line 62 in file "../src/DelayOff_B1.c"
 13206 ;; Parameters:    Size  Location     Type
 13207 ;;  sw              1    wreg     unsigned char 
 13208 ;; Auto vars:     Size  Location     Type
 13209 ;;  sw              1   68[BANK0 ] unsigned char 
 13210 ;; Return value:  Size  Location     Type
 13211 ;;		None               void
 13212 ;; Registers used:
 13213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13214 ;; Tracked objects:
 13215 ;;		On entry : 0/0
 13216 ;;		On exit  : 0/0
 13217 ;;		Unchanged: 0/0
 13218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13220 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13221 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13222 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13223 ;;Total ram usage:        3 bytes
 13224 ;; Hardware stack levels used:    1
 13225 ;; Hardware stack levels required when called:    9
 13226 ;; This function calls:
 13227 ;;		_DelayOffPointSelect
 13228 ;;		_setBuz
 13229 ;;		_setDimmerLights_Switch
 13230 ;;		_setDimmerLights_Trigger
 13231 ;;		_setRFSW_Status
 13232 ;;		_setRF_DimmerLights
 13233 ;;		_setSw_Status
 13234 ;;		_setTxData
 13235 ;; This function is called by:
 13236 ;;		_DelayOff_Main
 13237 ;; This function uses a non-reentrant model
 13238 ;;
 13239                           
 13240                           
 13241                           ;psect for function _DlyOff_Main
 13242  0D7E                     _DlyOff_Main:	
 13243                           
 13244                           ;incstack = 0
 13245                           ; Regs used in _DlyOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13246                           ;DlyOff_Main@sw stored from wreg
 13247  0D7E  0020               	movlb	0	; select bank0
 13248  0D7F  00E4               	movwf	DlyOff_Main@sw
 13249                           
 13250                           ;DelayOff_B1.c: 63: DelayOffPointSelect(sw);
 13251  0D80  0864               	movf	DlyOff_Main@sw,w
 13252  0D81  319E  269B  318D   	fcall	_DelayOffPointSelect
 13253                           
 13254                           ;DelayOff_B1.c: 64: if (DelayOff->GO == 1) {
 13255  0D84  0878               	movf	_DelayOff,w
 13256  0D85  0086               	movwf	6
 13257  0D86  3001               	movlw	1	; select bank2/3
 13258  0D87  0087               	movwf	7
 13259  0D88  1C81               	btfss	1,1
 13260  0D89  0008               	return
 13261                           
 13262                           ;DelayOff_B1.c: 65: DelayOff->SecondTime++;
 13263  0D8A  0878               	movf	_DelayOff,w
 13264  0D8B  3E02               	addlw	2
 13265  0D8C  0086               	movwf	6
 13266  0D8D  3001               	movlw	1	; select bank2/3
 13267  0D8E  0087               	movwf	7
 13268  0D8F  3001               	movlw	1
 13269  0D90  0781               	addwf	1,f
 13270  0D91  3141               	addfsr 1,1
 13271  0D92  1803               	skipnc
 13272  0D93  0A81               	incf	1,f
 13273                           
 13274                           ;DelayOff_B1.c: 66: if (DelayOff->SecondTime >= 5600) {
 13275  0D94  0878               	movf	_DelayOff,w
 13276  0D95  3E02               	addlw	2
 13277  0D96  0086               	movwf	6
 13278  0D97  3001               	movlw	1	; select bank2/3
 13279  0D98  0087               	movwf	7
 13280  0D99  3F40               	moviw [0]fsr1
 13281  0D9A  0020               	movlb	0	; select bank0
 13282  0D9B  00E2               	movwf	??_DlyOff_Main
 13283  0D9C  3F41               	moviw [1]fsr1
 13284  0D9D  00E3               	movwf	??_DlyOff_Main+1
 13285  0D9E  3015               	movlw	21
 13286  0D9F  0263               	subwf	??_DlyOff_Main+1,w
 13287  0DA0  30E0               	movlw	224
 13288  0DA1  1903               	skipnz
 13289  0DA2  0262               	subwf	??_DlyOff_Main,w
 13290  0DA3  1C03               	skipc
 13291  0DA4  0008               	return
 13292                           
 13293                           ;DelayOff_B1.c: 67: DelayOff->SecondTime = 0;
 13294  0DA5  0878               	movf	_DelayOff,w
 13295  0DA6  3E02               	addlw	2
 13296  0DA7  0086               	movwf	6
 13297  0DA8  3001               	movlw	1	; select bank2/3
 13298  0DA9  0087               	movwf	7
 13299  0DAA  3000               	movlw	0
 13300  0DAB  3FC0               	movwi [0]fsr1
 13301  0DAC  3FC1               	movwi [1]fsr1
 13302                           
 13303                           ;DelayOff_B1.c: 68: DelayOff->MinuteTime++;
 13304  0DAD  3001               	movlw	1
 13305  0DAE  00E2               	movwf	??_DlyOff_Main
 13306  0DAF  0878               	movf	_DelayOff,w
 13307  0DB0  3E04               	addlw	4
 13308  0DB1  0086               	movwf	6
 13309  0DB2  3001               	movlw	1	; select bank2/3
 13310  0DB3  0087               	movwf	7
 13311  0DB4  0862               	movf	??_DlyOff_Main,w
 13312  0DB5  0781               	addwf	1,f
 13313                           
 13314                           ;DelayOff_B1.c: 69: if (DelayOff->MinuteTime >= DelayOff->Value) {
 13315  0DB6  0878               	movf	_DelayOff,w
 13316  0DB7  3E04               	addlw	4
 13317  0DB8  0086               	movwf	6
 13318  0DB9  3001               	movlw	1	; select bank2/3
 13319  0DBA  0087               	movwf	7
 13320  0DBB  0A78               	incf	_DelayOff,w
 13321  0DBC  0084               	movwf	4
 13322  0DBD  3001               	movlw	1	; select bank2/3
 13323  0DBE  0085               	movwf	5
 13324  0DBF  0800               	movf	0,w
 13325  0DC0  0201               	subwf	1,w
 13326  0DC1  1C03               	skipc
 13327  0DC2  0008               	return
 13328                           
 13329                           ;DelayOff_B1.c: 70: DelayOff->MinuteTime = 0;
 13330  0DC3  0878               	movf	_DelayOff,w
 13331  0DC4  3E04               	addlw	4
 13332  0DC5  0086               	movwf	6
 13333  0DC6  3001               	movlw	1	; select bank2/3
 13334  0DC7  0087               	movwf	7
 13335  0DC8  0181               	clrf	1
 13336                           
 13337                           ;DelayOff_B1.c: 71: DelayOff->GO = 0;
 13338  0DC9  0878               	movf	_DelayOff,w
 13339  0DCA  0086               	movwf	6
 13340  0DCB  3001               	movlw	1	; select bank2/3
 13341  0DCC  0087               	movwf	7
 13342  0DCD  1081               	bcf	1,1
 13343                           
 13344                           ;DelayOff_B1.c: 73: setSw_Status(sw, 0);
 13345  0DCE  01A2               	clrf	setSw_Status@command
 13346  0DCF  0864               	movf	DlyOff_Main@sw,w
 13347  0DD0  319F  2745  318D   	fcall	_setSw_Status
 13348                           
 13349                           ;DelayOff_B1.c: 74: setRFSW_Status(sw, 0);
 13350  0DD3  0020               	movlb	0	; select bank0
 13351  0DD4  01A2               	clrf	setRFSW_Status@command
 13352  0DD5  0864               	movf	DlyOff_Main@sw,w
 13353  0DD6  319F  2729  318D   	fcall	_setRFSW_Status
 13354                           
 13355                           ;DelayOff_B1.c: 75: setRF_DimmerLights(sw, 0);
 13356  0DD9  0020               	movlb	0	; select bank0
 13357  0DDA  01DD               	clrf	setRF_DimmerLights@on
 13358  0DDB  0864               	movf	DlyOff_Main@sw,w
 13359  0DDC  3187  2792  318D   	fcall	_setRF_DimmerLights
 13360                           
 13361                           ;DelayOff_B1.c: 76: setDimmerLights_Trigger(sw, 1);
 13362  0DDF  0020               	movlb	0	; select bank0
 13363  0DE0  01A2               	clrf	setDimmerLights_Trigger@command
 13364  0DE1  0AA2               	incf	setDimmerLights_Trigger@command,f
 13365  0DE2  0864               	movf	DlyOff_Main@sw,w
 13366  0DE3  319F  27AF  318D   	fcall	_setDimmerLights_Trigger
 13367                           
 13368                           ;DelayOff_B1.c: 77: setDimmerLights_Switch(sw, 0);
 13369  0DE6  0020               	movlb	0	; select bank0
 13370  0DE7  01A2               	clrf	setDimmerLights_Switch@command
 13371  0DE8  0864               	movf	DlyOff_Main@sw,w
 13372  0DE9  319F  279F  318D   	fcall	_setDimmerLights_Switch
 13373                           
 13374                           ;DelayOff_B1.c: 78: setTxData();
 13375  0DEC  3184  24F1  318D   	fcall	_setTxData
 13376                           
 13377                           ;DelayOff_B1.c: 79: setBuz(1, 100);
 13378  0DEF  3064               	movlw	100
 13379  0DF0  0020               	movlb	0	; select bank0
 13380  0DF1  00A9               	movwf	setBuz@time
 13381  0DF2  3000               	movlw	0
 13382  0DF3  00AA               	movwf	setBuz@time+1
 13383  0DF4  3001               	movlw	1
 13384  0DF5  3189  2134         	fcall	_setBuz
 13385  0DF7  0008               	return
 13386  0DF8                     __end_of_DlyOff_Main:	
 13387                           
 13388                           	psect	text89
 13389  04F1                     __ptext89:	
 13390 ;; *************** function _setTxData *****************
 13391 ;; Defined at:
 13392 ;;		line 138 in file "../src/RF_Control_B1.c"
 13393 ;; Parameters:    Size  Location     Type
 13394 ;;		None
 13395 ;; Auto vars:     Size  Location     Type
 13396 ;;  i               1    0        unsigned char 
 13397 ;; Return value:  Size  Location     Type
 13398 ;;		None               void
 13399 ;; Registers used:
 13400 ;;		wreg, fsr1l, fsr1h
 13401 ;; Tracked objects:
 13402 ;;		On entry : 0/0
 13403 ;;		On exit  : 0/0
 13404 ;;		Unchanged: 0/0
 13405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13408 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13409 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13410 ;;Total ram usage:        1 bytes
 13411 ;; Hardware stack levels used:    1
 13412 ;; Hardware stack levels required when called:    5
 13413 ;; This function calls:
 13414 ;;		Nothing
 13415 ;; This function is called by:
 13416 ;;		_DlyOff_Main
 13417 ;;		_setDimmerLights_Adj
 13418 ;;		_setControl_Lights_Table
 13419 ;;		_setRFSW_Control
 13420 ;;		_setRFSW_AdjControl
 13421 ;;		_Sw_DimmerOnFunc
 13422 ;;		_Sw_DimmerOffFunc
 13423 ;; This function uses a non-reentrant model
 13424 ;;
 13425                           
 13426                           
 13427                           ;psect for function _setTxData
 13428  04F1                     _setTxData:	
 13429                           
 13430                           ;RF_Control_B1.c: 139: char i;
 13431                           ;RF_Control_B1.c: 140: if (RF1.Enable == 1) {
 13432                           
 13433                           ;incstack = 0
 13434                           ; Regs used in _setTxData: [wregfsr1]
 13435  04F1  0021               	movlb	1	; select bank1
 13436  04F2  1C46               	btfss	_RF1^(0+128),0
 13437  04F3  0008               	return
 13438                           
 13439                           ;RF_Control_B1.c: 142: RF1.TransceiveGO = 1;
 13440  04F4  1546               	bsf	_RF1^(0+128),2
 13441                           
 13442                           ;RF_Control_B1.c: 152: RF_Data[0] = 0x63;
 13443  04F5  3063               	movlw	99
 13444  04F6  0020               	movlb	0	; select bank0
 13445  04F7  00A0               	movwf	??_setTxData
 13446  04F8  0820               	movf	??_setTxData,w
 13447  04F9  0022               	movlb	2	; select bank2
 13448  04FA  00A0               	movwf	_RF_Data^(0+256)
 13449                           
 13450                           ;RF_Control_B1.c: 153: RF_Data[1] = 0x02;
 13451  04FB  3002               	movlw	2
 13452  04FC  0020               	movlb	0	; select bank0
 13453  04FD  00A0               	movwf	??_setTxData
 13454  04FE  0820               	movf	??_setTxData,w
 13455  04FF  0022               	movlb	2	; select bank2
 13456  0500  00A1               	movwf	(_RF_Data^(0+256)+1)
 13457                           
 13458                           ;RF_Control_B1.c: 154: RF_Data[2] = product->Data[2];
 13459  0501  0020               	movlb	0	; select bank0
 13460  0502  086F               	movf	_product,w
 13461  0503  0086               	movwf	6
 13462  0504  3001               	movlw	1	; select bank2/3
 13463  0505  0087               	movwf	7
 13464  0506  3001               	movlw	1	; select bank2/3
 13465  0507  3F42               	moviw [2]fsr1
 13466  0508  0022               	movlb	2	; select bank2
 13467  0509  00A2               	movwf	(_RF_Data^(0+256)+2)
 13468                           
 13469                           ;RF_Control_B1.c: 155: RF_Data[3] = product->Data[3];
 13470  050A  0020               	movlb	0	; select bank0
 13471  050B  086F               	movf	_product,w
 13472  050C  0086               	movwf	6
 13473  050D  3001               	movlw	1	; select bank2/3
 13474  050E  0087               	movwf	7
 13475  050F  3001               	movlw	1	; select bank2/3
 13476  0510  3F43               	moviw [3]fsr1
 13477  0511  0022               	movlb	2	; select bank2
 13478  0512  00A3               	movwf	(_RF_Data^(0+256)+3)
 13479                           
 13480                           ;RF_Control_B1.c: 156: RF_Data[4] = product->Data[4];
 13481  0513  0020               	movlb	0	; select bank0
 13482  0514  086F               	movf	_product,w
 13483  0515  0086               	movwf	6
 13484  0516  3001               	movlw	1	; select bank2/3
 13485  0517  0087               	movwf	7
 13486  0518  3001               	movlw	1	; select bank2/3
 13487  0519  3F44               	moviw [4]fsr1
 13488  051A  0022               	movlb	2	; select bank2
 13489  051B  00A4               	movwf	(_RF_Data^(0+256)+4)
 13490                           
 13491                           ;RF_Control_B1.c: 157: RF_Data[5] = product->Data[5];
 13492  051C  0020               	movlb	0	; select bank0
 13493  051D  086F               	movf	_product,w
 13494  051E  0086               	movwf	6
 13495  051F  3001               	movlw	1	; select bank2/3
 13496  0520  0087               	movwf	7
 13497  0521  3001               	movlw	1	; select bank2/3
 13498  0522  3F45               	moviw [5]fsr1
 13499  0523  0022               	movlb	2	; select bank2
 13500  0524  00A5               	movwf	(_RF_Data^(0+256)+5)
 13501                           
 13502                           ;RF_Control_B1.c: 158: RF_Data[6] = product->Data[6];
 13503  0525  0020               	movlb	0	; select bank0
 13504  0526  086F               	movf	_product,w
 13505  0527  0086               	movwf	6
 13506  0528  3001               	movlw	1	; select bank2/3
 13507  0529  0087               	movwf	7
 13508  052A  3001               	movlw	1	; select bank2/3
 13509  052B  3F46               	moviw [6]fsr1
 13510  052C  0022               	movlb	2	; select bank2
 13511  052D  00A6               	movwf	(_RF_Data^(0+256)+6)
 13512                           
 13513                           ;RF_Control_B1.c: 159: RF_Data[7] = product->Data[7];
 13514  052E  0020               	movlb	0	; select bank0
 13515  052F  086F               	movf	_product,w
 13516  0530  0086               	movwf	6
 13517  0531  3001               	movlw	1	; select bank2/3
 13518  0532  0087               	movwf	7
 13519  0533  3001               	movlw	1	; select bank2/3
 13520  0534  3F47               	moviw [7]fsr1
 13521  0535  0022               	movlb	2	; select bank2
 13522  0536  00A7               	movwf	(_RF_Data^(0+256)+7)
 13523                           
 13524                           ;RF_Control_B1.c: 160: RF_Data[8] = product->Data[8];
 13525  0537  0020               	movlb	0	; select bank0
 13526  0538  086F               	movf	_product,w
 13527  0539  0086               	movwf	6
 13528  053A  3001               	movlw	1	; select bank2/3
 13529  053B  0087               	movwf	7
 13530  053C  3001               	movlw	1	; select bank2/3
 13531  053D  3F48               	moviw [8]fsr1
 13532  053E  0022               	movlb	2	; select bank2
 13533  053F  00A8               	movwf	(_RF_Data^(0+256)+8)
 13534                           
 13535                           ;RF_Control_B1.c: 161: RF_Data[9] = product->Data[9];
 13536  0540  0020               	movlb	0	; select bank0
 13537  0541  086F               	movf	_product,w
 13538  0542  0086               	movwf	6
 13539  0543  3001               	movlw	1	; select bank2/3
 13540  0544  0087               	movwf	7
 13541  0545  3001               	movlw	1	; select bank2/3
 13542  0546  3F49               	moviw [9]fsr1
 13543  0547  0022               	movlb	2	; select bank2
 13544  0548  00A9               	movwf	(_RF_Data^(0+256)+9)
 13545                           
 13546                           ;RF_Control_B1.c: 162: RF_Data[10] = product->Data[10];
 13547  0549  0020               	movlb	0	; select bank0
 13548  054A  086F               	movf	_product,w
 13549  054B  0086               	movwf	6
 13550  054C  3001               	movlw	1	; select bank2/3
 13551  054D  0087               	movwf	7
 13552  054E  3001               	movlw	1	; select bank2/3
 13553  054F  3F4A               	moviw [10]fsr1
 13554  0550  0022               	movlb	2	; select bank2
 13555  0551  00AA               	movwf	(_RF_Data^(0+256)+10)
 13556                           
 13557                           ;RF_Control_B1.c: 163: RF_Data[11] = product->Data[11];
 13558  0552  0020               	movlb	0	; select bank0
 13559  0553  086F               	movf	_product,w
 13560  0554  0086               	movwf	6
 13561  0555  3001               	movlw	1	; select bank2/3
 13562  0556  0087               	movwf	7
 13563  0557  3001               	movlw	1	; select bank2/3
 13564  0558  3F4B               	moviw [11]fsr1
 13565  0559  0022               	movlb	2	; select bank2
 13566  055A  00AB               	movwf	(_RF_Data^(0+256)+11)
 13567                           
 13568                           ;RF_Control_B1.c: 164: RF_Data[12] = product->Data[12];
 13569  055B  0020               	movlb	0	; select bank0
 13570  055C  086F               	movf	_product,w
 13571  055D  0086               	movwf	6
 13572  055E  3001               	movlw	1	; select bank2/3
 13573  055F  0087               	movwf	7
 13574  0560  3001               	movlw	1	; select bank2/3
 13575  0561  3F4C               	moviw [12]fsr1
 13576  0562  0022               	movlb	2	; select bank2
 13577  0563  00AC               	movwf	(_RF_Data^(0+256)+12)
 13578                           
 13579                           ;RF_Control_B1.c: 165: RF_Data[13] = product->Data[13];
 13580  0564  0020               	movlb	0	; select bank0
 13581  0565  086F               	movf	_product,w
 13582  0566  0086               	movwf	6
 13583  0567  3001               	movlw	1	; select bank2/3
 13584  0568  0087               	movwf	7
 13585  0569  3001               	movlw	1	; select bank2/3
 13586  056A  3F4D               	moviw [13]fsr1
 13587  056B  0022               	movlb	2	; select bank2
 13588  056C  00AD               	movwf	(_RF_Data^(0+256)+13)
 13589                           
 13590                           ;RF_Control_B1.c: 166: RF_Data[14] = product->Data[14];
 13591  056D  0020               	movlb	0	; select bank0
 13592  056E  086F               	movf	_product,w
 13593  056F  0086               	movwf	6
 13594  0570  3001               	movlw	1	; select bank2/3
 13595  0571  0087               	movwf	7
 13596  0572  3001               	movlw	1	; select bank2/3
 13597  0573  3F4E               	moviw [14]fsr1
 13598  0574  0022               	movlb	2	; select bank2
 13599  0575  00AE               	movwf	(_RF_Data^(0+256)+14)
 13600                           
 13601                           ;RF_Control_B1.c: 167: RF_Data[15] = product->Data[15];
 13602  0576  0020               	movlb	0	; select bank0
 13603  0577  086F               	movf	_product,w
 13604  0578  0086               	movwf	6
 13605  0579  3001               	movlw	1	; select bank2/3
 13606  057A  0087               	movwf	7
 13607  057B  3001               	movlw	1	; select bank2/3
 13608  057C  3F4F               	moviw [15]fsr1
 13609  057D  0022               	movlb	2	; select bank2
 13610  057E  00AF               	movwf	(_RF_Data^(0+256)+15)
 13611                           
 13612                           ;RF_Control_B1.c: 168: RF_Data[16] = product->Data[16];
 13613  057F  0020               	movlb	0	; select bank0
 13614  0580  086F               	movf	_product,w
 13615  0581  0086               	movwf	6
 13616  0582  3001               	movlw	1	; select bank2/3
 13617  0583  0087               	movwf	7
 13618  0584  3001               	movlw	1	; select bank2/3
 13619  0585  3F50               	moviw [16]fsr1
 13620  0586  0022               	movlb	2	; select bank2
 13621  0587  00B0               	movwf	(_RF_Data^(0+256)+16)
 13622                           
 13623                           ;RF_Control_B1.c: 169: RF_Data[17] = product->Data[17];
 13624  0588  0020               	movlb	0	; select bank0
 13625  0589  086F               	movf	_product,w
 13626  058A  0086               	movwf	6
 13627  058B  3001               	movlw	1	; select bank2/3
 13628  058C  0087               	movwf	7
 13629  058D  3001               	movlw	1	; select bank2/3
 13630  058E  3F51               	moviw [17]fsr1
 13631  058F  0022               	movlb	2	; select bank2
 13632  0590  00B1               	movwf	(_RF_Data^(0+256)+17)
 13633                           
 13634                           ;RF_Control_B1.c: 170: RF_Data[18] = product->Data[18];
 13635  0591  0020               	movlb	0	; select bank0
 13636  0592  086F               	movf	_product,w
 13637  0593  0086               	movwf	6
 13638  0594  3001               	movlw	1	; select bank2/3
 13639  0595  0087               	movwf	7
 13640  0596  3001               	movlw	1	; select bank2/3
 13641  0597  3F52               	moviw [18]fsr1
 13642  0598  0022               	movlb	2	; select bank2
 13643  0599  00B2               	movwf	(_RF_Data^(0+256)+18)
 13644                           
 13645                           ;RF_Control_B1.c: 171: RF_Data[19] = product->Data[19];
 13646  059A  0020               	movlb	0	; select bank0
 13647  059B  086F               	movf	_product,w
 13648  059C  0086               	movwf	6
 13649  059D  3001               	movlw	1	; select bank2/3
 13650  059E  0087               	movwf	7
 13651  059F  3001               	movlw	1	; select bank2/3
 13652  05A0  3F53               	moviw [19]fsr1
 13653  05A1  0022               	movlb	2	; select bank2
 13654  05A2  00B3               	movwf	(_RF_Data^(0+256)+19)
 13655                           
 13656                           ;RF_Control_B1.c: 172: RF_Data[20] = 209;
 13657  05A3  30D1               	movlw	209
 13658  05A4  0020               	movlb	0	; select bank0
 13659  05A5  00A0               	movwf	??_setTxData
 13660  05A6  0820               	movf	??_setTxData,w
 13661  05A7  0022               	movlb	2	; select bank2
 13662  05A8  00B4               	movwf	(_RF_Data^(0+256)+20)
 13663  05A9  0008               	return
 13664  05AA                     __end_of_setTxData:	
 13665                           
 13666                           	psect	text90
 13667  1F45                     __ptext90:	
 13668 ;; *************** function _setSw_Status *****************
 13669 ;; Defined at:
 13670 ;;		line 111 in file "../src/Switch_B1.c"
 13671 ;; Parameters:    Size  Location     Type
 13672 ;;  sw              1    wreg     unsigned char 
 13673 ;;  command         1    2[BANK0 ] unsigned char 
 13674 ;; Auto vars:     Size  Location     Type
 13675 ;;  sw              1    3[BANK0 ] unsigned char 
 13676 ;; Return value:  Size  Location     Type
 13677 ;;		None               void
 13678 ;; Registers used:
 13679 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13680 ;; Tracked objects:
 13681 ;;		On entry : 0/0
 13682 ;;		On exit  : 0/0
 13683 ;;		Unchanged: 0/0
 13684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13685 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13686 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13688 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13689 ;;Total ram usage:        2 bytes
 13690 ;; Hardware stack levels used:    1
 13691 ;; Hardware stack levels required when called:    6
 13692 ;; This function calls:
 13693 ;;		_SwPointSelect
 13694 ;; This function is called by:
 13695 ;;		_DlyOff_Main
 13696 ;;		_setDimmerLights_ERROR
 13697 ;;		_setControl_Lights_Table
 13698 ;;		_setRFSW_Control
 13699 ;; This function uses a non-reentrant model
 13700 ;;
 13701                           
 13702                           
 13703                           ;psect for function _setSw_Status
 13704  1F45                     _setSw_Status:	
 13705                           
 13706                           ;incstack = 0
 13707                           ; Regs used in _setSw_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13708                           ;setSw_Status@sw stored from wreg
 13709  1F45  0020               	movlb	0	; select bank0
 13710  1F46  00A3               	movwf	setSw_Status@sw
 13711                           
 13712                           ;Switch_B1.c: 112: SwPointSelect(sw);
 13713  1F47  0823               	movf	setSw_Status@sw,w
 13714  1F48  319E  26C7         	fcall	_SwPointSelect
 13715                           
 13716                           ;Switch_B1.c: 113: Sw->Status = command;
 13717  1F4A  0020               	movlb	0	; select bank0
 13718  1F4B  086E               	movf	_Sw,w
 13719  1F4C  0086               	movwf	6
 13720  1F4D  3001               	movlw	1	; select bank2/3
 13721  1F4E  0087               	movwf	7
 13722  1F4F  0822               	movf	setSw_Status@command,w
 13723  1F50  1301               	bcf	1,6
 13724  1F51  1D03               	skipz
 13725  1F52  1701               	bsf	1,6
 13726  1F53  0008               	return
 13727  1F54                     __end_of_setSw_Status:	
 13728                           
 13729                           	psect	text91
 13730  1EC7                     __ptext91:	
 13731 ;; *************** function _SwPointSelect *****************
 13732 ;; Defined at:
 13733 ;;		line 21 in file "../src/Switch_B1.c"
 13734 ;; Parameters:    Size  Location     Type
 13735 ;;  sw              1    wreg     unsigned char 
 13736 ;; Auto vars:     Size  Location     Type
 13737 ;;  sw              1    1[BANK0 ] unsigned char 
 13738 ;; Return value:  Size  Location     Type
 13739 ;;		None               void
 13740 ;; Registers used:
 13741 ;;		wreg
 13742 ;; Tracked objects:
 13743 ;;		On entry : 0/0
 13744 ;;		On exit  : 0/0
 13745 ;;		Unchanged: 0/0
 13746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13748 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13749 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13750 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13751 ;;Total ram usage:        2 bytes
 13752 ;; Hardware stack levels used:    1
 13753 ;; Hardware stack levels required when called:    5
 13754 ;; This function calls:
 13755 ;;		Nothing
 13756 ;; This function is called by:
 13757 ;;		_setSw_Enable
 13758 ;;		_setSw_Status
 13759 ;;		_setSw_Main
 13760 ;;		_Sw_Detect
 13761 ;; This function uses a non-reentrant model
 13762 ;;
 13763                           
 13764                           
 13765                           ;psect for function _SwPointSelect
 13766  1EC7                     _SwPointSelect:	
 13767                           
 13768                           ;incstack = 0
 13769                           ; Regs used in _SwPointSelect: [wreg]
 13770                           ;SwPointSelect@sw stored from wreg
 13771  1EC7  0020               	movlb	0	; select bank0
 13772  1EC8  00A1               	movwf	SwPointSelect@sw
 13773                           
 13774                           ;Switch_B1.c: 24: if (sw == 1) {
 13775  1EC9  0821               	movf	SwPointSelect@sw,w
 13776  1ECA  3A01               	xorlw	1
 13777  1ECB  1D03               	skipz
 13778  1ECC  0008               	return
 13779                           
 13780                           ;Switch_B1.c: 25: Sw = &Sw1;
 13781  1ECD  30CF               	movlw	_Sw1& (0+255)
 13782  1ECE  00A0               	movwf	??_SwPointSelect
 13783  1ECF  0820               	movf	??_SwPointSelect,w
 13784  1ED0  00EE               	movwf	_Sw
 13785  1ED1  0008               	return
 13786  1ED2                     __end_of_SwPointSelect:	
 13787                           
 13788                           	psect	text92
 13789  0792                     __ptext92:	
 13790 ;; *************** function _setRF_DimmerLights *****************
 13791 ;; Defined at:
 13792 ;;		line 397 in file "../src/RF_Control_B1.c"
 13793 ;; Parameters:    Size  Location     Type
 13794 ;;  lights          1    wreg     unsigned char 
 13795 ;;  on              1   61[BANK0 ] unsigned char 
 13796 ;; Auto vars:     Size  Location     Type
 13797 ;;  lights          1   65[BANK0 ] unsigned char 
 13798 ;;  status          1   64[BANK0 ] unsigned char 
 13799 ;; Return value:  Size  Location     Type
 13800 ;;		None               void
 13801 ;; Registers used:
 13802 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13803 ;; Tracked objects:
 13804 ;;		On entry : 0/0
 13805 ;;		On exit  : 0/0
 13806 ;;		Unchanged: 0/0
 13807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13808 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13809 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13810 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13811 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13812 ;;Total ram usage:        5 bytes
 13813 ;; Hardware stack levels used:    1
 13814 ;; Hardware stack levels required when called:    8
 13815 ;; This function calls:
 13816 ;;		_setPercentValue
 13817 ;; This function is called by:
 13818 ;;		_DlyOff_Main
 13819 ;;		_setDimmerLights_Adj
 13820 ;;		_setRFSW_Control
 13821 ;;		_Sw_DimmerOnFunc
 13822 ;;		_Sw_DimmerOffFunc
 13823 ;; This function uses a non-reentrant model
 13824 ;;
 13825                           
 13826                           
 13827                           ;psect for function _setRF_DimmerLights
 13828  0792                     _setRF_DimmerLights:	
 13829                           
 13830                           ;incstack = 0
 13831                           ; Regs used in _setRF_DimmerLights: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13832                           ;setRF_DimmerLights@lights stored from wreg
 13833  0792  0020               	movlb	0	; select bank0
 13834  0793  00E1               	movwf	setRF_DimmerLights@lights
 13835                           
 13836                           ;RF_Control_B1.c: 398: char status;
 13837                           ;RF_Control_B1.c: 399: status = 1;
 13838  0794  01E0               	clrf	setRF_DimmerLights@status
 13839  0795  0AE0               	incf	setRF_DimmerLights@status,f
 13840                           
 13841                           ;RF_Control_B1.c: 400: status <<= (lights - 1);
 13842  0796  0861               	movf	setRF_DimmerLights@lights,w
 13843  0797  3EFF               	addlw	-1
 13844  0798  0A89               	incf	9,f
 13845  0799  2F9C               	goto	u4370
 13846  079A                     u4375:	
 13847  079A  1003               	clrc
 13848  079B  0DE0               	rlf	setRF_DimmerLights@status,f
 13849  079C                     u4370:	
 13850  079C  3EFF               	addlw	-1
 13851  079D  1D03               	skipz
 13852  079E  2F9A               	goto	u4375
 13853                           
 13854                           ;RF_Control_B1.c: 401: product->Data[11]=lights;
 13855  079F  0861               	movf	setRF_DimmerLights@lights,w
 13856  07A0  00DE               	movwf	??_setRF_DimmerLights
 13857  07A1  086F               	movf	_product,w
 13858  07A2  3E0B               	addlw	11
 13859  07A3  0086               	movwf	6
 13860  07A4  3001               	movlw	1	; select bank2/3
 13861  07A5  0087               	movwf	7
 13862  07A6  085E               	movf	??_setRF_DimmerLights,w
 13863  07A7  0081               	movwf	1
 13864                           
 13865                           ;RF_Control_B1.c: 404: product->Data[(20 + lights)]=setPercentValue(((char)((100-60)*0.8
      +                          )));
 13866  07A8  3020               	movlw	32
 13867  07A9  3196  2605  3187   	fcall	_setPercentValue
 13868  07AC  0020               	movlb	0	; select bank0
 13869  07AD  00DE               	movwf	??_setRF_DimmerLights
 13870  07AE  0861               	movf	setRF_DimmerLights@lights,w
 13871  07AF  3E14               	addlw	20
 13872  07B0  076F               	addwf	_product,w
 13873  07B1  00DF               	movwf	??_setRF_DimmerLights+1
 13874  07B2  085F               	movf	??_setRF_DimmerLights+1,w
 13875  07B3  0086               	movwf	6
 13876  07B4  3001               	movlw	1	; select bank2/3
 13877  07B5  0087               	movwf	7
 13878  07B6  085E               	movf	??_setRF_DimmerLights,w
 13879  07B7  0081               	movwf	1
 13880                           
 13881                           ;RF_Control_B1.c: 407: product->Data[9]=product->Data[20 + lights];
 13882  07B8  0861               	movf	setRF_DimmerLights@lights,w
 13883  07B9  3E14               	addlw	20
 13884  07BA  076F               	addwf	_product,w
 13885  07BB  00DE               	movwf	??_setRF_DimmerLights
 13886  07BC  085E               	movf	??_setRF_DimmerLights,w
 13887  07BD  0086               	movwf	6
 13888  07BE  3001               	movlw	1	; select bank2/3
 13889  07BF  0087               	movwf	7
 13890  07C0  0801               	movf	1,w
 13891  07C1  00DF               	movwf	??_setRF_DimmerLights+1
 13892  07C2  086F               	movf	_product,w
 13893  07C3  3E09               	addlw	9
 13894  07C4  0086               	movwf	6
 13895  07C5  3001               	movlw	1	; select bank2/3
 13896  07C6  0087               	movwf	7
 13897  07C7  085F               	movf	??_setRF_DimmerLights+1,w
 13898  07C8  0081               	movwf	1
 13899                           
 13900                           ;RF_Control_B1.c: 408: product->Data[17]=product->Data[26 + lights];
 13901  07C9  0861               	movf	setRF_DimmerLights@lights,w
 13902  07CA  3E1A               	addlw	26
 13903  07CB  076F               	addwf	_product,w
 13904  07CC  00DE               	movwf	??_setRF_DimmerLights
 13905  07CD  085E               	movf	??_setRF_DimmerLights,w
 13906  07CE  0086               	movwf	6
 13907  07CF  3001               	movlw	1	; select bank2/3
 13908  07D0  0087               	movwf	7
 13909  07D1  0801               	movf	1,w
 13910  07D2  00DF               	movwf	??_setRF_DimmerLights+1
 13911  07D3  086F               	movf	_product,w
 13912  07D4  3E11               	addlw	17
 13913  07D5  0086               	movwf	6
 13914  07D6  3001               	movlw	1	; select bank2/3
 13915  07D7  0087               	movwf	7
 13916  07D8  085F               	movf	??_setRF_DimmerLights+1,w
 13917  07D9  0081               	movwf	1
 13918                           
 13919                           ;RF_Control_B1.c: 409: if (on == 1) {
 13920  07DA  085D               	movf	setRF_DimmerLights@on,w
 13921  07DB  3A01               	xorlw	1
 13922  07DC  1D03               	skipz
 13923  07DD  2FEE               	goto	l5605
 13924                           
 13925                           ;RF_Control_B1.c: 410: product->Data[15]=(product->Data[15] | status);
 13926  07DE  086F               	movf	_product,w
 13927  07DF  3E0F               	addlw	15
 13928  07E0  0086               	movwf	6
 13929  07E1  3001               	movlw	1	; select bank2/3
 13930  07E2  0087               	movwf	7
 13931  07E3  0801               	movf	1,w
 13932  07E4  0460               	iorwf	setRF_DimmerLights@status,w
 13933  07E5  00DE               	movwf	??_setRF_DimmerLights
 13934  07E6  086F               	movf	_product,w
 13935  07E7  3E0F               	addlw	15
 13936  07E8  0086               	movwf	6
 13937  07E9  3001               	movlw	1	; select bank2/3
 13938  07EA  0087               	movwf	7
 13939  07EB  085E               	movf	??_setRF_DimmerLights,w
 13940  07EC  0081               	movwf	1
 13941                           
 13942                           ;RF_Control_B1.c: 411: } else {
 13943  07ED  0008               	return
 13944  07EE                     l5605:	
 13945                           
 13946                           ;RF_Control_B1.c: 412: product->Data[15]=(product->Data[15]&(~status));
 13947  07EE  086F               	movf	_product,w
 13948  07EF  3E0F               	addlw	15
 13949  07F0  0086               	movwf	6
 13950  07F1  3001               	movlw	1	; select bank2/3
 13951  07F2  0087               	movwf	7
 13952  07F3  0960               	comf	setRF_DimmerLights@status,w
 13953  07F4  0501               	andwf	1,w
 13954  07F5  00DE               	movwf	??_setRF_DimmerLights
 13955  07F6  086F               	movf	_product,w
 13956  07F7  3E0F               	addlw	15
 13957  07F8  0086               	movwf	6
 13958  07F9  3001               	movlw	1	; select bank2/3
 13959  07FA  0087               	movwf	7
 13960  07FB  085E               	movf	??_setRF_DimmerLights,w
 13961  07FC  0081               	movwf	1
 13962  07FD  0008               	return
 13963  07FE                     __end_of_setRF_DimmerLights:	
 13964                           
 13965                           	psect	text93
 13966  1605                     __ptext93:	
 13967 ;; *************** function _setPercentValue *****************
 13968 ;; Defined at:
 13969 ;;		line 768 in file "../src/Dimmer_B1.c"
 13970 ;; Parameters:    Size  Location     Type
 13971 ;;  value           1    wreg     unsigned char 
 13972 ;; Auto vars:     Size  Location     Type
 13973 ;;  value           1   57[BANK0 ] unsigned char 
 13974 ;;  i               3   58[BANK0 ] float 
 13975 ;; Return value:  Size  Location     Type
 13976 ;;                  1    wreg      unsigned char 
 13977 ;; Registers used:
 13978 ;;		wreg, status,2, status,0, pclath, cstack
 13979 ;; Tracked objects:
 13980 ;;		On entry : 0/0
 13981 ;;		On exit  : 0/0
 13982 ;;		Unchanged: 0/0
 13983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13985 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13987 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13988 ;;Total ram usage:        4 bytes
 13989 ;; Hardware stack levels used:    1
 13990 ;; Hardware stack levels required when called:    7
 13991 ;; This function calls:
 13992 ;;		___awtoft
 13993 ;;		___ftdiv
 13994 ;;		___fttol
 13995 ;; This function is called by:
 13996 ;;		_Flash_Memory_Initialization
 13997 ;;		_setRF_DimmerLights
 13998 ;; This function uses a non-reentrant model
 13999 ;;
 14000                           
 14001                           
 14002                           ;psect for function _setPercentValue
 14003  1605                     _setPercentValue:	
 14004                           
 14005                           ;incstack = 0
 14006                           ; Regs used in _setPercentValue: [wreg+status,2+status,0+pclath+cstack]
 14007                           ;setPercentValue@value stored from wreg
 14008  1605  0020               	movlb	0	; select bank0
 14009  1606  00D9               	movwf	setPercentValue@value
 14010                           
 14011                           ;Dimmer_B1.c: 770: float i = ((char)((100-25)*0.8)) - ((char)((100-60)*0.8));
 14012  1607  3000               	movlw	0
 14013  1608  00DA               	movwf	setPercentValue@i
 14014  1609  30E0               	movlw	224
 14015  160A  00DB               	movwf	setPercentValue@i+1
 14016  160B  3041               	movlw	65
 14017  160C  00DC               	movwf	setPercentValue@i+2
 14018                           
 14019                           ;Dimmer_B1.c: 771: i /= 100;
 14020  160D  3000               	movlw	0
 14021  160E  00AE               	movwf	___ftdiv@f2
 14022  160F  30C8               	movlw	200
 14023  1610  00AF               	movwf	___ftdiv@f2+1
 14024  1611  3042               	movlw	66
 14025  1612  00B0               	movwf	___ftdiv@f2+2
 14026  1613  085A               	movf	setPercentValue@i,w
 14027  1614  00B1               	movwf	___ftdiv@f1
 14028  1615  085B               	movf	setPercentValue@i+1,w
 14029  1616  00B2               	movwf	___ftdiv@f1+1
 14030  1617  085C               	movf	setPercentValue@i+2,w
 14031  1618  00B3               	movwf	___ftdiv@f1+2
 14032  1619  3186  265E  3196   	fcall	___ftdiv
 14033  161C  0020               	movlb	0	; select bank0
 14034  161D  082E               	movf	?___ftdiv,w
 14035  161E  00DA               	movwf	setPercentValue@i
 14036  161F  082F               	movf	?___ftdiv+1,w
 14037  1620  00DB               	movwf	setPercentValue@i+1
 14038  1621  0830               	movf	?___ftdiv+2,w
 14039  1622  00DC               	movwf	setPercentValue@i+2
 14040                           
 14041                           ;Dimmer_B1.c: 772: return (100 - (char) ((value - ((char)((100-60)*0.8))) / i));
 14042  1623  0859               	movf	setPercentValue@value,w
 14043  1624  3EE0               	addlw	224
 14044  1625  00A8               	movwf	___awtoft@c
 14045  1626  30FF               	movlw	255
 14046  1627  1803               	skipnc
 14047  1628  3000               	movlw	0
 14048  1629  00A9               	movwf	___awtoft@c+1
 14049  162A  3192  221D  3196   	fcall	___awtoft
 14050  162D  0020               	movlb	0	; select bank0
 14051  162E  0828               	movf	?___awtoft,w
 14052  162F  00B1               	movwf	___ftdiv@f1
 14053  1630  0829               	movf	?___awtoft+1,w
 14054  1631  00B2               	movwf	___ftdiv@f1+1
 14055  1632  082A               	movf	?___awtoft+2,w
 14056  1633  00B3               	movwf	___ftdiv@f1+2
 14057  1634  085A               	movf	setPercentValue@i,w
 14058  1635  00AE               	movwf	___ftdiv@f2
 14059  1636  085B               	movf	setPercentValue@i+1,w
 14060  1637  00AF               	movwf	___ftdiv@f2+1
 14061  1638  085C               	movf	setPercentValue@i+2,w
 14062  1639  00B0               	movwf	___ftdiv@f2+2
 14063  163A  3186  265E  3196   	fcall	___ftdiv
 14064  163D  0020               	movlb	0	; select bank0
 14065  163E  082E               	movf	?___ftdiv,w
 14066  163F  00CB               	movwf	___fttol@f1
 14067  1640  082F               	movf	?___ftdiv+1,w
 14068  1641  00CC               	movwf	___fttol@f1+1
 14069  1642  0830               	movf	?___ftdiv+2,w
 14070  1643  00CD               	movwf	___fttol@f1+2
 14071  1644  318F  2779         	fcall	___fttol
 14072  1646  0020               	movlb	0	; select bank0
 14073  1647  034B               	decf	?___fttol,w
 14074  1648  3AFF               	xorlw	255
 14075  1649  3E64               	addlw	100
 14076  164A  0008               	return
 14077  164B                     __end_of_setPercentValue:	
 14078                           
 14079                           	psect	text94
 14080  0F79                     __ptext94:	
 14081 ;; *************** function ___fttol *****************
 14082 ;; Defined at:
 14083 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
 14084 ;; Parameters:    Size  Location     Type
 14085 ;;  f1              3   43[BANK0 ] float 
 14086 ;; Auto vars:     Size  Location     Type
 14087 ;;  lval            4   52[BANK0 ] unsigned long 
 14088 ;;  exp1            1   56[BANK0 ] unsigned char 
 14089 ;;  sign1           1   51[BANK0 ] unsigned char 
 14090 ;; Return value:  Size  Location     Type
 14091 ;;                  4   43[BANK0 ] long 
 14092 ;; Registers used:
 14093 ;;		wreg, status,2, status,0
 14094 ;; Tracked objects:
 14095 ;;		On entry : 0/0
 14096 ;;		On exit  : 0/0
 14097 ;;		Unchanged: 0/0
 14098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14099 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14100 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14101 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14102 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14103 ;;Total ram usage:       14 bytes
 14104 ;; Hardware stack levels used:    1
 14105 ;; Hardware stack levels required when called:    5
 14106 ;; This function calls:
 14107 ;;		Nothing
 14108 ;; This function is called by:
 14109 ;;		_getPercentValue
 14110 ;;		_setPercentValue
 14111 ;; This function uses a non-reentrant model
 14112 ;;
 14113                           
 14114                           
 14115                           ;psect for function ___fttol
 14116  0F79                     ___fttol:	
 14117                           
 14118                           ;incstack = 0
 14119                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 14120  0F79  0020               	movlb	0	; select bank0
 14121  0F7A  084B               	movf	___fttol@f1,w
 14122  0F7B  00CF               	movwf	??___fttol
 14123  0F7C  084C               	movf	___fttol@f1+1,w
 14124  0F7D  00D0               	movwf	??___fttol+1
 14125  0F7E  084D               	movf	___fttol@f1+2,w
 14126  0F7F  00D1               	movwf	??___fttol+2
 14127  0F80  1003               	clrc
 14128  0F81  0D50               	rlf	??___fttol+1,w
 14129  0F82  0D51               	rlf	??___fttol+2,w
 14130  0F83  00D2               	movwf	??___fttol+3
 14131  0F84  0852               	movf	??___fttol+3,w
 14132  0F85  00D8               	movwf	___fttol@exp1
 14133  0F86  08D8               	movf	___fttol@exp1,f
 14134  0F87  1D03               	skipz
 14135  0F88  2F92               	goto	l5387
 14136  0F89  3000               	movlw	0
 14137  0F8A  00CE               	movwf	?___fttol+3
 14138  0F8B  3000               	movlw	0
 14139  0F8C  00CD               	movwf	?___fttol+2
 14140  0F8D  3000               	movlw	0
 14141  0F8E  00CC               	movwf	?___fttol+1
 14142  0F8F  3000               	movlw	0
 14143  0F90  00CB               	movwf	?___fttol
 14144  0F91  0008               	return
 14145  0F92                     l5387:	
 14146  0F92  084B               	movf	___fttol@f1,w
 14147  0F93  00CF               	movwf	??___fttol
 14148  0F94  084C               	movf	___fttol@f1+1,w
 14149  0F95  00D0               	movwf	??___fttol+1
 14150  0F96  084D               	movf	___fttol@f1+2,w
 14151  0F97  00D1               	movwf	??___fttol+2
 14152  0F98  3017               	movlw	23
 14153  0F99                     u4035:	
 14154  0F99  36D1               	lsrf	??___fttol+2,f
 14155  0F9A  0CD0               	rrf	??___fttol+1,f
 14156  0F9B  0CCF               	rrf	??___fttol,f
 14157  0F9C  0B89               	decfsz	9,f
 14158  0F9D  2F99               	goto	u4035
 14159  0F9E  084F               	movf	??___fttol,w
 14160  0F9F  00D2               	movwf	??___fttol+3
 14161  0FA0  0852               	movf	??___fttol+3,w
 14162  0FA1  00D3               	movwf	___fttol@sign1
 14163  0FA2  17CC               	bsf	___fttol@f1+1,7
 14164  0FA3  30FF               	movlw	255
 14165  0FA4  05CB               	andwf	___fttol@f1,f
 14166  0FA5  30FF               	movlw	255
 14167  0FA6  05CC               	andwf	___fttol@f1+1,f
 14168  0FA7  3000               	movlw	0
 14169  0FA8  05CD               	andwf	___fttol@f1+2,f
 14170  0FA9  084B               	movf	___fttol@f1,w
 14171  0FAA  00D4               	movwf	___fttol@lval
 14172  0FAB  084C               	movf	___fttol@f1+1,w
 14173  0FAC  00D5               	movwf	___fttol@lval+1
 14174  0FAD  084D               	movf	___fttol@f1+2,w
 14175  0FAE  00D6               	movwf	___fttol@lval+2
 14176  0FAF  01D7               	clrf	___fttol@lval+3
 14177  0FB0  308E               	movlw	142
 14178  0FB1  02D8               	subwf	___fttol@exp1,f
 14179  0FB2  1FD8               	btfss	___fttol@exp1,7
 14180  0FB3  2FD0               	goto	l5407
 14181  0FB4  0858               	movf	___fttol@exp1,w
 14182  0FB5  3A80               	xorlw	128
 14183  0FB6  3E8F               	addlw	143
 14184  0FB7  1803               	skipnc
 14185  0FB8  2FC2               	goto	l5405
 14186  0FB9  3000               	movlw	0
 14187  0FBA  00CE               	movwf	?___fttol+3
 14188  0FBB  3000               	movlw	0
 14189  0FBC  00CD               	movwf	?___fttol+2
 14190  0FBD  3000               	movlw	0
 14191  0FBE  00CC               	movwf	?___fttol+1
 14192  0FBF  3000               	movlw	0
 14193  0FC0  00CB               	movwf	?___fttol
 14194  0FC1  0008               	return
 14195  0FC2                     l5405:	
 14196  0FC2  3001               	movlw	1
 14197  0FC3                     u4065:	
 14198  0FC3  36D7               	lsrf	___fttol@lval+3,f
 14199  0FC4  0CD6               	rrf	___fttol@lval+2,f
 14200  0FC5  0CD5               	rrf	___fttol@lval+1,f
 14201  0FC6  0CD4               	rrf	___fttol@lval,f
 14202  0FC7  0B89               	decfsz	9,f
 14203  0FC8  2FC3               	goto	u4065
 14204  0FC9  3001               	movlw	1
 14205  0FCA  00CF               	movwf	??___fttol
 14206  0FCB  084F               	movf	??___fttol,w
 14207  0FCC  07D8               	addwf	___fttol@exp1,f
 14208  0FCD  1903               	btfsc	3,2
 14209  0FCE  2FE9               	goto	l5417
 14210  0FCF  2FC2               	goto	l5405
 14211  0FD0                     l5407:	
 14212  0FD0  3018               	movlw	24
 14213  0FD1  0258               	subwf	___fttol@exp1,w
 14214  0FD2  1C03               	skipc
 14215  0FD3  2FE6               	goto	l5415
 14216  0FD4  3000               	movlw	0
 14217  0FD5  00CE               	movwf	?___fttol+3
 14218  0FD6  3000               	movlw	0
 14219  0FD7  00CD               	movwf	?___fttol+2
 14220  0FD8  3000               	movlw	0
 14221  0FD9  00CC               	movwf	?___fttol+1
 14222  0FDA  3000               	movlw	0
 14223  0FDB  00CB               	movwf	?___fttol
 14224  0FDC  0008               	return
 14225  0FDD                     l5413:	
 14226  0FDD  3001               	movlw	1
 14227  0FDE                     u4095:	
 14228  0FDE  35D4               	lslf	___fttol@lval,f
 14229  0FDF  0DD5               	rlf	___fttol@lval+1,f
 14230  0FE0  0DD6               	rlf	___fttol@lval+2,f
 14231  0FE1  0DD7               	rlf	___fttol@lval+3,f
 14232  0FE2  0B89               	decfsz	9,f
 14233  0FE3  2FDE               	goto	u4095
 14234  0FE4  3001               	movlw	1
 14235  0FE5  02D8               	subwf	___fttol@exp1,f
 14236  0FE6                     l5415:	
 14237  0FE6  08D8               	movf	___fttol@exp1,f
 14238  0FE7  1D03               	skipz
 14239  0FE8  2FDD               	goto	l5413
 14240  0FE9                     l5417:	
 14241  0FE9  0853               	movf	___fttol@sign1,w
 14242  0FEA  1903               	btfsc	3,2
 14243  0FEB  2FF7               	goto	l5421
 14244  0FEC  09D4               	comf	___fttol@lval,f
 14245  0FED  09D5               	comf	___fttol@lval+1,f
 14246  0FEE  09D6               	comf	___fttol@lval+2,f
 14247  0FEF  09D7               	comf	___fttol@lval+3,f
 14248  0FF0  0AD4               	incf	___fttol@lval,f
 14249  0FF1  1903               	skipnz
 14250  0FF2  0AD5               	incf	___fttol@lval+1,f
 14251  0FF3  1903               	skipnz
 14252  0FF4  0AD6               	incf	___fttol@lval+2,f
 14253  0FF5  1903               	skipnz
 14254  0FF6  0AD7               	incf	___fttol@lval+3,f
 14255  0FF7                     l5421:	
 14256  0FF7  0857               	movf	___fttol@lval+3,w
 14257  0FF8  00CE               	movwf	?___fttol+3
 14258  0FF9  0856               	movf	___fttol@lval+2,w
 14259  0FFA  00CD               	movwf	?___fttol+2
 14260  0FFB  0855               	movf	___fttol@lval+1,w
 14261  0FFC  00CC               	movwf	?___fttol+1
 14262  0FFD  0854               	movf	___fttol@lval,w
 14263  0FFE  00CB               	movwf	?___fttol
 14264  0FFF  0008               	return
 14265  1000                     __end_of___fttol:	
 14266                           
 14267                           	psect	text95
 14268  065E                     __ptext95:	
 14269 ;; *************** function ___ftdiv *****************
 14270 ;; Defined at:
 14271 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
 14272 ;; Parameters:    Size  Location     Type
 14273 ;;  f2              3   14[BANK0 ] float 
 14274 ;;  f1              3   17[BANK0 ] float 
 14275 ;; Auto vars:     Size  Location     Type
 14276 ;;  f3              3   25[BANK0 ] float 
 14277 ;;  sign            1   29[BANK0 ] unsigned char 
 14278 ;;  exp             1   28[BANK0 ] unsigned char 
 14279 ;;  cntr            1   24[BANK0 ] unsigned char 
 14280 ;; Return value:  Size  Location     Type
 14281 ;;                  3   14[BANK0 ] float 
 14282 ;; Registers used:
 14283 ;;		wreg, status,2, status,0, pclath, cstack
 14284 ;; Tracked objects:
 14285 ;;		On entry : 0/0
 14286 ;;		On exit  : 0/0
 14287 ;;		Unchanged: 0/0
 14288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14289 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14290 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14291 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14292 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14293 ;;Total ram usage:       16 bytes
 14294 ;; Hardware stack levels used:    1
 14295 ;; Hardware stack levels required when called:    6
 14296 ;; This function calls:
 14297 ;;		___ftpack
 14298 ;; This function is called by:
 14299 ;;		_getPercentValue
 14300 ;;		_setPercentValue
 14301 ;; This function uses a non-reentrant model
 14302 ;;
 14303                           
 14304                           
 14305                           ;psect for function ___ftdiv
 14306  065E                     ___ftdiv:	
 14307                           
 14308                           ;incstack = 0
 14309                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 14310  065E  0020               	movlb	0	; select bank0
 14311  065F  0831               	movf	___ftdiv@f1,w
 14312  0660  00B4               	movwf	??___ftdiv
 14313  0661  0832               	movf	___ftdiv@f1+1,w
 14314  0662  00B5               	movwf	??___ftdiv+1
 14315  0663  0833               	movf	___ftdiv@f1+2,w
 14316  0664  00B6               	movwf	??___ftdiv+2
 14317  0665  1003               	clrc
 14318  0666  0D35               	rlf	??___ftdiv+1,w
 14319  0667  0D36               	rlf	??___ftdiv+2,w
 14320  0668  00B7               	movwf	??___ftdiv+3
 14321  0669  0837               	movf	??___ftdiv+3,w
 14322  066A  00BC               	movwf	___ftdiv@exp
 14323  066B  08BC               	movf	___ftdiv@exp,f
 14324  066C  1D03               	skipz
 14325  066D  2E75               	goto	l5295
 14326  066E  3000               	movlw	0
 14327  066F  00AE               	movwf	?___ftdiv
 14328  0670  3000               	movlw	0
 14329  0671  00AF               	movwf	?___ftdiv+1
 14330  0672  3000               	movlw	0
 14331  0673  00B0               	movwf	?___ftdiv+2
 14332  0674  0008               	return
 14333  0675                     l5295:	
 14334  0675  082E               	movf	___ftdiv@f2,w
 14335  0676  00B4               	movwf	??___ftdiv
 14336  0677  082F               	movf	___ftdiv@f2+1,w
 14337  0678  00B5               	movwf	??___ftdiv+1
 14338  0679  0830               	movf	___ftdiv@f2+2,w
 14339  067A  00B6               	movwf	??___ftdiv+2
 14340  067B  1003               	clrc
 14341  067C  0D35               	rlf	??___ftdiv+1,w
 14342  067D  0D36               	rlf	??___ftdiv+2,w
 14343  067E  00B7               	movwf	??___ftdiv+3
 14344  067F  0837               	movf	??___ftdiv+3,w
 14345  0680  00BD               	movwf	___ftdiv@sign
 14346  0681  08BD               	movf	___ftdiv@sign,f
 14347  0682  1D03               	skipz
 14348  0683  2E8B               	goto	l5301
 14349  0684  3000               	movlw	0
 14350  0685  00AE               	movwf	?___ftdiv
 14351  0686  3000               	movlw	0
 14352  0687  00AF               	movwf	?___ftdiv+1
 14353  0688  3000               	movlw	0
 14354  0689  00B0               	movwf	?___ftdiv+2
 14355  068A  0008               	return
 14356  068B                     l5301:	
 14357  068B  3000               	movlw	0
 14358  068C  00B9               	movwf	___ftdiv@f3
 14359  068D  3000               	movlw	0
 14360  068E  00BA               	movwf	___ftdiv@f3+1
 14361  068F  3000               	movlw	0
 14362  0690  00BB               	movwf	___ftdiv@f3+2
 14363  0691  3089               	movlw	137
 14364  0692  073D               	addwf	___ftdiv@sign,w
 14365  0693  00B4               	movwf	??___ftdiv
 14366  0694  0834               	movf	??___ftdiv,w
 14367  0695  02BC               	subwf	___ftdiv@exp,f
 14368  0696  0831               	movf	___ftdiv@f1,w
 14369  0697  00B4               	movwf	??___ftdiv
 14370  0698  0832               	movf	___ftdiv@f1+1,w
 14371  0699  00B5               	movwf	??___ftdiv+1
 14372  069A  0833               	movf	___ftdiv@f1+2,w
 14373  069B  00B6               	movwf	??___ftdiv+2
 14374  069C  3010               	movlw	16
 14375  069D                     u3845:	
 14376  069D  36B6               	lsrf	??___ftdiv+2,f
 14377  069E  0CB5               	rrf	??___ftdiv+1,f
 14378  069F  0CB4               	rrf	??___ftdiv,f
 14379  06A0  0B89               	decfsz	9,f
 14380  06A1  2E9D               	goto	u3845
 14381  06A2  0834               	movf	??___ftdiv,w
 14382  06A3  00B7               	movwf	??___ftdiv+3
 14383  06A4  0837               	movf	??___ftdiv+3,w
 14384  06A5  00BD               	movwf	___ftdiv@sign
 14385  06A6  082E               	movf	___ftdiv@f2,w
 14386  06A7  00B4               	movwf	??___ftdiv
 14387  06A8  082F               	movf	___ftdiv@f2+1,w
 14388  06A9  00B5               	movwf	??___ftdiv+1
 14389  06AA  0830               	movf	___ftdiv@f2+2,w
 14390  06AB  00B6               	movwf	??___ftdiv+2
 14391  06AC  3010               	movlw	16
 14392  06AD                     u3855:	
 14393  06AD  36B6               	lsrf	??___ftdiv+2,f
 14394  06AE  0CB5               	rrf	??___ftdiv+1,f
 14395  06AF  0CB4               	rrf	??___ftdiv,f
 14396  06B0  0B89               	decfsz	9,f
 14397  06B1  2EAD               	goto	u3855
 14398  06B2  0834               	movf	??___ftdiv,w
 14399  06B3  00B7               	movwf	??___ftdiv+3
 14400  06B4  0837               	movf	??___ftdiv+3,w
 14401  06B5  06BD               	xorwf	___ftdiv@sign,f
 14402  06B6  3080               	movlw	128
 14403  06B7  00B4               	movwf	??___ftdiv
 14404  06B8  0834               	movf	??___ftdiv,w
 14405  06B9  05BD               	andwf	___ftdiv@sign,f
 14406  06BA  17B2               	bsf	___ftdiv@f1+1,7
 14407  06BB  30FF               	movlw	255
 14408  06BC  05B1               	andwf	___ftdiv@f1,f
 14409  06BD  30FF               	movlw	255
 14410  06BE  05B2               	andwf	___ftdiv@f1+1,f
 14411  06BF  3000               	movlw	0
 14412  06C0  05B3               	andwf	___ftdiv@f1+2,f
 14413  06C1  17AF               	bsf	___ftdiv@f2+1,7
 14414  06C2  30FF               	movlw	255
 14415  06C3  05AE               	andwf	___ftdiv@f2,f
 14416  06C4  30FF               	movlw	255
 14417  06C5  05AF               	andwf	___ftdiv@f2+1,f
 14418  06C6  3000               	movlw	0
 14419  06C7  05B0               	andwf	___ftdiv@f2+2,f
 14420  06C8  3018               	movlw	24
 14421  06C9  00B4               	movwf	??___ftdiv
 14422  06CA  0834               	movf	??___ftdiv,w
 14423  06CB  00B8               	movwf	___ftdiv@cntr
 14424  06CC                     l5315:	
 14425  06CC  3001               	movlw	1
 14426  06CD                     u3865:	
 14427  06CD  35B9               	lslf	___ftdiv@f3,f
 14428  06CE  0DBA               	rlf	___ftdiv@f3+1,f
 14429  06CF  0DBB               	rlf	___ftdiv@f3+2,f
 14430  06D0  0B89               	decfsz	9,f
 14431  06D1  2ECD               	goto	u3865
 14432  06D2  0830               	movf	___ftdiv@f2+2,w
 14433  06D3  0233               	subwf	___ftdiv@f1+2,w
 14434  06D4  1D03               	skipz
 14435  06D5  2EDC               	goto	u3875
 14436  06D6  082F               	movf	___ftdiv@f2+1,w
 14437  06D7  0232               	subwf	___ftdiv@f1+1,w
 14438  06D8  1D03               	skipz
 14439  06D9  2EDC               	goto	u3875
 14440  06DA  082E               	movf	___ftdiv@f2,w
 14441  06DB  0231               	subwf	___ftdiv@f1,w
 14442  06DC                     u3875:	
 14443  06DC  1C03               	skipc
 14444  06DD  2EE5               	goto	l5323
 14445  06DE  082E               	movf	___ftdiv@f2,w
 14446  06DF  02B1               	subwf	___ftdiv@f1,f
 14447  06E0  082F               	movf	___ftdiv@f2+1,w
 14448  06E1  3BB2               	subwfb	___ftdiv@f1+1,f
 14449  06E2  0830               	movf	___ftdiv@f2+2,w
 14450  06E3  3BB3               	subwfb	___ftdiv@f1+2,f
 14451  06E4  1439               	bsf	___ftdiv@f3,0
 14452  06E5                     l5323:	
 14453  06E5  3001               	movlw	1
 14454  06E6                     u3885:	
 14455  06E6  35B1               	lslf	___ftdiv@f1,f
 14456  06E7  0DB2               	rlf	___ftdiv@f1+1,f
 14457  06E8  0DB3               	rlf	___ftdiv@f1+2,f
 14458  06E9  0B89               	decfsz	9,f
 14459  06EA  2EE6               	goto	u3885
 14460  06EB  3001               	movlw	1
 14461  06EC  02B8               	subwf	___ftdiv@cntr,f
 14462  06ED  1D03               	btfss	3,2
 14463  06EE  2ECC               	goto	l5315
 14464  06EF  0839               	movf	___ftdiv@f3,w
 14465  06F0  00A0               	movwf	___ftpack@arg
 14466  06F1  083A               	movf	___ftdiv@f3+1,w
 14467  06F2  00A1               	movwf	___ftpack@arg+1
 14468  06F3  083B               	movf	___ftdiv@f3+2,w
 14469  06F4  00A2               	movwf	___ftpack@arg+2
 14470  06F5  083C               	movf	___ftdiv@exp,w
 14471  06F6  00B4               	movwf	??___ftdiv
 14472  06F7  0834               	movf	??___ftdiv,w
 14473  06F8  00A3               	movwf	___ftpack@exp
 14474  06F9  083D               	movf	___ftdiv@sign,w
 14475  06FA  00B5               	movwf	??___ftdiv+1
 14476  06FB  0835               	movf	??___ftdiv+1,w
 14477  06FC  00A4               	movwf	___ftpack@sign
 14478  06FD  318A  2243         	fcall	___ftpack
 14479  06FF  0020               	movlb	0	; select bank0
 14480  0700  0820               	movf	?___ftpack,w
 14481  0701  00AE               	movwf	?___ftdiv
 14482  0702  0821               	movf	?___ftpack+1,w
 14483  0703  00AF               	movwf	?___ftdiv+1
 14484  0704  0822               	movf	?___ftpack+2,w
 14485  0705  00B0               	movwf	?___ftdiv+2
 14486  0706  0008               	return
 14487  0707                     __end_of___ftdiv:	
 14488                           
 14489                           	psect	text96
 14490  121D                     __ptext96:	
 14491 ;; *************** function ___awtoft *****************
 14492 ;; Defined at:
 14493 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c"
 14494 ;; Parameters:    Size  Location     Type
 14495 ;;  c               2    8[BANK0 ] int 
 14496 ;; Auto vars:     Size  Location     Type
 14497 ;;  sign            1   13[BANK0 ] unsigned char 
 14498 ;; Return value:  Size  Location     Type
 14499 ;;                  3    8[BANK0 ] float 
 14500 ;; Registers used:
 14501 ;;		wreg, status,2, status,0, pclath, cstack
 14502 ;; Tracked objects:
 14503 ;;		On entry : 0/0
 14504 ;;		On exit  : 0/0
 14505 ;;		Unchanged: 0/0
 14506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14507 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14508 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14509 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14510 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14511 ;;Total ram usage:        6 bytes
 14512 ;; Hardware stack levels used:    1
 14513 ;; Hardware stack levels required when called:    6
 14514 ;; This function calls:
 14515 ;;		___ftpack
 14516 ;; This function is called by:
 14517 ;;		_getPercentValue
 14518 ;;		_setPercentValue
 14519 ;; This function uses a non-reentrant model
 14520 ;;
 14521                           
 14522                           
 14523                           ;psect for function ___awtoft
 14524  121D                     ___awtoft:	
 14525                           
 14526                           ;incstack = 0
 14527                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 14528  121D  0020               	movlb	0	; select bank0
 14529  121E  01AD               	clrf	___awtoft@sign
 14530  121F  1FA9               	btfss	___awtoft@c+1,7
 14531  1220  2A28               	goto	l5213
 14532  1221  09A8               	comf	___awtoft@c,f
 14533  1222  09A9               	comf	___awtoft@c+1,f
 14534  1223  0AA8               	incf	___awtoft@c,f
 14535  1224  1903               	skipnz
 14536  1225  0AA9               	incf	___awtoft@c+1,f
 14537  1226  01AD               	clrf	___awtoft@sign
 14538  1227  0AAD               	incf	___awtoft@sign,f
 14539  1228                     l5213:	
 14540  1228  0828               	movf	___awtoft@c,w
 14541  1229  00A0               	movwf	___ftpack@arg
 14542  122A  0829               	movf	___awtoft@c+1,w
 14543  122B  00A1               	movwf	___ftpack@arg+1
 14544  122C  01A2               	clrf	___ftpack@arg+2
 14545  122D  308E               	movlw	142
 14546  122E  00AB               	movwf	??___awtoft
 14547  122F  082B               	movf	??___awtoft,w
 14548  1230  00A3               	movwf	___ftpack@exp
 14549  1231  082D               	movf	___awtoft@sign,w
 14550  1232  00AC               	movwf	??___awtoft+1
 14551  1233  082C               	movf	??___awtoft+1,w
 14552  1234  00A4               	movwf	___ftpack@sign
 14553  1235  318A  2243         	fcall	___ftpack
 14554  1237  0020               	movlb	0	; select bank0
 14555  1238  0820               	movf	?___ftpack,w
 14556  1239  00A8               	movwf	?___awtoft
 14557  123A  0821               	movf	?___ftpack+1,w
 14558  123B  00A9               	movwf	?___awtoft+1
 14559  123C  0822               	movf	?___ftpack+2,w
 14560  123D  00AA               	movwf	?___awtoft+2
 14561  123E  0008               	return
 14562  123F                     __end_of___awtoft:	
 14563                           
 14564                           	psect	text97
 14565  0A43                     __ptext97:	
 14566 ;; *************** function ___ftpack *****************
 14567 ;; Defined at:
 14568 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
 14569 ;; Parameters:    Size  Location     Type
 14570 ;;  arg             3    0[BANK0 ] unsigned um
 14571 ;;  exp             1    3[BANK0 ] unsigned char 
 14572 ;;  sign            1    4[BANK0 ] unsigned char 
 14573 ;; Auto vars:     Size  Location     Type
 14574 ;;		None
 14575 ;; Return value:  Size  Location     Type
 14576 ;;                  3    0[BANK0 ] float 
 14577 ;; Registers used:
 14578 ;;		wreg, status,2, status,0
 14579 ;; Tracked objects:
 14580 ;;		On entry : 0/0
 14581 ;;		On exit  : 0/0
 14582 ;;		Unchanged: 0/0
 14583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14584 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14586 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14587 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14588 ;;Total ram usage:        8 bytes
 14589 ;; Hardware stack levels used:    1
 14590 ;; Hardware stack levels required when called:    5
 14591 ;; This function calls:
 14592 ;;		Nothing
 14593 ;; This function is called by:
 14594 ;;		___awtoft
 14595 ;;		___ftadd
 14596 ;;		___ftdiv
 14597 ;;		___ftmul
 14598 ;; This function uses a non-reentrant model
 14599 ;;
 14600                           
 14601                           
 14602                           ;psect for function ___ftpack
 14603  0A43                     ___ftpack:	
 14604                           
 14605                           ;incstack = 0
 14606                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 14607  0A43  0020               	movlb	0	; select bank0
 14608  0A44  0823               	movf	___ftpack@exp,w
 14609  0A45  1903               	btfsc	3,2
 14610  0A46  2A4C               	goto	l5179
 14611  0A47  0822               	movf	___ftpack@arg+2,w
 14612  0A48  0421               	iorwf	___ftpack@arg+1,w
 14613  0A49  0420               	iorwf	___ftpack@arg,w
 14614  0A4A  1D03               	skipz
 14615  0A4B  2A5D               	goto	l5185
 14616  0A4C                     l5179:	
 14617  0A4C  3000               	movlw	0
 14618  0A4D  00A0               	movwf	?___ftpack
 14619  0A4E  3000               	movlw	0
 14620  0A4F  00A1               	movwf	?___ftpack+1
 14621  0A50  3000               	movlw	0
 14622  0A51  00A2               	movwf	?___ftpack+2
 14623  0A52  0008               	return
 14624  0A53                     l5183:	
 14625  0A53  3001               	movlw	1
 14626  0A54  00A5               	movwf	??___ftpack
 14627  0A55  0825               	movf	??___ftpack,w
 14628  0A56  07A3               	addwf	___ftpack@exp,f
 14629  0A57  3001               	movlw	1
 14630  0A58                     u3495:	
 14631  0A58  36A2               	lsrf	___ftpack@arg+2,f
 14632  0A59  0CA1               	rrf	___ftpack@arg+1,f
 14633  0A5A  0CA0               	rrf	___ftpack@arg,f
 14634  0A5B  0B89               	decfsz	9,f
 14635  0A5C  2A58               	goto	u3495
 14636  0A5D                     l5185:	
 14637  0A5D  30FE               	movlw	254
 14638  0A5E  0522               	andwf	___ftpack@arg+2,w
 14639  0A5F  1903               	btfsc	3,2
 14640  0A60  2A76               	goto	l2711
 14641  0A61  2A53               	goto	l5183
 14642  0A62                     l5187:	
 14643  0A62  3001               	movlw	1
 14644  0A63  00A5               	movwf	??___ftpack
 14645  0A64  0825               	movf	??___ftpack,w
 14646  0A65  07A3               	addwf	___ftpack@exp,f
 14647  0A66  3001               	movlw	1
 14648  0A67  07A0               	addwf	___ftpack@arg,f
 14649  0A68  3000               	movlw	0
 14650  0A69  1803               	skipnc
 14651  0A6A  3001               	movlw	1
 14652  0A6B  07A1               	addwf	___ftpack@arg+1,f
 14653  0A6C  3000               	movlw	0
 14654  0A6D  1803               	skipnc
 14655  0A6E  3001               	movlw	1
 14656  0A6F  07A2               	addwf	___ftpack@arg+2,f
 14657  0A70  3001               	movlw	1
 14658  0A71                     u3515:	
 14659  0A71  36A2               	lsrf	___ftpack@arg+2,f
 14660  0A72  0CA1               	rrf	___ftpack@arg+1,f
 14661  0A73  0CA0               	rrf	___ftpack@arg,f
 14662  0A74  0B89               	decfsz	9,f
 14663  0A75  2A71               	goto	u3515
 14664  0A76                     l2711:	
 14665  0A76  30FF               	movlw	255
 14666  0A77  0522               	andwf	___ftpack@arg+2,w
 14667  0A78  1903               	btfsc	3,2
 14668  0A79  2A83               	goto	l5195
 14669  0A7A  2A62               	goto	l5187
 14670  0A7B                     l5193:	
 14671  0A7B  3001               	movlw	1
 14672  0A7C  02A3               	subwf	___ftpack@exp,f
 14673  0A7D  3001               	movlw	1
 14674  0A7E                     u3535:	
 14675  0A7E  35A0               	lslf	___ftpack@arg,f
 14676  0A7F  0DA1               	rlf	___ftpack@arg+1,f
 14677  0A80  0DA2               	rlf	___ftpack@arg+2,f
 14678  0A81  0B89               	decfsz	9,f
 14679  0A82  2A7E               	goto	u3535
 14680  0A83                     l5195:	
 14681  0A83  1FA1               	btfss	___ftpack@arg+1,7
 14682  0A84  2A7B               	goto	l5193
 14683  0A85  1823               	btfsc	___ftpack@exp,0
 14684  0A86  2A8D               	goto	l2717
 14685  0A87  30FF               	movlw	255
 14686  0A88  05A0               	andwf	___ftpack@arg,f
 14687  0A89  307F               	movlw	127
 14688  0A8A  05A1               	andwf	___ftpack@arg+1,f
 14689  0A8B  30FF               	movlw	255
 14690  0A8C  05A2               	andwf	___ftpack@arg+2,f
 14691  0A8D                     l2717:	
 14692  0A8D  1003               	clrc
 14693  0A8E  0CA3               	rrf	___ftpack@exp,f
 14694  0A8F  0823               	movf	___ftpack@exp,w
 14695  0A90  00A5               	movwf	??___ftpack
 14696  0A91  01A6               	clrf	??___ftpack+1
 14697  0A92  01A7               	clrf	??___ftpack+2
 14698  0A93  3010               	movlw	16
 14699  0A94                     u3565:	
 14700  0A94  35A5               	lslf	??___ftpack,f
 14701  0A95  0DA6               	rlf	??___ftpack+1,f
 14702  0A96  0DA7               	rlf	??___ftpack+2,f
 14703  0A97  0B89               	decfsz	9,f
 14704  0A98  2A94               	goto	u3565
 14705  0A99  0825               	movf	??___ftpack,w
 14706  0A9A  04A0               	iorwf	___ftpack@arg,f
 14707  0A9B  0826               	movf	??___ftpack+1,w
 14708  0A9C  04A1               	iorwf	___ftpack@arg+1,f
 14709  0A9D  0827               	movf	??___ftpack+2,w
 14710  0A9E  04A2               	iorwf	___ftpack@arg+2,f
 14711  0A9F  0824               	movf	___ftpack@sign,w
 14712  0AA0  1903               	btfsc	3,2
 14713  0AA1  0008               	return
 14714  0AA2  17A2               	bsf	___ftpack@arg+2,7
 14715  0AA3  0008               	return
 14716  0AA4                     __end_of___ftpack:	
 14717                           
 14718                           	psect	text98
 14719  1F29                     __ptext98:	
 14720 ;; *************** function _setRFSW_Status *****************
 14721 ;; Defined at:
 14722 ;;		line 379 in file "../src/RF_Control_B1.c"
 14723 ;; Parameters:    Size  Location     Type
 14724 ;;  sw              1    wreg     unsigned char 
 14725 ;;  command         1    2[BANK0 ] unsigned char 
 14726 ;; Auto vars:     Size  Location     Type
 14727 ;;  sw              1    3[BANK0 ] unsigned char 
 14728 ;; Return value:  Size  Location     Type
 14729 ;;		None               void
 14730 ;; Registers used:
 14731 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14732 ;; Tracked objects:
 14733 ;;		On entry : 0/0
 14734 ;;		On exit  : 0/0
 14735 ;;		Unchanged: 0/0
 14736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14737 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14738 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14740 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14741 ;;Total ram usage:        2 bytes
 14742 ;; Hardware stack levels used:    1
 14743 ;; Hardware stack levels required when called:    6
 14744 ;; This function calls:
 14745 ;;		_RfSWPointSelect
 14746 ;; This function is called by:
 14747 ;;		_DlyOff_Main
 14748 ;;		_setDimmerLights_ERROR
 14749 ;;		_setControl_Lights_Table
 14750 ;;		_Sw_DimmerOnFunc
 14751 ;;		_Sw_DimmerAdjFunc
 14752 ;; This function uses a non-reentrant model
 14753 ;;
 14754                           
 14755                           
 14756                           ;psect for function _setRFSW_Status
 14757  1F29                     _setRFSW_Status:	
 14758                           
 14759                           ;incstack = 0
 14760                           ; Regs used in _setRFSW_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14761                           ;setRFSW_Status@sw stored from wreg
 14762  1F29  0020               	movlb	0	; select bank0
 14763  1F2A  00A3               	movwf	setRFSW_Status@sw
 14764                           
 14765                           ;RF_Control_B1.c: 380: RfSWPointSelect(sw);
 14766  1F2B  0823               	movf	setRFSW_Status@sw,w
 14767  1F2C  319E  26BC         	fcall	_RfSWPointSelect
 14768                           
 14769                           ;RF_Control_B1.c: 381: RFSW->Status = command;
 14770  1F2E  087A               	movf	_RFSW,w
 14771  1F2F  0086               	movwf	6
 14772  1F30  0187               	clrf	7
 14773  1F31  0020               	movlb	0	; select bank0
 14774  1F32  0822               	movf	setRFSW_Status@command,w
 14775  1F33  1001               	bcf	1,0
 14776  1F34  1D03               	skipz
 14777  1F35  1401               	bsf	1,0
 14778  1F36  0008               	return
 14779  1F37                     __end_of_setRFSW_Status:	
 14780                           
 14781                           	psect	text99
 14782  1EBC                     __ptext99:	
 14783 ;; *************** function _RfSWPointSelect *****************
 14784 ;; Defined at:
 14785 ;;		line 314 in file "../src/RF_Control_B1.c"
 14786 ;; Parameters:    Size  Location     Type
 14787 ;;  sw              1    wreg     unsigned char 
 14788 ;; Auto vars:     Size  Location     Type
 14789 ;;  sw              1    1[BANK0 ] unsigned char 
 14790 ;; Return value:  Size  Location     Type
 14791 ;;		None               void
 14792 ;; Registers used:
 14793 ;;		wreg
 14794 ;; Tracked objects:
 14795 ;;		On entry : 0/0
 14796 ;;		On exit  : 0/0
 14797 ;;		Unchanged: 0/0
 14798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14800 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14801 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14802 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14803 ;;Total ram usage:        2 bytes
 14804 ;; Hardware stack levels used:    1
 14805 ;; Hardware stack levels required when called:    5
 14806 ;; This function calls:
 14807 ;;		Nothing
 14808 ;; This function is called by:
 14809 ;;		_setRFSW_Control
 14810 ;;		_setRFSW_AdjControl
 14811 ;;		_setRFSW_Status
 14812 ;; This function uses a non-reentrant model
 14813 ;;
 14814                           
 14815                           
 14816                           ;psect for function _RfSWPointSelect
 14817  1EBC                     _RfSWPointSelect:	
 14818                           
 14819                           ;incstack = 0
 14820                           ; Regs used in _RfSWPointSelect: [wreg]
 14821                           ;RfSWPointSelect@sw stored from wreg
 14822  1EBC  0020               	movlb	0	; select bank0
 14823  1EBD  00A1               	movwf	RfSWPointSelect@sw
 14824                           
 14825                           ;RF_Control_B1.c: 316: if (sw == 1) {
 14826  1EBE  0821               	movf	RfSWPointSelect@sw,w
 14827  1EBF  3A01               	xorlw	1
 14828  1EC0  1D03               	skipz
 14829  1EC1  0008               	return
 14830                           
 14831                           ;RF_Control_B1.c: 317: RFSW = &RFSW1;
 14832  1EC2  30EE               	movlw	_RFSW1& (0+255)
 14833  1EC3  00A0               	movwf	??_RfSWPointSelect
 14834  1EC4  0820               	movf	??_RfSWPointSelect,w
 14835  1EC5  00FA               	movwf	_RFSW
 14836  1EC6  0008               	return
 14837  1EC7                     __end_of_RfSWPointSelect:	
 14838                           
 14839                           	psect	text100
 14840  1FAF                     __ptext100:	
 14841 ;; *************** function _setDimmerLights_Trigger *****************
 14842 ;; Defined at:
 14843 ;;		line 705 in file "../src/Dimmer_B1.c"
 14844 ;; Parameters:    Size  Location     Type
 14845 ;;  lights          1    wreg     unsigned char 
 14846 ;;  command         1    2[BANK0 ] unsigned char 
 14847 ;; Auto vars:     Size  Location     Type
 14848 ;;  lights          1    3[BANK0 ] unsigned char 
 14849 ;; Return value:  Size  Location     Type
 14850 ;;		None               void
 14851 ;; Registers used:
 14852 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14853 ;; Tracked objects:
 14854 ;;		On entry : 0/0
 14855 ;;		On exit  : 0/0
 14856 ;;		Unchanged: 0/0
 14857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14858 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14859 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14861 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14862 ;;Total ram usage:        2 bytes
 14863 ;; Hardware stack levels used:    1
 14864 ;; Hardware stack levels required when called:    6
 14865 ;; This function calls:
 14866 ;;		_DimmerLightsPointSelect
 14867 ;; This function is called by:
 14868 ;;		_DlyOff_Main
 14869 ;;		_setRFSW_Control
 14870 ;;		_Sw_DimmerOnFunc
 14871 ;;		_Sw_DimmerOffFunc
 14872 ;; This function uses a non-reentrant model
 14873 ;;
 14874                           
 14875                           
 14876                           ;psect for function _setDimmerLights_Trigger
 14877  1FAF                     _setDimmerLights_Trigger:	
 14878                           
 14879                           ;incstack = 0
 14880                           ; Regs used in _setDimmerLights_Trigger: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 14881                           ;setDimmerLights_Trigger@lights stored from wreg
 14882  1FAF  0020               	movlb	0	; select bank0
 14883  1FB0  00A3               	movwf	setDimmerLights_Trigger@lights
 14884                           
 14885                           ;Dimmer_B1.c: 707: DimmerLightsPointSelect(lights);
 14886  1FB1  0823               	movf	setDimmerLights_Trigger@lights,w
 14887  1FB2  319E  26B1         	fcall	_DimmerLightsPointSelect
 14888                           
 14889                           ;Dimmer_B1.c: 708: DimmerLights->Trigger = command;
 14890  1FB4  0020               	movlb	0	; select bank0
 14891  1FB5  086D               	movf	_DimmerLights,w
 14892  1FB6  3E08               	addlw	8
 14893  1FB7  0086               	movwf	6
 14894  1FB8  3001               	movlw	1	; select bank2/3
 14895  1FB9  0087               	movwf	7
 14896  1FBA  0822               	movf	setDimmerLights_Trigger@command,w
 14897  1FBB  1101               	bcf	1,2
 14898  1FBC  1D03               	skipz
 14899  1FBD  1501               	bsf	1,2
 14900  1FBE  0008               	return
 14901  1FBF                     __end_of_setDimmerLights_Trigger:	
 14902                           
 14903                           	psect	text101
 14904  1F9F                     __ptext101:	
 14905 ;; *************** function _setDimmerLights_Switch *****************
 14906 ;; Defined at:
 14907 ;;		line 693 in file "../src/Dimmer_B1.c"
 14908 ;; Parameters:    Size  Location     Type
 14909 ;;  lights          1    wreg     unsigned char 
 14910 ;;  command         1    2[BANK0 ] unsigned char 
 14911 ;; Auto vars:     Size  Location     Type
 14912 ;;  lights          1    3[BANK0 ] unsigned char 
 14913 ;; Return value:  Size  Location     Type
 14914 ;;		None               void
 14915 ;; Registers used:
 14916 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14917 ;; Tracked objects:
 14918 ;;		On entry : 0/0
 14919 ;;		On exit  : 0/0
 14920 ;;		Unchanged: 0/0
 14921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14922 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14923 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14925 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14926 ;;Total ram usage:        2 bytes
 14927 ;; Hardware stack levels used:    1
 14928 ;; Hardware stack levels required when called:    6
 14929 ;; This function calls:
 14930 ;;		_DimmerLightsPointSelect
 14931 ;; This function is called by:
 14932 ;;		_DlyOff_Main
 14933 ;;		_setRFSW_Control
 14934 ;;		_Sw_DimmerOnFunc
 14935 ;;		_Sw_DimmerOffFunc
 14936 ;; This function uses a non-reentrant model
 14937 ;;
 14938                           
 14939                           
 14940                           ;psect for function _setDimmerLights_Switch
 14941  1F9F                     _setDimmerLights_Switch:	
 14942                           
 14943                           ;incstack = 0
 14944                           ; Regs used in _setDimmerLights_Switch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 14945                           ;setDimmerLights_Switch@lights stored from wreg
 14946  1F9F  0020               	movlb	0	; select bank0
 14947  1FA0  00A3               	movwf	setDimmerLights_Switch@lights
 14948                           
 14949                           ;Dimmer_B1.c: 695: DimmerLightsPointSelect(lights);
 14950  1FA1  0823               	movf	setDimmerLights_Switch@lights,w
 14951  1FA2  319E  26B1         	fcall	_DimmerLightsPointSelect
 14952                           
 14953                           ;Dimmer_B1.c: 696: DimmerLights->Switch = command;
 14954  1FA4  0020               	movlb	0	; select bank0
 14955  1FA5  086D               	movf	_DimmerLights,w
 14956  1FA6  3E08               	addlw	8
 14957  1FA7  0086               	movwf	6
 14958  1FA8  3001               	movlw	1	; select bank2/3
 14959  1FA9  0087               	movwf	7
 14960  1FAA  0822               	movf	setDimmerLights_Switch@command,w
 14961  1FAB  1081               	bcf	1,1
 14962  1FAC  1D03               	skipz
 14963  1FAD  1481               	bsf	1,1
 14964  1FAE  0008               	return
 14965  1FAF                     __end_of_setDimmerLights_Switch:	
 14966                           
 14967                           	psect	text102
 14968  1EB1                     __ptext102:	
 14969 ;; *************** function _DimmerLightsPointSelect *****************
 14970 ;; Defined at:
 14971 ;;		line 315 in file "../src/Dimmer_B1.c"
 14972 ;; Parameters:    Size  Location     Type
 14973 ;;  lights          1    wreg     unsigned char 
 14974 ;; Auto vars:     Size  Location     Type
 14975 ;;  lights          1    1[BANK0 ] unsigned char 
 14976 ;; Return value:  Size  Location     Type
 14977 ;;		None               void
 14978 ;; Registers used:
 14979 ;;		wreg
 14980 ;; Tracked objects:
 14981 ;;		On entry : 0/0
 14982 ;;		On exit  : 0/0
 14983 ;;		Unchanged: 0/0
 14984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14986 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14987 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14988 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14989 ;;Total ram usage:        2 bytes
 14990 ;; Hardware stack levels used:    1
 14991 ;; Hardware stack levels required when called:    5
 14992 ;; This function calls:
 14993 ;;		Nothing
 14994 ;; This function is called by:
 14995 ;;		_setDimmerLights_Initialization
 14996 ;;		_setDimmerLights_Main
 14997 ;;		_setDimmerLights_ERROR
 14998 ;;		_setDimmerLights_TriggerERROR
 14999 ;;		_setDimmerLights
 15000 ;;		_setDimmerLights_Adj
 15001 ;;		_setDimmerLights_AdjRF
 15002 ;;		_setDimmerLights_Switch
 15003 ;;		_setDimmerLights_AdjGo
 15004 ;;		_setDimmerLights_Trigger
 15005 ;;		_setDimmerLights_TriggerAdj
 15006 ;;		_setDimmerLights_GO
 15007 ;;		_setDimmerLights_MaxmumValue
 15008 ;;		_setDimmerLights_Clear
 15009 ;; This function uses a non-reentrant model
 15010 ;;
 15011                           
 15012                           
 15013                           ;psect for function _DimmerLightsPointSelect
 15014  1EB1                     _DimmerLightsPointSelect:	
 15015                           
 15016                           ;incstack = 0
 15017                           ; Regs used in _DimmerLightsPointSelect: [wreg]
 15018                           ;DimmerLightsPointSelect@lights stored from wreg
 15019  1EB1  0020               	movlb	0	; select bank0
 15020  1EB2  00A1               	movwf	DimmerLightsPointSelect@lights
 15021                           
 15022                           ;Dimmer_B1.c: 317: if (lights == 1) {
 15023  1EB3  0821               	movf	DimmerLightsPointSelect@lights,w
 15024  1EB4  3A01               	xorlw	1
 15025  1EB5  1D03               	skipz
 15026  1EB6  0008               	return
 15027                           
 15028                           ;Dimmer_B1.c: 318: DimmerLights = &DimmerLights1;
 15029  1EB7  30C0               	movlw	_DimmerLights1& (0+255)
 15030  1EB8  00A0               	movwf	??_DimmerLightsPointSelect
 15031  1EB9  0820               	movf	??_DimmerLightsPointSelect,w
 15032  1EBA  00ED               	movwf	_DimmerLights
 15033  1EBB  0008               	return
 15034  1EBC                     __end_of_DimmerLightsPointSelect:	
 15035                           
 15036                           	psect	text103
 15037  0934                     __ptext103:	
 15038 ;; *************** function _setBuz *****************
 15039 ;; Defined at:
 15040 ;;		line 22 in file "../src/Buzzer_B1.c"
 15041 ;; Parameters:    Size  Location     Type
 15042 ;;  count           1    wreg     unsigned char 
 15043 ;;  time            2    9[BANK0 ] int 
 15044 ;; Auto vars:     Size  Location     Type
 15045 ;;  count           1   12[BANK0 ] unsigned char 
 15046 ;; Return value:  Size  Location     Type
 15047 ;;		None               void
 15048 ;; Registers used:
 15049 ;;		wreg, status,2, status,0, pclath, cstack
 15050 ;; Tracked objects:
 15051 ;;		On entry : 0/0
 15052 ;;		On exit  : 0/0
 15053 ;;		Unchanged: 0/0
 15054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15055 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15056 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15057 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15058 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15059 ;;Total ram usage:        4 bytes
 15060 ;; Hardware stack levels used:    1
 15061 ;; Hardware stack levels required when called:    6
 15062 ;; This function calls:
 15063 ;;		___awdiv
 15064 ;; This function is called by:
 15065 ;;		_DlyOff_Main
 15066 ;;		_setDimmerLights_Main
 15067 ;;		_DimmerLights_Exceptions
 15068 ;;		_setOverTemp_Exceptions
 15069 ;;		_setLog_Code
 15070 ;;		_setControl_Lights_Table
 15071 ;;		_setRFSW_Control
 15072 ;;		_setSw_Main
 15073 ;;		_Sw_DimmerOnFunc
 15074 ;;		_my_Main
 15075 ;; This function uses a non-reentrant model
 15076 ;;
 15077                           
 15078                           
 15079                           ;psect for function _setBuz
 15080  0934                     _setBuz:	
 15081                           
 15082                           ;incstack = 0
 15083                           ; Regs used in _setBuz: [wreg+status,2+status,0+pclath+cstack]
 15084                           ;setBuz@count stored from wreg
 15085  0934  0020               	movlb	0	; select bank0
 15086  0935  00AC               	movwf	setBuz@count
 15087                           
 15088                           ;Buzzer_B1.c: 23: time /= 10;
 15089  0936  300A               	movlw	10
 15090  0937  00A0               	movwf	___awdiv@divisor
 15091  0938  3000               	movlw	0
 15092  0939  00A1               	movwf	___awdiv@divisor+1
 15093  093A  082A               	movf	setBuz@time+1,w
 15094  093B  01A3               	clrf	___awdiv@dividend+1
 15095  093C  07A3               	addwf	___awdiv@dividend+1,f
 15096  093D  0829               	movf	setBuz@time,w
 15097  093E  01A2               	clrf	___awdiv@dividend
 15098  093F  07A2               	addwf	___awdiv@dividend,f
 15099  0940  3188  2034  3189   	fcall	___awdiv
 15100  0943  0020               	movlb	0	; select bank0
 15101  0944  0821               	movf	?___awdiv+1,w
 15102  0945  01AA               	clrf	setBuz@time+1
 15103  0946  07AA               	addwf	setBuz@time+1,f
 15104  0947  0820               	movf	?___awdiv,w
 15105  0948  01A9               	clrf	setBuz@time
 15106  0949  07A9               	addwf	setBuz@time,f
 15107                           
 15108                           ;Buzzer_B1.c: 24: if (Buz1.Enable == 1) {
 15109  094A  0021               	movlb	1	; select bank1
 15110  094B  1C32               	btfss	_Buz1^(0+128),0
 15111  094C  0008               	return
 15112                           
 15113                           ;Buzzer_B1.c: 25: if (Buz1.GO == 0) {
 15114  094D  18B2               	btfsc	_Buz1^(0+128),1
 15115  094E  2965               	goto	l90
 15116                           
 15117                           ;Buzzer_B1.c: 26: Buz1.GO = 1;
 15118  094F  14B2               	bsf	_Buz1^(0+128),1
 15119                           
 15120                           ;Buzzer_B1.c: 27: Buz1.Counter = 0;
 15121  0950  01B3               	clrf	(_Buz1^(0+128)+1)
 15122  0951  01B4               	clrf	((_Buz1+1)^(0+128)+1)
 15123                           
 15124                           ;Buzzer_B1.c: 28: Buz1.Count = count;
 15125  0952  0020               	movlb	0	; select bank0
 15126  0953  082C               	movf	setBuz@count,w
 15127  0954  00AB               	movwf	??_setBuz
 15128  0955  082B               	movf	??_setBuz,w
 15129  0956  0021               	movlb	1	; select bank1
 15130  0957  00B5               	movwf	(_Buz1^(0+128)+3)
 15131                           
 15132                           ;Buzzer_B1.c: 29: Buz1.TimeValue = time;
 15133  0958  0020               	movlb	0	; select bank0
 15134  0959  082A               	movf	setBuz@time+1,w
 15135  095A  0021               	movlb	1	; select bank1
 15136  095B  01B9               	clrf	((_Buz1+1)^(0+128)+6)
 15137  095C  07B9               	addwf	((_Buz1+1)^(0+128)+6),f
 15138  095D  0020               	movlb	0	; select bank0
 15139  095E  0829               	movf	setBuz@time,w
 15140  095F  0021               	movlb	1	; select bank1
 15141  0960  01B8               	clrf	(_Buz1^(0+128)+6)
 15142  0961  07B8               	addwf	(_Buz1^(0+128)+6),f
 15143                           
 15144                           ;Buzzer_B1.c: 30: RB3 = 1;
 15145  0962  0020               	movlb	0	; select bank0
 15146  0963  158D               	bsf	13,3	;volatile
 15147                           
 15148                           ;Buzzer_B1.c: 31: } else {
 15149  0964  0008               	return
 15150  0965                     l90:	
 15151                           
 15152                           ;Buzzer_B1.c: 32: if (Buz1.BufferStatus1 == 0) {
 15153  0965  19B2               	btfsc	_Buz1^(0+128),3
 15154  0966  2979               	goto	l92
 15155                           
 15156                           ;Buzzer_B1.c: 33: Buz1.BufferStatus1 = 1;
 15157  0967  15B2               	bsf	_Buz1^(0+128),3
 15158                           
 15159                           ;Buzzer_B1.c: 34: Buz1.CountBuffer1 = count;
 15160  0968  0020               	movlb	0	; select bank0
 15161  0969  082C               	movf	setBuz@count,w
 15162  096A  00AB               	movwf	??_setBuz
 15163  096B  082B               	movf	??_setBuz,w
 15164  096C  0021               	movlb	1	; select bank1
 15165  096D  00B6               	movwf	(_Buz1^(0+128)+4)
 15166                           
 15167                           ;Buzzer_B1.c: 35: Buz1.TimeValueBuffer1 = time;
 15168  096E  0020               	movlb	0	; select bank0
 15169  096F  082A               	movf	setBuz@time+1,w
 15170  0970  0021               	movlb	1	; select bank1
 15171  0971  01BB               	clrf	((_Buz1+1)^(0+128)+8)
 15172  0972  07BB               	addwf	((_Buz1+1)^(0+128)+8),f
 15173  0973  0020               	movlb	0	; select bank0
 15174  0974  0829               	movf	setBuz@time,w
 15175  0975  0021               	movlb	1	; select bank1
 15176  0976  01BA               	clrf	(_Buz1^(0+128)+8)
 15177  0977  07BA               	addwf	(_Buz1^(0+128)+8),f
 15178                           
 15179                           ;Buzzer_B1.c: 36: } else if (Buz1.BufferStatus2 == 0) {
 15180  0978  0008               	return
 15181  0979                     l92:	
 15182  0979  1A32               	btfsc	_Buz1^(0+128),4
 15183  097A  0008               	return
 15184                           
 15185                           ;Buzzer_B1.c: 37: Buz1.BufferStatus2 = 1;
 15186  097B  1632               	bsf	_Buz1^(0+128),4
 15187                           
 15188                           ;Buzzer_B1.c: 38: Buz1.CountBuffer2 = count;
 15189  097C  0020               	movlb	0	; select bank0
 15190  097D  082C               	movf	setBuz@count,w
 15191  097E  00AB               	movwf	??_setBuz
 15192  097F  082B               	movf	??_setBuz,w
 15193  0980  0021               	movlb	1	; select bank1
 15194  0981  00B7               	movwf	(_Buz1^(0+128)+5)
 15195                           
 15196                           ;Buzzer_B1.c: 39: Buz1.TimeValueBuffer2 = time;
 15197  0982  0020               	movlb	0	; select bank0
 15198  0983  082A               	movf	setBuz@time+1,w
 15199  0984  0021               	movlb	1	; select bank1
 15200  0985  01BD               	clrf	((_Buz1+1)^(0+128)+10)
 15201  0986  07BD               	addwf	((_Buz1+1)^(0+128)+10),f
 15202  0987  0020               	movlb	0	; select bank0
 15203  0988  0829               	movf	setBuz@time,w
 15204  0989  0021               	movlb	1	; select bank1
 15205  098A  01BC               	clrf	(_Buz1^(0+128)+10)
 15206  098B  07BC               	addwf	(_Buz1^(0+128)+10),f
 15207  098C  0008               	return
 15208  098D                     __end_of_setBuz:	
 15209                           
 15210                           	psect	text104
 15211  0834                     __ptext104:	
 15212 ;; *************** function ___awdiv *****************
 15213 ;; Defined at:
 15214 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
 15215 ;; Parameters:    Size  Location     Type
 15216 ;;  divisor         2    0[BANK0 ] int 
 15217 ;;  dividend        2    2[BANK0 ] int 
 15218 ;; Auto vars:     Size  Location     Type
 15219 ;;  quotient        2    7[BANK0 ] int 
 15220 ;;  sign            1    6[BANK0 ] unsigned char 
 15221 ;;  counter         1    5[BANK0 ] unsigned char 
 15222 ;; Return value:  Size  Location     Type
 15223 ;;                  2    0[BANK0 ] int 
 15224 ;; Registers used:
 15225 ;;		wreg, status,2, status,0
 15226 ;; Tracked objects:
 15227 ;;		On entry : 0/0
 15228 ;;		On exit  : 0/0
 15229 ;;		Unchanged: 0/0
 15230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15231 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15232 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15233 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15234 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15235 ;;Total ram usage:        9 bytes
 15236 ;; Hardware stack levels used:    1
 15237 ;; Hardware stack levels required when called:    5
 15238 ;; This function calls:
 15239 ;;		Nothing
 15240 ;; This function is called by:
 15241 ;;		_setBuz
 15242 ;; This function uses a non-reentrant model
 15243 ;;
 15244                           
 15245                           
 15246                           ;psect for function ___awdiv
 15247  0834                     ___awdiv:	
 15248                           
 15249                           ;incstack = 0
 15250                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 15251  0834  0020               	movlb	0	; select bank0
 15252  0835  01A6               	clrf	___awdiv@sign
 15253  0836  1FA1               	btfss	___awdiv@divisor+1,7
 15254  0837  283F               	goto	l5517
 15255  0838  09A0               	comf	___awdiv@divisor,f
 15256  0839  09A1               	comf	___awdiv@divisor+1,f
 15257  083A  0AA0               	incf	___awdiv@divisor,f
 15258  083B  1903               	skipnz
 15259  083C  0AA1               	incf	___awdiv@divisor+1,f
 15260  083D  01A6               	clrf	___awdiv@sign
 15261  083E  0AA6               	incf	___awdiv@sign,f
 15262  083F                     l5517:	
 15263  083F  1FA3               	btfss	___awdiv@dividend+1,7
 15264  0840  284A               	goto	l5523
 15265  0841  09A2               	comf	___awdiv@dividend,f
 15266  0842  09A3               	comf	___awdiv@dividend+1,f
 15267  0843  0AA2               	incf	___awdiv@dividend,f
 15268  0844  1903               	skipnz
 15269  0845  0AA3               	incf	___awdiv@dividend+1,f
 15270  0846  3001               	movlw	1
 15271  0847  00A4               	movwf	??___awdiv
 15272  0848  0824               	movf	??___awdiv,w
 15273  0849  06A6               	xorwf	___awdiv@sign,f
 15274  084A                     l5523:	
 15275  084A  01A7               	clrf	___awdiv@quotient
 15276  084B  01A8               	clrf	___awdiv@quotient+1
 15277  084C  0821               	movf	___awdiv@divisor+1,w
 15278  084D  0420               	iorwf	___awdiv@divisor,w
 15279  084E  1903               	skipnz
 15280  084F  2879               	goto	l5545
 15281  0850  01A5               	clrf	___awdiv@counter
 15282  0851  0AA5               	incf	___awdiv@counter,f
 15283  0852                     l5533:	
 15284  0852  1BA1               	btfsc	___awdiv@divisor+1,7
 15285  0853  285E               	goto	l5535
 15286  0854  3001               	movlw	1
 15287  0855                     u4265:	
 15288  0855  35A0               	lslf	___awdiv@divisor,f
 15289  0856  0DA1               	rlf	___awdiv@divisor+1,f
 15290  0857  0B89               	decfsz	9,f
 15291  0858  2855               	goto	u4265
 15292  0859  3001               	movlw	1
 15293  085A  00A4               	movwf	??___awdiv
 15294  085B  0824               	movf	??___awdiv,w
 15295  085C  07A5               	addwf	___awdiv@counter,f
 15296  085D  2852               	goto	l5533
 15297  085E                     l5535:	
 15298  085E  3001               	movlw	1
 15299  085F                     u4285:	
 15300  085F  35A7               	lslf	___awdiv@quotient,f
 15301  0860  0DA8               	rlf	___awdiv@quotient+1,f
 15302  0861  0B89               	decfsz	9,f
 15303  0862  285F               	goto	u4285
 15304  0863  0821               	movf	___awdiv@divisor+1,w
 15305  0864  0223               	subwf	___awdiv@dividend+1,w
 15306  0865  1D03               	skipz
 15307  0866  2869               	goto	u4295
 15308  0867  0820               	movf	___awdiv@divisor,w
 15309  0868  0222               	subwf	___awdiv@dividend,w
 15310  0869                     u4295:	
 15311  0869  1C03               	skipc
 15312  086A  2870               	goto	l5541
 15313  086B  0820               	movf	___awdiv@divisor,w
 15314  086C  02A2               	subwf	___awdiv@dividend,f
 15315  086D  0821               	movf	___awdiv@divisor+1,w
 15316  086E  3BA3               	subwfb	___awdiv@dividend+1,f
 15317  086F  1427               	bsf	___awdiv@quotient,0
 15318  0870                     l5541:	
 15319  0870  3001               	movlw	1
 15320  0871                     u4305:	
 15321  0871  36A1               	lsrf	___awdiv@divisor+1,f
 15322  0872  0CA0               	rrf	___awdiv@divisor,f
 15323  0873  0B89               	decfsz	9,f
 15324  0874  2871               	goto	u4305
 15325  0875  3001               	movlw	1
 15326  0876  02A5               	subwf	___awdiv@counter,f
 15327  0877  1D03               	btfss	3,2
 15328  0878  285E               	goto	l5535
 15329  0879                     l5545:	
 15330  0879  0826               	movf	___awdiv@sign,w
 15331  087A  1903               	btfsc	3,2
 15332  087B  2881               	goto	l5549
 15333  087C  09A7               	comf	___awdiv@quotient,f
 15334  087D  09A8               	comf	___awdiv@quotient+1,f
 15335  087E  0AA7               	incf	___awdiv@quotient,f
 15336  087F  1903               	skipnz
 15337  0880  0AA8               	incf	___awdiv@quotient+1,f
 15338  0881                     l5549:	
 15339  0881  0828               	movf	___awdiv@quotient+1,w
 15340  0882  01A1               	clrf	?___awdiv+1
 15341  0883  07A1               	addwf	?___awdiv+1,f
 15342  0884  0827               	movf	___awdiv@quotient,w
 15343  0885  01A0               	clrf	?___awdiv
 15344  0886  07A0               	addwf	?___awdiv,f
 15345  0887  0008               	return
 15346  0888                     __end_of___awdiv:	
 15347                           
 15348                           	psect	text105
 15349  1E0B                     __ptext105:	
 15350 ;; *************** function _DelayOff_Initialization *****************
 15351 ;; Defined at:
 15352 ;;		line 26 in file "../src/DelayOff_B1.c"
 15353 ;; Parameters:    Size  Location     Type
 15354 ;;		None
 15355 ;; Auto vars:     Size  Location     Type
 15356 ;;		None
 15357 ;; Return value:  Size  Location     Type
 15358 ;;		None               void
 15359 ;; Registers used:
 15360 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15361 ;; Tracked objects:
 15362 ;;		On entry : 0/0
 15363 ;;		On exit  : 0/0
 15364 ;;		Unchanged: 0/0
 15365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15370 ;;Total ram usage:        0 bytes
 15371 ;; Hardware stack levels used:    1
 15372 ;; Hardware stack levels required when called:    7
 15373 ;; This function calls:
 15374 ;;		_DlyOff_Initialization
 15375 ;; This function is called by:
 15376 ;;		_main
 15377 ;; This function uses a non-reentrant model
 15378 ;;
 15379                           
 15380                           
 15381                           ;psect for function _DelayOff_Initialization
 15382  1E0B                     _DelayOff_Initialization:	
 15383                           
 15384                           ;DelayOff_B1.c: 28: DlyOff_Initialization(1);
 15385                           
 15386                           ;incstack = 0
 15387                           ; Regs used in _DelayOff_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 15388  1E0B  3001               	movlw	1
 15389  1E0C  319E  26A6         	fcall	_DlyOff_Initialization
 15390  1E0E  0008               	return
 15391  1E0F                     __end_of_DelayOff_Initialization:	
 15392                           
 15393                           	psect	text106
 15394  1EA6                     __ptext106:	
 15395 ;; *************** function _DlyOff_Initialization *****************
 15396 ;; Defined at:
 15397 ;;		line 56 in file "../src/DelayOff_B1.c"
 15398 ;; Parameters:    Size  Location     Type
 15399 ;;  sw              1    wreg     unsigned char 
 15400 ;; Auto vars:     Size  Location     Type
 15401 ;;  sw              1    2[BANK0 ] unsigned char 
 15402 ;; Return value:  Size  Location     Type
 15403 ;;		None               void
 15404 ;; Registers used:
 15405 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15406 ;; Tracked objects:
 15407 ;;		On entry : 0/0
 15408 ;;		On exit  : 0/0
 15409 ;;		Unchanged: 0/0
 15410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15412 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15414 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15415 ;;Total ram usage:        1 bytes
 15416 ;; Hardware stack levels used:    1
 15417 ;; Hardware stack levels required when called:    6
 15418 ;; This function calls:
 15419 ;;		_DelayOffPointSelect
 15420 ;; This function is called by:
 15421 ;;		_DelayOff_Initialization
 15422 ;; This function uses a non-reentrant model
 15423 ;;
 15424                           
 15425                           
 15426                           ;psect for function _DlyOff_Initialization
 15427  1EA6                     _DlyOff_Initialization:	
 15428                           
 15429                           ;incstack = 0
 15430                           ; Regs used in _DlyOff_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15431                           ;DlyOff_Initialization@sw stored from wreg
 15432  1EA6  0020               	movlb	0	; select bank0
 15433  1EA7  00A2               	movwf	DlyOff_Initialization@sw
 15434                           
 15435                           ;DelayOff_B1.c: 57: DelayOffPointSelect(sw);
 15436  1EA8  0822               	movf	DlyOff_Initialization@sw,w
 15437  1EA9  319E  269B         	fcall	_DelayOffPointSelect
 15438                           
 15439                           ;DelayOff_B1.c: 58: DelayOff->Enable = 1;
 15440  1EAB  0878               	movf	_DelayOff,w
 15441  1EAC  0086               	movwf	6
 15442  1EAD  3001               	movlw	1	; select bank2/3
 15443  1EAE  0087               	movwf	7
 15444  1EAF  1401               	bsf	1,0
 15445  1EB0  0008               	return
 15446  1EB1                     __end_of_DlyOff_Initialization:	
 15447                           
 15448                           	psect	text107
 15449  1E9B                     __ptext107:	
 15450 ;; *************** function _DelayOffPointSelect *****************
 15451 ;; Defined at:
 15452 ;;		line 7 in file "../src/DelayOff_B1.c"
 15453 ;; Parameters:    Size  Location     Type
 15454 ;;  sw              1    wreg     unsigned char 
 15455 ;; Auto vars:     Size  Location     Type
 15456 ;;  sw              1    1[BANK0 ] unsigned char 
 15457 ;; Return value:  Size  Location     Type
 15458 ;;		None               void
 15459 ;; Registers used:
 15460 ;;		wreg
 15461 ;; Tracked objects:
 15462 ;;		On entry : 0/0
 15463 ;;		On exit  : 0/0
 15464 ;;		Unchanged: 0/0
 15465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15467 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15468 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15469 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15470 ;;Total ram usage:        2 bytes
 15471 ;; Hardware stack levels used:    1
 15472 ;; Hardware stack levels required when called:    5
 15473 ;; This function calls:
 15474 ;;		Nothing
 15475 ;; This function is called by:
 15476 ;;		_DlyOff_Initialization
 15477 ;;		_DlyOff_Main
 15478 ;;		_setDelayOff_GO
 15479 ;; This function uses a non-reentrant model
 15480 ;;
 15481                           
 15482                           
 15483                           ;psect for function _DelayOffPointSelect
 15484  1E9B                     _DelayOffPointSelect:	
 15485                           
 15486                           ;incstack = 0
 15487                           ; Regs used in _DelayOffPointSelect: [wreg]
 15488                           ;DelayOffPointSelect@sw stored from wreg
 15489  1E9B  0020               	movlb	0	; select bank0
 15490  1E9C  00A1               	movwf	DelayOffPointSelect@sw
 15491                           
 15492                           ;DelayOff_B1.c: 9: if (sw == 1) {
 15493  1E9D  0821               	movf	DelayOffPointSelect@sw,w
 15494  1E9E  3A01               	xorlw	1
 15495  1E9F  1D03               	skipz
 15496  1EA0  0008               	return
 15497                           
 15498                           ;DelayOff_B1.c: 10: DelayOff = &DlySw1;
 15499  1EA1  3062               	movlw	_DlySw1& (0+255)
 15500  1EA2  00A0               	movwf	??_DelayOffPointSelect
 15501  1EA3  0820               	movf	??_DelayOffPointSelect,w
 15502  1EA4  00F8               	movwf	_DelayOff
 15503  1EA5  0008               	return
 15504  1EA6                     __end_of_DelayOffPointSelect:	
 15505                           
 15506                           	psect	text108
 15507  10D1                     __ptext108:	
 15508 ;; *************** function _CC2500_PowerOnInitial *****************
 15509 ;; Defined at:
 15510 ;;		line 122 in file "../src/CC2500_B1.c"
 15511 ;; Parameters:    Size  Location     Type
 15512 ;;		None
 15513 ;; Auto vars:     Size  Location     Type
 15514 ;;		None
 15515 ;; Return value:  Size  Location     Type
 15516 ;;		None               void
 15517 ;; Registers used:
 15518 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15519 ;; Tracked objects:
 15520 ;;		On entry : 0/0
 15521 ;;		On exit  : 0/0
 15522 ;;		Unchanged: 0/0
 15523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15528 ;;Total ram usage:        0 bytes
 15529 ;; Hardware stack levels used:    1
 15530 ;; Hardware stack levels required when called:    8
 15531 ;; This function calls:
 15532 ;;		_CC2500_ClearRXFIFO
 15533 ;;		_CC2500_ClearTXFIFO
 15534 ;;		_CC2500_FrequencyCabr
 15535 ;;		_CC2500_InitPATable
 15536 ;;		_CC2500_InitSetREG
 15537 ;;		_CC2500_PowerRST
 15538 ;;		_CC2500_SIDLEMode
 15539 ;; This function is called by:
 15540 ;;		_main
 15541 ;; This function uses a non-reentrant model
 15542 ;;
 15543                           
 15544                           
 15545                           ;psect for function _CC2500_PowerOnInitial
 15546  10D1                     _CC2500_PowerOnInitial:	
 15547                           
 15548                           ;CC2500_B1.c: 123: CC2500_PowerRST();
 15549                           
 15550                           ;incstack = 0
 15551                           ; Regs used in _CC2500_PowerOnInitial: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15552  10D1  3195  257E  3190   	fcall	_CC2500_PowerRST
 15553                           
 15554                           ;CC2500_B1.c: 124: CC2500_InitSetREG();
 15555  10D4  3193  2316  3190   	fcall	_CC2500_InitSetREG
 15556                           
 15557                           ;CC2500_B1.c: 125: CC2500_InitPATable();
 15558  10D7  3191  217E  3190   	fcall	_CC2500_InitPATable
 15559                           
 15560                           ;CC2500_B1.c: 126: CC2500_ClearTXFIFO();
 15561  10DA  319E  2603  3190   	fcall	_CC2500_ClearTXFIFO
 15562                           
 15563                           ;CC2500_B1.c: 127: CC2500_ClearRXFIFO();
 15564  10DD  319D  25FF  3190   	fcall	_CC2500_ClearRXFIFO
 15565                           
 15566                           ;CC2500_B1.c: 128: CC2500_FrequencyCabr();
 15567  10E0  319E  26D2  3190   	fcall	_CC2500_FrequencyCabr
 15568                           
 15569                           ;CC2500_B1.c: 129: CC2500_SIDLEMode();
 15570  10E3  319E  2607         	fcall	_CC2500_SIDLEMode
 15571  10E5  0008               	return
 15572  10E6                     __end_of_CC2500_PowerOnInitial:	
 15573                           
 15574                           	psect	text109
 15575  1E07                     __ptext109:	
 15576 ;; *************** function _CC2500_SIDLEMode *****************
 15577 ;; Defined at:
 15578 ;;		line 212 in file "../src/CC2500_B1.c"
 15579 ;; Parameters:    Size  Location     Type
 15580 ;;		None
 15581 ;; Auto vars:     Size  Location     Type
 15582 ;;		None
 15583 ;; Return value:  Size  Location     Type
 15584 ;;		None               void
 15585 ;; Registers used:
 15586 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15587 ;; Tracked objects:
 15588 ;;		On entry : 0/0
 15589 ;;		On exit  : 0/0
 15590 ;;		Unchanged: 0/0
 15591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15596 ;;Total ram usage:        0 bytes
 15597 ;; Hardware stack levels used:    1
 15598 ;; Hardware stack levels required when called:    7
 15599 ;; This function calls:
 15600 ;;		_CC2500_WriteCommand
 15601 ;; This function is called by:
 15602 ;;		_CC2500_PowerOnInitial
 15603 ;; This function uses a non-reentrant model
 15604 ;;
 15605                           
 15606                           
 15607                           ;psect for function _CC2500_SIDLEMode
 15608  1E07                     _CC2500_SIDLEMode:	
 15609                           
 15610                           ;CC2500_B1.c: 213: CC2500_WriteCommand(0x36);
 15611                           
 15612                           ;incstack = 0
 15613                           ; Regs used in _CC2500_SIDLEMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15614  1E07  3036               	movlw	54
 15615  1E08  3191  2113         	fcall	_CC2500_WriteCommand
 15616  1E0A  0008               	return
 15617  1E0B                     __end_of_CC2500_SIDLEMode:	
 15618                           
 15619                           	psect	text110
 15620  157E                     __ptext110:	
 15621 ;; *************** function _CC2500_PowerRST *****************
 15622 ;; Defined at:
 15623 ;;		line 135 in file "../src/CC2500_B1.c"
 15624 ;; Parameters:    Size  Location     Type
 15625 ;;		None
 15626 ;; Auto vars:     Size  Location     Type
 15627 ;;		None
 15628 ;; Return value:  Size  Location     Type
 15629 ;;		None               void
 15630 ;; Registers used:
 15631 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15632 ;; Tracked objects:
 15633 ;;		On entry : 0/0
 15634 ;;		On exit  : 0/0
 15635 ;;		Unchanged: 0/0
 15636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15639 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15640 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15641 ;;Total ram usage:        1 bytes
 15642 ;; Hardware stack levels used:    1
 15643 ;; Hardware stack levels required when called:    6
 15644 ;; This function calls:
 15645 ;;		_CC2500_WriteByte
 15646 ;;		_DelayTime_1us
 15647 ;;		_Timeout_Counter
 15648 ;;		_set_TimeoutCleared
 15649 ;; This function is called by:
 15650 ;;		_CC2500_PowerOnInitial
 15651 ;; This function uses a non-reentrant model
 15652 ;;
 15653                           
 15654                           
 15655                           ;psect for function _CC2500_PowerRST
 15656  157E                     _CC2500_PowerRST:	
 15657                           
 15658                           ;CC2500_B1.c: 136: RC1 = 0;
 15659                           
 15660                           ;incstack = 0
 15661                           ; Regs used in _CC2500_PowerRST: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15662  157E  0020               	movlb	0	; select bank0
 15663  157F  108E               	bcf	14,1	;volatile
 15664                           
 15665                           ;CC2500_B1.c: 137: RC0 = 0;
 15666  1580  100E               	bcf	14,0	;volatile
 15667                           
 15668                           ;CC2500_B1.c: 138: RC4 = 1;
 15669  1581  160E               	bsf	14,4	;volatile
 15670                           
 15671                           ;CC2500_B1.c: 139: DelayTime_1us(10);
 15672  1582  300A               	movlw	10
 15673  1583  00A0               	movwf	DelayTime_1us@count
 15674  1584  3000               	movlw	0
 15675  1585  00A1               	movwf	DelayTime_1us@count+1
 15676  1586  3192  22C9  3195   	fcall	_DelayTime_1us
 15677                           
 15678                           ;CC2500_B1.c: 140: RC4 = 0;
 15679  1589  0020               	movlb	0	; select bank0
 15680  158A  120E               	bcf	14,4	;volatile
 15681                           
 15682                           ;CC2500_B1.c: 141: DelayTime_1us(10);
 15683  158B  300A               	movlw	10
 15684  158C  00A0               	movwf	DelayTime_1us@count
 15685  158D  3000               	movlw	0
 15686  158E  00A1               	movwf	DelayTime_1us@count+1
 15687  158F  3192  22C9  3195   	fcall	_DelayTime_1us
 15688                           
 15689                           ;CC2500_B1.c: 142: RC4 = 1;
 15690  1592  0020               	movlb	0	; select bank0
 15691  1593  160E               	bsf	14,4	;volatile
 15692                           
 15693                           ;CC2500_B1.c: 143: DelayTime_1us(40);
 15694  1594  3028               	movlw	40
 15695  1595  00A0               	movwf	DelayTime_1us@count
 15696  1596  3000               	movlw	0
 15697  1597  00A1               	movwf	DelayTime_1us@count+1
 15698  1598  3192  22C9  3195   	fcall	_DelayTime_1us
 15699                           
 15700                           ;CC2500_B1.c: 144: RC4 = 0;
 15701  159B  0020               	movlb	0	; select bank0
 15702  159C  120E               	bcf	14,4	;volatile
 15703                           
 15704                           ;CC2500_B1.c: 145: SPI0Buffer = 0x30;
 15705  159D  3030               	movlw	48
 15706  159E  00A6               	movwf	??_CC2500_PowerRST
 15707  159F  0826               	movf	??_CC2500_PowerRST,w
 15708  15A0  00FB               	movwf	_SPI0Buffer
 15709                           
 15710                           ;CC2500_B1.c: 146: while (RC2 == 1 && myMain.Timeout == 0) {
 15711  15A1  2DA5               	goto	l6429
 15712  15A2                     l6427:	
 15713                           
 15714                           ;CC2500_B1.c: 147: Timeout_Counter();
 15715  15A2  3190  20BC  3195   	fcall	_Timeout_Counter
 15716  15A5                     l6429:	
 15717  15A5  0020               	movlb	0	; select bank0
 15718  15A6  1D0E               	btfss	14,2	;volatile
 15719  15A7  2DAB               	goto	l6433
 15720  15A8  0021               	movlb	1	; select bank1
 15721  15A9  1D2F               	btfss	(_myMain^(0+128)+15),2
 15722  15AA  2DA2               	goto	l6427
 15723  15AB                     l6433:	
 15724                           
 15725                           ;CC2500_B1.c: 148: };
 15726                           ;CC2500_B1.c: 149: set_TimeoutCleared();
 15727  15AB  319E  261F  3195   	fcall	_set_TimeoutCleared
 15728                           
 15729                           ;CC2500_B1.c: 150: CC2500_WriteByte();
 15730  15AE  3190  2094  3195   	fcall	_CC2500_WriteByte
 15731                           
 15732                           ;CC2500_B1.c: 151: while (RC2 == 1 && myMain.Timeout == 0) {
 15733  15B1  2DB5               	goto	l6439
 15734  15B2                     l6437:	
 15735                           
 15736                           ;CC2500_B1.c: 152: Timeout_Counter();
 15737  15B2  3190  20BC  3195   	fcall	_Timeout_Counter
 15738  15B5                     l6439:	
 15739  15B5  0020               	movlb	0	; select bank0
 15740  15B6  1D0E               	btfss	14,2	;volatile
 15741  15B7  2DBB               	goto	l6443
 15742  15B8  0021               	movlb	1	; select bank1
 15743  15B9  1D2F               	btfss	(_myMain^(0+128)+15),2
 15744  15BA  2DB2               	goto	l6437
 15745  15BB                     l6443:	
 15746                           
 15747                           ;CC2500_B1.c: 153: };
 15748                           ;CC2500_B1.c: 154: set_TimeoutCleared();
 15749  15BB  319E  261F         	fcall	_set_TimeoutCleared
 15750                           
 15751                           ;CC2500_B1.c: 155: RC0 = 0;
 15752  15BD  0020               	movlb	0	; select bank0
 15753  15BE  100E               	bcf	14,0	;volatile
 15754                           
 15755                           ;CC2500_B1.c: 156: RC4 = 1;
 15756  15BF  160E               	bsf	14,4	;volatile
 15757  15C0  0008               	return
 15758  15C1                     __end_of_CC2500_PowerRST:	
 15759                           
 15760                           	psect	text111
 15761  1316                     __ptext111:	
 15762 ;; *************** function _CC2500_InitSetREG *****************
 15763 ;; Defined at:
 15764 ;;		line 162 in file "../src/CC2500_B1.c"
 15765 ;; Parameters:    Size  Location     Type
 15766 ;;		None
 15767 ;; Auto vars:     Size  Location     Type
 15768 ;;  loop_c          1    8[BANK0 ] unsigned char 
 15769 ;;  temp2           1    7[BANK0 ] unsigned char 
 15770 ;;  temp1           1    6[BANK0 ] unsigned char 
 15771 ;; Return value:  Size  Location     Type
 15772 ;;		None               void
 15773 ;; Registers used:
 15774 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15775 ;; Tracked objects:
 15776 ;;		On entry : 0/0
 15777 ;;		On exit  : 0/0
 15778 ;;		Unchanged: 0/0
 15779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15781 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15782 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15783 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15784 ;;Total ram usage:        4 bytes
 15785 ;; Hardware stack levels used:    1
 15786 ;; Hardware stack levels required when called:    7
 15787 ;; This function calls:
 15788 ;;		_CC2500_WriteREG
 15789 ;; This function is called by:
 15790 ;;		_CC2500_PowerOnInitial
 15791 ;; This function uses a non-reentrant model
 15792 ;;
 15793                           
 15794                           
 15795                           ;psect for function _CC2500_InitSetREG
 15796  1316                     _CC2500_InitSetREG:	
 15797                           
 15798                           ;CC2500_B1.c: 163: unsigned char loop_c;
 15799                           ;CC2500_B1.c: 164: unsigned char temp1, temp2;
 15800                           ;CC2500_B1.c: 166: for (loop_c = 0; loop_c < 47; loop_c++) {
 15801                           
 15802                           ;incstack = 0
 15803                           ; Regs used in _CC2500_InitSetREG: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15804  1316  0020               	movlb	0	; select bank0
 15805  1317  01A8               	clrf	CC2500_InitSetREG@loop_c
 15806  1318                     L5:	
 15807  1318  302F               	movlw	47
 15808  1319  0228               	subwf	CC2500_InitSetREG@loop_c,w
 15809  131A  1803               	btfsc	3,0
 15810  131B  0008               	return
 15811                           
 15812                           ;CC2500_B1.c: 167: temp1 = CC2500_registers_address[loop_c];
 15813  131C  0828               	movf	CC2500_InitSetREG@loop_c,w
 15814  131D  3E00               	addlw	low (_CC2500_registers_address| (0+32768))
 15815  131E  0084               	movwf	4
 15816  131F  3090               	movlw	high (_CC2500_registers_address| (0+32768))
 15817  1320  1803               	skipnc
 15818  1321  3E01               	addlw	1
 15819  1322  0085               	movwf	5
 15820  1323  0800               	movf	0,w	;code access
 15821  1324  00A5               	movwf	??_CC2500_InitSetREG
 15822  1325  0825               	movf	??_CC2500_InitSetREG,w
 15823  1326  00A6               	movwf	CC2500_InitSetREG@temp1
 15824                           
 15825                           ;CC2500_B1.c: 168: temp2 = CC2500_rfSettings[loop_c];
 15826  1327  0828               	movf	CC2500_InitSetREG@loop_c,w
 15827  1328  3E2F               	addlw	low (_CC2500_rfSettings| (0+32768))
 15828  1329  0084               	movwf	4
 15829  132A  3090               	movlw	high (_CC2500_rfSettings| (0+32768))
 15830  132B  1803               	skipnc
 15831  132C  3E01               	addlw	1
 15832  132D  0085               	movwf	5
 15833  132E  0800               	movf	0,w	;code access
 15834  132F  00A5               	movwf	??_CC2500_InitSetREG
 15835  1330  0825               	movf	??_CC2500_InitSetREG,w
 15836  1331  00A7               	movwf	CC2500_InitSetREG@temp2
 15837                           
 15838                           ;CC2500_B1.c: 170: CC2500_WriteREG(temp1, temp2);
 15839  1332  0827               	movf	CC2500_InitSetREG@temp2,w
 15840  1333  00A5               	movwf	??_CC2500_InitSetREG
 15841  1334  0825               	movf	??_CC2500_InitSetREG,w
 15842  1335  00A2               	movwf	CC2500_WriteREG@value
 15843  1336  0826               	movf	CC2500_InitSetREG@temp1,w
 15844  1337  3191  21FC  3193   	fcall	_CC2500_WriteREG
 15845  133A  3001               	movlw	1
 15846  133B  0020               	movlb	0	; select bank0
 15847  133C  00A5               	movwf	??_CC2500_InitSetREG
 15848  133D  0825               	movf	??_CC2500_InitSetREG,w
 15849  133E  07A8               	addwf	CC2500_InitSetREG@loop_c,f
 15850  133F  2B18               	goto	L5
 15851  1340                     __end_of_CC2500_InitSetREG:	
 15852                           
 15853                           	psect	text112
 15854  117E                     __ptext112:	
 15855 ;; *************** function _CC2500_InitPATable *****************
 15856 ;; Defined at:
 15857 ;;		line 177 in file "../src/CC2500_B1.c"
 15858 ;; Parameters:    Size  Location     Type
 15859 ;;		None
 15860 ;; Auto vars:     Size  Location     Type
 15861 ;;  loop_d          1    7[BANK0 ] unsigned char 
 15862 ;;  temp            1    6[BANK0 ] unsigned char 
 15863 ;; Return value:  Size  Location     Type
 15864 ;;		None               void
 15865 ;; Registers used:
 15866 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15867 ;; Tracked objects:
 15868 ;;		On entry : 0/0
 15869 ;;		On exit  : 0/0
 15870 ;;		Unchanged: 0/0
 15871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15873 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15874 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15875 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15876 ;;Total ram usage:        3 bytes
 15877 ;; Hardware stack levels used:    1
 15878 ;; Hardware stack levels required when called:    7
 15879 ;; This function calls:
 15880 ;;		_CC2500_WriteREG
 15881 ;; This function is called by:
 15882 ;;		_CC2500_PowerOnInitial
 15883 ;; This function uses a non-reentrant model
 15884 ;;
 15885                           
 15886                           
 15887                           ;psect for function _CC2500_InitPATable
 15888  117E                     _CC2500_InitPATable:	
 15889                           
 15890                           ;CC2500_B1.c: 178: unsigned char loop_d;
 15891                           ;CC2500_B1.c: 179: unsigned char temp;
 15892                           ;CC2500_B1.c: 181: for (loop_d = 0; loop_d < 8; loop_d++) {
 15893                           
 15894                           ;incstack = 0
 15895                           ; Regs used in _CC2500_InitPATable: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15896  117E  0020               	movlb	0	; select bank0
 15897  117F  01A7               	clrf	CC2500_InitPATable@loop_d
 15898  1180                     L6:	
 15899  1180  3008               	movlw	8
 15900  1181  0227               	subwf	CC2500_InitPATable@loop_d,w
 15901  1182  1803               	btfsc	3,0
 15902  1183  0008               	return
 15903                           
 15904                           ;CC2500_B1.c: 182: temp = CC2500_patable_vaule[loop_d];
 15905  1184  0827               	movf	CC2500_InitPATable@loop_d,w
 15906  1185  3E5E               	addlw	low (_CC2500_patable_vaule| (0+32768))
 15907  1186  0084               	movwf	4
 15908  1187  3090               	movlw	high (_CC2500_patable_vaule| (0+32768))
 15909  1188  1803               	skipnc
 15910  1189  3E01               	addlw	1
 15911  118A  0085               	movwf	5
 15912  118B  0800               	movf	0,w	;code access
 15913  118C  00A5               	movwf	??_CC2500_InitPATable
 15914  118D  0825               	movf	??_CC2500_InitPATable,w
 15915  118E  00A6               	movwf	CC2500_InitPATable@temp
 15916                           
 15917                           ;CC2500_B1.c: 183: CC2500_WriteREG(0x3E, temp);
 15918  118F  0826               	movf	CC2500_InitPATable@temp,w
 15919  1190  00A5               	movwf	??_CC2500_InitPATable
 15920  1191  0825               	movf	??_CC2500_InitPATable,w
 15921  1192  00A2               	movwf	CC2500_WriteREG@value
 15922  1193  303E               	movlw	62
 15923  1194  3191  21FC  3191   	fcall	_CC2500_WriteREG
 15924  1197  3001               	movlw	1
 15925  1198  0020               	movlb	0	; select bank0
 15926  1199  00A5               	movwf	??_CC2500_InitPATable
 15927  119A  0825               	movf	??_CC2500_InitPATable,w
 15928  119B  07A7               	addwf	CC2500_InitPATable@loop_d,f
 15929  119C  2980               	goto	L6
 15930  119D                     __end_of_CC2500_InitPATable:	
 15931                           
 15932                           	psect	text113
 15933  11FC                     __ptext113:	
 15934 ;; *************** function _CC2500_WriteREG *****************
 15935 ;; Defined at:
 15936 ;;		line 254 in file "../src/CC2500_B1.c"
 15937 ;; Parameters:    Size  Location     Type
 15938 ;;  w_addr          1    wreg     unsigned char 
 15939 ;;  value           1    2[BANK0 ] unsigned char 
 15940 ;; Auto vars:     Size  Location     Type
 15941 ;;  w_addr          1    4[BANK0 ] unsigned char 
 15942 ;; Return value:  Size  Location     Type
 15943 ;;		None               void
 15944 ;; Registers used:
 15945 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15946 ;; Tracked objects:
 15947 ;;		On entry : 0/0
 15948 ;;		On exit  : 0/0
 15949 ;;		Unchanged: 0/0
 15950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15951 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15952 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15953 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15954 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15955 ;;Total ram usage:        3 bytes
 15956 ;; Hardware stack levels used:    1
 15957 ;; Hardware stack levels required when called:    6
 15958 ;; This function calls:
 15959 ;;		_CC2500_WriteByte
 15960 ;;		_Timeout_Counter
 15961 ;;		_set_TimeoutCleared
 15962 ;; This function is called by:
 15963 ;;		_CC2500_InitSetREG
 15964 ;;		_CC2500_InitPATable
 15965 ;; This function uses a non-reentrant model
 15966 ;;
 15967                           
 15968                           
 15969                           ;psect for function _CC2500_WriteREG
 15970  11FC                     _CC2500_WriteREG:	
 15971                           
 15972                           ;incstack = 0
 15973                           ; Regs used in _CC2500_WriteREG: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15974                           ;CC2500_WriteREG@w_addr stored from wreg
 15975  11FC  0020               	movlb	0	; select bank0
 15976  11FD  00A4               	movwf	CC2500_WriteREG@w_addr
 15977                           
 15978                           ;CC2500_B1.c: 255: RC4 = 0;
 15979  11FE  120E               	bcf	14,4	;volatile
 15980                           
 15981                           ;CC2500_B1.c: 256: SPI0Buffer = w_addr;
 15982  11FF  0824               	movf	CC2500_WriteREG@w_addr,w
 15983  1200  00A3               	movwf	??_CC2500_WriteREG
 15984  1201  0823               	movf	??_CC2500_WriteREG,w
 15985  1202  00FB               	movwf	_SPI0Buffer
 15986                           
 15987                           ;CC2500_B1.c: 257: while (RC2 == 1 && myMain.Timeout == 0) {
 15988  1203  2A07               	goto	l6175
 15989  1204                     l6173:	
 15990                           
 15991                           ;CC2500_B1.c: 258: Timeout_Counter();
 15992  1204  3190  20BC  3191   	fcall	_Timeout_Counter
 15993  1207                     l6175:	
 15994  1207  0020               	movlb	0	; select bank0
 15995  1208  1D0E               	btfss	14,2	;volatile
 15996  1209  2A0D               	goto	l6179
 15997  120A  0021               	movlb	1	; select bank1
 15998  120B  1D2F               	btfss	(_myMain^(0+128)+15),2
 15999  120C  2A04               	goto	l6173
 16000  120D                     l6179:	
 16001                           
 16002                           ;CC2500_B1.c: 259: };
 16003                           ;CC2500_B1.c: 260: set_TimeoutCleared();
 16004  120D  319E  261F  3191   	fcall	_set_TimeoutCleared
 16005                           
 16006                           ;CC2500_B1.c: 262: CC2500_WriteByte();
 16007  1210  3190  2094  3191   	fcall	_CC2500_WriteByte
 16008                           
 16009                           ;CC2500_B1.c: 263: SPI0Buffer = value;
 16010  1213  0020               	movlb	0	; select bank0
 16011  1214  0822               	movf	CC2500_WriteREG@value,w
 16012  1215  00A3               	movwf	??_CC2500_WriteREG
 16013  1216  0823               	movf	??_CC2500_WriteREG,w
 16014  1217  00FB               	movwf	_SPI0Buffer
 16015                           
 16016                           ;CC2500_B1.c: 264: CC2500_WriteByte();
 16017  1218  3190  2094         	fcall	_CC2500_WriteByte
 16018                           
 16019                           ;CC2500_B1.c: 265: RC4 = 1;
 16020  121A  0020               	movlb	0	; select bank0
 16021  121B  160E               	bsf	14,4	;volatile
 16022  121C  0008               	return
 16023  121D                     __end_of_CC2500_WriteREG:	
 16024                           
 16025                           	psect	text114
 16026  1ED2                     __ptext114:	
 16027 ;; *************** function _CC2500_FrequencyCabr *****************
 16028 ;; Defined at:
 16029 ;;		line 204 in file "../src/CC2500_B1.c"
 16030 ;; Parameters:    Size  Location     Type
 16031 ;;		None
 16032 ;; Auto vars:     Size  Location     Type
 16033 ;;		None
 16034 ;; Return value:  Size  Location     Type
 16035 ;;		None               void
 16036 ;; Registers used:
 16037 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16038 ;; Tracked objects:
 16039 ;;		On entry : 0/0
 16040 ;;		On exit  : 0/0
 16041 ;;		Unchanged: 0/0
 16042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16047 ;;Total ram usage:        0 bytes
 16048 ;; Hardware stack levels used:    1
 16049 ;; Hardware stack levels required when called:    7
 16050 ;; This function calls:
 16051 ;;		_CC2500_WriteCommand
 16052 ;;		_DelayTime_1us
 16053 ;; This function is called by:
 16054 ;;		_CC2500_PowerOnInitial
 16055 ;; This function uses a non-reentrant model
 16056 ;;
 16057                           
 16058                           
 16059                           ;psect for function _CC2500_FrequencyCabr
 16060  1ED2                     _CC2500_FrequencyCabr:	
 16061                           
 16062                           ;CC2500_B1.c: 205: CC2500_WriteCommand(0x33);
 16063                           
 16064                           ;incstack = 0
 16065                           ; Regs used in _CC2500_FrequencyCabr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16066  1ED2  3033               	movlw	51
 16067  1ED3  3191  2113  319E   	fcall	_CC2500_WriteCommand
 16068                           
 16069                           ;CC2500_B1.c: 206: DelayTime_1us(1000);
 16070  1ED6  30E8               	movlw	232
 16071  1ED7  0020               	movlb	0	; select bank0
 16072  1ED8  00A0               	movwf	DelayTime_1us@count
 16073  1ED9  3003               	movlw	3
 16074  1EDA  00A1               	movwf	DelayTime_1us@count+1
 16075  1EDB  3192  22C9         	fcall	_DelayTime_1us
 16076  1EDD  0008               	return
 16077  1EDE                     __end_of_CC2500_FrequencyCabr:	
 16078                           
 16079                           	psect	text115
 16080  12C9                     __ptext115:	
 16081 ;; *************** function _DelayTime_1us *****************
 16082 ;; Defined at:
 16083 ;;		line 323 in file "../src/CC2500_B1.c"
 16084 ;; Parameters:    Size  Location     Type
 16085 ;;  count           2    0[BANK0 ] int 
 16086 ;; Auto vars:     Size  Location     Type
 16087 ;;  j               2    4[BANK0 ] unsigned int 
 16088 ;;  i               2    2[BANK0 ] unsigned int 
 16089 ;; Return value:  Size  Location     Type
 16090 ;;		None               void
 16091 ;; Registers used:
 16092 ;;		wreg, status,2
 16093 ;; Tracked objects:
 16094 ;;		On entry : 0/0
 16095 ;;		On exit  : 0/0
 16096 ;;		Unchanged: 0/0
 16097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16098 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16099 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16101 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16102 ;;Total ram usage:        6 bytes
 16103 ;; Hardware stack levels used:    1
 16104 ;; Hardware stack levels required when called:    5
 16105 ;; This function calls:
 16106 ;;		Nothing
 16107 ;; This function is called by:
 16108 ;;		_CC2500_PowerRST
 16109 ;;		_CC2500_FrequencyCabr
 16110 ;; This function uses a non-reentrant model
 16111 ;;
 16112                           
 16113                           
 16114                           ;psect for function _DelayTime_1us
 16115  12C9                     _DelayTime_1us:	
 16116                           
 16117                           ;CC2500_B1.c: 324: unsigned int i, j;
 16118                           ;CC2500_B1.c: 325: for (i = 1; i < count; i++)
 16119                           
 16120                           ;incstack = 0
 16121                           ; Regs used in _DelayTime_1us: [wreg+status,2]
 16122  12C9  3001               	movlw	1
 16123  12CA  0020               	movlb	0	; select bank0
 16124  12CB  00A2               	movwf	DelayTime_1us@i
 16125  12CC  3000               	movlw	0
 16126  12CD  00A3               	movwf	DelayTime_1us@i+1
 16127  12CE                     l362:	
 16128  12CE  0821               	movf	DelayTime_1us@count+1,w
 16129  12CF  0223               	subwf	DelayTime_1us@i+1,w
 16130  12D0  1D03               	skipz
 16131  12D1  2AD4               	goto	u5085
 16132  12D2  0820               	movf	DelayTime_1us@count,w
 16133  12D3  0222               	subwf	DelayTime_1us@i,w
 16134  12D4                     u5085:	
 16135  12D4  1803               	btfsc	3,0
 16136  12D5  0008               	return
 16137                           
 16138                           ;CC2500_B1.c: 326: for (j = 0; j <= 1; j++);
 16139  12D6  01A4               	clrf	DelayTime_1us@j
 16140  12D7  01A5               	clrf	DelayTime_1us@j+1
 16141  12D8  3000               	movlw	0
 16142  12D9  0225               	subwf	DelayTime_1us@j+1,w
 16143  12DA  3002               	movlw	2
 16144  12DB  1903               	skipnz
 16145  12DC  0224               	subwf	DelayTime_1us@j,w
 16146  12DD  1803               	btfsc	3,0
 16147  12DE  2AEA               	goto	l6167
 16148  12DF                     l6165:	
 16149  12DF  3001               	movlw	1
 16150  12E0  07A4               	addwf	DelayTime_1us@j,f
 16151  12E1  3000               	movlw	0
 16152  12E2  3DA5               	addwfc	DelayTime_1us@j+1,f
 16153  12E3  3000               	movlw	0
 16154  12E4  0225               	subwf	DelayTime_1us@j+1,w
 16155  12E5  3002               	movlw	2
 16156  12E6  1903               	skipnz
 16157  12E7  0224               	subwf	DelayTime_1us@j,w
 16158  12E8  1C03               	skipc
 16159  12E9  2ADF               	goto	l6165
 16160  12EA                     l6167:	
 16161  12EA  3001               	movlw	1
 16162  12EB  07A2               	addwf	DelayTime_1us@i,f
 16163  12EC  3000               	movlw	0
 16164  12ED  3DA3               	addwfc	DelayTime_1us@i+1,f
 16165  12EE  2ACE               	goto	l362
 16166  12EF                     __end_of_DelayTime_1us:	
 16167                           
 16168                           	psect	text116
 16169  1E03                     __ptext116:	
 16170 ;; *************** function _CC2500_ClearTXFIFO *****************
 16171 ;; Defined at:
 16172 ;;		line 190 in file "../src/CC2500_B1.c"
 16173 ;; Parameters:    Size  Location     Type
 16174 ;;		None
 16175 ;; Auto vars:     Size  Location     Type
 16176 ;;		None
 16177 ;; Return value:  Size  Location     Type
 16178 ;;		None               void
 16179 ;; Registers used:
 16180 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16181 ;; Tracked objects:
 16182 ;;		On entry : 0/0
 16183 ;;		On exit  : 0/0
 16184 ;;		Unchanged: 0/0
 16185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16190 ;;Total ram usage:        0 bytes
 16191 ;; Hardware stack levels used:    1
 16192 ;; Hardware stack levels required when called:    7
 16193 ;; This function calls:
 16194 ;;		_CC2500_WriteCommand
 16195 ;; This function is called by:
 16196 ;;		_CC2500_PowerOnInitial
 16197 ;; This function uses a non-reentrant model
 16198 ;;
 16199                           
 16200                           
 16201                           ;psect for function _CC2500_ClearTXFIFO
 16202  1E03                     _CC2500_ClearTXFIFO:	
 16203                           
 16204                           ;CC2500_B1.c: 191: CC2500_WriteCommand(0x3B);
 16205                           
 16206                           ;incstack = 0
 16207                           ; Regs used in _CC2500_ClearTXFIFO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16208  1E03  303B               	movlw	59
 16209  1E04  3191  2113         	fcall	_CC2500_WriteCommand
 16210  1E06  0008               	return
 16211  1E07                     __end_of_CC2500_ClearTXFIFO:	
 16212                           
 16213                           	psect	text117
 16214  1DFF                     __ptext117:	
 16215 ;; *************** function _CC2500_ClearRXFIFO *****************
 16216 ;; Defined at:
 16217 ;;		line 197 in file "../src/CC2500_B1.c"
 16218 ;; Parameters:    Size  Location     Type
 16219 ;;		None
 16220 ;; Auto vars:     Size  Location     Type
 16221 ;;		None
 16222 ;; Return value:  Size  Location     Type
 16223 ;;		None               void
 16224 ;; Registers used:
 16225 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16226 ;; Tracked objects:
 16227 ;;		On entry : 0/0
 16228 ;;		On exit  : 0/0
 16229 ;;		Unchanged: 0/0
 16230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16235 ;;Total ram usage:        0 bytes
 16236 ;; Hardware stack levels used:    1
 16237 ;; Hardware stack levels required when called:    7
 16238 ;; This function calls:
 16239 ;;		_CC2500_WriteCommand
 16240 ;; This function is called by:
 16241 ;;		_CC2500_PowerOnInitial
 16242 ;; This function uses a non-reentrant model
 16243 ;;
 16244                           
 16245                           
 16246                           ;psect for function _CC2500_ClearRXFIFO
 16247  1DFF                     _CC2500_ClearRXFIFO:	
 16248                           
 16249                           ;CC2500_B1.c: 198: CC2500_WriteCommand(0x3A);
 16250                           
 16251                           ;incstack = 0
 16252                           ; Regs used in _CC2500_ClearRXFIFO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16253  1DFF  303A               	movlw	58
 16254  1E00  3191  2113         	fcall	_CC2500_WriteCommand
 16255  1E02  0008               	return
 16256  1E03                     __end_of_CC2500_ClearRXFIFO:	
 16257                           
 16258                           	psect	text118
 16259  1113                     __ptext118:	
 16260 ;; *************** function _CC2500_WriteCommand *****************
 16261 ;; Defined at:
 16262 ;;		line 288 in file "../src/CC2500_B1.c"
 16263 ;; Parameters:    Size  Location     Type
 16264 ;;  command         1    wreg     unsigned char 
 16265 ;; Auto vars:     Size  Location     Type
 16266 ;;  command         1    3[BANK0 ] unsigned char 
 16267 ;; Return value:  Size  Location     Type
 16268 ;;		None               void
 16269 ;; Registers used:
 16270 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16271 ;; Tracked objects:
 16272 ;;		On entry : 0/0
 16273 ;;		On exit  : 0/0
 16274 ;;		Unchanged: 0/0
 16275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16277 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16278 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16279 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16280 ;;Total ram usage:        2 bytes
 16281 ;; Hardware stack levels used:    1
 16282 ;; Hardware stack levels required when called:    6
 16283 ;; This function calls:
 16284 ;;		_CC2500_WriteByte
 16285 ;;		_Timeout_Counter
 16286 ;;		_set_TimeoutCleared
 16287 ;; This function is called by:
 16288 ;;		_CC2500_TxData
 16289 ;;		_CC2500_RxData
 16290 ;;		_CC2500_ClearTXFIFO
 16291 ;;		_CC2500_ClearRXFIFO
 16292 ;;		_CC2500_FrequencyCabr
 16293 ;;		_CC2500_SIDLEMode
 16294 ;;		_setRF_Main
 16295 ;;		_RF_RxDisable
 16296 ;; This function uses a non-reentrant model
 16297 ;;
 16298                           
 16299                           
 16300                           ;psect for function _CC2500_WriteCommand
 16301  1113                     _CC2500_WriteCommand:	
 16302                           
 16303                           ;incstack = 0
 16304                           ; Regs used in _CC2500_WriteCommand: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16305                           ;CC2500_WriteCommand@command stored from wreg
 16306  1113  0020               	movlb	0	; select bank0
 16307  1114  00A3               	movwf	CC2500_WriteCommand@command
 16308                           
 16309                           ;CC2500_B1.c: 289: RC4 = 0;
 16310  1115  120E               	bcf	14,4	;volatile
 16311                           
 16312                           ;CC2500_B1.c: 290: SPI0Buffer = command;
 16313  1116  0823               	movf	CC2500_WriteCommand@command,w
 16314  1117  00A2               	movwf	??_CC2500_WriteCommand
 16315  1118  0822               	movf	??_CC2500_WriteCommand,w
 16316  1119  00FB               	movwf	_SPI0Buffer
 16317                           
 16318                           ;CC2500_B1.c: 292: while (RC2 == 1 && myMain.Timeout == 0) {
 16319  111A  291E               	goto	l5911
 16320  111B                     l5909:	
 16321                           
 16322                           ;CC2500_B1.c: 293: Timeout_Counter();
 16323  111B  3190  20BC  3191   	fcall	_Timeout_Counter
 16324  111E                     l5911:	
 16325  111E  0020               	movlb	0	; select bank0
 16326  111F  1D0E               	btfss	14,2	;volatile
 16327  1120  2924               	goto	l5915
 16328  1121  0021               	movlb	1	; select bank1
 16329  1122  1D2F               	btfss	(_myMain^(0+128)+15),2
 16330  1123  291B               	goto	l5909
 16331  1124                     l5915:	
 16332                           
 16333                           ;CC2500_B1.c: 294: };
 16334                           ;CC2500_B1.c: 295: set_TimeoutCleared();
 16335  1124  319E  261F  3191   	fcall	_set_TimeoutCleared
 16336                           
 16337                           ;CC2500_B1.c: 297: CC2500_WriteByte();
 16338  1127  3190  2094         	fcall	_CC2500_WriteByte
 16339                           
 16340                           ;CC2500_B1.c: 298: RC4 = 1;
 16341  1129  0020               	movlb	0	; select bank0
 16342  112A  160E               	bsf	14,4	;volatile
 16343  112B  0008               	return
 16344  112C                     __end_of_CC2500_WriteCommand:	
 16345                           
 16346                           	psect	text119
 16347  1E1F                     __ptext119:	
 16348 ;; *************** function _set_TimeoutCleared *****************
 16349 ;; Defined at:
 16350 ;;		line 218 in file "../src/main_B1.c"
 16351 ;; Parameters:    Size  Location     Type
 16352 ;;		None
 16353 ;; Auto vars:     Size  Location     Type
 16354 ;;		None
 16355 ;; Return value:  Size  Location     Type
 16356 ;;		None               void
 16357 ;; Registers used:
 16358 ;;		status,2
 16359 ;; Tracked objects:
 16360 ;;		On entry : 0/0
 16361 ;;		On exit  : 0/0
 16362 ;;		Unchanged: 0/0
 16363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16368 ;;Total ram usage:        0 bytes
 16369 ;; Hardware stack levels used:    1
 16370 ;; Hardware stack levels required when called:    5
 16371 ;; This function calls:
 16372 ;;		Nothing
 16373 ;; This function is called by:
 16374 ;;		_CC2500_TxData
 16375 ;;		_CC2500_RxData
 16376 ;;		_CC2500_PowerRST
 16377 ;;		_CC2500_WriteREG
 16378 ;;		_CC2500_WriteCommand
 16379 ;;		_CC2500_ReadStatus
 16380 ;;		_getAD
 16381 ;;		_TouchPower
 16382 ;;		_CC2500_ReadREG
 16383 ;; This function uses a non-reentrant model
 16384 ;;
 16385                           
 16386                           
 16387                           ;psect for function _set_TimeoutCleared
 16388  1E1F                     _set_TimeoutCleared:	
 16389                           
 16390                           ;main_B1.c: 219: myMain.Timeout = 0;
 16391                           
 16392                           ;incstack = 0
 16393                           ; Regs used in _set_TimeoutCleared: [status,2]
 16394  1E1F  0021               	movlb	1	; select bank1
 16395  1E20  112F               	bcf	(_myMain^(0+128)+15),2
 16396                           
 16397                           ;main_B1.c: 220: myMain.Timeout_Counter = 0;
 16398  1E21  01B0               	clrf	(_myMain^(0+128)+16)
 16399  1E22  01B1               	clrf	((_myMain+1)^(0+128)+16)
 16400  1E23  0008               	return
 16401  1E24                     __end_of_set_TimeoutCleared:	
 16402                           
 16403                           	psect	text120
 16404  10BC                     __ptext120:	
 16405 ;; *************** function _Timeout_Counter *****************
 16406 ;; Defined at:
 16407 ;;		line 209 in file "../src/main_B1.c"
 16408 ;; Parameters:    Size  Location     Type
 16409 ;;		None
 16410 ;; Auto vars:     Size  Location     Type
 16411 ;;		None
 16412 ;; Return value:  Size  Location     Type
 16413 ;;		None               void
 16414 ;; Registers used:
 16415 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16416 ;; Tracked objects:
 16417 ;;		On entry : 0/0
 16418 ;;		On exit  : 0/0
 16419 ;;		Unchanged: 0/0
 16420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16425 ;;Total ram usage:        0 bytes
 16426 ;; Hardware stack levels used:    1
 16427 ;; Hardware stack levels required when called:    5
 16428 ;; This function calls:
 16429 ;;		Nothing
 16430 ;; This function is called by:
 16431 ;;		_CC2500_TxData
 16432 ;;		_CC2500_RxData
 16433 ;;		_CC2500_PowerRST
 16434 ;;		_CC2500_WriteREG
 16435 ;;		_CC2500_WriteCommand
 16436 ;;		_CC2500_ReadStatus
 16437 ;;		_getAD
 16438 ;;		_TouchPower
 16439 ;;		_CC2500_ReadREG
 16440 ;; This function uses a non-reentrant model
 16441 ;;
 16442                           
 16443                           
 16444                           ;psect for function _Timeout_Counter
 16445  10BC                     _Timeout_Counter:	
 16446                           
 16447                           ;main_B1.c: 210: myMain.Timeout_Counter++;
 16448                           
 16449                           ;incstack = 0
 16450                           ; Regs used in _Timeout_Counter: [wreg+fsr1l+fsr1h+status,2+status,0]
 16451  10BC  3001               	movlw	1
 16452  10BD  0021               	movlb	1	; select bank1
 16453  10BE  07B0               	addwf	(_myMain^(0+128)+16),f
 16454  10BF  3000               	movlw	0
 16455  10C0  3DB1               	addwfc	((_myMain+1)^(0+128)+16),f
 16456                           
 16457                           ;main_B1.c: 211: if (myMain.Timeout_Counter == 10000) {
 16458  10C1  3010               	movlw	16
 16459  10C2  3EA0               	addlw	_myMain& (0+255)
 16460  10C3  0086               	movwf	6
 16461  10C4  0187               	clrf	7
 16462  10C5  3F40               	moviw [0]fsr1
 16463  10C6  3A10               	xorlw	16
 16464  10C7  1D03               	skipz
 16465  10C8  28CB               	goto	u4615
 16466  10C9  3F41               	moviw [1]fsr1
 16467  10CA  3A27               	xorlw	39
 16468  10CB                     u4615:	
 16469  10CB  1D03               	skipz
 16470  10CC  0008               	return
 16471                           
 16472                           ;main_B1.c: 212: myMain.Timeout_Counter = 0;
 16473  10CD  01B0               	clrf	(_myMain^(0+128)+16)
 16474  10CE  01B1               	clrf	((_myMain+1)^(0+128)+16)
 16475                           
 16476                           ;main_B1.c: 213: myMain.Timeout = 1;
 16477  10CF  152F               	bsf	(_myMain^(0+128)+15),2
 16478  10D0  0008               	return
 16479  10D1                     __end_of_Timeout_Counter:	
 16480                           
 16481                           	psect	text121
 16482  1094                     __ptext121:	
 16483 ;; *************** function _CC2500_WriteByte *****************
 16484 ;; Defined at:
 16485 ;;		line 222 in file "../src/CC2500_B1.c"
 16486 ;; Parameters:    Size  Location     Type
 16487 ;;		None
 16488 ;; Auto vars:     Size  Location     Type
 16489 ;;  loop_a          1    1[BANK0 ] unsigned char 
 16490 ;; Return value:  Size  Location     Type
 16491 ;;		None               void
 16492 ;; Registers used:
 16493 ;;		wreg, status,2, status,0
 16494 ;; Tracked objects:
 16495 ;;		On entry : 0/0
 16496 ;;		On exit  : 0/0
 16497 ;;		Unchanged: 0/0
 16498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16500 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16501 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16502 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16503 ;;Total ram usage:        2 bytes
 16504 ;; Hardware stack levels used:    1
 16505 ;; Hardware stack levels required when called:    5
 16506 ;; This function calls:
 16507 ;;		Nothing
 16508 ;; This function is called by:
 16509 ;;		_CC2500_TxData
 16510 ;;		_CC2500_RxData
 16511 ;;		_CC2500_PowerRST
 16512 ;;		_CC2500_WriteREG
 16513 ;;		_CC2500_WriteCommand
 16514 ;;		_CC2500_ReadStatus
 16515 ;;		_CC2500_ReadREG
 16516 ;; This function uses a non-reentrant model
 16517 ;;
 16518                           
 16519                           
 16520                           ;psect for function _CC2500_WriteByte
 16521  1094                     _CC2500_WriteByte:	
 16522                           
 16523                           ;CC2500_B1.c: 223: unsigned char loop_a;
 16524                           ;CC2500_B1.c: 224: for (loop_a = 0; loop_a < 8; loop_a++) {
 16525                           
 16526                           ;incstack = 0
 16527                           ; Regs used in _CC2500_WriteByte: [wreg+status,2+status,0]
 16528  1094  0020               	movlb	0	; select bank0
 16529  1095  01A1               	clrf	CC2500_WriteByte@loop_a
 16530  1096                     L7:	
 16531  1096  3008               	movlw	8
 16532  1097  0221               	subwf	CC2500_WriteByte@loop_a,w
 16533  1098  1803               	btfsc	3,0
 16534  1099  0008               	return
 16535                           
 16536                           ;CC2500_B1.c: 225: if (SPI0Buffer & 0x80)
 16537  109A  1FFB               	btfss	_SPI0Buffer,7
 16538  109B  289E               	goto	l318
 16539                           
 16540                           ;CC2500_B1.c: 226: RC0 = 1;
 16541  109C  140E               	bsf	14,0	;volatile
 16542  109D  289F               	goto	l319
 16543  109E                     l318:	
 16544                           
 16545                           ;CC2500_B1.c: 227: else
 16546                           ;CC2500_B1.c: 228: RC0 = 0;
 16547  109E  100E               	bcf	14,0	;volatile
 16548  109F                     l319:	
 16549                           
 16550                           ;CC2500_B1.c: 229: RC1 = 1;
 16551  109F  148E               	bsf	14,1	;volatile
 16552                           
 16553                           ;CC2500_B1.c: 230: SPI0Buffer <<= 1;
 16554  10A0  1003               	clrc
 16555  10A1  0DFB               	rlf	_SPI0Buffer,f
 16556                           
 16557                           ;CC2500_B1.c: 231: RC1 = 0;
 16558  10A2  108E               	bcf	14,1	;volatile
 16559  10A3  3001               	movlw	1
 16560  10A4  00A0               	movwf	??_CC2500_WriteByte
 16561  10A5  0820               	movf	??_CC2500_WriteByte,w
 16562  10A6  07A1               	addwf	CC2500_WriteByte@loop_a,f
 16563  10A7  2896               	goto	L7
 16564  10A8                     __end_of_CC2500_WriteByte:	
 16565                           
 16566                           	psect	text122
 16567  1766                     __ptext122:	
 16568 ;; *************** function _Buzzer_Main *****************
 16569 ;; Defined at:
 16570 ;;		line 46 in file "../src/Buzzer_B1.c"
 16571 ;; Parameters:    Size  Location     Type
 16572 ;;		None
 16573 ;; Auto vars:     Size  Location     Type
 16574 ;;		None
 16575 ;; Return value:  Size  Location     Type
 16576 ;;		None               void
 16577 ;; Registers used:
 16578 ;;		wreg, status,2, status,0
 16579 ;; Tracked objects:
 16580 ;;		On entry : 0/0
 16581 ;;		On exit  : 0/0
 16582 ;;		Unchanged: 0/0
 16583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16586 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16587 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16588 ;;Total ram usage:        1 bytes
 16589 ;; Hardware stack levels used:    1
 16590 ;; Hardware stack levels required when called:    5
 16591 ;; This function calls:
 16592 ;;		Nothing
 16593 ;; This function is called by:
 16594 ;;		_main
 16595 ;; This function uses a non-reentrant model
 16596 ;;
 16597                           
 16598                           
 16599                           ;psect for function _Buzzer_Main
 16600  1766                     _Buzzer_Main:	
 16601                           
 16602                           ;Buzzer_B1.c: 47: if (Buz1.GO == 1) {
 16603                           
 16604                           ;incstack = 0
 16605                           ; Regs used in _Buzzer_Main: [wreg+status,2+status,0]
 16606  1766  0021               	movlb	1	; select bank1
 16607  1767  1CB2               	btfss	_Buz1^(0+128),1
 16608  1768  0008               	return
 16609                           
 16610                           ;Buzzer_B1.c: 48: Buz1.Counter++;
 16611  1769  3001               	movlw	1
 16612  176A  07B3               	addwf	(_Buz1^(0+128)+1),f
 16613  176B  3000               	movlw	0
 16614  176C  3DB4               	addwfc	((_Buz1+1)^(0+128)+1),f
 16615                           
 16616                           ;Buzzer_B1.c: 49: if (Buz1.Counter >= Buz1.TimeValue) {
 16617  176D  0839               	movf	((_Buz1+1)^(0+128)+6),w
 16618  176E  0234               	subwf	((_Buz1+1)^(0+128)+1),w
 16619  176F  1D03               	skipz
 16620  1770  2F73               	goto	u6555
 16621  1771  0838               	movf	(_Buz1^(0+128)+6),w
 16622  1772  0233               	subwf	(_Buz1^(0+128)+1),w
 16623  1773                     u6555:	
 16624  1773  1C03               	skipc
 16625  1774  0008               	return
 16626                           
 16627                           ;Buzzer_B1.c: 50: Buz1.Counter = 0;
 16628  1775  01B3               	clrf	(_Buz1^(0+128)+1)
 16629  1776  01B4               	clrf	((_Buz1+1)^(0+128)+1)
 16630                           
 16631                           ;Buzzer_B1.c: 51: Buz1.Switch = (RB3 == 1) ? 1 : 0;
 16632  1777  12B2               	bcf	_Buz1^(0+128),5
 16633  1778  0020               	movlb	0	; select bank0
 16634  1779  1D8D               	btfss	13,3	;volatile
 16635  177A  2F7D               	goto	l7083
 16636  177B  0021               	movlb	1	; select bank1
 16637  177C  16B2               	bsf	_Buz1^(0+128),5
 16638  177D                     l7083:	
 16639                           
 16640                           ;Buzzer_B1.c: 52: if (Buz1.Switch == 0) {
 16641  177D  0021               	movlb	1	; select bank1
 16642  177E  1AB2               	btfsc	_Buz1^(0+128),5
 16643  177F  2FA9               	goto	l100
 16644                           
 16645                           ;Buzzer_B1.c: 53: if (Buz1.Count == 0) {
 16646  1780  08B5               	movf	(_Buz1^(0+128)+3),f
 16647  1781  1D03               	skipz
 16648  1782  2FA5               	goto	l101
 16649                           
 16650                           ;Buzzer_B1.c: 54: if (Buz1.BufferStatus1 == 1) {
 16651  1783  1DB2               	btfss	_Buz1^(0+128),3
 16652  1784  2F93               	goto	l102
 16653                           
 16654                           ;Buzzer_B1.c: 55: Buz1.BufferStatus1 = 0;
 16655  1785  11B2               	bcf	_Buz1^(0+128),3
 16656                           
 16657                           ;Buzzer_B1.c: 56: Buz1.Count = Buz1.CountBuffer1;
 16658  1786  0836               	movf	(_Buz1^(0+128)+4),w
 16659  1787  0020               	movlb	0	; select bank0
 16660  1788  00A0               	movwf	??_Buzzer_Main
 16661  1789  0820               	movf	??_Buzzer_Main,w
 16662  178A  0021               	movlb	1	; select bank1
 16663  178B  00B5               	movwf	(_Buz1^(0+128)+3)
 16664                           
 16665                           ;Buzzer_B1.c: 57: Buz1.TimeValue = Buz1.TimeValueBuffer1;
 16666  178C  083B               	movf	((_Buz1+1)^(0+128)+8),w
 16667  178D  01B9               	clrf	((_Buz1+1)^(0+128)+6)
 16668  178E  07B9               	addwf	((_Buz1+1)^(0+128)+6),f
 16669  178F  083A               	movf	(_Buz1^(0+128)+8),w
 16670  1790  01B8               	clrf	(_Buz1^(0+128)+6)
 16671  1791  07B8               	addwf	(_Buz1^(0+128)+6),f
 16672                           
 16673                           ;Buzzer_B1.c: 58: } else if (Buz1.BufferStatus2 == 1) {
 16674  1792  0008               	return
 16675  1793                     l102:	
 16676  1793  1E32               	btfss	_Buz1^(0+128),4
 16677  1794  2FA3               	goto	l104
 16678                           
 16679                           ;Buzzer_B1.c: 59: Buz1.BufferStatus2 = 0;
 16680  1795  1232               	bcf	_Buz1^(0+128),4
 16681                           
 16682                           ;Buzzer_B1.c: 60: Buz1.Count = Buz1.CountBuffer2;
 16683  1796  0837               	movf	(_Buz1^(0+128)+5),w
 16684  1797  0020               	movlb	0	; select bank0
 16685  1798  00A0               	movwf	??_Buzzer_Main
 16686  1799  0820               	movf	??_Buzzer_Main,w
 16687  179A  0021               	movlb	1	; select bank1
 16688  179B  00B5               	movwf	(_Buz1^(0+128)+3)
 16689                           
 16690                           ;Buzzer_B1.c: 61: Buz1.TimeValue = Buz1.TimeValueBuffer2;
 16691  179C  083D               	movf	((_Buz1+1)^(0+128)+10),w
 16692  179D  01B9               	clrf	((_Buz1+1)^(0+128)+6)
 16693  179E  07B9               	addwf	((_Buz1+1)^(0+128)+6),f
 16694  179F  083C               	movf	(_Buz1^(0+128)+10),w
 16695  17A0  01B8               	clrf	(_Buz1^(0+128)+6)
 16696  17A1  07B8               	addwf	(_Buz1^(0+128)+6),f
 16697                           
 16698                           ;Buzzer_B1.c: 62: } else {
 16699  17A2  0008               	return
 16700  17A3                     l104:	
 16701                           
 16702                           ;Buzzer_B1.c: 63: Buz1.GO = 0;
 16703  17A3  10B2               	bcf	_Buz1^(0+128),1
 16704                           
 16705                           ;Buzzer_B1.c: 64: }
 16706                           ;Buzzer_B1.c: 65: } else {
 16707  17A4  0008               	return
 16708  17A5                     l101:	
 16709                           
 16710                           ;Buzzer_B1.c: 66: Buz1.Switch = 1;
 16711  17A5  16B2               	bsf	_Buz1^(0+128),5
 16712                           
 16713                           ;Buzzer_B1.c: 68: RB3 = 1;
 16714  17A6  0020               	movlb	0	; select bank0
 16715  17A7  158D               	bsf	13,3	;volatile
 16716                           
 16717                           ;Buzzer_B1.c: 69: }
 16718                           ;Buzzer_B1.c: 70: } else {
 16719  17A8  0008               	return
 16720  17A9                     l100:	
 16721                           
 16722                           ;Buzzer_B1.c: 71: Buz1.Switch = 0;
 16723  17A9  12B2               	bcf	_Buz1^(0+128),5
 16724                           
 16725                           ;Buzzer_B1.c: 73: RB3 = 0;
 16726  17AA  0020               	movlb	0	; select bank0
 16727  17AB  118D               	bcf	13,3	;volatile
 16728                           
 16729                           ;Buzzer_B1.c: 75: Buz1.Count--;
 16730  17AC  3001               	movlw	1
 16731  17AD  0021               	movlb	1	; select bank1
 16732  17AE  02B5               	subwf	(_Buz1^(0+128)+3),f
 16733  17AF  0008               	return
 16734  17B0                     __end_of_Buzzer_Main:	
 16735                           
 16736                           	psect	text123
 16737  1DE3                     __ptext123:	
 16738 ;; *************** function _Buzzer_Initialization *****************
 16739 ;; Defined at:
 16740 ;;		line 11 in file "../src/Buzzer_B1.c"
 16741 ;; Parameters:    Size  Location     Type
 16742 ;;		None
 16743 ;; Auto vars:     Size  Location     Type
 16744 ;;		None
 16745 ;; Return value:  Size  Location     Type
 16746 ;;		None               void
 16747 ;; Registers used:
 16748 ;;		None
 16749 ;; Tracked objects:
 16750 ;;		On entry : 0/0
 16751 ;;		On exit  : 0/0
 16752 ;;		Unchanged: 0/0
 16753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16758 ;;Total ram usage:        0 bytes
 16759 ;; Hardware stack levels used:    1
 16760 ;; Hardware stack levels required when called:    5
 16761 ;; This function calls:
 16762 ;;		Nothing
 16763 ;; This function is called by:
 16764 ;;		_main
 16765 ;; This function uses a non-reentrant model
 16766 ;;
 16767                           
 16768                           
 16769                           ;psect for function _Buzzer_Initialization
 16770  1DE3                     _Buzzer_Initialization:	
 16771                           
 16772                           ;Buzzer_B1.c: 13: Buz1.Enable = 1;
 16773                           
 16774                           ;incstack = 0
 16775                           ; Regs used in _Buzzer_Initialization: []
 16776  1DE3  0021               	movlb	1	; select bank1
 16777  1DE4  1432               	bsf	_Buz1^(0+128),0
 16778  1DE5  0008               	return
 16779  1DE6                     __end_of_Buzzer_Initialization:	
 16780                           
 16781                           	psect	intentry
 16782  0004                     __pintentry:	
 16783 ;; *************** function _ISR *****************
 16784 ;; Defined at:
 16785 ;;		line 107 in file "../src/MCU_B1.c"
 16786 ;; Parameters:    Size  Location     Type
 16787 ;;		None
 16788 ;; Auto vars:     Size  Location     Type
 16789 ;;		None
 16790 ;; Return value:  Size  Location     Type
 16791 ;;		None               void
 16792 ;; Registers used:
 16793 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16794 ;; Tracked objects:
 16795 ;;		On entry : 0/0
 16796 ;;		On exit  : 0/0
 16797 ;;		Unchanged: 0/0
 16798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16801 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16802 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16803 ;;Total ram usage:        1 bytes
 16804 ;; Hardware stack levels used:    1
 16805 ;; Hardware stack levels required when called:    4
 16806 ;; This function calls:
 16807 ;;		_IOC_ISR
 16808 ;;		_TMR0_ISR
 16809 ;; This function is called by:
 16810 ;;		Interrupt level 1
 16811 ;; This function uses a non-reentrant model
 16812 ;;
 16813                           
 16814  0004                     _ISR:	
 16815                           
 16816                           ;incstack = 0
 16817                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16818  0004  147E               	bsf	126,0	;set compiler interrupt flag
 16819  0005  3180               	pagesel	$
 16820  0006  0020               	movlb	0	; select bank0
 16821  0007  087F               	movf	127,w
 16822  0008  00F7               	movwf	??_ISR
 16823                           
 16824                           ;MCU_B1.c: 109: IOC_ISR();
 16825  0009  319F  2702  3180   	fcall	_IOC_ISR
 16826                           
 16827                           ;MCU_B1.c: 111: TMR0_ISR();
 16828  000C  3192  2283         	fcall	_TMR0_ISR
 16829  000E  0877               	movf	??_ISR,w
 16830  000F  0020               	movlb	0	; select bank0
 16831  0010  00FF               	movwf	127
 16832  0011  107E               	bcf	126,0	;clear compiler interrupt flag
 16833  0012  0009               	retfie
 16834  0013                     __end_of_ISR:	
 16835                           
 16836                           	psect	text125
 16837  1283                     __ptext125:	
 16838 ;; *************** function _TMR0_ISR *****************
 16839 ;; Defined at:
 16840 ;;		line 135 in file "../src/MCU_B1.c"
 16841 ;; Parameters:    Size  Location     Type
 16842 ;;		None
 16843 ;; Auto vars:     Size  Location     Type
 16844 ;;		None
 16845 ;; Return value:  Size  Location     Type
 16846 ;;		None               void
 16847 ;; Registers used:
 16848 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16849 ;; Tracked objects:
 16850 ;;		On entry : 0/0
 16851 ;;		On exit  : 0/0
 16852 ;;		Unchanged: 0/0
 16853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16858 ;;Total ram usage:        0 bytes
 16859 ;; Hardware stack levels used:    1
 16860 ;; Hardware stack levels required when called:    2
 16861 ;; This function calls:
 16862 ;;		_setDimmerLights_IntrControl
 16863 ;; This function is called by:
 16864 ;;		_ISR
 16865 ;; This function uses a non-reentrant model
 16866 ;;
 16867                           
 16868                           
 16869                           ;psect for function _TMR0_ISR
 16870  1283                     _TMR0_ISR:	
 16871                           
 16872                           ;MCU_B1.c: 136: if (TMR0IE == 1 && TMR0IF == 1) {
 16873                           
 16874                           ;incstack = 0
 16875                           ; Regs used in _TMR0_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16876  1283  1E8B               	btfss	11,5	;volatile
 16877  1284  0008               	return
 16878  1285  1D0B               	btfss	11,2	;volatile
 16879  1286  0008               	return
 16880                           
 16881                           ;MCU_B1.c: 138: TMR0 = (256-190);
 16882  1287  3042               	movlw	66
 16883  1288  0020               	movlb	0	; select bank0
 16884  1289  0095               	movwf	21	;volatile
 16885                           
 16886                           ;MCU_B1.c: 139: TMR0IF = 0;
 16887  128A  110B               	bcf	11,2	;volatile
 16888                           
 16889                           ;MCU_B1.c: 144: setDimmerLights_IntrControl(1);
 16890  128B  3001               	movlw	1
 16891  128C  3180  2043  3192   	fcall	_setDimmerLights_IntrControl
 16892                           
 16893                           ;MCU_B1.c: 160: Timer0.Count++;
 16894  128F  3001               	movlw	1
 16895  1290  0022               	movlb	2	; select bank2
 16896  1291  07B6               	addwf	(_Timer0^(0+256)+1),f
 16897  1292  3000               	movlw	0
 16898  1293  3DB7               	addwfc	((_Timer0+1)^(0+256)+1),f
 16899                           
 16900                           ;MCU_B1.c: 161: if (Timer0.Count == 100) {
 16901  1294  3001               	movlw	1
 16902  1295  3E35               	addlw	_Timer0& (0+255)
 16903  1296  0086               	movwf	6
 16904  1297  3001               	movlw	1	; select bank2/3
 16905  1298  0087               	movwf	7
 16906  1299  3F40               	moviw [0]fsr1
 16907  129A  3A64               	xorlw	100
 16908  129B  1D03               	skipz
 16909  129C  2A9F               	goto	u666_25
 16910  129D  3F41               	moviw [1]fsr1
 16911  129E  3A00               	xorlw	0
 16912  129F                     u666_25:	
 16913  129F  1D03               	skipz
 16914  12A0  0008               	return
 16915                           
 16916                           ;MCU_B1.c: 162: Timer0.Count = 0;
 16917  12A1  01B6               	clrf	(_Timer0^(0+256)+1)
 16918  12A2  01B7               	clrf	((_Timer0+1)^(0+256)+1)
 16919                           
 16920                           ;MCU_B1.c: 163: myMain.T0_Timerout = 1;
 16921  12A3  0021               	movlb	1	; select bank1
 16922  12A4  14A0               	bsf	_myMain^(0+128),1
 16923  12A5  0008               	return
 16924  12A6                     __end_of_TMR0_ISR:	
 16925                           
 16926                           	psect	text126
 16927  0043                     __ptext126:	
 16928 ;; *************** function _setDimmerLights_IntrControl *****************
 16929 ;; Defined at:
 16930 ;;		line 87 in file "../src/Dimmer_B1.c"
 16931 ;; Parameters:    Size  Location     Type
 16932 ;;  lights          1    wreg     unsigned char 
 16933 ;; Auto vars:     Size  Location     Type
 16934 ;;  lights          1    6[COMMON] unsigned char 
 16935 ;; Return value:  Size  Location     Type
 16936 ;;		None               void
 16937 ;; Registers used:
 16938 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16939 ;; Tracked objects:
 16940 ;;		On entry : 0/0
 16941 ;;		On exit  : 0/0
 16942 ;;		Unchanged: 0/0
 16943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16945 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16946 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16947 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16948 ;;Total ram usage:        5 bytes
 16949 ;; Hardware stack levels used:    1
 16950 ;; Hardware stack levels required when called:    1
 16951 ;; This function calls:
 16952 ;;		_DimmerIntrPointSelect
 16953 ;; This function is called by:
 16954 ;;		_TMR0_ISR
 16955 ;; This function uses a non-reentrant model
 16956 ;;
 16957                           
 16958                           
 16959                           ;psect for function _setDimmerLights_IntrControl
 16960  0043                     _setDimmerLights_IntrControl:	
 16961                           
 16962                           ;incstack = 0
 16963                           ; Regs used in _setDimmerLights_IntrControl: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16964                           ;setDimmerLights_IntrControl@lights stored from wreg
 16965  0043  00F6               	movwf	setDimmerLights_IntrControl@lights
 16966                           
 16967                           ;Dimmer_B1.c: 89: DimmerIntrPointSelect(lights);
 16968  0044  0876               	movf	setDimmerLights_IntrControl@lights,w
 16969  0045  319E  2686  3180   	fcall	_DimmerIntrPointSelect
 16970                           
 16971                           ;Dimmer_B1.c: 90: if (DimmerLightsIntr->GO == 1) {
 16972  0048  0879               	movf	_DimmerLightsIntr,w
 16973  0049  0086               	movwf	6
 16974  004A  3001               	movlw	1	; select bank2/3
 16975  004B  0087               	movwf	7
 16976  004C  1C01               	btfss	1,0
 16977  004D  28A3               	goto	i1l6541
 16978                           
 16979                           ;Dimmer_B1.c: 91: DimmerLightsIntr->Count++;
 16980  004E  3001               	movlw	1
 16981  004F  00F2               	movwf	??_setDimmerLights_IntrControl
 16982  0050  0879               	movf	_DimmerLightsIntr,w
 16983  0051  3E03               	addlw	3
 16984  0052  0086               	movwf	6
 16985  0053  3001               	movlw	1	; select bank2/3
 16986  0054  0087               	movwf	7
 16987  0055  0872               	movf	??_setDimmerLights_IntrControl,w
 16988  0056  0781               	addwf	1,f
 16989                           
 16990                           ;Dimmer_B1.c: 92: if (DimmerLightsIntr->Count >= (DimmerLightsIntr->DimmingValue - Dimme
      +                          r->Correction)) {
 16991  0057  0021               	movlb	1	; select bank1
 16992  0058  0850               	movf	_Dimmer^(0+128),w
 16993  0059  3E02               	addlw	2
 16994  005A  0086               	movwf	6
 16995  005B  0187               	clrf	7
 16996  005C  0801               	movf	1,w
 16997  005D  00F2               	movwf	??_setDimmerLights_IntrControl
 16998  005E  01F3               	clrf	??_setDimmerLights_IntrControl+1
 16999  005F  09F2               	comf	??_setDimmerLights_IntrControl,f
 17000  0060  09F3               	comf	??_setDimmerLights_IntrControl+1,f
 17001  0061  0AF2               	incf	??_setDimmerLights_IntrControl,f
 17002  0062  1903               	skipnz
 17003  0063  0AF3               	incf	??_setDimmerLights_IntrControl+1,f
 17004  0064  0879               	movf	_DimmerLightsIntr,w
 17005  0065  3E04               	addlw	4
 17006  0066  0086               	movwf	6
 17007  0067  3001               	movlw	1	; select bank2/3
 17008  0068  0087               	movwf	7
 17009  0069  0801               	movf	1,w
 17010  006A  0772               	addwf	??_setDimmerLights_IntrControl,w
 17011  006B  00F4               	movwf	??_setDimmerLights_IntrControl+2
 17012  006C  0873               	movf	??_setDimmerLights_IntrControl+1,w
 17013  006D  1803               	skipnc
 17014  006E  0A73               	incf	??_setDimmerLights_IntrControl+1,w
 17015  006F  00F5               	movwf	??_setDimmerLights_IntrControl+3
 17016  0070  0879               	movf	_DimmerLightsIntr,w
 17017  0071  3E03               	addlw	3
 17018  0072  0086               	movwf	6
 17019  0073  3001               	movlw	1	; select bank2/3
 17020  0074  0087               	movwf	7
 17021  0075  0875               	movf	??_setDimmerLights_IntrControl+3,w
 17022  0076  3A80               	xorlw	128
 17023  0077  3C80               	sublw	128
 17024  0078  1D03               	skipz
 17025  0079  287C               	goto	u553_25
 17026  007A  0874               	movf	??_setDimmerLights_IntrControl+2,w
 17027  007B  0201               	subwf	1,w
 17028  007C                     u553_25:	
 17029  007C  1C03               	skipc
 17030  007D  29A7               	goto	i1l6599
 17031                           
 17032                           ;Dimmer_B1.c: 93: DimmerLightsIntr->Count = 0;
 17033  007E  0879               	movf	_DimmerLightsIntr,w
 17034  007F  3E03               	addlw	3
 17035  0080  0086               	movwf	6
 17036  0081  3001               	movlw	1	; select bank2/3
 17037  0082  0087               	movwf	7
 17038  0083  0181               	clrf	1
 17039                           
 17040                           ;Dimmer_B1.c: 94: DimmerLightsIntr->GO = 0;
 17041  0084  0879               	movf	_DimmerLightsIntr,w
 17042  0085  0086               	movwf	6
 17043  0086  3001               	movlw	1	; select bank2/3
 17044  0087  0087               	movwf	7
 17045  0088  1001               	bcf	1,0
 17046                           
 17047                           ;Dimmer_B1.c: 96: if (DimmerLightsIntr->StatusFlag == 1) {
 17048  0089  0879               	movf	_DimmerLightsIntr,w
 17049  008A  0086               	movwf	6
 17050  008B  3001               	movlw	1	; select bank2/3
 17051  008C  0087               	movwf	7
 17052  008D  1F01               	btfss	1,6
 17053  008E  29A7               	goto	i1l6599
 17054                           
 17055                           ;Dimmer_B1.c: 97: DimmerLightsIntr->Flag = 1;
 17056  008F  0879               	movf	_DimmerLightsIntr,w
 17057  0090  3E08               	addlw	8
 17058  0091  0086               	movwf	6
 17059  0092  3001               	movlw	1	; select bank2/3
 17060  0093  0087               	movwf	7
 17061  0094  1401               	bsf	1,0
 17062                           
 17063                           ;Dimmer_B1.c: 98: DimmerLightsIntr->Triac = 1;
 17064  0095  0879               	movf	_DimmerLightsIntr,w
 17065  0096  3E08               	addlw	8
 17066  0097  0086               	movwf	6
 17067  0098  3001               	movlw	1	; select bank2/3
 17068  0099  0087               	movwf	7
 17069  009A  1681               	bsf	1,5
 17070                           
 17071                           ;Dimmer_B1.c: 100: if (lights == 1) {
 17072  009B  0876               	movf	setDimmerLights_IntrControl@lights,w
 17073  009C  3A01               	xorlw	1
 17074  009D  1D03               	skipz
 17075  009E  29A7               	goto	i1l6599
 17076                           
 17077                           ;Dimmer_B1.c: 101: RA7 = 1;
 17078  009F  0020               	movlb	0	; select bank0
 17079  00A0  178C               	bsf	12,7	;volatile
 17080                           
 17081                           ;Dimmer_B1.c: 102: RB4=1;
 17082  00A1  160D               	bsf	13,4	;volatile
 17083                           
 17084                           ;Dimmer_B1.c: 103: }
 17085                           ;Dimmer_B1.c: 115: }
 17086                           ;Dimmer_B1.c: 116: }
 17087                           ;Dimmer_B1.c: 117: } else {
 17088  00A2  29A7               	goto	i1l6599
 17089  00A3                     i1l6541:	
 17090                           
 17091                           ;Dimmer_B1.c: 118: if (DimmerLightsIntr->Flag == 1) {
 17092  00A3  0879               	movf	_DimmerLightsIntr,w
 17093  00A4  3E08               	addlw	8
 17094  00A5  0086               	movwf	6
 17095  00A6  3001               	movlw	1	; select bank2/3
 17096  00A7  0087               	movwf	7
 17097  00A8  1C01               	btfss	1,0
 17098  00A9  29A7               	goto	i1l6599
 17099                           
 17100                           ;Dimmer_B1.c: 119: DimmerLightsIntr->Flag = 0;
 17101  00AA  0879               	movf	_DimmerLightsIntr,w
 17102  00AB  3E08               	addlw	8
 17103  00AC  0086               	movwf	6
 17104  00AD  3001               	movlw	1	; select bank2/3
 17105  00AE  0087               	movwf	7
 17106  00AF  1001               	bcf	1,0
 17107                           
 17108                           ;Dimmer_B1.c: 120: if (DimmerLightsIntr->Signal == 1) {
 17109  00B0  0879               	movf	_DimmerLightsIntr,w
 17110  00B1  0086               	movwf	6
 17111  00B2  3001               	movlw	1	; select bank2/3
 17112  00B3  0087               	movwf	7
 17113  00B4  1C81               	btfss	1,1
 17114  00B5  29A7               	goto	i1l6599
 17115                           
 17116                           ;Dimmer_B1.c: 121: DimmerLightsIntr->DimmingTime++;
 17117  00B6  3001               	movlw	1
 17118  00B7  00F2               	movwf	??_setDimmerLights_IntrControl
 17119  00B8  0A79               	incf	_DimmerLightsIntr,w
 17120  00B9  0086               	movwf	6
 17121  00BA  3001               	movlw	1	; select bank2/3
 17122  00BB  0087               	movwf	7
 17123  00BC  0872               	movf	??_setDimmerLights_IntrControl,w
 17124  00BD  0781               	addwf	1,f
 17125                           
 17126                           ;Dimmer_B1.c: 122: if (DimmerLightsIntr->DimmingTime >= DimmerLightsIntr->DimmingTimeVal
      +                          ue) {
 17127  00BE  0A79               	incf	_DimmerLightsIntr,w
 17128  00BF  0086               	movwf	6
 17129  00C0  3001               	movlw	1	; select bank2/3
 17130  00C1  0087               	movwf	7
 17131  00C2  0879               	movf	_DimmerLightsIntr,w
 17132  00C3  3E02               	addlw	2
 17133  00C4  0084               	movwf	4
 17134  00C5  3001               	movlw	1	; select bank2/3
 17135  00C6  0085               	movwf	5
 17136  00C7  0800               	movf	0,w
 17137  00C8  0201               	subwf	1,w
 17138  00C9  1C03               	skipc
 17139  00CA  29A7               	goto	i1l6599
 17140                           
 17141                           ;Dimmer_B1.c: 123: DimmerLightsIntr->DimmingTime = 0;
 17142  00CB  0A79               	incf	_DimmerLightsIntr,w
 17143  00CC  0086               	movwf	6
 17144  00CD  3001               	movlw	1	; select bank2/3
 17145  00CE  0087               	movwf	7
 17146  00CF  0181               	clrf	1
 17147                           
 17148                           ;Dimmer_B1.c: 124: if (DimmerLightsIntr->AdjFlag == 1) {
 17149  00D0  0879               	movf	_DimmerLightsIntr,w
 17150  00D1  0086               	movwf	6
 17151  00D2  3001               	movlw	1	; select bank2/3
 17152  00D3  0087               	movwf	7
 17153  00D4  1D81               	btfss	1,3
 17154  00D5  290C               	goto	i1l6567
 17155                           
 17156                           ;Dimmer_B1.c: 125: if (DimmerLightsIntr->AdjStatus == 0) {
 17157  00D6  0879               	movf	_DimmerLightsIntr,w
 17158  00D7  0086               	movwf	6
 17159  00D8  3001               	movlw	1	; select bank2/3
 17160  00D9  0087               	movwf	7
 17161  00DA  1A01               	btfsc	1,4
 17162  00DB  28F3               	goto	i1l6561
 17163                           
 17164                           ;Dimmer_B1.c: 126: if (DimmerLightsIntr->DimmingValue > ((char)((100-60)*0.8))) {
 17165  00DC  0879               	movf	_DimmerLightsIntr,w
 17166  00DD  3E04               	addlw	4
 17167  00DE  0086               	movwf	6
 17168  00DF  3001               	movlw	1	; select bank2/3
 17169  00E0  0087               	movwf	7
 17170  00E1  3021               	movlw	33
 17171  00E2  0201               	subwf	1,w
 17172  00E3  1C03               	skipc
 17173  00E4  28ED               	goto	i1l6559
 17174                           
 17175                           ;Dimmer_B1.c: 127: DimmerLightsIntr->DimmingValue--;
 17176  00E5  0879               	movf	_DimmerLightsIntr,w
 17177  00E6  3E04               	addlw	4
 17178  00E7  0086               	movwf	6
 17179  00E8  3001               	movlw	1	; select bank2/3
 17180  00E9  0087               	movwf	7
 17181  00EA  3001               	movlw	1
 17182  00EB  0281               	subwf	1,f
 17183                           
 17184                           ;Dimmer_B1.c: 128: } else {
 17185  00EC  29A7               	goto	i1l6599
 17186  00ED                     i1l6559:	
 17187                           
 17188                           ;Dimmer_B1.c: 129: DimmerLightsIntr->AdjStatus = 1;
 17189  00ED  0879               	movf	_DimmerLightsIntr,w
 17190  00EE  0086               	movwf	6
 17191  00EF  3001               	movlw	1	; select bank2/3
 17192  00F0  0087               	movwf	7
 17193  00F1  1601               	bsf	1,4
 17194                           
 17195                           ;Dimmer_B1.c: 130: }
 17196                           ;Dimmer_B1.c: 131: } else {
 17197  00F2  29A7               	goto	i1l6599
 17198  00F3                     i1l6561:	
 17199                           
 17200                           ;Dimmer_B1.c: 132: if (DimmerLightsIntr->DimmingValue < ((char)((100-25)*0.8))) {
 17201  00F3  0879               	movf	_DimmerLightsIntr,w
 17202  00F4  3E04               	addlw	4
 17203  00F5  0086               	movwf	6
 17204  00F6  3001               	movlw	1	; select bank2/3
 17205  00F7  0087               	movwf	7
 17206  00F8  303C               	movlw	60
 17207  00F9  0201               	subwf	1,w
 17208  00FA  1803               	skipnc
 17209  00FB  2906               	goto	i1l6565
 17210                           
 17211                           ;Dimmer_B1.c: 133: DimmerLightsIntr->DimmingValue++;
 17212  00FC  3001               	movlw	1
 17213  00FD  00F2               	movwf	??_setDimmerLights_IntrControl
 17214  00FE  0879               	movf	_DimmerLightsIntr,w
 17215  00FF  3E04               	addlw	4
 17216  0100  0086               	movwf	6
 17217  0101  3001               	movlw	1	; select bank2/3
 17218  0102  0087               	movwf	7
 17219  0103  0872               	movf	??_setDimmerLights_IntrControl,w
 17220  0104  0781               	addwf	1,f
 17221                           
 17222                           ;Dimmer_B1.c: 134: } else {
 17223  0105  29A7               	goto	i1l6599
 17224  0106                     i1l6565:	
 17225                           
 17226                           ;Dimmer_B1.c: 135: DimmerLightsIntr->AdjStatus = 0;
 17227  0106  0879               	movf	_DimmerLightsIntr,w
 17228  0107  0086               	movwf	6
 17229  0108  3001               	movlw	1	; select bank2/3
 17230  0109  0087               	movwf	7
 17231  010A  1201               	bcf	1,4
 17232                           
 17233                           ;Dimmer_B1.c: 136: }
 17234                           ;Dimmer_B1.c: 137: }
 17235                           ;Dimmer_B1.c: 138: } else if (DimmerLightsIntr->AdjRF == 1) {
 17236  010B  29A7               	goto	i1l6599
 17237  010C                     i1l6567:	
 17238  010C  0879               	movf	_DimmerLightsIntr,w
 17239  010D  0086               	movwf	6
 17240  010E  3001               	movlw	1	; select bank2/3
 17241  010F  0087               	movwf	7
 17242  0110  1D01               	btfss	1,2
 17243  0111  2953               	goto	i1l6581
 17244                           
 17245                           ;Dimmer_B1.c: 139: if (DimmerLightsIntr->DimmingValue > DimmerLightsIntr->MaxmumValue) {
 17246  0112  0879               	movf	_DimmerLightsIntr,w
 17247  0113  3E05               	addlw	5
 17248  0114  0086               	movwf	6
 17249  0115  3001               	movlw	1	; select bank2/3
 17250  0116  0087               	movwf	7
 17251  0117  0879               	movf	_DimmerLightsIntr,w
 17252  0118  3E04               	addlw	4
 17253  0119  0084               	movwf	4
 17254  011A  3001               	movlw	1	; select bank2/3
 17255  011B  0085               	movwf	5
 17256  011C  0800               	movf	0,w
 17257  011D  0201               	subwf	1,w
 17258  011E  1803               	skipnc
 17259  011F  2928               	goto	i1l6573
 17260                           
 17261                           ;Dimmer_B1.c: 140: DimmerLightsIntr->DimmingValue--;
 17262  0120  0879               	movf	_DimmerLightsIntr,w
 17263  0121  3E04               	addlw	4
 17264  0122  0086               	movwf	6
 17265  0123  3001               	movlw	1	; select bank2/3
 17266  0124  0087               	movwf	7
 17267  0125  3001               	movlw	1
 17268  0126  0281               	subwf	1,f
 17269                           
 17270                           ;Dimmer_B1.c: 141: } else if (DimmerLightsIntr->DimmingValue < DimmerLightsIntr->MaxmumV
      +                          alue) {
 17271  0127  293F               	goto	i1l6577
 17272  0128                     i1l6573:	
 17273  0128  0879               	movf	_DimmerLightsIntr,w
 17274  0129  3E04               	addlw	4
 17275  012A  0086               	movwf	6
 17276  012B  3001               	movlw	1	; select bank2/3
 17277  012C  0087               	movwf	7
 17278  012D  0879               	movf	_DimmerLightsIntr,w
 17279  012E  3E05               	addlw	5
 17280  012F  0084               	movwf	4
 17281  0130  3001               	movlw	1	; select bank2/3
 17282  0131  0085               	movwf	5
 17283  0132  0800               	movf	0,w
 17284  0133  0201               	subwf	1,w
 17285  0134  1803               	skipnc
 17286  0135  293F               	goto	i1l6577
 17287                           
 17288                           ;Dimmer_B1.c: 142: DimmerLightsIntr->DimmingValue++;
 17289  0136  3001               	movlw	1
 17290  0137  00F2               	movwf	??_setDimmerLights_IntrControl
 17291  0138  0879               	movf	_DimmerLightsIntr,w
 17292  0139  3E04               	addlw	4
 17293  013A  0086               	movwf	6
 17294  013B  3001               	movlw	1	; select bank2/3
 17295  013C  0087               	movwf	7
 17296  013D  0872               	movf	??_setDimmerLights_IntrControl,w
 17297  013E  0781               	addwf	1,f
 17298  013F                     i1l6577:	
 17299                           
 17300                           ;Dimmer_B1.c: 143: }
 17301                           ;Dimmer_B1.c: 144: if (DimmerLightsIntr->DimmingValue == DimmerLightsIntr->MaxmumValue) 
      +                          {
 17302  013F  0879               	movf	_DimmerLightsIntr,w
 17303  0140  3E05               	addlw	5
 17304  0141  0086               	movwf	6
 17305  0142  3001               	movlw	1	; select bank2/3
 17306  0143  0087               	movwf	7
 17307  0144  0879               	movf	_DimmerLightsIntr,w
 17308  0145  3E04               	addlw	4
 17309  0146  0084               	movwf	4
 17310  0147  3001               	movlw	1	; select bank2/3
 17311  0148  0085               	movwf	5
 17312  0149  0800               	movf	0,w
 17313  014A  0601               	xorwf	1,w
 17314  014B  1D03               	skipz
 17315  014C  29A7               	goto	i1l6599
 17316                           
 17317                           ;Dimmer_B1.c: 145: DimmerLightsIntr->AdjRF = 0;
 17318  014D  0879               	movf	_DimmerLightsIntr,w
 17319  014E  0086               	movwf	6
 17320  014F  3001               	movlw	1	; select bank2/3
 17321  0150  0087               	movwf	7
 17322  0151  1101               	bcf	1,2
 17323  0152  296E               	goto	i1l6587
 17324  0153                     i1l6581:	
 17325                           ;Dimmer_B1.c: 147: }
 17326                           ;Dimmer_B1.c: 148: } else {
 17327                           
 17328                           ;Dimmer_B1.c: 146: DimmerLightsIntr->Signal = 0;
 17329                           
 17330                           
 17331                           ;Dimmer_B1.c: 149: if (DimmerLightsIntr->Status == 1) {
 17332  0153  0879               	movf	_DimmerLightsIntr,w
 17333  0154  0086               	movwf	6
 17334  0155  3001               	movlw	1	; select bank2/3
 17335  0156  0087               	movwf	7
 17336  0157  1E81               	btfss	1,5
 17337  0158  2974               	goto	i1l6589
 17338                           
 17339                           ;Dimmer_B1.c: 150: DimmerLightsIntr->DimmingValue--;
 17340  0159  0879               	movf	_DimmerLightsIntr,w
 17341  015A  3E04               	addlw	4
 17342  015B  0086               	movwf	6
 17343  015C  3001               	movlw	1	; select bank2/3
 17344  015D  0087               	movwf	7
 17345  015E  3001               	movlw	1
 17346  015F  0281               	subwf	1,f
 17347                           
 17348                           ;Dimmer_B1.c: 151: if (DimmerLightsIntr->DimmingValue <= DimmerLightsIntr->MaxmumValue) 
      +                          {
 17349  0160  0879               	movf	_DimmerLightsIntr,w
 17350  0161  3E05               	addlw	5
 17351  0162  0086               	movwf	6
 17352  0163  3001               	movlw	1	; select bank2/3
 17353  0164  0087               	movwf	7
 17354  0165  0879               	movf	_DimmerLightsIntr,w
 17355  0166  3E04               	addlw	4
 17356  0167  0084               	movwf	4
 17357  0168  3001               	movlw	1	; select bank2/3
 17358  0169  0085               	movwf	5
 17359  016A  0800               	movf	0,w
 17360  016B  0201               	subwf	1,w
 17361  016C  1C03               	skipc
 17362  016D  29A7               	goto	i1l6599
 17363  016E                     i1l6587:	
 17364                           
 17365                           ;Dimmer_B1.c: 152: DimmerLightsIntr->Signal = 0;
 17366  016E  0879               	movf	_DimmerLightsIntr,w
 17367  016F  0086               	movwf	6
 17368  0170  3001               	movlw	1	; select bank2/3
 17369  0171  0087               	movwf	7
 17370  0172  1081               	bcf	1,1
 17371                           
 17372                           ;Dimmer_B1.c: 153: }
 17373                           ;Dimmer_B1.c: 154: } else {
 17374  0173  29A7               	goto	i1l6599
 17375  0174                     i1l6589:	
 17376                           
 17377                           ;Dimmer_B1.c: 155: DimmerLightsIntr->DimmingValue++;
 17378  0174  3001               	movlw	1
 17379  0175  00F2               	movwf	??_setDimmerLights_IntrControl
 17380  0176  0879               	movf	_DimmerLightsIntr,w
 17381  0177  3E04               	addlw	4
 17382  0178  0086               	movwf	6
 17383  0179  3001               	movlw	1	; select bank2/3
 17384  017A  0087               	movwf	7
 17385  017B  0872               	movf	??_setDimmerLights_IntrControl,w
 17386  017C  0781               	addwf	1,f
 17387                           
 17388                           ;Dimmer_B1.c: 156: if (DimmerLightsIntr->DimmingValue >= DimmerLightsIntr->MinimumValue)
      +                           {
 17389  017D  0879               	movf	_DimmerLightsIntr,w
 17390  017E  3E04               	addlw	4
 17391  017F  0086               	movwf	6
 17392  0180  3001               	movlw	1	; select bank2/3
 17393  0181  0087               	movwf	7
 17394  0182  0879               	movf	_DimmerLightsIntr,w
 17395  0183  3E06               	addlw	6
 17396  0184  0084               	movwf	4
 17397  0185  3001               	movlw	1	; select bank2/3
 17398  0186  0085               	movwf	5
 17399  0187  0800               	movf	0,w
 17400  0188  0201               	subwf	1,w
 17401  0189  1C03               	skipc
 17402  018A  29A7               	goto	i1l6599
 17403                           
 17404                           ;Dimmer_B1.c: 157: DimmerLightsIntr->Signal = 0;
 17405  018B  0879               	movf	_DimmerLightsIntr,w
 17406  018C  0086               	movwf	6
 17407  018D  3001               	movlw	1	; select bank2/3
 17408  018E  0087               	movwf	7
 17409  018F  1081               	bcf	1,1
 17410                           
 17411                           ;Dimmer_B1.c: 158: DimmerLightsIntr->StatusFlag = 0;
 17412  0190  0879               	movf	_DimmerLightsIntr,w
 17413  0191  0086               	movwf	6
 17414  0192  3001               	movlw	1	; select bank2/3
 17415  0193  0087               	movwf	7
 17416  0194  1301               	bcf	1,6
 17417                           
 17418                           ;Dimmer_B1.c: 159: DimmerLightsIntr->Clear = 1;
 17419  0195  0879               	movf	_DimmerLightsIntr,w
 17420  0196  3E09               	addlw	9
 17421  0197  0086               	movwf	6
 17422  0198  3001               	movlw	1	; select bank2/3
 17423  0199  0087               	movwf	7
 17424  019A  1501               	bsf	1,2
 17425                           
 17426                           ;Dimmer_B1.c: 160: Dimmer->Detect = 1;
 17427  019B  0021               	movlb	1	; select bank1
 17428  019C  0850               	movf	_Dimmer^(0+128),w
 17429  019D  0086               	movwf	6
 17430  019E  0187               	clrf	7
 17431  019F  1401               	bsf	1,0
 17432                           
 17433                           ;Dimmer_B1.c: 162: if (lights == 1) {
 17434  01A0  0876               	movf	setDimmerLights_IntrControl@lights,w
 17435  01A1  3A01               	xorlw	1
 17436  01A2  1D03               	skipz
 17437  01A3  29A7               	goto	i1l6599
 17438                           
 17439                           ;Dimmer_B1.c: 163: RA3 = 0;
 17440  01A4  0020               	movlb	0	; select bank0
 17441  01A5  118C               	bcf	12,3	;volatile
 17442                           
 17443                           ;Dimmer_B1.c: 164: RC7=!1;
 17444  01A6  138E               	bcf	14,7	;volatile
 17445  01A7                     i1l6599:	
 17446                           ;Dimmer_B1.c: 165: }
 17447                           ;Dimmer_B1.c: 177: ;;
 17448                           
 17449                           
 17450                           ;Dimmer_B1.c: 178: }
 17451                           ;Dimmer_B1.c: 179: }
 17452                           ;Dimmer_B1.c: 180: }
 17453                           ;Dimmer_B1.c: 181: }
 17454                           ;Dimmer_B1.c: 182: }
 17455                           ;Dimmer_B1.c: 183: }
 17456                           ;Dimmer_B1.c: 184: }
 17457                           ;Dimmer_B1.c: 185: if (DimmerLightsIntr->Triac == 1) {
 17458  01A7  0879               	movf	_DimmerLightsIntr,w
 17459  01A8  3E08               	addlw	8
 17460  01A9  0086               	movwf	6
 17461  01AA  3001               	movlw	1	; select bank2/3
 17462  01AB  0087               	movwf	7
 17463  01AC  1E81               	btfss	1,5
 17464  01AD  29D3               	goto	i1l6613
 17465                           
 17466                           ;Dimmer_B1.c: 186: DimmerLightsIntr->TriacTime++;
 17467  01AE  3001               	movlw	1
 17468  01AF  00F2               	movwf	??_setDimmerLights_IntrControl
 17469  01B0  0879               	movf	_DimmerLightsIntr,w
 17470  01B1  3E07               	addlw	7
 17471  01B2  0086               	movwf	6
 17472  01B3  3001               	movlw	1	; select bank2/3
 17473  01B4  0087               	movwf	7
 17474  01B5  0872               	movf	??_setDimmerLights_IntrControl,w
 17475  01B6  0781               	addwf	1,f
 17476                           
 17477                           ;Dimmer_B1.c: 187: if (DimmerLightsIntr->TriacTime >= 5) {
 17478  01B7  0879               	movf	_DimmerLightsIntr,w
 17479  01B8  3E07               	addlw	7
 17480  01B9  0086               	movwf	6
 17481  01BA  3001               	movlw	1	; select bank2/3
 17482  01BB  0087               	movwf	7
 17483  01BC  3005               	movlw	5
 17484  01BD  0201               	subwf	1,w
 17485  01BE  1C03               	skipc
 17486  01BF  29D3               	goto	i1l6613
 17487                           
 17488                           ;Dimmer_B1.c: 188: DimmerLightsIntr->TriacTime = 0;
 17489  01C0  0879               	movf	_DimmerLightsIntr,w
 17490  01C1  3E07               	addlw	7
 17491  01C2  0086               	movwf	6
 17492  01C3  3001               	movlw	1	; select bank2/3
 17493  01C4  0087               	movwf	7
 17494  01C5  0181               	clrf	1
 17495                           
 17496                           ;Dimmer_B1.c: 189: DimmerLightsIntr->Triac = 0;
 17497  01C6  0879               	movf	_DimmerLightsIntr,w
 17498  01C7  3E08               	addlw	8
 17499  01C8  0086               	movwf	6
 17500  01C9  3001               	movlw	1	; select bank2/3
 17501  01CA  0087               	movwf	7
 17502  01CB  1281               	bcf	1,5
 17503                           
 17504                           ;Dimmer_B1.c: 192: if (lights == 1) {
 17505  01CC  0876               	movf	setDimmerLights_IntrControl@lights,w
 17506  01CD  3A01               	xorlw	1
 17507  01CE  1D03               	skipz
 17508  01CF  29D3               	goto	i1l6613
 17509                           
 17510                           ;Dimmer_B1.c: 193: RA7 = 0;
 17511  01D0  0020               	movlb	0	; select bank0
 17512  01D1  138C               	bcf	12,7	;volatile
 17513                           
 17514                           ;Dimmer_B1.c: 194: RB4=0;
 17515  01D2  120D               	bcf	13,4	;volatile
 17516  01D3                     i1l6613:	
 17517                           
 17518                           ;Dimmer_B1.c: 195: }
 17519                           ;Dimmer_B1.c: 207: }
 17520                           ;Dimmer_B1.c: 208: }
 17521                           ;Dimmer_B1.c: 209: if (DimmerLightsIntr->TriacFlag == 1) {
 17522  01D3  0879               	movf	_DimmerLightsIntr,w
 17523  01D4  3E09               	addlw	9
 17524  01D5  0086               	movwf	6
 17525  01D6  3001               	movlw	1	; select bank2/3
 17526  01D7  0087               	movwf	7
 17527  01D8  1E81               	btfss	1,5
 17528  01D9  0008               	return
 17529                           
 17530                           ;Dimmer_B1.c: 210: DimmerLightsIntr->TriacCount++;
 17531  01DA  3001               	movlw	1
 17532  01DB  00F2               	movwf	??_setDimmerLights_IntrControl
 17533  01DC  0879               	movf	_DimmerLightsIntr,w
 17534  01DD  3E0A               	addlw	10
 17535  01DE  0086               	movwf	6
 17536  01DF  3001               	movlw	1	; select bank2/3
 17537  01E0  0087               	movwf	7
 17538  01E1  0872               	movf	??_setDimmerLights_IntrControl,w
 17539  01E2  0781               	addwf	1,f
 17540                           
 17541                           ;Dimmer_B1.c: 211: if (DimmerLightsIntr->TriacCount == 70) {
 17542  01E3  0879               	movf	_DimmerLightsIntr,w
 17543  01E4  3E0A               	addlw	10
 17544  01E5  0086               	movwf	6
 17545  01E6  3001               	movlw	1	; select bank2/3
 17546  01E7  0087               	movwf	7
 17547  01E8  0801               	movf	1,w
 17548  01E9  3A46               	xorlw	70
 17549  01EA  1D03               	skipz
 17550  01EB  0008               	return
 17551                           
 17552                           ;Dimmer_B1.c: 212: DimmerLightsIntr->TriacCount = 0;
 17553  01EC  0879               	movf	_DimmerLightsIntr,w
 17554  01ED  3E0A               	addlw	10
 17555  01EE  0086               	movwf	6
 17556  01EF  3001               	movlw	1	; select bank2/3
 17557  01F0  0087               	movwf	7
 17558  01F1  0181               	clrf	1
 17559                           
 17560                           ;Dimmer_B1.c: 213: DimmerLightsIntr->TriacFlag = 0;
 17561  01F2  0879               	movf	_DimmerLightsIntr,w
 17562  01F3  3E09               	addlw	9
 17563  01F4  0086               	movwf	6
 17564  01F5  3001               	movlw	1	; select bank2/3
 17565  01F6  0087               	movwf	7
 17566  01F7  1281               	bcf	1,5
 17567  01F8  0008               	return
 17568  01F9                     __end_of_setDimmerLights_IntrControl:	
 17569                           
 17570                           	psect	text127
 17571  1E86                     __ptext127:	
 17572 ;; *************** function _DimmerIntrPointSelect *****************
 17573 ;; Defined at:
 17574 ;;		line 65 in file "../src/Dimmer_B1.c"
 17575 ;; Parameters:    Size  Location     Type
 17576 ;;  lights          1    wreg     unsigned char 
 17577 ;; Auto vars:     Size  Location     Type
 17578 ;;  lights          1    1[COMMON] unsigned char 
 17579 ;; Return value:  Size  Location     Type
 17580 ;;		None               void
 17581 ;; Registers used:
 17582 ;;		wreg
 17583 ;; Tracked objects:
 17584 ;;		On entry : 0/0
 17585 ;;		On exit  : 0/0
 17586 ;;		Unchanged: 0/0
 17587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17589 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17590 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17591 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17592 ;;Total ram usage:        2 bytes
 17593 ;; Hardware stack levels used:    1
 17594 ;; This function calls:
 17595 ;;		Nothing
 17596 ;; This function is called by:
 17597 ;;		_setDimmerLights_IntrControl
 17598 ;; This function uses a non-reentrant model
 17599 ;;
 17600                           
 17601                           
 17602                           ;psect for function _DimmerIntrPointSelect
 17603  1E86                     _DimmerIntrPointSelect:	
 17604                           
 17605                           ;incstack = 0
 17606                           ; Regs used in _DimmerIntrPointSelect: [wreg]
 17607                           ;DimmerIntrPointSelect@lights stored from wreg
 17608  1E86  00F1               	movwf	DimmerIntrPointSelect@lights
 17609                           
 17610                           ;Dimmer_B1.c: 67: if (lights == 1) {
 17611  1E87  0871               	movf	DimmerIntrPointSelect@lights,w
 17612  1E88  3A01               	xorlw	1
 17613  1E89  1D03               	skipz
 17614  1E8A  0008               	return
 17615                           
 17616                           ;Dimmer_B1.c: 68: DimmerLightsIntr = &DimmerLights1;
 17617  1E8B  30C0               	movlw	_DimmerLights1& (0+255)
 17618  1E8C  00F0               	movwf	??_DimmerIntrPointSelect
 17619  1E8D  0870               	movf	??_DimmerIntrPointSelect,w
 17620  1E8E  00F9               	movwf	_DimmerLightsIntr
 17621  1E8F  0008               	return
 17622  1E90                     __end_of_DimmerIntrPointSelect:	
 17623                           
 17624                           	psect	text128
 17625  1F02                     __ptext128:	
 17626 ;; *************** function _IOC_ISR *****************
 17627 ;; Defined at:
 17628 ;;		line 291 in file "../src/MCU_B1.c"
 17629 ;; Parameters:    Size  Location     Type
 17630 ;;		None
 17631 ;; Auto vars:     Size  Location     Type
 17632 ;;		None
 17633 ;; Return value:  Size  Location     Type
 17634 ;;		None               void
 17635 ;; Registers used:
 17636 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17637 ;; Tracked objects:
 17638 ;;		On entry : 0/0
 17639 ;;		On exit  : 0/0
 17640 ;;		Unchanged: 0/0
 17641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17646 ;;Total ram usage:        0 bytes
 17647 ;; Hardware stack levels used:    1
 17648 ;; Hardware stack levels required when called:    3
 17649 ;; This function calls:
 17650 ;;		_setDimmerReClock
 17651 ;; This function is called by:
 17652 ;;		_ISR
 17653 ;; This function uses a non-reentrant model
 17654 ;;
 17655                           
 17656                           
 17657                           ;psect for function _IOC_ISR
 17658  1F02                     _IOC_ISR:	
 17659                           
 17660                           ;MCU_B1.c: 292: if (IOCIE == 1 && IOCBF2 == 1) {
 17661                           
 17662                           ;incstack = 0
 17663                           ; Regs used in _IOC_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17664  1F02  1D8B               	btfss	11,3	;volatile
 17665  1F03  0008               	return
 17666  1F04  0027               	movlb	7	; select bank7
 17667  1F05  1D16               	btfss	22,2	;volatile
 17668  1F06  0008               	return
 17669                           
 17670                           ;MCU_B1.c: 293: IOCBF2 = 0;
 17671  1F07  1116               	bcf	22,2	;volatile
 17672                           
 17673                           ;MCU_B1.c: 294: IOCIF = 0;
 17674  1F08  100B               	bcf	11,0	;volatile
 17675                           
 17676                           ;MCU_B1.c: 295: if (myMain.PowerON == 1) {
 17677  1F09  0021               	movlb	1	; select bank1
 17678  1F0A  1C20               	btfss	_myMain^(0+128),0
 17679  1F0B  0008               	return
 17680                           
 17681                           ;MCU_B1.c: 297: setDimmerReClock();
 17682  1F0C  319D  25FB         	fcall	_setDimmerReClock
 17683  1F0E  0008               	return
 17684  1F0F                     __end_of_IOC_ISR:	
 17685                           
 17686                           	psect	text129
 17687  1DFB                     __ptext129:	
 17688 ;; *************** function _setDimmerReClock *****************
 17689 ;; Defined at:
 17690 ;;		line 169 in file "../src/MCU_B1.c"
 17691 ;; Parameters:    Size  Location     Type
 17692 ;;		None
 17693 ;; Auto vars:     Size  Location     Type
 17694 ;;		None
 17695 ;; Return value:  Size  Location     Type
 17696 ;;		None               void
 17697 ;; Registers used:
 17698 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17699 ;; Tracked objects:
 17700 ;;		On entry : 0/0
 17701 ;;		On exit  : 0/0
 17702 ;;		Unchanged: 0/0
 17703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17708 ;;Total ram usage:        0 bytes
 17709 ;; Hardware stack levels used:    1
 17710 ;; Hardware stack levels required when called:    2
 17711 ;; This function calls:
 17712 ;;		_setDimmerLights_IntrIOC_GO
 17713 ;; This function is called by:
 17714 ;;		_IOC_ISR
 17715 ;; This function uses a non-reentrant model
 17716 ;;
 17717                           
 17718                           
 17719                           ;psect for function _setDimmerReClock
 17720  1DFB                     _setDimmerReClock:	
 17721                           
 17722                           ;MCU_B1.c: 174: setDimmerLights_IntrIOC_GO(1);
 17723                           
 17724                           ;incstack = 0
 17725                           ; Regs used in _setDimmerReClock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17726  1DFB  3001               	movlw	1
 17727  1DFC  3191  215F         	fcall	_setDimmerLights_IntrIOC_GO
 17728  1DFE  0008               	return
 17729  1DFF                     __end_of_setDimmerReClock:	
 17730                           
 17731                           	psect	text130
 17732  115F                     __ptext130:	
 17733 ;; *************** function _setDimmerLights_IntrIOC_GO *****************
 17734 ;; Defined at:
 17735 ;;		line 28 in file "../src/Dimmer_B1.c"
 17736 ;; Parameters:    Size  Location     Type
 17737 ;;  lights          1    wreg     unsigned char 
 17738 ;; Auto vars:     Size  Location     Type
 17739 ;;  lights          1    2[COMMON] unsigned char 
 17740 ;; Return value:  Size  Location     Type
 17741 ;;		None               void
 17742 ;; Registers used:
 17743 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17744 ;; Tracked objects:
 17745 ;;		On entry : 0/0
 17746 ;;		On exit  : 0/0
 17747 ;;		Unchanged: 0/0
 17748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17750 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17752 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17753 ;;Total ram usage:        1 bytes
 17754 ;; Hardware stack levels used:    1
 17755 ;; Hardware stack levels required when called:    1
 17756 ;; This function calls:
 17757 ;;		_DimmerIntrIOCPointSelect
 17758 ;; This function is called by:
 17759 ;;		_setDimmerReClock
 17760 ;; This function uses a non-reentrant model
 17761 ;;
 17762                           
 17763                           
 17764                           ;psect for function _setDimmerLights_IntrIOC_GO
 17765  115F                     _setDimmerLights_IntrIOC_GO:	
 17766                           
 17767                           ;incstack = 0
 17768                           ; Regs used in _setDimmerLights_IntrIOC_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 17769                           ;setDimmerLights_IntrIOC_GO@lights stored from wreg
 17770  115F  00F2               	movwf	setDimmerLights_IntrIOC_GO@lights
 17771                           
 17772                           ;Dimmer_B1.c: 30: DimmerIntrIOCPointSelect(lights);
 17773  1160  0872               	movf	setDimmerLights_IntrIOC_GO@lights,w
 17774  1161  319E  2690  3191   	fcall	_DimmerIntrIOCPointSelect
 17775                           
 17776                           ;Dimmer_B1.c: 32: if (DimmerLightsIntrIOC->GO == 0 && DimmerLightsIntrIOC->TriacFlag == 
      +                          0) {
 17777  1164  0021               	movlb	1	; select bank1
 17778  1165  0852               	movf	_DimmerLightsIntrIOC^(0+128),w
 17779  1166  0086               	movwf	6
 17780  1167  3001               	movlw	1	; select bank2/3
 17781  1168  0087               	movwf	7
 17782  1169  1801               	btfsc	1,0
 17783  116A  0008               	return
 17784  116B  0852               	movf	_DimmerLightsIntrIOC^(0+128),w
 17785  116C  3E09               	addlw	9
 17786  116D  0086               	movwf	6
 17787  116E  3001               	movlw	1	; select bank2/3
 17788  116F  0087               	movwf	7
 17789  1170  1A81               	btfsc	1,5
 17790  1171  0008               	return
 17791                           
 17792                           ;Dimmer_B1.c: 33: DimmerLightsIntrIOC->GO = 1;
 17793  1172  0852               	movf	_DimmerLightsIntrIOC^(0+128),w
 17794  1173  0086               	movwf	6
 17795  1174  3001               	movlw	1	; select bank2/3
 17796  1175  0087               	movwf	7
 17797  1176  1401               	bsf	1,0
 17798                           
 17799                           ;Dimmer_B1.c: 34: DimmerLightsIntrIOC->TriacFlag = 1;
 17800  1177  0852               	movf	_DimmerLightsIntrIOC^(0+128),w
 17801  1178  3E09               	addlw	9
 17802  1179  0086               	movwf	6
 17803  117A  3001               	movlw	1	; select bank2/3
 17804  117B  0087               	movwf	7
 17805  117C  1681               	bsf	1,5
 17806  117D  0008               	return
 17807  117E                     __end_of_setDimmerLights_IntrIOC_GO:	
 17808                           
 17809                           	psect	text131
 17810  1E90                     __ptext131:	
 17811 ;; *************** function _DimmerIntrIOCPointSelect *****************
 17812 ;; Defined at:
 17813 ;;		line 8 in file "../src/Dimmer_B1.c"
 17814 ;; Parameters:    Size  Location     Type
 17815 ;;  lights          1    wreg     unsigned char 
 17816 ;; Auto vars:     Size  Location     Type
 17817 ;;  lights          1    1[COMMON] unsigned char 
 17818 ;; Return value:  Size  Location     Type
 17819 ;;		None               void
 17820 ;; Registers used:
 17821 ;;		wreg
 17822 ;; Tracked objects:
 17823 ;;		On entry : 0/0
 17824 ;;		On exit  : 0/0
 17825 ;;		Unchanged: 0/0
 17826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17828 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17829 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17830 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17831 ;;Total ram usage:        2 bytes
 17832 ;; Hardware stack levels used:    1
 17833 ;; This function calls:
 17834 ;;		Nothing
 17835 ;; This function is called by:
 17836 ;;		_setDimmerLights_IntrIOC_GO
 17837 ;; This function uses a non-reentrant model
 17838 ;;
 17839                           
 17840                           
 17841                           ;psect for function _DimmerIntrIOCPointSelect
 17842  1E90                     _DimmerIntrIOCPointSelect:	
 17843                           
 17844                           ;incstack = 0
 17845                           ; Regs used in _DimmerIntrIOCPointSelect: [wreg]
 17846                           ;DimmerIntrIOCPointSelect@lights stored from wreg
 17847  1E90  00F1               	movwf	DimmerIntrIOCPointSelect@lights
 17848                           
 17849                           ;Dimmer_B1.c: 10: if (lights == 1) {
 17850  1E91  0871               	movf	DimmerIntrIOCPointSelect@lights,w
 17851  1E92  3A01               	xorlw	1
 17852  1E93  1D03               	skipz
 17853  1E94  0008               	return
 17854                           
 17855                           ;Dimmer_B1.c: 11: DimmerLightsIntrIOC = &DimmerLights1;
 17856  1E95  30C0               	movlw	_DimmerLights1& (0+255)
 17857  1E96  00F0               	movwf	??_DimmerIntrIOCPointSelect
 17858  1E97  0870               	movf	??_DimmerIntrIOCPointSelect,w
 17859  1E98  0021               	movlb	1	; select bank1
 17860  1E99  00D2               	movwf	_DimmerLightsIntrIOC^(0+128)
 17861  1E9A  0008               	return
 17862  1E9B                     __end_of_DimmerIntrIOCPointSelect:	
 17863  007E                     btemp	set	126	;btemp
 17864  007E                     pic14e$flags	set	126
 17865  007E                     wtemp	set	126
 17866  007E                     wtemp0	set	126
 17867  0080                     wtemp1	set	128
 17868  0082                     wtemp2	set	130
 17869  0084                     wtemp3	set	132
 17870  0086                     wtemp4	set	134
 17871  0088                     wtemp5	set	136
 17872  007F                     wtemp6	set	127
 17873  007E                     ttemp	set	126
 17874  007E                     ttemp0	set	126
 17875  0081                     ttemp1	set	129
 17876  0084                     ttemp2	set	132
 17877  0087                     ttemp3	set	135
 17878  007F                     ttemp4	set	127
 17879  007E                     ltemp	set	126
 17880  007E                     ltemp0	set	126
 17881  0082                     ltemp1	set	130
 17882  0086                     ltemp2	set	134
 17883  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    102
    Data        32
    BSS         188
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      13
    BANK0            80     77      80
    BANK1            80      0      79
    BANK2            80      0      79
    BANK3            80      0      56
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    Sw	PTR struct Switch size(1) Largest target is 9
		 -> NULL(NULL[0]), Sw1(BANK3[9]), 

    RFSW	PTR struct RFSW size(1) Largest target is 1
		 -> NULL(NULL[0]), RFSW1(BANK1[1]), 

    LED	PTR struct LED size(2) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK1[4]), VarLED2(BANK2[4]), VarLED1(BANK2[4]), 

    DimmerLights11	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights1(BANK3[15]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights1(BANK3[15]), 

    Dimmer	PTR struct Dimmer size(1) Largest target is 3
		 -> NULL(NULL[0]), Dimmer1(BANK1[3]), 

    DimmerLightsIntr	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights1(BANK3[15]), 

    DimmerLightsIntrIOC	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights1(BANK3[15]), 

    product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), _product(BANK3[32]), 

    DelayOff	PTR struct DelayOff size(1) Largest target is 5
		 -> NULL(NULL[0]), DlySw1(BANK2[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _TMR0_ISR->_setDimmerLights_IntrControl
    _setDimmerLights_IntrControl->_DimmerIntrPointSelect
    _setDimmerReClock->_setDimmerLights_IntrIOC_GO
    _setDimmerLights_IntrIOC_GO->_DimmerIntrIOCPointSelect

Critical Paths under _main in BANK0

    _my_Main->_setBuz
    _getTemp_AD->_getAD
    _getPowerFault_AD->_getAD
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_setOverTemp_Exceptions
    _setOverTemp_Exceptions->_DimmerLights_Exceptions
    _Switch_Main->_setSw_Main
    _setSw_Main->_Sw_DimmerOffFunc
    _Sw_DimmerOnFunc->_setRF_DimmerLights
    _Sw_DimmerOffFunc->_setRF_DimmerLights
    _Sw_DimmerAdjFunc->_setDimmerLights_AdjGo
    _Sw_DimmerAdjFunc->_setDimmerLights_TriggerAdj
    _Sw_DimmerAdjFunc->_setRFSW_Status
    _setDimmerLights_TriggerAdj->_DimmerLightsPointSelect
    _setDimmerLights_AdjGo->_DimmerLightsPointSelect
    _Switch_Initialization->_setSw_Initialization
    _setSw_Initialization->_setLED
    _RF_Main->_setRF_Main
    _setLog_Code->_setBuz
    _setControl_Lights_Table->_setRFSW_AdjControl
    _setRFSW_Control->_setRF_DimmerLights
    _setDelayOff_GO->_DelayTimejudge
    _DelayTimejudge->___bmul
    _setRFSW_AdjControl->_setRF_DimmerValue
    _setRF_DimmerValue->_setDimmerLights_AdjRF
    _setDimmerLights_AdjRF->_getPercentValue
    _getPercentValue->___fttol
    ___ftmul->___awtoft
    ___ftadd->___ftmul
    _RF_RxDisable->_CC2500_WriteCommand
    _CC2500_TxData->_CC2500_WriteCommand
    _CC2500_RxData->_CC2500_ReadStatus
    _CC2500_RxData->_CC2500_WriteCommand
    _CC2500_ReadStatus->_CC2500_ReadByte
    _CC2500_ReadStatus->_CC2500_WriteByte
    _RF_Initialization->_setRF_Initialization
    _PowerFault_Main->_setPowerFault_Main
    _setPowerFault_Main->_setPowerFault_Exceptions
    _setPowerFault_Exceptions->_DimmerLights_Exceptions
    _setSw_Enable->_SwPointSelect
    _DimmerLights_Exceptions->_setBuz
    _setDimmerLights_TriggerERROR->_DimmerLightsPointSelect
    _setDimmerLights_ERROR->_setRFSW_Status
    _setDimmerLights_ERROR->_setSw_Status
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Flash_Memory_Main->_Flash_Memory_Modify
    _Flash_Memory_Modify->_Flash_Memory_Read
    _Flash_Memory_Initialization->_setPercentValue
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setDimmerLights_Adj
    _setDimmerLights_Adj->_setRF_DimmerLights
    _setDimmerLights->_setLED
    _setDimmerLights->_setMemory_GO
    _setLED->_LedPointSelect
    _DimmerLights_Close->_setMemory_GO
    _DimmerLights_Initialization->_setDimmerLights_Initialization
    _setDimmerLights_Initialization->_DimmerLightsPointSelect
    _DelayOff_Main->_DlyOff_Main
    _DlyOff_Main->_setRF_DimmerLights
    _setSw_Status->_SwPointSelect
    _setRF_DimmerLights->_setPercentValue
    _setPercentValue->___fttol
    ___fttol->___ftadd
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _setRFSW_Status->_RfSWPointSelect
    _setDimmerLights_Trigger->_DimmerLightsPointSelect
    _setDimmerLights_Switch->_DimmerLightsPointSelect
    _setBuz->___awdiv
    _DelayOff_Initialization->_DlyOff_Initialization
    _DlyOff_Initialization->_DelayOffPointSelect
    _CC2500_PowerOnInitial->_CC2500_InitSetREG
    _CC2500_SIDLEMode->_CC2500_WriteCommand
    _CC2500_PowerRST->_DelayTime_1us
    _CC2500_InitSetREG->_CC2500_WriteREG
    _CC2500_InitPATable->_CC2500_WriteREG
    _CC2500_WriteREG->_CC2500_WriteByte
    _CC2500_FrequencyCabr->_DelayTime_1us
    _CC2500_ClearTXFIFO->_CC2500_WriteCommand
    _CC2500_ClearRXFIFO->_CC2500_WriteCommand
    _CC2500_WriteCommand->_CC2500_WriteByte

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4   89746
                                             73 BANK0      4     0      4
              _Buzzer_Initialization
                        _Buzzer_Main
              _CC2500_PowerOnInitial
            _DelayOff_Initialization
                      _DelayOff_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
        _Flash_Memory_Initialization
                  _Flash_Memory_Main
                 _LED_Initialization
                           _LED_Main
                 _Mcu_Initialization
          _PowerFault_Initialization
                    _PowerFault_Main
                  _RF_Initialization
                            _RF_Main
              _Switch_Initialization
                        _Switch_Main
                _Temp_Initialization
                          _Temp_Main
                   _getPowerFault_AD
                         _getTemp_AD
              _myMain_Initialization
                            _my_Main
 ---------------------------------------------------------------------------------
 (1) _my_Main                                              0     0      0    1375
                             _setBuz
                       _setRF_Enable
                       _setSw_Enable
                     _setTemp_Enable
 ---------------------------------------------------------------------------------
 (2) _setTemp_Enable                                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           2     2      0     194
                                              4 BANK0      2     2      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getPowerFault_AD                                     2     2      0     194
                                              4 BANK0      2     2      0
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                4     1      3     172
                                              0 BANK0      4     1      3
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0    6649
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         1     1      0    6649
                                             17 BANK0      1     1      0
                         _getPF_Safe
             _setOverTemp_Exceptions
 ---------------------------------------------------------------------------------
 (3) _setOverTemp_Exceptions                               3     3      0    6626
                                             14 BANK0      3     3      0
            _DimmerLights_Exceptions
                             _setBuz
                             _setLED
                       _setRF_Enable
                       _setSw_Enable
 ---------------------------------------------------------------------------------
 (3) _getPF_Safe                                           1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Switch_Main                                          0     0      0   19674
                         _setSw_Main
 ---------------------------------------------------------------------------------
 (2) _setSw_Main                                           4     4      0   19674
                                             69 BANK0      4     4      0
                      _SwPointSelect
                   _Sw_DimmerAdjFunc
                   _Sw_DimmerOffFunc
                    _Sw_DimmerOnFunc
                             _setBuz
                        _setRF_Learn
 ---------------------------------------------------------------------------------
 (3) _setRF_Learn                                          1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerOnFunc                                      2     2      0    8759
                                             66 BANK0      2     2      0
                             _setBuz
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                     _setRFSW_Status
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerOffFunc                                     3     3      0    8545
                                             66 BANK0      3     3      0
                     _setDelayOff_GO
              _setDimmerLights_AdjGo
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
         _setDimmerLights_TriggerAdj
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerAdjFunc                                     2     2      0     927
                                              4 BANK0      2     2      0
              _setDimmerLights_AdjGo
         _setDimmerLights_TriggerAdj
                     _setRFSW_Status
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_TriggerAdj                           2     1      1     194
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_AdjGo                                2     1      1     194
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _Switch_Initialization                                0     0      0    1282
                         _TouchPower
               _setSw_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSw_Initialization                                 1     1      0    1282
                                              3 BANK0      1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _TouchPower                                           0     0      0       0
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (1) _RF_Main                                              0     0      0   26978
                         _setRF_Main
 ---------------------------------------------------------------------------------
 (2) _setRF_Main                                           4     4      0   26978
                                             71 BANK0      2     2      0
                      _CC2500_RxData
                      _CC2500_TxData
                _CC2500_WriteCommand
                       _RF_RxDisable
                          _getBuz_GO
                          _getRxData
 ---------------------------------------------------------------------------------
 (3) _getRxData                                            0     0      0   26302
            _setControl_Lights_Table
                        _setLog_Code
 ---------------------------------------------------------------------------------
 (4) _setLog_Code                                          1     1      0    1287
                                             13 BANK0      1     1      0
                             _setBuz
 ---------------------------------------------------------------------------------
 (4) _setControl_Lights_Table                              0     0      0   25015
                             _setBuz
                    _setDimmerLights
                 _setRFSW_AdjControl
                    _setRFSW_Control
                     _setRFSW_Status
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (5) _setRFSW_Control                                      2     2      0    9962
                                             66 BANK0      2     2      0
                    _RfSWPointSelect
                             _setBuz
                     _setDelayOff_GO
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                 _setRF_DimmerLights
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setDelayOff_GO                                       5     3      2    1092
                                             10 BANK0      5     3      2
                _DelayOffPointSelect
                     _DelayTimejudge
 ---------------------------------------------------------------------------------
 (5) _DelayTimejudge                                       6     6      0     294
                                              4 BANK0      6     6      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (6) ___bmul                                               4     3      1     156
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (5) _setRFSW_AdjControl                                   3     3      0   11267
                                             68 BANK0      3     3      0
                    _RfSWPointSelect
                  _setRF_DimmerValue
                          _setTxData
 ---------------------------------------------------------------------------------
 (6) _setRF_DimmerValue                                    3     3      0   11157
                                             65 BANK0      3     3      0
              _setDimmerLights_AdjRF
 ---------------------------------------------------------------------------------
 (7) _setDimmerLights_AdjRF                                2     2      0   11091
                                             63 BANK0      2     2      0
            _DimmerLightsPointSelect
                    _getPercentValue
 ---------------------------------------------------------------------------------
 (8) _getPercentValue                                      6     6      0   11047
                                             57 BANK0      6     6      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (9) ___ftmul                                             16    10      6    2502
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___ftadd                                             13     7      6    3118
                                             30 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _getBuz_GO                                            6     4      2      23
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _RF_RxDisable                                         0     0      0      68
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (3) _CC2500_TxData                                        2     2      0     160
                                              4 BANK0      2     2      0
                   _CC2500_WriteByte
                _CC2500_WriteCommand
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _CC2500_RxData                                        2     2      0     320
                                              4 BANK0      2     2      0
                    _CC2500_ReadByte
                  _CC2500_ReadStatus
                   _CC2500_WriteByte
                _CC2500_WriteCommand
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (4) _CC2500_ReadStatus                                    2     2      0     114
                                              2 BANK0      2     2      0
                    _CC2500_ReadByte
                   _CC2500_WriteByte
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (5) _CC2500_ReadByte                                      2     2      0      46
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _RF_Initialization                                    0     0      0       0
               _setRF_Initialization
 ---------------------------------------------------------------------------------
 (2) _setRF_Initialization                                 1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PowerFault_Main                                      0     0      0    5331
                 _setPowerFault_Main
 ---------------------------------------------------------------------------------
 (2) _setPowerFault_Main                                   1     1      0    5331
                                             17 BANK0      1     1      0
                       _getTemp_Safe
           _setPowerFault_Exceptions
 ---------------------------------------------------------------------------------
 (3) _setPowerFault_Exceptions                             3     3      0    5308
                                             14 BANK0      3     3      0
            _DimmerLights_Exceptions
                             _setLED
                       _setRF_Enable
                       _setSw_Enable
 ---------------------------------------------------------------------------------
 (2) _setSw_Enable                                         1     1      0      44
                                              2 BANK0      1     1      0
                      _SwPointSelect
 ---------------------------------------------------------------------------------
 (2) _setRF_Enable                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _DimmerLights_Exceptions                              1     1      0    3802
                                             13 BANK0      1     1      0
         _getDimmerLights_StatusFlag
                             _setBuz
              _setDimmerLights_ERROR
       _setDimmerLights_TriggerERROR
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights_TriggerERROR                         2     1      1     196
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights_ERROR                                2     2      0    2202
                                              4 BANK0      2     2      0
            _DimmerLightsPointSelect
                             _setLED
                     _setRFSW_Status
                       _setSw_Status
 ---------------------------------------------------------------------------------
 (3) _getTemp_Safe                                         1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PowerFault_Initialization                            0     0      0       0
       _setPowerFault_Initialization
 ---------------------------------------------------------------------------------
 (2) _setPowerFault_Initialization                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                            _IOC_Set
                             _IO_Set
                           _TMR0_Set
 ---------------------------------------------------------------------------------
 (2) _TMR0_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IOC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0     217
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0     217
                                              1 BANK0      3     3      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    1375
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    1375
                                              3 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Main                                    0     0      0     230
                _Flash_Memory_Modify
 ---------------------------------------------------------------------------------
 (2) _Flash_Memory_Modify                                  2     2      0     230
                                              4 BANK0      2     2      0
               _Flash_Memory_Erasing
                  _Flash_Memory_Read
                 _Flash_Memory_Write
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Erasing                                 0     0      0       0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Initialization                          2     2      0    5701
                                             61 BANK0      2     2      0
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                    _setPercentValue
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Write                                   2     2      0      91
                                              0 BANK0      2     2      0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (4) _Flash_Memory_Unlock                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Read                                    4     4      0      48
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0    9615
                 _DimmerLights_Close
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 2     2      0    9525
                                             69 BANK0      2     2      0
            _DimmerLightsPointSelect
                             _setBuz
                    _setDimmerLights
                _setDimmerLights_Adj
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Adj                                  3     2      1    6333
                                             66 BANK0      3     2      1
            _DimmerLightsPointSelect
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights                                      3     2      1    1663
                                              3 BANK0      3     2      1
            _DimmerLightsPointSelect
                             _setLED
                       _setMemory_GO
 ---------------------------------------------------------------------------------
 (4) _setLED                                               2     1      1    1220
                                              1 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (5) _LedPointSelect                                       1     1      0      93
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_Close                                   0     0      0      90
         _getDimmerLights_StatusFlag
                       _setMemory_GO
 ---------------------------------------------------------------------------------
 (6) _setMemory_GO                                         3     3      0      66
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _getDimmerLights_StatusFlag                           1     1      0      24
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          1     1      0      44
                                              4 BANK0      1     1      0
              _Dimmer_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       2     2      0      44
                                              2 BANK0      2     2      0
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _Dimmer_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Main                                        0     0      0    9166
                        _DlyOff_Main
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Main                                          3     3      0    9166
                                             66 BANK0      3     3      0
                _DelayOffPointSelect
                             _setBuz
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                     _setRFSW_Status
                 _setRF_DimmerLights
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setTxData                                            2     2      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _setSw_Status                                         2     1      1     386
                                              2 BANK0      2     1      1
                      _SwPointSelect
 ---------------------------------------------------------------------------------
 (3) _SwPointSelect                                        2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setRF_DimmerLights                                   5     4      1    6117
                                             61 BANK0      5     4      1
                    _setPercentValue
 ---------------------------------------------------------------------------------
 (5) _setPercentValue                                      4     4      0    5427
                                             57 BANK0      4     4      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (6) ___fttol                                             14    10      4     380
                                             43 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    2712
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___awtoft                                             6     3      3    2267
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___ftpack                                             8     3      5    2048
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (6) _setRFSW_Status                                       2     1      1     450
                                              2 BANK0      2     1      1
                    _RfSWPointSelect
 ---------------------------------------------------------------------------------
 (7) _RfSWPointSelect                                      2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Trigger                              2     1      1     386
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Switch                               2     1      1     386
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (6) _DimmerLightsPointSelect                              2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _setBuz                                               4     2      2    1287
                                              9 BANK0      4     2      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     428
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Initialization                              0     0      0      44
              _DlyOff_Initialization
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Initialization                                1     1      0      44
                                              2 BANK0      1     1      0
                _DelayOffPointSelect
 ---------------------------------------------------------------------------------
 (5) _DelayOffPointSelect                                  2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _CC2500_PowerOnInitial                                0     0      0    1677
                 _CC2500_ClearRXFIFO
                 _CC2500_ClearTXFIFO
               _CC2500_FrequencyCabr
                 _CC2500_InitPATable
                  _CC2500_InitSetREG
                    _CC2500_PowerRST
                   _CC2500_SIDLEMode
 ---------------------------------------------------------------------------------
 (2) _CC2500_SIDLEMode                                     0     0      0      68
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _CC2500_PowerRST                                      1     1      0     394
                                              6 BANK0      1     1      0
                   _CC2500_WriteByte
                      _DelayTime_1us
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (2) _CC2500_InitSetREG                                    4     4      0     354
                                              5 BANK0      4     4      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (2) _CC2500_InitPATable                                   3     3      0     309
                                              5 BANK0      3     3      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (3) _CC2500_WriteREG                                      3     2      1     218
                                              2 BANK0      3     2      1
                   _CC2500_WriteByte
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (2) _CC2500_FrequencyCabr                                 0     0      0     416
                _CC2500_WriteCommand
                      _DelayTime_1us
 ---------------------------------------------------------------------------------
 (3) _DelayTime_1us                                        6     4      2     348
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _CC2500_ClearTXFIFO                                   0     0      0      68
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _CC2500_ClearRXFIFO                                   0     0      0      68
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (4) _CC2500_WriteCommand                                  2     2      0      68
                                              2 BANK0      2     2      0
                   _CC2500_WriteByte
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _CC2500_WriteByte                                     2     2      0      46
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Main                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _ISR                                                 1     1      0     154
                                              7 COMMON     1     1      0
                            _IOC_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0     110
        _setDimmerLights_IntrControl
 ---------------------------------------------------------------------------------
 (13) _setDimmerLights_IntrControl                         5     5      0     110
                                              2 COMMON     5     5      0
              _DimmerIntrPointSelect
 ---------------------------------------------------------------------------------
 (14) _DimmerIntrPointSelect                               2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (12) _IOC_ISR                                             0     0      0      44
                   _setDimmerReClock
 ---------------------------------------------------------------------------------
 (13) _setDimmerReClock                                    0     0      0      44
         _setDimmerLights_IntrIOC_GO
 ---------------------------------------------------------------------------------
 (14) _setDimmerLights_IntrIOC_GO                          1     1      0      44
                                              2 COMMON     1     1      0
           _DimmerIntrIOCPointSelect
 ---------------------------------------------------------------------------------
 (15) _DimmerIntrIOCPointSelect                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Initialization
   _Buzzer_Main
   _CC2500_PowerOnInitial
     _CC2500_ClearRXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _Timeout_Counter
         _set_TimeoutCleared
     _CC2500_ClearTXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _Timeout_Counter
         _set_TimeoutCleared
     _CC2500_FrequencyCabr
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _Timeout_Counter
         _set_TimeoutCleared
       _DelayTime_1us
     _CC2500_InitPATable
       _CC2500_WriteREG
         _CC2500_WriteByte
         _Timeout_Counter
         _set_TimeoutCleared
     _CC2500_InitSetREG
       _CC2500_WriteREG
         _CC2500_WriteByte
         _Timeout_Counter
         _set_TimeoutCleared
     _CC2500_PowerRST
       _CC2500_WriteByte
       _DelayTime_1us
       _Timeout_Counter
       _set_TimeoutCleared
     _CC2500_SIDLEMode
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _Timeout_Counter
         _set_TimeoutCleared
   _DelayOff_Initialization
     _DlyOff_Initialization
       _DelayOffPointSelect
   _DelayOff_Main
     _DlyOff_Main
       _DelayOffPointSelect
       _setBuz
         ___awdiv
       _setDimmerLights_Switch
         _DimmerLightsPointSelect
       _setDimmerLights_Trigger
         _DimmerLightsPointSelect
       _setRFSW_Status
         _RfSWPointSelect
       _setRF_DimmerLights
         _setPercentValue
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
       _setSw_Status
         _SwPointSelect
       _setTxData
   _DimmerLights_Initialization
     _Dimmer_Initialization
     _setDimmerLights_Initialization
       _DimmerLightsPointSelect
   _DimmerLights_Main
     _DimmerLights_Close
       _getDimmerLights_StatusFlag
       _setMemory_GO
     _setDimmerLights_Main
       _DimmerLightsPointSelect
       _setBuz
         ___awdiv
       _setDimmerLights
         _DimmerLightsPointSelect
         _setLED
           _LedPointSelect
         _setMemory_GO
       _setDimmerLights_Adj
         _DimmerLightsPointSelect
         _setRF_DimmerLights
           _setPercentValue
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setTxData
   _Flash_Memory_Initialization
     _Flash_Memory_Read
     _Flash_Memory_Write
       _Flash_Memory_Unlock
     _setPercentValue
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _Flash_Memory_Main
     _Flash_Memory_Modify
       _Flash_Memory_Erasing
         _Flash_Memory_Unlock
       _Flash_Memory_Read
       _Flash_Memory_Write
         _Flash_Memory_Unlock
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IOC_Set
     _IO_Set
     _TMR0_Set
   _PowerFault_Initialization
     _setPowerFault_Initialization
   _PowerFault_Main
     _setPowerFault_Main
       _getTemp_Safe
       _setPowerFault_Exceptions
         _DimmerLights_Exceptions
           _getDimmerLights_StatusFlag
           _setBuz
             ___awdiv
           _setDimmerLights_ERROR
             _DimmerLightsPointSelect
             _setLED
               _LedPointSelect
             _setRFSW_Status
               _RfSWPointSelect
             _setSw_Status
               _SwPointSelect
           _setDimmerLights_TriggerERROR
             _DimmerLightsPointSelect
         _setLED
           _LedPointSelect
         _setRF_Enable
         _setSw_Enable
           _SwPointSelect
   _RF_Initialization
     _setRF_Initialization
   _RF_Main
     _setRF_Main
       _CC2500_RxData
         _CC2500_ReadByte
         _CC2500_ReadStatus
           _CC2500_ReadByte
           _CC2500_WriteByte
           _Timeout_Counter
           _set_TimeoutCleared
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
           _Timeout_Counter
           _set_TimeoutCleared
         _Timeout_Counter
         _set_TimeoutCleared
       _CC2500_TxData
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
           _Timeout_Counter
           _set_TimeoutCleared
         _Timeout_Counter
         _set_TimeoutCleared
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _Timeout_Counter
         _set_TimeoutCleared
       _RF_RxDisable
         _CC2500_WriteCommand
           _CC2500_WriteByte
           _Timeout_Counter
           _set_TimeoutCleared
       _getBuz_GO
       _getRxData
         _setControl_Lights_Table
           _setBuz
             ___awdiv
           _setDimmerLights
             _DimmerLightsPointSelect
             _setLED
               _LedPointSelect
             _setMemory_GO
           _setRFSW_AdjControl
             _RfSWPointSelect
             _setRF_DimmerValue
               _setDimmerLights_AdjRF
                 _DimmerLightsPointSelect
                 _getPercentValue
                   ___awtoft
                     ___ftpack
                   ___ftadd
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftdiv
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___fttol
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftadd (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                       ___ftpack (ARG)
                     ___ftdiv (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
             _setTxData
           _setRFSW_Control
             _RfSWPointSelect
             _setBuz
               ___awdiv
             _setDelayOff_GO
               _DelayOffPointSelect
               _DelayTimejudge
                 ___bmul
             _setDimmerLights_Switch
               _DimmerLightsPointSelect
             _setDimmerLights_Trigger
               _DimmerLightsPointSelect
             _setRF_DimmerLights
               _setPercentValue
                 ___awtoft
                   ___ftpack
                 ___ftdiv
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___fttol
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
             _setSw_Status
               _SwPointSelect
             _setTxData
           _setRFSW_Status
             _RfSWPointSelect
           _setSw_Status
             _SwPointSelect
           _setTxData
         _setLog_Code
           _setBuz
             ___awdiv
   _Switch_Initialization
     _TouchPower
       _Timeout_Counter
       _set_TimeoutCleared
     _setSw_Initialization
       _setLED
         _LedPointSelect
   _Switch_Main
     _setSw_Main
       _SwPointSelect
       _Sw_DimmerAdjFunc
         _setDimmerLights_AdjGo
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
         _setRFSW_Status
           _RfSWPointSelect
       _Sw_DimmerOffFunc
         _setDelayOff_GO
           _DelayOffPointSelect
           _DelayTimejudge
             ___bmul
         _setDimmerLights_AdjGo
           _DimmerLightsPointSelect
         _setDimmerLights_Switch
           _DimmerLightsPointSelect
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
         _setRF_DimmerLights
           _setPercentValue
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setTxData
       _Sw_DimmerOnFunc
         _setBuz
           ___awdiv
         _setDimmerLights_Switch
           _DimmerLightsPointSelect
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
         _setRFSW_Status
           _RfSWPointSelect
         _setRF_DimmerLights
           _setPercentValue
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setTxData
       _setBuz
         ___awdiv
       _setRF_Learn
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       _getPF_Safe
       _setOverTemp_Exceptions
         _DimmerLights_Exceptions
           _getDimmerLights_StatusFlag
           _setBuz
             ___awdiv
           _setDimmerLights_ERROR
             _DimmerLightsPointSelect
             _setLED
               _LedPointSelect
             _setRFSW_Status
               _RfSWPointSelect
             _setSw_Status
               _SwPointSelect
           _setDimmerLights_TriggerERROR
             _DimmerLightsPointSelect
         _setBuz
           ___awdiv
         _setLED
           _LedPointSelect
         _setRF_Enable
         _setSw_Enable
           _SwPointSelect
   _getPowerFault_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getTemp_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_Main
     _setBuz
       ___awdiv
     _setRF_Enable
     _setSw_Enable
       _SwPointSelect
     _setTemp_Enable

 _ISR (ROOT)
   _IOC_ISR
     _setDimmerReClock
       _setDimmerLights_IntrIOC_GO
         _DimmerIntrIOCPointSelect
   _TMR0_ISR
     _setDimmerLights_IntrControl
       _DimmerIntrPointSelect

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4D      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4F       9       98.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      38      11       70.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     133      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     133      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Tue Oct 21 16:51:25 2014

                   __size_of_Switch_Main 0004                    ?_Flash_Memory_Erasing 0070  
           ??_setDimmerLights_TriggerAdj 0023                           ___bmul@product 0022  
                                     l90 0965                                       l92 0979  
                                     _RD 0CA8                  __end_of_CC2500_WriteREG 121D  
                                     _WR 0CA9                             ___awdiv@sign 0026  
                                     _Sw 006E       __end_of_getDimmerLights_StatusFlag 1070  
             _getDimmerLights_StatusFlag 1066                   __end_of_setDelayOff_GO 0C32  
                           ___ftadd@exp1 004A                             ___ftadd@exp2 0049  
              setDimmerLights_Adj@lights 0064                     _setDimmerLights_Main 098D  
                           ___ftadd@sign 0048                                      l100 17A9  
                                    l101 17A5                                      l102 1793  
                                    l104 17A3                                      l243 0ADD  
                                    l318 109E                                      l319 109F  
                                    l362 12CE                                      l268 0E20  
                                    l269 0E6C                                      l783 156F  
                                    _GIE 005F                                      _CRC 00CF  
                                    _RA0 0060                                      _RB0 0068  
   __size_of_DimmerLights_Initialization 000D                                      _RB1 0069  
                                    _RA3 0063                                      _PF1 00BE  
                                    _RC0 0070                                      _RA4 0064  
                                    _LED 00CB                                      _RC1 0071  
                                    _RB3 006B                                      _RC2 0072  
                                    _RB4 006C                                      _RA6 0066  
                                    _RB5 006D                                      _RA7 0067  
                                    _RC4 0074                                      _RC5 0075  
                                    _RC7 0077                                      _RF1 00C6  
                                    _ISR 0004          setPowerFault_Exceptions@command 0030  
                                    _Sw1 01CF                setDimmerLights_Adj@status 0062  
               __end_of_CC2500_WriteByte 10A8           ??_setDimmerLights_TriggerERROR 0023  
                  _Buzzer_Initialization 1DE3                          __end_of_ADC_Set 1E45  
                        ?_DelayTimejudge 0070                                      wreg 0009  
   setDimmerLights_Initialization@lights 0023                          _setDimmerLights 0E72  
                  _setDimmerLights_ERROR 17B0                    _setDimmerLights_AdjRF 12A6  
                  _setDimmerLights_AdjGo 1FCF                  __size_of_setTemp_Enable 0008  
                                   ?_ISR 0070                          _PowerFault_Main 1DE9  
                           ___ftdiv@cntr 0038                          __end_of_IOC_ISR 1F0F  
                           ___ftdiv@sign 003D                                     l1230 11BA  
                                   l1243 13EA                                     l1252 15FD  
               ?_DimmerLightsPointSelect 0070                                     l2238 1F82  
                                   l1704 14B2                          __end_of_IOC_Set 1F29  
                                   l2711 0A76                                     l2537 16D5  
                                   l2740 03D3                                     l1908 0831  
                                   l2717 0A8D                                     l5213 1228  
                                   l5301 068B                                     l6101 0DFC  
                                   l6103 0DFF                                     l1935 14EB  
                                   l1872 0BAA                                     l6121 0E17  
                                   l5225 035C                                     l1890 1F77  
                                   l1874 0BBB                                     l5323 06E5  
                                   l5315 06CC                                     l6107 0E05  
                                   l6051 0AAB                                     l5235 0372  
                                   l1867 0B87                                     l5421 0FF7  
                                   l5413 0FDD                                     l5405 0FC2  
                                   l6205 1516                                     l6109 0E08  
                                   l6053 0AAE                                     l5253 039F  
                                   l5229 0363                                     l7013 0244  
                                   l5183 0A53                                     l5415 0FE6  
                                   l5407 0FD0                                     l6135 0E31  
                                   l6119 0E1D                                     l6071 0AC5  
                                   l5271 03E5                                     l5255 03A9  
                                   l5247 038C                                     l5343 05D7  
                                   l7023 0271                                     l5193 0A7B  
                                   l5185 0A5D                                     l5417 0FE9  
                                   l6137 0E49                                     l6081 0AEC  
                                   l6057 0AB4                                     l5265 03C5  
                                   l5257 03AE                                     l5337 05C1  
                                   l5523 084A                                     l5195 0A83  
                                   l5187 0A62                                     l5179 0A4C  
                                   l6251 13D2                                     l6155 0E6E  
                                   l6083 0AF0                                     l6075 0AE3  
                                   l5275 03F7                                     l5267 03CF  
                                   l5259 03B2                                     l5371 0636  
                                   l5355 0612                                     l5443 108B  
                                   l6165 12DF                                     l6173 1204  
                                   l5541 0870                                     l5533 0852  
                                   l5517 083F                                     l5605 07EE  
                                   l6085 0AF3                                     l6077 0AE6  
                                   l5285 0412                                     l6413 0CE4  
                                   l7037 02AF                                     l6167 12EA  
                                   l6175 1207                                     l5535 085E  
                                   l5295 0675                                     l5367 062E  
                                   l5359 061A                                     l5439 1085  
                                   l7047 02E1                                     l6433 15AB  
                                   l5545 0879                                     l6089 0AF9  
                                   l7083 177D                                     l6179 120D  
                                   l6443 15BB                                     l6427 15A2  
                                   l5387 0F92                                     l6437 15B2  
                                   l6429 15A5                                     l5549 0881  
                                   l5901 14D9                                     l5469 1368  
                                   l7237 147E                                     l5911 111E  
                                   l6439 15B5                                     l7431 1256  
                                   l7511 0EC7                                     l7175 049C  
                                   l5671 0C04                                     l5745 142F  
                                   l5681 0C23                                     l6377 0922  
                                   l5915 1124                                     l7427 124B  
                                   l7443 0B15                                     l7451 0B21  
                                   l5931 1273                                     l5675 0C0A  
                                   l5909 111B                                     l7461 0B31  
                                   l7541 156B                                     l7533 1553  
                                   l5925 126A                                     l5677 0C17  
                                   l7605 172C                                     l7447 0B1B  
                                   l5927 126D                                     l5863 0724  
                                   l7703 0F0F                                     l7295 16BE  
                                   l7473 0B50                                     l7481 0B5C  
                                   l7457 0B2B                                     l7465 0B37  
                                   l5793 1109                                     l5873 0746  
                                   l7617 1742                                     l7705 0F15  
                                   l6753 11CF                                     l6771 15DD  
                                   l7539 1566                                     l5795 110D  
                                   l7571 0C87                                     l6747 11C7  
                                   l7477 0B56                                     l6765 15C8  
                                   l5877 075C                                     l7565 0C6C  
                                   l6749 11CA                                     l7647 09B4  
                                   l7575 0C90                                     l7583 1671  
                                   l7727 0F42                                     l7911 08AC  
                                   l7649 09BA                                     l7681 1710  
                                   l7761 0D24                                     l7737 0F59  
                                   l7659 09E2                                     l7763 0D2A  
                                   l7819 0B7B                                     l7587 167D  
                                   l7739 0F5B                                     l7915 08B7  
                                   l7685 1717                    _myMain_Initialization 1F90  
                                   l7839 0B97                                     l6975 1F87  
                                   l7785 0D58                                     l6979 1F8D  
                                   l7797 0D76                                     l7789 0D66  
                                   l6997 020F                                     l7799 0D78  
                                   _CFGS 0CAE                                     _FREE 0CAC  
                                   _LATA 010C                                     _LATB 010D  
                                   _LATC 010E                                     u4005 063D  
                                   u4035 0F99                                     u4305 0871  
                                   u4065 0FC3                                     u3515 0A71  
                                   u3535 0A7E                                     u4095 0FDE  
                                   u4175 1354                                     u4265 0855  
                                   u4370 079C                                     u3715 03A0  
                                   _PEIE 005E                                     u5085 12D4  
                                   u4285 085F                                     u3565 0A94  
                                   u4615 10CB                                     u4295 0869  
                                   u3495 0A58                                     u4375 079A  
                                   u3745 03B3                                     u3845 069D  
                                   u3685 038D                                     u3925 05E3  
                                   u3855 06AD                                     u3775 03C6  
                                   u3935 05F3                                     u3865 06CD  
                                   u3875 06DC                                     u3955 061B  
                                   u3885 06E6                                     u3965 0621  
                                   u6555 1773                                     u3995 0637  
                                   u6805 16A2                                     u6735 11B1  
                                   u6815 16CD                                     u6755 1475  
                                   u6765 1484                                     u6785 130D  
                                   _LWLO 0CAD                                     _RFSW 007A  
                                   _TMR0 0015                                     _RSSI 00D3  
                                   _WREN 0CAA                                     _Buz1 00B2  
                                   _main 0888                             ___ftpack@arg 0020  
      __end_of_PowerFault_Initialization 1DE9                      __end_of_DlyOff_Main 0DF8  
                        __end_of_RF_Main 1DF2                             ___ftpack@exp 0023  
                                   fsr0h 0005                                     fsr1h 0007  
                                   fsr0l 0004                                     indf0 0000  
                                   indf1 0001                                     fsr1l 0006  
    __size_of_setDimmerLights_TriggerAdj 0010                                     btemp 007E  
                                   ltemp 007E            __size_of_setRF_Initialization 0007  
                       _setDimmerReClock 1DFB                                     start 0013  
                                   ttemp 007E                                     wtemp 007E  
               _setPowerFault_Exceptions 148D                      DelayTimejudge@value 0029  
             __end_of_setRFSW_AdjControl 1500                        ___bmul@multiplier 0023  
                           ___ftmul@cntr 003C                             ___ftmul@sign 003D  
           __size_of_Temp_Initialization 0003              __size_of_setPowerFault_Main 0076  
                                  ??_ISR 0077                             ___fttol@exp1 0058  
                           ___fttol@lval 0054           __size_of_DimmerIntrPointSelect 000A  
                       __end_of_LED_Main 1F02            __end_of_DimmerIntrPointSelect 1E90  
                  ?_setDimmerLights_Main 0070                          ?_setDelayOff_GO 002A  
              setPowerFault_Exceptions@i 002F                                    ?_main 0069  
                        __end_of___awdiv 0888                          __end_of___ftadd 042A  
                          __CFG_WDTE$OFF 0000                          __end_of___ftdiv 0707  
                        __end_of___ftmul 065E                          ___awdiv@divisor 0020  
                        __end_of___fttol 1000             setDimmerLights_AdjGo@command 0022  
                                  _IOCBF 0396                                    _IOCBN 0395  
                                  _IOCBP 0394                                    _IOCIE 005B  
                                  _IOCIF 0058                   _setDimmerLights_Switch 1F9F  
                        ___awdiv@counter 0025            __size_of_CC2500_FrequencyCabr 000C  
                                  _RFSW1 00EE                                    _PORTA 000C  
                                  _PORTB 000D                                    _PORTC 000E  
                           ?_setLED_Main 0070                       setRF_Learn@command 0020  
                                  _TRISA 008C                                    _TRISB 008D  
                                  _TRISC 008E                                    _WPUB1 1069  
                                  _WPUB2 106A                  __end_of_Timeout_Counter 10D1  
                          __CFG_WRT$HALF 0000                                    _Temp1 00D9  
     __end_of_setDimmerLights_IntrIOC_GO 117E               _setDimmerLights_IntrIOC_GO 115F  
                       __end_of_TMR0_ISR 12A6             __size_of_CC2500_WriteCommand 0019  
                       __end_of_TMR0_Set 1E54                                    _getAD 11BC  
                          ___awtoft@sign 002D          __end_of_DimmerLights_Exceptions 157E  
          DimmerLights_Exceptions@status 002D              DimmerIntrPointSelect@lights 0071  
                          ___ftpack@sign 0024                          __end_of_my_Main 16D7  
            __size_of_CC2500_ClearRXFIFO 0004                            ??_Buzzer_Main 0020  
            __size_of_CC2500_ClearTXFIFO 0004                      CC2500_RxData@loop_f 0025  
                         __pbitbssCOMMON 03E0                      setMemory_GO@command 0022  
                         __CFG_BOREN$OFF 0000                       Flash_Memory_Read@i 0021  
                       ?_CC2500_ReadByte 0070                                    ltemp0 007E  
                                  ltemp1 0082                                    ltemp2 0086  
                                  ltemp3 0080           __size_of_setLED_Initialization 0012  
          __end_of_setLED_Initialization 1082                                    ttemp0 007E  
                                  ttemp1 0081                                    ttemp2 0084  
                                  ttemp3 0087                                    ttemp4 007F  
                           ?_setRF_Learn 0070                                    status 0003  
                                  wtemp0 007E                                    wtemp1 0080  
                                  wtemp2 0082                                    wtemp3 0084  
                                  wtemp4 0086                                    wtemp5 0088  
                                  wtemp6 007F                       _setRF_DimmerLights 0792  
            __size_of_Flash_Memory_Write 002F                        ?_CC2500_SIDLEMode 0070  
             __size_of_RF_Initialization 0003                           setSw_Status@sw 0023  
       __size_of_DelayOff_Initialization 0004                setDimmerLights_Main@clear 0065  
                 ??_Flash_Memory_Erasing 0020                          _getPercentValue 09E8  
                     ??_CC2500_SIDLEMode 0024                          __initialization 0015  
                       ?_CC2500_PowerRST 0070                        ??_Sw_DimmerOnFunc 0062  
                      ??_setPercentValue 0059                             __end_of_main 08DD  
                    ?_setRF_DimmerLights 005D                         __end_of_Fosc_Set 1E17  
                       ?_CC2500_WriteREG 0022                                ??_ADC_Set 0020  
                __end_of_setDimmerLights 0EF3                     _setSw_Initialization 1FBF  
                setOverTemp_Exceptions@i 002F                                   ??_main 006D  
                          ___fttol@sign1 0053                             ?_setLog_Code 0070  
                _setControl_Lights_Table 0C32                   ?_Buzzer_Initialization 0070  
      __size_of_DimmerIntrIOCPointSelect 000B                  ??_DlyOff_Initialization 0022  
                __end_of_PowerFault_Main 1DEC                               _Receive_OK 03E0  
              ?_DimmerIntrIOCPointSelect 0070                                ??_IOC_ISR 0073  
                 ?_setDimmerLights_ERROR 0070                                ??_IOC_Set 0020  
        __end_of_DimmerLightsPointSelect 1EBC                   ?_setDimmerLights_AdjRF 0070  
                 ?_setDimmerLights_AdjGo 0022                 __size_of_setRFSW_Control 008B  
                       ??_setRFSW_Status 0023                  ??_Switch_Initialization 0024  
                   __end_of_getTemp_Safe 1E5C                     ??_setRF_DimmerLights 005E  
                                 ?_getAD 0020                              _DlyOff_Main 0D7E  
                 ?_myMain_Initialization 0070                                   _ADCON0 009D  
                                 _ADCON1 009E                                ??_RF_Main 0069  
                                 _ADRESH 009C                                   _ADRESL 009B  
                      ?_getPowerFault_AD 0070                         ___awdiv@dividend 0022  
                       __end_of___awtoft 123F                                   _ANSELA 018C  
                                 _ANSELB 018D                                   _ANSELC 018E  
                       __end_of___ftpack 0AA4                                   _IOCBF2 1CB2  
                _setDimmerLights_Trigger 1FAF                                   i1l6613 01D3  
                                 i1l6541 00A3                                   i1l6561 00F3  
                                 i1l6573 0128                                   i1l6581 0153  
                                 i1l6565 0106                                   i1l6559 00ED  
                                 i1l6567 010C                                   i1l6577 013F  
                                 i1l6587 016E                                   i1l6589 0174  
                                 i1l6599 01A7                                   _FVRCON 0117  
                                 _PMADRH 0192                                   _PMADRL 0191  
                                 _PMDATH 0194                                   _PMDATL 0193  
                                 _PMCON2 0196                       ??_getPowerFault_AD 0024  
                                 u553_25 007C                                   _OSCCON 0099  
                                 u666_25 129F                                   _TMR0IE 005D  
                                 _TMR0IF 005A                                   _IO_Set 112C  
                     DelayTime_1us@count 0020                    _Dimmer_Initialization 1E30  
         __size_of_CC2500_PowerOnInitial 0015            __end_of_CC2500_PowerOnInitial 10E6  
                                 _Dimmer 00D0                                   _DlySw1 0162  
             __end_of_Mcu_Initialization 1F63                      __end_of_Buzzer_Main 17B0  
                                 _Memory 013D                                   _Timer0 0135  
     __end_of_setDimmerLights_TriggerAdj 1FEF               _setDimmerLights_TriggerAdj 1FDF  
                                 ___bmul 1082            setDimmerLights_Switch@command 0022  
                              ??___awdiv 0024                                ??___ftadd 0044  
           __size_of_DelayOffPointSelect 000B                                ??___ftdiv 0034  
                  setDimmerLights@lights 0025                                ??___ftmul 0034  
                              ??___fttol 004F             ?_Flash_Memory_Initialization 0070  
            setDimmerLights_AdjRF@lights 0060                   ??_setDimmerLights_Main 0065  
                                 _r_data 00D7                                   _s_data 00D8  
                                 _setLED 0B05                                   _myMain 00A0  
                       _DimmerLightsIntr 0079                    ?_setSw_Initialization 0070  
                  setDimmerLights@status 0023                         ___awdiv@quotient 0027  
                                 _setBuz 0934                       __size_of_Temp_Main 0003  
       ??_setDimmerLights_Initialization 0022          ?_setDimmerLights_Initialization 0070  
                  ___ftmul@f3_as_product 0039             ??_getDimmerLights_StatusFlag 0020  
                              ??_my_Main 002D      __end_of_setDimmerLights_IntrControl 01F9  
            _setDimmerLights_IntrControl 0043                 Flash_Memory_Read@address 0022  
                      RfSWPointSelect@sw 0021                         ?_Timeout_Counter 0070  
                  __end_of_SwPointSelect 1ED2                  getPowerFault_AD@channel 0025  
                          ?_setRF_Enable 0070                           _setTemp_Enable 1E6C  
                        _RfSWPointSelect 1EBC             __size_of_Flash_Memory_Modify 0044  
      setDimmerLights_IntrControl@lights 0076              __size_of_DimmerLights_Close 0014  
                __size_of_LedPointSelect 0022                      Flash_Memory_Write@i 0021  
           __size_of_Flash_Memory_Unlock 0009                               _TouchPower 1F81  
                      ?_Sw_DimmerAdjFunc 0070              __size_of_CC2500_InitPATable 001F  
                    CC2500_TxData@loop_e 0025                  __end_of_getPercentValue 0A43  
       __end_of_CC2500_registers_address 102F     __end_of_setPowerFault_Initialization 1E1B  
  __size_of_setPowerFault_Initialization 0004             _setPowerFault_Initialization 1E17  
                __end_of__initialization 003F              ??_PowerFault_Initialization 0020  
            setDimmerLights_AdjGo@lights 0023                                ?_LED_Main 0070  
                             ___ftadd@f1 003E                               ___ftadd@f2 0041  
                     ??_Sw_DimmerAdjFunc 0024                      setSw_Enable@command 0022  
                             ___ftdiv@f1 0031                               ___ftdiv@f2 002E  
                             ___ftdiv@f3 0039                        ?_Sw_DimmerOffFunc 0070  
                             ___awtoft@c 0028                      ___bmul@multiplicand 0020  
           ?_DimmerLights_Initialization 0070                               ___ftmul@f1 002E  
                             ___ftmul@f2 0031                               ___fttol@f1 004B  
                         __pcstackCOMMON 0070           DimmerIntrIOCPointSelect@lights 0071  
                     ??_Sw_DimmerOffFunc 0062                             __pidataBANK3 11DC  
                          __end_of_getAD 11DC                                ?_TMR0_ISR 0070  
                              ?_TMR0_Set 0070             __size_of_setDimmerLights_Adj 003D  
                     _LED_Initialization 1EEA                ??_setControl_Lights_Table 0067  
       __size_of_DimmerLights_Exceptions 0041                         ??_DelayTimejudge 0024  
            ?_getDimmerLights_StatusFlag 0070            ??_Flash_Memory_Initialization 005D  
                       ?_setDimmerLights 0023                       __size_of_getBuz_GO 0011  
             __end_of_set_TimeoutCleared 1E24                         ?_PowerFault_Main 0070  
               __end_of_setDimmerReClock 1DFF                       __size_of_getRxData 0048  
                    ?_LED_Initialization 0070                   __end_of_setTemp_Enable 1E74  
                      ?_CC2500_WriteByte 0070                           ??_setRF_Enable 0020  
                         _DimmerLights11 00D1                     __size_of_setLED_Main 0047  
              ??_setDimmerLights_Trigger 0023                                  ??_getAD 0023  
                    _Temp_Initialization 1DF5                       ??_CC2500_WriteByte 0020  
             ??_setPowerFault_Exceptions 002E             setDimmerLights_Switch@lights 0023  
                             __pbssBANK0 006D                               __pbssBANK1 00A0  
                             __pbssBANK2 0120                               __pbssBANK3 01C0  
                              ?_Fosc_Set 0070                              _Buzzer_Main 1766  
                      ??_setRFSW_Control 0062                        __end_of_Temp_Main 1DFB  
                 ?_Dimmer_Initialization 0070                                  ?_IO_Set 0070  
                             ??_LED_Main 0024                            ?_setMemory_GO 0070  
                        __CFG_VCAPEN$OFF 0000                  _DelayOff_Initialization 1E0B  
          ?_setPowerFault_Initialization 0070                               _getPF_Safe 1E64  
                          ??_Switch_Main 0069                           DelayTime_1us@i 0022  
                         DelayTime_1us@j 0024                     ??_LED_Initialization 0024  
                           _DimmerLights 006D                        LedPointSelect@led 0020  
                 __size_of_DelayOff_Main 0004                     __size_of_setRF_Learn 0008  
                     getTemp_Safe@result 0020                              setBuz@count 002C  
                             __pmaintext 0888                      _CC2500_WriteCommand 1113  
                   ?_Temp_Initialization 0070                                  ?___bmul 0020  
       __size_of_DimmerLightsPointSelect 000B                         ??_setDelayOff_GO 002C  
          ??_DimmerLights_Initialization 0024                               ??_TMR0_ISR 0077  
                          ?_setTemp_Main 0070                               ??_TMR0_Set 0020  
                             __pintentry 0004                   ??_setSw_Initialization 0023  
                          ?_setSw_Enable 0070                       __size_of_setTxData 00B9  
                ?_setDimmerLights_Switch 0022                     Sw_DimmerAdjFunc@Idle 0024  
                                ?_setLED 0021                   __size_of_DelayTime_1us 0026  
                                _ADC_Set 1E3E                _PowerFault_Initialization 1DE6  
                                ?_setBuz 0029                                ?___awtoft 0028  
                              ?___ftpack 0020                               _getTemp_AD 1457  
           __end_of_setRF_Initialization 1E4C                    __size_of_getTemp_Safe 0008  
                          ?_setSw_Status 0022                       _setRFSW_AdjControl 14C6  
                __end_of_RfSWPointSelect 1EC7                        Sw_DimmerOnFunc@sw 0063  
                                _IOC_ISR 1F02                          ?_setTemp_Enable 0070  
                                _IOC_Set 1F1C                     __size_of_setLog_Code 0032  
                   ?_CC2500_WriteCommand 0070                        _Flash_Memory_Main 119D  
                      _Flash_Memory_Read 1145              ?_setDimmerLights_IntrIOC_GO 0070  
                 __size_of_CC2500_RxData 007A                   __size_of_CC2500_TxData 0061  
                    ?_setRFSW_AdjControl 0070      setDimmerLights_TriggerERROR@command 0022  
                                _RF_Data 0120                                  _RF_Main 1DEF  
                     ?_Flash_Memory_Main 0070                       ?_Flash_Memory_Read 0070  
        __end_of_setControl_Lights_Table 0C99                               ??_Fosc_Set 0020  
                            ?_TouchPower 0070                          _Sw_DimmerOnFunc 08DD  
                        _setPercentValue 1605                           ??_setMemory_GO 0020  
                       ?_getPercentValue 0070                                  _Dimmer1 00EB  
           __end_of_CC2500_FrequencyCabr 1EDE                          __size_of_IO_Set 0019  
                      __end_of_getBuz_GO 2000                      ??_Flash_Memory_Main 0026  
                    ??_Flash_Memory_Read 0020                                  _VarLED1 0167  
                                _VarLED2 016B                        __end_of_getRxData 1766  
             __end_of_setPowerFault_Main 0D7E                 _CC2500_registers_address 1000  
       __end_of_DimmerIntrIOCPointSelect 1E9B                    ??_Temp_Initialization 0020  
        __end_of_setDimmerLights_Trigger 1FBF                     ??_setRFSW_AdjControl 0064  
                           _getTemp_Safe 1E54                           ??_setTemp_Main 0031  
                        __size_of___bmul 0012           __end_of_setDimmerLights_Switch 1FAF  
                                ___awdiv 0834                                  ___ftadd 0334  
                         ??_setSw_Enable 0022                                  ___ftdiv 065E  
                                ___ftmul 05AA                                  ___fttol 0F79  
                    __end_of_Switch_Main 1E1F                  ??_Buzzer_Initialization 0020  
               ??_setOverTemp_Exceptions 002E                               ??___awtoft 002B  
                             ??___ftpack 0025                          __size_of_setLED 0062  
                   setRFSW_AdjControl@sw 0066                  ??_setDimmerLights_ERROR 0024  
                        __size_of_setBuz 0059                           ??_setSw_Status 0023  
                                __ptext1 1691                                  __ptext2 1E6C  
                                __ptext3 1F90                                  __ptext4 1457  
                                __ptext5 12EF                                  __ptext6 11BC  
                                __ptext7 1DF8                                  __ptext8 0EF3  
                                __ptext9 164B                  ??_setDimmerLights_AdjRF 005F  
                ??_setDimmerLights_AdjGo 0023                __size_of_CC2500_SIDLEMode 0004  
                    Sw_DimmerOnFunc@Idle 0062                    _DimmerIntrPointSelect 1E86  
                           __size_of_ISR 000F                __end_of_Flash_Memory_Main 11BC  
              __end_of_Flash_Memory_Read 115F                               _setRF_Main 0B67  
                ??_myMain_Initialization 0020                            _DelayOff_Main 1E0F  
                      _DimmerLights_Main 1E37                                  _my_Main 1691  
         __size_of_DlyOff_Initialization 000B                    ??_CC2500_WriteCommand 0022  
          __end_of_DlyOff_Initialization 1EB1               __end_of_CC2500_ClearRXFIFO 1E03  
               ??_setTemp_Initialization 0020               __end_of_CC2500_ClearTXFIFO 1E07  
          DimmerLightsPointSelect@lights 0021                             ?_DlyOff_Main 0070  
                     ?_DimmerLights_Main 0070                                  _product 006F  
                         _LedPointSelect 123F                      _DelayOffPointSelect 1E9B  
                                clrloop0 1E2B           __size_of_Switch_Initialization 0009  
          __end_of_Switch_Initialization 1E86                     end_of_initialization 003F  
              ??_DelayOff_Initialization 0023                        _CC2500_InitSetREG 1316  
                          _DelayTime_1us 12C9                        __end_of_setTxData 05AA  
             __end_of_Flash_Memory_Write 13F1                                  init_ram 1E24  
                     ?_CC2500_InitSetREG 0070                      ??_DimmerLights_Main 0067  
                   Flash_Memory_Read@ret 0023                                  initloop 1E25  
                             _setSw_Main 01F9                    CC2500_ReadByte@loop_b 0021  
                      _CC2500_ReadStatus 1261                              ?_getPF_Safe 0070  
                   Flash_Memory_Modify@i 0025                    _setLED_Initialization 1070  
                             getBuz_GO@i 0024                       ?_CC2500_ReadStatus 0070  
                       setRFSW_Status@sw 0023                 __size_of_CC2500_ReadByte 0017  
                          _CC2500_RxData 0DF8                            _CC2500_TxData 0AA4  
                    ??_CC2500_InitSetREG 0025                     __end_of_setRF_Enable 1F45  
         ??_setPowerFault_Initialization 0020              ?_setDimmerLights_TriggerAdj 0022  
              __size_of_getPowerFault_AD 0027            __size_of_Flash_Memory_Erasing 000C  
                   ?_DelayOffPointSelect 0070                      _Flash_Memory_Modify 15C1  
                _DimmerLights_Exceptions 153D                             __pstringtext 1000  
                    _Flash_Memory_Unlock 1E74                      ??_CC2500_ReadStatus 0022  
       getDimmerLights_StatusFlag@Status 0020                  CC2500_InitSetREG@loop_c 0028  
                            ?_getTemp_AD 0070                      __size_of_TouchPower 000F  
               setLED_Initialization@led 0023                   setSw_Initialization@sw 0023  
              __end_of_DimmerLights_Main 1E3E                       _Mcu_Initialization 1F54  
               __size_of_CC2500_PowerRST 0043                           ?_DelayOff_Main 0070  
                       ?_RfSWPointSelect 0070                          _setSw_Main$4946 0067  
                       __CFG_FOSC$INTOSC 0000                   __end_of_LedPointSelect 1261  
                __end_of_Sw_DimmerOnFunc 0934                  __end_of_setPercentValue 164B  
               __size_of_CC2500_WriteREG 0021                __end_of_CC2500_InitSetREG 1340  
                    ?_Mcu_Initialization 0070         __end_of_setPowerFault_Exceptions 14C6  
                   ?_Flash_Memory_Modify 0070              __size_of_setRF_DimmerLights 006C  
                         ?_DelayTime_1us 0020                      _setDimmerLights_Adj 1500  
                   ?_Flash_Memory_Unlock 0070                __end_of_CC2500_ReadStatus 1283  
                          ?_RF_RxDisable 0070                              ___ftdiv@exp 003C  
                         __end_of_IO_Set 1145                     _setRF_Initialization 1E45  
                            _Switch_Main 1E1B                        __size_of_LED_Main 000C  
                         ?_CC2500_RxData 0070                           ?_CC2500_TxData 0070  
                _DimmerLightsPointSelect 1EB1                              ___ftmul@exp 0038  
                  _CC2500_PowerOnInitial 10D1                     ??_Mcu_Initialization 0020  
                  ??_DelayOffPointSelect 0020                     ?_setDimmerLights_Adj 0062  
                         __end_of___bmul 1094                __size_of_Sw_DimmerAdjFunc 0031  
                   setRF_DimmerLights@on 005D                 _DimmerIntrIOCPointSelect 1E90  
                      __size_of_TMR0_ISR 0023          __size_of_setOverTemp_Exceptions 0046  
                 ?_DimmerIntrPointSelect 0070                        __size_of_TMR0_Set 0008  
                   __end_of_setMemory_GO 10FC            __size_of_setDimmerLights_Main 005B  
                         __end_of_setLED 0B67                           __end_of_setBuz 098D  
                   _CC2500_FrequencyCabr 1ED2                __size_of_Sw_DimmerOffFunc 006F  
             __size_of_Flash_Memory_Main 001F               __size_of_Flash_Memory_Read 001A  
                            ?_setRF_Main 0070                          _setRFSW_Control 0707  
                    __size_of_getPF_Safe 0008                        ?_setDimmerReClock 0070  
                    start_initialization 0015                        _setRF_DimmerValue 1422  
                        ?_LedPointSelect 0070               __end_of_DimmerLights_Close 10BC  
                            __end_of_ISR 0013                    ??_Flash_Memory_Modify 0024  
     __size_of_PowerFault_Initialization 0003                       ??_setDimmerReClock 0073  
                     ?_setRF_DimmerValue 0070               __end_of_CC2500_InitPATable 119D  
        __size_of_setTemp_Initialization 0003                    ??_Flash_Memory_Unlock 0020  
                ??_Dimmer_Initialization 0020                     __end_of_setTemp_Main 0F79  
                         ??_RF_RxDisable 0024                     __end_of_setSw_Enable 1F72  
                           ?_Buzzer_Main 0070                       _set_TimeoutCleared 1E1F  
                               ??_IO_Set 0020                 __size_of_Timeout_Counter 0015  
                              _VarErrLED 00E7                              ?_setSw_Main 0070  
                    ??_setRF_DimmerValue 0061                      __size_of_getTemp_AD 0036  
                 ?_setLED_Initialization 0070                     __end_of_setSw_Status 1F54  
                     Sw_DimmerAdjFunc@sw 0025                    ?_setRF_Initialization 0070  
                      __size_of_Fosc_Set 0004                  __size_of_setRFSW_Status 000E  
              __size_of_CC2500_WriteByte 0014                                _Temp_Main 1DF8  
              ??_DimmerLights_Exceptions 002D            setOverTemp_Exceptions@command 0030  
                    ?_set_TimeoutCleared 0070                                _Rx_Length 00D4  
                setRF_DimmerValue@lights 0063                                 ??___bmul 0021  
                  ??_setDimmerLights_Adj 0063                   __size_of_SwPointSelect 000B  
                              _Tx_Length 00D5                              __pdataBANK3 01A0  
                               ??_setLED 0022                         ??_setTemp_Enable 0020  
                               ?_ADC_Set 0070                                 ??_setBuz 002B  
                        ??_DelayOff_Main 0065                        ??_CC2500_ReadByte 0020  
                       _CC2500_SIDLEMode 1E07               __size_of_DimmerLights_Main 0007  
              __end_of_setRF_DimmerValue 1457                    ?_CC2500_FrequencyCabr 0070  
                          ??_setLED_Main 0021                        __size_of___awtoft 0022  
                      __size_of___ftpack 0061                                 ?_IOC_ISR 0070  
                        _setRF_Main$4076 0068                              __pbssCOMMON 0078  
                               ?_IOC_Set 0070                                ___latbits 0003  
                  setTemp_Enable@command 0020                      setRF_Enable@command 0020  
                       ?_Sw_DimmerOnFunc 0070                            __pcstackBANK0 0020  
                   ??_set_TimeoutCleared 0020                         ?_setPercentValue 0070  
                        ??_DelayTime_1us 0022               __size_of_CC2500_InitSetREG 002A  
               __size_of_setDimmerLights 0081                            DlyOff_Main@sw 0064  
                      ??_CC2500_PowerRST 0026                                 ?_RF_Main 0070  
                           ??_TouchPower 0020                 __size_of_PowerFault_Main 0003  
                   __size_of_DlyOff_Main 007A               __size_of_CC2500_ReadStatus 0022  
                 _setOverTemp_Exceptions 164B                        ??_CC2500_WriteREG 0023  
                          ??_setRF_Learn 0020                            _DimmerLights1 01C0  
                  CC2500_WriteREG@w_addr 0024                    setDelayOff_GO@command 002A  
              ??_DimmerLightsPointSelect 0020                    __size_of_setRF_Enable 000E  
                        ??_CC2500_RxData 0024                          ??_CC2500_TxData 0024  
                              __pnvBANK0 006F              __size_of_LED_Initialization 000C  
                 ?_CC2500_PowerOnInitial 0070                               ?_Temp_Main 0070  
                    __size_of_setRF_Main 0065                    DelayOffPointSelect@sw 0021  
                             setBuz@time 0029                      setDelayOff_GO@value 002B  
               ?_setControl_Lights_Table 0070                   _setTemp_Initialization 1DF2  
                              _getBuz_GO 1FEF                         _getPowerFault_AD 12EF  
      __size_of_setPowerFault_Exceptions 0039      __end_of_Flash_Memory_Initialization 04F1  
            _Flash_Memory_Initialization 042A                                 ?___awdiv 0020  
              ?_setPowerFault_Exceptions 0070                                __ptext100 1FAF  
                              __ptext101 1F9F                                __ptext110 157E  
                              __ptext102 1EB1                                __ptext111 1316  
                              __ptext103 0934                                __ptext120 10BC  
                              __ptext112 117E                                __ptext104 0834  
                              __ptext121 1094                                __ptext113 11FC  
                              __ptext105 1E0B                                __ptext130 115F  
                              __ptext122 1766                                __ptext114 1ED2  
                              __ptext106 1EA6                                __ptext131 1E90  
                              __ptext123 1DE3                                __ptext115 12C9  
                              __ptext107 1E9B                                __ptext116 1E03  
                              __ptext108 10D1                                __ptext125 1283  
                              __ptext117 1DFF                                __ptext109 1E07  
                               ?___ftadd 003E                                __ptext126 0043  
                              __ptext118 1113                                __ptext127 1E86  
                              __ptext119 1E1F                                __ptext128 1F02  
                              __ptext129 1DFB                                _getRxData 171E  
                               ?___ftdiv 002E                                 ?___ftmul 002E  
                               ?___fttol 004B                  __end_of_setRFSW_Control 0792  
          __size_of_setSw_Initialization 0010           __size_of_Buzzer_Initialization 0003  
          __end_of_Buzzer_Initialization 1DE6                         getPercentValue@i 005C  
                       setPercentValue@i 005A                            ??_setLog_Code 002D  
                     __end_of_TouchPower 1F90                       _setPowerFault_Main 0D08  
     setDimmerLights_TriggerERROR@lights 0023           __size_of_setDimmerLights_ERROR 0050  
               ?_setDimmerLights_Trigger 0022                          DelayTimejudge@i 0026  
                        DelayTimejudge@j 0027                          DelayTimejudge@k 0028  
                    __size_of_setSw_Main 013B            __end_of_setDimmerLights_ERROR 1800  
           CC2500_ReadStatus@status_addr 0023           __size_of_setDimmerLights_AdjRF 0023  
         __size_of_setDimmerLights_AdjGo 0010            __end_of_setDimmerLights_AdjRF 12C9  
          __end_of_setDimmerLights_AdjGo 1FDF                   CC2500_WriteByte@loop_a 0021  
                               ?_my_Main 0070                                _r_address 00D6  
         __size_of_myMain_Initialization 000F             __end_of_CC2500_patable_vaule 1066  
          __end_of_myMain_Initialization 1F9F                      ?_setPowerFault_Main 0070  
                         __size_of_getAD 0020                             _setRF_Enable 1F37  
                __size_of_DelayTimejudge 002A                            _SwPointSelect 1EC7  
                     Sw_DimmerOffFunc@sw 0064                      __end_of_setLED_Main 171E  
                    _DimmerLightsIntrIOC 00D2                   ??_setRF_Initialization 0020  
            __end_of_Temp_Initialization 1DF8                        _CC2500_rfSettings 102F  
                               _LED_Main 1EF6                             ??_getPF_Safe 0020  
                        SwPointSelect@sw 0021                                clear_ram0 1E2A  
               CC2500_InitPATable@loop_d 0027                                _setTxData 04F1  
    __end_of_DimmerLights_Initialization 1F1C              _DimmerLights_Initialization 1F0F  
                     _CC2500_ClearRXFIFO 1DFF                       _CC2500_ClearTXFIFO 1E03  
         setDimmerLights_Trigger@command 0022                 setRF_DimmerLights@lights 0061  
                               _GO_nDONE 04E9                      __end_of_setRF_Learn 1E64  
                   ??_setPowerFault_Main 0031                        ??_Timeout_Counter 0020  
                             ?_getBuz_GO 0020                 __size_of_getPercentValue 005B  
               setRF_DimmerLights@status 0060              __size_of_setRFSW_AdjControl 003A  
                  __size_of_setMemory_GO 0016                       _Flash_Memory_Write 13C2  
                             ?_getRxData 0070                                 _TMR0_ISR 1283  
                 CC2500_InitSetREG@temp1 0026                   CC2500_InitSetREG@temp2 0027  
                               _TMR0_Set 1E4C                         _Sw_DimmerAdjFunc 13F1  
                    ?_CC2500_ClearRXFIFO 0070                      ?_CC2500_ClearTXFIFO 0070  
      setDimmerLights_TriggerAdj@command 0022                                 _RF_Count 00CD  
                   __end_of_RF_RxDisable 1F81                             ??_getTemp_AD 0024  
            __end_of_CC2500_WriteCommand 112C                   ??_CC2500_FrequencyCabr 0026  
                DlyOff_Initialization@sw 0022                         __size_of_ADC_Set 0007  
             __size_of_setRF_DimmerValue 0035                      ?_Flash_Memory_Write 0070  
                       _Sw_DimmerOffFunc 0C99                    __size_of_setTemp_Main 0086  
                __size_of_setDelayOff_GO 0066                    __size_of_setSw_Enable 000F  
                               _DelayOff 0078                             setSw_Main@sw 0068  
       setDimmerLights_IntrIOC_GO@lights 0072                       __end_of_getPF_Safe 1E6C  
                       __size_of_IOC_ISR 000D             ?_setDimmerLights_IntrControl 0070  
                       __size_of_IOC_Set 000D             __end_of_Flash_Memory_Erasing 1EEA  
                         ?_SwPointSelect 0070                              getAD@adcon0 0023  
                            getAD@adcon1 0020                           setLED_Main@led 0023  
                    __end_of_setLog_Code 0834                    _DlyOff_Initialization 1EA6  
                  __size_of_setSw_Status 000F                     ??_CC2500_ClearRXFIFO 0024  
                   ??_CC2500_ClearTXFIFO 0024                __end_of_CC2500_rfSettings 105E  
                       __size_of_RF_Main 0003                                 _Fosc_Set 1E13  
                  _Switch_Initialization 1E7D                     ??_Flash_Memory_Write 0020  
                      ??_setDimmerLights 0024                           _setRFSW_Status 1F29  
                           _setMemory_GO 10E6                     __size_of_Buzzer_Main 004A  
                     __end_of_getTemp_AD 148D                               ?_setTxData 0070  
                           ?_Switch_Main 0070               ??_DimmerIntrIOCPointSelect 0070  
                       _CC2500_WriteByte 1094             Flash_Memory_Initialization@i 005E  
                            ??_Temp_Main 0032                        ??_PowerFault_Main 0032  
                      setRFSW_Control@sw 0063                                setLED@led 0022  
   __end_of_setDimmerLights_TriggerERROR 1395    __size_of_setDimmerLights_TriggerERROR 002B  
           _setDimmerLights_TriggerERROR 136A                  ??_DimmerIntrPointSelect 0070  
                           _setTemp_Main 0EF3                         __size_of___awdiv 0054  
                       __size_of___ftadd 00F6                         ?_setRFSW_Control 0070  
                       __size_of___ftdiv 00A9                             _setSw_Enable 1F63  
                       __size_of___ftmul 00B4                         __size_of___fttol 0087  
                               ___awtoft 121D                         ??_LedPointSelect 0020  
                               ___ftpack 0A43                             _setSw_Status 1F45  
                      getTemp_AD@channel 0025                             ??_setRF_Main 0067  
                   CC2500_WriteREG@value 0022                              _setLED_Main 16D7  
                  setRFSW_Status@command 0022               __end_of_setRF_DimmerLights 07FE  
               ?_DelayOff_Initialization 0070                         setDelayOff_GO@sw 002E  
                       __size_of_my_Main 0046                                 __ptext10 1E64  
                               __ptext11 1DF5                                 __ptext20 1FCF  
                               __ptext12 1DF2                                 __ptext21 1E7D  
                               __ptext13 1E1B                                 __ptext30 0BCC  
                               __ptext22 1FBF                                 __ptext14 01F9  
                               __ptext31 1340                                 __ptext23 1F81  
                               __ptext15 1E5C                                 __ptext40 1F72  
                               __ptext32 1082                                 __ptext24 1DEF  
                               __ptext16 08DD                                 __ptext41 0AA4  
                               __ptext33 14C6                                 __ptext25 0B67  
                               __ptext17 0C99                                 __ptext50 1F63  
                               __ptext42 0DF8                                 __ptext34 1422  
                               __ptext26 171E                                 __ptext18 13F1  
                               __ptext51 1F37                                 __ptext43 1261  
                               __ptext35 12A6                                 __ptext27 0802  
                               __ptext19 1FDF                                 __ptext60 112C  
                               __ptext52 153D                                 __ptext44 10FC  
                               __ptext36 09E8                                 __ptext28 0C32  
                               __ptext61 1F1C                                 __ptext53 136A  
                               __ptext45 1DEC                                 __ptext37 05AA  
                               __ptext29 0707                                 __ptext70 1EDE  
                               __ptext62 1E13                                 __ptext54 17B0  
                               __ptext46 1E45                                 __ptext38 0334  
                               __ptext71 042A                                 __ptext63 1E3E  
                               __ptext55 1E54                                 __ptext47 1DE9  
                               __ptext39 1FEF                                 __ptext80 123F  
                               __ptext72 13C2                                 __ptext64 1EF6  
                               __ptext56 1DE6                                 __ptext48 0D08  
                               __ptext81 10A8                                 __ptext73 1E74  
                               __ptext65 16D7                                 __ptext57 1E17  
                               __ptext49 148D                                 __ptext90 1F45  
                               __ptext82 10E6                                 __ptext74 1145  
                               __ptext66 1EEA                                 __ptext58 1F54  
                               __ptext91 1EC7                                 __ptext83 1066  
                               __ptext75 1E37                                 __ptext67 1070  
                               __ptext59 1E4C                                 __ptext92 0792  
                               __ptext84 1F0F                                 __ptext76 098D  
                               __ptext68 119D                                 __ptext93 1605  
                               __ptext85 1395                                 __ptext77 1500  
                               __ptext69 15C1                                 __ptext94 0F79  
                               __ptext86 1E30                                 __ptext78 0E72  
                               __ptext95 065E                                 __ptext87 1E0F  
                               __ptext79 0B05                                 __ptext96 121D  
                               __ptext88 0D7E                                 __ptext97 0A43  
                               __ptext89 04F1                                 __ptext98 1F29  
                               __ptext99 1EBC                                 __product 01A0  
          ??_setDimmerLights_IntrControl 0072                  ??_setLED_Initialization 0023  
               __size_of_RfSWPointSelect 000B           __size_of_Dimmer_Initialization 0007  
                 __end_of_setRFSW_Status 1F37            __end_of_Dimmer_Initialization 1E37  
           __end_of_setDimmerLights_Main 09E8              setDimmerLights_ERROR@lights 0025  
                           ??_setSw_Main 0065                            setLED@command 0021  
                          __size_of_main 0055                              _setRF_Learn 1E5C  
               __end_of_CC2500_SIDLEMode 1E0B               setDimmerLights_Main@lights 0066  
            __end_of_DelayOffPointSelect 1EA6               CC2500_WriteCommand@command 0023  
                     _DimmerLights_Close 10A8                 ??_setDimmerLights_Switch 0023  
              __size_of_setDimmerReClock 0004                              getPF_Safe@i 0020  
                        _CC2500_ReadByte 10FC                       _CC2500_InitPATable 117E  
    __size_of_getDimmerLights_StatusFlag 000A            setDimmerLights_Trigger@lights 0023  
                     __end_of_setRF_Main 0BCC                              ??_getBuz_GO 0022  
            __size_of_Mcu_Initialization 000F                     _CC2500_patable_vaule 105E  
                            ??_getRxData 0067                      ?_DimmerLights_Close 0070  
       setDimmerLights_TriggerAdj@lights 0023                                 main@argc 0069  
          ?_setDimmerLights_TriggerERROR 0022                                 main@argv 006B  
                    ?_CC2500_InitPATable 0070                          _CC2500_PowerRST 157E  
            __end_of_Flash_Memory_Modify 1605                        ??_getPercentValue 0059  
                            _setLog_Code 0802              __end_of_Flash_Memory_Unlock 1E7D  
                        ??_SwPointSelect 0020                          _CC2500_WriteREG 11FC  
                     __end_of_setSw_Main 0334                            _Transceive_OK 03E1  
                 ?_DlyOff_Initialization 0070                  ?_setOverTemp_Exceptions 0070  
                         _DelayTimejudge 1340                              pic14e$flags 007E  
               __end_of_getPowerFault_AD 1316                     ??_DimmerLights_Close 0023  
           ??_setDimmerLights_IntrIOC_GO 0072                                 intlevel1 0000  
                   ??_CC2500_InitPATable 0025                   ?_Switch_Initialization 0070  
                        ?_setRFSW_Status 0022                  ??_CC2500_PowerOnInitial 0029  
 __end_of_setDimmerLights_Initialization 13C2  __size_of_setDimmerLights_Initialization 002D  
         _setDimmerLights_Initialization 1395              __end_of_setDimmerLights_Adj 153D  
                ?_setTemp_Initialization 0070                              ??_setTxData 0020  
                 CC2500_InitPATable@temp 0026                    __size_of_RF_RxDisable 000F  
                      _RF_Initialization 1DEC     __size_of_setDimmerLights_IntrControl 01B6  
                          ?_getTemp_Safe 0070                     _Flash_Memory_Erasing 1EDE  
                     ?_RF_Initialization 0070                               _SPI0Buffer 007B  
        __end_of_DelayOff_Initialization 1E0F      __size_of_setDimmerLights_IntrIOC_GO 001F  
                             _OPTION_REG 0095                    __end_of_DelayOff_Main 1E13  
                    ??_RF_Initialization 0021                           _setDelayOff_GO 0BCC  
       __size_of_setControl_Lights_Table 0067                   __end_of_DelayTimejudge 136A  
         __end_of_setOverTemp_Exceptions 1691     __size_of_Flash_Memory_Initialization 00C7  
            __size_of_set_TimeoutCleared 0005                            ??_DlyOff_Main 0062  
                  __end_of_DelayTime_1us 12EF                 __end_of_Sw_DimmerAdjFunc 1422  
                __end_of_CC2500_ReadByte 1113             __end_of_setSw_Initialization 1FCF  
                        _Timeout_Counter 10BC                     getPercentValue@value 005B  
                           _RF_RxDisable 1F72               ?_PowerFault_Initialization 0070  
             __end_of_LED_Initialization 1EF6         __size_of_setDimmerLights_Trigger 0010  
         __end_of_setTemp_Initialization 1DF5                 __size_of_Sw_DimmerOnFunc 0057  
               ?_DimmerLights_Exceptions 0070                 __size_of_setPercentValue 0046  
                   setPercentValue@value 0059                __end_of_RF_Initialization 1DEF  
               __end_of_Sw_DimmerOffFunc 0D08          __size_of_setDimmerLights_Switch 0010  
                      ??_RfSWPointSelect 0020                    __end_of_CC2500_RxData 0E72  
                  __end_of_CC2500_TxData 0B05                           ??_getTemp_Safe 0020  
                    setSw_Status@command 0022                  __end_of_CC2500_PowerRST 15C1  
