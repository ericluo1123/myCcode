

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Thu Feb 26 14:24:22 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F723A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,inline,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,inline,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,inline,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,inline,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,inline,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,inline,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,delta=2
    61                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text50,local,class=CODE,merge=1,delta=2
    63                           	psect	text51,local,class=CODE,merge=1,delta=2
    64                           	psect	text52,local,class=CODE,merge=1,delta=2
    65                           	psect	text53,local,class=CODE,merge=1,delta=2
    66                           	psect	text54,local,class=CODE,merge=1,delta=2
    67                           	psect	text55,local,class=CODE,merge=1,delta=2
    68                           	psect	text56,local,class=CODE,merge=1,delta=2
    69                           	psect	text57,local,class=CODE,merge=1,delta=2
    70                           	psect	text58,local,class=CODE,merge=1,delta=2
    71                           	psect	text59,local,class=CODE,merge=1,delta=2
    72                           	psect	text60,local,class=CODE,merge=1,delta=2
    73                           	psect	text61,local,class=CODE,merge=1,delta=2
    74                           	psect	text62,local,class=CODE,merge=1,inline,delta=2
    75                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
    76                           	psect	text64,local,class=CODE,merge=1,inline,delta=2
    77                           	psect	text65,local,class=CODE,merge=1,delta=2
    78                           	psect	intentry,global,class=CODE,delta=2
    79                           	psect	text66,local,class=CODE,merge=1,inline,delta=2
    80                           	dabs	1,0x7E,2
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0089                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  008F                     	;# 
   124  0090                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0095                     	;# 
   131  0095                     	;# 
   132  0096                     	;# 
   133  0096                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009F                     	;# 
   139  0108                     	;# 
   140  0109                     	;# 
   141  010C                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  0185                     	;# 
   148  0186                     	;# 
   149  018C                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0089                     	;# 
   189  008C                     	;# 
   190  008D                     	;# 
   191  008E                     	;# 
   192  008F                     	;# 
   193  0090                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0096                     	;# 
   203  0098                     	;# 
   204  0099                     	;# 
   205  009C                     	;# 
   206  009D                     	;# 
   207  009F                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0186                     	;# 
   218  018C                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000D                     	;# 
   232  000E                     	;# 
   233  000E                     	;# 
   234  000F                     	;# 
   235  0010                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0014                     	;# 
   240  0015                     	;# 
   241  0015                     	;# 
   242  0016                     	;# 
   243  0017                     	;# 
   244  0018                     	;# 
   245  0019                     	;# 
   246  001A                     	;# 
   247  001B                     	;# 
   248  001B                     	;# 
   249  001C                     	;# 
   250  001D                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  0081                     	;# 
   254  0085                     	;# 
   255  0086                     	;# 
   256  0087                     	;# 
   257  0089                     	;# 
   258  008C                     	;# 
   259  008D                     	;# 
   260  008E                     	;# 
   261  008F                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0096                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009F                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0186                     	;# 
   287  018C                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0089                     	;# 
   327  008C                     	;# 
   328  008D                     	;# 
   329  008E                     	;# 
   330  008F                     	;# 
   331  0090                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0094                     	;# 
   337  0095                     	;# 
   338  0095                     	;# 
   339  0096                     	;# 
   340  0096                     	;# 
   341  0098                     	;# 
   342  0099                     	;# 
   343  009C                     	;# 
   344  009D                     	;# 
   345  009F                     	;# 
   346  0108                     	;# 
   347  0109                     	;# 
   348  010C                     	;# 
   349  010C                     	;# 
   350  010D                     	;# 
   351  010D                     	;# 
   352  010E                     	;# 
   353  010F                     	;# 
   354  0185                     	;# 
   355  0186                     	;# 
   356  018C                     	;# 
   357  0000                     	;# 
   358  0001                     	;# 
   359  0002                     	;# 
   360  0003                     	;# 
   361  0004                     	;# 
   362  0005                     	;# 
   363  0006                     	;# 
   364  0007                     	;# 
   365  0009                     	;# 
   366  000A                     	;# 
   367  000B                     	;# 
   368  000C                     	;# 
   369  000D                     	;# 
   370  000E                     	;# 
   371  000E                     	;# 
   372  000F                     	;# 
   373  0010                     	;# 
   374  0011                     	;# 
   375  0012                     	;# 
   376  0013                     	;# 
   377  0014                     	;# 
   378  0015                     	;# 
   379  0015                     	;# 
   380  0016                     	;# 
   381  0017                     	;# 
   382  0018                     	;# 
   383  0019                     	;# 
   384  001A                     	;# 
   385  001B                     	;# 
   386  001B                     	;# 
   387  001C                     	;# 
   388  001D                     	;# 
   389  001E                     	;# 
   390  001F                     	;# 
   391  0081                     	;# 
   392  0085                     	;# 
   393  0086                     	;# 
   394  0087                     	;# 
   395  0089                     	;# 
   396  008C                     	;# 
   397  008D                     	;# 
   398  008E                     	;# 
   399  008F                     	;# 
   400  0090                     	;# 
   401  0091                     	;# 
   402  0092                     	;# 
   403  0093                     	;# 
   404  0093                     	;# 
   405  0094                     	;# 
   406  0095                     	;# 
   407  0095                     	;# 
   408  0096                     	;# 
   409  0096                     	;# 
   410  0098                     	;# 
   411  0099                     	;# 
   412  009C                     	;# 
   413  009D                     	;# 
   414  009F                     	;# 
   415  0108                     	;# 
   416  0109                     	;# 
   417  010C                     	;# 
   418  010C                     	;# 
   419  010D                     	;# 
   420  010D                     	;# 
   421  010E                     	;# 
   422  010F                     	;# 
   423  0185                     	;# 
   424  0186                     	;# 
   425  018C                     	;# 
   426  0000                     	;# 
   427  0001                     	;# 
   428  0002                     	;# 
   429  0003                     	;# 
   430  0004                     	;# 
   431  0005                     	;# 
   432  0006                     	;# 
   433  0007                     	;# 
   434  0009                     	;# 
   435  000A                     	;# 
   436  000B                     	;# 
   437  000C                     	;# 
   438  000D                     	;# 
   439  000E                     	;# 
   440  000E                     	;# 
   441  000F                     	;# 
   442  0010                     	;# 
   443  0011                     	;# 
   444  0012                     	;# 
   445  0013                     	;# 
   446  0014                     	;# 
   447  0015                     	;# 
   448  0015                     	;# 
   449  0016                     	;# 
   450  0017                     	;# 
   451  0018                     	;# 
   452  0019                     	;# 
   453  001A                     	;# 
   454  001B                     	;# 
   455  001B                     	;# 
   456  001C                     	;# 
   457  001D                     	;# 
   458  001E                     	;# 
   459  001F                     	;# 
   460  0081                     	;# 
   461  0085                     	;# 
   462  0086                     	;# 
   463  0087                     	;# 
   464  0089                     	;# 
   465  008C                     	;# 
   466  008D                     	;# 
   467  008E                     	;# 
   468  008F                     	;# 
   469  0090                     	;# 
   470  0091                     	;# 
   471  0092                     	;# 
   472  0093                     	;# 
   473  0093                     	;# 
   474  0094                     	;# 
   475  0095                     	;# 
   476  0095                     	;# 
   477  0096                     	;# 
   478  0096                     	;# 
   479  0098                     	;# 
   480  0099                     	;# 
   481  009C                     	;# 
   482  009D                     	;# 
   483  009F                     	;# 
   484  0108                     	;# 
   485  0109                     	;# 
   486  010C                     	;# 
   487  010C                     	;# 
   488  010D                     	;# 
   489  010D                     	;# 
   490  010E                     	;# 
   491  010F                     	;# 
   492  0185                     	;# 
   493  0186                     	;# 
   494  018C                     	;# 
   495  0000                     	;# 
   496  0001                     	;# 
   497  0002                     	;# 
   498  0003                     	;# 
   499  0004                     	;# 
   500  0005                     	;# 
   501  0006                     	;# 
   502  0007                     	;# 
   503  0009                     	;# 
   504  000A                     	;# 
   505  000B                     	;# 
   506  000C                     	;# 
   507  000D                     	;# 
   508  000E                     	;# 
   509  000E                     	;# 
   510  000F                     	;# 
   511  0010                     	;# 
   512  0011                     	;# 
   513  0012                     	;# 
   514  0013                     	;# 
   515  0014                     	;# 
   516  0015                     	;# 
   517  0015                     	;# 
   518  0016                     	;# 
   519  0017                     	;# 
   520  0018                     	;# 
   521  0019                     	;# 
   522  001A                     	;# 
   523  001B                     	;# 
   524  001B                     	;# 
   525  001C                     	;# 
   526  001D                     	;# 
   527  001E                     	;# 
   528  001F                     	;# 
   529  0081                     	;# 
   530  0085                     	;# 
   531  0086                     	;# 
   532  0087                     	;# 
   533  0089                     	;# 
   534  008C                     	;# 
   535  008D                     	;# 
   536  008E                     	;# 
   537  008F                     	;# 
   538  0090                     	;# 
   539  0091                     	;# 
   540  0092                     	;# 
   541  0093                     	;# 
   542  0093                     	;# 
   543  0094                     	;# 
   544  0095                     	;# 
   545  0095                     	;# 
   546  0096                     	;# 
   547  0096                     	;# 
   548  0098                     	;# 
   549  0099                     	;# 
   550  009C                     	;# 
   551  009D                     	;# 
   552  009F                     	;# 
   553  0108                     	;# 
   554  0109                     	;# 
   555  010C                     	;# 
   556  010C                     	;# 
   557  010D                     	;# 
   558  010D                     	;# 
   559  010E                     	;# 
   560  010F                     	;# 
   561  0185                     	;# 
   562  0186                     	;# 
   563  018C                     	;# 
   564  0000                     	;# 
   565  0001                     	;# 
   566  0002                     	;# 
   567  0003                     	;# 
   568  0004                     	;# 
   569  0005                     	;# 
   570  0006                     	;# 
   571  0007                     	;# 
   572  0009                     	;# 
   573  000A                     	;# 
   574  000B                     	;# 
   575  000C                     	;# 
   576  000D                     	;# 
   577  000E                     	;# 
   578  000E                     	;# 
   579  000F                     	;# 
   580  0010                     	;# 
   581  0011                     	;# 
   582  0012                     	;# 
   583  0013                     	;# 
   584  0014                     	;# 
   585  0015                     	;# 
   586  0015                     	;# 
   587  0016                     	;# 
   588  0017                     	;# 
   589  0018                     	;# 
   590  0019                     	;# 
   591  001A                     	;# 
   592  001B                     	;# 
   593  001B                     	;# 
   594  001C                     	;# 
   595  001D                     	;# 
   596  001E                     	;# 
   597  001F                     	;# 
   598  0081                     	;# 
   599  0085                     	;# 
   600  0086                     	;# 
   601  0087                     	;# 
   602  0089                     	;# 
   603  008C                     	;# 
   604  008D                     	;# 
   605  008E                     	;# 
   606  008F                     	;# 
   607  0090                     	;# 
   608  0091                     	;# 
   609  0092                     	;# 
   610  0093                     	;# 
   611  0093                     	;# 
   612  0094                     	;# 
   613  0095                     	;# 
   614  0095                     	;# 
   615  0096                     	;# 
   616  0096                     	;# 
   617  0098                     	;# 
   618  0099                     	;# 
   619  009C                     	;# 
   620  009D                     	;# 
   621  009F                     	;# 
   622  0108                     	;# 
   623  0109                     	;# 
   624  010C                     	;# 
   625  010C                     	;# 
   626  010D                     	;# 
   627  010D                     	;# 
   628  010E                     	;# 
   629  010F                     	;# 
   630  0185                     	;# 
   631  0186                     	;# 
   632  018C                     	;# 
   633  0000                     	;# 
   634  0001                     	;# 
   635  0002                     	;# 
   636  0003                     	;# 
   637  0004                     	;# 
   638  0005                     	;# 
   639  0006                     	;# 
   640  0007                     	;# 
   641  0009                     	;# 
   642  000A                     	;# 
   643  000B                     	;# 
   644  000C                     	;# 
   645  000D                     	;# 
   646  000E                     	;# 
   647  000E                     	;# 
   648  000F                     	;# 
   649  0010                     	;# 
   650  0011                     	;# 
   651  0012                     	;# 
   652  0013                     	;# 
   653  0014                     	;# 
   654  0015                     	;# 
   655  0015                     	;# 
   656  0016                     	;# 
   657  0017                     	;# 
   658  0018                     	;# 
   659  0019                     	;# 
   660  001A                     	;# 
   661  001B                     	;# 
   662  001B                     	;# 
   663  001C                     	;# 
   664  001D                     	;# 
   665  001E                     	;# 
   666  001F                     	;# 
   667  0081                     	;# 
   668  0085                     	;# 
   669  0086                     	;# 
   670  0087                     	;# 
   671  0089                     	;# 
   672  008C                     	;# 
   673  008D                     	;# 
   674  008E                     	;# 
   675  008F                     	;# 
   676  0090                     	;# 
   677  0091                     	;# 
   678  0092                     	;# 
   679  0093                     	;# 
   680  0093                     	;# 
   681  0094                     	;# 
   682  0095                     	;# 
   683  0095                     	;# 
   684  0096                     	;# 
   685  0096                     	;# 
   686  0098                     	;# 
   687  0099                     	;# 
   688  009C                     	;# 
   689  009D                     	;# 
   690  009F                     	;# 
   691  0108                     	;# 
   692  0109                     	;# 
   693  010C                     	;# 
   694  010C                     	;# 
   695  010D                     	;# 
   696  010D                     	;# 
   697  010E                     	;# 
   698  010F                     	;# 
   699  0185                     	;# 
   700  0186                     	;# 
   701  018C                     	;# 
   702  0000                     	;# 
   703  0001                     	;# 
   704  0002                     	;# 
   705  0003                     	;# 
   706  0004                     	;# 
   707  0005                     	;# 
   708  0006                     	;# 
   709  0007                     	;# 
   710  0009                     	;# 
   711  000A                     	;# 
   712  000B                     	;# 
   713  000C                     	;# 
   714  000D                     	;# 
   715  000E                     	;# 
   716  000E                     	;# 
   717  000F                     	;# 
   718  0010                     	;# 
   719  0011                     	;# 
   720  0012                     	;# 
   721  0013                     	;# 
   722  0014                     	;# 
   723  0015                     	;# 
   724  0015                     	;# 
   725  0016                     	;# 
   726  0017                     	;# 
   727  0018                     	;# 
   728  0019                     	;# 
   729  001A                     	;# 
   730  001B                     	;# 
   731  001B                     	;# 
   732  001C                     	;# 
   733  001D                     	;# 
   734  001E                     	;# 
   735  001F                     	;# 
   736  0081                     	;# 
   737  0085                     	;# 
   738  0086                     	;# 
   739  0087                     	;# 
   740  0089                     	;# 
   741  008C                     	;# 
   742  008D                     	;# 
   743  008E                     	;# 
   744  008F                     	;# 
   745  0090                     	;# 
   746  0091                     	;# 
   747  0092                     	;# 
   748  0093                     	;# 
   749  0093                     	;# 
   750  0094                     	;# 
   751  0095                     	;# 
   752  0095                     	;# 
   753  0096                     	;# 
   754  0096                     	;# 
   755  0098                     	;# 
   756  0099                     	;# 
   757  009C                     	;# 
   758  009D                     	;# 
   759  009F                     	;# 
   760  0108                     	;# 
   761  0109                     	;# 
   762  010C                     	;# 
   763  010C                     	;# 
   764  010D                     	;# 
   765  010D                     	;# 
   766  010E                     	;# 
   767  010F                     	;# 
   768  0185                     	;# 
   769  0186                     	;# 
   770  018C                     	;# 
   771  0000                     	;# 
   772  0001                     	;# 
   773  0002                     	;# 
   774  0003                     	;# 
   775  0004                     	;# 
   776  0005                     	;# 
   777  0006                     	;# 
   778  0007                     	;# 
   779  0009                     	;# 
   780  000A                     	;# 
   781  000B                     	;# 
   782  000C                     	;# 
   783  000D                     	;# 
   784  000E                     	;# 
   785  000E                     	;# 
   786  000F                     	;# 
   787  0010                     	;# 
   788  0011                     	;# 
   789  0012                     	;# 
   790  0013                     	;# 
   791  0014                     	;# 
   792  0015                     	;# 
   793  0015                     	;# 
   794  0016                     	;# 
   795  0017                     	;# 
   796  0018                     	;# 
   797  0019                     	;# 
   798  001A                     	;# 
   799  001B                     	;# 
   800  001B                     	;# 
   801  001C                     	;# 
   802  001D                     	;# 
   803  001E                     	;# 
   804  001F                     	;# 
   805  0081                     	;# 
   806  0085                     	;# 
   807  0086                     	;# 
   808  0087                     	;# 
   809  0089                     	;# 
   810  008C                     	;# 
   811  008D                     	;# 
   812  008E                     	;# 
   813  008F                     	;# 
   814  0090                     	;# 
   815  0091                     	;# 
   816  0092                     	;# 
   817  0093                     	;# 
   818  0093                     	;# 
   819  0094                     	;# 
   820  0095                     	;# 
   821  0095                     	;# 
   822  0096                     	;# 
   823  0096                     	;# 
   824  0098                     	;# 
   825  0099                     	;# 
   826  009C                     	;# 
   827  009D                     	;# 
   828  009F                     	;# 
   829  0108                     	;# 
   830  0109                     	;# 
   831  010C                     	;# 
   832  010C                     	;# 
   833  010D                     	;# 
   834  010D                     	;# 
   835  010E                     	;# 
   836  010F                     	;# 
   837  0185                     	;# 
   838  0186                     	;# 
   839  018C                     	;# 
   840  0000                     	;# 
   841  0001                     	;# 
   842  0002                     	;# 
   843  0003                     	;# 
   844  0004                     	;# 
   845  0005                     	;# 
   846  0006                     	;# 
   847  0007                     	;# 
   848  0009                     	;# 
   849  000A                     	;# 
   850  000B                     	;# 
   851  000C                     	;# 
   852  000D                     	;# 
   853  000E                     	;# 
   854  000E                     	;# 
   855  000F                     	;# 
   856  0010                     	;# 
   857  0011                     	;# 
   858  0012                     	;# 
   859  0013                     	;# 
   860  0014                     	;# 
   861  0015                     	;# 
   862  0015                     	;# 
   863  0016                     	;# 
   864  0017                     	;# 
   865  0018                     	;# 
   866  0019                     	;# 
   867  001A                     	;# 
   868  001B                     	;# 
   869  001B                     	;# 
   870  001C                     	;# 
   871  001D                     	;# 
   872  001E                     	;# 
   873  001F                     	;# 
   874  0081                     	;# 
   875  0085                     	;# 
   876  0086                     	;# 
   877  0087                     	;# 
   878  0089                     	;# 
   879  008C                     	;# 
   880  008D                     	;# 
   881  008E                     	;# 
   882  008F                     	;# 
   883  0090                     	;# 
   884  0091                     	;# 
   885  0092                     	;# 
   886  0093                     	;# 
   887  0093                     	;# 
   888  0094                     	;# 
   889  0095                     	;# 
   890  0095                     	;# 
   891  0096                     	;# 
   892  0096                     	;# 
   893  0098                     	;# 
   894  0099                     	;# 
   895  009C                     	;# 
   896  009D                     	;# 
   897  009F                     	;# 
   898  0108                     	;# 
   899  0109                     	;# 
   900  010C                     	;# 
   901  010C                     	;# 
   902  010D                     	;# 
   903  010D                     	;# 
   904  010E                     	;# 
   905  010F                     	;# 
   906  0185                     	;# 
   907  0186                     	;# 
   908  018C                     	;# 
   909  0000                     	;# 
   910  0001                     	;# 
   911  0002                     	;# 
   912  0003                     	;# 
   913  0004                     	;# 
   914  0005                     	;# 
   915  0006                     	;# 
   916  0007                     	;# 
   917  0009                     	;# 
   918  000A                     	;# 
   919  000B                     	;# 
   920  000C                     	;# 
   921  000D                     	;# 
   922  000E                     	;# 
   923  000E                     	;# 
   924  000F                     	;# 
   925  0010                     	;# 
   926  0011                     	;# 
   927  0012                     	;# 
   928  0013                     	;# 
   929  0014                     	;# 
   930  0015                     	;# 
   931  0015                     	;# 
   932  0016                     	;# 
   933  0017                     	;# 
   934  0018                     	;# 
   935  0019                     	;# 
   936  001A                     	;# 
   937  001B                     	;# 
   938  001B                     	;# 
   939  001C                     	;# 
   940  001D                     	;# 
   941  001E                     	;# 
   942  001F                     	;# 
   943  0081                     	;# 
   944  0085                     	;# 
   945  0086                     	;# 
   946  0087                     	;# 
   947  0089                     	;# 
   948  008C                     	;# 
   949  008D                     	;# 
   950  008E                     	;# 
   951  008F                     	;# 
   952  0090                     	;# 
   953  0091                     	;# 
   954  0092                     	;# 
   955  0093                     	;# 
   956  0093                     	;# 
   957  0094                     	;# 
   958  0095                     	;# 
   959  0095                     	;# 
   960  0096                     	;# 
   961  0096                     	;# 
   962  0098                     	;# 
   963  0099                     	;# 
   964  009C                     	;# 
   965  009D                     	;# 
   966  009F                     	;# 
   967  0108                     	;# 
   968  0109                     	;# 
   969  010C                     	;# 
   970  010C                     	;# 
   971  010D                     	;# 
   972  010D                     	;# 
   973  010E                     	;# 
   974  010F                     	;# 
   975  0185                     	;# 
   976  0186                     	;# 
   977  018C                     	;# 
   978  0000                     	;# 
   979  0001                     	;# 
   980  0002                     	;# 
   981  0003                     	;# 
   982  0004                     	;# 
   983  0005                     	;# 
   984  0006                     	;# 
   985  0007                     	;# 
   986  0009                     	;# 
   987  000A                     	;# 
   988  000B                     	;# 
   989  000C                     	;# 
   990  000D                     	;# 
   991  000E                     	;# 
   992  000E                     	;# 
   993  000F                     	;# 
   994  0010                     	;# 
   995  0011                     	;# 
   996  0012                     	;# 
   997  0013                     	;# 
   998  0014                     	;# 
   999  0015                     	;# 
  1000  0015                     	;# 
  1001  0016                     	;# 
  1002  0017                     	;# 
  1003  0018                     	;# 
  1004  0019                     	;# 
  1005  001A                     	;# 
  1006  001B                     	;# 
  1007  001B                     	;# 
  1008  001C                     	;# 
  1009  001D                     	;# 
  1010  001E                     	;# 
  1011  001F                     	;# 
  1012  0081                     	;# 
  1013  0085                     	;# 
  1014  0086                     	;# 
  1015  0087                     	;# 
  1016  0089                     	;# 
  1017  008C                     	;# 
  1018  008D                     	;# 
  1019  008E                     	;# 
  1020  008F                     	;# 
  1021  0090                     	;# 
  1022  0091                     	;# 
  1023  0092                     	;# 
  1024  0093                     	;# 
  1025  0093                     	;# 
  1026  0094                     	;# 
  1027  0095                     	;# 
  1028  0095                     	;# 
  1029  0096                     	;# 
  1030  0096                     	;# 
  1031  0098                     	;# 
  1032  0099                     	;# 
  1033  009C                     	;# 
  1034  009D                     	;# 
  1035  009F                     	;# 
  1036  0108                     	;# 
  1037  0109                     	;# 
  1038  010C                     	;# 
  1039  010C                     	;# 
  1040  010D                     	;# 
  1041  010D                     	;# 
  1042  010E                     	;# 
  1043  010F                     	;# 
  1044  0185                     	;# 
  1045  0186                     	;# 
  1046  018C                     	;# 
  1047  0000                     	;# 
  1048  0001                     	;# 
  1049  0002                     	;# 
  1050  0003                     	;# 
  1051  0004                     	;# 
  1052  0005                     	;# 
  1053  0006                     	;# 
  1054  0007                     	;# 
  1055  0009                     	;# 
  1056  000A                     	;# 
  1057  000B                     	;# 
  1058  000C                     	;# 
  1059  000D                     	;# 
  1060  000E                     	;# 
  1061  000E                     	;# 
  1062  000F                     	;# 
  1063  0010                     	;# 
  1064  0011                     	;# 
  1065  0012                     	;# 
  1066  0013                     	;# 
  1067  0014                     	;# 
  1068  0015                     	;# 
  1069  0015                     	;# 
  1070  0016                     	;# 
  1071  0017                     	;# 
  1072  0018                     	;# 
  1073  0019                     	;# 
  1074  001A                     	;# 
  1075  001B                     	;# 
  1076  001B                     	;# 
  1077  001C                     	;# 
  1078  001D                     	;# 
  1079  001E                     	;# 
  1080  001F                     	;# 
  1081  0081                     	;# 
  1082  0085                     	;# 
  1083  0086                     	;# 
  1084  0087                     	;# 
  1085  0089                     	;# 
  1086  008C                     	;# 
  1087  008D                     	;# 
  1088  008E                     	;# 
  1089  008F                     	;# 
  1090  0090                     	;# 
  1091  0091                     	;# 
  1092  0092                     	;# 
  1093  0093                     	;# 
  1094  0093                     	;# 
  1095  0094                     	;# 
  1096  0095                     	;# 
  1097  0095                     	;# 
  1098  0096                     	;# 
  1099  0096                     	;# 
  1100  0098                     	;# 
  1101  0099                     	;# 
  1102  009C                     	;# 
  1103  009D                     	;# 
  1104  009F                     	;# 
  1105  0108                     	;# 
  1106  0109                     	;# 
  1107  010C                     	;# 
  1108  010C                     	;# 
  1109  010D                     	;# 
  1110  010D                     	;# 
  1111  010E                     	;# 
  1112  010F                     	;# 
  1113  0185                     	;# 
  1114  0186                     	;# 
  1115  018C                     	;# 
  1116  0000                     	;# 
  1117  0001                     	;# 
  1118  0002                     	;# 
  1119  0003                     	;# 
  1120  0004                     	;# 
  1121  0005                     	;# 
  1122  0006                     	;# 
  1123  0007                     	;# 
  1124  0009                     	;# 
  1125  000A                     	;# 
  1126  000B                     	;# 
  1127  000C                     	;# 
  1128  000D                     	;# 
  1129  000E                     	;# 
  1130  000E                     	;# 
  1131  000F                     	;# 
  1132  0010                     	;# 
  1133  0011                     	;# 
  1134  0012                     	;# 
  1135  0013                     	;# 
  1136  0014                     	;# 
  1137  0015                     	;# 
  1138  0015                     	;# 
  1139  0016                     	;# 
  1140  0017                     	;# 
  1141  0018                     	;# 
  1142  0019                     	;# 
  1143  001A                     	;# 
  1144  001B                     	;# 
  1145  001B                     	;# 
  1146  001C                     	;# 
  1147  001D                     	;# 
  1148  001E                     	;# 
  1149  001F                     	;# 
  1150  0081                     	;# 
  1151  0085                     	;# 
  1152  0086                     	;# 
  1153  0087                     	;# 
  1154  0089                     	;# 
  1155  008C                     	;# 
  1156  008D                     	;# 
  1157  008E                     	;# 
  1158  008F                     	;# 
  1159  0090                     	;# 
  1160  0091                     	;# 
  1161  0092                     	;# 
  1162  0093                     	;# 
  1163  0093                     	;# 
  1164  0094                     	;# 
  1165  0095                     	;# 
  1166  0095                     	;# 
  1167  0096                     	;# 
  1168  0096                     	;# 
  1169  0098                     	;# 
  1170  0099                     	;# 
  1171  009C                     	;# 
  1172  009D                     	;# 
  1173  009F                     	;# 
  1174  0108                     	;# 
  1175  0109                     	;# 
  1176  010C                     	;# 
  1177  010C                     	;# 
  1178  010D                     	;# 
  1179  010D                     	;# 
  1180  010E                     	;# 
  1181  010F                     	;# 
  1182  0185                     	;# 
  1183  0186                     	;# 
  1184  018C                     	;# 
  1185  0000                     	;# 
  1186  0001                     	;# 
  1187  0002                     	;# 
  1188  0003                     	;# 
  1189  0004                     	;# 
  1190  0005                     	;# 
  1191  0006                     	;# 
  1192  0007                     	;# 
  1193  0009                     	;# 
  1194  000A                     	;# 
  1195  000B                     	;# 
  1196  000C                     	;# 
  1197  000D                     	;# 
  1198  000E                     	;# 
  1199  000E                     	;# 
  1200  000F                     	;# 
  1201  0010                     	;# 
  1202  0011                     	;# 
  1203  0012                     	;# 
  1204  0013                     	;# 
  1205  0014                     	;# 
  1206  0015                     	;# 
  1207  0015                     	;# 
  1208  0016                     	;# 
  1209  0017                     	;# 
  1210  0018                     	;# 
  1211  0019                     	;# 
  1212  001A                     	;# 
  1213  001B                     	;# 
  1214  001B                     	;# 
  1215  001C                     	;# 
  1216  001D                     	;# 
  1217  001E                     	;# 
  1218  001F                     	;# 
  1219  0081                     	;# 
  1220  0085                     	;# 
  1221  0086                     	;# 
  1222  0087                     	;# 
  1223  0089                     	;# 
  1224  008C                     	;# 
  1225  008D                     	;# 
  1226  008E                     	;# 
  1227  008F                     	;# 
  1228  0090                     	;# 
  1229  0091                     	;# 
  1230  0092                     	;# 
  1231  0093                     	;# 
  1232  0093                     	;# 
  1233  0094                     	;# 
  1234  0095                     	;# 
  1235  0095                     	;# 
  1236  0096                     	;# 
  1237  0096                     	;# 
  1238  0098                     	;# 
  1239  0099                     	;# 
  1240  009C                     	;# 
  1241  009D                     	;# 
  1242  009F                     	;# 
  1243  0108                     	;# 
  1244  0109                     	;# 
  1245  010C                     	;# 
  1246  010C                     	;# 
  1247  010D                     	;# 
  1248  010D                     	;# 
  1249  010E                     	;# 
  1250  010F                     	;# 
  1251  0185                     	;# 
  1252  0186                     	;# 
  1253  018C                     	;# 
  1254  0000                     	;# 
  1255  0001                     	;# 
  1256  0002                     	;# 
  1257  0003                     	;# 
  1258  0004                     	;# 
  1259  0005                     	;# 
  1260  0006                     	;# 
  1261  0007                     	;# 
  1262  0009                     	;# 
  1263  000A                     	;# 
  1264  000B                     	;# 
  1265  000C                     	;# 
  1266  000D                     	;# 
  1267  000E                     	;# 
  1268  000E                     	;# 
  1269  000F                     	;# 
  1270  0010                     	;# 
  1271  0011                     	;# 
  1272  0012                     	;# 
  1273  0013                     	;# 
  1274  0014                     	;# 
  1275  0015                     	;# 
  1276  0015                     	;# 
  1277  0016                     	;# 
  1278  0017                     	;# 
  1279  0018                     	;# 
  1280  0019                     	;# 
  1281  001A                     	;# 
  1282  001B                     	;# 
  1283  001B                     	;# 
  1284  001C                     	;# 
  1285  001D                     	;# 
  1286  001E                     	;# 
  1287  001F                     	;# 
  1288  0081                     	;# 
  1289  0085                     	;# 
  1290  0086                     	;# 
  1291  0087                     	;# 
  1292  0089                     	;# 
  1293  008C                     	;# 
  1294  008D                     	;# 
  1295  008E                     	;# 
  1296  008F                     	;# 
  1297  0090                     	;# 
  1298  0091                     	;# 
  1299  0092                     	;# 
  1300  0093                     	;# 
  1301  0093                     	;# 
  1302  0094                     	;# 
  1303  0095                     	;# 
  1304  0095                     	;# 
  1305  0096                     	;# 
  1306  0096                     	;# 
  1307  0098                     	;# 
  1308  0099                     	;# 
  1309  009C                     	;# 
  1310  009D                     	;# 
  1311  009F                     	;# 
  1312  0108                     	;# 
  1313  0109                     	;# 
  1314  010C                     	;# 
  1315  010C                     	;# 
  1316  010D                     	;# 
  1317  010D                     	;# 
  1318  010E                     	;# 
  1319  010F                     	;# 
  1320  0185                     	;# 
  1321  0186                     	;# 
  1322  018C                     	;# 
  1323  001F                     _ADCON0	set	31
  1324  001E                     _ADRES	set	30
  1325  0005                     _PORTA	set	5
  1326  0006                     _PORTB	set	6
  1327  0007                     _PORTC	set	7
  1328  0010                     _T1CON	set	16
  1329  000F                     _TMR1H	set	15
  1330  000E                     _TMR1L	set	14
  1331  005F                     _GIE	set	95
  1332  00F9                     _GO_nDONE	set	249
  1333  005E                     _PEIE	set	94
  1334  002C                     _RA4	set	44
  1335  002D                     _RA5	set	45
  1336  0032                     _RB2	set	50
  1337  0033                     _RB3	set	51
  1338  0034                     _RB4	set	52
  1339  0035                     _RB5	set	53
  1340  0060                     _TMR1IF	set	96
  1341  009F                     _ADCON1	set	159
  1342  009D                     _FVRCON	set	157
  1343  0090                     _OSCCON	set	144
  1344  0085                     _TRISA	set	133
  1345  0086                     _TRISB	set	134
  1346  0087                     _TRISC	set	135
  1347  0095                     _WPUB	set	149
  1348  0408                     _PS0	set	1032
  1349  0409                     _PS1	set	1033
  1350  040A                     _PS2	set	1034
  1351  040B                     _PSA	set	1035
  1352  0460                     _TMR1IE	set	1120
  1353  0185                     _ANSELA	set	389
  1354  0186                     _ANSELB	set	390
  1355                           
  1356                           	psect	text0
  1357  0000                     __ptext0:	
  1358                           ; #config settings
  1359                           
  1360                           
  1361                           ;psect for function _TMR1_ISR
  1362  0000                     
  1363                           	psect	cinit
  1364  0013                     start_initialization:	
  1365  0013                     __initialization:	
  1366                           
  1367                           ; Clear objects allocated to COMMON
  1368  0013  01F6               	clrf	__pbssCOMMON& (0+127)
  1369  0014  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1370  0015  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1371  0016  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  1372                           
  1373                           ; Clear objects allocated to BANK0
  1374  0017  1383               	bcf	3,7	;select IRP bank0
  1375  0018  3020               	movlw	low __pbssBANK0
  1376  0019  0084               	movwf	4
  1377  001A  3051               	movlw	low (__pbssBANK0+49)
  1378  001B  158A  22E0  118A   	fcall	clear_ram0
  1379                           
  1380                           ; Clear objects allocated to BANK1
  1381  001E  30A0               	movlw	low __pbssBANK1
  1382  001F  0084               	movwf	4
  1383  0020  30E6               	movlw	low (__pbssBANK1+70)
  1384  0021  158A  22E0         	fcall	clear_ram0
  1385  0023                     end_of_initialization:	
  1386                           ;End of C runtime variable initialization code
  1387                           
  1388  0023                     __end_of__initialization:	
  1389  0023  0183               	clrf	3
  1390  0024  158A  2F29         	ljmp	_main	;jump to C main() function
  1391                           
  1392                           	psect	bssCOMMON
  1393  0076                     __pbssCOMMON:	
  1394  0076                     _LED:	
  1395  0076                     	ds	1
  1396  0077                     _Light:	
  1397  0077                     	ds	1
  1398  0078                     _Lights:	
  1399  0078                     	ds	1
  1400  0079                     _LightsControl:	
  1401  0079                     	ds	1
  1402                           
  1403                           	psect	bssBANK0
  1404  0020                     __pbssBANK0:	
  1405  0020                     _SYSC:	
  1406  0020                     	ds	5
  1407  0025                     _myMain:	
  1408  0025                     	ds	5
  1409  002A                     _PIRLED:	
  1410  002A                     	ds	4
  1411  002E                     __CDS:	
  1412  002E                     	ds	4
  1413  0032                     _Timer1:	
  1414  0032                     	ds	3
  1415  0035                     _WDT:	
  1416  0035                     	ds	2
  1417  0037                     _Cmd:	
  1418  0037                     	ds	1
  1419  0038                     _SwDetect:	
  1420  0038                     	ds	1
  1421  0039                     _Temp:	
  1422  0039                     	ds	7
  1423  0040                     _Lights1:	
  1424  0040                     	ds	5
  1425  0045                     _VarErrLED:	
  1426  0045                     	ds	4
  1427  0049                     _VarLED1:	
  1428  0049                     	ds	4
  1429  004D                     _VarLED2:	
  1430  004D                     	ds	4
  1431                           
  1432                           	psect	bssBANK1
  1433  00A0                     __pbssBANK1:	
  1434  00A0                     __PIR:	
  1435  00A0                     	ds	42
  1436  00CA                     _Load:	
  1437  00CA                     	ds	28
  1438                           
  1439                           	psect	clrtext
  1440  0AE0                     clear_ram0:	
  1441                           ;	Called with FSR containing the base address, and
  1442                           ;	W with the last address+1
  1443                           
  1444  0AE0  0064               	clrwdt	;clear the watchdog before getting into this loop
  1445  0AE1                     clrloop0:	
  1446  0AE1  0180               	clrf	0	;clear RAM location pointed to by FSR
  1447  0AE2  0A84               	incf	4,f	;increment pointer
  1448  0AE3  0604               	xorwf	4,w	;XOR with final address
  1449  0AE4  1903               	btfsc	3,2	;have we reached the end yet?
  1450  0AE5  3400               	retlw	0	;all done for this memory range, return
  1451  0AE6  0604               	xorwf	4,w	;XOR again to restore value
  1452  0AE7  2AE1               	goto	clrloop0	;do the next byte
  1453                           
  1454                           	psect	cstackCOMMON
  1455  0070                     __pcstackCOMMON:	
  1456  0070                     ?_setLED_Initialization:	
  1457  0070                     ?_setPIRLED_Main:	
  1458                           ; 0 bytes @ 0x0
  1459                           
  1460  0070                     ?_Fosc_Set:	
  1461                           ; 0 bytes @ 0x0
  1462                           
  1463  0070                     ?_IO_Set:	
  1464                           ; 0 bytes @ 0x0
  1465                           
  1466  0070                     ?_TMR1_Set:	
  1467                           ; 0 bytes @ 0x0
  1468                           
  1469  0070                     ?_ADC_Set:	
  1470                           ; 0 bytes @ 0x0
  1471                           
  1472  0070                     ?_WDT_Set:	
  1473                           ; 0 bytes @ 0x0
  1474                           
  1475  0070                     ?_TMR1_ISR:	
  1476                           ; 0 bytes @ 0x0
  1477                           
  1478  0070                     ??_TMR1_ISR:	
  1479                           ; 0 bytes @ 0x0
  1480                           
  1481  0070                     ?_Timeout_Counter:	
  1482                           ; 0 bytes @ 0x0
  1483                           
  1484  0070                     ?_set_TimeoutCleared:	
  1485                           ; 0 bytes @ 0x0
  1486                           
  1487  0070                     ?_WDT_Clearing:	
  1488                           ; 0 bytes @ 0x0
  1489                           
  1490  0070                     ?_myMain_Initialization:	
  1491                           ; 0 bytes @ 0x0
  1492                           
  1493  0070                     ?_SYSC_Initialization:	
  1494                           ; 0 bytes @ 0x0
  1495                           
  1496  0070                     ?_Temp_Initialization:	
  1497                           ; 0 bytes @ 0x0
  1498                           
  1499  0070                     ?_Load_Initialization:	
  1500                           ; 0 bytes @ 0x0
  1501                           
  1502  0070                     ?_Lights_Initialization:	
  1503                           ; 0 bytes @ 0x0
  1504                           
  1505  0070                     ?_PIR_Initialization:	
  1506                           ; 0 bytes @ 0x0
  1507                           
  1508  0070                     ?_DetectSYSC_Signal:	
  1509                           ; 0 bytes @ 0x0
  1510                           
  1511  0070                     ?_getLoad_AD:	
  1512                           ; 0 bytes @ 0x0
  1513                           
  1514  0070                     ?_getTemp_AD:	
  1515                           ; 0 bytes @ 0x0
  1516                           
  1517  0070                     ?_my_MainTimer:	
  1518                           ; 0 bytes @ 0x0
  1519                           
  1520  0070                     ?_SYSC_Main:	
  1521                           ; 0 bytes @ 0x0
  1522                           
  1523  0070                     ?_Temp_Main:	
  1524                           ; 0 bytes @ 0x0
  1525                           
  1526  0070                     ?_Load_Main:	
  1527                           ; 0 bytes @ 0x0
  1528                           
  1529  0070                     ?_Lights_Main:	
  1530                           ; 0 bytes @ 0x0
  1531                           
  1532  0070                     ?_PIR_Main:	
  1533                           ; 0 bytes @ 0x0
  1534                           
  1535  0070                     ?_Exception_Main:	
  1536                           ; 0 bytes @ 0x0
  1537                           
  1538  0070                     ?_setLights_SwOn:	
  1539                           ; 0 bytes @ 0x0
  1540                           
  1541  0070                     ?_setLights_SwOff:	
  1542                           ; 0 bytes @ 0x0
  1543                           
  1544  0070                     ?_setLoad_AH_AL_Restore:	
  1545                           ; 0 bytes @ 0x0
  1546                           
  1547  0070                     ?_setTemp_Initialization:	
  1548                           ; 0 bytes @ 0x0
  1549                           
  1550  0070                     ?_setTemp_Main:	
  1551                           ; 0 bytes @ 0x0
  1552                           
  1553  0070                     ?_setSYSC_Initialization:	
  1554                           ; 0 bytes @ 0x0
  1555                           
  1556  0070                     ?_setSYSC_Main:	
  1557                           ; 0 bytes @ 0x0
  1558                           
  1559  0070                     ?_setLights_Initialization:	
  1560                           ; 0 bytes @ 0x0
  1561                           
  1562  0070                     ?_setLights_Main:	
  1563                           ; 0 bytes @ 0x0
  1564                           
  1565  0070                     ?_Lights_Control:	
  1566                           ; 0 bytes @ 0x0
  1567                           
  1568  0070                     ?_setLights_Line:	
  1569                           ; 0 bytes @ 0x0
  1570                           
  1571  0070                     ?_CDS_Initialization:	
  1572                           ; 0 bytes @ 0x0
  1573                           
  1574  0070                     ?_CDS_Main:	
  1575                           ; 0 bytes @ 0x0
  1576                           
  1577  0070                     ?_LedPointSelect:	
  1578                           ; 0 bytes @ 0x0
  1579                           
  1580  0070                     ?_LED_Initialization:	
  1581                           ; 0 bytes @ 0x0
  1582                           
  1583  0070                     ?_LED_Main:	
  1584                           ; 0 bytes @ 0x0
  1585                           
  1586  0070                     ?_Mcu_Initialization:	
  1587                           ; 0 bytes @ 0x0
  1588                           
  1589  0070                     ?_ISR:	
  1590                           ; 0 bytes @ 0x0
  1591                           
  1592  0070                     ??_ISR:	
  1593                           ; 0 bytes @ 0x0
  1594                           
  1595  0070                     ?_WDT_Main:	
  1596                           ; 0 bytes @ 0x0
  1597                           
  1598  0070                     ?_LightsPointSelect:	
  1599                           ; 0 bytes @ 0x0
  1600                           
  1601  0070                     ?_getLights_Status:	
  1602                           ; 0 bytes @ 0x0
  1603                           
  1604  0070                     ?_getAll_Lights_Line:	
  1605                           ; 1 bytes @ 0x0
  1606                           
  1607  0070                     ?_getLight_LoadGO:	
  1608                           ; 1 bytes @ 0x0
  1609                           
  1610  0070                     ?_getLight_Load_Status:	
  1611                           ; 1 bytes @ 0x0
  1612                           
  1613  0070                     ?_getLights_Allow_Condition:	
  1614                           ; 1 bytes @ 0x0
  1615                           
  1616  0070                     ?_getCDS_Status:	
  1617                           ; 1 bytes @ 0x0
  1618                           
  1619  0070                     ?_getMain_All_LightsStatus:	
  1620                           ; 1 bytes @ 0x0
  1621                           
  1622  0070                     ?_getMain_All_Error_Status:	
  1623                           ; 1 bytes @ 0x0
  1624                           
  1625  0070                     ?_getMain_Lights_Count:	
  1626                           ; 1 bytes @ 0x0
  1627                           
  1628  0070                     ?_getLoad_OK:	
  1629                           ; 1 bytes @ 0x0
  1630                           
  1631  0070                     getLights_Allow_Condition@lights:	
  1632                           ; 1 bytes @ 0x0
  1633                           
  1634                           
  1635                           ; 1 bytes @ 0x0
  1636  0070                     	ds	4
  1637  0074                     ??_Fosc_Set:	
  1638  0074                     ??_IO_Set:	
  1639                           ; 0 bytes @ 0x4
  1640                           
  1641  0074                     ??_TMR1_Set:	
  1642                           ; 0 bytes @ 0x4
  1643                           
  1644  0074                     ??_ADC_Set:	
  1645                           ; 0 bytes @ 0x4
  1646                           
  1647  0074                     ??_WDT_Set:	
  1648                           ; 0 bytes @ 0x4
  1649                           
  1650  0074                     ??_Timeout_Counter:	
  1651                           ; 0 bytes @ 0x4
  1652                           
  1653  0074                     ??_set_TimeoutCleared:	
  1654                           ; 0 bytes @ 0x4
  1655                           
  1656  0074                     ??_WDT_Clearing:	
  1657                           ; 0 bytes @ 0x4
  1658                           
  1659  0074                     ??_myMain_Initialization:	
  1660                           ; 0 bytes @ 0x4
  1661                           
  1662  0074                     ??_SYSC_Initialization:	
  1663                           ; 0 bytes @ 0x4
  1664                           
  1665  0074                     ??_Temp_Initialization:	
  1666                           ; 0 bytes @ 0x4
  1667                           
  1668  0074                     ??_PIR_Initialization:	
  1669                           ; 0 bytes @ 0x4
  1670                           
  1671  0074                     ??_DetectSYSC_Signal:	
  1672                           ; 0 bytes @ 0x4
  1673                           
  1674  0074                     ??_my_MainTimer:	
  1675                           ; 0 bytes @ 0x4
  1676                           
  1677  0074                     ??_getAll_Lights_Line:	
  1678                           ; 0 bytes @ 0x4
  1679                           
  1680  0074                     ??_setLoad_AH_AL_Restore:	
  1681                           ; 0 bytes @ 0x4
  1682                           
  1683  0074                     ??_getLight_LoadGO:	
  1684                           ; 0 bytes @ 0x4
  1685                           
  1686  0074                     ??_getLight_Load_Status:	
  1687                           ; 0 bytes @ 0x4
  1688                           
  1689  0074                     ??_setTemp_Initialization:	
  1690                           ; 0 bytes @ 0x4
  1691                           
  1692  0074                     ??_setSYSC_Initialization:	
  1693                           ; 0 bytes @ 0x4
  1694                           
  1695  0074                     ??_setLights_Line:	
  1696                           ; 0 bytes @ 0x4
  1697                           
  1698  0074                     ??_CDS_Initialization:	
  1699                           ; 0 bytes @ 0x4
  1700                           
  1701  0074                     ??_getCDS_Status:	
  1702                           ; 0 bytes @ 0x4
  1703                           
  1704  0074                     ??_LedPointSelect:	
  1705                           ; 0 bytes @ 0x4
  1706                           
  1707  0074                     ??_WDT_Main:	
  1708                           ; 0 bytes @ 0x4
  1709                           
  1710  0074                     ??_getMain_All_LightsStatus:	
  1711                           ; 0 bytes @ 0x4
  1712                           
  1713  0074                     ??_getMain_All_Error_Status:	
  1714                           ; 0 bytes @ 0x4
  1715                           
  1716  0074                     ??_getMain_Lights_Count:	
  1717                           ; 0 bytes @ 0x4
  1718                           
  1719  0074                     ??_getLoad_OK:	
  1720                           ; 0 bytes @ 0x4
  1721                           
  1722  0074                     ??_LightsPointSelect:	
  1723                           ; 0 bytes @ 0x4
  1724                           
  1725  0074                     ??___wmul:	
  1726                           ; 0 bytes @ 0x4
  1727                           
  1728  0074                     ??___awdiv:	
  1729                           ; 0 bytes @ 0x4
  1730                           
  1731  0074                     ??___lwdiv:	
  1732                           ; 0 bytes @ 0x4
  1733                           
  1734  0074                     ?_getAD:	
  1735                           ; 0 bytes @ 0x4
  1736                           
  1737  0074                     getCDS_Status@status:	
  1738                           ; 1 bytes @ 0x4
  1739                           
  1740  0074                     getAD@adcon1:	
  1741                           ; 1 bytes @ 0x4
  1742                           
  1743  0074                     getMain_All_LightsStatus@status:	
  1744                           ; 1 bytes @ 0x4
  1745                           
  1746  0074                     getMain_Lights_Count@count:	
  1747                           ; 1 bytes @ 0x4
  1748                           
  1749  0074                     getLoad_OK@ok:	
  1750                           ; 1 bytes @ 0x4
  1751                           
  1752  0074                     setLights_Line@lights:	
  1753                           ; 1 bytes @ 0x4
  1754                           
  1755  0074                     getAll_Lights_Line@line:	
  1756                           ; 1 bytes @ 0x4
  1757                           
  1758  0074                     getLight_LoadGO@loadgo:	
  1759                           ; 1 bytes @ 0x4
  1760                           
  1761  0074                     getLight_Load_Status@loadstatus:	
  1762                           ; 1 bytes @ 0x4
  1763                           
  1764  0074                     ___wmul@product:	
  1765                           ; 1 bytes @ 0x4
  1766                           
  1767                           
  1768                           ; 2 bytes @ 0x4
  1769  0074                     	ds	1
  1770  0075                     ??_getAD:	
  1771  0075                     ??_SYSC_Main:	
  1772                           ; 0 bytes @ 0x5
  1773                           
  1774  0075                     ??_setTemp_Main:	
  1775                           ; 0 bytes @ 0x5
  1776                           
  1777  0075                     ??_setSYSC_Main:	
  1778                           ; 0 bytes @ 0x5
  1779                           
  1780  0075                     ??_getLights_Allow_Condition:	
  1781                           ; 0 bytes @ 0x5
  1782                           
  1783  0075                     ??_Mcu_Initialization:	
  1784                           ; 0 bytes @ 0x5
  1785                           
  1786  0075                     LedPointSelect@led:	
  1787                           ; 0 bytes @ 0x5
  1788                           
  1789  0075                     getAD@adcon0:	
  1790                           ; 1 bytes @ 0x5
  1791                           
  1792  0075                     getMain_Lights_Count@status1:	
  1793                           ; 1 bytes @ 0x5
  1794                           
  1795  0075                     setLoad_AH_AL_Restore@i:	
  1796                           ; 1 bytes @ 0x5
  1797                           
  1798  0075                     LightsPointSelect@lights:	
  1799                           ; 1 bytes @ 0x5
  1800                           
  1801                           
  1802                           ; 1 bytes @ 0x5
  1803  0075                     	ds	1
  1804  0076                     ??_setLED_Initialization:	
  1805  0076                     ??_setLED:	
  1806                           ; 0 bytes @ 0x6
  1807                           
  1808  0076                     ??_Load_Initialization:	
  1809                           ; 0 bytes @ 0x6
  1810                           
  1811  0076                     ??_Lights_Initialization:	
  1812                           ; 0 bytes @ 0x6
  1813                           
  1814  0076                     ??_Temp_Main:	
  1815                           ; 0 bytes @ 0x6
  1816                           
  1817  0076                     ??_Lights_Main:	
  1818                           ; 0 bytes @ 0x6
  1819                           
  1820  0076                     ??_getLights_Status:	
  1821                           ; 0 bytes @ 0x6
  1822                           
  1823  0076                     ??_setLights_SwOn:	
  1824                           ; 0 bytes @ 0x6
  1825                           
  1826  0076                     ??_setLights_SwOff:	
  1827                           ; 0 bytes @ 0x6
  1828                           
  1829  0076                     ??_setLights_Initialization:	
  1830                           ; 0 bytes @ 0x6
  1831                           
  1832  0076                     ??_setLights_Main:	
  1833                           ; 0 bytes @ 0x6
  1834                           
  1835  0076                     ??_LED_Initialization:	
  1836                           ; 0 bytes @ 0x6
  1837                           
  1838  0076                     ??_LED_Main:	
  1839                           ; 0 bytes @ 0x6
  1840                           
  1841                           
  1842                           	psect	cstackBANK0
  1843  0051                     __pcstackBANK0:	
  1844                           ; 0 bytes @ 0x6
  1845                           
  1846  0051                     ?_setLED:	
  1847  0051                     ??_getLoad_AD:	
  1848                           ; 0 bytes @ 0x0
  1849                           
  1850  0051                     ??_getTemp_AD:	
  1851                           ; 0 bytes @ 0x0
  1852                           
  1853  0051                     ??_CDS_Main:	
  1854                           ; 0 bytes @ 0x0
  1855                           
  1856  0051                     ?_getCDS_AD:	
  1857                           ; 0 bytes @ 0x0
  1858                           
  1859  0051                     ?_setLights_Trigger:	
  1860                           ; 0 bytes @ 0x0
  1861                           
  1862  0051                     ?___wmul:	
  1863                           ; 0 bytes @ 0x0
  1864                           
  1865  0051                     ?___awdiv:	
  1866                           ; 2 bytes @ 0x0
  1867                           
  1868  0051                     ?___lwdiv:	
  1869                           ; 2 bytes @ 0x0
  1870                           
  1871  0051                     getCDS_AD@channel2:	
  1872                           ; 2 bytes @ 0x0
  1873                           
  1874  0051                     setLED@command:	
  1875                           ; 1 bytes @ 0x0
  1876                           
  1877  0051                     setLights_Initialization@lights:	
  1878                           ; 1 bytes @ 0x0
  1879                           
  1880  0051                     getLights_Status@lights:	
  1881                           ; 1 bytes @ 0x0
  1882                           
  1883  0051                     setLights_Trigger@command:	
  1884                           ; 1 bytes @ 0x0
  1885                           
  1886  0051                     getLights_Allow_Condition@allow:	
  1887                           ; 1 bytes @ 0x0
  1888                           
  1889  0051                     _getMain_All_Error_Status$2142:	
  1890                           ; 1 bytes @ 0x0
  1891                           
  1892  0051                     ___wmul@multiplier:	
  1893                           ; 2 bytes @ 0x0
  1894                           
  1895  0051                     ___awdiv@divisor:	
  1896                           ; 2 bytes @ 0x0
  1897                           
  1898  0051                     ___lwdiv@divisor:	
  1899                           ; 2 bytes @ 0x0
  1900                           
  1901                           
  1902                           ; 2 bytes @ 0x0
  1903  0051                     	ds	1
  1904  0052                     ??_getCDS_AD:	
  1905  0052                     ??_setLights_Trigger:	
  1906                           ; 0 bytes @ 0x1
  1907                           
  1908  0052                     setLED@led:	
  1909                           ; 0 bytes @ 0x1
  1910                           
  1911  0052                     getLights_Status@status:	
  1912                           ; 1 bytes @ 0x1
  1913                           
  1914  0052                     _getLights_Allow_Condition$4248:	
  1915                           ; 1 bytes @ 0x1
  1916                           
  1917                           
  1918                           ; 1 bytes @ 0x1
  1919  0052                     	ds	1
  1920  0053                     ??_setPIRLED_Main:	
  1921  0053                     ?_setLights:	
  1922                           ; 0 bytes @ 0x2
  1923                           
  1924  0053                     setLED_Initialization@led:	
  1925                           ; 0 bytes @ 0x2
  1926                           
  1927  0053                     getLoad_AD@channel:	
  1928                           ; 1 bytes @ 0x2
  1929                           
  1930  0053                     getTemp_AD@channel:	
  1931                           ; 1 bytes @ 0x2
  1932                           
  1933  0053                     setLights@status:	
  1934                           ; 1 bytes @ 0x2
  1935                           
  1936  0053                     setLights_Trigger@lights:	
  1937                           ; 1 bytes @ 0x2
  1938                           
  1939  0053                     _getMain_All_Error_Status$2143:	
  1940                           ; 1 bytes @ 0x2
  1941                           
  1942  0053                     ___wmul@multiplicand:	
  1943                           ; 2 bytes @ 0x2
  1944                           
  1945  0053                     ___awdiv@dividend:	
  1946                           ; 2 bytes @ 0x2
  1947                           
  1948  0053                     ___lwdiv@dividend:	
  1949                           ; 2 bytes @ 0x2
  1950                           
  1951                           
  1952                           ; 2 bytes @ 0x2
  1953  0053                     	ds	1
  1954  0054                     ??_setLights:	
  1955  0054                     getCDS_AD@i:	
  1956                           ; 0 bytes @ 0x3
  1957                           
  1958  0054                     setPIRLED_Main@count:	
  1959                           ; 1 bytes @ 0x3
  1960                           
  1961  0054                     getLoad_AD@k:	
  1962                           ; 1 bytes @ 0x3
  1963                           
  1964  0054                     getTemp_AD@ADRES:	
  1965                           ; 1 bytes @ 0x3
  1966                           
  1967  0054                     setLights_SwOn@sw:	
  1968                           ; 1 bytes @ 0x3
  1969                           
  1970  0054                     setLights_SwOff@sw:	
  1971                           ; 1 bytes @ 0x3
  1972                           
  1973                           
  1974                           ; 1 bytes @ 0x3
  1975  0054                     	ds	1
  1976  0055                     getCDS_AD@j:	
  1977  0055                     getMain_All_Error_Status@command:	
  1978                           ; 1 bytes @ 0x4
  1979                           
  1980  0055                     getLoad_AD@j:	
  1981                           ; 1 bytes @ 0x4
  1982                           
  1983  0055                     setLights@lights:	
  1984                           ; 1 bytes @ 0x4
  1985                           
  1986  0055                     ___awdiv@counter:	
  1987                           ; 1 bytes @ 0x4
  1988                           
  1989  0055                     ___lwdiv@counter:	
  1990                           ; 1 bytes @ 0x4
  1991                           
  1992                           
  1993                           ; 1 bytes @ 0x4
  1994  0055                     	ds	1
  1995  0056                     getCDS_AD@channel1:	
  1996  0056                     getMain_All_Error_Status@status:	
  1997                           ; 1 bytes @ 0x5
  1998                           
  1999  0056                     getLoad_AD@ADRES:	
  2000                           ; 1 bytes @ 0x5
  2001                           
  2002  0056                     setLights_Main@lights:	
  2003                           ; 1 bytes @ 0x5
  2004                           
  2005  0056                     ___awdiv@sign:	
  2006                           ; 1 bytes @ 0x5
  2007                           
  2008  0056                     ___lwdiv@quotient:	
  2009                           ; 1 bytes @ 0x5
  2010                           
  2011                           
  2012                           ; 2 bytes @ 0x5
  2013  0056                     	ds	1
  2014  0057                     ??_PIR_Main:	
  2015  0057                     ??_Exception_Main:	
  2016                           ; 0 bytes @ 0x6
  2017                           
  2018  0057                     getLoad_AD@i:	
  2019                           ; 0 bytes @ 0x6
  2020                           
  2021  0057                     setTemp_Main@error:	
  2022                           ; 1 bytes @ 0x6
  2023                           
  2024  0057                     ___awdiv@quotient:	
  2025                           ; 1 bytes @ 0x6
  2026                           
  2027                           
  2028                           ; 2 bytes @ 0x6
  2029  0057                     	ds	1
  2030  0058                     ??_Load_Main:	
  2031  0058                     Exception_Main@lights:	
  2032                           ; 0 bytes @ 0x7
  2033                           
  2034  0058                     setTemp_Main@TempGO:	
  2035                           ; 1 bytes @ 0x7
  2036                           
  2037                           
  2038                           ; 1 bytes @ 0x7
  2039  0058                     	ds	1
  2040  0059                     ?_getPIR_AD:	
  2041  0059                     ??_Lights_Control:	
  2042                           ; 0 bytes @ 0x8
  2043                           
  2044  0059                     Exception_Main@count:	
  2045                           ; 0 bytes @ 0x8
  2046                           
  2047  0059                     setTemp_Main@SafeValue:	
  2048                           ; 1 bytes @ 0x8
  2049                           
  2050  0059                     getPIR_AD@channel2:	
  2051                           ; 1 bytes @ 0x8
  2052                           
  2053                           
  2054                           ; 1 bytes @ 0x8
  2055  0059                     	ds	1
  2056  005A                     ??_getPIR_AD:	
  2057  005A                     Exception_Main@status:	
  2058                           ; 0 bytes @ 0x9
  2059                           
  2060  005A                     Load_Main@error:	
  2061                           ; 1 bytes @ 0x9
  2062                           
  2063  005A                     setTemp_Main@DangerValue:	
  2064                           ; 1 bytes @ 0x9
  2065                           
  2066                           
  2067                           ; 1 bytes @ 0x9
  2068  005A                     	ds	1
  2069  005B                     setTemp_Main@AD:	
  2070  005B                     Lights_Control@lights:	
  2071                           ; 1 bytes @ 0xA
  2072                           
  2073  005B                     Exception_Main@i:	
  2074                           ; 1 bytes @ 0xA
  2075                           
  2076  005B                     _Load_Main$2405:	
  2077                           ; 2 bytes @ 0xA
  2078                           
  2079                           
  2080                           ; 2 bytes @ 0xA
  2081  005B                     	ds	1
  2082  005C                     PIR_Main@error:	
  2083                           
  2084                           ; 1 bytes @ 0xB
  2085  005C                     	ds	1
  2086  005D                     Load_Main@ErrorCountValue:	
  2087  005D                     PIR_Main@cds:	
  2088                           ; 1 bytes @ 0xC
  2089                           
  2090  005D                     getPIR_AD@j:	
  2091                           ; 1 bytes @ 0xC
  2092                           
  2093  005D                     Exception_Main@i_2155:	
  2094                           ; 1 bytes @ 0xC
  2095                           
  2096                           
  2097                           ; 2 bytes @ 0xC
  2098  005D                     	ds	1
  2099  005E                     Load_Main@Load_RunStatus:	
  2100  005E                     PIR_Main@Enable_Switch:	
  2101                           ; 1 bytes @ 0xD
  2102                           
  2103  005E                     getPIR_AD@channel1:	
  2104                           ; 1 bytes @ 0xD
  2105                           
  2106                           
  2107                           ; 1 bytes @ 0xD
  2108  005E                     	ds	1
  2109  005F                     Exception_Main@error:	
  2110  005F                     Load_Main@LightsCount:	
  2111                           ; 1 bytes @ 0xE
  2112                           
  2113  005F                     getPIR_AD@VRAD1:	
  2114                           ; 1 bytes @ 0xE
  2115                           
  2116  005F                     _PIR_Main$2874:	
  2117                           ; 1 bytes @ 0xE
  2118                           
  2119                           
  2120                           ; 2 bytes @ 0xE
  2121  005F                     	ds	1
  2122  0060                     getPIR_AD@VRAD:	
  2123  0060                     Load_Main@i:	
  2124                           ; 1 bytes @ 0xF
  2125                           
  2126                           
  2127                           ; 2 bytes @ 0xF
  2128  0060                     	ds	1
  2129  0061                     PIR_Main@TriggerValue:	
  2130  0061                     getPIR_AD@i:	
  2131                           ; 1 bytes @ 0x10
  2132                           
  2133                           
  2134                           ; 1 bytes @ 0x10
  2135  0061                     	ds	1
  2136  0062                     PIR_Main@LightsStatus:	
  2137                           
  2138                           ; 1 bytes @ 0x11
  2139  0062                     	ds	1
  2140  0063                     ?_main:	
  2141  0063                     main@argc:	
  2142                           ; 2 bytes @ 0x12
  2143                           
  2144                           
  2145                           ; 2 bytes @ 0x12
  2146  0063                     	ds	2
  2147  0065                     main@argv:	
  2148                           
  2149                           ; 2 bytes @ 0x14
  2150  0065                     	ds	2
  2151  0067                     ??_main:	
  2152                           
  2153                           ; 0 bytes @ 0x16
  2154  0067                     	ds	1
  2155                           
  2156                           	psect	maintext
  2157  0F29                     __pmaintext:	
  2158 ;;
  2159 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2160 ;;
  2161 ;; *************** function _main *****************
  2162 ;; Defined at:
  2163 ;;		line 7 in file "../src/Main_B1.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;  argc            2   18[BANK0 ] int 
  2166 ;;  argv            2   20[BANK0 ] PTR PTR unsigned char 
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;		None
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  2   18[BANK0 ] int 
  2171 ;; Registers used:
  2172 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2173 ;; Tracked objects:
  2174 ;;		On entry : 17F/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2178 ;;      Params:         0       4       0       0
  2179 ;;      Locals:         0       0       0       0
  2180 ;;      Temps:          0       1       0       0
  2181 ;;      Totals:         0       5       0       0
  2182 ;;Total ram usage:        5 bytes
  2183 ;; Hardware stack levels required when called:    7
  2184 ;; This function calls:
  2185 ;;		_CDS_Initialization
  2186 ;;		_CDS_Main
  2187 ;;		_DetectSYSC_Signal
  2188 ;;		_Exception_Main
  2189 ;;		_LED_Initialization
  2190 ;;		_LED_Main
  2191 ;;		_Lights_Initialization
  2192 ;;		_Lights_Main
  2193 ;;		_Load_Initialization
  2194 ;;		_Load_Main
  2195 ;;		_Mcu_Initialization
  2196 ;;		_PIR_Initialization
  2197 ;;		_PIR_Main
  2198 ;;		_SYSC_Initialization
  2199 ;;		_SYSC_Main
  2200 ;;		_Temp_Initialization
  2201 ;;		_Temp_Main
  2202 ;;		_WDT_Main
  2203 ;;		_getCDS_AD
  2204 ;;		_getLoad_AD
  2205 ;;		_getPIR_AD
  2206 ;;		_getTemp_AD
  2207 ;;		_myMain_Initialization
  2208 ;;		_my_MainTimer
  2209 ;; This function is called by:
  2210 ;;		Startup code after reset
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           
  2215                           ;psect for function _main
  2216  0F29                     _main:	
  2217                           
  2218                           ;Main_B1.c: 8: myMain_Initialization();
  2219                           
  2220                           ;incstack = 0
  2221                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2222  0F29  158A  228C  158A   	fcall	_myMain_Initialization
  2223                           
  2224                           ;Main_B1.c: 9: Mcu_Initialization();
  2225  0F2C  158A  2352  158A   	fcall	_Mcu_Initialization
  2226                           
  2227                           ;Main_B1.c: 10: ;;
  2228                           ;Main_B1.c: 11: LED_Initialization();
  2229  0F2F  158A  230E  158A   	fcall	_LED_Initialization
  2230                           
  2231                           ;Main_B1.c: 12: ;;
  2232                           ;Main_B1.c: 14: SYSC_Initialization();
  2233  0F32  158A  2293  158A   	fcall	_SYSC_Initialization
  2234                           
  2235                           ;Main_B1.c: 15: Temp_Initialization();
  2236  0F35  158A  2299  158A   	fcall	_Temp_Initialization
  2237                           
  2238                           ;Main_B1.c: 16: Load_Initialization();
  2239  0F38  158A  2290  158A   	fcall	_Load_Initialization
  2240                           
  2241                           ;Main_B1.c: 17: ;;
  2242                           ;Main_B1.c: 18: ;;
  2243                           ;Main_B1.c: 20: ;;
  2244                           ;Main_B1.c: 21: Lights_Initialization();
  2245  0F3B  158A  22A3  158A   	fcall	_Lights_Initialization
  2246                           
  2247                           ;Main_B1.c: 22: CDS_Initialization();
  2248  0F3E  158A  229F  158A   	fcall	_CDS_Initialization
  2249                           
  2250                           ;Main_B1.c: 23: PIR_Initialization();
  2251  0F41  118A  27F5  158A   	fcall	_PIR_Initialization
  2252  0F44                     l5454:	
  2253                           ;Main_B1.c: 24: ;;
  2254                           ;Main_B1.c: 25: ;;
  2255                           ;Main_B1.c: 26: ;;
  2256                           ;Main_B1.c: 27: ;;
  2257                           ;Main_B1.c: 28: ;;
  2258                           ;Main_B1.c: 30: while (1) {
  2259                           
  2260                           
  2261                           ;Main_B1.c: 32: if (myMain.PowerON == 1) {
  2262  0F44  1283               	bcf	3,5	;RP0=0, select bank0
  2263  0F45  1303               	bcf	3,6	;RP1=0, select bank0
  2264  0F46  1C25               	btfss	_myMain,0
  2265  0F47  2F67               	goto	l5466
  2266                           
  2267                           ;Main_B1.c: 34: DetectSYSC_Signal();
  2268  0F48  158A  231A  158A   	fcall	_DetectSYSC_Signal
  2269                           
  2270                           ;Main_B1.c: 38: getLoad_AD(0x01);
  2271  0F4B  3001               	movlw	1
  2272  0F4C  158A  2670  158A   	fcall	_getLoad_AD
  2273                           
  2274                           ;Main_B1.c: 42: getTemp_AD(0x11);
  2275  0F4F  3011               	movlw	17
  2276  0F50  158A  24BF  158A   	fcall	_getTemp_AD
  2277                           
  2278                           ;Main_B1.c: 50: getCDS_AD(0x09, 0x31);
  2279  0F53  3031               	movlw	49
  2280  0F54  1283               	bcf	3,5	;RP0=0, select bank0
  2281  0F55  1303               	bcf	3,6	;RP1=0, select bank0
  2282  0F56  00E7               	movwf	??_main
  2283  0F57  0867               	movf	??_main,w
  2284  0F58  00D1               	movwf	getCDS_AD@channel2
  2285  0F59  3009               	movlw	9
  2286  0F5A  158A  24DE  158A   	fcall	_getCDS_AD
  2287                           
  2288                           ;Main_B1.c: 54: getPIR_AD(0x05, 0x0d);
  2289  0F5D  300D               	movlw	13
  2290  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  2291  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  2292  0F60  00E7               	movwf	??_main
  2293  0F61  0867               	movf	??_main,w
  2294  0F62  00D9               	movwf	getPIR_AD@channel2
  2295  0F63  3005               	movlw	5
  2296  0F64  118A  2417  158A   	fcall	_getPIR_AD
  2297  0F67                     l5466:	
  2298                           
  2299                           ;Main_B1.c: 57: }
  2300                           ;Main_B1.c: 93: if (Timer1.Timeout == 1) {
  2301  0F67  1283               	bcf	3,5	;RP0=0, select bank0
  2302  0F68  1303               	bcf	3,6	;RP1=0, select bank0
  2303  0F69  1C32               	btfss	_Timer1,0
  2304  0F6A  2F44               	goto	l5454
  2305                           
  2306                           ;Main_B1.c: 94: Timer1.Timeout = 0;
  2307  0F6B  1032               	bcf	_Timer1,0
  2308                           
  2309                           ;Main_B1.c: 96: my_MainTimer();
  2310  0F6C  158A  2450  158A   	fcall	_my_MainTimer
  2311                           
  2312                           ;Main_B1.c: 97: WDT_Main();
  2313  0F6F  158A  2372  158A   	fcall	_WDT_Main
  2314                           
  2315                           ;Main_B1.c: 98: ;;
  2316                           ;Main_B1.c: 99: ;;
  2317                           ;Main_B1.c: 100: if (myMain.PowerON == 1) {
  2318  0F72  1283               	bcf	3,5	;RP0=0, select bank0
  2319  0F73  1303               	bcf	3,6	;RP1=0, select bank0
  2320  0F74  1C25               	btfss	_myMain,0
  2321  0F75  2F44               	goto	l5454
  2322                           
  2323                           ;Main_B1.c: 101: ;;
  2324                           ;Main_B1.c: 103: LED_Main();
  2325  0F76  158A  228D  158A   	fcall	_LED_Main
  2326                           
  2327                           ;Main_B1.c: 104: ;;
  2328                           ;Main_B1.c: 106: SYSC_Main();
  2329  0F79  158A  2296  158A   	fcall	_SYSC_Main
  2330                           
  2331                           ;Main_B1.c: 107: Temp_Main();
  2332  0F7C  158A  229C  158A   	fcall	_Temp_Main
  2333                           
  2334                           ;Main_B1.c: 108: Load_Main();
  2335  0F7F  118A  222D  158A   	fcall	_Load_Main
  2336                           
  2337                           ;Main_B1.c: 109: ;;
  2338                           ;Main_B1.c: 111: Lights_Main();
  2339  0F82  158A  24A1  158A   	fcall	_Lights_Main
  2340                           
  2341                           ;Main_B1.c: 112: ;;
  2342                           ;Main_B1.c: 113: ;;
  2343                           ;Main_B1.c: 114: CDS_Main();
  2344  0F85  158A  257A  158A   	fcall	_CDS_Main
  2345                           
  2346                           ;Main_B1.c: 115: PIR_Main();
  2347  0F88  118A  2026  158A   	fcall	_PIR_Main
  2348                           
  2349                           ;Main_B1.c: 117: ;;
  2350                           ;Main_B1.c: 118: ;;
  2351                           ;Main_B1.c: 119: ;;
  2352                           ;Main_B1.c: 120: ;;
  2353                           ;Main_B1.c: 121: Exception_Main();
  2354  0F8B  118A  2545  158A   	fcall	_Exception_Main
  2355  0F8E  2F44               	goto	l5454
  2356  0F8F                     __end_of_main:	
  2357                           ;Main_B1.c: 128: }
  2358                           ;Main_B1.c: 129: }
  2359                           ;Main_B1.c: 163: }
  2360                           ;Main_B1.c: 164: return (0);
  2361                           ;	Return value of _main is never used
  2362                           
  2363                           
  2364                           	psect	text1
  2365  0C50                     __ptext1:	
  2366 ;; *************** function _my_MainTimer *****************
  2367 ;; Defined at:
  2368 ;;		line 185 in file "../src/Main_B1.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;		None
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;		None
  2373 ;; Return value:  Size  Location     Type
  2374 ;;		None               void
  2375 ;; Registers used:
  2376 ;;		wreg, status,2, status,0
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2382 ;;      Params:         0       0       0       0
  2383 ;;      Locals:         0       0       0       0
  2384 ;;      Temps:          1       0       0       0
  2385 ;;      Totals:         1       0       0       0
  2386 ;;Total ram usage:        1 bytes
  2387 ;; Hardware stack levels used:    1
  2388 ;; Hardware stack levels required when called:    2
  2389 ;; This function calls:
  2390 ;;		Nothing
  2391 ;; This function is called by:
  2392 ;;		_main
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396                           
  2397                           ;psect for function _my_MainTimer
  2398  0C50                     _my_MainTimer:	
  2399                           
  2400                           ;Main_B1.c: 187: if (myMain.PowerON == 0) {
  2401                           
  2402                           ;incstack = 0
  2403                           ; Regs used in _my_MainTimer: [wreg+status,2+status,0]
  2404  0C50  1283               	bcf	3,5	;RP0=0, select bank0
  2405  0C51  1303               	bcf	3,6	;RP1=0, select bank0
  2406  0C52  1825               	btfsc	_myMain,0
  2407  0C53  2C60               	goto	l3980
  2408                           
  2409                           ;Main_B1.c: 188: myMain.PowerCount++;
  2410  0C54  3001               	movlw	1
  2411  0C55  00F4               	movwf	??_my_MainTimer
  2412  0C56  0874               	movf	??_my_MainTimer,w
  2413  0C57  07A6               	addwf	_myMain+1,f
  2414                           
  2415                           ;Main_B1.c: 189: if (myMain.PowerCount == (1500 / 20)) {
  2416  0C58  0826               	movf	_myMain+1,w
  2417  0C59  3A4B               	xorlw	75
  2418  0C5A  1D03               	skipz
  2419  0C5B  0008               	return
  2420                           
  2421                           ;Main_B1.c: 190: myMain.PowerCount = 0;
  2422  0C5C  01A6               	clrf	_myMain+1
  2423                           
  2424                           ;Main_B1.c: 191: myMain.PowerON = 1;
  2425  0C5D  1425               	bsf	_myMain,0
  2426                           
  2427                           ;Main_B1.c: 196: ;;
  2428                           ;Main_B1.c: 197: myMain.SelfTest = 1;
  2429  0C5E  1625               	bsf	_myMain,4
  2430                           
  2431                           ;Main_B1.c: 206: }
  2432                           ;Main_B1.c: 207: } else {
  2433  0C5F  0008               	return
  2434  0C60                     l3980:	
  2435                           
  2436                           ;Main_B1.c: 208: myMain.PowerCount++;
  2437  0C60  3001               	movlw	1
  2438  0C61  00F4               	movwf	??_my_MainTimer
  2439  0C62  0874               	movf	??_my_MainTimer,w
  2440  0C63  07A6               	addwf	_myMain+1,f
  2441                           
  2442                           ;Main_B1.c: 209: if (myMain.PowerCount == (1000 / 20)) {
  2443  0C64  0826               	movf	_myMain+1,w
  2444  0C65  3A32               	xorlw	50
  2445  0C66  1D03               	skipz
  2446  0C67  0008               	return
  2447                           
  2448                           ;Main_B1.c: 210: myMain.PowerCount = 0;
  2449  0C68  01A6               	clrf	_myMain+1
  2450  0C69  0008               	return
  2451  0C6A                     __end_of_my_MainTimer:	
  2452                           
  2453                           	psect	text2
  2454  0A8C                     __ptext2:	
  2455 ;; *************** function _myMain_Initialization *****************
  2456 ;; Defined at:
  2457 ;;		line 170 in file "../src/Main_B1.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;		None
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;		None
  2462 ;; Return value:  Size  Location     Type
  2463 ;;		None               void
  2464 ;; Registers used:
  2465 ;;		None
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2471 ;;      Params:         0       0       0       0
  2472 ;;      Locals:         0       0       0       0
  2473 ;;      Temps:          0       0       0       0
  2474 ;;      Totals:         0       0       0       0
  2475 ;;Total ram usage:        0 bytes
  2476 ;; Hardware stack levels used:    1
  2477 ;; Hardware stack levels required when called:    2
  2478 ;; This function calls:
  2479 ;;		Nothing
  2480 ;; This function is called by:
  2481 ;;		_main
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           
  2485                           
  2486                           ;psect for function _myMain_Initialization
  2487  0A8C                     _myMain_Initialization:	
  2488                           
  2489                           ;incstack = 0
  2490                           ; Regs used in _myMain_Initialization: []
  2491  0A8C  0008               	return
  2492  0A8D                     __end_of_myMain_Initialization:	
  2493                           
  2494                           	psect	text3
  2495  0CBF                     __ptext3:	
  2496 ;; *************** function _getTemp_AD *****************
  2497 ;; Defined at:
  2498 ;;		line 15 in file "../src/OverTemperature_B1.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;  channel         1    wreg     unsigned char 
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;  channel         1    2[BANK0 ] unsigned char 
  2503 ;;  ADRES           1    3[BANK0 ] unsigned char 
  2504 ;; Return value:  Size  Location     Type
  2505 ;;		None               void
  2506 ;; Registers used:
  2507 ;;		wreg, status,2, status,0, pclath, cstack
  2508 ;; Tracked objects:
  2509 ;;		On entry : 0/0
  2510 ;;		On exit  : 0/0
  2511 ;;		Unchanged: 0/0
  2512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2513 ;;      Params:         0       0       0       0
  2514 ;;      Locals:         0       2       0       0
  2515 ;;      Temps:          0       2       0       0
  2516 ;;      Totals:         0       4       0       0
  2517 ;;Total ram usage:        4 bytes
  2518 ;; Hardware stack levels used:    1
  2519 ;; Hardware stack levels required when called:    4
  2520 ;; This function calls:
  2521 ;;		_getAD
  2522 ;; This function is called by:
  2523 ;;		_main
  2524 ;; This function uses a non-reentrant model
  2525 ;;
  2526                           
  2527                           
  2528                           ;psect for function _getTemp_AD
  2529  0CBF                     _getTemp_AD:	
  2530                           
  2531                           ;incstack = 0
  2532                           ; Regs used in _getTemp_AD: [wreg+status,2+status,0+pclath+cstack]
  2533                           ;getTemp_AD@channel stored from wreg
  2534  0CBF  1283               	bcf	3,5	;RP0=0, select bank0
  2535  0CC0  1303               	bcf	3,6	;RP1=0, select bank0
  2536  0CC1  00D3               	movwf	getTemp_AD@channel
  2537                           
  2538                           ;OverTemperature_B1.c: 16: ADtype ADRES = 0;
  2539  0CC2  01D4               	clrf	getTemp_AD@ADRES
  2540                           
  2541                           ;OverTemperature_B1.c: 19: if (Temp.ADtoGO == 1) {
  2542  0CC3  1D39               	btfss	_Temp,2
  2543  0CC4  0008               	return
  2544                           
  2545                           ;OverTemperature_B1.c: 21: ADRES = getAD(channel, 0x70);
  2546  0CC5  3070               	movlw	112
  2547  0CC6  00D1               	movwf	??_getTemp_AD
  2548  0CC7  0851               	movf	??_getTemp_AD,w
  2549  0CC8  00F4               	movwf	getAD@adcon1
  2550  0CC9  0853               	movf	getTemp_AD@channel,w
  2551  0CCA  158A  2485  158A   	fcall	_getAD
  2552  0CCD  1283               	bcf	3,5	;RP0=0, select bank0
  2553  0CCE  1303               	bcf	3,6	;RP1=0, select bank0
  2554  0CCF  00D2               	movwf	??_getTemp_AD+1
  2555  0CD0  0852               	movf	??_getTemp_AD+1,w
  2556  0CD1  00D4               	movwf	getTemp_AD@ADRES
  2557                           
  2558                           ;OverTemperature_B1.c: 29: if (ADRES > 0) {
  2559  0CD2  0854               	movf	getTemp_AD@ADRES,w
  2560  0CD3  1903               	btfsc	3,2
  2561  0CD4  0008               	return
  2562                           
  2563                           ;OverTemperature_B1.c: 30: if (Temp.ADV < ADRES) {
  2564  0CD5  0854               	movf	getTemp_AD@ADRES,w
  2565  0CD6  023F               	subwf	_Temp+6,w
  2566  0CD7  1803               	skipnc
  2567  0CD8  0008               	return
  2568                           
  2569                           ;OverTemperature_B1.c: 31: Temp.ADV = ADRES;
  2570  0CD9  0854               	movf	getTemp_AD@ADRES,w
  2571  0CDA  00D1               	movwf	??_getTemp_AD
  2572  0CDB  0851               	movf	??_getTemp_AD,w
  2573  0CDC  00BF               	movwf	_Temp+6
  2574  0CDD  0008               	return
  2575  0CDE                     __end_of_getTemp_AD:	
  2576                           
  2577                           	psect	text4
  2578  0417                     __ptext4:	
  2579 ;; *************** function _getPIR_AD *****************
  2580 ;; Defined at:
  2581 ;;		line 342 in file "../src/PIR_B1.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;  channel1        1    wreg     unsigned char 
  2584 ;;  channel2        1    8[BANK0 ] unsigned char 
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;  channel1        1   13[BANK0 ] unsigned char 
  2587 ;;  i               1   16[BANK0 ] unsigned char 
  2588 ;;  VRAD            1   15[BANK0 ] unsigned char 
  2589 ;;  VRAD1           1   14[BANK0 ] unsigned char 
  2590 ;;  j               1   12[BANK0 ] unsigned char 
  2591 ;; Return value:  Size  Location     Type
  2592 ;;		None               void
  2593 ;; Registers used:
  2594 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2600 ;;      Params:         0       1       0       0
  2601 ;;      Locals:         0       5       0       0
  2602 ;;      Temps:          0       3       0       0
  2603 ;;      Totals:         0       9       0       0
  2604 ;;Total ram usage:        9 bytes
  2605 ;; Hardware stack levels used:    1
  2606 ;; Hardware stack levels required when called:    4
  2607 ;; This function calls:
  2608 ;;		___awdiv
  2609 ;;		___lwdiv
  2610 ;;		_getAD
  2611 ;; This function is called by:
  2612 ;;		_main
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           
  2617                           ;psect for function _getPIR_AD
  2618  0417                     _getPIR_AD:	
  2619                           
  2620                           ;incstack = 0
  2621                           ; Regs used in _getPIR_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2622                           ;getPIR_AD@channel1 stored from wreg
  2623  0417  1283               	bcf	3,5	;RP0=0, select bank0
  2624  0418  1303               	bcf	3,6	;RP1=0, select bank0
  2625  0419  00DE               	movwf	getPIR_AD@channel1
  2626                           
  2627                           ;PIR_B1.c: 343: char i = 0, j = 0;
  2628  041A  01E1               	clrf	getPIR_AD@i
  2629  041B  01DD               	clrf	getPIR_AD@j
  2630                           
  2631                           ;PIR_B1.c: 344: char VRAD = 0, VRAD1 = 0;
  2632  041C  01E0               	clrf	getPIR_AD@VRAD
  2633  041D  01DF               	clrf	getPIR_AD@VRAD1
  2634                           
  2635                           ;PIR_B1.c: 345: if (_PIR.ADtoGO == 1 && _PIR.GO == 0) {
  2636  041E  1683               	bsf	3,5	;RP0=1, select bank1
  2637  041F  1303               	bcf	3,6	;RP1=0, select bank1
  2638  0420  1CA0               	btfss	__PIR^(0+128),1
  2639  0421  0008               	return
  2640  0422  1920               	btfsc	__PIR^(0+128),2
  2641  0423  0008               	return
  2642                           
  2643                           ;PIR_B1.c: 346: _PIR.GO = 1;
  2644  0424  1520               	bsf	__PIR^(0+128),2
  2645                           
  2646                           ;PIR_B1.c: 353: VRAD1 = getAD(channel1, 0x70);
  2647  0425  3070               	movlw	112
  2648  0426  1283               	bcf	3,5	;RP0=0, select bank0
  2649  0427  1303               	bcf	3,6	;RP1=0, select bank0
  2650  0428  00DA               	movwf	??_getPIR_AD
  2651  0429  085A               	movf	??_getPIR_AD,w
  2652  042A  00F4               	movwf	getAD@adcon1
  2653  042B  085E               	movf	getPIR_AD@channel1,w
  2654  042C  158A  2485  118A   	fcall	_getAD
  2655  042F  1283               	bcf	3,5	;RP0=0, select bank0
  2656  0430  1303               	bcf	3,6	;RP1=0, select bank0
  2657  0431  00DB               	movwf	??_getPIR_AD+1
  2658  0432  085B               	movf	??_getPIR_AD+1,w
  2659  0433  00DF               	movwf	getPIR_AD@VRAD1
  2660                           
  2661                           ;PIR_B1.c: 354: VRAD = VRAD1 / 25;
  2662  0434  3019               	movlw	25
  2663  0435  00D1               	movwf	___awdiv@divisor
  2664  0436  3000               	movlw	0
  2665  0437  00D2               	movwf	___awdiv@divisor+1
  2666  0438  085F               	movf	getPIR_AD@VRAD1,w
  2667  0439  00DA               	movwf	??_getPIR_AD
  2668  043A  01DB               	clrf	??_getPIR_AD+1
  2669  043B  085A               	movf	??_getPIR_AD,w
  2670  043C  00D3               	movwf	___awdiv@dividend
  2671  043D  085B               	movf	??_getPIR_AD+1,w
  2672  043E  00D4               	movwf	___awdiv@dividend+1
  2673  043F  158A  26CC  118A   	fcall	___awdiv
  2674  0442  1283               	bcf	3,5	;RP0=0, select bank0
  2675  0443  1303               	bcf	3,6	;RP1=0, select bank0
  2676  0444  0851               	movf	?___awdiv,w
  2677  0445  00DC               	movwf	??_getPIR_AD+2
  2678  0446  085C               	movf	??_getPIR_AD+2,w
  2679  0447  00E0               	movwf	getPIR_AD@VRAD
  2680                           
  2681                           ;PIR_B1.c: 355: _PIR.SignalAD = getAD(channel2, 0x70);
  2682  0448  3070               	movlw	112
  2683  0449  00DA               	movwf	??_getPIR_AD
  2684  044A  085A               	movf	??_getPIR_AD,w
  2685  044B  00F4               	movwf	getAD@adcon1
  2686  044C  0859               	movf	getPIR_AD@channel2,w
  2687  044D  158A  2485  118A   	fcall	_getAD
  2688  0450  1283               	bcf	3,5	;RP0=0, select bank0
  2689  0451  1303               	bcf	3,6	;RP1=0, select bank0
  2690  0452  00DB               	movwf	??_getPIR_AD+1
  2691  0453  085B               	movf	??_getPIR_AD+1,w
  2692  0454  1683               	bsf	3,5	;RP0=1, select bank1
  2693  0455  1303               	bcf	3,6	;RP1=0, select bank1
  2694  0456  00A1               	movwf	(__PIR^(0+128)+1)
  2695                           
  2696                           ;PIR_B1.c: 369: if (VRAD < 1) {
  2697  0457  1283               	bcf	3,5	;RP0=0, select bank0
  2698  0458  1303               	bcf	3,6	;RP1=0, select bank0
  2699  0459  08E0               	movf	getPIR_AD@VRAD,f
  2700  045A  1D03               	skipz
  2701  045B  2C5E               	goto	l4986
  2702                           
  2703                           ;PIR_B1.c: 370: _PIR.CloseTimeValue = 5;
  2704  045C  3005               	movlw	5
  2705  045D  2C64               	goto	L1
  2706  045E                     l4986:	
  2707                           ;PIR_B1.c: 371: } else if (VRAD < 3) {
  2708                           
  2709  045E  3003               	movlw	3
  2710  045F  1283               	bcf	3,5	;RP0=0, select bank0
  2711  0460  0260               	subwf	getPIR_AD@VRAD,w
  2712  0461  1803               	skipnc
  2713  0462  2C69               	goto	l4990
  2714                           
  2715                           ;PIR_B1.c: 372: _PIR.CloseTimeValue = 60;
  2716  0463  303C               	movlw	60
  2717  0464                     L1:	
  2718  0464  1683               	bsf	3,5	;RP0=1, select bank1
  2719  0465  1303               	bcf	3,6	;RP1=0, select bank1
  2720  0466  00C3               	movwf	(__PIR^(0+128)+35)
  2721  0467  3000               	movlw	0
  2722  0468  2C8F               	goto	L5
  2723  0469                     l4990:	
  2724                           ;PIR_B1.c: 373: } else if (VRAD < 5) {
  2725                           
  2726  0469  3005               	movlw	5
  2727  046A  1283               	bcf	3,5	;RP0=0, select bank0
  2728  046B  0260               	subwf	getPIR_AD@VRAD,w
  2729  046C  1803               	skipnc
  2730  046D  2C74               	goto	l4994
  2731                           
  2732                           ;PIR_B1.c: 374: _PIR.CloseTimeValue = 300;
  2733  046E  302C               	movlw	44
  2734  046F  1683               	bsf	3,5	;RP0=1, select bank1
  2735  0470  1303               	bcf	3,6	;RP1=0, select bank1
  2736  0471  00C3               	movwf	(__PIR^(0+128)+35)
  2737  0472  3001               	movlw	1
  2738  0473  2C8F               	goto	L5
  2739  0474                     l4994:	
  2740                           ;PIR_B1.c: 375: } else if (VRAD < 7) {
  2741                           
  2742  0474  3007               	movlw	7
  2743  0475  1283               	bcf	3,5	;RP0=0, select bank0
  2744  0476  0260               	subwf	getPIR_AD@VRAD,w
  2745  0477  1803               	skipnc
  2746  0478  2C7F               	goto	l4998
  2747                           
  2748                           ;PIR_B1.c: 376: _PIR.CloseTimeValue = 600;
  2749  0479  3058               	movlw	88
  2750  047A  1683               	bsf	3,5	;RP0=1, select bank1
  2751  047B  1303               	bcf	3,6	;RP1=0, select bank1
  2752  047C  00C3               	movwf	(__PIR^(0+128)+35)
  2753  047D  3002               	movlw	2
  2754  047E  2C8F               	goto	L5
  2755  047F                     l4998:	
  2756                           ;PIR_B1.c: 377: } else if (VRAD < 9) {
  2757                           
  2758  047F  3009               	movlw	9
  2759  0480  1283               	bcf	3,5	;RP0=0, select bank0
  2760  0481  0260               	subwf	getPIR_AD@VRAD,w
  2761  0482  1803               	skipnc
  2762  0483  2C8A               	goto	l5002
  2763                           
  2764                           ;PIR_B1.c: 378: _PIR.CloseTimeValue = 900;
  2765  0484  3084               	movlw	132
  2766  0485  1683               	bsf	3,5	;RP0=1, select bank1
  2767  0486  1303               	bcf	3,6	;RP1=0, select bank1
  2768  0487  00C3               	movwf	(__PIR^(0+128)+35)
  2769  0488  3003               	movlw	3
  2770  0489  2C8F               	goto	L5
  2771  048A                     l5002:	
  2772                           ;PIR_B1.c: 379: } else {
  2773                           
  2774                           
  2775                           ;PIR_B1.c: 380: _PIR.CloseTimeValue = 1200;
  2776  048A  30B0               	movlw	176
  2777  048B  1683               	bsf	3,5	;RP0=1, select bank1
  2778  048C  1303               	bcf	3,6	;RP1=0, select bank1
  2779  048D  00C3               	movwf	(__PIR^(0+128)+35)
  2780  048E  3004               	movlw	4
  2781  048F                     L5:	
  2782  048F  00C4               	movwf	(__PIR^(0+128)+36)
  2783                           
  2784                           ;PIR_B1.c: 381: }
  2785                           ;PIR_B1.c: 390: _PIR.TenAverage[_PIR.TenCount] = _PIR.SignalAD;
  2786  0490  0821               	movf	(__PIR^(0+128)+1),w
  2787  0491  1283               	bcf	3,5	;RP0=0, select bank0
  2788  0492  1303               	bcf	3,6	;RP1=0, select bank0
  2789  0493  00DA               	movwf	??_getPIR_AD
  2790  0494  1683               	bsf	3,5	;RP0=1, select bank1
  2791  0495  1303               	bcf	3,6	;RP1=0, select bank1
  2792  0496  0824               	movf	(__PIR^(0+128)+4),w
  2793  0497  3EA5               	addlw	(__PIR+5)& (0+255)
  2794  0498  0084               	movwf	4
  2795  0499  1283               	bcf	3,5	;RP0=0, select bank0
  2796  049A  1303               	bcf	3,6	;RP1=0, select bank0
  2797  049B  085A               	movf	??_getPIR_AD,w
  2798  049C  1383               	bcf	3,7	;select IRP bank1
  2799  049D  0080               	movwf	0
  2800                           
  2801                           ;PIR_B1.c: 391: for (i = 0; i < 10; i++) {
  2802  049E  01E1               	clrf	getPIR_AD@i
  2803  049F  300A               	movlw	10
  2804  04A0  0261               	subwf	getPIR_AD@i,w
  2805  04A1  1803               	btfsc	3,0
  2806  04A2  2CBF               	goto	l5018
  2807  04A3                     l5012:	
  2808                           
  2809                           ;PIR_B1.c: 392: _PIR.TenAverageValue += _PIR.TenAverage[i];
  2810  04A3  0861               	movf	getPIR_AD@i,w
  2811  04A4  3EA5               	addlw	(__PIR+5)& (0+255)
  2812  04A5  0084               	movwf	4
  2813  04A6  0800               	movf	0,w
  2814  04A7  00DA               	movwf	??_getPIR_AD
  2815  04A8  01DB               	clrf	??_getPIR_AD+1
  2816  04A9  085A               	movf	??_getPIR_AD,w
  2817  04AA  1683               	bsf	3,5	;RP0=1, select bank1
  2818  04AB  1303               	bcf	3,6	;RP1=0, select bank1
  2819  04AC  07AF               	addwf	(__PIR^(0+128)+15),f
  2820  04AD  1803               	skipnc
  2821  04AE  0AB0               	incf	((__PIR+1)^(0+128)+15),f
  2822  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  2823  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  2824  04B1  085B               	movf	??_getPIR_AD+1,w
  2825  04B2  1683               	bsf	3,5	;RP0=1, select bank1
  2826  04B3  1303               	bcf	3,6	;RP1=0, select bank1
  2827  04B4  07B0               	addwf	((__PIR+1)^(0+128)+15),f
  2828  04B5  3001               	movlw	1
  2829  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  2830  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  2831  04B8  00DA               	movwf	??_getPIR_AD
  2832  04B9  085A               	movf	??_getPIR_AD,w
  2833  04BA  07E1               	addwf	getPIR_AD@i,f
  2834  04BB  300A               	movlw	10
  2835  04BC  0261               	subwf	getPIR_AD@i,w
  2836  04BD  1C03               	skipc
  2837  04BE  2CA3               	goto	l5012
  2838  04BF                     l5018:	
  2839                           
  2840                           ;PIR_B1.c: 393: }
  2841                           ;PIR_B1.c: 394: _PIR.HundredAverage[_PIR.HundreCount] = (_PIR.TenAverageValue / 10);
  2842  04BF  300A               	movlw	10
  2843  04C0  00D1               	movwf	___lwdiv@divisor
  2844  04C1  3000               	movlw	0
  2845  04C2  00D2               	movwf	___lwdiv@divisor+1
  2846  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  2847  04C4  1303               	bcf	3,6	;RP1=0, select bank1
  2848  04C5  0830               	movf	((__PIR+1)^(0+128)+15),w
  2849  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  2850  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  2851  04C8  01D4               	clrf	___lwdiv@dividend+1
  2852  04C9  07D4               	addwf	___lwdiv@dividend+1,f
  2853  04CA  1683               	bsf	3,5	;RP0=1, select bank1
  2854  04CB  1303               	bcf	3,6	;RP1=0, select bank1
  2855  04CC  082F               	movf	(__PIR^(0+128)+15),w
  2856  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  2857  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  2858  04CF  01D3               	clrf	___lwdiv@dividend
  2859  04D0  07D3               	addwf	___lwdiv@dividend,f
  2860  04D1  158A  25EC  118A   	fcall	___lwdiv
  2861  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  2862  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  2863  04D6  0851               	movf	?___lwdiv,w
  2864  04D7  00DA               	movwf	??_getPIR_AD
  2865  04D8  1683               	bsf	3,5	;RP0=1, select bank1
  2866  04D9  1303               	bcf	3,6	;RP1=0, select bank1
  2867  04DA  0831               	movf	(__PIR^(0+128)+17),w
  2868  04DB  3EB2               	addlw	(__PIR+18)& (0+255)
  2869  04DC  0084               	movwf	4
  2870  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  2871  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  2872  04DF  085A               	movf	??_getPIR_AD,w
  2873  04E0  1383               	bcf	3,7	;select IRP bank1
  2874  04E1  0080               	movwf	0
  2875                           
  2876                           ;PIR_B1.c: 395: _PIR.TenAverageValue = 0;
  2877  04E2  1683               	bsf	3,5	;RP0=1, select bank1
  2878  04E3  1303               	bcf	3,6	;RP1=0, select bank1
  2879  04E4  01AF               	clrf	(__PIR^(0+128)+15)
  2880  04E5  01B0               	clrf	((__PIR+1)^(0+128)+15)
  2881                           
  2882                           ;PIR_B1.c: 397: for (i = 0; i <= 9; i++) {
  2883  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  2884  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  2885  04E8  01E1               	clrf	getPIR_AD@i
  2886  04E9  300A               	movlw	10
  2887  04EA  0261               	subwf	getPIR_AD@i,w
  2888  04EB  1803               	btfsc	3,0
  2889  04EC  2D09               	goto	l5034
  2890  04ED                     l5028:	
  2891                           
  2892                           ;PIR_B1.c: 398: _PIR.HundredAverageValue += _PIR.HundredAverage[i];
  2893  04ED  0861               	movf	getPIR_AD@i,w
  2894  04EE  3EB2               	addlw	(__PIR+18)& (0+255)
  2895  04EF  0084               	movwf	4
  2896  04F0  0800               	movf	0,w
  2897  04F1  00DA               	movwf	??_getPIR_AD
  2898  04F2  01DB               	clrf	??_getPIR_AD+1
  2899  04F3  085A               	movf	??_getPIR_AD,w
  2900  04F4  1683               	bsf	3,5	;RP0=1, select bank1
  2901  04F5  1303               	bcf	3,6	;RP1=0, select bank1
  2902  04F6  07BC               	addwf	(__PIR^(0+128)+28),f
  2903  04F7  1803               	skipnc
  2904  04F8  0ABD               	incf	((__PIR+1)^(0+128)+28),f
  2905  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  2906  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  2907  04FB  085B               	movf	??_getPIR_AD+1,w
  2908  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  2909  04FD  1303               	bcf	3,6	;RP1=0, select bank1
  2910  04FE  07BD               	addwf	((__PIR+1)^(0+128)+28),f
  2911  04FF  3001               	movlw	1
  2912  0500  1283               	bcf	3,5	;RP0=0, select bank0
  2913  0501  1303               	bcf	3,6	;RP1=0, select bank0
  2914  0502  00DA               	movwf	??_getPIR_AD
  2915  0503  085A               	movf	??_getPIR_AD,w
  2916  0504  07E1               	addwf	getPIR_AD@i,f
  2917  0505  300A               	movlw	10
  2918  0506  0261               	subwf	getPIR_AD@i,w
  2919  0507  1C03               	skipc
  2920  0508  2CED               	goto	l5028
  2921  0509                     l5034:	
  2922                           
  2923                           ;PIR_B1.c: 399: }
  2924                           ;PIR_B1.c: 400: _PIR.ReferenceVoltage = (_PIR.HundredAverageValue / 10);
  2925  0509  300A               	movlw	10
  2926  050A  00D1               	movwf	___lwdiv@divisor
  2927  050B  3000               	movlw	0
  2928  050C  00D2               	movwf	___lwdiv@divisor+1
  2929  050D  1683               	bsf	3,5	;RP0=1, select bank1
  2930  050E  1303               	bcf	3,6	;RP1=0, select bank1
  2931  050F  083D               	movf	((__PIR+1)^(0+128)+28),w
  2932  0510  1283               	bcf	3,5	;RP0=0, select bank0
  2933  0511  1303               	bcf	3,6	;RP1=0, select bank0
  2934  0512  01D4               	clrf	___lwdiv@dividend+1
  2935  0513  07D4               	addwf	___lwdiv@dividend+1,f
  2936  0514  1683               	bsf	3,5	;RP0=1, select bank1
  2937  0515  1303               	bcf	3,6	;RP1=0, select bank1
  2938  0516  083C               	movf	(__PIR^(0+128)+28),w
  2939  0517  1283               	bcf	3,5	;RP0=0, select bank0
  2940  0518  1303               	bcf	3,6	;RP1=0, select bank0
  2941  0519  01D3               	clrf	___lwdiv@dividend
  2942  051A  07D3               	addwf	___lwdiv@dividend,f
  2943  051B  158A  25EC  118A   	fcall	___lwdiv
  2944  051E  1283               	bcf	3,5	;RP0=0, select bank0
  2945  051F  1303               	bcf	3,6	;RP1=0, select bank0
  2946  0520  0851               	movf	?___lwdiv,w
  2947  0521  00DA               	movwf	??_getPIR_AD
  2948  0522  085A               	movf	??_getPIR_AD,w
  2949  0523  1683               	bsf	3,5	;RP0=1, select bank1
  2950  0524  1303               	bcf	3,6	;RP1=0, select bank1
  2951  0525  00A3               	movwf	(__PIR^(0+128)+3)
  2952                           
  2953                           ;PIR_B1.c: 401: _PIR.HundredAverageValue = 0;
  2954  0526  01BC               	clrf	(__PIR^(0+128)+28)
  2955  0527  01BD               	clrf	((__PIR+1)^(0+128)+28)
  2956                           
  2957                           ;PIR_B1.c: 403: if (_PIR.TenCount < 10) {
  2958  0528  300A               	movlw	10
  2959  0529  0224               	subwf	(__PIR^(0+128)+4),w
  2960  052A  1803               	skipnc
  2961  052B  2D35               	goto	l5042
  2962                           
  2963                           ;PIR_B1.c: 404: _PIR.TenCount++;
  2964  052C  3001               	movlw	1
  2965  052D  1283               	bcf	3,5	;RP0=0, select bank0
  2966  052E  1303               	bcf	3,6	;RP1=0, select bank0
  2967  052F  00DA               	movwf	??_getPIR_AD
  2968  0530  085A               	movf	??_getPIR_AD,w
  2969  0531  1683               	bsf	3,5	;RP0=1, select bank1
  2970  0532  1303               	bcf	3,6	;RP1=0, select bank1
  2971  0533  07A4               	addwf	(__PIR^(0+128)+4),f
  2972                           
  2973                           ;PIR_B1.c: 405: } else {
  2974  0534  0008               	return
  2975  0535                     l5042:	
  2976                           
  2977                           ;PIR_B1.c: 406: _PIR.TenCount = 0;
  2978  0535  01A4               	clrf	(__PIR^(0+128)+4)
  2979                           
  2980                           ;PIR_B1.c: 407: if (_PIR.HundreCount < 10)
  2981  0536  300A               	movlw	10
  2982  0537  0231               	subwf	(__PIR^(0+128)+17),w
  2983  0538  1803               	skipnc
  2984  0539  2D43               	goto	l5048
  2985                           
  2986                           ;PIR_B1.c: 408: _PIR.HundreCount++;
  2987  053A  3001               	movlw	1
  2988  053B  1283               	bcf	3,5	;RP0=0, select bank0
  2989  053C  1303               	bcf	3,6	;RP1=0, select bank0
  2990  053D  00DA               	movwf	??_getPIR_AD
  2991  053E  085A               	movf	??_getPIR_AD,w
  2992  053F  1683               	bsf	3,5	;RP0=1, select bank1
  2993  0540  1303               	bcf	3,6	;RP1=0, select bank1
  2994  0541  07B1               	addwf	(__PIR^(0+128)+17),f
  2995  0542  0008               	return
  2996  0543                     l5048:	
  2997                           
  2998                           ;PIR_B1.c: 409: else
  2999                           ;PIR_B1.c: 410: _PIR.HundreCount = 0;
  3000  0543  01B1               	clrf	(__PIR^(0+128)+17)
  3001  0544  0008               	return
  3002  0545                     __end_of_getPIR_AD:	
  3003                           
  3004                           	psect	text5
  3005  0E70                     __ptext5:	
  3006 ;; *************** function _getLoad_AD *****************
  3007 ;; Defined at:
  3008 ;;		line 15 in file "../src/OverLoad_B1.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;  channel         1    wreg     unsigned char 
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;  channel         1    2[BANK0 ] unsigned char 
  3013 ;;  i               1    6[BANK0 ] unsigned char 
  3014 ;;  ADRES           1    5[BANK0 ] unsigned char 
  3015 ;;  j               1    4[BANK0 ] unsigned char 
  3016 ;;  k               1    3[BANK0 ] unsigned char 
  3017 ;; Return value:  Size  Location     Type
  3018 ;;		None               void
  3019 ;; Registers used:
  3020 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3026 ;;      Params:         0       0       0       0
  3027 ;;      Locals:         0       5       0       0
  3028 ;;      Temps:          0       2       0       0
  3029 ;;      Totals:         0       7       0       0
  3030 ;;Total ram usage:        7 bytes
  3031 ;; Hardware stack levels used:    1
  3032 ;; Hardware stack levels required when called:    4
  3033 ;; This function calls:
  3034 ;;		_getAD
  3035 ;; This function is called by:
  3036 ;;		_main
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           
  3041                           ;psect for function _getLoad_AD
  3042  0E70                     _getLoad_AD:	
  3043                           
  3044                           ;incstack = 0
  3045                           ; Regs used in _getLoad_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3046                           ;getLoad_AD@channel stored from wreg
  3047  0E70  1283               	bcf	3,5	;RP0=0, select bank0
  3048  0E71  1303               	bcf	3,6	;RP1=0, select bank0
  3049  0E72  00D3               	movwf	getLoad_AD@channel
  3050                           
  3051                           ;OverLoad_B1.c: 16: char i = 0, j = 0, k = 0;
  3052  0E73  01D7               	clrf	getLoad_AD@i
  3053  0E74  01D5               	clrf	getLoad_AD@j
  3054  0E75  01D4               	clrf	getLoad_AD@k
  3055                           
  3056                           ;OverLoad_B1.c: 17: ADtype ADRES = 0;
  3057  0E76  01D6               	clrf	getLoad_AD@ADRES
  3058                           
  3059                           ;OverLoad_B1.c: 18: if (Load.ADtoGO == 1) {
  3060  0E77  1683               	bsf	3,5	;RP0=1, select bank1
  3061  0E78  1303               	bcf	3,6	;RP1=0, select bank1
  3062  0E79  1E4A               	btfss	_Load^(0+128),4
  3063  0E7A  0008               	return
  3064                           
  3065                           ;OverLoad_B1.c: 20: ADRES = getAD(channel, 0x73);
  3066  0E7B  3073               	movlw	115
  3067  0E7C  1283               	bcf	3,5	;RP0=0, select bank0
  3068  0E7D  1303               	bcf	3,6	;RP1=0, select bank0
  3069  0E7E  00D1               	movwf	??_getLoad_AD
  3070  0E7F  0851               	movf	??_getLoad_AD,w
  3071  0E80  00F4               	movwf	getAD@adcon1
  3072  0E81  0853               	movf	getLoad_AD@channel,w
  3073  0E82  158A  2485  158A   	fcall	_getAD
  3074  0E85  1283               	bcf	3,5	;RP0=0, select bank0
  3075  0E86  1303               	bcf	3,6	;RP1=0, select bank0
  3076  0E87  00D2               	movwf	??_getLoad_AD+1
  3077  0E88  0852               	movf	??_getLoad_AD+1,w
  3078  0E89  00D6               	movwf	getLoad_AD@ADRES
  3079                           
  3080                           ;OverLoad_B1.c: 21: for (i = 0; i < 4; i++) {
  3081  0E8A  01D7               	clrf	getLoad_AD@i
  3082  0E8B  3004               	movlw	4
  3083  0E8C  0257               	subwf	getLoad_AD@i,w
  3084  0E8D  1803               	btfsc	3,0
  3085  0E8E  2EAB               	goto	l4940
  3086  0E8F                     l4928:	
  3087                           
  3088                           ;OverLoad_B1.c: 22: if (Load.AH[i] < ADRES && j == 0) {
  3089  0E8F  0857               	movf	getLoad_AD@i,w
  3090  0E90  3ED4               	addlw	(_Load+10)& (0+255)
  3091  0E91  0084               	movwf	4
  3092  0E92  0856               	movf	getLoad_AD@ADRES,w
  3093  0E93  1383               	bcf	3,7	;select IRP bank1
  3094  0E94  0200               	subwf	0,w
  3095  0E95  1803               	skipnc
  3096  0E96  2EA3               	goto	l4936
  3097  0E97  08D5               	movf	getLoad_AD@j,f
  3098  0E98  1D03               	skipz
  3099  0E99  2EA3               	goto	l4936
  3100                           
  3101                           ;OverLoad_B1.c: 23: Load.AH[i] = ADRES;
  3102  0E9A  0856               	movf	getLoad_AD@ADRES,w
  3103  0E9B  00D1               	movwf	??_getLoad_AD
  3104  0E9C  0857               	movf	getLoad_AD@i,w
  3105  0E9D  3ED4               	addlw	(_Load+10)& (0+255)
  3106  0E9E  0084               	movwf	4
  3107  0E9F  0851               	movf	??_getLoad_AD,w
  3108  0EA0  0080               	movwf	0
  3109                           
  3110                           ;OverLoad_B1.c: 24: j = 1;
  3111  0EA1  01D5               	clrf	getLoad_AD@j
  3112  0EA2  0AD5               	incf	getLoad_AD@j,f
  3113  0EA3                     l4936:	
  3114  0EA3  3001               	movlw	1
  3115  0EA4  00D1               	movwf	??_getLoad_AD
  3116  0EA5  0851               	movf	??_getLoad_AD,w
  3117  0EA6  07D7               	addwf	getLoad_AD@i,f
  3118  0EA7  3004               	movlw	4
  3119  0EA8  0257               	subwf	getLoad_AD@i,w
  3120  0EA9  1C03               	skipc
  3121  0EAA  2E8F               	goto	l4928
  3122  0EAB                     l4940:	
  3123                           
  3124                           ;OverLoad_B1.c: 25: }
  3125                           ;OverLoad_B1.c: 26: }
  3126                           ;OverLoad_B1.c: 27: if (j == 0) {
  3127  0EAB  08D5               	movf	getLoad_AD@j,f
  3128  0EAC  1D03               	skipz
  3129  0EAD  0008               	return
  3130                           
  3131                           ;OverLoad_B1.c: 28: for (i = 0; i < 4; i++) {
  3132  0EAE  01D7               	clrf	getLoad_AD@i
  3133  0EAF                     L6:	
  3134  0EAF  3004               	movlw	4
  3135  0EB0  0257               	subwf	getLoad_AD@i,w
  3136  0EB1  1803               	btfsc	3,0
  3137  0EB2  0008               	return
  3138                           
  3139                           ;OverLoad_B1.c: 29: if (Load.AL[i] > ADRES && k == 0) {
  3140  0EB3  0857               	movf	getLoad_AD@i,w
  3141  0EB4  3ED9               	addlw	(_Load+15)& (0+255)
  3142  0EB5  0084               	movwf	4
  3143  0EB6  1383               	bcf	3,7	;select IRP bank1
  3144  0EB7  0800               	movf	0,w
  3145  0EB8  0256               	subwf	getLoad_AD@ADRES,w
  3146  0EB9  1803               	skipnc
  3147  0EBA  2EC7               	goto	l4956
  3148  0EBB  08D4               	movf	getLoad_AD@k,f
  3149  0EBC  1D03               	skipz
  3150  0EBD  2EC7               	goto	l4956
  3151                           
  3152                           ;OverLoad_B1.c: 30: Load.AL[i] = ADRES;
  3153  0EBE  0856               	movf	getLoad_AD@ADRES,w
  3154  0EBF  00D1               	movwf	??_getLoad_AD
  3155  0EC0  0857               	movf	getLoad_AD@i,w
  3156  0EC1  3ED9               	addlw	(_Load+15)& (0+255)
  3157  0EC2  0084               	movwf	4
  3158  0EC3  0851               	movf	??_getLoad_AD,w
  3159  0EC4  0080               	movwf	0
  3160                           
  3161                           ;OverLoad_B1.c: 31: k = 1;
  3162  0EC5  01D4               	clrf	getLoad_AD@k
  3163  0EC6  0AD4               	incf	getLoad_AD@k,f
  3164  0EC7                     l4956:	
  3165  0EC7  3001               	movlw	1
  3166  0EC8  00D1               	movwf	??_getLoad_AD
  3167  0EC9  0851               	movf	??_getLoad_AD,w
  3168  0ECA  07D7               	addwf	getLoad_AD@i,f
  3169  0ECB  2EAF               	goto	L6
  3170  0ECC                     __end_of_getLoad_AD:	
  3171                           
  3172                           	psect	text6
  3173  0CDE                     __ptext6:	
  3174 ;; *************** function _getCDS_AD *****************
  3175 ;; Defined at:
  3176 ;;		line 48 in file "../src/CDS_B1.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;  channel1        1    wreg     unsigned char 
  3179 ;;  channel2        1    0[BANK0 ] unsigned char 
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;  channel1        1    5[BANK0 ] unsigned char 
  3182 ;;  j               1    4[BANK0 ] unsigned char 
  3183 ;;  i               1    3[BANK0 ] unsigned char 
  3184 ;; Return value:  Size  Location     Type
  3185 ;;		None               void
  3186 ;; Registers used:
  3187 ;;		wreg, status,2, status,0, pclath, cstack
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3193 ;;      Params:         0       1       0       0
  3194 ;;      Locals:         0       3       0       0
  3195 ;;      Temps:          0       2       0       0
  3196 ;;      Totals:         0       6       0       0
  3197 ;;Total ram usage:        6 bytes
  3198 ;; Hardware stack levels used:    1
  3199 ;; Hardware stack levels required when called:    4
  3200 ;; This function calls:
  3201 ;;		_getAD
  3202 ;; This function is called by:
  3203 ;;		_main
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207                           
  3208                           ;psect for function _getCDS_AD
  3209  0CDE                     _getCDS_AD:	
  3210                           
  3211                           ;incstack = 0
  3212                           ; Regs used in _getCDS_AD: [wreg+status,2+status,0+pclath+cstack]
  3213                           ;getCDS_AD@channel1 stored from wreg
  3214  0CDE  1283               	bcf	3,5	;RP0=0, select bank0
  3215  0CDF  1303               	bcf	3,6	;RP1=0, select bank0
  3216  0CE0  00D6               	movwf	getCDS_AD@channel1
  3217                           
  3218                           ;CDS_B1.c: 49: char i = 0, j = 0;
  3219  0CE1  01D4               	clrf	getCDS_AD@i
  3220  0CE2  01D5               	clrf	getCDS_AD@j
  3221                           
  3222                           ;CDS_B1.c: 50: if (_CDS.ADtoGO == 1) {
  3223  0CE3  1DAE               	btfss	__CDS,3
  3224  0CE4  0008               	return
  3225                           
  3226                           ;CDS_B1.c: 51: _CDS.GO = 1;
  3227  0CE5  14AE               	bsf	__CDS,1
  3228                           
  3229                           ;CDS_B1.c: 52: _CDS.VRAD = getAD(channel1, 0x70);
  3230  0CE6  3070               	movlw	112
  3231  0CE7  00D2               	movwf	??_getCDS_AD
  3232  0CE8  0852               	movf	??_getCDS_AD,w
  3233  0CE9  00F4               	movwf	getAD@adcon1
  3234  0CEA  0856               	movf	getCDS_AD@channel1,w
  3235  0CEB  158A  2485  158A   	fcall	_getAD
  3236  0CEE  1283               	bcf	3,5	;RP0=0, select bank0
  3237  0CEF  1303               	bcf	3,6	;RP1=0, select bank0
  3238  0CF0  00D3               	movwf	??_getCDS_AD+1
  3239  0CF1  0853               	movf	??_getCDS_AD+1,w
  3240  0CF2  00B0               	movwf	__CDS+2
  3241                           
  3242                           ;CDS_B1.c: 53: _CDS.SignalAD = getAD(channel2, 0x70);
  3243  0CF3  3070               	movlw	112
  3244  0CF4  00D2               	movwf	??_getCDS_AD
  3245  0CF5  0852               	movf	??_getCDS_AD,w
  3246  0CF6  00F4               	movwf	getAD@adcon1
  3247  0CF7  0851               	movf	getCDS_AD@channel2,w
  3248  0CF8  158A  2485         	fcall	_getAD
  3249  0CFA  1283               	bcf	3,5	;RP0=0, select bank0
  3250  0CFB  1303               	bcf	3,6	;RP1=0, select bank0
  3251  0CFC  00D3               	movwf	??_getCDS_AD+1
  3252  0CFD  0853               	movf	??_getCDS_AD+1,w
  3253  0CFE  00B1               	movwf	__CDS+3
  3254  0CFF  0008               	return
  3255  0D00                     __end_of_getCDS_AD:	
  3256                           
  3257                           	psect	text7
  3258  0C85                     __ptext7:	
  3259 ;; *************** function _getAD *****************
  3260 ;; Defined at:
  3261 ;;		line 434 in file "../src/MCU_B1.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;  adcon0          1    wreg     unsigned char 
  3264 ;;  adcon1          1    4[COMMON] unsigned char 
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;  adcon0          1    5[COMMON] unsigned char 
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  1    wreg      unsigned char 
  3269 ;; Registers used:
  3270 ;;		wreg, status,2, status,0, pclath, cstack
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3276 ;;      Params:         1       0       0       0
  3277 ;;      Locals:         1       0       0       0
  3278 ;;      Temps:          0       0       0       0
  3279 ;;      Totals:         2       0       0       0
  3280 ;;Total ram usage:        2 bytes
  3281 ;; Hardware stack levels used:    1
  3282 ;; Hardware stack levels required when called:    3
  3283 ;; This function calls:
  3284 ;;		_Timeout_Counter
  3285 ;;		_set_TimeoutCleared
  3286 ;; This function is called by:
  3287 ;;		_getCDS_AD
  3288 ;;		_getLoad_AD
  3289 ;;		_getTemp_AD
  3290 ;;		_getPIR_AD
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           
  3295                           ;psect for function _getAD
  3296  0C85                     _getAD:	
  3297                           
  3298                           ;incstack = 0
  3299                           ; Regs used in _getAD: [wreg+status,2+status,0+pclath+cstack]
  3300                           ;getAD@adcon0 stored from wreg
  3301  0C85  00F5               	movwf	getAD@adcon0
  3302                           
  3303                           ;MCU_B1.c: 435: ADCON0 = adcon0;
  3304  0C86  0875               	movf	getAD@adcon0,w
  3305  0C87  1283               	bcf	3,5	;RP0=0, select bank0
  3306  0C88  1303               	bcf	3,6	;RP1=0, select bank0
  3307  0C89  009F               	movwf	31	;volatile
  3308                           
  3309                           ;MCU_B1.c: 436: ADCON1 = adcon1;
  3310  0C8A  0874               	movf	getAD@adcon1,w
  3311  0C8B  1683               	bsf	3,5	;RP0=1, select bank1
  3312  0C8C  1303               	bcf	3,6	;RP1=0, select bank1
  3313  0C8D  009F               	movwf	31	;volatile
  3314                           
  3315                           ;MCU_B1.c: 437: GO_nDONE = 1;
  3316  0C8E  1283               	bcf	3,5	;RP0=0, select bank0
  3317  0C8F  1303               	bcf	3,6	;RP1=0, select bank0
  3318  0C90  149F               	bsf	31,1	;volatile
  3319                           
  3320                           ;MCU_B1.c: 438: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  3321  0C91  2C95               	goto	l4720
  3322  0C92                     l4718:	
  3323                           
  3324                           ;MCU_B1.c: 439: Timeout_Counter();
  3325  0C92  158A  2395  158A   	fcall	_Timeout_Counter
  3326  0C95                     l4720:	
  3327  0C95  1283               	bcf	3,5	;RP0=0, select bank0
  3328  0C96  1303               	bcf	3,6	;RP1=0, select bank0
  3329  0C97  1C9F               	btfss	31,1	;volatile
  3330  0C98  2C9B               	goto	l4724
  3331  0C99  1D27               	btfss	_myMain+2,2
  3332  0C9A  2C92               	goto	l4718
  3333  0C9B                     l4724:	
  3334                           
  3335                           ;MCU_B1.c: 440: };
  3336                           ;MCU_B1.c: 441: set_TimeoutCleared();
  3337  0C9B  158A  22BC         	fcall	_set_TimeoutCleared
  3338                           
  3339                           ;MCU_B1.c: 442: return ADRES;
  3340  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  3341  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  3342  0C9F  081E               	movf	30,w	;volatile
  3343  0CA0  0008               	return
  3344  0CA1                     __end_of_getAD:	
  3345                           
  3346                           	psect	text8
  3347  0ABC                     __ptext8:	
  3348 ;; *************** function _set_TimeoutCleared *****************
  3349 ;; Defined at:
  3350 ;;		line 281 in file "../src/Main_B1.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;		None
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;		None
  3355 ;; Return value:  Size  Location     Type
  3356 ;;		None               void
  3357 ;; Registers used:
  3358 ;;		status,2
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3364 ;;      Params:         0       0       0       0
  3365 ;;      Locals:         0       0       0       0
  3366 ;;      Temps:          0       0       0       0
  3367 ;;      Totals:         0       0       0       0
  3368 ;;Total ram usage:        0 bytes
  3369 ;; Hardware stack levels used:    1
  3370 ;; Hardware stack levels required when called:    2
  3371 ;; This function calls:
  3372 ;;		Nothing
  3373 ;; This function is called by:
  3374 ;;		_getAD
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377                           
  3378                           
  3379                           ;psect for function _set_TimeoutCleared
  3380  0ABC                     _set_TimeoutCleared:	
  3381                           
  3382                           ;Main_B1.c: 282: myMain.Timeout = 0;
  3383                           
  3384                           ;incstack = 0
  3385                           ; Regs used in _set_TimeoutCleared: [status,2]
  3386  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  3387  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  3388  0ABE  1127               	bcf	_myMain+2,2
  3389                           
  3390                           ;Main_B1.c: 283: myMain.Timeout_Counter = 0;
  3391  0ABF  01A8               	clrf	_myMain+3
  3392  0AC0  01A9               	clrf	_myMain+4
  3393  0AC1  0008               	return
  3394  0AC2                     __end_of_set_TimeoutCleared:	
  3395                           
  3396                           	psect	text9
  3397  0B95                     __ptext9:	
  3398 ;; *************** function _Timeout_Counter *****************
  3399 ;; Defined at:
  3400 ;;		line 272 in file "../src/Main_B1.c"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;		None
  3403 ;; Auto vars:     Size  Location     Type
  3404 ;;		None
  3405 ;; Return value:  Size  Location     Type
  3406 ;;		None               void
  3407 ;; Registers used:
  3408 ;;		wreg, status,2
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3414 ;;      Params:         0       0       0       0
  3415 ;;      Locals:         0       0       0       0
  3416 ;;      Temps:          0       0       0       0
  3417 ;;      Totals:         0       0       0       0
  3418 ;;Total ram usage:        0 bytes
  3419 ;; Hardware stack levels used:    1
  3420 ;; Hardware stack levels required when called:    2
  3421 ;; This function calls:
  3422 ;;		Nothing
  3423 ;; This function is called by:
  3424 ;;		_getAD
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           
  3428                           
  3429                           ;psect for function _Timeout_Counter
  3430  0B95                     _Timeout_Counter:	
  3431                           
  3432                           ;Main_B1.c: 273: myMain.Timeout_Counter++;
  3433                           
  3434                           ;incstack = 0
  3435                           ; Regs used in _Timeout_Counter: [wreg+status,2]
  3436  0B95  3001               	movlw	1
  3437  0B96  1283               	bcf	3,5	;RP0=0, select bank0
  3438  0B97  1303               	bcf	3,6	;RP1=0, select bank0
  3439  0B98  07A8               	addwf	_myMain+3,f
  3440  0B99  1803               	skipnc
  3441  0B9A  0AA9               	incf	_myMain+4,f
  3442  0B9B  3000               	movlw	0
  3443  0B9C  07A9               	addwf	_myMain+4,f
  3444                           
  3445                           ;Main_B1.c: 274: if (myMain.Timeout_Counter == 25000) {
  3446  0B9D  3061               	movlw	97
  3447  0B9E  0629               	xorwf	_myMain+4,w
  3448  0B9F  1D03               	skipz
  3449  0BA0  2BA3               	goto	u5275
  3450  0BA1  30A8               	movlw	168
  3451  0BA2  0628               	xorwf	_myMain+3,w
  3452  0BA3                     u5275:	
  3453  0BA3  1D03               	skipz
  3454  0BA4  0008               	return
  3455                           
  3456                           ;Main_B1.c: 275: myMain.Timeout_Counter = 0;
  3457  0BA5  01A8               	clrf	_myMain+3
  3458  0BA6  01A9               	clrf	_myMain+4
  3459                           
  3460                           ;Main_B1.c: 276: myMain.Timeout = 1;
  3461  0BA7  1527               	bsf	_myMain+2,2
  3462  0BA8  0008               	return
  3463  0BA9                     __end_of_Timeout_Counter:	
  3464                           
  3465                           	psect	text10
  3466  0B72                     __ptext10:	
  3467 ;; *************** function _WDT_Main *****************
  3468 ;; Defined at:
  3469 ;;		line 1116 in file "../src/MCU_B1.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;		None
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;		None
  3474 ;; Return value:  Size  Location     Type
  3475 ;;		None               void
  3476 ;; Registers used:
  3477 ;;		wreg, status,2, status,0, pclath, cstack
  3478 ;; Tracked objects:
  3479 ;;		On entry : 0/0
  3480 ;;		On exit  : 0/0
  3481 ;;		Unchanged: 0/0
  3482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3483 ;;      Params:         0       0       0       0
  3484 ;;      Locals:         0       0       0       0
  3485 ;;      Temps:          1       0       0       0
  3486 ;;      Totals:         1       0       0       0
  3487 ;;Total ram usage:        1 bytes
  3488 ;; Hardware stack levels used:    1
  3489 ;; Hardware stack levels required when called:    3
  3490 ;; This function calls:
  3491 ;;		_WDT_Clearing
  3492 ;; This function is called by:
  3493 ;;		_main
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           
  3498                           ;psect for function _WDT_Main
  3499  0B72                     _WDT_Main:	
  3500                           
  3501                           ;MCU_B1.c: 1117: if (WDT.Enable == 1) {
  3502                           
  3503                           ;incstack = 0
  3504                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  3505  0B72  1283               	bcf	3,5	;RP0=0, select bank0
  3506  0B73  1303               	bcf	3,6	;RP1=0, select bank0
  3507  0B74  1C35               	btfss	_WDT,0
  3508  0B75  0008               	return
  3509                           
  3510                           ;MCU_B1.c: 1118: if (WDT.Timer-- > 0) {
  3511  0B76  3001               	movlw	1
  3512  0B77  02B6               	subwf	_WDT+1,f
  3513  0B78  0836               	movf	_WDT+1,w
  3514  0B79  3AFF               	xorlw	255
  3515  0B7A  1903               	skipnz
  3516  0B7B  0008               	return
  3517                           
  3518                           ;MCU_B1.c: 1119: WDT.Timer = 100;
  3519  0B7C  3064               	movlw	100
  3520  0B7D  00F4               	movwf	??_WDT_Main
  3521  0B7E  0874               	movf	??_WDT_Main,w
  3522  0B7F  00B6               	movwf	_WDT+1
  3523                           
  3524                           ;MCU_B1.c: 1120: WDT_Clearing();
  3525  0B80  118A  2002         	fcall	_WDT_Clearing
  3526  0B82  0008               	return
  3527  0B83                     __end_of_WDT_Main:	
  3528                           
  3529                           	psect	text11
  3530  0002                     __ptext11:	
  3531 ;; *************** function _WDT_Clearing *****************
  3532 ;; Defined at:
  3533 ;;		line 1126 in file "../src/MCU_B1.c"
  3534 ;; Parameters:    Size  Location     Type
  3535 ;;		None
  3536 ;; Auto vars:     Size  Location     Type
  3537 ;;		None
  3538 ;; Return value:  Size  Location     Type
  3539 ;;		None               void
  3540 ;; Registers used:
  3541 ;;		None
  3542 ;; Tracked objects:
  3543 ;;		On entry : 0/0
  3544 ;;		On exit  : 0/0
  3545 ;;		Unchanged: 0/0
  3546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3547 ;;      Params:         0       0       0       0
  3548 ;;      Locals:         0       0       0       0
  3549 ;;      Temps:          0       0       0       0
  3550 ;;      Totals:         0       0       0       0
  3551 ;;Total ram usage:        0 bytes
  3552 ;; Hardware stack levels used:    1
  3553 ;; Hardware stack levels required when called:    2
  3554 ;; This function calls:
  3555 ;;		Nothing
  3556 ;; This function is called by:
  3557 ;;		_WDT_Main
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           
  3561                           
  3562                           ;psect for function _WDT_Clearing
  3563  0002                     _WDT_Clearing:	
  3564                           
  3565                           ;incstack = 0
  3566                           ; Regs used in _WDT_Clearing: []
  3567  0002  0064               	clrwdt	;# 
  3568  0003  0008               	return
  3569  0004                     __end_of_WDT_Clearing:	
  3570                           
  3571                           	psect	text12
  3572  0A9C                     __ptext12:	
  3573 ;; *************** function _Temp_Main *****************
  3574 ;; Defined at:
  3575 ;;		line 57 in file "../src/OverTemperature_B1.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;		None
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;		None
  3580 ;; Return value:  Size  Location     Type
  3581 ;;		None               void
  3582 ;; Registers used:
  3583 ;;		wreg, status,2, status,0, pclath, cstack
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3589 ;;      Params:         0       0       0       0
  3590 ;;      Locals:         0       0       0       0
  3591 ;;      Temps:          0       0       0       0
  3592 ;;      Totals:         0       0       0       0
  3593 ;;Total ram usage:        0 bytes
  3594 ;; Hardware stack levels used:    1
  3595 ;; Hardware stack levels required when called:    4
  3596 ;; This function calls:
  3597 ;;		_setTemp_Main
  3598 ;; This function is called by:
  3599 ;;		_main
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           
  3603                           
  3604                           ;psect for function _Temp_Main
  3605  0A9C                     _Temp_Main:	
  3606                           
  3607                           ;OverTemperature_B1.c: 59: setTemp_Main();
  3608                           
  3609                           ;incstack = 0
  3610                           ; Regs used in _Temp_Main: [wreg+status,2+status,0+pclath+cstack]
  3611  0A9C  118A  2709         	fcall	_setTemp_Main
  3612  0A9E  0008               	return
  3613  0A9F                     __end_of_Temp_Main:	
  3614                           
  3615                           	psect	text13
  3616  0709                     __ptext13:	
  3617 ;; *************** function _setTemp_Main *****************
  3618 ;; Defined at:
  3619 ;;		line 64 in file "../src/OverTemperature_B1.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;		None
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;  AD              1   10[BANK0 ] unsigned char 
  3624 ;;  DangerValue     1    9[BANK0 ] unsigned char 
  3625 ;;  SafeValue       1    8[BANK0 ] unsigned char 
  3626 ;;  TempGO          1    7[BANK0 ] unsigned char 
  3627 ;;  error           1    6[BANK0 ] unsigned char 
  3628 ;; Return value:  Size  Location     Type
  3629 ;;		None               void
  3630 ;; Registers used:
  3631 ;;		wreg, status,2, status,0, pclath, cstack
  3632 ;; Tracked objects:
  3633 ;;		On entry : 0/0
  3634 ;;		On exit  : 0/0
  3635 ;;		Unchanged: 0/0
  3636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3637 ;;      Params:         0       0       0       0
  3638 ;;      Locals:         0       5       0       0
  3639 ;;      Temps:          1       0       0       0
  3640 ;;      Totals:         1       5       0       0
  3641 ;;Total ram usage:        6 bytes
  3642 ;; Hardware stack levels used:    1
  3643 ;; Hardware stack levels required when called:    3
  3644 ;; This function calls:
  3645 ;;		_getMain_All_Error_Status
  3646 ;;		_getMain_All_LightsStatus
  3647 ;; This function is called by:
  3648 ;;		_Temp_Main
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           
  3652                           
  3653                           ;psect for function _setTemp_Main
  3654  0709                     _setTemp_Main:	
  3655                           
  3656                           ;OverTemperature_B1.c: 65: char error = getMain_All_Error_Status(0);
  3657                           
  3658                           ;incstack = 0
  3659                           ; Regs used in _setTemp_Main: [wreg+status,2+status,0+pclath+cstack]
  3660  0709  3000               	movlw	0
  3661  070A  158A  25AE  118A   	fcall	_getMain_All_Error_Status
  3662  070D  00F5               	movwf	??_setTemp_Main
  3663  070E  0875               	movf	??_setTemp_Main,w
  3664  070F  1283               	bcf	3,5	;RP0=0, select bank0
  3665  0710  1303               	bcf	3,6	;RP1=0, select bank0
  3666  0711  00D7               	movwf	setTemp_Main@error
  3667                           
  3668                           ;OverTemperature_B1.c: 66: ADtype SafeValue = 0, DangerValue = 0, AD;
  3669  0712  01D9               	clrf	setTemp_Main@SafeValue
  3670  0713  01DA               	clrf	setTemp_Main@DangerValue
  3671                           
  3672                           ;OverTemperature_B1.c: 67: char TempGO = getMain_All_LightsStatus();
  3673  0714  158A  22F1  118A   	fcall	_getMain_All_LightsStatus
  3674  0717  00F5               	movwf	??_setTemp_Main
  3675  0718  0875               	movf	??_setTemp_Main,w
  3676  0719  1283               	bcf	3,5	;RP0=0, select bank0
  3677  071A  1303               	bcf	3,6	;RP1=0, select bank0
  3678  071B  00D8               	movwf	setTemp_Main@TempGO
  3679                           
  3680                           ;OverTemperature_B1.c: 69: if (Temp.Enable == 1) {
  3681  071C  1C39               	btfss	_Temp,0
  3682  071D  2F80               	goto	l847
  3683                           
  3684                           ;OverTemperature_B1.c: 77: if (Temp.ADtoGO == 0) {
  3685  071E  1939               	btfsc	_Temp,2
  3686  071F  2F3C               	goto	l3610
  3687                           
  3688                           ;OverTemperature_B1.c: 78: if ((TempGO == 1 && Temp.ERROR == 0) || Temp.ERROR == 1) {
  3689  0720  0858               	movf	setTemp_Main@TempGO,w
  3690  0721  3A01               	xorlw	1
  3691  0722  1D03               	skipz
  3692  0723  2F26               	goto	l853
  3693  0724  1CB9               	btfss	_Temp,1
  3694  0725  2F28               	goto	l3602
  3695  0726                     l853:	
  3696  0726  1CB9               	btfss	_Temp,1
  3697  0727  2F39               	goto	l3608
  3698  0728                     l3602:	
  3699                           
  3700                           ;OverTemperature_B1.c: 79: Temp.Time++;
  3701  0728  3001               	movlw	1
  3702  0729  07BA               	addwf	_Temp+1,f
  3703  072A  1803               	skipnc
  3704  072B  0ABB               	incf	_Temp+2,f
  3705  072C  3000               	movlw	0
  3706  072D  07BB               	addwf	_Temp+2,f
  3707                           
  3708                           ;OverTemperature_B1.c: 80: if (Temp.Time >= (5000 / 20)) {
  3709  072E  3000               	movlw	0
  3710  072F  023B               	subwf	_Temp+2,w
  3711  0730  30FA               	movlw	250
  3712  0731  1903               	skipnz
  3713  0732  023A               	subwf	_Temp+1,w
  3714  0733  1C03               	skipc
  3715  0734  0008               	return
  3716                           
  3717                           ;OverTemperature_B1.c: 81: Temp.Time = 0;
  3718  0735  01BA               	clrf	_Temp+1
  3719  0736  01BB               	clrf	_Temp+2
  3720                           
  3721                           ;OverTemperature_B1.c: 82: Temp.ADtoGO = 1;
  3722  0737  1539               	bsf	_Temp,2
  3723                           
  3724                           ;OverTemperature_B1.c: 83: }
  3725                           ;OverTemperature_B1.c: 84: } else {
  3726  0738  0008               	return
  3727  0739                     l3608:	
  3728                           
  3729                           ;OverTemperature_B1.c: 85: Temp.Time = 0;
  3730  0739  01BA               	clrf	_Temp+1
  3731  073A  01BB               	clrf	_Temp+2
  3732                           
  3733                           ;OverTemperature_B1.c: 86: }
  3734                           ;OverTemperature_B1.c: 87: } else {
  3735  073B  0008               	return
  3736  073C                     l3610:	
  3737                           
  3738                           ;OverTemperature_B1.c: 88: Temp.Time++;
  3739  073C  3001               	movlw	1
  3740  073D  07BA               	addwf	_Temp+1,f
  3741  073E  1803               	skipnc
  3742  073F  0ABB               	incf	_Temp+2,f
  3743  0740  3000               	movlw	0
  3744  0741  07BB               	addwf	_Temp+2,f
  3745                           
  3746                           ;OverTemperature_B1.c: 89: if (Temp.Time >= (100 / 20)) {
  3747  0742  3000               	movlw	0
  3748  0743  023B               	subwf	_Temp+2,w
  3749  0744  3005               	movlw	5
  3750  0745  1903               	skipnz
  3751  0746  023A               	subwf	_Temp+1,w
  3752  0747  1C03               	skipc
  3753  0748  0008               	return
  3754                           
  3755                           ;OverTemperature_B1.c: 90: Temp.Time = 0;
  3756  0749  01BA               	clrf	_Temp+1
  3757  074A  01BB               	clrf	_Temp+2
  3758                           
  3759                           ;OverTemperature_B1.c: 95: if (Temp.ADV > 0) {
  3760  074B  083F               	movf	_Temp+6,w
  3761  074C  1903               	btfsc	3,2
  3762  074D  2F7C               	goto	l858
  3763                           
  3764                           ;OverTemperature_B1.c: 96: Temp.ADtoGO = 0;
  3765  074E  1139               	bcf	_Temp,2
  3766                           
  3767                           ;OverTemperature_B1.c: 97: AD = Temp.ADV;
  3768  074F  083F               	movf	_Temp+6,w
  3769  0750  00F5               	movwf	??_setTemp_Main
  3770  0751  0875               	movf	??_setTemp_Main,w
  3771  0752  00DB               	movwf	setTemp_Main@AD
  3772                           
  3773                           ;OverTemperature_B1.c: 106: SafeValue = 0x50;
  3774  0753  3050               	movlw	80
  3775  0754  00F5               	movwf	??_setTemp_Main
  3776  0755  0875               	movf	??_setTemp_Main,w
  3777  0756  00D9               	movwf	setTemp_Main@SafeValue
  3778                           
  3779                           ;OverTemperature_B1.c: 107: DangerValue = 0x76;
  3780  0757  3076               	movlw	118
  3781  0758  00F5               	movwf	??_setTemp_Main
  3782  0759  0875               	movf	??_setTemp_Main,w
  3783  075A  00DA               	movwf	setTemp_Main@DangerValue
  3784                           
  3785                           ;OverTemperature_B1.c: 119: if (Temp.ERROR == 1) {
  3786  075B  1CB9               	btfss	_Temp,1
  3787  075C  2F6C               	goto	l3634
  3788                           
  3789                           ;OverTemperature_B1.c: 120: if (AD >= SafeValue) {
  3790  075D  0859               	movf	setTemp_Main@SafeValue,w
  3791  075E  025B               	subwf	setTemp_Main@AD,w
  3792  075F  1C03               	skipc
  3793  0760  2F7B               	goto	l3644
  3794                           
  3795                           ;OverTemperature_B1.c: 121: Temp.Count++;
  3796  0761  3001               	movlw	1
  3797  0762  00F5               	movwf	??_setTemp_Main
  3798  0763  0875               	movf	??_setTemp_Main,w
  3799  0764  07BC               	addwf	_Temp+3,f
  3800                           
  3801                           ;OverTemperature_B1.c: 122: if (Temp.Count >= 3) {
  3802  0765  3003               	movlw	3
  3803  0766  023C               	subwf	_Temp+3,w
  3804  0767  1C03               	skipc
  3805  0768  2F7C               	goto	l858
  3806                           
  3807                           ;OverTemperature_B1.c: 123: Temp.Count = 0;
  3808  0769  01BC               	clrf	_Temp+3
  3809                           
  3810                           ;OverTemperature_B1.c: 124: Temp.ERROR = 0;
  3811  076A  10B9               	bcf	_Temp,1
  3812                           
  3813                           ;OverTemperature_B1.c: 126: }
  3814                           ;OverTemperature_B1.c: 127: } else {
  3815                           
  3816                           ;OverTemperature_B1.c: 125: ;;
  3817  076B  2F7C               	goto	l858
  3818  076C                     l3634:	
  3819                           ;OverTemperature_B1.c: 129: }
  3820                           ;OverTemperature_B1.c: 130: } else {
  3821                           
  3822                           ;OverTemperature_B1.c: 128: Temp.Count = 0;
  3823                           
  3824                           
  3825                           ;OverTemperature_B1.c: 131: if (AD <= DangerValue) {
  3826  076C  085B               	movf	setTemp_Main@AD,w
  3827  076D  025A               	subwf	setTemp_Main@DangerValue,w
  3828  076E  1C03               	skipc
  3829  076F  2F7B               	goto	l3644
  3830                           
  3831                           ;OverTemperature_B1.c: 132: Temp.Count++;
  3832  0770  3001               	movlw	1
  3833  0771  00F5               	movwf	??_setTemp_Main
  3834  0772  0875               	movf	??_setTemp_Main,w
  3835  0773  07BC               	addwf	_Temp+3,f
  3836                           
  3837                           ;OverTemperature_B1.c: 133: if (Temp.Count >= 3) {
  3838  0774  3003               	movlw	3
  3839  0775  023C               	subwf	_Temp+3,w
  3840  0776  1C03               	skipc
  3841  0777  2F7C               	goto	l858
  3842                           
  3843                           ;OverTemperature_B1.c: 134: Temp.Count = 0;
  3844  0778  01BC               	clrf	_Temp+3
  3845                           
  3846                           ;OverTemperature_B1.c: 135: Temp.ERROR = 1;
  3847  0779  14B9               	bsf	_Temp,1
  3848                           
  3849                           ;OverTemperature_B1.c: 136: }
  3850                           ;OverTemperature_B1.c: 137: } else {
  3851  077A  2F7C               	goto	l858
  3852  077B                     l3644:	
  3853                           
  3854                           ;OverTemperature_B1.c: 138: Temp.Count = 0;
  3855  077B  01BC               	clrf	_Temp+3
  3856  077C                     l858:	
  3857                           ;OverTemperature_B1.c: 139: }
  3858                           ;OverTemperature_B1.c: 140: }
  3859                           ;OverTemperature_B1.c: 141: ;;
  3860                           ;OverTemperature_B1.c: 142: ;;
  3861                           
  3862                           
  3863                           ;OverTemperature_B1.c: 158: }
  3864                           ;OverTemperature_B1.c: 159: Temp.ADH[0] = 0;
  3865  077C  01BD               	clrf	_Temp+4
  3866                           
  3867                           ;OverTemperature_B1.c: 160: Temp.ADH[1] = 0;
  3868  077D  01BE               	clrf	_Temp+5
  3869                           
  3870                           ;OverTemperature_B1.c: 161: Temp.ADV = 0;
  3871  077E  01BF               	clrf	_Temp+6
  3872                           
  3873                           ;OverTemperature_B1.c: 162: }
  3874                           ;OverTemperature_B1.c: 163: }
  3875                           ;OverTemperature_B1.c: 166: } else {
  3876  077F  0008               	return
  3877  0780                     l847:	
  3878                           
  3879                           ;OverTemperature_B1.c: 167: if (myMain.PowerON == 1) {
  3880  0780  1C25               	btfss	_myMain,0
  3881  0781  0008               	return
  3882                           
  3883                           ;OverTemperature_B1.c: 168: Temp.Enable = 1;
  3884  0782  1439               	bsf	_Temp,0
  3885  0783  0008               	return
  3886  0784                     __end_of_setTemp_Main:	
  3887                           
  3888                           	psect	text14
  3889  0A99                     __ptext14:	
  3890 ;; *************** function _Temp_Initialization *****************
  3891 ;; Defined at:
  3892 ;;		line 8 in file "../src/OverTemperature_B1.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;		None
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;		None
  3897 ;; Return value:  Size  Location     Type
  3898 ;;		None               void
  3899 ;; Registers used:
  3900 ;;		status,2, status,0, pclath, cstack
  3901 ;; Tracked objects:
  3902 ;;		On entry : 0/0
  3903 ;;		On exit  : 0/0
  3904 ;;		Unchanged: 0/0
  3905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3906 ;;      Params:         0       0       0       0
  3907 ;;      Locals:         0       0       0       0
  3908 ;;      Temps:          0       0       0       0
  3909 ;;      Totals:         0       0       0       0
  3910 ;;Total ram usage:        0 bytes
  3911 ;; Hardware stack levels used:    1
  3912 ;; Hardware stack levels required when called:    3
  3913 ;; This function calls:
  3914 ;;		_setTemp_Initialization
  3915 ;; This function is called by:
  3916 ;;		_main
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           
  3921                           ;psect for function _Temp_Initialization
  3922  0A99                     _Temp_Initialization:	
  3923                           
  3924                           ;OverTemperature_B1.c: 10: setTemp_Initialization();
  3925                           
  3926                           ;incstack = 0
  3927                           ; Regs used in _Temp_Initialization: [status,2+status,0+pclath+cstack]
  3928  0A99  158A  228B         	fcall	_setTemp_Initialization
  3929  0A9B  0008               	return
  3930  0A9C                     __end_of_Temp_Initialization:	
  3931                           
  3932                           	psect	text15
  3933  0A8B                     __ptext15:	
  3934 ;; *************** function _setTemp_Initialization *****************
  3935 ;; Defined at:
  3936 ;;		line 52 in file "../src/OverTemperature_B1.c"
  3937 ;; Parameters:    Size  Location     Type
  3938 ;;		None
  3939 ;; Auto vars:     Size  Location     Type
  3940 ;;		None
  3941 ;; Return value:  Size  Location     Type
  3942 ;;		None               void
  3943 ;; Registers used:
  3944 ;;		None
  3945 ;; Tracked objects:
  3946 ;;		On entry : 0/0
  3947 ;;		On exit  : 0/0
  3948 ;;		Unchanged: 0/0
  3949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3950 ;;      Params:         0       0       0       0
  3951 ;;      Locals:         0       0       0       0
  3952 ;;      Temps:          0       0       0       0
  3953 ;;      Totals:         0       0       0       0
  3954 ;;Total ram usage:        0 bytes
  3955 ;; Hardware stack levels used:    1
  3956 ;; Hardware stack levels required when called:    2
  3957 ;; This function calls:
  3958 ;;		Nothing
  3959 ;; This function is called by:
  3960 ;;		_Temp_Initialization
  3961 ;; This function uses a non-reentrant model
  3962 ;;
  3963                           
  3964                           
  3965                           ;psect for function _setTemp_Initialization
  3966  0A8B                     _setTemp_Initialization:	
  3967                           
  3968                           ;incstack = 0
  3969                           ; Regs used in _setTemp_Initialization: []
  3970  0A8B  0008               	return
  3971  0A8C                     __end_of_setTemp_Initialization:	
  3972                           
  3973                           	psect	text16
  3974  0A96                     __ptext16:	
  3975 ;; *************** function _SYSC_Main *****************
  3976 ;; Defined at:
  3977 ;;		line 17 in file "../src/SYSC_B1.c"
  3978 ;; Parameters:    Size  Location     Type
  3979 ;;		None
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;		None
  3982 ;; Return value:  Size  Location     Type
  3983 ;;		None               void
  3984 ;; Registers used:
  3985 ;;		wreg, status,2, status,0, pclath, cstack
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3991 ;;      Params:         0       0       0       0
  3992 ;;      Locals:         0       0       0       0
  3993 ;;      Temps:          0       0       0       0
  3994 ;;      Totals:         0       0       0       0
  3995 ;;Total ram usage:        0 bytes
  3996 ;; Hardware stack levels used:    1
  3997 ;; Hardware stack levels required when called:    4
  3998 ;; This function calls:
  3999 ;;		_setSYSC_Main
  4000 ;; This function is called by:
  4001 ;;		_main
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005                           
  4006                           ;psect for function _SYSC_Main
  4007  0A96                     _SYSC_Main:	
  4008                           
  4009                           ;SYSC_B1.c: 19: setSYSC_Main();
  4010                           
  4011                           ;incstack = 0
  4012                           ; Regs used in _SYSC_Main: [wreg+status,2+status,0+pclath+cstack]
  4013  0A96  158A  262C         	fcall	_setSYSC_Main
  4014  0A98  0008               	return
  4015  0A99                     __end_of_SYSC_Main:	
  4016                           
  4017                           	psect	text17
  4018  0E2C                     __ptext17:	
  4019 ;; *************** function _setSYSC_Main *****************
  4020 ;; Defined at:
  4021 ;;		line 23 in file "../src/SYSC_B1.c"
  4022 ;; Parameters:    Size  Location     Type
  4023 ;;		None
  4024 ;; Auto vars:     Size  Location     Type
  4025 ;;		None
  4026 ;; Return value:  Size  Location     Type
  4027 ;;		None               void
  4028 ;; Registers used:
  4029 ;;		wreg, status,2, status,0, pclath, cstack
  4030 ;; Tracked objects:
  4031 ;;		On entry : 0/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4035 ;;      Params:         0       0       0       0
  4036 ;;      Locals:         0       0       0       0
  4037 ;;      Temps:          0       0       0       0
  4038 ;;      Totals:         0       0       0       0
  4039 ;;Total ram usage:        0 bytes
  4040 ;; Hardware stack levels used:    1
  4041 ;; Hardware stack levels required when called:    3
  4042 ;; This function calls:
  4043 ;;		_getMain_All_Error_Status
  4044 ;; This function is called by:
  4045 ;;		_SYSC_Main
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           
  4050                           ;psect for function _setSYSC_Main
  4051  0E2C                     _setSYSC_Main:	
  4052                           
  4053                           ;SYSC_B1.c: 25: if (SYSC.Enable == 1) {
  4054                           
  4055                           ;incstack = 0
  4056                           ; Regs used in _setSYSC_Main: [wreg+status,2+status,0+pclath+cstack]
  4057  0E2C  1283               	bcf	3,5	;RP0=0, select bank0
  4058  0E2D  1303               	bcf	3,6	;RP1=0, select bank0
  4059  0E2E  1C20               	btfss	_SYSC,0
  4060  0E2F  0008               	return
  4061                           
  4062                           ;SYSC_B1.c: 26: if (SYSC.ERROR == 0) {
  4063  0E30  18A0               	btfsc	_SYSC,1
  4064  0E31  2E43               	goto	l3660
  4065                           
  4066                           ;SYSC_B1.c: 27: SYSC.Time++;
  4067  0E32  3001               	movlw	1
  4068  0E33  07A1               	addwf	_SYSC+1,f
  4069  0E34  1803               	skipnc
  4070  0E35  0AA2               	incf	_SYSC+2,f
  4071  0E36  3000               	movlw	0
  4072  0E37  07A2               	addwf	_SYSC+2,f
  4073                           
  4074                           ;SYSC_B1.c: 28: if (SYSC.Time >= (500 / 20)) {
  4075  0E38  3000               	movlw	0
  4076  0E39  0222               	subwf	_SYSC+2,w
  4077  0E3A  3019               	movlw	25
  4078  0E3B  1903               	skipnz
  4079  0E3C  0221               	subwf	_SYSC+1,w
  4080  0E3D  1C03               	skipc
  4081  0E3E  0008               	return
  4082                           
  4083                           ;SYSC_B1.c: 29: SYSC.Time = 0;
  4084  0E3F  01A1               	clrf	_SYSC+1
  4085  0E40  01A2               	clrf	_SYSC+2
  4086                           
  4087                           ;SYSC_B1.c: 30: SYSC.ERROR = 1;
  4088  0E41  14A0               	bsf	_SYSC,1
  4089                           
  4090                           ;SYSC_B1.c: 31: }
  4091                           ;SYSC_B1.c: 32: } else {
  4092  0E42  0008               	return
  4093  0E43                     l3660:	
  4094                           
  4095                           ;SYSC_B1.c: 33: if (getMain_All_Error_Status(1) == 0) {
  4096  0E43  3001               	movlw	1
  4097  0E44  158A  25AE  158A   	fcall	_getMain_All_Error_Status
  4098  0E47  3800               	iorlw	0
  4099  0E48  1D03               	skipz
  4100  0E49  0008               	return
  4101                           
  4102                           ;SYSC_B1.c: 34: SYSC.Time++;
  4103  0E4A  3001               	movlw	1
  4104  0E4B  1283               	bcf	3,5	;RP0=0, select bank0
  4105  0E4C  1303               	bcf	3,6	;RP1=0, select bank0
  4106  0E4D  07A1               	addwf	_SYSC+1,f
  4107  0E4E  1803               	skipnc
  4108  0E4F  0AA2               	incf	_SYSC+2,f
  4109  0E50  3000               	movlw	0
  4110  0E51  07A2               	addwf	_SYSC+2,f
  4111                           
  4112                           ;SYSC_B1.c: 35: if (SYSC.Time >= (500 / 20)) {
  4113  0E52  3000               	movlw	0
  4114  0E53  0222               	subwf	_SYSC+2,w
  4115  0E54  3019               	movlw	25
  4116  0E55  1903               	skipnz
  4117  0E56  0221               	subwf	_SYSC+1,w
  4118  0E57  1C03               	skipc
  4119  0E58  2E5E               	goto	l3666
  4120                           
  4121                           ;SYSC_B1.c: 36: SYSC.Time = 0;
  4122  0E59  01A1               	clrf	_SYSC+1
  4123  0E5A  01A2               	clrf	_SYSC+2
  4124                           
  4125                           ;SYSC_B1.c: 37: SYSC.Counter = 0;
  4126  0E5B  01A3               	clrf	_SYSC+3
  4127  0E5C  01A4               	clrf	_SYSC+4
  4128                           
  4129                           ;SYSC_B1.c: 38: } else {
  4130  0E5D  0008               	return
  4131  0E5E                     l3666:	
  4132                           
  4133                           ;SYSC_B1.c: 39: SYSC.Counter++;
  4134  0E5E  3001               	movlw	1
  4135  0E5F  07A3               	addwf	_SYSC+3,f
  4136  0E60  1803               	skipnc
  4137  0E61  0AA4               	incf	_SYSC+4,f
  4138  0E62  3000               	movlw	0
  4139  0E63  07A4               	addwf	_SYSC+4,f
  4140                           
  4141                           ;SYSC_B1.c: 40: if (SYSC.Counter == (10000 / 20)) {
  4142  0E64  3001               	movlw	1
  4143  0E65  0624               	xorwf	_SYSC+4,w
  4144  0E66  1D03               	skipz
  4145  0E67  2E6A               	goto	u3445
  4146  0E68  30F4               	movlw	244
  4147  0E69  0623               	xorwf	_SYSC+3,w
  4148  0E6A                     u3445:	
  4149  0E6A  1D03               	skipz
  4150  0E6B  0008               	return
  4151                           
  4152                           ;SYSC_B1.c: 41: SYSC.Counter = 0;
  4153  0E6C  01A3               	clrf	_SYSC+3
  4154  0E6D  01A4               	clrf	_SYSC+4
  4155                           
  4156                           ;SYSC_B1.c: 42: SYSC.ERROR = 0;
  4157  0E6E  10A0               	bcf	_SYSC,1
  4158  0E6F  0008               	return
  4159  0E70                     __end_of_setSYSC_Main:	
  4160                           
  4161                           	psect	text18
  4162  0A93                     __ptext18:	
  4163 ;; *************** function _SYSC_Initialization *****************
  4164 ;; Defined at:
  4165 ;;		line 7 in file "../src/SYSC_B1.c"
  4166 ;; Parameters:    Size  Location     Type
  4167 ;;		None
  4168 ;; Auto vars:     Size  Location     Type
  4169 ;;		None
  4170 ;; Return value:  Size  Location     Type
  4171 ;;		None               void
  4172 ;; Registers used:
  4173 ;;		status,2, status,0, pclath, cstack
  4174 ;; Tracked objects:
  4175 ;;		On entry : 0/0
  4176 ;;		On exit  : 0/0
  4177 ;;		Unchanged: 0/0
  4178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4179 ;;      Params:         0       0       0       0
  4180 ;;      Locals:         0       0       0       0
  4181 ;;      Temps:          0       0       0       0
  4182 ;;      Totals:         0       0       0       0
  4183 ;;Total ram usage:        0 bytes
  4184 ;; Hardware stack levels used:    1
  4185 ;; Hardware stack levels required when called:    3
  4186 ;; This function calls:
  4187 ;;		_setSYSC_Initialization
  4188 ;; This function is called by:
  4189 ;;		_main
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           
  4193                           
  4194                           ;psect for function _SYSC_Initialization
  4195  0A93                     _SYSC_Initialization:	
  4196                           
  4197                           ;SYSC_B1.c: 9: setSYSC_Initialization();
  4198                           
  4199                           ;incstack = 0
  4200                           ; Regs used in _SYSC_Initialization: [status,2+status,0+pclath+cstack]
  4201  0A93  158A  22A7         	fcall	_setSYSC_Initialization
  4202  0A95  0008               	return
  4203  0A96                     __end_of_SYSC_Initialization:	
  4204                           
  4205                           	psect	text19
  4206  0AA7                     __ptext19:	
  4207 ;; *************** function _setSYSC_Initialization *****************
  4208 ;; Defined at:
  4209 ;;		line 13 in file "../src/SYSC_B1.c"
  4210 ;; Parameters:    Size  Location     Type
  4211 ;;		None
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;		None
  4214 ;; Return value:  Size  Location     Type
  4215 ;;		None               void
  4216 ;; Registers used:
  4217 ;;		None
  4218 ;; Tracked objects:
  4219 ;;		On entry : 0/0
  4220 ;;		On exit  : 0/0
  4221 ;;		Unchanged: 0/0
  4222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4223 ;;      Params:         0       0       0       0
  4224 ;;      Locals:         0       0       0       0
  4225 ;;      Temps:          0       0       0       0
  4226 ;;      Totals:         0       0       0       0
  4227 ;;Total ram usage:        0 bytes
  4228 ;; Hardware stack levels used:    1
  4229 ;; Hardware stack levels required when called:    2
  4230 ;; This function calls:
  4231 ;;		Nothing
  4232 ;; This function is called by:
  4233 ;;		_SYSC_Initialization
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237                           
  4238                           ;psect for function _setSYSC_Initialization
  4239  0AA7                     _setSYSC_Initialization:	
  4240                           
  4241                           ;SYSC_B1.c: 14: SYSC.Enable = 1;
  4242                           
  4243                           ;incstack = 0
  4244                           ; Regs used in _setSYSC_Initialization: []
  4245  0AA7  1283               	bcf	3,5	;RP0=0, select bank0
  4246  0AA8  1303               	bcf	3,6	;RP1=0, select bank0
  4247  0AA9  1420               	bsf	_SYSC,0
  4248  0AAA  0008               	return
  4249  0AAB                     __end_of_setSYSC_Initialization:	
  4250                           
  4251                           	psect	text20
  4252  0026                     __ptext20:	
  4253 ;; *************** function _PIR_Main *****************
  4254 ;; Defined at:
  4255 ;;		line 13 in file "../src/PIR_B1.c"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;		None
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;  LightsStatus    1   17[BANK0 ] unsigned char 
  4260 ;;  TriggerValue    1   16[BANK0 ] unsigned char 
  4261 ;;  Enable_Switc    1   13[BANK0 ] unsigned char 
  4262 ;;  cds             1   12[BANK0 ] unsigned char 
  4263 ;;  error           1   11[BANK0 ] unsigned char 
  4264 ;; Return value:  Size  Location     Type
  4265 ;;		None               void
  4266 ;; Registers used:
  4267 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4268 ;; Tracked objects:
  4269 ;;		On entry : 0/0
  4270 ;;		On exit  : 0/0
  4271 ;;		Unchanged: 0/0
  4272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4273 ;;      Params:         0       0       0       0
  4274 ;;      Locals:         0       7       0       0
  4275 ;;      Temps:          0       5       0       0
  4276 ;;      Totals:         0      12       0       0
  4277 ;;Total ram usage:       12 bytes
  4278 ;; Hardware stack levels used:    1
  4279 ;; Hardware stack levels required when called:    5
  4280 ;; This function calls:
  4281 ;;		_getCDS_Status
  4282 ;;		_getLights_Status
  4283 ;;		_getMain_All_Error_Status
  4284 ;;		_setLED
  4285 ;;		_setLights_SwOff
  4286 ;;		_setLights_SwOn
  4287 ;; This function is called by:
  4288 ;;		_main
  4289 ;; This function uses a non-reentrant model
  4290 ;;
  4291                           
  4292                           
  4293                           ;psect for function _PIR_Main
  4294  0026                     _PIR_Main:	
  4295                           
  4296                           ;PIR_B1.c: 14: char error = getMain_All_Error_Status(0);
  4297                           
  4298                           ;incstack = 0
  4299                           ; Regs used in _PIR_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4300  0026  3000               	movlw	0
  4301  0027  158A  25AE  118A   	fcall	_getMain_All_Error_Status
  4302  002A  1283               	bcf	3,5	;RP0=0, select bank0
  4303  002B  1303               	bcf	3,6	;RP1=0, select bank0
  4304  002C  00D7               	movwf	??_PIR_Main
  4305  002D  0857               	movf	??_PIR_Main,w
  4306  002E  00DC               	movwf	PIR_Main@error
  4307                           
  4308                           ;PIR_B1.c: 15: char cds = getCDS_Status();
  4309  002F  158A  22D8  118A   	fcall	_getCDS_Status
  4310  0032  1283               	bcf	3,5	;RP0=0, select bank0
  4311  0033  1303               	bcf	3,6	;RP1=0, select bank0
  4312  0034  00D7               	movwf	??_PIR_Main
  4313  0035  0857               	movf	??_PIR_Main,w
  4314  0036  00DD               	movwf	PIR_Main@cds
  4315                           
  4316                           ;PIR_B1.c: 16: char LightsStatus = 0;
  4317  0037  01E2               	clrf	PIR_Main@LightsStatus
  4318                           
  4319                           ;PIR_B1.c: 17: char Enable_Switch = 1;
  4320  0038  01DE               	clrf	PIR_Main@Enable_Switch
  4321  0039  0ADE               	incf	PIR_Main@Enable_Switch,f
  4322                           
  4323                           ;PIR_B1.c: 18: char TriggerValue = 0;
  4324  003A  01E1               	clrf	PIR_Main@TriggerValue
  4325                           
  4326                           ;PIR_B1.c: 25: LightsStatus = getLights_Status(1);
  4327  003B  3001               	movlw	1
  4328  003C  158A  2361  118A   	fcall	_getLights_Status
  4329  003F  1283               	bcf	3,5	;RP0=0, select bank0
  4330  0040  1303               	bcf	3,6	;RP1=0, select bank0
  4331  0041  00D7               	movwf	??_PIR_Main
  4332  0042  0857               	movf	??_PIR_Main,w
  4333  0043  00E2               	movwf	PIR_Main@LightsStatus
  4334                           
  4335                           ;PIR_B1.c: 35: if (_PIR.Enable == 1) {
  4336  0044  1683               	bsf	3,5	;RP0=1, select bank1
  4337  0045  1303               	bcf	3,6	;RP1=0, select bank1
  4338  0046  1C20               	btfss	__PIR^(0+128),0
  4339  0047  2A0F               	goto	l927
  4340                           
  4341                           ;PIR_B1.c: 36: if (error == 0) {
  4342  0048  1283               	bcf	3,5	;RP0=0, select bank0
  4343  0049  1303               	bcf	3,6	;RP1=0, select bank0
  4344  004A  08DC               	movf	PIR_Main@error,f
  4345  004B  1D03               	skipz
  4346  004C  288B               	goto	l928
  4347                           
  4348                           ;PIR_B1.c: 38: if (cds == 1 && Enable_Switch == 1) {
  4349  004D  085D               	movf	PIR_Main@cds,w
  4350  004E  3A01               	xorlw	1
  4351  004F  1D03               	skipz
  4352  0050  2859               	goto	l929
  4353  0051  085E               	movf	PIR_Main@Enable_Switch,w
  4354  0052  3A01               	xorlw	1
  4355  0053  1D03               	skipz
  4356  0054  2859               	goto	l929
  4357                           
  4358                           ;PIR_B1.c: 39: _PIR.Available = 1;
  4359  0055  1683               	bsf	3,5	;RP0=1, select bank1
  4360  0056  1303               	bcf	3,6	;RP1=0, select bank1
  4361  0057  17A0               	bsf	__PIR^(0+128),7
  4362                           
  4363                           ;PIR_B1.c: 40: } else {
  4364  0058  287B               	goto	l5238
  4365  0059                     l929:	
  4366                           
  4367                           ;PIR_B1.c: 41: _PIR.Available = 0;
  4368  0059  1683               	bsf	3,5	;RP0=1, select bank1
  4369  005A  1303               	bcf	3,6	;RP1=0, select bank1
  4370  005B  13A0               	bcf	__PIR^(0+128),7
  4371                           
  4372                           ;PIR_B1.c: 43: if (_PIR.OK == 1) {
  4373  005C  1DA0               	btfss	__PIR^(0+128),3
  4374  005D  287B               	goto	l5238
  4375                           
  4376                           ;PIR_B1.c: 45: setLED(1, 0);
  4377  005E  1283               	bcf	3,5	;RP0=0, select bank0
  4378  005F  1303               	bcf	3,6	;RP1=0, select bank0
  4379  0060  01D1               	clrf	setLED@command
  4380  0061  3001               	movlw	1
  4381  0062  158A  278F  118A   	fcall	_setLED
  4382                           
  4383                           ;PIR_B1.c: 46: setLED(2, 0);
  4384  0065  1283               	bcf	3,5	;RP0=0, select bank0
  4385  0066  1303               	bcf	3,6	;RP1=0, select bank0
  4386  0067  01D1               	clrf	setLED@command
  4387  0068  3002               	movlw	2
  4388  0069  158A  278F  118A   	fcall	_setLED
  4389                           
  4390                           ;PIR_B1.c: 51: if (getLights_Status(1) == 1) {
  4391  006C  3001               	movlw	1
  4392  006D  158A  2361  118A   	fcall	_getLights_Status
  4393  0070  3A01               	xorlw	1
  4394  0071  1D03               	skipz
  4395  0072  287B               	goto	l5238
  4396                           
  4397                           ;PIR_B1.c: 52: setLights_SwOn(1);
  4398  0073  3001               	movlw	1
  4399  0074  158A  2500  118A   	fcall	_setLights_SwOn
  4400                           
  4401                           ;PIR_B1.c: 53: setLights_SwOff(1);
  4402  0077  3001               	movlw	1
  4403  0078  158A  2436  118A   	fcall	_setLights_SwOff
  4404  007B                     l5238:	
  4405                           
  4406                           ;PIR_B1.c: 55: }
  4407                           ;PIR_B1.c: 67: }
  4408                           ;PIR_B1.c: 68: }
  4409                           ;PIR_B1.c: 72: if (_PIR.Detect == 0) {
  4410  007B  1683               	bsf	3,5	;RP0=1, select bank1
  4411  007C  1303               	bcf	3,6	;RP1=0, select bank1
  4412  007D  1A20               	btfsc	__PIR^(0+128),4
  4413  007E  2891               	goto	l935
  4414                           
  4415                           ;PIR_B1.c: 73: _PIR.Detect = 1;
  4416  007F  1620               	bsf	__PIR^(0+128),4
  4417                           
  4418                           ;PIR_B1.c: 75: if (_PIR.OK == 0) {
  4419  0080  19A0               	btfsc	__PIR^(0+128),3
  4420  0081  2891               	goto	l935
  4421                           
  4422                           ;PIR_B1.c: 76: setLED(1, 1);
  4423  0082  1283               	bcf	3,5	;RP0=0, select bank0
  4424  0083  1303               	bcf	3,6	;RP1=0, select bank0
  4425  0084  01D1               	clrf	setLED@command
  4426  0085  0AD1               	incf	setLED@command,f
  4427  0086  3001               	movlw	1
  4428  0087  158A  278F  118A   	fcall	_setLED
  4429                           
  4430                           ;PIR_B1.c: 77: }
  4431                           ;PIR_B1.c: 80: }
  4432                           ;PIR_B1.c: 81: } else {
  4433  008A  2891               	goto	l935
  4434  008B                     l928:	
  4435                           
  4436                           ;PIR_B1.c: 82: if (_PIR.Detect == 1) {
  4437  008B  1683               	bsf	3,5	;RP0=1, select bank1
  4438  008C  1303               	bcf	3,6	;RP1=0, select bank1
  4439  008D  1E20               	btfss	__PIR^(0+128),4
  4440  008E  2891               	goto	l935
  4441                           
  4442                           ;PIR_B1.c: 83: _PIR.Detect = 0;
  4443  008F  1220               	bcf	__PIR^(0+128),4
  4444                           
  4445                           ;PIR_B1.c: 84: _PIR.Available = 0;
  4446  0090  13A0               	bcf	__PIR^(0+128),7
  4447  0091                     l935:	
  4448                           
  4449                           ;PIR_B1.c: 102: }
  4450                           ;PIR_B1.c: 103: }
  4451                           ;PIR_B1.c: 105: if (_PIR.ADtoGO == 0) {
  4452  0091  1683               	bsf	3,5	;RP0=1, select bank1
  4453  0092  1303               	bcf	3,6	;RP1=0, select bank1
  4454  0093  18A0               	btfsc	__PIR^(0+128),1
  4455  0094  28A4               	goto	l937
  4456                           
  4457                           ;PIR_B1.c: 106: _PIR.Time++;
  4458  0095  3001               	movlw	1
  4459  0096  1283               	bcf	3,5	;RP0=0, select bank0
  4460  0097  1303               	bcf	3,6	;RP1=0, select bank0
  4461  0098  00D7               	movwf	??_PIR_Main
  4462  0099  0857               	movf	??_PIR_Main,w
  4463  009A  1683               	bsf	3,5	;RP0=1, select bank1
  4464  009B  1303               	bcf	3,6	;RP1=0, select bank1
  4465  009C  07A2               	addwf	(__PIR^(0+128)+2),f
  4466                           
  4467                           ;PIR_B1.c: 107: if (_PIR.Time == (100 / 20)) {
  4468  009D  0822               	movf	(__PIR^(0+128)+2),w
  4469  009E  3A05               	xorlw	5
  4470  009F  1D03               	skipz
  4471  00A0  29AE               	goto	l5326
  4472                           
  4473                           ;PIR_B1.c: 108: _PIR.Time = 0;
  4474  00A1  01A2               	clrf	(__PIR^(0+128)+2)
  4475                           
  4476                           ;PIR_B1.c: 109: _PIR.ADtoGO = 1;
  4477  00A2  14A0               	bsf	__PIR^(0+128),1
  4478                           
  4479                           ;PIR_B1.c: 110: }
  4480                           ;PIR_B1.c: 111: } else {
  4481  00A3  29AE               	goto	l5326
  4482  00A4                     l937:	
  4483                           
  4484                           ;PIR_B1.c: 112: if (_PIR.GO == 1) {
  4485  00A4  1D20               	btfss	__PIR^(0+128),2
  4486  00A5  29AE               	goto	l5326
  4487                           
  4488                           ;PIR_B1.c: 113: _PIR.GO = 0;
  4489  00A6  1120               	bcf	__PIR^(0+128),2
  4490                           
  4491                           ;PIR_B1.c: 114: _PIR.ADtoGO = 0;
  4492  00A7  10A0               	bcf	__PIR^(0+128),1
  4493                           
  4494                           ;PIR_B1.c: 115: if (_PIR.Available == 1) {
  4495  00A8  1BA0               	btfsc	__PIR^(0+128),7
  4496                           
  4497                           ;PIR_B1.c: 116: if (_PIR.OK == 1) {
  4498  00A9  1DA0               	btfss	__PIR^(0+128),3
  4499  00AA  29AE               	goto	l5326
  4500                           
  4501                           ;PIR_B1.c: 118: _PIR.Time++;
  4502  00AB  3001               	movlw	1
  4503  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  4504  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  4505  00AE  00D7               	movwf	??_PIR_Main
  4506  00AF  0857               	movf	??_PIR_Main,w
  4507  00B0  1683               	bsf	3,5	;RP0=1, select bank1
  4508  00B1  1303               	bcf	3,6	;RP1=0, select bank1
  4509  00B2  07A2               	addwf	(__PIR^(0+128)+2),f
  4510                           
  4511                           ;PIR_B1.c: 119: if (_PIR.Time == 60) {
  4512  00B3  0822               	movf	(__PIR^(0+128)+2),w
  4513  00B4  3A3C               	xorlw	60
  4514  00B5  1D03               	skipz
  4515  00B6  28EB               	goto	l5294
  4516                           
  4517                           ;PIR_B1.c: 120: _PIR.Time = 0;
  4518  00B7  01A2               	clrf	(__PIR^(0+128)+2)
  4519                           
  4520                           ;PIR_B1.c: 121: if (_PIR.RangeCount >= 90) {
  4521  00B8  305A               	movlw	90
  4522  00B9  0247               	subwf	(__PIR^(0+128)+39),w
  4523  00BA  1C03               	skipc
  4524  00BB  28C7               	goto	l5276
  4525                           
  4526                           ;PIR_B1.c: 122: _PIR.RangeTime1 = 0;
  4527  00BC  01C6               	clrf	(__PIR^(0+128)+38)
  4528                           
  4529                           ;PIR_B1.c: 124: if (_PIR.RangeValue == 25) {
  4530  00BD  0848               	movf	(__PIR^(0+128)+40),w
  4531  00BE  3A19               	xorlw	25
  4532  00BF  1903               	btfsc	3,2
  4533  00C0  28DC               	goto	L12
  4534                           
  4535                           ;PIR_B1.c: 126: } else if (_PIR.RangeValue == (25+10)) {
  4536                           
  4537                           ;PIR_B1.c: 125: _PIR.RangeValue = (25+10);
  4538  00C1  0848               	movf	(__PIR^(0+128)+40),w
  4539  00C2  3A23               	xorlw	35
  4540  00C3  1D03               	skipz
  4541  00C4  28EA               	goto	l5292
  4542                           
  4543                           ;PIR_B1.c: 127: _PIR.RangeValue = (25+20);
  4544  00C5  302D               	movlw	45
  4545  00C6  28E3               	goto	L9
  4546  00C7                     l5276:	
  4547                           ;PIR_B1.c: 128: }
  4548                           ;PIR_B1.c: 129: } else if (_PIR.RangeCount <= 10) {
  4549                           
  4550  00C7  300B               	movlw	11
  4551  00C8  0247               	subwf	(__PIR^(0+128)+39),w
  4552  00C9  1803               	skipnc
  4553  00CA  28EA               	goto	l5292
  4554                           
  4555                           ;PIR_B1.c: 130: _PIR.RangeTime1++;
  4556  00CB  3001               	movlw	1
  4557  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  4558  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  4559  00CE  00D7               	movwf	??_PIR_Main
  4560  00CF  0857               	movf	??_PIR_Main,w
  4561  00D0  1683               	bsf	3,5	;RP0=1, select bank1
  4562  00D1  1303               	bcf	3,6	;RP1=0, select bank1
  4563  00D2  07C6               	addwf	(__PIR^(0+128)+38),f
  4564                           
  4565                           ;PIR_B1.c: 131: if (_PIR.RangeTime1 == 2) {
  4566  00D3  0846               	movf	(__PIR^(0+128)+38),w
  4567  00D4  3A02               	xorlw	2
  4568  00D5  1D03               	skipz
  4569  00D6  28EA               	goto	l5292
  4570                           
  4571                           ;PIR_B1.c: 132: _PIR.RangeTime1 = 0;
  4572  00D7  01C6               	clrf	(__PIR^(0+128)+38)
  4573                           
  4574                           ;PIR_B1.c: 134: if (_PIR.RangeValue == (25+20)) {
  4575  00D8  0848               	movf	(__PIR^(0+128)+40),w
  4576  00D9  3A2D               	xorlw	45
  4577  00DA  1D03               	skipz
  4578  00DB  28DE               	goto	l5288
  4579  00DC                     L12:	
  4580                           
  4581                           ;PIR_B1.c: 135: _PIR.RangeValue = (25+10);
  4582  00DC  3023               	movlw	35
  4583  00DD  28E3               	goto	L9
  4584  00DE                     l5288:	
  4585                           ;PIR_B1.c: 136: } else if (_PIR.RangeValue == (25+10)) {
  4586                           
  4587  00DE  0848               	movf	(__PIR^(0+128)+40),w
  4588  00DF  3A23               	xorlw	35
  4589  00E0  1D03               	skipz
  4590  00E1  28EA               	goto	l5292
  4591                           
  4592                           ;PIR_B1.c: 137: _PIR.RangeValue = 25;
  4593  00E2  3019               	movlw	25
  4594  00E3                     L9:	
  4595  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  4596  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  4597  00E5  00D7               	movwf	??_PIR_Main
  4598  00E6  0857               	movf	??_PIR_Main,w
  4599  00E7  1683               	bsf	3,5	;RP0=1, select bank1
  4600  00E8  1303               	bcf	3,6	;RP1=0, select bank1
  4601  00E9  00C8               	movwf	(__PIR^(0+128)+40)
  4602  00EA                     l5292:	
  4603                           
  4604                           ;PIR_B1.c: 138: }
  4605                           ;PIR_B1.c: 139: }
  4606                           ;PIR_B1.c: 140: }
  4607                           ;PIR_B1.c: 141: _PIR.RangeCount = 0;
  4608  00EA  01C7               	clrf	(__PIR^(0+128)+39)
  4609  00EB                     l5294:	
  4610                           
  4611                           ;PIR_B1.c: 142: }
  4612                           ;PIR_B1.c: 145: if ((_PIR.SignalAD >= (_PIR.ReferenceVoltage - _PIR.RangeValue))
  4613                           ;PIR_B1.c: 146: && (_PIR.SignalAD <= (_PIR.ReferenceVoltage + _PIR.RangeValue))) {
  4614  00EB  0848               	movf	(__PIR^(0+128)+40),w
  4615  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  4616  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  4617  00EE  00D7               	movwf	??_PIR_Main
  4618  00EF  01D8               	clrf	??_PIR_Main+1
  4619  00F0  09D7               	comf	??_PIR_Main,f
  4620  00F1  09D8               	comf	??_PIR_Main+1,f
  4621  00F2  0AD7               	incf	??_PIR_Main,f
  4622  00F3  1903               	skipnz
  4623  00F4  0AD8               	incf	??_PIR_Main+1,f
  4624  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  4625  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  4626  00F7  0823               	movf	(__PIR^(0+128)+3),w
  4627  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  4628  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  4629  00FA  0757               	addwf	??_PIR_Main,w
  4630  00FB  00D9               	movwf	??_PIR_Main+2
  4631  00FC  0858               	movf	??_PIR_Main+1,w
  4632  00FD  1803               	skipnc
  4633  00FE  0A58               	incf	??_PIR_Main+1,w
  4634  00FF  00DA               	movwf	??_PIR_Main+3
  4635  0100  085A               	movf	??_PIR_Main+3,w
  4636  0101  3A80               	xorlw	128
  4637  0102  3C80               	sublw	128
  4638  0103  1D03               	skipz
  4639  0104  2909               	goto	u6785
  4640  0105  0859               	movf	??_PIR_Main+2,w
  4641  0106  1683               	bsf	3,5	;RP0=1, select bank1
  4642  0107  1303               	bcf	3,6	;RP1=0, select bank1
  4643  0108  0221               	subwf	(__PIR^(0+128)+1),w
  4644  0109                     u6785:	
  4645  0109  1C03               	skipc
  4646  010A  292B               	goto	l5304
  4647  010B  1683               	bsf	3,5	;RP0=1, select bank1
  4648  010C  1303               	bcf	3,6	;RP1=0, select bank1
  4649  010D  0823               	movf	(__PIR^(0+128)+3),w
  4650  010E  0748               	addwf	(__PIR^(0+128)+40),w
  4651  010F  1283               	bcf	3,5	;RP0=0, select bank0
  4652  0110  1303               	bcf	3,6	;RP1=0, select bank0
  4653  0111  00D7               	movwf	??_PIR_Main
  4654  0112  01D8               	clrf	??_PIR_Main+1
  4655  0113  0DD8               	rlf	??_PIR_Main+1,f
  4656  0114  0858               	movf	??_PIR_Main+1,w
  4657  0115  3A80               	xorlw	128
  4658  0116  00D9               	movwf	??_PIR_Main+2
  4659  0117  3080               	movlw	128
  4660  0118  0259               	subwf	??_PIR_Main+2,w
  4661  0119  1D03               	skipz
  4662  011A  2921               	goto	u6795
  4663  011B  1683               	bsf	3,5	;RP0=1, select bank1
  4664  011C  1303               	bcf	3,6	;RP1=0, select bank1
  4665  011D  0821               	movf	(__PIR^(0+128)+1),w
  4666  011E  1283               	bcf	3,5	;RP0=0, select bank0
  4667  011F  1303               	bcf	3,6	;RP1=0, select bank0
  4668  0120  0257               	subwf	??_PIR_Main,w
  4669  0121                     u6795:	
  4670  0121  1C03               	skipc
  4671  0122  292B               	goto	l5304
  4672                           
  4673                           ;PIR_B1.c: 148: _PIR.Count = 0;
  4674  0123  1683               	bsf	3,5	;RP0=1, select bank1
  4675  0124  1303               	bcf	3,6	;RP1=0, select bank1
  4676  0125  01BE               	clrf	(__PIR^(0+128)+30)
  4677  0126  01BF               	clrf	((__PIR+1)^(0+128)+30)
  4678                           
  4679                           ;PIR_B1.c: 155: setLED(1, 0);
  4680  0127  1283               	bcf	3,5	;RP0=0, select bank0
  4681  0128  1303               	bcf	3,6	;RP1=0, select bank0
  4682  0129  01D1               	clrf	setLED@command
  4683  012A  2997               	goto	L13
  4684  012B                     l5304:	
  4685                           ;PIR_B1.c: 159: } else {
  4686                           
  4687                           ;PIR_B1.c: 156: setLED(2, 0);
  4688                           
  4689                           
  4690                           ;PIR_B1.c: 162: _PIR.RangeCount++;
  4691  012B  3001               	movlw	1
  4692  012C  1283               	bcf	3,5	;RP0=0, select bank0
  4693  012D  1303               	bcf	3,6	;RP1=0, select bank0
  4694  012E  00D7               	movwf	??_PIR_Main
  4695  012F  0857               	movf	??_PIR_Main,w
  4696  0130  1683               	bsf	3,5	;RP0=1, select bank1
  4697  0131  1303               	bcf	3,6	;RP1=0, select bank1
  4698  0132  07C7               	addwf	(__PIR^(0+128)+39),f
  4699                           
  4700                           ;PIR_B1.c: 163: _PIR.Count++;
  4701  0133  3001               	movlw	1
  4702  0134  07BE               	addwf	(__PIR^(0+128)+30),f
  4703  0135  1803               	skipnc
  4704  0136  0ABF               	incf	((__PIR+1)^(0+128)+30),f
  4705  0137  3000               	movlw	0
  4706  0138  07BF               	addwf	((__PIR+1)^(0+128)+30),f
  4707                           
  4708                           ;PIR_B1.c: 165: TriggerValue = LightsStatus == 1 ? 3 : 3;
  4709  0139  1283               	bcf	3,5	;RP0=0, select bank0
  4710  013A  1303               	bcf	3,6	;RP1=0, select bank0
  4711  013B  0862               	movf	PIR_Main@LightsStatus,w
  4712  013C  3A01               	xorlw	1
  4713  013D  1903               	skipnz
  4714  013E  293F               	goto	l5312
  4715  013F                     l5312:	
  4716  013F  3003               	movlw	3
  4717  0140  00DF               	movwf	_PIR_Main$2874
  4718  0141  3000               	movlw	0
  4719  0142  00E0               	movwf	_PIR_Main$2874+1
  4720  0143  085F               	movf	_PIR_Main$2874,w
  4721  0144  00D7               	movwf	??_PIR_Main
  4722  0145  0857               	movf	??_PIR_Main,w
  4723  0146  00E1               	movwf	PIR_Main@TriggerValue
  4724                           
  4725                           ;PIR_B1.c: 167: if (_PIR.Count == TriggerValue) {
  4726  0147  0861               	movf	PIR_Main@TriggerValue,w
  4727  0148  00D7               	movwf	??_PIR_Main
  4728  0149  01D8               	clrf	??_PIR_Main+1
  4729  014A  1683               	bsf	3,5	;RP0=1, select bank1
  4730  014B  1303               	bcf	3,6	;RP1=0, select bank1
  4731  014C  083F               	movf	((__PIR+1)^(0+128)+30),w
  4732  014D  1283               	bcf	3,5	;RP0=0, select bank0
  4733  014E  1303               	bcf	3,6	;RP1=0, select bank0
  4734  014F  0658               	xorwf	??_PIR_Main+1,w
  4735  0150  1D03               	skipz
  4736  0151  2958               	goto	u6815
  4737  0152  1683               	bsf	3,5	;RP0=1, select bank1
  4738  0153  1303               	bcf	3,6	;RP1=0, select bank1
  4739  0154  083E               	movf	(__PIR^(0+128)+30),w
  4740  0155  1283               	bcf	3,5	;RP0=0, select bank0
  4741  0156  1303               	bcf	3,6	;RP1=0, select bank0
  4742  0157  0657               	xorwf	??_PIR_Main,w
  4743  0158                     u6815:	
  4744  0158  1D03               	skipz
  4745  0159  29AE               	goto	l5326
  4746                           
  4747                           ;PIR_B1.c: 168: _PIR.Count = 0;
  4748  015A  1683               	bsf	3,5	;RP0=1, select bank1
  4749  015B  1303               	bcf	3,6	;RP1=0, select bank1
  4750  015C  01BE               	clrf	(__PIR^(0+128)+30)
  4751  015D  01BF               	clrf	((__PIR+1)^(0+128)+30)
  4752                           
  4753                           ;PIR_B1.c: 175: if (getLights_Status(1) == 0) {
  4754  015E  3001               	movlw	1
  4755  015F  158A  2361  118A   	fcall	_getLights_Status
  4756  0162  3800               	iorlw	0
  4757  0163  1D03               	skipz
  4758  0164  296D               	goto	l5320
  4759                           
  4760                           ;PIR_B1.c: 176: setLights_SwOn(1);
  4761  0165  3001               	movlw	1
  4762  0166  158A  2500  118A   	fcall	_setLights_SwOn
  4763                           
  4764                           ;PIR_B1.c: 177: setLights_SwOff(1);
  4765  0169  3001               	movlw	1
  4766  016A  158A  2436  118A   	fcall	_setLights_SwOff
  4767  016D                     l5320:	
  4768                           
  4769                           ;PIR_B1.c: 179: }
  4770                           ;PIR_B1.c: 193: if ((_PIR.SignalAD <= (_PIR.ReferenceVoltage - _PIR.RangeValue))) {
  4771  016D  1683               	bsf	3,5	;RP0=1, select bank1
  4772  016E  1303               	bcf	3,6	;RP1=0, select bank1
  4773  016F  0848               	movf	(__PIR^(0+128)+40),w
  4774  0170  1283               	bcf	3,5	;RP0=0, select bank0
  4775  0171  1303               	bcf	3,6	;RP1=0, select bank0
  4776  0172  00D7               	movwf	??_PIR_Main
  4777  0173  01D8               	clrf	??_PIR_Main+1
  4778  0174  09D7               	comf	??_PIR_Main,f
  4779  0175  09D8               	comf	??_PIR_Main+1,f
  4780  0176  0AD7               	incf	??_PIR_Main,f
  4781  0177  1903               	skipnz
  4782  0178  0AD8               	incf	??_PIR_Main+1,f
  4783  0179  1683               	bsf	3,5	;RP0=1, select bank1
  4784  017A  1303               	bcf	3,6	;RP1=0, select bank1
  4785  017B  0823               	movf	(__PIR^(0+128)+3),w
  4786  017C  1283               	bcf	3,5	;RP0=0, select bank0
  4787  017D  1303               	bcf	3,6	;RP1=0, select bank0
  4788  017E  0757               	addwf	??_PIR_Main,w
  4789  017F  00D9               	movwf	??_PIR_Main+2
  4790  0180  0858               	movf	??_PIR_Main+1,w
  4791  0181  1803               	skipnc
  4792  0182  0A58               	incf	??_PIR_Main+1,w
  4793  0183  00DA               	movwf	??_PIR_Main+3
  4794  0184  085A               	movf	??_PIR_Main+3,w
  4795  0185  3A80               	xorlw	128
  4796  0186  00DB               	movwf	??_PIR_Main+4
  4797  0187  3080               	movlw	128
  4798  0188  025B               	subwf	??_PIR_Main+4,w
  4799  0189  1D03               	skipz
  4800  018A  2991               	goto	u6835
  4801  018B  1683               	bsf	3,5	;RP0=1, select bank1
  4802  018C  1303               	bcf	3,6	;RP1=0, select bank1
  4803  018D  0821               	movf	(__PIR^(0+128)+1),w
  4804  018E  1283               	bcf	3,5	;RP0=0, select bank0
  4805  018F  1303               	bcf	3,6	;RP1=0, select bank0
  4806  0190  0259               	subwf	??_PIR_Main+2,w
  4807  0191                     u6835:	
  4808  0191  1C03               	skipc
  4809  0192  299F               	goto	l5324
  4810                           
  4811                           ;PIR_B1.c: 194: setLED(1, 1);
  4812  0193  1283               	bcf	3,5	;RP0=0, select bank0
  4813  0194  1303               	bcf	3,6	;RP1=0, select bank0
  4814  0195  01D1               	clrf	setLED@command
  4815  0196  0AD1               	incf	setLED@command,f
  4816  0197                     L13:	
  4817  0197  3001               	movlw	1
  4818  0198  158A  278F  118A   	fcall	_setLED
  4819                           
  4820                           ;PIR_B1.c: 195: setLED(2, 0);
  4821  019B  1283               	bcf	3,5	;RP0=0, select bank0
  4822  019C  1303               	bcf	3,6	;RP1=0, select bank0
  4823  019D  01D1               	clrf	setLED@command
  4824  019E  29AA               	goto	L10
  4825  019F                     l5324:	
  4826                           ;PIR_B1.c: 196: } else {
  4827                           
  4828                           
  4829                           ;PIR_B1.c: 197: setLED(1, 0);
  4830  019F  1283               	bcf	3,5	;RP0=0, select bank0
  4831  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  4832  01A1  01D1               	clrf	setLED@command
  4833  01A2  3001               	movlw	1
  4834  01A3  158A  278F  118A   	fcall	_setLED
  4835                           
  4836                           ;PIR_B1.c: 198: setLED(2, 1);
  4837  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  4838  01A7  1303               	bcf	3,6	;RP1=0, select bank0
  4839  01A8  01D1               	clrf	setLED@command
  4840  01A9  0AD1               	incf	setLED@command,f
  4841  01AA                     L10:	
  4842  01AA  3002               	movlw	2
  4843  01AB  158A  278F  118A   	fcall	_setLED
  4844  01AE                     l5326:	
  4845                           
  4846                           ;PIR_B1.c: 199: }
  4847                           ;PIR_B1.c: 241: }
  4848                           ;PIR_B1.c: 242: }
  4849                           ;PIR_B1.c: 243: }
  4850                           ;PIR_B1.c: 244: }
  4851                           ;PIR_B1.c: 245: }
  4852                           ;PIR_B1.c: 246: }
  4853                           ;PIR_B1.c: 247: if (_PIR.OK == 0) {
  4854  01AE  1683               	bsf	3,5	;RP0=1, select bank1
  4855  01AF  1303               	bcf	3,6	;RP1=0, select bank1
  4856  01B0  19A0               	btfsc	__PIR^(0+128),3
  4857  01B1  29D9               	goto	l5340
  4858                           
  4859                           ;PIR_B1.c: 248: _PIR.Count++;
  4860  01B2  3001               	movlw	1
  4861  01B3  07BE               	addwf	(__PIR^(0+128)+30),f
  4862  01B4  1803               	skipnc
  4863  01B5  0ABF               	incf	((__PIR+1)^(0+128)+30),f
  4864  01B6  3000               	movlw	0
  4865  01B7  07BF               	addwf	((__PIR+1)^(0+128)+30),f
  4866                           
  4867                           ;PIR_B1.c: 249: if (_PIR.Count == (30000 / 20)) {
  4868  01B8  3005               	movlw	5
  4869  01B9  063F               	xorwf	((__PIR+1)^(0+128)+30),w
  4870  01BA  1D03               	skipz
  4871  01BB  29BE               	goto	u6855
  4872  01BC  30DC               	movlw	220
  4873  01BD  063E               	xorwf	(__PIR^(0+128)+30),w
  4874  01BE                     u6855:	
  4875  01BE  1D03               	skipz
  4876  01BF  0008               	return
  4877                           
  4878                           ;PIR_B1.c: 250: _PIR.Count = 0;
  4879  01C0  01BE               	clrf	(__PIR^(0+128)+30)
  4880  01C1  01BF               	clrf	((__PIR+1)^(0+128)+30)
  4881                           
  4882                           ;PIR_B1.c: 251: _PIR.OK = 1;
  4883  01C2  15A0               	bsf	__PIR^(0+128),3
  4884                           
  4885                           ;PIR_B1.c: 253: setLED(1, 0);
  4886  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  4887  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  4888  01C5  01D1               	clrf	setLED@command
  4889  01C6  3001               	movlw	1
  4890  01C7  158A  278F  118A   	fcall	_setLED
  4891                           
  4892                           ;PIR_B1.c: 259: if (getLights_Status(1) == 1) {
  4893  01CA  3001               	movlw	1
  4894  01CB  158A  2361  118A   	fcall	_getLights_Status
  4895  01CE  3A01               	xorlw	1
  4896  01CF  1D03               	skipz
  4897  01D0  0008               	return
  4898                           
  4899                           ;PIR_B1.c: 260: setLights_SwOn(1);
  4900  01D1  3001               	movlw	1
  4901  01D2  158A  2500  118A   	fcall	_setLights_SwOn
  4902                           
  4903                           ;PIR_B1.c: 261: setLights_SwOff(1);
  4904  01D5  3001               	movlw	1
  4905  01D6  158A  2436         	fcall	_setLights_SwOff
  4906                           
  4907                           ;PIR_B1.c: 263: }
  4908                           ;PIR_B1.c: 276: }
  4909                           ;PIR_B1.c: 277: } else {
  4910  01D8  0008               	return
  4911  01D9                     l5340:	
  4912                           
  4913                           ;PIR_B1.c: 278: if (LightsStatus == 1) {
  4914  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  4915  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  4916  01DB  0862               	movf	PIR_Main@LightsStatus,w
  4917  01DC  3A01               	xorlw	1
  4918  01DD  1D03               	skipz
  4919  01DE  2A09               	goto	l5358
  4920                           
  4921                           ;PIR_B1.c: 279: _PIR.CloseTimeSeconds++;
  4922  01DF  3001               	movlw	1
  4923  01E0  00D7               	movwf	??_PIR_Main
  4924  01E1  0857               	movf	??_PIR_Main,w
  4925  01E2  1683               	bsf	3,5	;RP0=1, select bank1
  4926  01E3  1303               	bcf	3,6	;RP1=0, select bank1
  4927  01E4  07C2               	addwf	(__PIR^(0+128)+34),f
  4928                           
  4929                           ;PIR_B1.c: 280: if (_PIR.CloseTimeSeconds == (1000 / 20)) {
  4930  01E5  0842               	movf	(__PIR^(0+128)+34),w
  4931  01E6  3A32               	xorlw	50
  4932  01E7  1D03               	skipz
  4933  01E8  0008               	return
  4934                           
  4935                           ;PIR_B1.c: 281: _PIR.CloseTimeSeconds = 0;
  4936  01E9  01C2               	clrf	(__PIR^(0+128)+34)
  4937                           
  4938                           ;PIR_B1.c: 282: _PIR.CloseTimeMinutes++;
  4939  01EA  3001               	movlw	1
  4940  01EB  07C0               	addwf	(__PIR^(0+128)+32),f
  4941  01EC  1803               	skipnc
  4942  01ED  0AC1               	incf	((__PIR+1)^(0+128)+32),f
  4943  01EE  3000               	movlw	0
  4944  01EF  07C1               	addwf	((__PIR+1)^(0+128)+32),f
  4945                           
  4946                           ;PIR_B1.c: 283: if (_PIR.CloseTimeMinutes == _PIR.CloseTimeValue) {
  4947  01F0  0844               	movf	((__PIR+1)^(0+128)+35),w
  4948  01F1  0641               	xorwf	((__PIR+1)^(0+128)+32),w
  4949  01F2  1D03               	skipz
  4950  01F3  29F6               	goto	u6895
  4951  01F4  0843               	movf	(__PIR^(0+128)+35),w
  4952  01F5  0640               	xorwf	(__PIR^(0+128)+32),w
  4953  01F6                     u6895:	
  4954  01F6  1D03               	skipz
  4955  01F7  0008               	return
  4956                           
  4957                           ;PIR_B1.c: 284: _PIR.CloseTimeMinutes = 0;
  4958  01F8  01C0               	clrf	(__PIR^(0+128)+32)
  4959  01F9  01C1               	clrf	((__PIR+1)^(0+128)+32)
  4960                           
  4961                           ;PIR_B1.c: 290: if (getLights_Status(1) == 1) {
  4962  01FA  3001               	movlw	1
  4963  01FB  158A  2361  118A   	fcall	_getLights_Status
  4964  01FE  3A01               	xorlw	1
  4965  01FF  1D03               	skipz
  4966  0200  0008               	return
  4967                           
  4968                           ;PIR_B1.c: 291: setLights_SwOn(1);
  4969  0201  3001               	movlw	1
  4970  0202  158A  2500  118A   	fcall	_setLights_SwOn
  4971                           
  4972                           ;PIR_B1.c: 292: setLights_SwOff(1);
  4973  0205  3001               	movlw	1
  4974  0206  158A  2436         	fcall	_setLights_SwOff
  4975                           
  4976                           ;PIR_B1.c: 294: }
  4977                           ;PIR_B1.c: 306: }
  4978                           ;PIR_B1.c: 307: }
  4979                           ;PIR_B1.c: 308: } else {
  4980  0208  0008               	return
  4981  0209                     l5358:	
  4982                           
  4983                           ;PIR_B1.c: 309: _PIR.CloseTimeSeconds = 0;
  4984  0209  1683               	bsf	3,5	;RP0=1, select bank1
  4985  020A  1303               	bcf	3,6	;RP1=0, select bank1
  4986  020B  01C2               	clrf	(__PIR^(0+128)+34)
  4987                           
  4988                           ;PIR_B1.c: 310: _PIR.CloseTimeMinutes = 0;
  4989  020C  01C0               	clrf	(__PIR^(0+128)+32)
  4990  020D  01C1               	clrf	((__PIR+1)^(0+128)+32)
  4991                           
  4992                           ;PIR_B1.c: 311: }
  4993                           ;PIR_B1.c: 312: }
  4994                           ;PIR_B1.c: 313: } else {
  4995  020E  0008               	return
  4996  020F                     l927:	
  4997                           
  4998                           ;PIR_B1.c: 314: if (myMain.PowerON == 1) {
  4999  020F  1283               	bcf	3,5	;RP0=0, select bank0
  5000  0210  1303               	bcf	3,6	;RP1=0, select bank0
  5001  0211  1C25               	btfss	_myMain,0
  5002  0212  0008               	return
  5003                           
  5004                           ;PIR_B1.c: 315: _PIR.Enable = 1;
  5005  0213  1683               	bsf	3,5	;RP0=1, select bank1
  5006  0214  1303               	bcf	3,6	;RP1=0, select bank1
  5007  0215  1420               	bsf	__PIR^(0+128),0
  5008                           
  5009                           ;PIR_B1.c: 317: setLED(1, 1);
  5010  0216  1283               	bcf	3,5	;RP0=0, select bank0
  5011  0217  1303               	bcf	3,6	;RP1=0, select bank0
  5012  0218  01D1               	clrf	setLED@command
  5013  0219  0AD1               	incf	setLED@command,f
  5014  021A  3001               	movlw	1
  5015  021B  158A  278F  118A   	fcall	_setLED
  5016                           
  5017                           ;PIR_B1.c: 322: if (getLights_Status(1) == 0) {
  5018  021E  3001               	movlw	1
  5019  021F  158A  2361  118A   	fcall	_getLights_Status
  5020  0222  3800               	iorlw	0
  5021  0223  1D03               	skipz
  5022  0224  0008               	return
  5023                           
  5024                           ;PIR_B1.c: 323: setLights_SwOn(1);
  5025  0225  3001               	movlw	1
  5026  0226  158A  2500  118A   	fcall	_setLights_SwOn
  5027                           
  5028                           ;PIR_B1.c: 324: setLights_SwOff(1);
  5029  0229  3001               	movlw	1
  5030  022A  158A  2436         	fcall	_setLights_SwOff
  5031  022C  0008               	return
  5032  022D                     __end_of_PIR_Main:	
  5033                           
  5034                           	psect	text21
  5035  0AD8                     __ptext21:	
  5036 ;; *************** function _getCDS_Status *****************
  5037 ;; Defined at:
  5038 ;;		line 42 in file "../src/CDS_B1.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;		None
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;  status          1    4[COMMON] unsigned char 
  5043 ;; Return value:  Size  Location     Type
  5044 ;;                  1    wreg      unsigned char 
  5045 ;; Registers used:
  5046 ;;		wreg, status,2
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5052 ;;      Params:         0       0       0       0
  5053 ;;      Locals:         1       0       0       0
  5054 ;;      Temps:          0       0       0       0
  5055 ;;      Totals:         1       0       0       0
  5056 ;;Total ram usage:        1 bytes
  5057 ;; Hardware stack levels used:    1
  5058 ;; Hardware stack levels required when called:    2
  5059 ;; This function calls:
  5060 ;;		Nothing
  5061 ;; This function is called by:
  5062 ;;		_PIR_Main
  5063 ;; This function uses a non-reentrant model
  5064 ;;
  5065                           
  5066                           
  5067                           ;psect for function _getCDS_Status
  5068  0AD8                     _getCDS_Status:	
  5069                           
  5070                           ;CDS_B1.c: 43: char status = _CDS.Status == 1 ? 1 : 0;
  5071                           
  5072                           ;incstack = 0
  5073                           ; Regs used in _getCDS_Status: [wreg+status,2]
  5074  0AD8  3000               	movlw	0
  5075  0AD9  1283               	bcf	3,5	;RP0=0, select bank0
  5076  0ADA  1303               	bcf	3,6	;RP1=0, select bank0
  5077  0ADB  1A2E               	btfsc	__CDS,4
  5078  0ADC  3001               	movlw	1
  5079  0ADD  00F4               	movwf	getCDS_Status@status
  5080                           
  5081                           ;CDS_B1.c: 44: return status;
  5082  0ADE  0874               	movf	getCDS_Status@status,w
  5083  0ADF  0008               	return
  5084  0AE0                     __end_of_getCDS_Status:	
  5085                           
  5086                           	psect	text22
  5087  07F5                     __ptext22:	
  5088 ;; *************** function _PIR_Initialization *****************
  5089 ;; Defined at:
  5090 ;;		line 7 in file "../src/PIR_B1.c"
  5091 ;; Parameters:    Size  Location     Type
  5092 ;;		None
  5093 ;; Auto vars:     Size  Location     Type
  5094 ;;		None
  5095 ;; Return value:  Size  Location     Type
  5096 ;;		None               void
  5097 ;; Registers used:
  5098 ;;		wreg
  5099 ;; Tracked objects:
  5100 ;;		On entry : 0/0
  5101 ;;		On exit  : 0/0
  5102 ;;		Unchanged: 0/0
  5103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5104 ;;      Params:         0       0       0       0
  5105 ;;      Locals:         0       0       0       0
  5106 ;;      Temps:          1       0       0       0
  5107 ;;      Totals:         1       0       0       0
  5108 ;;Total ram usage:        1 bytes
  5109 ;; Hardware stack levels used:    1
  5110 ;; Hardware stack levels required when called:    2
  5111 ;; This function calls:
  5112 ;;		Nothing
  5113 ;; This function is called by:
  5114 ;;		_main
  5115 ;; This function uses a non-reentrant model
  5116 ;;
  5117                           
  5118                           
  5119                           ;psect for function _PIR_Initialization
  5120  07F5                     _PIR_Initialization:	
  5121                           
  5122                           ;PIR_B1.c: 8: _PIR.RangeValue = 25;
  5123                           
  5124                           ;incstack = 0
  5125                           ; Regs used in _PIR_Initialization: [wreg]
  5126  07F5  3019               	movlw	25
  5127  07F6  00F4               	movwf	??_PIR_Initialization
  5128  07F7  0874               	movf	??_PIR_Initialization,w
  5129  07F8  1683               	bsf	3,5	;RP0=1, select bank1
  5130  07F9  1303               	bcf	3,6	;RP1=0, select bank1
  5131  07FA  00C8               	movwf	(__PIR^(0+128)+40)
  5132                           
  5133                           ;PIR_B1.c: 9: _PIR.CloseTimeValue = 5;
  5134  07FB  3005               	movlw	5
  5135  07FC  00C3               	movwf	(__PIR^(0+128)+35)
  5136  07FD  3000               	movlw	0
  5137  07FE  00C4               	movwf	(__PIR^(0+128)+36)
  5138  07FF  0008               	return
  5139  0800                     __end_of_PIR_Initialization:	
  5140                           
  5141                           	psect	text23
  5142  0B52                     __ptext23:	
  5143 ;; *************** function _Mcu_Initialization *****************
  5144 ;; Defined at:
  5145 ;;		line 30 in file "../src/MCU_B1.c"
  5146 ;; Parameters:    Size  Location     Type
  5147 ;;		None
  5148 ;; Auto vars:     Size  Location     Type
  5149 ;;		None
  5150 ;; Return value:  Size  Location     Type
  5151 ;;		None               void
  5152 ;; Registers used:
  5153 ;;		wreg, status,2, status,0, pclath, cstack
  5154 ;; Tracked objects:
  5155 ;;		On entry : 0/0
  5156 ;;		On exit  : 0/0
  5157 ;;		Unchanged: 0/0
  5158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5159 ;;      Params:         0       0       0       0
  5160 ;;      Locals:         0       0       0       0
  5161 ;;      Temps:          0       0       0       0
  5162 ;;      Totals:         0       0       0       0
  5163 ;;Total ram usage:        0 bytes
  5164 ;; Hardware stack levels used:    1
  5165 ;; Hardware stack levels required when called:    3
  5166 ;; This function calls:
  5167 ;;		_ADC_Set
  5168 ;;		_Fosc_Set
  5169 ;;		_IO_Set
  5170 ;;		_TMR1_Set
  5171 ;;		_WDT_Set
  5172 ;; This function is called by:
  5173 ;;		_main
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177                           
  5178                           ;psect for function _Mcu_Initialization
  5179  0B52                     _Mcu_Initialization:	
  5180                           
  5181                           ;MCU_B1.c: 32: Fosc_Set();
  5182                           
  5183                           ;incstack = 0
  5184                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  5185  0B52  158A  22AB  158A   	fcall	_Fosc_Set
  5186                           
  5187                           ;MCU_B1.c: 34: IO_Set();
  5188  0B55  158A  2404  158A   	fcall	_IO_Set
  5189                           
  5190                           ;MCU_B1.c: 36: ;;
  5191                           ;MCU_B1.c: 38: TMR1_Set();
  5192  0B58  158A  2336  158A   	fcall	_TMR1_Set
  5193                           
  5194                           ;MCU_B1.c: 40: ADC_Set();
  5195  0B5B  158A  22C9  158A   	fcall	_ADC_Set
  5196                           
  5197                           ;MCU_B1.c: 42: ;;
  5198                           ;MCU_B1.c: 44: ;;
  5199                           ;MCU_B1.c: 46: ;;
  5200                           ;MCU_B1.c: 48: ;;
  5201                           ;MCU_B1.c: 50: ;;
  5202                           ;MCU_B1.c: 52: WDT_Set();
  5203  0B5E  158A  2344         	fcall	_WDT_Set
  5204  0B60  0008               	return
  5205  0B61                     __end_of_Mcu_Initialization:	
  5206                           
  5207                           	psect	text24
  5208  0B44                     __ptext24:	
  5209 ;; *************** function _WDT_Set *****************
  5210 ;; Defined at:
  5211 ;;		line 1102 in file "../src/MCU_B1.c"
  5212 ;; Parameters:    Size  Location     Type
  5213 ;;		None
  5214 ;; Auto vars:     Size  Location     Type
  5215 ;;		None
  5216 ;; Return value:  Size  Location     Type
  5217 ;;		None               void
  5218 ;; Registers used:
  5219 ;;		wreg
  5220 ;; Tracked objects:
  5221 ;;		On entry : 0/0
  5222 ;;		On exit  : 0/0
  5223 ;;		Unchanged: 0/0
  5224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5225 ;;      Params:         0       0       0       0
  5226 ;;      Locals:         0       0       0       0
  5227 ;;      Temps:          1       0       0       0
  5228 ;;      Totals:         1       0       0       0
  5229 ;;Total ram usage:        1 bytes
  5230 ;; Hardware stack levels used:    1
  5231 ;; Hardware stack levels required when called:    2
  5232 ;; This function calls:
  5233 ;;		Nothing
  5234 ;; This function is called by:
  5235 ;;		_Mcu_Initialization
  5236 ;; This function uses a non-reentrant model
  5237 ;;
  5238                           
  5239                           
  5240                           ;psect for function _WDT_Set
  5241  0B44                     _WDT_Set:	
  5242                           
  5243                           ;MCU_B1.c: 1104: PSA = 1;
  5244                           
  5245                           ;incstack = 0
  5246                           ; Regs used in _WDT_Set: [wreg]
  5247  0B44  1683               	bsf	3,5	;RP0=1, select bank1
  5248  0B45  1303               	bcf	3,6	;RP1=0, select bank1
  5249  0B46  1581               	bsf	1,3	;volatile
  5250                           
  5251                           ;MCU_B1.c: 1105: PS0 = 1;
  5252  0B47  1401               	bsf	1,0	;volatile
  5253                           
  5254                           ;MCU_B1.c: 1106: PS1 = 1;
  5255  0B48  1481               	bsf	1,1	;volatile
  5256                           
  5257                           ;MCU_B1.c: 1107: PS2 = 1;
  5258  0B49  1501               	bsf	1,2	;volatile
  5259                           
  5260                           ;MCU_B1.c: 1111: WDT.Enable = 1;
  5261  0B4A  1283               	bcf	3,5	;RP0=0, select bank0
  5262  0B4B  1303               	bcf	3,6	;RP1=0, select bank0
  5263  0B4C  1435               	bsf	_WDT,0
  5264                           
  5265                           ;MCU_B1.c: 1112: WDT.Timer = 10;
  5266  0B4D  300A               	movlw	10
  5267  0B4E  00F4               	movwf	??_WDT_Set
  5268  0B4F  0874               	movf	??_WDT_Set,w
  5269  0B50  00B6               	movwf	_WDT+1
  5270  0B51  0008               	return
  5271  0B52                     __end_of_WDT_Set:	
  5272                           
  5273                           	psect	text25
  5274  0B36                     __ptext25:	
  5275 ;; *************** function _TMR1_Set *****************
  5276 ;; Defined at:
  5277 ;;		line 226 in file "../src/MCU_B1.c"
  5278 ;; Parameters:    Size  Location     Type
  5279 ;;		None
  5280 ;; Auto vars:     Size  Location     Type
  5281 ;;		None
  5282 ;; Return value:  Size  Location     Type
  5283 ;;		None               void
  5284 ;; Registers used:
  5285 ;;		wreg
  5286 ;; Tracked objects:
  5287 ;;		On entry : 0/0
  5288 ;;		On exit  : 0/0
  5289 ;;		Unchanged: 0/0
  5290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5291 ;;      Params:         0       0       0       0
  5292 ;;      Locals:         0       0       0       0
  5293 ;;      Temps:          0       0       0       0
  5294 ;;      Totals:         0       0       0       0
  5295 ;;Total ram usage:        0 bytes
  5296 ;; Hardware stack levels used:    1
  5297 ;; Hardware stack levels required when called:    2
  5298 ;; This function calls:
  5299 ;;		Nothing
  5300 ;; This function is called by:
  5301 ;;		_Mcu_Initialization
  5302 ;; This function uses a non-reentrant model
  5303 ;;
  5304                           
  5305                           
  5306                           ;psect for function _TMR1_Set
  5307  0B36                     _TMR1_Set:	
  5308                           
  5309                           ;MCU_B1.c: 227: T1CON = (0x40 | 0x00 | 0x01);
  5310                           
  5311                           ;incstack = 0
  5312                           ; Regs used in _TMR1_Set: [wreg]
  5313  0B36  3041               	movlw	65
  5314  0B37  1283               	bcf	3,5	;RP0=0, select bank0
  5315  0B38  1303               	bcf	3,6	;RP1=0, select bank0
  5316  0B39  0090               	movwf	16	;volatile
  5317                           
  5318                           ;MCU_B1.c: 228: TMR1H = (int)((65536-1480)/256);
  5319  0B3A  30FA               	movlw	250
  5320  0B3B  008F               	movwf	15	;volatile
  5321                           
  5322                           ;MCU_B1.c: 229: TMR1L = (int)((65536-1480)%256);
  5323  0B3C  3038               	movlw	56
  5324  0B3D  008E               	movwf	14	;volatile
  5325                           
  5326                           ;MCU_B1.c: 230: TMR1IE = 1;
  5327  0B3E  1683               	bsf	3,5	;RP0=1, select bank1
  5328  0B3F  1303               	bcf	3,6	;RP1=0, select bank1
  5329  0B40  140C               	bsf	12,0	;volatile
  5330                           
  5331                           ;MCU_B1.c: 231: PEIE = 1;
  5332  0B41  170B               	bsf	11,6	;volatile
  5333                           
  5334                           ;MCU_B1.c: 232: GIE = 1;
  5335  0B42  178B               	bsf	11,7	;volatile
  5336  0B43  0008               	return
  5337  0B44                     __end_of_TMR1_Set:	
  5338                           
  5339                           	psect	text26
  5340  0C04                     __ptext26:	
  5341 ;; *************** function _IO_Set *****************
  5342 ;; Defined at:
  5343 ;;		line 60 in file "../src/MCU_B1.c"
  5344 ;; Parameters:    Size  Location     Type
  5345 ;;		None
  5346 ;; Auto vars:     Size  Location     Type
  5347 ;;		None
  5348 ;; Return value:  Size  Location     Type
  5349 ;;		None               void
  5350 ;; Registers used:
  5351 ;;		wreg, status,2
  5352 ;; Tracked objects:
  5353 ;;		On entry : 0/0
  5354 ;;		On exit  : 0/0
  5355 ;;		Unchanged: 0/0
  5356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5357 ;;      Params:         0       0       0       0
  5358 ;;      Locals:         0       0       0       0
  5359 ;;      Temps:          0       0       0       0
  5360 ;;      Totals:         0       0       0       0
  5361 ;;Total ram usage:        0 bytes
  5362 ;; Hardware stack levels used:    1
  5363 ;; Hardware stack levels required when called:    2
  5364 ;; This function calls:
  5365 ;;		Nothing
  5366 ;; This function is called by:
  5367 ;;		_Mcu_Initialization
  5368 ;; This function uses a non-reentrant model
  5369 ;;
  5370                           
  5371                           
  5372                           ;psect for function _IO_Set
  5373  0C04                     _IO_Set:	
  5374                           
  5375                           ;MCU_B1.c: 62: TRISA = 0b00101111;;
  5376                           
  5377                           ;incstack = 0
  5378                           ; Regs used in _IO_Set: [wreg+status,2]
  5379  0C04  302F               	movlw	47
  5380  0C05  1683               	bsf	3,5	;RP0=1, select bank1
  5381  0C06  1303               	bcf	3,6	;RP1=0, select bank1
  5382  0C07  0085               	movwf	5	;volatile
  5383                           
  5384                           ;MCU_B1.c: 63: TRISB = 0b00000001;;
  5385  0C08  3001               	movlw	1
  5386  0C09  0086               	movwf	6	;volatile
  5387                           
  5388                           ;MCU_B1.c: 64: TRISC = 0b00000000;;
  5389  0C0A  0187               	clrf	7	;volatile
  5390                           
  5391                           ;MCU_B1.c: 65: ANSELA = 0b00000111;;
  5392  0C0B  3007               	movlw	7
  5393  0C0C  1683               	bsf	3,5	;RP0=1, select bank3
  5394  0C0D  1703               	bsf	3,6	;RP1=1, select bank3
  5395  0C0E  0085               	movwf	5	;volatile
  5396                           
  5397                           ;MCU_B1.c: 66: ANSELB = 0b00000001;;
  5398  0C0F  3001               	movlw	1
  5399  0C10  0086               	movwf	6	;volatile
  5400                           
  5401                           ;MCU_B1.c: 67: PORTA = 0b10101111;;
  5402  0C11  30AF               	movlw	175
  5403  0C12  1283               	bcf	3,5	;RP0=0, select bank0
  5404  0C13  1303               	bcf	3,6	;RP1=0, select bank0
  5405  0C14  0085               	movwf	5	;volatile
  5406                           
  5407                           ;MCU_B1.c: 68: PORTB = 0b00000001;;
  5408  0C15  3001               	movlw	1
  5409  0C16  0086               	movwf	6	;volatile
  5410                           
  5411                           ;MCU_B1.c: 69: PORTC = 0b00000000;;
  5412  0C17  0187               	clrf	7	;volatile
  5413                           
  5414                           ;MCU_B1.c: 71: WPUB = 0b00000000;;
  5415  0C18  1683               	bsf	3,5	;RP0=1, select bank1
  5416  0C19  1303               	bcf	3,6	;RP1=0, select bank1
  5417  0C1A  0195               	clrf	21	;volatile
  5418  0C1B  0008               	return
  5419  0C1C                     __end_of_IO_Set:	
  5420                           
  5421                           	psect	text27
  5422  0AAB                     __ptext27:	
  5423 ;; *************** function _Fosc_Set *****************
  5424 ;; Defined at:
  5425 ;;		line 56 in file "../src/MCU_B1.c"
  5426 ;; Parameters:    Size  Location     Type
  5427 ;;		None
  5428 ;; Auto vars:     Size  Location     Type
  5429 ;;		None
  5430 ;; Return value:  Size  Location     Type
  5431 ;;		None               void
  5432 ;; Registers used:
  5433 ;;		wreg
  5434 ;; Tracked objects:
  5435 ;;		On entry : 0/0
  5436 ;;		On exit  : 0/0
  5437 ;;		Unchanged: 0/0
  5438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5439 ;;      Params:         0       0       0       0
  5440 ;;      Locals:         0       0       0       0
  5441 ;;      Temps:          0       0       0       0
  5442 ;;      Totals:         0       0       0       0
  5443 ;;Total ram usage:        0 bytes
  5444 ;; Hardware stack levels used:    1
  5445 ;; Hardware stack levels required when called:    2
  5446 ;; This function calls:
  5447 ;;		Nothing
  5448 ;; This function is called by:
  5449 ;;		_Mcu_Initialization
  5450 ;; This function uses a non-reentrant model
  5451 ;;
  5452                           
  5453                           
  5454                           ;psect for function _Fosc_Set
  5455  0AAB                     _Fosc_Set:	
  5456                           
  5457                           ;MCU_B1.c: 57: OSCCON = 0x3c;
  5458                           
  5459                           ;incstack = 0
  5460                           ; Regs used in _Fosc_Set: [wreg]
  5461  0AAB  303C               	movlw	60
  5462  0AAC  1683               	bsf	3,5	;RP0=1, select bank1
  5463  0AAD  1303               	bcf	3,6	;RP1=0, select bank1
  5464  0AAE  0090               	movwf	16	;volatile
  5465  0AAF  0008               	return
  5466  0AB0                     __end_of_Fosc_Set:	
  5467                           
  5468                           	psect	text28
  5469  0AC9                     __ptext28:	
  5470 ;; *************** function _ADC_Set *****************
  5471 ;; Defined at:
  5472 ;;		line 427 in file "../src/MCU_B1.c"
  5473 ;; Parameters:    Size  Location     Type
  5474 ;;		None
  5475 ;; Auto vars:     Size  Location     Type
  5476 ;;		None
  5477 ;; Return value:  Size  Location     Type
  5478 ;;		None               void
  5479 ;; Registers used:
  5480 ;;		wreg
  5481 ;; Tracked objects:
  5482 ;;		On entry : 0/0
  5483 ;;		On exit  : 0/0
  5484 ;;		Unchanged: 0/0
  5485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5486 ;;      Params:         0       0       0       0
  5487 ;;      Locals:         0       0       0       0
  5488 ;;      Temps:          0       0       0       0
  5489 ;;      Totals:         0       0       0       0
  5490 ;;Total ram usage:        0 bytes
  5491 ;; Hardware stack levels used:    1
  5492 ;; Hardware stack levels required when called:    2
  5493 ;; This function calls:
  5494 ;;		Nothing
  5495 ;; This function is called by:
  5496 ;;		_Mcu_Initialization
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           
  5500                           
  5501                           ;psect for function _ADC_Set
  5502  0AC9                     _ADC_Set:	
  5503                           
  5504                           ;MCU_B1.c: 428: ADCON1 = 0x73;
  5505                           
  5506                           ;incstack = 0
  5507                           ; Regs used in _ADC_Set: [wreg]
  5508  0AC9  3073               	movlw	115
  5509  0ACA  1683               	bsf	3,5	;RP0=1, select bank1
  5510  0ACB  1303               	bcf	3,6	;RP1=0, select bank1
  5511  0ACC  009F               	movwf	31	;volatile
  5512                           
  5513                           ;MCU_B1.c: 429: FVRCON = 0xc1;
  5514  0ACD  30C1               	movlw	193
  5515  0ACE  009D               	movwf	29	;volatile
  5516  0ACF  0008               	return
  5517  0AD0                     __end_of_ADC_Set:	
  5518                           
  5519                           	psect	text29
  5520  022D                     __ptext29:	
  5521 ;; *************** function _Load_Main *****************
  5522 ;; Defined at:
  5523 ;;		line 39 in file "../src/OverLoad_B1.c"
  5524 ;; Parameters:    Size  Location     Type
  5525 ;;		None
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;  i               2   15[BANK0 ] int 
  5528 ;;  LightsCount     1   14[BANK0 ] unsigned char 
  5529 ;;  Load_RunStat    1   13[BANK0 ] unsigned char 
  5530 ;;  ErrorCountVa    1   12[BANK0 ] unsigned char 
  5531 ;;  error           1    9[BANK0 ] unsigned char 
  5532 ;; Return value:  Size  Location     Type
  5533 ;;		None               void
  5534 ;; Registers used:
  5535 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5541 ;;      Params:         0       0       0       0
  5542 ;;      Locals:         0       8       0       0
  5543 ;;      Temps:          0       2       0       0
  5544 ;;      Totals:         0      10       0       0
  5545 ;;Total ram usage:       10 bytes
  5546 ;; Hardware stack levels used:    1
  5547 ;; Hardware stack levels required when called:    3
  5548 ;; This function calls:
  5549 ;;		___lwdiv
  5550 ;;		___wmul
  5551 ;;		_getLight_LoadGO
  5552 ;;		_getLight_Load_Status
  5553 ;;		_getMain_All_Error_Status
  5554 ;;		_getMain_All_LightsStatus
  5555 ;;		_getMain_Lights_Count
  5556 ;;		_setLoad_AH_AL_Restore
  5557 ;; This function is called by:
  5558 ;;		_main
  5559 ;; This function uses a non-reentrant model
  5560 ;;
  5561                           
  5562                           
  5563                           ;psect for function _Load_Main
  5564  022D                     _Load_Main:	
  5565                           
  5566                           ;OverLoad_B1.c: 40: char error = getMain_All_Error_Status(0);
  5567                           
  5568                           ;incstack = 0
  5569                           ; Regs used in _Load_Main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5570  022D  3000               	movlw	0
  5571  022E  158A  25AE  118A   	fcall	_getMain_All_Error_Status
  5572  0231  1283               	bcf	3,5	;RP0=0, select bank0
  5573  0232  1303               	bcf	3,6	;RP1=0, select bank0
  5574  0233  00D8               	movwf	??_Load_Main
  5575  0234  0858               	movf	??_Load_Main,w
  5576  0235  00DA               	movwf	Load_Main@error
  5577                           
  5578                           ;OverLoad_B1.c: 41: char Load_RunStatus = 0, ErrorCountValue = 0, LightsCount=0;
  5579  0236  01DE               	clrf	Load_Main@Load_RunStatus
  5580  0237  01DD               	clrf	Load_Main@ErrorCountValue
  5581  0238  01DF               	clrf	Load_Main@LightsCount
  5582                           
  5583                           ;OverLoad_B1.c: 42: if (Load.Enable == 1) {
  5584  0239  1683               	bsf	3,5	;RP0=1, select bank1
  5585  023A  1303               	bcf	3,6	;RP1=0, select bank1
  5586  023B  1C4A               	btfss	_Load^(0+128),0
  5587  023C  2C0F               	goto	l725
  5588                           
  5589                           ;OverLoad_B1.c: 44: if (getMain_All_LightsStatus() == 0) {
  5590  023D  158A  22F1  118A   	fcall	_getMain_All_LightsStatus
  5591  0240  3800               	iorlw	0
  5592  0241  1D03               	skipz
  5593  0242  2A46               	goto	l5064
  5594                           
  5595                           ;OverLoad_B1.c: 45: Load.GO = 0;
  5596  0243  1683               	bsf	3,5	;RP0=1, select bank1
  5597  0244  1303               	bcf	3,6	;RP1=0, select bank1
  5598  0245  2A65               	goto	l5080
  5599  0246                     l5064:	
  5600                           ;OverLoad_B1.c: 46: } else {
  5601                           
  5602                           
  5603                           ;OverLoad_B1.c: 69: if (error == 0) {
  5604  0246  1283               	bcf	3,5	;RP0=0, select bank0
  5605  0247  1303               	bcf	3,6	;RP1=0, select bank0
  5606  0248  08DA               	movf	Load_Main@error,f
  5607  0249  1D03               	skipz
  5608  024A  2A62               	goto	l728
  5609                           
  5610                           ;OverLoad_B1.c: 70: Load.GO = 1;
  5611  024B  1683               	bsf	3,5	;RP0=1, select bank1
  5612  024C  1303               	bcf	3,6	;RP1=0, select bank1
  5613  024D  14CA               	bsf	_Load^(0+128),1
  5614                           
  5615                           ;OverLoad_B1.c: 72: if (getLight_LoadGO() == 1) {
  5616  024E  158A  22B0  118A   	fcall	_getLight_LoadGO
  5617  0251  3A01               	xorlw	1
  5618  0252  1D03               	skipz
  5619  0253  2A5C               	goto	l729
  5620                           
  5621                           ;OverLoad_B1.c: 73: if (Load.Run == 0 && Load.OK == 0) {
  5622  0254  1683               	bsf	3,5	;RP0=1, select bank1
  5623  0255  1303               	bcf	3,6	;RP1=0, select bank1
  5624  0256  1DCA               	btfss	_Load^(0+128),3
  5625  0257  1BCA               	btfsc	_Load^(0+128),7
  5626  0258  2A66               	goto	l727
  5627                           
  5628                           ;OverLoad_B1.c: 74: Load.Run = 1;
  5629  0259  15CA               	bsf	_Load^(0+128),3
  5630                           
  5631                           ;OverLoad_B1.c: 75: Load.Count = 0;
  5632  025A  01E3               	clrf	(_Load^(0+128)+25)
  5633                           
  5634                           ;OverLoad_B1.c: 76: }
  5635                           ;OverLoad_B1.c: 77: } else {
  5636  025B  2A66               	goto	l727
  5637  025C                     l729:	
  5638                           
  5639                           ;OverLoad_B1.c: 78: if (Load.OK == 1) {
  5640  025C  1683               	bsf	3,5	;RP0=1, select bank1
  5641  025D  1303               	bcf	3,6	;RP1=0, select bank1
  5642  025E  1FCA               	btfss	_Load^(0+128),7
  5643  025F  2A66               	goto	l727
  5644                           
  5645                           ;OverLoad_B1.c: 79: Load.OK = 0;
  5646  0260  13CA               	bcf	_Load^(0+128),7
  5647                           
  5648                           ;OverLoad_B1.c: 80: }
  5649                           ;OverLoad_B1.c: 81: }
  5650                           ;OverLoad_B1.c: 82: } else {
  5651  0261  2A66               	goto	l727
  5652  0262                     l728:	
  5653                           
  5654                           ;OverLoad_B1.c: 83: if (Load.GO == 1) {
  5655  0262  1683               	bsf	3,5	;RP0=1, select bank1
  5656  0263  1303               	bcf	3,6	;RP1=0, select bank1
  5657  0264  18CA               	btfsc	_Load^(0+128),1
  5658  0265                     l5080:	
  5659                           
  5660                           ;OverLoad_B1.c: 84: Load.GO = 0;
  5661  0265  10CA               	bcf	_Load^(0+128),1
  5662  0266                     l727:	
  5663                           
  5664                           ;OverLoad_B1.c: 85: }
  5665                           ;OverLoad_B1.c: 86: }
  5666                           ;OverLoad_B1.c: 88: }
  5667                           ;OverLoad_B1.c: 91: if (Load.GO == 1) {
  5668  0266  1CCA               	btfss	_Load^(0+128),1
  5669  0267  2BE8               	goto	l735
  5670                           
  5671                           ;OverLoad_B1.c: 92: Load.LightsON = 1;
  5672  0268  154A               	bsf	_Load^(0+128),2
  5673                           
  5674                           ;OverLoad_B1.c: 94: if (Load.ADtoGO == 1) {
  5675  0269  1E4A               	btfss	_Load^(0+128),4
  5676  026A  2BE6               	goto	l736
  5677                           
  5678                           ;OverLoad_B1.c: 95: Load.Time++;
  5679  026B  3001               	movlw	1
  5680  026C  07CB               	addwf	(_Load^(0+128)+1),f
  5681  026D  1803               	skipnc
  5682  026E  0ACC               	incf	((_Load+1)^(0+128)+1),f
  5683  026F  3000               	movlw	0
  5684  0270  07CC               	addwf	((_Load+1)^(0+128)+1),f
  5685                           
  5686                           ;OverLoad_B1.c: 96: if (Load.Time >= (40 / 20)) {
  5687  0271  3000               	movlw	0
  5688  0272  024C               	subwf	((_Load+1)^(0+128)+1),w
  5689  0273  3002               	movlw	2
  5690  0274  1903               	skipnz
  5691  0275  024B               	subwf	(_Load^(0+128)+1),w
  5692  0276  1C03               	skipc
  5693  0277  0008               	return
  5694                           
  5695                           ;OverLoad_B1.c: 97: Load.Time = 0;
  5696  0278  01CB               	clrf	(_Load^(0+128)+1)
  5697  0279  01CC               	clrf	((_Load+1)^(0+128)+1)
  5698                           
  5699                           ;OverLoad_B1.c: 98: Load.ADtoGO = 0;
  5700  027A  124A               	bcf	_Load^(0+128),4
  5701                           
  5702                           ;OverLoad_B1.c: 100: for (int i = 1; i < 4; i++) {
  5703  027B  3001               	movlw	1
  5704  027C  1283               	bcf	3,5	;RP0=0, select bank0
  5705  027D  1303               	bcf	3,6	;RP1=0, select bank0
  5706  027E  00E0               	movwf	Load_Main@i
  5707  027F  3000               	movlw	0
  5708  0280  00E1               	movwf	Load_Main@i+1
  5709  0281  0861               	movf	Load_Main@i+1,w
  5710  0282  3A80               	xorlw	128
  5711  0283  00FF               	movwf	127
  5712  0284  3080               	movlw	128
  5713  0285  027F               	subwf	127,w
  5714  0286  1D03               	skipz
  5715  0287  2A8A               	goto	u6335
  5716  0288  3004               	movlw	4
  5717  0289  0260               	subwf	Load_Main@i,w
  5718  028A                     u6335:	
  5719  028A  1803               	btfsc	3,0
  5720  028B  2AC8               	goto	l5102
  5721  028C                     l5096:	
  5722                           
  5723                           ;OverLoad_B1.c: 101: Load.ADH += Load.AH[i];
  5724  028C  1283               	bcf	3,5	;RP0=0, select bank0
  5725  028D  1303               	bcf	3,6	;RP1=0, select bank0
  5726  028E  0860               	movf	Load_Main@i,w
  5727  028F  3ED4               	addlw	(_Load+10)& (0+255)
  5728  0290  0084               	movwf	4
  5729  0291  1383               	bcf	3,7	;select IRP bank1
  5730  0292  0800               	movf	0,w
  5731  0293  00D8               	movwf	??_Load_Main
  5732  0294  01D9               	clrf	??_Load_Main+1
  5733  0295  0858               	movf	??_Load_Main,w
  5734  0296  1683               	bsf	3,5	;RP0=1, select bank1
  5735  0297  1303               	bcf	3,6	;RP1=0, select bank1
  5736  0298  07CF               	addwf	(_Load^(0+128)+5),f
  5737  0299  1803               	skipnc
  5738  029A  0AD0               	incf	((_Load+1)^(0+128)+5),f
  5739  029B  1283               	bcf	3,5	;RP0=0, select bank0
  5740  029C  1303               	bcf	3,6	;RP1=0, select bank0
  5741  029D  0859               	movf	??_Load_Main+1,w
  5742  029E  1683               	bsf	3,5	;RP0=1, select bank1
  5743  029F  1303               	bcf	3,6	;RP1=0, select bank1
  5744  02A0  07D0               	addwf	((_Load+1)^(0+128)+5),f
  5745                           
  5746                           ;OverLoad_B1.c: 102: Load.ADL += Load.AL[i];
  5747  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  5748  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  5749  02A3  0860               	movf	Load_Main@i,w
  5750  02A4  3ED9               	addlw	(_Load+15)& (0+255)
  5751  02A5  0084               	movwf	4
  5752  02A6  0800               	movf	0,w
  5753  02A7  00D8               	movwf	??_Load_Main
  5754  02A8  01D9               	clrf	??_Load_Main+1
  5755  02A9  0858               	movf	??_Load_Main,w
  5756  02AA  1683               	bsf	3,5	;RP0=1, select bank1
  5757  02AB  1303               	bcf	3,6	;RP1=0, select bank1
  5758  02AC  07D1               	addwf	(_Load^(0+128)+7),f
  5759  02AD  1803               	skipnc
  5760  02AE  0AD2               	incf	((_Load+1)^(0+128)+7),f
  5761  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  5762  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  5763  02B1  0859               	movf	??_Load_Main+1,w
  5764  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  5765  02B3  1303               	bcf	3,6	;RP1=0, select bank1
  5766  02B4  07D2               	addwf	((_Load+1)^(0+128)+7),f
  5767  02B5  3001               	movlw	1
  5768  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  5769  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  5770  02B8  07E0               	addwf	Load_Main@i,f
  5771  02B9  1803               	skipnc
  5772  02BA  0AE1               	incf	Load_Main@i+1,f
  5773  02BB  3000               	movlw	0
  5774  02BC  07E1               	addwf	Load_Main@i+1,f
  5775  02BD  0861               	movf	Load_Main@i+1,w
  5776  02BE  3A80               	xorlw	128
  5777  02BF  00FF               	movwf	127
  5778  02C0  3080               	movlw	128
  5779  02C1  027F               	subwf	127,w
  5780  02C2  1D03               	skipz
  5781  02C3  2AC6               	goto	u6345
  5782  02C4  3004               	movlw	4
  5783  02C5  0260               	subwf	Load_Main@i,w
  5784  02C6                     u6345:	
  5785  02C6  1C03               	skipc
  5786  02C7  2A8C               	goto	l5096
  5787  02C8                     l5102:	
  5788                           
  5789                           ;OverLoad_B1.c: 103: }
  5790                           ;OverLoad_B1.c: 104: Load.ADH /= 3;
  5791  02C8  3003               	movlw	3
  5792  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  5793  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  5794  02CB  00D1               	movwf	___lwdiv@divisor
  5795  02CC  3000               	movlw	0
  5796  02CD  00D2               	movwf	___lwdiv@divisor+1
  5797  02CE  1683               	bsf	3,5	;RP0=1, select bank1
  5798  02CF  1303               	bcf	3,6	;RP1=0, select bank1
  5799  02D0  0850               	movf	((_Load+1)^(0+128)+5),w
  5800  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  5801  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  5802  02D3  01D4               	clrf	___lwdiv@dividend+1
  5803  02D4  07D4               	addwf	___lwdiv@dividend+1,f
  5804  02D5  1683               	bsf	3,5	;RP0=1, select bank1
  5805  02D6  1303               	bcf	3,6	;RP1=0, select bank1
  5806  02D7  084F               	movf	(_Load^(0+128)+5),w
  5807  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  5808  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  5809  02DA  01D3               	clrf	___lwdiv@dividend
  5810  02DB  07D3               	addwf	___lwdiv@dividend,f
  5811  02DC  158A  25EC  118A   	fcall	___lwdiv
  5812  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  5813  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  5814  02E1  0852               	movf	?___lwdiv+1,w
  5815  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  5816  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  5817  02E4  01D0               	clrf	((_Load+1)^(0+128)+5)
  5818  02E5  07D0               	addwf	((_Load+1)^(0+128)+5),f
  5819  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  5820  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  5821  02E8  0851               	movf	?___lwdiv,w
  5822  02E9  1683               	bsf	3,5	;RP0=1, select bank1
  5823  02EA  1303               	bcf	3,6	;RP1=0, select bank1
  5824  02EB  01CF               	clrf	(_Load^(0+128)+5)
  5825  02EC  07CF               	addwf	(_Load^(0+128)+5),f
  5826                           
  5827                           ;OverLoad_B1.c: 105: Load.ADL /= 3;
  5828  02ED  3003               	movlw	3
  5829  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  5830  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  5831  02F0  00D1               	movwf	___lwdiv@divisor
  5832  02F1  3000               	movlw	0
  5833  02F2  00D2               	movwf	___lwdiv@divisor+1
  5834  02F3  1683               	bsf	3,5	;RP0=1, select bank1
  5835  02F4  1303               	bcf	3,6	;RP1=0, select bank1
  5836  02F5  0852               	movf	((_Load+1)^(0+128)+7),w
  5837  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  5838  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  5839  02F8  01D4               	clrf	___lwdiv@dividend+1
  5840  02F9  07D4               	addwf	___lwdiv@dividend+1,f
  5841  02FA  1683               	bsf	3,5	;RP0=1, select bank1
  5842  02FB  1303               	bcf	3,6	;RP1=0, select bank1
  5843  02FC  0851               	movf	(_Load^(0+128)+7),w
  5844  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  5845  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  5846  02FF  01D3               	clrf	___lwdiv@dividend
  5847  0300  07D3               	addwf	___lwdiv@dividend,f
  5848  0301  158A  25EC  118A   	fcall	___lwdiv
  5849  0304  1283               	bcf	3,5	;RP0=0, select bank0
  5850  0305  1303               	bcf	3,6	;RP1=0, select bank0
  5851  0306  0852               	movf	?___lwdiv+1,w
  5852  0307  1683               	bsf	3,5	;RP0=1, select bank1
  5853  0308  1303               	bcf	3,6	;RP1=0, select bank1
  5854  0309  01D2               	clrf	((_Load+1)^(0+128)+7)
  5855  030A  07D2               	addwf	((_Load+1)^(0+128)+7),f
  5856  030B  1283               	bcf	3,5	;RP0=0, select bank0
  5857  030C  1303               	bcf	3,6	;RP1=0, select bank0
  5858  030D  0851               	movf	?___lwdiv,w
  5859  030E  1683               	bsf	3,5	;RP0=1, select bank1
  5860  030F  1303               	bcf	3,6	;RP1=0, select bank1
  5861  0310  01D1               	clrf	(_Load^(0+128)+7)
  5862  0311  07D1               	addwf	(_Load^(0+128)+7),f
  5863                           
  5864                           ;OverLoad_B1.c: 106: setLoad_AH_AL_Restore();
  5865  0312  158A  23BF  118A   	fcall	_setLoad_AH_AL_Restore
  5866                           
  5867                           ;OverLoad_B1.c: 108: if (Load.ADH >= Load.ADL) {
  5868  0315  1683               	bsf	3,5	;RP0=1, select bank1
  5869  0316  1303               	bcf	3,6	;RP1=0, select bank1
  5870  0317  0852               	movf	((_Load+1)^(0+128)+7),w
  5871  0318  0250               	subwf	((_Load+1)^(0+128)+5),w
  5872  0319  1D03               	skipz
  5873  031A  2B1D               	goto	u6355
  5874  031B  0851               	movf	(_Load^(0+128)+7),w
  5875  031C  024F               	subwf	(_Load^(0+128)+5),w
  5876  031D                     u6355:	
  5877  031D  1C03               	skipc
  5878  031E  0008               	return
  5879                           
  5880                           ;OverLoad_B1.c: 109: Load.AD = Load.ADH - Load.ADL;
  5881  031F  0351               	decf	(_Load^(0+128)+7),w
  5882  0320  3AFF               	xorlw	255
  5883  0321  074F               	addwf	(_Load^(0+128)+5),w
  5884  0322  1283               	bcf	3,5	;RP0=0, select bank0
  5885  0323  1303               	bcf	3,6	;RP1=0, select bank0
  5886  0324  00D8               	movwf	??_Load_Main
  5887  0325  0858               	movf	??_Load_Main,w
  5888  0326  1683               	bsf	3,5	;RP0=1, select bank1
  5889  0327  1303               	bcf	3,6	;RP1=0, select bank1
  5890  0328  00DE               	movwf	(_Load^(0+128)+20)
  5891                           
  5892                           ;OverLoad_B1.c: 110: Load.ADH = 0;
  5893  0329  01CF               	clrf	(_Load^(0+128)+5)
  5894  032A  01D0               	clrf	((_Load+1)^(0+128)+5)
  5895                           
  5896                           ;OverLoad_B1.c: 111: Load.ADL = 0;
  5897  032B  01D1               	clrf	(_Load^(0+128)+7)
  5898  032C  01D2               	clrf	((_Load+1)^(0+128)+7)
  5899                           
  5900                           ;OverLoad_B1.c: 113: if (Load.Run == 1) {
  5901  032D  1DCA               	btfss	_Load^(0+128),3
  5902  032E  2B92               	goto	l741
  5903                           
  5904                           ;OverLoad_B1.c: 114: if (Load.Count < 2) {
  5905  032F  3002               	movlw	2
  5906  0330  0263               	subwf	(_Load^(0+128)+25),w
  5907  0331  1803               	skipnc
  5908  0332  2B92               	goto	l741
  5909                           
  5910                           ;OverLoad_B1.c: 115: Load.Count++;
  5911  0333  3001               	movlw	1
  5912  0334  1283               	bcf	3,5	;RP0=0, select bank0
  5913  0335  1303               	bcf	3,6	;RP1=0, select bank0
  5914  0336  00D8               	movwf	??_Load_Main
  5915  0337  0858               	movf	??_Load_Main,w
  5916  0338  1683               	bsf	3,5	;RP0=1, select bank1
  5917  0339  1303               	bcf	3,6	;RP1=0, select bank1
  5918  033A  07E3               	addwf	(_Load^(0+128)+25),f
  5919                           
  5920                           ;OverLoad_B1.c: 120: Load_RunStatus = getLight_Load_Status();
  5921  033B  158A  22B6  118A   	fcall	_getLight_Load_Status
  5922  033E  1283               	bcf	3,5	;RP0=0, select bank0
  5923  033F  1303               	bcf	3,6	;RP1=0, select bank0
  5924  0340  00D8               	movwf	??_Load_Main
  5925  0341  0858               	movf	??_Load_Main,w
  5926  0342  00DE               	movwf	Load_Main@Load_RunStatus
  5927                           
  5928                           ;OverLoad_B1.c: 122: LightsCount = getMain_Lights_Count();
  5929  0343  158A  2304  118A   	fcall	_getMain_Lights_Count
  5930  0346  1283               	bcf	3,5	;RP0=0, select bank0
  5931  0347  1303               	bcf	3,6	;RP1=0, select bank0
  5932  0348  00D8               	movwf	??_Load_Main
  5933  0349  0858               	movf	??_Load_Main,w
  5934  034A  00DF               	movwf	Load_Main@LightsCount
  5935                           
  5936                           ;OverLoad_B1.c: 124: if (Load.Count == 1) {
  5937  034B  1683               	bsf	3,5	;RP0=1, select bank1
  5938  034C  1303               	bcf	3,6	;RP1=0, select bank1
  5939  034D  0863               	movf	(_Load^(0+128)+25),w
  5940  034E  3A01               	xorlw	1
  5941  034F  1D03               	skipz
  5942  0350  2B53               	goto	l5128
  5943                           
  5944                           ;OverLoad_B1.c: 126: Load.JudgeValue = (int)(20*1.7);
  5945  0351  3022               	movlw	34
  5946  0352  2B60               	goto	L14
  5947  0353                     l5128:	
  5948                           ;OverLoad_B1.c: 127: } else if (Load.Count == 2) {
  5949                           
  5950  0353  0863               	movf	(_Load^(0+128)+25),w
  5951  0354  3A02               	xorlw	2
  5952  0355  1D03               	skipz
  5953  0356  2B92               	goto	l741
  5954                           
  5955                           ;OverLoad_B1.c: 128: if (LightsCount == 1) {
  5956  0357  1283               	bcf	3,5	;RP0=0, select bank0
  5957  0358  1303               	bcf	3,6	;RP1=0, select bank0
  5958  0359  085F               	movf	Load_Main@LightsCount,w
  5959  035A  3A01               	xorlw	1
  5960  035B  1D03               	skipz
  5961  035C  2B63               	goto	l5134
  5962                           
  5963                           ;OverLoad_B1.c: 129: Load.JudgeValue = (int)(8*1.7);
  5964  035D  300D               	movlw	13
  5965  035E  1683               	bsf	3,5	;RP0=1, select bank1
  5966  035F  1303               	bcf	3,6	;RP1=0, select bank1
  5967  0360                     L14:	
  5968  0360  00E1               	movwf	(_Load^(0+128)+23)
  5969  0361  3000               	movlw	0
  5970  0362  2B91               	goto	L15
  5971  0363                     l5134:	
  5972                           ;OverLoad_B1.c: 130: } else {
  5973                           
  5974                           
  5975                           ;OverLoad_B1.c: 131: if (Load_RunStatus == 0) {
  5976  0363  1283               	bcf	3,5	;RP0=0, select bank0
  5977  0364  08DE               	movf	Load_Main@Load_RunStatus,f
  5978  0365  1D03               	skipz
  5979  0366  2B84               	goto	l5138
  5980                           
  5981                           ;OverLoad_B1.c: 132: Load.JudgeValue = (int)(8*1.7) * LightsCount;
  5982  0367  085F               	movf	Load_Main@LightsCount,w
  5983  0368  00D8               	movwf	??_Load_Main
  5984  0369  01D9               	clrf	??_Load_Main+1
  5985  036A  0858               	movf	??_Load_Main,w
  5986  036B  00D1               	movwf	___wmul@multiplier
  5987  036C  0859               	movf	??_Load_Main+1,w
  5988  036D  00D2               	movwf	___wmul@multiplier+1
  5989  036E  300D               	movlw	13
  5990  036F  00D3               	movwf	___wmul@multiplicand
  5991  0370  3000               	movlw	0
  5992  0371  00D4               	movwf	___wmul@multiplicand+1
  5993  0372  158A  2525  118A   	fcall	___wmul
  5994  0375  1283               	bcf	3,5	;RP0=0, select bank0
  5995  0376  1303               	bcf	3,6	;RP1=0, select bank0
  5996  0377  0852               	movf	?___wmul+1,w
  5997  0378  1683               	bsf	3,5	;RP0=1, select bank1
  5998  0379  1303               	bcf	3,6	;RP1=0, select bank1
  5999  037A  01E2               	clrf	((_Load+1)^(0+128)+23)
  6000  037B  07E2               	addwf	((_Load+1)^(0+128)+23),f
  6001  037C  1283               	bcf	3,5	;RP0=0, select bank0
  6002  037D  1303               	bcf	3,6	;RP1=0, select bank0
  6003  037E  0851               	movf	?___wmul,w
  6004  037F  1683               	bsf	3,5	;RP0=1, select bank1
  6005  0380  1303               	bcf	3,6	;RP1=0, select bank1
  6006  0381  01E1               	clrf	(_Load^(0+128)+23)
  6007  0382  07E1               	addwf	(_Load^(0+128)+23),f
  6008                           
  6009                           ;OverLoad_B1.c: 133: } else if (Load_RunStatus == 1) {
  6010  0383  2B92               	goto	l741
  6011  0384                     l5138:	
  6012  0384  1283               	bcf	3,5	;RP0=0, select bank0
  6013  0385  085E               	movf	Load_Main@Load_RunStatus,w
  6014  0386  3A01               	xorlw	1
  6015  0387  1D03               	skipz
  6016  0388  2B92               	goto	l741
  6017                           
  6018                           ;OverLoad_B1.c: 134: Load.JudgeValue = (int)(8*1.7) + Load.TotalLoad;
  6019  0389  1683               	bsf	3,5	;RP0=1, select bank1
  6020  038A  1303               	bcf	3,6	;RP1=0, select bank1
  6021  038B  0853               	movf	(_Load^(0+128)+9),w
  6022  038C  3E0D               	addlw	13
  6023  038D  00E1               	movwf	(_Load^(0+128)+23)
  6024  038E  3000               	movlw	0
  6025  038F  1803               	skipnc
  6026  0390  3001               	movlw	1
  6027  0391                     L15:	
  6028  0391  00E2               	movwf	(_Load^(0+128)+24)
  6029  0392                     l741:	
  6030                           
  6031                           ;OverLoad_B1.c: 135: }
  6032                           ;OverLoad_B1.c: 136: }
  6033                           ;OverLoad_B1.c: 137: }
  6034                           ;OverLoad_B1.c: 138: }
  6035                           ;OverLoad_B1.c: 139: }
  6036                           ;OverLoad_B1.c: 141: if (Load.AD >= Load.JudgeValue) {
  6037  0392  1683               	bsf	3,5	;RP0=1, select bank1
  6038  0393  1303               	bcf	3,6	;RP1=0, select bank1
  6039  0394  085E               	movf	(_Load^(0+128)+20),w
  6040  0395  1283               	bcf	3,5	;RP0=0, select bank0
  6041  0396  1303               	bcf	3,6	;RP1=0, select bank0
  6042  0397  00D8               	movwf	??_Load_Main
  6043  0398  01D9               	clrf	??_Load_Main+1
  6044  0399  1683               	bsf	3,5	;RP0=1, select bank1
  6045  039A  1303               	bcf	3,6	;RP1=0, select bank1
  6046  039B  0862               	movf	((_Load+1)^(0+128)+23),w
  6047  039C  1283               	bcf	3,5	;RP0=0, select bank0
  6048  039D  1303               	bcf	3,6	;RP1=0, select bank0
  6049  039E  0259               	subwf	??_Load_Main+1,w
  6050  039F  1D03               	skipz
  6051  03A0  2BA7               	goto	u6435
  6052  03A1  1683               	bsf	3,5	;RP0=1, select bank1
  6053  03A2  1303               	bcf	3,6	;RP1=0, select bank1
  6054  03A3  0861               	movf	(_Load^(0+128)+23),w
  6055  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  6056  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  6057  03A6  0258               	subwf	??_Load_Main,w
  6058  03A7                     u6435:	
  6059  03A7  1C03               	skipc
  6060  03A8  2BC8               	goto	l5156
  6061                           
  6062                           ;OverLoad_B1.c: 142: ErrorCountValue = LightsCount == 1 ? 2 : 3;
  6063  03A9  085F               	movf	Load_Main@LightsCount,w
  6064  03AA  3A01               	xorlw	1
  6065  03AB  1903               	skipnz
  6066  03AC  2BAF               	goto	l5146
  6067  03AD  3003               	movlw	3
  6068  03AE  2BB0               	goto	L16
  6069  03AF                     l5146:	
  6070  03AF  3002               	movlw	2
  6071  03B0                     L16:	
  6072  03B0  00DB               	movwf	_Load_Main$2405
  6073  03B1  3000               	movlw	0
  6074  03B2  00DC               	movwf	_Load_Main$2405+1
  6075  03B3  085B               	movf	_Load_Main$2405,w
  6076  03B4  00D8               	movwf	??_Load_Main
  6077  03B5  0858               	movf	??_Load_Main,w
  6078  03B6  00DD               	movwf	Load_Main@ErrorCountValue
  6079                           
  6080                           ;OverLoad_B1.c: 143: Load.ErrorCount++;
  6081  03B7  3001               	movlw	1
  6082  03B8  00D8               	movwf	??_Load_Main
  6083  03B9  0858               	movf	??_Load_Main,w
  6084  03BA  1683               	bsf	3,5	;RP0=1, select bank1
  6085  03BB  1303               	bcf	3,6	;RP1=0, select bank1
  6086  03BC  07E4               	addwf	(_Load^(0+128)+26),f
  6087                           
  6088                           ;OverLoad_B1.c: 144: if (Load.ErrorCount > ErrorCountValue) {
  6089  03BD  0864               	movf	(_Load^(0+128)+26),w
  6090  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  6091  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  6092  03C0  025D               	subwf	Load_Main@ErrorCountValue,w
  6093  03C1  1803               	skipnc
  6094  03C2  0008               	return
  6095                           
  6096                           ;OverLoad_B1.c: 145: Load.ErrorCount = 0;
  6097  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  6098  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  6099  03C5  01E4               	clrf	(_Load^(0+128)+26)
  6100                           
  6101                           ;OverLoad_B1.c: 146: Load.ERROR = 1;
  6102  03C6  16CA               	bsf	_Load^(0+128),5
  6103                           
  6104                           ;OverLoad_B1.c: 168: }
  6105                           ;OverLoad_B1.c: 169: } else {
  6106  03C7  0008               	return
  6107  03C8                     l5156:	
  6108                           
  6109                           ;OverLoad_B1.c: 170: Load.ErrorCount = 0;
  6110  03C8  1683               	bsf	3,5	;RP0=1, select bank1
  6111  03C9  1303               	bcf	3,6	;RP1=0, select bank1
  6112  03CA  01E4               	clrf	(_Load^(0+128)+26)
  6113                           
  6114                           ;OverLoad_B1.c: 171: if (Load.Run == 1) {
  6115  03CB  1DCA               	btfss	_Load^(0+128),3
  6116  03CC  0008               	return
  6117                           
  6118                           ;OverLoad_B1.c: 172: Load.SafeCount++;
  6119  03CD  3001               	movlw	1
  6120  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  6121  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  6122  03D0  00D8               	movwf	??_Load_Main
  6123  03D1  0858               	movf	??_Load_Main,w
  6124  03D2  1683               	bsf	3,5	;RP0=1, select bank1
  6125  03D3  1303               	bcf	3,6	;RP1=0, select bank1
  6126  03D4  07E5               	addwf	(_Load^(0+128)+27),f
  6127                           
  6128                           ;OverLoad_B1.c: 173: if (Load.SafeCount >= 3) {
  6129  03D5  3003               	movlw	3
  6130  03D6  0265               	subwf	(_Load^(0+128)+27),w
  6131  03D7  1C03               	skipc
  6132  03D8  0008               	return
  6133                           
  6134                           ;OverLoad_B1.c: 174: Load.SafeCount = 0;
  6135  03D9  01E5               	clrf	(_Load^(0+128)+27)
  6136                           
  6137                           ;OverLoad_B1.c: 175: Load.OK = 1;
  6138  03DA  17CA               	bsf	_Load^(0+128),7
  6139                           
  6140                           ;OverLoad_B1.c: 176: Load.Run = 0;
  6141  03DB  11CA               	bcf	_Load^(0+128),3
  6142                           
  6143                           ;OverLoad_B1.c: 177: Load.Count = 0;
  6144  03DC  01E3               	clrf	(_Load^(0+128)+25)
  6145                           
  6146                           ;OverLoad_B1.c: 178: Load.TotalLoad = Load.AD;
  6147  03DD  085E               	movf	(_Load^(0+128)+20),w
  6148  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  6149  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  6150  03E0  00D8               	movwf	??_Load_Main
  6151  03E1  0858               	movf	??_Load_Main,w
  6152  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  6153  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  6154  03E4  00D3               	movwf	(_Load^(0+128)+9)
  6155                           
  6156                           ;OverLoad_B1.c: 182: }
  6157                           ;OverLoad_B1.c: 183: }
  6158                           ;OverLoad_B1.c: 206: }
  6159                           ;OverLoad_B1.c: 207: }
  6160                           ;OverLoad_B1.c: 208: }
  6161                           ;OverLoad_B1.c: 209: } else {
  6162  03E5  0008               	return
  6163  03E6                     l736:	
  6164                           
  6165                           ;OverLoad_B1.c: 210: Load.ADtoGO = 1;
  6166  03E6  164A               	bsf	_Load^(0+128),4
  6167                           
  6168                           ;OverLoad_B1.c: 211: }
  6169                           ;OverLoad_B1.c: 212: } else {
  6170  03E7  0008               	return
  6171  03E8                     l735:	
  6172                           
  6173                           ;OverLoad_B1.c: 214: if (Load.LightsON == 1) {
  6174  03E8  1D4A               	btfss	_Load^(0+128),2
  6175  03E9  2BFC               	goto	l5192
  6176                           
  6177                           ;OverLoad_B1.c: 215: Load.LightsON = 0;
  6178  03EA  114A               	bcf	_Load^(0+128),2
  6179                           
  6180                           ;OverLoad_B1.c: 217: Load.ADtoGO = 0;
  6181  03EB  124A               	bcf	_Load^(0+128),4
  6182                           
  6183                           ;OverLoad_B1.c: 218: Load.Time = 0;
  6184  03EC  01CB               	clrf	(_Load^(0+128)+1)
  6185  03ED  01CC               	clrf	((_Load+1)^(0+128)+1)
  6186                           
  6187                           ;OverLoad_B1.c: 219: setLoad_AH_AL_Restore();
  6188  03EE  158A  23BF  118A   	fcall	_setLoad_AH_AL_Restore
  6189                           
  6190                           ;OverLoad_B1.c: 221: Load.ErrorCount = 0;
  6191  03F1  1683               	bsf	3,5	;RP0=1, select bank1
  6192  03F2  1303               	bcf	3,6	;RP1=0, select bank1
  6193  03F3  01E4               	clrf	(_Load^(0+128)+26)
  6194                           
  6195                           ;OverLoad_B1.c: 222: Load.SafeCount = 0;
  6196  03F4  01E5               	clrf	(_Load^(0+128)+27)
  6197                           
  6198                           ;OverLoad_B1.c: 224: Load.ADH = 0;
  6199  03F5  01CF               	clrf	(_Load^(0+128)+5)
  6200  03F6  01D0               	clrf	((_Load+1)^(0+128)+5)
  6201                           
  6202                           ;OverLoad_B1.c: 225: Load.ADL = 0;
  6203  03F7  01D1               	clrf	(_Load^(0+128)+7)
  6204  03F8  01D2               	clrf	((_Load+1)^(0+128)+7)
  6205                           
  6206                           ;OverLoad_B1.c: 231: Load.Run = 0;
  6207  03F9  11CA               	bcf	_Load^(0+128),3
  6208                           
  6209                           ;OverLoad_B1.c: 232: Load.Count = 0;
  6210  03FA  01E3               	clrf	(_Load^(0+128)+25)
  6211                           
  6212                           ;OverLoad_B1.c: 233: Load.OK = 0;
  6213  03FB  13CA               	bcf	_Load^(0+128),7
  6214  03FC                     l5192:	
  6215                           
  6216                           ;OverLoad_B1.c: 255: }
  6217                           ;OverLoad_B1.c: 256: if (Load.ERROR == 1) {
  6218  03FC  1ECA               	btfss	_Load^(0+128),5
  6219  03FD  0008               	return
  6220                           
  6221                           ;OverLoad_B1.c: 257: Load.ErrorTime++;
  6222  03FE  3001               	movlw	1
  6223  03FF  07CD               	addwf	(_Load^(0+128)+3),f
  6224  0400  1803               	skipnc
  6225  0401  0ACE               	incf	((_Load+1)^(0+128)+3),f
  6226  0402  3000               	movlw	0
  6227  0403  07CE               	addwf	((_Load+1)^(0+128)+3),f
  6228                           
  6229                           ;OverLoad_B1.c: 258: if (Load.ErrorTime >= (10000 / 20)) {
  6230  0404  3001               	movlw	1
  6231  0405  024E               	subwf	((_Load+1)^(0+128)+3),w
  6232  0406  30F4               	movlw	244
  6233  0407  1903               	skipnz
  6234  0408  024D               	subwf	(_Load^(0+128)+3),w
  6235  0409  1C03               	skipc
  6236  040A  0008               	return
  6237                           
  6238                           ;OverLoad_B1.c: 259: Load.ErrorTime = 0;
  6239  040B  01CD               	clrf	(_Load^(0+128)+3)
  6240  040C  01CE               	clrf	((_Load+1)^(0+128)+3)
  6241                           
  6242                           ;OverLoad_B1.c: 260: Load.ERROR = 0;
  6243  040D  12CA               	bcf	_Load^(0+128),5
  6244                           
  6245                           ;OverLoad_B1.c: 261: }
  6246                           ;OverLoad_B1.c: 262: }
  6247                           ;OverLoad_B1.c: 263: }
  6248                           ;OverLoad_B1.c: 264: } else {
  6249  040E  0008               	return
  6250  040F                     l725:	
  6251                           
  6252                           ;OverLoad_B1.c: 265: if (myMain.PowerON == 1) {
  6253  040F  1283               	bcf	3,5	;RP0=0, select bank0
  6254  0410  1303               	bcf	3,6	;RP1=0, select bank0
  6255  0411  1C25               	btfss	_myMain,0
  6256  0412  0008               	return
  6257                           
  6258                           ;OverLoad_B1.c: 266: Load.Enable = 1;
  6259  0413  1683               	bsf	3,5	;RP0=1, select bank1
  6260  0414  1303               	bcf	3,6	;RP1=0, select bank1
  6261  0415  144A               	bsf	_Load^(0+128),0
  6262  0416  0008               	return
  6263  0417                     __end_of_Load_Main:	
  6264                           
  6265                           	psect	text30
  6266  0B04                     __ptext30:	
  6267 ;; *************** function _getMain_Lights_Count *****************
  6268 ;; Defined at:
  6269 ;;		line 459 in file "../src/Main_B1.c"
  6270 ;; Parameters:    Size  Location     Type
  6271 ;;		None
  6272 ;; Auto vars:     Size  Location     Type
  6273 ;;  status1         1    5[COMMON] unsigned char 
  6274 ;;  count           1    4[COMMON] unsigned char 
  6275 ;; Return value:  Size  Location     Type
  6276 ;;                  1    wreg      unsigned char 
  6277 ;; Registers used:
  6278 ;;		wreg, status,2
  6279 ;; Tracked objects:
  6280 ;;		On entry : 0/0
  6281 ;;		On exit  : 0/0
  6282 ;;		Unchanged: 0/0
  6283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6284 ;;      Params:         0       0       0       0
  6285 ;;      Locals:         2       0       0       0
  6286 ;;      Temps:          0       0       0       0
  6287 ;;      Totals:         2       0       0       0
  6288 ;;Total ram usage:        2 bytes
  6289 ;; Hardware stack levels used:    1
  6290 ;; Hardware stack levels required when called:    2
  6291 ;; This function calls:
  6292 ;;		Nothing
  6293 ;; This function is called by:
  6294 ;;		_Load_Main
  6295 ;; This function uses a non-reentrant model
  6296 ;;
  6297                           
  6298                           
  6299                           ;psect for function _getMain_Lights_Count
  6300  0B04                     _getMain_Lights_Count:	
  6301                           
  6302                           ;Main_B1.c: 460: char count = 0;
  6303                           
  6304                           ;incstack = 0
  6305                           ; Regs used in _getMain_Lights_Count: [wreg+status,2]
  6306  0B04  01F4               	clrf	getMain_Lights_Count@count
  6307                           
  6308                           ;Main_B1.c: 476: char status1 = Lights1.Status == 1 ? 1 : 0;
  6309  0B05  3000               	movlw	0
  6310  0B06  1283               	bcf	3,5	;RP0=0, select bank0
  6311  0B07  1303               	bcf	3,6	;RP1=0, select bank0
  6312  0B08  1940               	btfsc	_Lights1,2
  6313  0B09  3001               	movlw	1
  6314  0B0A  00F5               	movwf	getMain_Lights_Count@status1
  6315                           
  6316                           ;Main_B1.c: 487: return count = status1;
  6317  0B0B  0875               	movf	getMain_Lights_Count@status1,w
  6318  0B0C  00F4               	movwf	getMain_Lights_Count@count
  6319  0B0D  0008               	return
  6320  0B0E                     __end_of_getMain_Lights_Count:	
  6321                           
  6322                           	psect	text31
  6323  0AB6                     __ptext31:	
  6324 ;; *************** function _getLight_Load_Status *****************
  6325 ;; Defined at:
  6326 ;;		line 405 in file "../src/TriacRelay_B1.c"
  6327 ;; Parameters:    Size  Location     Type
  6328 ;;		None
  6329 ;; Auto vars:     Size  Location     Type
  6330 ;;  loadstatus      1    4[COMMON] unsigned char 
  6331 ;; Return value:  Size  Location     Type
  6332 ;;                  1    wreg      unsigned char 
  6333 ;; Registers used:
  6334 ;;		wreg, status,2
  6335 ;; Tracked objects:
  6336 ;;		On entry : 0/0
  6337 ;;		On exit  : 0/0
  6338 ;;		Unchanged: 0/0
  6339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6340 ;;      Params:         0       0       0       0
  6341 ;;      Locals:         1       0       0       0
  6342 ;;      Temps:          0       0       0       0
  6343 ;;      Totals:         1       0       0       0
  6344 ;;Total ram usage:        1 bytes
  6345 ;; Hardware stack levels used:    1
  6346 ;; Hardware stack levels required when called:    2
  6347 ;; This function calls:
  6348 ;;		Nothing
  6349 ;; This function is called by:
  6350 ;;		_Load_Main
  6351 ;; This function uses a non-reentrant model
  6352 ;;
  6353                           
  6354                           
  6355                           ;psect for function _getLight_Load_Status
  6356  0AB6                     _getLight_Load_Status:	
  6357                           
  6358                           ;TriacRelay_B1.c: 406: char loadstatus = Light.Load_Status == 1 ? 1 : 0;
  6359                           
  6360                           ;incstack = 0
  6361                           ; Regs used in _getLight_Load_Status: [wreg+status,2]
  6362  0AB6  3000               	movlw	0
  6363  0AB7  18F7               	btfsc	_Light,1
  6364  0AB8  3001               	movlw	1
  6365  0AB9  00F4               	movwf	getLight_Load_Status@loadstatus
  6366                           
  6367                           ;TriacRelay_B1.c: 407: return loadstatus;
  6368  0ABA  0874               	movf	getLight_Load_Status@loadstatus,w
  6369  0ABB  0008               	return
  6370  0ABC                     __end_of_getLight_Load_Status:	
  6371                           
  6372                           	psect	text32
  6373  0AB0                     __ptext32:	
  6374 ;; *************** function _getLight_LoadGO *****************
  6375 ;; Defined at:
  6376 ;;		line 400 in file "../src/TriacRelay_B1.c"
  6377 ;; Parameters:    Size  Location     Type
  6378 ;;		None
  6379 ;; Auto vars:     Size  Location     Type
  6380 ;;  loadgo          1    4[COMMON] unsigned char 
  6381 ;; Return value:  Size  Location     Type
  6382 ;;                  1    wreg      unsigned char 
  6383 ;; Registers used:
  6384 ;;		wreg, status,2
  6385 ;; Tracked objects:
  6386 ;;		On entry : 0/0
  6387 ;;		On exit  : 0/0
  6388 ;;		Unchanged: 0/0
  6389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6390 ;;      Params:         0       0       0       0
  6391 ;;      Locals:         1       0       0       0
  6392 ;;      Temps:          0       0       0       0
  6393 ;;      Totals:         1       0       0       0
  6394 ;;Total ram usage:        1 bytes
  6395 ;; Hardware stack levels used:    1
  6396 ;; Hardware stack levels required when called:    2
  6397 ;; This function calls:
  6398 ;;		Nothing
  6399 ;; This function is called by:
  6400 ;;		_Load_Main
  6401 ;; This function uses a non-reentrant model
  6402 ;;
  6403                           
  6404                           
  6405                           ;psect for function _getLight_LoadGO
  6406  0AB0                     _getLight_LoadGO:	
  6407                           
  6408                           ;TriacRelay_B1.c: 401: char loadgo = Light.LoadGO == 1 ? 1 : 0;
  6409                           
  6410                           ;incstack = 0
  6411                           ; Regs used in _getLight_LoadGO: [wreg+status,2]
  6412  0AB0  3000               	movlw	0
  6413  0AB1  1877               	btfsc	_Light,0
  6414  0AB2  3001               	movlw	1
  6415  0AB3  00F4               	movwf	getLight_LoadGO@loadgo
  6416                           
  6417                           ;TriacRelay_B1.c: 402: return loadgo;
  6418  0AB4  0874               	movf	getLight_LoadGO@loadgo,w
  6419  0AB5  0008               	return
  6420  0AB6                     __end_of_getLight_LoadGO:	
  6421                           
  6422                           	psect	text33
  6423  0D25                     __ptext33:	
  6424 ;; *************** function ___wmul *****************
  6425 ;; Defined at:
  6426 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul16.c"
  6427 ;; Parameters:    Size  Location     Type
  6428 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6429 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6430 ;; Auto vars:     Size  Location     Type
  6431 ;;  product         2    4[COMMON] unsigned int 
  6432 ;; Return value:  Size  Location     Type
  6433 ;;                  2    0[BANK0 ] unsigned int 
  6434 ;; Registers used:
  6435 ;;		wreg, status,2, status,0
  6436 ;; Tracked objects:
  6437 ;;		On entry : 0/0
  6438 ;;		On exit  : 0/0
  6439 ;;		Unchanged: 0/0
  6440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6441 ;;      Params:         0       4       0       0
  6442 ;;      Locals:         2       0       0       0
  6443 ;;      Temps:          0       0       0       0
  6444 ;;      Totals:         2       4       0       0
  6445 ;;Total ram usage:        6 bytes
  6446 ;; Hardware stack levels used:    1
  6447 ;; Hardware stack levels required when called:    2
  6448 ;; This function calls:
  6449 ;;		Nothing
  6450 ;; This function is called by:
  6451 ;;		_Load_Main
  6452 ;; This function uses a non-reentrant model
  6453 ;;
  6454                           
  6455                           
  6456                           ;psect for function ___wmul
  6457  0D25                     ___wmul:	
  6458                           
  6459                           ;incstack = 0
  6460                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6461  0D25  01F4               	clrf	___wmul@product
  6462  0D26  01F5               	clrf	___wmul@product+1
  6463  0D27                     l4842:	
  6464  0D27  1283               	bcf	3,5	;RP0=0, select bank0
  6465  0D28  1303               	bcf	3,6	;RP1=0, select bank0
  6466  0D29  1C51               	btfss	___wmul@multiplier,0
  6467  0D2A  2D31               	goto	l1427
  6468  0D2B  0853               	movf	___wmul@multiplicand,w
  6469  0D2C  07F4               	addwf	___wmul@product,f
  6470  0D2D  1803               	skipnc
  6471  0D2E  0AF5               	incf	___wmul@product+1,f
  6472  0D2F  0854               	movf	___wmul@multiplicand+1,w
  6473  0D30  07F5               	addwf	___wmul@product+1,f
  6474  0D31                     l1427:	
  6475  0D31  3001               	movlw	1
  6476  0D32                     u5775:	
  6477  0D32  1003               	clrc
  6478  0D33  0DD3               	rlf	___wmul@multiplicand,f
  6479  0D34  0DD4               	rlf	___wmul@multiplicand+1,f
  6480  0D35  3EFF               	addlw	-1
  6481  0D36  1D03               	skipz
  6482  0D37  2D32               	goto	u5775
  6483  0D38  3001               	movlw	1
  6484  0D39                     u5785:	
  6485  0D39  1003               	clrc
  6486  0D3A  0CD2               	rrf	___wmul@multiplier+1,f
  6487  0D3B  0CD1               	rrf	___wmul@multiplier,f
  6488  0D3C  3EFF               	addlw	-1
  6489  0D3D  1D03               	skipz
  6490  0D3E  2D39               	goto	u5785
  6491  0D3F  0852               	movf	___wmul@multiplier+1,w
  6492  0D40  0451               	iorwf	___wmul@multiplier,w
  6493  0D41  1D03               	skipz
  6494  0D42  2D27               	goto	l4842
  6495  0D43  0875               	movf	___wmul@product+1,w
  6496  0D44  01D2               	clrf	?___wmul+1
  6497  0D45  07D2               	addwf	?___wmul+1,f
  6498  0D46  0874               	movf	___wmul@product,w
  6499  0D47  01D1               	clrf	?___wmul
  6500  0D48  07D1               	addwf	?___wmul,f
  6501  0D49  0008               	return
  6502  0D4A                     __end_of___wmul:	
  6503                           
  6504                           	psect	text34
  6505  0DEC                     __ptext34:	
  6506 ;; *************** function ___lwdiv *****************
  6507 ;; Defined at:
  6508 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  6509 ;; Parameters:    Size  Location     Type
  6510 ;;  divisor         2    0[BANK0 ] unsigned int 
  6511 ;;  dividend        2    2[BANK0 ] unsigned int 
  6512 ;; Auto vars:     Size  Location     Type
  6513 ;;  quotient        2    5[BANK0 ] unsigned int 
  6514 ;;  counter         1    4[BANK0 ] unsigned char 
  6515 ;; Return value:  Size  Location     Type
  6516 ;;                  2    0[BANK0 ] unsigned int 
  6517 ;; Registers used:
  6518 ;;		wreg, status,2, status,0
  6519 ;; Tracked objects:
  6520 ;;		On entry : 0/0
  6521 ;;		On exit  : 0/0
  6522 ;;		Unchanged: 0/0
  6523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6524 ;;      Params:         0       4       0       0
  6525 ;;      Locals:         0       3       0       0
  6526 ;;      Temps:          1       0       0       0
  6527 ;;      Totals:         1       7       0       0
  6528 ;;Total ram usage:        8 bytes
  6529 ;; Hardware stack levels used:    1
  6530 ;; Hardware stack levels required when called:    2
  6531 ;; This function calls:
  6532 ;;		Nothing
  6533 ;; This function is called by:
  6534 ;;		_Load_Main
  6535 ;;		_getPIR_AD
  6536 ;; This function uses a non-reentrant model
  6537 ;;
  6538                           
  6539                           
  6540                           ;psect for function ___lwdiv
  6541  0DEC                     ___lwdiv:	
  6542                           
  6543                           ;incstack = 0
  6544                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6545  0DEC  1283               	bcf	3,5	;RP0=0, select bank0
  6546  0DED  1303               	bcf	3,6	;RP1=0, select bank0
  6547  0DEE  01D6               	clrf	___lwdiv@quotient
  6548  0DEF  01D7               	clrf	___lwdiv@quotient+1
  6549  0DF0  0852               	movf	___lwdiv@divisor+1,w
  6550  0DF1  0451               	iorwf	___lwdiv@divisor,w
  6551  0DF2  1903               	skipnz
  6552  0DF3  2E25               	goto	l4874
  6553  0DF4  01D5               	clrf	___lwdiv@counter
  6554  0DF5  0AD5               	incf	___lwdiv@counter,f
  6555  0DF6                     l4862:	
  6556  0DF6  1BD2               	btfsc	___lwdiv@divisor+1,7
  6557  0DF7  2E04               	goto	l4864
  6558  0DF8  3001               	movlw	1
  6559  0DF9                     u5815:	
  6560  0DF9  1003               	clrc
  6561  0DFA  0DD1               	rlf	___lwdiv@divisor,f
  6562  0DFB  0DD2               	rlf	___lwdiv@divisor+1,f
  6563  0DFC  3EFF               	addlw	-1
  6564  0DFD  1D03               	skipz
  6565  0DFE  2DF9               	goto	u5815
  6566  0DFF  3001               	movlw	1
  6567  0E00  00F4               	movwf	??___lwdiv
  6568  0E01  0874               	movf	??___lwdiv,w
  6569  0E02  07D5               	addwf	___lwdiv@counter,f
  6570  0E03  2DF6               	goto	l4862
  6571  0E04                     l4864:	
  6572  0E04  3001               	movlw	1
  6573  0E05                     u5835:	
  6574  0E05  1003               	clrc
  6575  0E06  0DD6               	rlf	___lwdiv@quotient,f
  6576  0E07  0DD7               	rlf	___lwdiv@quotient+1,f
  6577  0E08  3EFF               	addlw	-1
  6578  0E09  1D03               	skipz
  6579  0E0A  2E05               	goto	u5835
  6580  0E0B  0852               	movf	___lwdiv@divisor+1,w
  6581  0E0C  0254               	subwf	___lwdiv@dividend+1,w
  6582  0E0D  1D03               	skipz
  6583  0E0E  2E11               	goto	u5845
  6584  0E0F  0851               	movf	___lwdiv@divisor,w
  6585  0E10  0253               	subwf	___lwdiv@dividend,w
  6586  0E11                     u5845:	
  6587  0E11  1C03               	skipc
  6588  0E12  2E1A               	goto	l4870
  6589  0E13  0851               	movf	___lwdiv@divisor,w
  6590  0E14  02D3               	subwf	___lwdiv@dividend,f
  6591  0E15  0852               	movf	___lwdiv@divisor+1,w
  6592  0E16  1C03               	skipc
  6593  0E17  03D4               	decf	___lwdiv@dividend+1,f
  6594  0E18  02D4               	subwf	___lwdiv@dividend+1,f
  6595  0E19  1456               	bsf	___lwdiv@quotient,0
  6596  0E1A                     l4870:	
  6597  0E1A  3001               	movlw	1
  6598  0E1B                     u5855:	
  6599  0E1B  1003               	clrc
  6600  0E1C  0CD2               	rrf	___lwdiv@divisor+1,f
  6601  0E1D  0CD1               	rrf	___lwdiv@divisor,f
  6602  0E1E  3EFF               	addlw	-1
  6603  0E1F  1D03               	skipz
  6604  0E20  2E1B               	goto	u5855
  6605  0E21  3001               	movlw	1
  6606  0E22  02D5               	subwf	___lwdiv@counter,f
  6607  0E23  1D03               	btfss	3,2
  6608  0E24  2E04               	goto	l4864
  6609  0E25                     l4874:	
  6610  0E25  0857               	movf	___lwdiv@quotient+1,w
  6611  0E26  01D2               	clrf	?___lwdiv+1
  6612  0E27  07D2               	addwf	?___lwdiv+1,f
  6613  0E28  0856               	movf	___lwdiv@quotient,w
  6614  0E29  01D1               	clrf	?___lwdiv
  6615  0E2A  07D1               	addwf	?___lwdiv,f
  6616  0E2B  0008               	return
  6617  0E2C                     __end_of___lwdiv:	
  6618                           
  6619                           	psect	text35
  6620  0A90                     __ptext35:	
  6621 ;; *************** function _Load_Initialization *****************
  6622 ;; Defined at:
  6623 ;;		line 9 in file "../src/OverLoad_B1.c"
  6624 ;; Parameters:    Size  Location     Type
  6625 ;;		None
  6626 ;; Auto vars:     Size  Location     Type
  6627 ;;		None
  6628 ;; Return value:  Size  Location     Type
  6629 ;;		None               void
  6630 ;; Registers used:
  6631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6632 ;; Tracked objects:
  6633 ;;		On entry : 0/0
  6634 ;;		On exit  : 0/0
  6635 ;;		Unchanged: 0/0
  6636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6637 ;;      Params:         0       0       0       0
  6638 ;;      Locals:         0       0       0       0
  6639 ;;      Temps:          0       0       0       0
  6640 ;;      Totals:         0       0       0       0
  6641 ;;Total ram usage:        0 bytes
  6642 ;; Hardware stack levels used:    1
  6643 ;; Hardware stack levels required when called:    3
  6644 ;; This function calls:
  6645 ;;		_setLoad_AH_AL_Restore
  6646 ;; This function is called by:
  6647 ;;		_main
  6648 ;; This function uses a non-reentrant model
  6649 ;;
  6650                           
  6651                           
  6652                           ;psect for function _Load_Initialization
  6653  0A90                     _Load_Initialization:	
  6654                           
  6655                           ;OverLoad_B1.c: 11: setLoad_AH_AL_Restore();
  6656                           
  6657                           ;incstack = 0
  6658                           ; Regs used in _Load_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6659  0A90  158A  23BF         	fcall	_setLoad_AH_AL_Restore
  6660  0A92  0008               	return
  6661  0A93                     __end_of_Load_Initialization:	
  6662                           
  6663                           	psect	text36
  6664  0BBF                     __ptext36:	
  6665 ;; *************** function _setLoad_AH_AL_Restore *****************
  6666 ;; Defined at:
  6667 ;;		line 292 in file "../src/OverLoad_B1.c"
  6668 ;; Parameters:    Size  Location     Type
  6669 ;;		None
  6670 ;; Auto vars:     Size  Location     Type
  6671 ;;  i               1    5[COMMON] unsigned char 
  6672 ;; Return value:  Size  Location     Type
  6673 ;;		None               void
  6674 ;; Registers used:
  6675 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6676 ;; Tracked objects:
  6677 ;;		On entry : 0/0
  6678 ;;		On exit  : 0/0
  6679 ;;		Unchanged: 0/0
  6680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6681 ;;      Params:         0       0       0       0
  6682 ;;      Locals:         1       0       0       0
  6683 ;;      Temps:          1       0       0       0
  6684 ;;      Totals:         2       0       0       0
  6685 ;;Total ram usage:        2 bytes
  6686 ;; Hardware stack levels used:    1
  6687 ;; Hardware stack levels required when called:    2
  6688 ;; This function calls:
  6689 ;;		Nothing
  6690 ;; This function is called by:
  6691 ;;		_Load_Initialization
  6692 ;;		_Load_Main
  6693 ;; This function uses a non-reentrant model
  6694 ;;
  6695                           
  6696                           
  6697                           ;psect for function _setLoad_AH_AL_Restore
  6698  0BBF                     _setLoad_AH_AL_Restore:	
  6699                           
  6700                           ;OverLoad_B1.c: 293: char i;
  6701                           ;OverLoad_B1.c: 294: for (i = 0; i < 5; i++) {
  6702                           
  6703                           ;incstack = 0
  6704                           ; Regs used in _setLoad_AH_AL_Restore: [wreg-fsr0h+status,2+status,0]
  6705  0BBF  01F5               	clrf	setLoad_AH_AL_Restore@i
  6706  0BC0                     L17:	
  6707  0BC0  3005               	movlw	5
  6708  0BC1  0275               	subwf	setLoad_AH_AL_Restore@i,w
  6709  0BC2  1803               	btfsc	3,0
  6710  0BC3  0008               	return
  6711                           
  6712                           ;OverLoad_B1.c: 295: Load.AH[i] = 0;
  6713  0BC4  0875               	movf	setLoad_AH_AL_Restore@i,w
  6714  0BC5  3ED4               	addlw	(_Load+10)& (0+255)
  6715  0BC6  0084               	movwf	4
  6716  0BC7  1383               	bcf	3,7	;select IRP bank1
  6717  0BC8  0180               	clrf	0
  6718                           
  6719                           ;OverLoad_B1.c: 296: Load.AL[i] = 0xff;
  6720  0BC9  30FF               	movlw	255
  6721  0BCA  00F4               	movwf	??_setLoad_AH_AL_Restore
  6722  0BCB  0875               	movf	setLoad_AH_AL_Restore@i,w
  6723  0BCC  3ED9               	addlw	(_Load+15)& (0+255)
  6724  0BCD  0084               	movwf	4
  6725  0BCE  0874               	movf	??_setLoad_AH_AL_Restore,w
  6726  0BCF  0080               	movwf	0
  6727  0BD0  3001               	movlw	1
  6728  0BD1  00F4               	movwf	??_setLoad_AH_AL_Restore
  6729  0BD2  0874               	movf	??_setLoad_AH_AL_Restore,w
  6730  0BD3  07F5               	addwf	setLoad_AH_AL_Restore@i,f
  6731  0BD4  2BC0               	goto	L17
  6732  0BD5                     __end_of_setLoad_AH_AL_Restore:	
  6733                           
  6734                           	psect	text37
  6735  0CA1                     __ptext37:	
  6736 ;; *************** function _Lights_Main *****************
  6737 ;; Defined at:
  6738 ;;		line 52 in file "../src/TriacRelay_B1.c"
  6739 ;; Parameters:    Size  Location     Type
  6740 ;;		None
  6741 ;; Auto vars:     Size  Location     Type
  6742 ;;		None
  6743 ;; Return value:  Size  Location     Type
  6744 ;;		None               void
  6745 ;; Registers used:
  6746 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6747 ;; Tracked objects:
  6748 ;;		On entry : 0/0
  6749 ;;		On exit  : 0/0
  6750 ;;		Unchanged: 0/0
  6751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6752 ;;      Params:         0       0       0       0
  6753 ;;      Locals:         0       0       0       0
  6754 ;;      Temps:          0       0       0       0
  6755 ;;      Totals:         0       0       0       0
  6756 ;;Total ram usage:        0 bytes
  6757 ;; Hardware stack levels used:    1
  6758 ;; Hardware stack levels required when called:    6
  6759 ;; This function calls:
  6760 ;;		_Lights_Control
  6761 ;;		_getLoad_OK
  6762 ;;		_getMain_All_Error_Status
  6763 ;;		_getMain_All_LightsStatus
  6764 ;;		_setLights_Main
  6765 ;; This function is called by:
  6766 ;;		_main
  6767 ;; This function uses a non-reentrant model
  6768 ;;
  6769                           
  6770                           
  6771                           ;psect for function _Lights_Main
  6772  0CA1                     _Lights_Main:	
  6773                           
  6774                           ;TriacRelay_B1.c: 65: if (Light.LoadGO == 1) {
  6775                           
  6776                           ;incstack = 0
  6777                           ; Regs used in _Lights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6778  0CA1  1C77               	btfss	_Light,0
  6779  0CA2  2CB7               	goto	l5210
  6780                           
  6781                           ;TriacRelay_B1.c: 66: if (getLoad_OK() == 1 || getMain_All_Error_Status(0) != 0 || getMa
      +                          in_All_LightsStatus() == 0) {
  6782  0CA3  158A  22D0  158A   	fcall	_getLoad_OK
  6783  0CA6  3A01               	xorlw	1
  6784  0CA7  1903               	skipnz
  6785  0CA8  2CB6               	goto	l1304
  6786  0CA9  3000               	movlw	0
  6787  0CAA  158A  25AE  158A   	fcall	_getMain_All_Error_Status
  6788  0CAD  3800               	iorlw	0
  6789  0CAE  1D03               	skipz
  6790  0CAF  2CB6               	goto	l1304
  6791  0CB0  158A  22F1  158A   	fcall	_getMain_All_LightsStatus
  6792  0CB3  3800               	iorlw	0
  6793  0CB4  1D03               	skipz
  6794  0CB5  2CB7               	goto	l5210
  6795  0CB6                     l1304:	
  6796                           
  6797                           ;TriacRelay_B1.c: 67: Light.LoadGO = 0;
  6798  0CB6  1077               	bcf	_Light,0
  6799  0CB7                     l5210:	
  6800                           
  6801                           ;TriacRelay_B1.c: 68: }
  6802                           ;TriacRelay_B1.c: 69: }
  6803                           ;TriacRelay_B1.c: 73: setLights_Main(1);
  6804  0CB7  3001               	movlw	1
  6805  0CB8  158A  254A  158A   	fcall	_setLights_Main
  6806                           
  6807                           ;TriacRelay_B1.c: 74: Lights_Control(1);
  6808  0CBB  3001               	movlw	1
  6809  0CBC  118A  2607         	fcall	_Lights_Control
  6810  0CBE  0008               	return
  6811  0CBF                     __end_of_Lights_Main:	
  6812                           
  6813                           	psect	text38
  6814  0D4A                     __ptext38:	
  6815 ;; *************** function _setLights_Main *****************
  6816 ;; Defined at:
  6817 ;;		line 91 in file "../src/TriacRelay_B1.c"
  6818 ;; Parameters:    Size  Location     Type
  6819 ;;  lights          1    wreg     unsigned char 
  6820 ;; Auto vars:     Size  Location     Type
  6821 ;;  lights          1    5[BANK0 ] unsigned char 
  6822 ;; Return value:  Size  Location     Type
  6823 ;;		None               void
  6824 ;; Registers used:
  6825 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6826 ;; Tracked objects:
  6827 ;;		On entry : 0/0
  6828 ;;		On exit  : 0/0
  6829 ;;		Unchanged: 0/0
  6830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6831 ;;      Params:         0       0       0       0
  6832 ;;      Locals:         0       1       0       0
  6833 ;;      Temps:          0       0       0       0
  6834 ;;      Totals:         0       1       0       0
  6835 ;;Total ram usage:        1 bytes
  6836 ;; Hardware stack levels used:    1
  6837 ;; Hardware stack levels required when called:    5
  6838 ;; This function calls:
  6839 ;;		_LightsPointSelect
  6840 ;;		_getLights_Allow_Condition
  6841 ;;		_setLights
  6842 ;; This function is called by:
  6843 ;;		_Lights_Main
  6844 ;; This function uses a non-reentrant model
  6845 ;;
  6846                           
  6847                           
  6848                           ;psect for function _setLights_Main
  6849  0D4A                     _setLights_Main:	
  6850                           
  6851                           ;incstack = 0
  6852                           ; Regs used in _setLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6853                           ;setLights_Main@lights stored from wreg
  6854  0D4A  1283               	bcf	3,5	;RP0=0, select bank0
  6855  0D4B  1303               	bcf	3,6	;RP1=0, select bank0
  6856  0D4C  00D6               	movwf	setLights_Main@lights
  6857                           
  6858                           ;TriacRelay_B1.c: 92: LightsPointSelect(lights);
  6859  0D4D  0856               	movf	setLights_Main@lights,w
  6860  0D4E  158A  22FA  158A   	fcall	_LightsPointSelect
  6861                           
  6862                           ;TriacRelay_B1.c: 93: if (Lights->GO == 0) {
  6863  0D51  0878               	movf	_Lights,w
  6864  0D52  0084               	movwf	4
  6865  0D53  1383               	bcf	3,7	;select IRP bank0
  6866  0D54  1880               	btfsc	0,1
  6867  0D55  0008               	return
  6868                           
  6869                           ;TriacRelay_B1.c: 94: if (Lights->Trigger == 1) {
  6870  0D56  0878               	movf	_Lights,w
  6871  0D57  0084               	movwf	4
  6872  0D58  1D80               	btfss	0,3
  6873  0D59  0008               	return
  6874                           
  6875                           ;TriacRelay_B1.c: 95: if (getLights_Allow_Condition(lights) == 0) {
  6876  0D5A  1283               	bcf	3,5	;RP0=0, select bank0
  6877  0D5B  1303               	bcf	3,6	;RP1=0, select bank0
  6878  0D5C  0856               	movf	setLights_Main@lights,w
  6879  0D5D  158A  23D5  158A   	fcall	_getLights_Allow_Condition
  6880  0D60  3800               	iorlw	0
  6881  0D61  1D03               	skipz
  6882  0D62  0008               	return
  6883                           
  6884                           ;TriacRelay_B1.c: 96: Lights->Trigger = 0;
  6885  0D63  0878               	movf	_Lights,w
  6886  0D64  0084               	movwf	4
  6887  0D65  1383               	bcf	3,7	;select IRP bank0
  6888  0D66  1180               	bcf	0,3
  6889                           
  6890                           ;TriacRelay_B1.c: 97: if (Lights->Switch == 1) {
  6891  0D67  0878               	movf	_Lights,w
  6892  0D68  0084               	movwf	4
  6893  0D69  1E00               	btfss	0,4
  6894  0D6A  2D73               	goto	l4810
  6895                           
  6896                           ;TriacRelay_B1.c: 98: setLights(lights, 1);
  6897  0D6B  1283               	bcf	3,5	;RP0=0, select bank0
  6898  0D6C  1303               	bcf	3,6	;RP1=0, select bank0
  6899  0D6D  01D3               	clrf	setLights@status
  6900  0D6E  0AD3               	incf	setLights@status,f
  6901  0D6F  0856               	movf	setLights_Main@lights,w
  6902  0D70  118A  268A         	fcall	_setLights
  6903                           
  6904                           ;TriacRelay_B1.c: 99: } else {
  6905  0D72  0008               	return
  6906  0D73                     l4810:	
  6907                           
  6908                           ;TriacRelay_B1.c: 100: setLights(lights, 0);
  6909  0D73  1283               	bcf	3,5	;RP0=0, select bank0
  6910  0D74  1303               	bcf	3,6	;RP1=0, select bank0
  6911  0D75  01D3               	clrf	setLights@status
  6912  0D76  0856               	movf	setLights_Main@lights,w
  6913  0D77  118A  268A         	fcall	_setLights
  6914  0D79  0008               	return
  6915  0D7A                     __end_of_setLights_Main:	
  6916                           
  6917                           	psect	text39
  6918  068A                     __ptext39:	
  6919 ;; *************** function _setLights *****************
  6920 ;; Defined at:
  6921 ;;		line 108 in file "../src/TriacRelay_B1.c"
  6922 ;; Parameters:    Size  Location     Type
  6923 ;;  lights          1    wreg     unsigned char 
  6924 ;;  status          1    2[BANK0 ] unsigned char 
  6925 ;; Auto vars:     Size  Location     Type
  6926 ;;  lights          1    4[BANK0 ] unsigned char 
  6927 ;; Return value:  Size  Location     Type
  6928 ;;		None               void
  6929 ;; Registers used:
  6930 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6931 ;; Tracked objects:
  6932 ;;		On entry : 0/0
  6933 ;;		On exit  : 0/0
  6934 ;;		Unchanged: 0/0
  6935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6936 ;;      Params:         0       1       0       0
  6937 ;;      Locals:         0       1       0       0
  6938 ;;      Temps:          0       1       0       0
  6939 ;;      Totals:         0       3       0       0
  6940 ;;Total ram usage:        3 bytes
  6941 ;; Hardware stack levels used:    1
  6942 ;; Hardware stack levels required when called:    4
  6943 ;; This function calls:
  6944 ;;		_setLED
  6945 ;;		_setLights_Line
  6946 ;; This function is called by:
  6947 ;;		_setLights_Main
  6948 ;; This function uses a non-reentrant model
  6949 ;;
  6950                           
  6951                           
  6952                           ;psect for function _setLights
  6953  068A                     _setLights:	
  6954                           
  6955                           ;incstack = 0
  6956                           ; Regs used in _setLights: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6957                           ;setLights@lights stored from wreg
  6958  068A  1283               	bcf	3,5	;RP0=0, select bank0
  6959  068B  1303               	bcf	3,6	;RP1=0, select bank0
  6960  068C  00D5               	movwf	setLights@lights
  6961                           
  6962                           ;TriacRelay_B1.c: 116: if (status == 1) {
  6963  068D  0853               	movf	setLights@status,w
  6964  068E  3A01               	xorlw	1
  6965  068F  1D03               	skipz
  6966  0690  2ECD               	goto	l4642
  6967                           
  6968                           ;TriacRelay_B1.c: 118: if (lights == 2) {
  6969  0691  0855               	movf	setLights@lights,w
  6970  0692  3A02               	xorlw	2
  6971  0693  1D03               	skipz
  6972  0694  2EA2               	goto	l4624
  6973                           
  6974                           ;TriacRelay_B1.c: 119: setLED(1, 0);
  6975  0695  01D1               	clrf	setLED@command
  6976  0696  3001               	movlw	1
  6977  0697  158A  278F  118A   	fcall	_setLED
  6978                           
  6979                           ;TriacRelay_B1.c: 120: setLED(2, 1);
  6980  069A  1283               	bcf	3,5	;RP0=0, select bank0
  6981  069B  1303               	bcf	3,6	;RP1=0, select bank0
  6982  069C  01D1               	clrf	setLED@command
  6983  069D  0AD1               	incf	setLED@command,f
  6984  069E  3002               	movlw	2
  6985  069F  158A  278F  118A   	fcall	_setLED
  6986  06A2                     l4624:	
  6987                           
  6988                           ;TriacRelay_B1.c: 121: }
  6989                           ;TriacRelay_B1.c: 127: if (Lights->Status == 0) {
  6990  06A2  0878               	movf	_Lights,w
  6991  06A3  0084               	movwf	4
  6992  06A4  1383               	bcf	3,7	;select IRP bank0
  6993  06A5  1900               	btfsc	0,2
  6994  06A6  2EC6               	goto	l4638
  6995                           
  6996                           ;TriacRelay_B1.c: 128: Lights->Status = 1;
  6997  06A7  0878               	movf	_Lights,w
  6998  06A8  0084               	movwf	4
  6999  06A9  1500               	bsf	0,2
  7000                           
  7001                           ;TriacRelay_B1.c: 130: if (lights == 1) {
  7002  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  7003  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  7004  06AC  0855               	movf	setLights@lights,w
  7005  06AD  3A01               	xorlw	1
  7006  06AE  1D03               	skipz
  7007  06AF  2EC6               	goto	l4638
  7008                           
  7009                           ;TriacRelay_B1.c: 131: RB2 = 1;
  7010  06B0  1506               	bsf	6,2	;volatile
  7011                           
  7012                           ;TriacRelay_B1.c: 132: Lights->RelayValue = 100;
  7013  06B1  3064               	movlw	100
  7014  06B2  00D4               	movwf	??_setLights
  7015  06B3  0878               	movf	_Lights,w
  7016  06B4  3E04               	addlw	4
  7017  06B5  0084               	movwf	4
  7018  06B6  0854               	movf	??_setLights,w
  7019  06B7  0080               	movwf	0
  7020                           
  7021                           ;TriacRelay_B1.c: 133: Lights->TriacValue = 140;
  7022  06B8  308C               	movlw	140
  7023  06B9  00D4               	movwf	??_setLights
  7024  06BA  0878               	movf	_Lights,w
  7025  06BB  3E03               	addlw	3
  7026  06BC  0084               	movwf	4
  7027  06BD  0854               	movf	??_setLights,w
  7028  06BE  0080               	movwf	0
  7029                           
  7030                           ;TriacRelay_B1.c: 134: Lights->Time = 0;
  7031  06BF  0878               	movf	_Lights,w
  7032  06C0  3E02               	addlw	2
  7033  06C1  0084               	movwf	4
  7034  06C2  0180               	clrf	0
  7035                           
  7036                           ;TriacRelay_B1.c: 135: Lights->GO = 1;
  7037  06C3  0878               	movf	_Lights,w
  7038  06C4  0084               	movwf	4
  7039  06C5  1480               	bsf	0,1
  7040  06C6                     l4638:	
  7041                           
  7042                           ;TriacRelay_B1.c: 136: }
  7043                           ;TriacRelay_B1.c: 162: }
  7044                           ;TriacRelay_B1.c: 164: Light.Load_Status = 1;
  7045  06C6  14F7               	bsf	_Light,1
  7046                           
  7047                           ;TriacRelay_B1.c: 165: setLights_Line(lights);
  7048  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  7049  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  7050  06C9  0855               	movf	setLights@lights,w
  7051  06CA  158A  2328         	fcall	_setLights_Line
  7052                           
  7053                           ;TriacRelay_B1.c: 167: } else {
  7054  06CC  0008               	return
  7055  06CD                     l4642:	
  7056                           
  7057                           ;TriacRelay_B1.c: 170: if (lights == 2) {
  7058  06CD  1283               	bcf	3,5	;RP0=0, select bank0
  7059  06CE  1303               	bcf	3,6	;RP1=0, select bank0
  7060  06CF  0855               	movf	setLights@lights,w
  7061  06D0  3A02               	xorlw	2
  7062  06D1  1D03               	skipz
  7063  06D2  2EE0               	goto	l4646
  7064                           
  7065                           ;TriacRelay_B1.c: 171: setLED(1, 1);
  7066  06D3  01D1               	clrf	setLED@command
  7067  06D4  0AD1               	incf	setLED@command,f
  7068  06D5  3001               	movlw	1
  7069  06D6  158A  278F  118A   	fcall	_setLED
  7070                           
  7071                           ;TriacRelay_B1.c: 172: setLED(2, 0);
  7072  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  7073  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  7074  06DB  01D1               	clrf	setLED@command
  7075  06DC  3002               	movlw	2
  7076  06DD  158A  278F  118A   	fcall	_setLED
  7077  06E0                     l4646:	
  7078                           
  7079                           ;TriacRelay_B1.c: 173: }
  7080                           ;TriacRelay_B1.c: 175: if (Lights->Status == 1) {
  7081  06E0  0878               	movf	_Lights,w
  7082  06E1  0084               	movwf	4
  7083  06E2  1383               	bcf	3,7	;select IRP bank0
  7084  06E3  1D00               	btfss	0,2
  7085  06E4  2F04               	goto	l4660
  7086                           
  7087                           ;TriacRelay_B1.c: 176: Lights->Status = 0;
  7088  06E5  0878               	movf	_Lights,w
  7089  06E6  0084               	movwf	4
  7090  06E7  1100               	bcf	0,2
  7091                           
  7092                           ;TriacRelay_B1.c: 178: if (lights == 1) {
  7093  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  7094  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  7095  06EA  0855               	movf	setLights@lights,w
  7096  06EB  3A01               	xorlw	1
  7097  06EC  1D03               	skipz
  7098  06ED  2F04               	goto	l4660
  7099                           
  7100                           ;TriacRelay_B1.c: 179: RB2 = 1;
  7101  06EE  1506               	bsf	6,2	;volatile
  7102                           
  7103                           ;TriacRelay_B1.c: 180: Lights->RelayValue = 40;
  7104  06EF  3028               	movlw	40
  7105  06F0  00D4               	movwf	??_setLights
  7106  06F1  0878               	movf	_Lights,w
  7107  06F2  3E04               	addlw	4
  7108  06F3  0084               	movwf	4
  7109  06F4  0854               	movf	??_setLights,w
  7110  06F5  0080               	movwf	0
  7111                           
  7112                           ;TriacRelay_B1.c: 181: Lights->TriacValue = 80;
  7113  06F6  3050               	movlw	80
  7114  06F7  00D4               	movwf	??_setLights
  7115  06F8  0878               	movf	_Lights,w
  7116  06F9  3E03               	addlw	3
  7117  06FA  0084               	movwf	4
  7118  06FB  0854               	movf	??_setLights,w
  7119  06FC  0080               	movwf	0
  7120                           
  7121                           ;TriacRelay_B1.c: 182: Lights->Time = 0;
  7122  06FD  0878               	movf	_Lights,w
  7123  06FE  3E02               	addlw	2
  7124  06FF  0084               	movwf	4
  7125  0700  0180               	clrf	0
  7126                           
  7127                           ;TriacRelay_B1.c: 183: Lights->GO = 1;
  7128  0701  0878               	movf	_Lights,w
  7129  0702  0084               	movwf	4
  7130  0703  1480               	bsf	0,1
  7131  0704                     l4660:	
  7132                           
  7133                           ;TriacRelay_B1.c: 184: }
  7134                           ;TriacRelay_B1.c: 211: }
  7135                           ;TriacRelay_B1.c: 213: Light.Load_Status = 0;
  7136  0704  10F7               	bcf	_Light,1
  7137                           
  7138                           ;TriacRelay_B1.c: 214: setLights_Line(0);
  7139  0705  3000               	movlw	0
  7140  0706  158A  2328         	fcall	_setLights_Line
  7141  0708  0008               	return
  7142  0709                     __end_of_setLights:	
  7143                           
  7144                           	psect	text40
  7145  0B28                     __ptext40:	
  7146 ;; *************** function _setLights_Line *****************
  7147 ;; Defined at:
  7148 ;;		line 285 in file "../src/TriacRelay_B1.c"
  7149 ;; Parameters:    Size  Location     Type
  7150 ;;  lights          1    wreg     unsigned char 
  7151 ;; Auto vars:     Size  Location     Type
  7152 ;;  lights          1    4[COMMON] unsigned char 
  7153 ;; Return value:  Size  Location     Type
  7154 ;;		None               void
  7155 ;; Registers used:
  7156 ;;		wreg
  7157 ;; Tracked objects:
  7158 ;;		On entry : 0/0
  7159 ;;		On exit  : 0/0
  7160 ;;		Unchanged: 0/0
  7161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7162 ;;      Params:         0       0       0       0
  7163 ;;      Locals:         1       0       0       0
  7164 ;;      Temps:          0       0       0       0
  7165 ;;      Totals:         1       0       0       0
  7166 ;;Total ram usage:        1 bytes
  7167 ;; Hardware stack levels used:    1
  7168 ;; Hardware stack levels required when called:    2
  7169 ;; This function calls:
  7170 ;;		Nothing
  7171 ;; This function is called by:
  7172 ;;		_setLights
  7173 ;; This function uses a non-reentrant model
  7174 ;;
  7175                           
  7176                           
  7177                           ;psect for function _setLights_Line
  7178  0B28                     _setLights_Line:	
  7179                           
  7180                           ;incstack = 0
  7181                           ; Regs used in _setLights_Line: [wreg]
  7182                           ;setLights_Line@lights stored from wreg
  7183  0B28  00F4               	movwf	setLights_Line@lights
  7184                           
  7185                           ;TriacRelay_B1.c: 286: Light.LoadGO = 1;
  7186  0B29  1477               	bsf	_Light,0
  7187                           
  7188                           ;TriacRelay_B1.c: 288: Lights1.Line = 0;
  7189  0B2A  1283               	bcf	3,5	;RP0=0, select bank0
  7190  0B2B  1303               	bcf	3,6	;RP1=0, select bank0
  7191  0B2C  1041               	bcf	_Lights1+1,0
  7192                           
  7193                           ;TriacRelay_B1.c: 289: if (lights == 1 && lights != 0) {
  7194  0B2D  0874               	movf	setLights_Line@lights,w
  7195  0B2E  3A01               	xorlw	1
  7196  0B2F  1D03               	skipz
  7197  0B30  0008               	return
  7198  0B31  0874               	movf	setLights_Line@lights,w
  7199  0B32  1903               	btfsc	3,2
  7200  0B33  0008               	return
  7201                           
  7202                           ;TriacRelay_B1.c: 290: Lights1.Line = 1;
  7203  0B34  1441               	bsf	_Lights1+1,0
  7204  0B35  0008               	return
  7205  0B36                     __end_of_setLights_Line:	
  7206                           
  7207                           	psect	text41
  7208  0BD5                     __ptext41:	
  7209 ;; *************** function _getLights_Allow_Condition *****************
  7210 ;; Defined at:
  7211 ;;		line 367 in file "../src/TriacRelay_B1.c"
  7212 ;; Parameters:    Size  Location     Type
  7213 ;;  lights          1    wreg     unsigned char 
  7214 ;; Auto vars:     Size  Location     Type
  7215 ;;  lights          1    0[COMMON] unsigned char 
  7216 ;;  allow           1    0[BANK0 ] unsigned char 
  7217 ;; Return value:  Size  Location     Type
  7218 ;;                  1    wreg      unsigned char 
  7219 ;; Registers used:
  7220 ;;		wreg, status,2, pclath, cstack
  7221 ;; Tracked objects:
  7222 ;;		On entry : 0/0
  7223 ;;		On exit  : 0/0
  7224 ;;		Unchanged: 0/0
  7225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7226 ;;      Params:         0       0       0       0
  7227 ;;      Locals:         0       2       0       0
  7228 ;;      Temps:          1       0       0       0
  7229 ;;      Totals:         1       2       0       0
  7230 ;;Total ram usage:        3 bytes
  7231 ;; Hardware stack levels used:    1
  7232 ;; Hardware stack levels required when called:    3
  7233 ;; This function calls:
  7234 ;;		_getLoad_OK
  7235 ;; This function is called by:
  7236 ;;		_setLights_Main
  7237 ;; This function uses a non-reentrant model
  7238 ;;
  7239                           
  7240                           
  7241                           ;psect for function _getLights_Allow_Condition
  7242  0BD5                     _getLights_Allow_Condition:	
  7243                           
  7244                           ;TriacRelay_B1.c: 368: char allow = 0;
  7245                           
  7246                           ;incstack = 0
  7247                           ; Regs used in _getLights_Allow_Condition: [wreg+status,2+pclath+cstack]
  7248  0BD5  1283               	bcf	3,5	;RP0=0, select bank0
  7249  0BD6  1303               	bcf	3,6	;RP1=0, select bank0
  7250  0BD7  01D1               	clrf	getLights_Allow_Condition@allow
  7251                           
  7252                           ;TriacRelay_B1.c: 371: allow = getLoad_OK() == 0 && Light.LoadGO == 0 ? 0 : 1;
  7253  0BD8  01D2               	clrf	_getLights_Allow_Condition$4248
  7254  0BD9  0AD2               	incf	_getLights_Allow_Condition$4248,f
  7255  0BDA  158A  22D0  158A   	fcall	_getLoad_OK
  7256  0BDD  3800               	iorlw	0
  7257  0BDE  1903               	btfsc	3,2
  7258  0BDF  1877               	btfsc	_Light,0
  7259  0BE0  2BE4               	goto	l4612
  7260  0BE1  1283               	bcf	3,5	;RP0=0, select bank0
  7261  0BE2  1303               	bcf	3,6	;RP1=0, select bank0
  7262  0BE3  01D2               	clrf	_getLights_Allow_Condition$4248
  7263  0BE4                     l4612:	
  7264  0BE4  1283               	bcf	3,5	;RP0=0, select bank0
  7265  0BE5  1303               	bcf	3,6	;RP1=0, select bank0
  7266  0BE6  0852               	movf	_getLights_Allow_Condition$4248,w
  7267  0BE7  00F5               	movwf	??_getLights_Allow_Condition
  7268  0BE8  0875               	movf	??_getLights_Allow_Condition,w
  7269  0BE9  00D1               	movwf	getLights_Allow_Condition@allow
  7270                           
  7271                           ;TriacRelay_B1.c: 396: return allow;
  7272  0BEA  0851               	movf	getLights_Allow_Condition@allow,w
  7273  0BEB  0008               	return
  7274  0BEC                     __end_of_getLights_Allow_Condition:	
  7275                           
  7276                           	psect	text42
  7277  0AD0                     __ptext42:	
  7278 ;; *************** function _getLoad_OK *****************
  7279 ;; Defined at:
  7280 ;;		line 272 in file "../src/OverLoad_B1.c"
  7281 ;; Parameters:    Size  Location     Type
  7282 ;;		None
  7283 ;; Auto vars:     Size  Location     Type
  7284 ;;  ok              1    4[COMMON] unsigned char 
  7285 ;; Return value:  Size  Location     Type
  7286 ;;                  1    wreg      unsigned char 
  7287 ;; Registers used:
  7288 ;;		wreg, status,2
  7289 ;; Tracked objects:
  7290 ;;		On entry : 0/0
  7291 ;;		On exit  : 0/0
  7292 ;;		Unchanged: 0/0
  7293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7294 ;;      Params:         0       0       0       0
  7295 ;;      Locals:         1       0       0       0
  7296 ;;      Temps:          0       0       0       0
  7297 ;;      Totals:         1       0       0       0
  7298 ;;Total ram usage:        1 bytes
  7299 ;; Hardware stack levels used:    1
  7300 ;; Hardware stack levels required when called:    2
  7301 ;; This function calls:
  7302 ;;		Nothing
  7303 ;; This function is called by:
  7304 ;;		_Lights_Main
  7305 ;;		_getLights_Allow_Condition
  7306 ;; This function uses a non-reentrant model
  7307 ;;
  7308                           
  7309                           
  7310                           ;psect for function _getLoad_OK
  7311  0AD0                     _getLoad_OK:	
  7312                           
  7313                           ;OverLoad_B1.c: 273: char ok = Load.OK == 1 ? 1 : 0;
  7314                           
  7315                           ;incstack = 0
  7316                           ; Regs used in _getLoad_OK: [wreg+status,2]
  7317  0AD0  3000               	movlw	0
  7318  0AD1  1683               	bsf	3,5	;RP0=1, select bank1
  7319  0AD2  1303               	bcf	3,6	;RP1=0, select bank1
  7320  0AD3  1BCA               	btfsc	_Load^(0+128),7
  7321  0AD4  3001               	movlw	1
  7322  0AD5  00F4               	movwf	getLoad_OK@ok
  7323                           
  7324                           ;OverLoad_B1.c: 274: return ok;
  7325  0AD6  0874               	movf	getLoad_OK@ok,w
  7326  0AD7  0008               	return
  7327  0AD8                     __end_of_getLoad_OK:	
  7328                           
  7329                           	psect	text43
  7330  0607                     __ptext43:	
  7331 ;; *************** function _Lights_Control *****************
  7332 ;; Defined at:
  7333 ;;		line 220 in file "../src/TriacRelay_B1.c"
  7334 ;; Parameters:    Size  Location     Type
  7335 ;;  lights          1    wreg     unsigned char 
  7336 ;; Auto vars:     Size  Location     Type
  7337 ;;  lights          1   10[BANK0 ] unsigned char 
  7338 ;; Return value:  Size  Location     Type
  7339 ;;		None               void
  7340 ;; Registers used:
  7341 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7342 ;; Tracked objects:
  7343 ;;		On entry : 0/0
  7344 ;;		On exit  : 0/0
  7345 ;;		Unchanged: 0/0
  7346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7347 ;;      Params:         0       0       0       0
  7348 ;;      Locals:         0       1       0       0
  7349 ;;      Temps:          0       2       0       0
  7350 ;;      Totals:         0       3       0       0
  7351 ;;Total ram usage:        3 bytes
  7352 ;; Hardware stack levels used:    1
  7353 ;; Hardware stack levels required when called:    3
  7354 ;; This function calls:
  7355 ;;		_LightsPointSelect
  7356 ;;		___awdiv
  7357 ;; This function is called by:
  7358 ;;		_Lights_Main
  7359 ;; This function uses a non-reentrant model
  7360 ;;
  7361                           
  7362                           
  7363                           ;psect for function _Lights_Control
  7364  0607                     _Lights_Control:	
  7365                           
  7366                           ;incstack = 0
  7367                           ; Regs used in _Lights_Control: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7368                           ;Lights_Control@lights stored from wreg
  7369  0607  1283               	bcf	3,5	;RP0=0, select bank0
  7370  0608  1303               	bcf	3,6	;RP1=0, select bank0
  7371  0609  00DB               	movwf	Lights_Control@lights
  7372                           
  7373                           ;TriacRelay_B1.c: 221: LightsPointSelect(lights);
  7374  060A  085B               	movf	Lights_Control@lights,w
  7375  060B  158A  22FA  118A   	fcall	_LightsPointSelect
  7376                           
  7377                           ;TriacRelay_B1.c: 222: if (Lights->GO == 1) {
  7378  060E  0878               	movf	_Lights,w
  7379  060F  0084               	movwf	4
  7380  0610  1383               	bcf	3,7	;select IRP bank0
  7381  0611  1C80               	btfss	0,1
  7382  0612  0008               	return
  7383                           
  7384                           ;TriacRelay_B1.c: 223: Lights->Time++;
  7385  0613  3001               	movlw	1
  7386  0614  1283               	bcf	3,5	;RP0=0, select bank0
  7387  0615  1303               	bcf	3,6	;RP1=0, select bank0
  7388  0616  00D9               	movwf	??_Lights_Control
  7389  0617  0878               	movf	_Lights,w
  7390  0618  3E02               	addlw	2
  7391  0619  0084               	movwf	4
  7392  061A  0859               	movf	??_Lights_Control,w
  7393  061B  0780               	addwf	0,f
  7394                           
  7395                           ;TriacRelay_B1.c: 224: if (Lights->RelaySet == 0) {
  7396  061C  0878               	movf	_Lights,w
  7397  061D  0084               	movwf	4
  7398  061E  1B80               	btfsc	0,7
  7399  061F  2E56               	goto	l4828
  7400                           
  7401                           ;TriacRelay_B1.c: 225: if (Lights->Time >= (Lights->RelayValue / 20)) {
  7402  0620  3014               	movlw	20
  7403  0621  00D1               	movwf	___awdiv@divisor
  7404  0622  3000               	movlw	0
  7405  0623  00D2               	movwf	___awdiv@divisor+1
  7406  0624  0878               	movf	_Lights,w
  7407  0625  3E04               	addlw	4
  7408  0626  0084               	movwf	4
  7409  0627  0800               	movf	0,w
  7410  0628  00D9               	movwf	??_Lights_Control
  7411  0629  01DA               	clrf	??_Lights_Control+1
  7412  062A  0859               	movf	??_Lights_Control,w
  7413  062B  00D3               	movwf	___awdiv@dividend
  7414  062C  085A               	movf	??_Lights_Control+1,w
  7415  062D  00D4               	movwf	___awdiv@dividend+1
  7416  062E  158A  26CC  118A   	fcall	___awdiv
  7417  0631  0878               	movf	_Lights,w
  7418  0632  3E02               	addlw	2
  7419  0633  0084               	movwf	4
  7420  0634  1283               	bcf	3,5	;RP0=0, select bank0
  7421  0635  1303               	bcf	3,6	;RP1=0, select bank0
  7422  0636  0852               	movf	?___awdiv+1,w
  7423  0637  3A80               	xorlw	128
  7424  0638  3C80               	sublw	128
  7425  0639  1D03               	skipz
  7426  063A  2E3E               	goto	u5705
  7427  063B  0851               	movf	?___awdiv,w
  7428  063C  1383               	bcf	3,7	;select IRP bank0
  7429  063D  0200               	subwf	0,w
  7430  063E                     u5705:	
  7431  063E  1C03               	skipc
  7432  063F  0008               	return
  7433                           
  7434                           ;TriacRelay_B1.c: 226: Lights->RelaySet = 1;
  7435  0640  0878               	movf	_Lights,w
  7436  0641  0084               	movwf	4
  7437  0642  1383               	bcf	3,7	;select IRP bank0
  7438  0643  1780               	bsf	0,7
  7439                           
  7440                           ;TriacRelay_B1.c: 228: if (lights == 1) {
  7441  0644  1283               	bcf	3,5	;RP0=0, select bank0
  7442  0645  1303               	bcf	3,6	;RP1=0, select bank0
  7443  0646  085B               	movf	Lights_Control@lights,w
  7444  0647  3A01               	xorlw	1
  7445  0648  1D03               	skipz
  7446  0649  0008               	return
  7447                           
  7448                           ;TriacRelay_B1.c: 229: RA4 = Lights->Status == 1 ? 1 : 0;
  7449  064A  0878               	movf	_Lights,w
  7450  064B  0084               	movwf	4
  7451  064C  1D00               	btfss	0,2
  7452  064D  2E52               	goto	u5720
  7453  064E  1283               	bcf	3,5	;RP0=0, select bank0
  7454  064F  1303               	bcf	3,6	;RP1=0, select bank0
  7455  0650  1605               	bsf	5,4	;volatile
  7456  0651  0008               	return
  7457  0652                     u5720:	
  7458  0652  1283               	bcf	3,5	;RP0=0, select bank0
  7459  0653  1303               	bcf	3,6	;RP1=0, select bank0
  7460  0654  1205               	bcf	5,4	;volatile
  7461                           
  7462                           ;TriacRelay_B1.c: 230: }
  7463                           ;TriacRelay_B1.c: 242: }
  7464                           ;TriacRelay_B1.c: 243: } else {
  7465  0655  0008               	return
  7466  0656                     l4828:	
  7467                           
  7468                           ;TriacRelay_B1.c: 244: if (Lights->Time >= (Lights->TriacValue / 20)) {
  7469  0656  3014               	movlw	20
  7470  0657  00D1               	movwf	___awdiv@divisor
  7471  0658  3000               	movlw	0
  7472  0659  00D2               	movwf	___awdiv@divisor+1
  7473  065A  0878               	movf	_Lights,w
  7474  065B  3E03               	addlw	3
  7475  065C  0084               	movwf	4
  7476  065D  1383               	bcf	3,7	;select IRP bank0
  7477  065E  0800               	movf	0,w
  7478  065F  00D9               	movwf	??_Lights_Control
  7479  0660  01DA               	clrf	??_Lights_Control+1
  7480  0661  0859               	movf	??_Lights_Control,w
  7481  0662  00D3               	movwf	___awdiv@dividend
  7482  0663  085A               	movf	??_Lights_Control+1,w
  7483  0664  00D4               	movwf	___awdiv@dividend+1
  7484  0665  158A  26CC  118A   	fcall	___awdiv
  7485  0668  0878               	movf	_Lights,w
  7486  0669  3E02               	addlw	2
  7487  066A  0084               	movwf	4
  7488  066B  1283               	bcf	3,5	;RP0=0, select bank0
  7489  066C  1303               	bcf	3,6	;RP1=0, select bank0
  7490  066D  0852               	movf	?___awdiv+1,w
  7491  066E  3A80               	xorlw	128
  7492  066F  3C80               	sublw	128
  7493  0670  1D03               	skipz
  7494  0671  2E75               	goto	u5745
  7495  0672  0851               	movf	?___awdiv,w
  7496  0673  1383               	bcf	3,7	;select IRP bank0
  7497  0674  0200               	subwf	0,w
  7498  0675                     u5745:	
  7499  0675  1C03               	skipc
  7500  0676  0008               	return
  7501                           
  7502                           ;TriacRelay_B1.c: 245: Lights->Time = 0;
  7503  0677  0878               	movf	_Lights,w
  7504  0678  3E02               	addlw	2
  7505  0679  0084               	movwf	4
  7506  067A  1383               	bcf	3,7	;select IRP bank0
  7507  067B  0180               	clrf	0
  7508                           
  7509                           ;TriacRelay_B1.c: 246: Lights->GO = 0;
  7510  067C  0878               	movf	_Lights,w
  7511  067D  0084               	movwf	4
  7512  067E  1080               	bcf	0,1
  7513                           
  7514                           ;TriacRelay_B1.c: 247: Lights->RelaySet = 0;
  7515  067F  0878               	movf	_Lights,w
  7516  0680  0084               	movwf	4
  7517  0681  1380               	bcf	0,7
  7518                           
  7519                           ;TriacRelay_B1.c: 250: if (lights == 1) {
  7520  0682  1283               	bcf	3,5	;RP0=0, select bank0
  7521  0683  1303               	bcf	3,6	;RP1=0, select bank0
  7522  0684  085B               	movf	Lights_Control@lights,w
  7523  0685  3A01               	xorlw	1
  7524  0686  1D03               	skipz
  7525  0687  0008               	return
  7526                           
  7527                           ;TriacRelay_B1.c: 251: RB2 = 0;
  7528  0688  1106               	bcf	6,2	;volatile
  7529  0689  0008               	return
  7530  068A                     __end_of_Lights_Control:	
  7531                           
  7532                           	psect	text44
  7533  0ECC                     __ptext44:	
  7534 ;; *************** function ___awdiv *****************
  7535 ;; Defined at:
  7536 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  7537 ;; Parameters:    Size  Location     Type
  7538 ;;  divisor         2    0[BANK0 ] int 
  7539 ;;  dividend        2    2[BANK0 ] int 
  7540 ;; Auto vars:     Size  Location     Type
  7541 ;;  quotient        2    6[BANK0 ] int 
  7542 ;;  sign            1    5[BANK0 ] unsigned char 
  7543 ;;  counter         1    4[BANK0 ] unsigned char 
  7544 ;; Return value:  Size  Location     Type
  7545 ;;                  2    0[BANK0 ] int 
  7546 ;; Registers used:
  7547 ;;		wreg, status,2, status,0
  7548 ;; Tracked objects:
  7549 ;;		On entry : 0/0
  7550 ;;		On exit  : 0/0
  7551 ;;		Unchanged: 0/0
  7552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7553 ;;      Params:         0       4       0       0
  7554 ;;      Locals:         0       4       0       0
  7555 ;;      Temps:          1       0       0       0
  7556 ;;      Totals:         1       8       0       0
  7557 ;;Total ram usage:        9 bytes
  7558 ;; Hardware stack levels used:    1
  7559 ;; Hardware stack levels required when called:    2
  7560 ;; This function calls:
  7561 ;;		Nothing
  7562 ;; This function is called by:
  7563 ;;		_getPIR_AD
  7564 ;;		_Lights_Control
  7565 ;; This function uses a non-reentrant model
  7566 ;;
  7567                           
  7568                           
  7569                           ;psect for function ___awdiv
  7570  0ECC                     ___awdiv:	
  7571                           
  7572                           ;incstack = 0
  7573                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7574  0ECC  1283               	bcf	3,5	;RP0=0, select bank0
  7575  0ECD  1303               	bcf	3,6	;RP1=0, select bank0
  7576  0ECE  01D6               	clrf	___awdiv@sign
  7577  0ECF  1FD2               	btfss	___awdiv@divisor+1,7
  7578  0ED0  2ED8               	goto	l4678
  7579  0ED1  09D1               	comf	___awdiv@divisor,f
  7580  0ED2  09D2               	comf	___awdiv@divisor+1,f
  7581  0ED3  0AD1               	incf	___awdiv@divisor,f
  7582  0ED4  1903               	skipnz
  7583  0ED5  0AD2               	incf	___awdiv@divisor+1,f
  7584  0ED6  01D6               	clrf	___awdiv@sign
  7585  0ED7  0AD6               	incf	___awdiv@sign,f
  7586  0ED8                     l4678:	
  7587  0ED8  1FD4               	btfss	___awdiv@dividend+1,7
  7588  0ED9  2EE3               	goto	l4684
  7589  0EDA  09D3               	comf	___awdiv@dividend,f
  7590  0EDB  09D4               	comf	___awdiv@dividend+1,f
  7591  0EDC  0AD3               	incf	___awdiv@dividend,f
  7592  0EDD  1903               	skipnz
  7593  0EDE  0AD4               	incf	___awdiv@dividend+1,f
  7594  0EDF  3001               	movlw	1
  7595  0EE0  00F4               	movwf	??___awdiv
  7596  0EE1  0874               	movf	??___awdiv,w
  7597  0EE2  06D6               	xorwf	___awdiv@sign,f
  7598  0EE3                     l4684:	
  7599  0EE3  01D7               	clrf	___awdiv@quotient
  7600  0EE4  01D8               	clrf	___awdiv@quotient+1
  7601  0EE5  0852               	movf	___awdiv@divisor+1,w
  7602  0EE6  0451               	iorwf	___awdiv@divisor,w
  7603  0EE7  1903               	skipnz
  7604  0EE8  2F1A               	goto	l4706
  7605  0EE9  01D5               	clrf	___awdiv@counter
  7606  0EEA  0AD5               	incf	___awdiv@counter,f
  7607  0EEB                     l4694:	
  7608  0EEB  1BD2               	btfsc	___awdiv@divisor+1,7
  7609  0EEC  2EF9               	goto	l4696
  7610  0EED  3001               	movlw	1
  7611  0EEE                     u5405:	
  7612  0EEE  1003               	clrc
  7613  0EEF  0DD1               	rlf	___awdiv@divisor,f
  7614  0EF0  0DD2               	rlf	___awdiv@divisor+1,f
  7615  0EF1  3EFF               	addlw	-1
  7616  0EF2  1D03               	skipz
  7617  0EF3  2EEE               	goto	u5405
  7618  0EF4  3001               	movlw	1
  7619  0EF5  00F4               	movwf	??___awdiv
  7620  0EF6  0874               	movf	??___awdiv,w
  7621  0EF7  07D5               	addwf	___awdiv@counter,f
  7622  0EF8  2EEB               	goto	l4694
  7623  0EF9                     l4696:	
  7624  0EF9  3001               	movlw	1
  7625  0EFA                     u5425:	
  7626  0EFA  1003               	clrc
  7627  0EFB  0DD7               	rlf	___awdiv@quotient,f
  7628  0EFC  0DD8               	rlf	___awdiv@quotient+1,f
  7629  0EFD  3EFF               	addlw	-1
  7630  0EFE  1D03               	skipz
  7631  0EFF  2EFA               	goto	u5425
  7632  0F00  0852               	movf	___awdiv@divisor+1,w
  7633  0F01  0254               	subwf	___awdiv@dividend+1,w
  7634  0F02  1D03               	skipz
  7635  0F03  2F06               	goto	u5435
  7636  0F04  0851               	movf	___awdiv@divisor,w
  7637  0F05  0253               	subwf	___awdiv@dividend,w
  7638  0F06                     u5435:	
  7639  0F06  1C03               	skipc
  7640  0F07  2F0F               	goto	l4702
  7641  0F08  0851               	movf	___awdiv@divisor,w
  7642  0F09  02D3               	subwf	___awdiv@dividend,f
  7643  0F0A  0852               	movf	___awdiv@divisor+1,w
  7644  0F0B  1C03               	skipc
  7645  0F0C  03D4               	decf	___awdiv@dividend+1,f
  7646  0F0D  02D4               	subwf	___awdiv@dividend+1,f
  7647  0F0E  1457               	bsf	___awdiv@quotient,0
  7648  0F0F                     l4702:	
  7649  0F0F  3001               	movlw	1
  7650  0F10                     u5445:	
  7651  0F10  1003               	clrc
  7652  0F11  0CD2               	rrf	___awdiv@divisor+1,f
  7653  0F12  0CD1               	rrf	___awdiv@divisor,f
  7654  0F13  3EFF               	addlw	-1
  7655  0F14  1D03               	skipz
  7656  0F15  2F10               	goto	u5445
  7657  0F16  3001               	movlw	1
  7658  0F17  02D5               	subwf	___awdiv@counter,f
  7659  0F18  1D03               	btfss	3,2
  7660  0F19  2EF9               	goto	l4696
  7661  0F1A                     l4706:	
  7662  0F1A  0856               	movf	___awdiv@sign,w
  7663  0F1B  1903               	btfsc	3,2
  7664  0F1C  2F22               	goto	l4710
  7665  0F1D  09D7               	comf	___awdiv@quotient,f
  7666  0F1E  09D8               	comf	___awdiv@quotient+1,f
  7667  0F1F  0AD7               	incf	___awdiv@quotient,f
  7668  0F20  1903               	skipnz
  7669  0F21  0AD8               	incf	___awdiv@quotient+1,f
  7670  0F22                     l4710:	
  7671  0F22  0858               	movf	___awdiv@quotient+1,w
  7672  0F23  01D2               	clrf	?___awdiv+1
  7673  0F24  07D2               	addwf	?___awdiv+1,f
  7674  0F25  0857               	movf	___awdiv@quotient,w
  7675  0F26  01D1               	clrf	?___awdiv
  7676  0F27  07D1               	addwf	?___awdiv,f
  7677  0F28  0008               	return
  7678  0F29                     __end_of___awdiv:	
  7679                           
  7680                           	psect	text45
  7681  0AA3                     __ptext45:	
  7682 ;; *************** function _Lights_Initialization *****************
  7683 ;; Defined at:
  7684 ;;		line 32 in file "../src/TriacRelay_B1.c"
  7685 ;; Parameters:    Size  Location     Type
  7686 ;;		None
  7687 ;; Auto vars:     Size  Location     Type
  7688 ;;		None
  7689 ;; Return value:  Size  Location     Type
  7690 ;;		None               void
  7691 ;; Registers used:
  7692 ;;		wreg, status,2, status,0, pclath, cstack
  7693 ;; Tracked objects:
  7694 ;;		On entry : 0/0
  7695 ;;		On exit  : 0/0
  7696 ;;		Unchanged: 0/0
  7697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7698 ;;      Params:         0       0       0       0
  7699 ;;      Locals:         0       0       0       0
  7700 ;;      Temps:          0       0       0       0
  7701 ;;      Totals:         0       0       0       0
  7702 ;;Total ram usage:        0 bytes
  7703 ;; Hardware stack levels used:    1
  7704 ;; Hardware stack levels required when called:    4
  7705 ;; This function calls:
  7706 ;;		_setLights_Initialization
  7707 ;; This function is called by:
  7708 ;;		_main
  7709 ;; This function uses a non-reentrant model
  7710 ;;
  7711                           
  7712                           
  7713                           ;psect for function _Lights_Initialization
  7714  0AA3                     _Lights_Initialization:	
  7715                           
  7716                           ;TriacRelay_B1.c: 34: setLights_Initialization(1);
  7717                           
  7718                           ;incstack = 0
  7719                           ; Regs used in _Lights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  7720  0AA3  3001               	movlw	1
  7721  0AA4  158A  22C2         	fcall	_setLights_Initialization
  7722  0AA6  0008               	return
  7723  0AA7                     __end_of_Lights_Initialization:	
  7724                           
  7725                           	psect	text46
  7726  0AC2                     __ptext46:	
  7727 ;; *************** function _setLights_Initialization *****************
  7728 ;; Defined at:
  7729 ;;		line 47 in file "../src/TriacRelay_B1.c"
  7730 ;; Parameters:    Size  Location     Type
  7731 ;;  lights          1    wreg     unsigned char 
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;  lights          1    0[BANK0 ] unsigned char 
  7734 ;; Return value:  Size  Location     Type
  7735 ;;		None               void
  7736 ;; Registers used:
  7737 ;;		wreg, status,2, status,0, pclath, cstack
  7738 ;; Tracked objects:
  7739 ;;		On entry : 0/0
  7740 ;;		On exit  : 0/0
  7741 ;;		Unchanged: 0/0
  7742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7743 ;;      Params:         0       0       0       0
  7744 ;;      Locals:         0       1       0       0
  7745 ;;      Temps:          0       0       0       0
  7746 ;;      Totals:         0       1       0       0
  7747 ;;Total ram usage:        1 bytes
  7748 ;; Hardware stack levels used:    1
  7749 ;; Hardware stack levels required when called:    3
  7750 ;; This function calls:
  7751 ;;		_LightsPointSelect
  7752 ;; This function is called by:
  7753 ;;		_Lights_Initialization
  7754 ;; This function uses a non-reentrant model
  7755 ;;
  7756                           
  7757                           
  7758                           ;psect for function _setLights_Initialization
  7759  0AC2                     _setLights_Initialization:	
  7760                           
  7761                           ;incstack = 0
  7762                           ; Regs used in _setLights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  7763                           ;setLights_Initialization@lights stored from wreg
  7764  0AC2  1283               	bcf	3,5	;RP0=0, select bank0
  7765  0AC3  1303               	bcf	3,6	;RP1=0, select bank0
  7766  0AC4  00D1               	movwf	setLights_Initialization@lights
  7767                           
  7768                           ;TriacRelay_B1.c: 48: LightsPointSelect(lights);
  7769  0AC5  0851               	movf	setLights_Initialization@lights,w
  7770  0AC6  158A  22FA         	fcall	_LightsPointSelect
  7771  0AC8  0008               	return
  7772  0AC9                     __end_of_setLights_Initialization:	
  7773                           
  7774                           	psect	text47
  7775  0A8D                     __ptext47:	
  7776 ;; *************** function _LED_Main *****************
  7777 ;; Defined at:
  7778 ;;		line 47 in file "../src/LED_B1.c"
  7779 ;; Parameters:    Size  Location     Type
  7780 ;;		None
  7781 ;; Auto vars:     Size  Location     Type
  7782 ;;		None
  7783 ;; Return value:  Size  Location     Type
  7784 ;;		None               void
  7785 ;; Registers used:
  7786 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7787 ;; Tracked objects:
  7788 ;;		On entry : 0/0
  7789 ;;		On exit  : 0/0
  7790 ;;		Unchanged: 0/0
  7791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7792 ;;      Params:         0       0       0       0
  7793 ;;      Locals:         0       0       0       0
  7794 ;;      Temps:          0       0       0       0
  7795 ;;      Totals:         0       0       0       0
  7796 ;;Total ram usage:        0 bytes
  7797 ;; Hardware stack levels used:    1
  7798 ;; Hardware stack levels required when called:    5
  7799 ;; This function calls:
  7800 ;;		_setPIRLED_Main
  7801 ;; This function is called by:
  7802 ;;		_main
  7803 ;; This function uses a non-reentrant model
  7804 ;;
  7805                           
  7806                           
  7807                           ;psect for function _LED_Main
  7808  0A8D                     _LED_Main:	
  7809                           
  7810                           ;LED_B1.c: 55: setPIRLED_Main();
  7811                           
  7812                           ;incstack = 0
  7813                           ; Regs used in _LED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7814  0A8D  118A  2784         	fcall	_setPIRLED_Main
  7815  0A8F  0008               	return
  7816  0A90                     __end_of_LED_Main:	
  7817                           
  7818                           	psect	text48
  7819  0784                     __ptext48:	
  7820 ;; *************** function _setPIRLED_Main *****************
  7821 ;; Defined at:
  7822 ;;		line 265 in file "../src/LED_B1.c"
  7823 ;; Parameters:    Size  Location     Type
  7824 ;;		None
  7825 ;; Auto vars:     Size  Location     Type
  7826 ;;  count           1    3[BANK0 ] unsigned char 
  7827 ;; Return value:  Size  Location     Type
  7828 ;;		None               void
  7829 ;; Registers used:
  7830 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7831 ;; Tracked objects:
  7832 ;;		On entry : 0/0
  7833 ;;		On exit  : 0/0
  7834 ;;		Unchanged: 0/0
  7835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7836 ;;      Params:         0       0       0       0
  7837 ;;      Locals:         0       1       0       0
  7838 ;;      Temps:          0       1       0       0
  7839 ;;      Totals:         0       2       0       0
  7840 ;;Total ram usage:        2 bytes
  7841 ;; Hardware stack levels used:    1
  7842 ;; Hardware stack levels required when called:    4
  7843 ;; This function calls:
  7844 ;;		_setLED
  7845 ;; This function is called by:
  7846 ;;		_LED_Main
  7847 ;; This function uses a non-reentrant model
  7848 ;;
  7849                           
  7850                           
  7851                           ;psect for function _setPIRLED_Main
  7852  0784                     _setPIRLED_Main:	
  7853                           
  7854                           ;LED_B1.c: 267: char count;
  7855                           ;LED_B1.c: 268: if (PIRLED.GO == 1) {
  7856                           
  7857                           ;incstack = 0
  7858                           ; Regs used in _setPIRLED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7859  0784  1283               	bcf	3,5	;RP0=0, select bank0
  7860  0785  1303               	bcf	3,6	;RP1=0, select bank0
  7861  0786  1C2A               	btfss	_PIRLED,0
  7862  0787  0008               	return
  7863                           
  7864                           ;LED_B1.c: 269: PIRLED.Time++;
  7865  0788  3001               	movlw	1
  7866  0789  07AC               	addwf	_PIRLED+2,f
  7867  078A  1803               	skipnc
  7868  078B  0AAD               	incf	_PIRLED+3,f
  7869  078C  3000               	movlw	0
  7870  078D  07AD               	addwf	_PIRLED+3,f
  7871                           
  7872                           ;LED_B1.c: 270: if (PIRLED.Time >= 500 / 20) {
  7873  078E  3000               	movlw	0
  7874  078F  022D               	subwf	_PIRLED+3,w
  7875  0790  3019               	movlw	25
  7876  0791  1903               	skipnz
  7877  0792  022C               	subwf	_PIRLED+2,w
  7878  0793  1C03               	skipc
  7879  0794  0008               	return
  7880                           
  7881                           ;LED_B1.c: 271: PIRLED.Time = 0;
  7882  0795  01AC               	clrf	_PIRLED+2
  7883  0796  01AD               	clrf	_PIRLED+3
  7884                           
  7885                           ;LED_B1.c: 272: setLED(1, 0);
  7886  0797  01D1               	clrf	setLED@command
  7887  0798  3001               	movlw	1
  7888  0799  158A  278F  118A   	fcall	_setLED
  7889                           
  7890                           ;LED_B1.c: 273: setLED(2, 0);
  7891  079C  1283               	bcf	3,5	;RP0=0, select bank0
  7892  079D  1303               	bcf	3,6	;RP1=0, select bank0
  7893  079E  01D1               	clrf	setLED@command
  7894  079F  3002               	movlw	2
  7895  07A0  158A  278F  118A   	fcall	_setLED
  7896                           
  7897                           ;LED_B1.c: 274: if (PIRLED.GO1 == 1) {
  7898  07A3  1283               	bcf	3,5	;RP0=0, select bank0
  7899  07A4  1303               	bcf	3,6	;RP1=0, select bank0
  7900  07A5  1CAA               	btfss	_PIRLED,1
  7901  07A6  2FAB               	goto	l4750
  7902                           
  7903                           ;LED_B1.c: 275: count = 4;
  7904  07A7  3004               	movlw	4
  7905  07A8  00D3               	movwf	??_setPIRLED_Main
  7906  07A9  0853               	movf	??_setPIRLED_Main,w
  7907  07AA  00D4               	movwf	setPIRLED_Main@count
  7908  07AB                     l4750:	
  7909                           
  7910                           ;LED_B1.c: 276: }
  7911                           ;LED_B1.c: 277: if (PIRLED.GO2 == 1) {
  7912  07AB  1D2A               	btfss	_PIRLED,2
  7913  07AC  2FB1               	goto	l4754
  7914                           
  7915                           ;LED_B1.c: 278: count = 6;
  7916  07AD  3006               	movlw	6
  7917  07AE  00D3               	movwf	??_setPIRLED_Main
  7918  07AF  0853               	movf	??_setPIRLED_Main,w
  7919  07B0  00D4               	movwf	setPIRLED_Main@count
  7920  07B1                     l4754:	
  7921                           
  7922                           ;LED_B1.c: 279: }
  7923                           ;LED_B1.c: 280: if (PIRLED.GO3 == 1) {
  7924  07B1  1DAA               	btfss	_PIRLED,3
  7925  07B2  2FB7               	goto	l4758
  7926                           
  7927                           ;LED_B1.c: 281: count = 8;
  7928  07B3  3008               	movlw	8
  7929  07B4  00D3               	movwf	??_setPIRLED_Main
  7930  07B5  0853               	movf	??_setPIRLED_Main,w
  7931  07B6  00D4               	movwf	setPIRLED_Main@count
  7932  07B7                     l4758:	
  7933                           
  7934                           ;LED_B1.c: 282: }
  7935                           ;LED_B1.c: 283: PIRLED.Count++;
  7936  07B7  3001               	movlw	1
  7937  07B8  00D3               	movwf	??_setPIRLED_Main
  7938  07B9  0853               	movf	??_setPIRLED_Main,w
  7939  07BA  07AB               	addwf	_PIRLED+1,f
  7940                           
  7941                           ;LED_B1.c: 284: if (PIRLED.Count == 1 || PIRLED.Count == 2) {
  7942  07BB  082B               	movf	_PIRLED+1,w
  7943  07BC  3A01               	xorlw	1
  7944  07BD  1903               	skipnz
  7945  07BE  2FC3               	goto	l4764
  7946  07BF  082B               	movf	_PIRLED+1,w
  7947  07C0  3A02               	xorlw	2
  7948  07C1  1D03               	skipz
  7949  07C2  2FD7               	goto	l4768
  7950  07C3                     l4764:	
  7951                           
  7952                           ;LED_B1.c: 285: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  7953  07C3  1003               	clrc
  7954  07C4  1E2A               	btfss	_PIRLED,4
  7955  07C5  1403               	setc
  7956  07C6  1C03               	btfss	3,0
  7957  07C7  2FCC               	goto	u5560
  7958  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  7959  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  7960  07CA  162A               	bsf	_PIRLED,4
  7961  07CB  2FCF               	goto	l4766
  7962  07CC                     u5560:	
  7963  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  7964  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  7965  07CE  122A               	bcf	_PIRLED,4
  7966  07CF                     l4766:	
  7967                           
  7968                           ;LED_B1.c: 286: setLED(2, PIRLED.status);
  7969  07CF  3000               	movlw	0
  7970  07D0  1A2A               	btfsc	_PIRLED,4
  7971  07D1  3001               	movlw	1
  7972  07D2  00D1               	movwf	setLED@command
  7973  07D3  3002               	movlw	2
  7974  07D4  158A  278F         	fcall	_setLED
  7975                           
  7976                           ;LED_B1.c: 287: } else {
  7977  07D6  0008               	return
  7978  07D7                     l4768:	
  7979                           
  7980                           ;LED_B1.c: 288: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  7981  07D7  1003               	clrc
  7982  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  7983  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  7984  07DA  1E2A               	btfss	_PIRLED,4
  7985  07DB  1403               	setc
  7986  07DC  1C03               	btfss	3,0
  7987  07DD  2FE2               	goto	u5580
  7988  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  7989  07DF  1303               	bcf	3,6	;RP1=0, select bank0
  7990  07E0  162A               	bsf	_PIRLED,4
  7991  07E1  2FE5               	goto	l4770
  7992  07E2                     u5580:	
  7993  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  7994  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  7995  07E4  122A               	bcf	_PIRLED,4
  7996  07E5                     l4770:	
  7997                           
  7998                           ;LED_B1.c: 289: setLED(1, PIRLED.status);
  7999  07E5  3000               	movlw	0
  8000  07E6  1A2A               	btfsc	_PIRLED,4
  8001  07E7  3001               	movlw	1
  8002  07E8  00D1               	movwf	setLED@command
  8003  07E9  3001               	movlw	1
  8004  07EA  158A  278F  118A   	fcall	_setLED
  8005                           
  8006                           ;LED_B1.c: 290: if (PIRLED.Count == count) {
  8007  07ED  1283               	bcf	3,5	;RP0=0, select bank0
  8008  07EE  1303               	bcf	3,6	;RP1=0, select bank0
  8009  07EF  082B               	movf	_PIRLED+1,w
  8010  07F0  0654               	xorwf	setPIRLED_Main@count,w
  8011  07F1  1D03               	skipz
  8012  07F2  0008               	return
  8013                           
  8014                           ;LED_B1.c: 291: PIRLED.Count = 0;
  8015  07F3  01AB               	clrf	_PIRLED+1
  8016  07F4  0008               	return
  8017  07F5                     __end_of_setPIRLED_Main:	
  8018                           
  8019                           	psect	text49
  8020  0B0E                     __ptext49:	
  8021 ;; *************** function _LED_Initialization *****************
  8022 ;; Defined at:
  8023 ;;		line 31 in file "../src/LED_B1.c"
  8024 ;; Parameters:    Size  Location     Type
  8025 ;;		None
  8026 ;; Auto vars:     Size  Location     Type
  8027 ;;		None
  8028 ;; Return value:  Size  Location     Type
  8029 ;;		None               void
  8030 ;; Registers used:
  8031 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8032 ;; Tracked objects:
  8033 ;;		On entry : 0/0
  8034 ;;		On exit  : 0/0
  8035 ;;		Unchanged: 0/0
  8036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8037 ;;      Params:         0       0       0       0
  8038 ;;      Locals:         0       0       0       0
  8039 ;;      Temps:          0       0       0       0
  8040 ;;      Totals:         0       0       0       0
  8041 ;;Total ram usage:        0 bytes
  8042 ;; Hardware stack levels used:    1
  8043 ;; Hardware stack levels required when called:    5
  8044 ;; This function calls:
  8045 ;;		_setLED_Initialization
  8046 ;; This function is called by:
  8047 ;;		_main
  8048 ;; This function uses a non-reentrant model
  8049 ;;
  8050                           
  8051                           
  8052                           ;psect for function _LED_Initialization
  8053  0B0E                     _LED_Initialization:	
  8054                           
  8055                           ;LED_B1.c: 33: setLED_Initialization(1);
  8056                           
  8057                           ;incstack = 0
  8058                           ; Regs used in _LED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8059  0B0E  3001               	movlw	1
  8060  0B0F  158A  2383  158A   	fcall	_setLED_Initialization
  8061                           
  8062                           ;LED_B1.c: 36: setLED_Initialization(2);
  8063  0B12  3002               	movlw	2
  8064  0B13  158A  2383  158A   	fcall	_setLED_Initialization
  8065                           
  8066                           ;LED_B1.c: 42: setLED_Initialization(99);
  8067  0B16  3063               	movlw	99
  8068  0B17  158A  2383         	fcall	_setLED_Initialization
  8069  0B19  0008               	return
  8070  0B1A                     __end_of_LED_Initialization:	
  8071                           
  8072                           	psect	text50
  8073  0B83                     __ptext50:	
  8074 ;; *************** function _setLED_Initialization *****************
  8075 ;; Defined at:
  8076 ;;		line 74 in file "../src/LED_B1.c"
  8077 ;; Parameters:    Size  Location     Type
  8078 ;;  led             1    wreg     unsigned char 
  8079 ;; Auto vars:     Size  Location     Type
  8080 ;;  led             1    2[BANK0 ] unsigned char 
  8081 ;; Return value:  Size  Location     Type
  8082 ;;		None               void
  8083 ;; Registers used:
  8084 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8085 ;; Tracked objects:
  8086 ;;		On entry : 0/0
  8087 ;;		On exit  : 0/0
  8088 ;;		Unchanged: 0/0
  8089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8090 ;;      Params:         0       0       0       0
  8091 ;;      Locals:         0       1       0       0
  8092 ;;      Temps:          0       0       0       0
  8093 ;;      Totals:         0       1       0       0
  8094 ;;Total ram usage:        1 bytes
  8095 ;; Hardware stack levels used:    1
  8096 ;; Hardware stack levels required when called:    4
  8097 ;; This function calls:
  8098 ;;		_LedPointSelect
  8099 ;;		_setLED
  8100 ;; This function is called by:
  8101 ;;		_LED_Initialization
  8102 ;; This function uses a non-reentrant model
  8103 ;;
  8104                           
  8105                           
  8106                           ;psect for function _setLED_Initialization
  8107  0B83                     _setLED_Initialization:	
  8108                           
  8109                           ;incstack = 0
  8110                           ; Regs used in _setLED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8111                           ;setLED_Initialization@led stored from wreg
  8112  0B83  1283               	bcf	3,5	;RP0=0, select bank0
  8113  0B84  1303               	bcf	3,6	;RP1=0, select bank0
  8114  0B85  00D3               	movwf	setLED_Initialization@led
  8115                           
  8116                           ;LED_B1.c: 75: LedPointSelect(led);
  8117  0B86  0853               	movf	setLED_Initialization@led,w
  8118  0B87  158A  241C  158A   	fcall	_LedPointSelect
  8119                           
  8120                           ;LED_B1.c: 76: LED->Enable = 1;
  8121  0B8A  0876               	movf	_LED,w
  8122  0B8B  0084               	movwf	4
  8123  0B8C  1383               	bcf	3,7	;select IRP bank0
  8124  0B8D  1400               	bsf	0,0
  8125                           
  8126                           ;LED_B1.c: 77: setLED(led, 0);
  8127  0B8E  1283               	bcf	3,5	;RP0=0, select bank0
  8128  0B8F  1303               	bcf	3,6	;RP1=0, select bank0
  8129  0B90  01D1               	clrf	setLED@command
  8130  0B91  0853               	movf	setLED_Initialization@led,w
  8131  0B92  158A  278F         	fcall	_setLED
  8132  0B94  0008               	return
  8133  0B95                     __end_of_setLED_Initialization:	
  8134                           
  8135                           	psect	text51
  8136  0545                     __ptext51:	
  8137 ;; *************** function _Exception_Main *****************
  8138 ;; Defined at:
  8139 ;;		line 499 in file "../src/Main_B1.c"
  8140 ;; Parameters:    Size  Location     Type
  8141 ;;		None
  8142 ;; Auto vars:     Size  Location     Type
  8143 ;;  i               2   12[BANK0 ] int 
  8144 ;;  i               2   10[BANK0 ] int 
  8145 ;;  error           1   14[BANK0 ] unsigned char 
  8146 ;;  status          1    9[BANK0 ] unsigned char 
  8147 ;;  count           1    8[BANK0 ] unsigned char 
  8148 ;;  lights          1    7[BANK0 ] unsigned char 
  8149 ;; Return value:  Size  Location     Type
  8150 ;;		None               void
  8151 ;; Registers used:
  8152 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8153 ;; Tracked objects:
  8154 ;;		On entry : 0/0
  8155 ;;		On exit  : 0/0
  8156 ;;		Unchanged: 0/0
  8157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8158 ;;      Params:         0       0       0       0
  8159 ;;      Locals:         0       8       0       0
  8160 ;;      Temps:          0       1       0       0
  8161 ;;      Totals:         0       9       0       0
  8162 ;;Total ram usage:        9 bytes
  8163 ;; Hardware stack levels used:    1
  8164 ;; Hardware stack levels required when called:    5
  8165 ;; This function calls:
  8166 ;;		_getAll_Lights_Line
  8167 ;;		_getLights_Status
  8168 ;;		_getMain_All_Error_Status
  8169 ;;		_getMain_All_LightsStatus
  8170 ;;		_setLED
  8171 ;;		_setLights_SwOff
  8172 ;;		_setLights_SwOn
  8173 ;; This function is called by:
  8174 ;;		_main
  8175 ;; This function uses a non-reentrant model
  8176 ;;
  8177                           
  8178                           
  8179                           ;psect for function _Exception_Main
  8180  0545                     _Exception_Main:	
  8181                           
  8182                           ;Main_B1.c: 500: char error = getMain_All_Error_Status(0);
  8183                           
  8184                           ;incstack = 0
  8185                           ; Regs used in _Exception_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8186  0545  3000               	movlw	0
  8187  0546  158A  25AE  118A   	fcall	_getMain_All_Error_Status
  8188  0549  1283               	bcf	3,5	;RP0=0, select bank0
  8189  054A  1303               	bcf	3,6	;RP1=0, select bank0
  8190  054B  00D7               	movwf	??_Exception_Main
  8191  054C  0857               	movf	??_Exception_Main,w
  8192  054D  00DF               	movwf	Exception_Main@error
  8193                           
  8194                           ;Main_B1.c: 501: char lights = 0, count = 1;
  8195  054E  01D8               	clrf	Exception_Main@lights
  8196  054F  01D9               	clrf	Exception_Main@count
  8197  0550  0AD9               	incf	Exception_Main@count,f
  8198                           
  8199                           ;Main_B1.c: 502: char status = 0;
  8200  0551  01DA               	clrf	Exception_Main@status
  8201                           
  8202                           ;Main_B1.c: 504: if (myMain.Error_Run == 1) {
  8203  0552  1DA7               	btfss	_myMain+2,3
  8204  0553  2D60               	goto	l5382
  8205                           
  8206                           ;Main_B1.c: 505: if (error == 0) {
  8207  0554  08DF               	movf	Exception_Main@error,f
  8208  0555  1D03               	skipz
  8209  0556  0008               	return
  8210                           
  8211                           ;Main_B1.c: 506: myMain.Error_Run = 0;
  8212  0557  11A7               	bcf	_myMain+2,3
  8213                           
  8214                           ;Main_B1.c: 511: setLED(error, 110);
  8215  0558  306E               	movlw	110
  8216  0559  00D7               	movwf	??_Exception_Main
  8217  055A  0857               	movf	??_Exception_Main,w
  8218  055B  00D1               	movwf	setLED@command
  8219  055C  085F               	movf	Exception_Main@error,w
  8220  055D  158A  278F         	fcall	_setLED
  8221                           
  8222                           ;Main_B1.c: 522: }
  8223                           ;Main_B1.c: 523: } else {
  8224  055F  0008               	return
  8225  0560                     l5382:	
  8226                           
  8227                           ;Main_B1.c: 524: if (error != 0) {
  8228  0560  1283               	bcf	3,5	;RP0=0, select bank0
  8229  0561  1303               	bcf	3,6	;RP1=0, select bank0
  8230  0562  085F               	movf	Exception_Main@error,w
  8231  0563  1903               	btfsc	3,2
  8232  0564  0008               	return
  8233                           
  8234                           ;Main_B1.c: 525: myMain.Error_Run = 1;
  8235  0565  15A7               	bsf	_myMain+2,3
  8236                           
  8237                           ;Main_B1.c: 529: setLED(error, 111);
  8238  0566  306F               	movlw	111
  8239  0567  00D7               	movwf	??_Exception_Main
  8240  0568  0857               	movf	??_Exception_Main,w
  8241  0569  00D1               	movwf	setLED@command
  8242  056A  085F               	movf	Exception_Main@error,w
  8243  056B  158A  278F  118A   	fcall	_setLED
  8244                           
  8245                           ;Main_B1.c: 591: switch (error) {
  8246  056E  2DF8               	goto	l5418
  8247  056F                     l5388:	
  8248                           ;Main_B1.c: 592: case 1:
  8249                           
  8250                           
  8251                           ;Main_B1.c: 593: for (int i = 0; i < count; i++) {
  8252  056F  1283               	bcf	3,5	;RP0=0, select bank0
  8253  0570  1303               	bcf	3,6	;RP1=0, select bank0
  8254  0571  01DB               	clrf	Exception_Main@i
  8255  0572  01DC               	clrf	Exception_Main@i+1
  8256  0573                     l5396:	
  8257  0573  085C               	movf	Exception_Main@i+1,w
  8258  0574  3A80               	xorlw	128
  8259  0575  00D7               	movwf	??_Exception_Main
  8260  0576  3080               	movlw	128
  8261  0577  0257               	subwf	??_Exception_Main,w
  8262  0578  1D03               	skipz
  8263  0579  2D7C               	goto	u6975
  8264  057A  0859               	movf	Exception_Main@count,w
  8265  057B  025B               	subwf	Exception_Main@i,w
  8266  057C                     u6975:	
  8267  057C  1803               	btfsc	3,0
  8268  057D  2D9F               	goto	u6970
  8269                           
  8270                           ;Main_B1.c: 594: if (getLights_Status(i + 1) == 1) {
  8271  057E  1283               	bcf	3,5	;RP0=0, select bank0
  8272  057F  1303               	bcf	3,6	;RP1=0, select bank0
  8273  0580  085B               	movf	Exception_Main@i,w
  8274  0581  3E01               	addlw	1
  8275  0582  158A  2361  118A   	fcall	_getLights_Status
  8276  0585  3A01               	xorlw	1
  8277  0586  1D03               	skipz
  8278  0587  2D96               	goto	l5394
  8279                           
  8280                           ;Main_B1.c: 596: setLights_SwOn(i + 1);
  8281  0588  1283               	bcf	3,5	;RP0=0, select bank0
  8282  0589  1303               	bcf	3,6	;RP1=0, select bank0
  8283  058A  085B               	movf	Exception_Main@i,w
  8284  058B  3E01               	addlw	1
  8285  058C  158A  2500  118A   	fcall	_setLights_SwOn
  8286                           
  8287                           ;Main_B1.c: 597: setLights_SwOff(i + 1);
  8288  058F  1283               	bcf	3,5	;RP0=0, select bank0
  8289  0590  1303               	bcf	3,6	;RP1=0, select bank0
  8290  0591  085B               	movf	Exception_Main@i,w
  8291  0592  3E01               	addlw	1
  8292  0593  158A  2436  118A   	fcall	_setLights_SwOff
  8293  0596                     l5394:	
  8294  0596  3001               	movlw	1
  8295  0597  1283               	bcf	3,5	;RP0=0, select bank0
  8296  0598  1303               	bcf	3,6	;RP1=0, select bank0
  8297  0599  07DB               	addwf	Exception_Main@i,f
  8298  059A  1803               	skipnc
  8299  059B  0ADC               	incf	Exception_Main@i+1,f
  8300  059C  3000               	movlw	0
  8301  059D  07DC               	addwf	Exception_Main@i+1,f
  8302  059E  2D73               	goto	l5396
  8303  059F                     u6970:	
  8304  059F  1283               	bcf	3,5	;RP0=0, select bank0
  8305  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  8306  05A1  0008               	return
  8307  05A2                     l5398:	
  8308                           ;Main_B1.c: 601: case 2:
  8309                           
  8310                           ;Main_B1.c: 598: }
  8311                           ;Main_B1.c: 599: }
  8312                           ;Main_B1.c: 600: break;
  8313                           
  8314                           
  8315                           ;Main_B1.c: 602: if (getMain_All_LightsStatus() == 1) {
  8316  05A2  158A  22F1  118A   	fcall	_getMain_All_LightsStatus
  8317                           
  8318                           ;Main_B1.c: 604: }
  8319                           ;Main_B1.c: 606: for (int i = 0; i < count; i++) {
  8320                           
  8321                           ;Main_B1.c: 603: ;;
  8322  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  8323  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  8324  05A7  01DD               	clrf	Exception_Main@i_2155
  8325  05A8  01DE               	clrf	Exception_Main@i_2155+1
  8326  05A9                     l5408:	
  8327  05A9  085E               	movf	Exception_Main@i_2155+1,w
  8328  05AA  3A80               	xorlw	128
  8329  05AB  00D7               	movwf	??_Exception_Main
  8330  05AC  3080               	movlw	128
  8331  05AD  0257               	subwf	??_Exception_Main,w
  8332  05AE  1D03               	skipz
  8333  05AF  2DB2               	goto	u6995
  8334  05B0  0859               	movf	Exception_Main@count,w
  8335  05B1  025D               	subwf	Exception_Main@i_2155,w
  8336  05B2                     u6995:	
  8337  05B2  1803               	btfsc	3,0
  8338  05B3  2DD5               	goto	u6990
  8339                           
  8340                           ;Main_B1.c: 607: if (getLights_Status(i + 1) == 1) {
  8341  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  8342  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  8343  05B6  085D               	movf	Exception_Main@i_2155,w
  8344  05B7  3E01               	addlw	1
  8345  05B8  158A  2361  118A   	fcall	_getLights_Status
  8346  05BB  3A01               	xorlw	1
  8347  05BC  1D03               	skipz
  8348  05BD  2DCC               	goto	l5406
  8349                           
  8350                           ;Main_B1.c: 608: setLights_SwOn(i + 1);
  8351  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  8352  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  8353  05C0  085D               	movf	Exception_Main@i_2155,w
  8354  05C1  3E01               	addlw	1
  8355  05C2  158A  2500  118A   	fcall	_setLights_SwOn
  8356                           
  8357                           ;Main_B1.c: 609: setLights_SwOff(i + 1);
  8358  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  8359  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  8360  05C7  085D               	movf	Exception_Main@i_2155,w
  8361  05C8  3E01               	addlw	1
  8362  05C9  158A  2436  118A   	fcall	_setLights_SwOff
  8363  05CC                     l5406:	
  8364  05CC  3001               	movlw	1
  8365  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  8366  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  8367  05CF  07DD               	addwf	Exception_Main@i_2155,f
  8368  05D0  1803               	skipnc
  8369  05D1  0ADE               	incf	Exception_Main@i_2155+1,f
  8370  05D2  3000               	movlw	0
  8371  05D3  07DE               	addwf	Exception_Main@i_2155+1,f
  8372  05D4  2DA9               	goto	l5408
  8373  05D5                     u6990:	
  8374  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  8375  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  8376  05D7  0008               	return
  8377  05D8                     l5410:	
  8378                           ;Main_B1.c: 613: case 3:
  8379                           
  8380                           ;Main_B1.c: 610: }
  8381                           ;Main_B1.c: 611: }
  8382                           ;Main_B1.c: 612: break;
  8383                           
  8384                           
  8385                           ;Main_B1.c: 614: status = getAll_Lights_Line();
  8386  05D8  158A  22E8  118A   	fcall	_getAll_Lights_Line
  8387  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  8388  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  8389  05DD  00D7               	movwf	??_Exception_Main
  8390  05DE  0857               	movf	??_Exception_Main,w
  8391  05DF  00DA               	movwf	Exception_Main@status
  8392                           
  8393                           ;Main_B1.c: 616: if (getLights_Status(status) == 1) {
  8394  05E0  085A               	movf	Exception_Main@status,w
  8395  05E1  158A  2361  118A   	fcall	_getLights_Status
  8396  05E4  3A01               	xorlw	1
  8397  05E5  1903               	btfsc	3,2
  8398  05E6  2DEA               	goto	l5414
  8399  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  8400  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  8401  05E9  0008               	return
  8402  05EA                     l5414:	
  8403                           
  8404                           ;Main_B1.c: 617: setLights_SwOn(status);
  8405  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  8406  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  8407  05EC  085A               	movf	Exception_Main@status,w
  8408  05ED  158A  2500  118A   	fcall	_setLights_SwOn
  8409                           
  8410                           ;Main_B1.c: 618: setLights_SwOff(status);
  8411  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  8412  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  8413  05F2  085A               	movf	Exception_Main@status,w
  8414  05F3  158A  2436         	fcall	_setLights_SwOff
  8415  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  8416  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  8417  05F7  0008               	return
  8418  05F8                     l5418:	
  8419                           ;Main_B1.c: 623: }
  8420                           
  8421                           ;Main_B1.c: 620: }
  8422                           ;Main_B1.c: 621: ;;
  8423                           ;Main_B1.c: 622: break;
  8424                           
  8425  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  8426  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  8427  05FA  085F               	movf	Exception_Main@error,w
  8428                           
  8429                           ; Switch size 1, requested type "space"
  8430                           ; Number of cases is 3, Range of values is 1 to 3
  8431                           ; switch strategies available:
  8432                           ; Name         Instructions Cycles
  8433                           ; simple_byte           10     6 (average)
  8434                           ; direct_byte           16    10 (fixed)
  8435                           ; jumptable            263     9 (fixed)
  8436                           ;	Chosen strategy is simple_byte
  8437  05FB  3A01               	xorlw	1	; case 1
  8438  05FC  1903               	skipnz
  8439  05FD  2D6F               	goto	l5388
  8440  05FE  3A03               	xorlw	3	; case 2
  8441  05FF  1903               	skipnz
  8442  0600  2DA2               	goto	l5398
  8443  0601  3A01               	xorlw	1	; case 3
  8444  0602  1903               	skipnz
  8445  0603  2DD8               	goto	l5410
  8446  0604  2E06               	goto	l644
  8447  0605  0008               	return
  8448  0606                     l644:	
  8449  0606  0008               	return
  8450  0607                     __end_of_Exception_Main:	
  8451                           
  8452                           	psect	text52
  8453  0D00                     __ptext52:	
  8454 ;; *************** function _setLights_SwOn *****************
  8455 ;; Defined at:
  8456 ;;		line 410 in file "../src/TriacRelay_B1.c"
  8457 ;; Parameters:    Size  Location     Type
  8458 ;;  sw              1    wreg     unsigned char 
  8459 ;; Auto vars:     Size  Location     Type
  8460 ;;  sw              1    3[BANK0 ] unsigned char 
  8461 ;; Return value:  Size  Location     Type
  8462 ;;		None               void
  8463 ;; Registers used:
  8464 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8465 ;; Tracked objects:
  8466 ;;		On entry : 0/0
  8467 ;;		On exit  : 0/0
  8468 ;;		Unchanged: 0/0
  8469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8470 ;;      Params:         0       0       0       0
  8471 ;;      Locals:         0       1       0       0
  8472 ;;      Temps:          0       0       0       0
  8473 ;;      Totals:         0       1       0       0
  8474 ;;Total ram usage:        1 bytes
  8475 ;; Hardware stack levels used:    1
  8476 ;; Hardware stack levels required when called:    4
  8477 ;; This function calls:
  8478 ;;		_LightsPointSelect
  8479 ;;		_getLights_Status
  8480 ;;		_setLights_Trigger
  8481 ;; This function is called by:
  8482 ;;		_Exception_Main
  8483 ;;		_PIR_Main
  8484 ;; This function uses a non-reentrant model
  8485 ;;
  8486                           
  8487                           
  8488                           ;psect for function _setLights_SwOn
  8489  0D00                     _setLights_SwOn:	
  8490                           
  8491                           ;incstack = 0
  8492                           ; Regs used in _setLights_SwOn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8493                           ;setLights_SwOn@sw stored from wreg
  8494  0D00  1283               	bcf	3,5	;RP0=0, select bank0
  8495  0D01  1303               	bcf	3,6	;RP1=0, select bank0
  8496  0D02  00D4               	movwf	setLights_SwOn@sw
  8497                           
  8498                           ;TriacRelay_B1.c: 411: LightsPointSelect(sw);
  8499  0D03  0854               	movf	setLights_SwOn@sw,w
  8500  0D04  158A  22FA  158A   	fcall	_LightsPointSelect
  8501                           
  8502                           ;TriacRelay_B1.c: 414: Lights->SwFlag = 1;
  8503  0D07  0A78               	incf	_Lights,w
  8504  0D08  0084               	movwf	4
  8505  0D09  1383               	bcf	3,7	;select IRP bank0
  8506  0D0A  1500               	bsf	0,2
  8507                           
  8508                           ;TriacRelay_B1.c: 415: if (getLights_Status(sw) == 0) {
  8509  0D0B  1283               	bcf	3,5	;RP0=0, select bank0
  8510  0D0C  1303               	bcf	3,6	;RP1=0, select bank0
  8511  0D0D  0854               	movf	setLights_SwOn@sw,w
  8512  0D0E  158A  2361  158A   	fcall	_getLights_Status
  8513  0D11  3800               	iorlw	0
  8514  0D12  1D03               	skipz
  8515  0D13  2D20               	goto	l4786
  8516                           
  8517                           ;TriacRelay_B1.c: 416: Lights->SwStatus = 1;
  8518  0D14  0A78               	incf	_Lights,w
  8519  0D15  0084               	movwf	4
  8520  0D16  1383               	bcf	3,7	;select IRP bank0
  8521  0D17  1580               	bsf	0,3
  8522                           
  8523                           ;TriacRelay_B1.c: 417: setLights_Trigger(sw, 1);
  8524  0D18  1283               	bcf	3,5	;RP0=0, select bank0
  8525  0D19  1303               	bcf	3,6	;RP1=0, select bank0
  8526  0D1A  01D1               	clrf	setLights_Trigger@command
  8527  0D1B  0AD1               	incf	setLights_Trigger@command,f
  8528  0D1C  0854               	movf	setLights_SwOn@sw,w
  8529  0D1D  158A  246A         	fcall	_setLights_Trigger
  8530                           
  8531                           ;TriacRelay_B1.c: 418: } else {
  8532  0D1F  0008               	return
  8533  0D20                     l4786:	
  8534                           
  8535                           ;TriacRelay_B1.c: 419: Lights->SwStatus = 0;
  8536  0D20  0A78               	incf	_Lights,w
  8537  0D21  0084               	movwf	4
  8538  0D22  1383               	bcf	3,7	;select IRP bank0
  8539  0D23  1180               	bcf	0,3
  8540  0D24  0008               	return
  8541  0D25                     __end_of_setLights_SwOn:	
  8542                           
  8543                           	psect	text53
  8544  0B61                     __ptext53:	
  8545 ;; *************** function _getLights_Status *****************
  8546 ;; Defined at:
  8547 ;;		line 271 in file "../src/TriacRelay_B1.c"
  8548 ;; Parameters:    Size  Location     Type
  8549 ;;  lights          1    wreg     unsigned char 
  8550 ;; Auto vars:     Size  Location     Type
  8551 ;;  lights          1    0[BANK0 ] unsigned char 
  8552 ;;  status          1    1[BANK0 ] unsigned char 
  8553 ;; Return value:  Size  Location     Type
  8554 ;;                  1    wreg      unsigned char 
  8555 ;; Registers used:
  8556 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8557 ;; Tracked objects:
  8558 ;;		On entry : 0/0
  8559 ;;		On exit  : 0/0
  8560 ;;		Unchanged: 0/0
  8561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8562 ;;      Params:         0       0       0       0
  8563 ;;      Locals:         0       2       0       0
  8564 ;;      Temps:          0       0       0       0
  8565 ;;      Totals:         0       2       0       0
  8566 ;;Total ram usage:        2 bytes
  8567 ;; Hardware stack levels used:    1
  8568 ;; Hardware stack levels required when called:    3
  8569 ;; This function calls:
  8570 ;;		_LightsPointSelect
  8571 ;; This function is called by:
  8572 ;;		_Exception_Main
  8573 ;;		_PIR_Main
  8574 ;;		_setLights_SwOn
  8575 ;;		_setLights_ErrorClose
  8576 ;; This function uses a non-reentrant model
  8577 ;;
  8578                           
  8579                           
  8580                           ;psect for function _getLights_Status
  8581  0B61                     _getLights_Status:	
  8582                           
  8583                           ;incstack = 0
  8584                           ; Regs used in _getLights_Status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8585                           ;getLights_Status@lights stored from wreg
  8586  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  8587  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  8588  0B63  00D1               	movwf	getLights_Status@lights
  8589                           
  8590                           ;TriacRelay_B1.c: 272: LightsPointSelect(lights);
  8591  0B64  0851               	movf	getLights_Status@lights,w
  8592  0B65  158A  22FA         	fcall	_LightsPointSelect
  8593                           
  8594                           ;TriacRelay_B1.c: 273: char status = Lights->Status == 1 ? 1 : 0;
  8595  0B67  0878               	movf	_Lights,w
  8596  0B68  0084               	movwf	4
  8597  0B69  3000               	movlw	0
  8598  0B6A  1383               	bcf	3,7	;select IRP bank0
  8599  0B6B  1900               	btfsc	0,2
  8600  0B6C  3001               	movlw	1
  8601  0B6D  1283               	bcf	3,5	;RP0=0, select bank0
  8602  0B6E  1303               	bcf	3,6	;RP1=0, select bank0
  8603  0B6F  00D2               	movwf	getLights_Status@status
  8604                           
  8605                           ;TriacRelay_B1.c: 274: return status;
  8606  0B70  0852               	movf	getLights_Status@status,w
  8607  0B71  0008               	return
  8608  0B72                     __end_of_getLights_Status:	
  8609                           
  8610                           	psect	text54
  8611  0C36                     __ptext54:	
  8612 ;; *************** function _setLights_SwOff *****************
  8613 ;; Defined at:
  8614 ;;		line 438 in file "../src/TriacRelay_B1.c"
  8615 ;; Parameters:    Size  Location     Type
  8616 ;;  sw              1    wreg     unsigned char 
  8617 ;; Auto vars:     Size  Location     Type
  8618 ;;  sw              1    3[BANK0 ] unsigned char 
  8619 ;; Return value:  Size  Location     Type
  8620 ;;		None               void
  8621 ;; Registers used:
  8622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8623 ;; Tracked objects:
  8624 ;;		On entry : 0/0
  8625 ;;		On exit  : 0/0
  8626 ;;		Unchanged: 0/0
  8627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8628 ;;      Params:         0       0       0       0
  8629 ;;      Locals:         0       1       0       0
  8630 ;;      Temps:          0       0       0       0
  8631 ;;      Totals:         0       1       0       0
  8632 ;;Total ram usage:        1 bytes
  8633 ;; Hardware stack levels used:    1
  8634 ;; Hardware stack levels required when called:    4
  8635 ;; This function calls:
  8636 ;;		_LightsPointSelect
  8637 ;;		_setLights_Trigger
  8638 ;; This function is called by:
  8639 ;;		_Exception_Main
  8640 ;;		_PIR_Main
  8641 ;; This function uses a non-reentrant model
  8642 ;;
  8643                           
  8644                           
  8645                           ;psect for function _setLights_SwOff
  8646  0C36                     _setLights_SwOff:	
  8647                           
  8648                           ;incstack = 0
  8649                           ; Regs used in _setLights_SwOff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8650                           ;setLights_SwOff@sw stored from wreg
  8651  0C36  1283               	bcf	3,5	;RP0=0, select bank0
  8652  0C37  1303               	bcf	3,6	;RP1=0, select bank0
  8653  0C38  00D4               	movwf	setLights_SwOff@sw
  8654                           
  8655                           ;TriacRelay_B1.c: 440: LightsPointSelect(sw);
  8656  0C39  0854               	movf	setLights_SwOff@sw,w
  8657  0C3A  158A  22FA  158A   	fcall	_LightsPointSelect
  8658                           
  8659                           ;TriacRelay_B1.c: 442: if (Lights->SwFlag == 1) {
  8660  0C3D  0A78               	incf	_Lights,w
  8661  0C3E  0084               	movwf	4
  8662  0C3F  1383               	bcf	3,7	;select IRP bank0
  8663  0C40  1D00               	btfss	0,2
  8664  0C41  0008               	return
  8665                           
  8666                           ;TriacRelay_B1.c: 443: Lights->SwFlag = 0;
  8667  0C42  0A78               	incf	_Lights,w
  8668  0C43  0084               	movwf	4
  8669  0C44  1100               	bcf	0,2
  8670                           
  8671                           ;TriacRelay_B1.c: 444: if (Lights->SwStatus == 0) {
  8672  0C45  0A78               	incf	_Lights,w
  8673  0C46  0084               	movwf	4
  8674  0C47  1980               	btfsc	0,3
  8675  0C48  0008               	return
  8676                           
  8677                           ;TriacRelay_B1.c: 445: setLights_Trigger(sw, 0);
  8678  0C49  1283               	bcf	3,5	;RP0=0, select bank0
  8679  0C4A  1303               	bcf	3,6	;RP1=0, select bank0
  8680  0C4B  01D1               	clrf	setLights_Trigger@command
  8681  0C4C  0854               	movf	setLights_SwOff@sw,w
  8682  0C4D  158A  246A         	fcall	_setLights_Trigger
  8683  0C4F  0008               	return
  8684  0C50                     __end_of_setLights_SwOff:	
  8685                           
  8686                           	psect	text55
  8687  0C6A                     __ptext55:	
  8688 ;; *************** function _setLights_Trigger *****************
  8689 ;; Defined at:
  8690 ;;		line 278 in file "../src/TriacRelay_B1.c"
  8691 ;; Parameters:    Size  Location     Type
  8692 ;;  lights          1    wreg     unsigned char 
  8693 ;;  command         1    0[BANK0 ] unsigned char 
  8694 ;; Auto vars:     Size  Location     Type
  8695 ;;  lights          1    2[BANK0 ] unsigned char 
  8696 ;; Return value:  Size  Location     Type
  8697 ;;		None               void
  8698 ;; Registers used:
  8699 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8700 ;; Tracked objects:
  8701 ;;		On entry : 0/0
  8702 ;;		On exit  : 0/0
  8703 ;;		Unchanged: 0/0
  8704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8705 ;;      Params:         0       1       0       0
  8706 ;;      Locals:         0       1       0       0
  8707 ;;      Temps:          0       1       0       0
  8708 ;;      Totals:         0       3       0       0
  8709 ;;Total ram usage:        3 bytes
  8710 ;; Hardware stack levels used:    1
  8711 ;; Hardware stack levels required when called:    3
  8712 ;; This function calls:
  8713 ;;		_LightsPointSelect
  8714 ;; This function is called by:
  8715 ;;		_setLights_SwOn
  8716 ;;		_setLights_SwOff
  8717 ;;		_setLights_ErrorClose
  8718 ;; This function uses a non-reentrant model
  8719 ;;
  8720                           
  8721                           
  8722                           ;psect for function _setLights_Trigger
  8723  0C6A                     _setLights_Trigger:	
  8724                           
  8725                           ;incstack = 0
  8726                           ; Regs used in _setLights_Trigger: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8727                           ;setLights_Trigger@lights stored from wreg
  8728  0C6A  1283               	bcf	3,5	;RP0=0, select bank0
  8729  0C6B  1303               	bcf	3,6	;RP1=0, select bank0
  8730  0C6C  00D3               	movwf	setLights_Trigger@lights
  8731                           
  8732                           ;TriacRelay_B1.c: 279: LightsPointSelect(lights);
  8733  0C6D  0853               	movf	setLights_Trigger@lights,w
  8734  0C6E  158A  22FA         	fcall	_LightsPointSelect
  8735                           
  8736                           ;TriacRelay_B1.c: 280: Lights->Trigger = 1;
  8737  0C70  0878               	movf	_Lights,w
  8738  0C71  0084               	movwf	4
  8739  0C72  1383               	bcf	3,7	;select IRP bank0
  8740  0C73  1580               	bsf	0,3
  8741                           
  8742                           ;TriacRelay_B1.c: 281: Lights->Switch = command == 1 ? 1 : 0;
  8743  0C74  1283               	bcf	3,5	;RP0=0, select bank0
  8744  0C75  1303               	bcf	3,6	;RP1=0, select bank0
  8745  0C76  0851               	movf	setLights_Trigger@command,w
  8746  0C77  3A01               	xorlw	1
  8747  0C78  3000               	movlw	0
  8748  0C79  1903               	skipnz
  8749  0C7A  3001               	movlw	1
  8750  0C7B  00D2               	movwf	??_setLights_Trigger
  8751  0C7C  0878               	movf	_Lights,w
  8752  0C7D  0084               	movwf	4
  8753  0C7E  0ED2               	swapf	??_setLights_Trigger,f
  8754  0C7F  0800               	movf	0,w
  8755  0C80  0652               	xorwf	??_setLights_Trigger,w
  8756  0C81  39EF               	andlw	-17
  8757  0C82  0652               	xorwf	??_setLights_Trigger,w
  8758  0C83  0080               	movwf	0
  8759  0C84  0008               	return
  8760  0C85                     __end_of_setLights_Trigger:	
  8761                           
  8762                           	psect	text56
  8763  0AFA                     __ptext56:	
  8764 ;; *************** function _LightsPointSelect *****************
  8765 ;; Defined at:
  8766 ;;		line 10 in file "../src/TriacRelay_B1.c"
  8767 ;; Parameters:    Size  Location     Type
  8768 ;;  lights          1    wreg     unsigned char 
  8769 ;; Auto vars:     Size  Location     Type
  8770 ;;  lights          1    5[COMMON] unsigned char 
  8771 ;; Return value:  Size  Location     Type
  8772 ;;		None               void
  8773 ;; Registers used:
  8774 ;;		wreg
  8775 ;; Tracked objects:
  8776 ;;		On entry : 0/0
  8777 ;;		On exit  : 0/0
  8778 ;;		Unchanged: 0/0
  8779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8780 ;;      Params:         0       0       0       0
  8781 ;;      Locals:         1       0       0       0
  8782 ;;      Temps:          1       0       0       0
  8783 ;;      Totals:         2       0       0       0
  8784 ;;Total ram usage:        2 bytes
  8785 ;; Hardware stack levels used:    1
  8786 ;; Hardware stack levels required when called:    2
  8787 ;; This function calls:
  8788 ;;		Nothing
  8789 ;; This function is called by:
  8790 ;;		_setLights_Initialization
  8791 ;;		_setLights_Main
  8792 ;;		_Lights_Control
  8793 ;;		_getLights_Status
  8794 ;;		_setLights_Trigger
  8795 ;;		_setLights_SwOn
  8796 ;;		_setLights_SwOff
  8797 ;; This function uses a non-reentrant model
  8798 ;;
  8799                           
  8800                           
  8801                           ;psect for function _LightsPointSelect
  8802  0AFA                     _LightsPointSelect:	
  8803                           
  8804                           ;incstack = 0
  8805                           ; Regs used in _LightsPointSelect: [wreg]
  8806                           ;LightsPointSelect@lights stored from wreg
  8807  0AFA  00F5               	movwf	LightsPointSelect@lights
  8808                           
  8809                           ;TriacRelay_B1.c: 13: if (lights == 1) {
  8810  0AFB  0875               	movf	LightsPointSelect@lights,w
  8811  0AFC  3A01               	xorlw	1
  8812  0AFD  1D03               	skipz
  8813  0AFE  0008               	return
  8814                           
  8815                           ;TriacRelay_B1.c: 14: Lights = &Lights1;
  8816  0AFF  3040               	movlw	_Lights1& (0+255)
  8817  0B00  00F4               	movwf	??_LightsPointSelect
  8818  0B01  0874               	movf	??_LightsPointSelect,w
  8819  0B02  00F8               	movwf	_Lights
  8820  0B03  0008               	return
  8821  0B04                     __end_of_LightsPointSelect:	
  8822                           
  8823                           	psect	text57
  8824  0F8F                     __ptext57:	
  8825 ;; *************** function _setLED *****************
  8826 ;; Defined at:
  8827 ;;		line 81 in file "../src/LED_B1.c"
  8828 ;; Parameters:    Size  Location     Type
  8829 ;;  led             1    wreg     unsigned char 
  8830 ;;  command         1    0[BANK0 ] unsigned char 
  8831 ;; Auto vars:     Size  Location     Type
  8832 ;;  led             1    1[BANK0 ] unsigned char 
  8833 ;; Return value:  Size  Location     Type
  8834 ;;		None               void
  8835 ;; Registers used:
  8836 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8837 ;; Tracked objects:
  8838 ;;		On entry : 0/0
  8839 ;;		On exit  : 0/0
  8840 ;;		Unchanged: 0/0
  8841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8842 ;;      Params:         0       1       0       0
  8843 ;;      Locals:         0       1       0       0
  8844 ;;      Temps:          0       0       0       0
  8845 ;;      Totals:         0       2       0       0
  8846 ;;Total ram usage:        2 bytes
  8847 ;; Hardware stack levels used:    1
  8848 ;; Hardware stack levels required when called:    3
  8849 ;; This function calls:
  8850 ;;		_LedPointSelect
  8851 ;; This function is called by:
  8852 ;;		_setLED_Initialization
  8853 ;;		_setPIRLED_Main
  8854 ;;		_Exception_Main
  8855 ;;		_PIR_Main
  8856 ;;		_setLights
  8857 ;; This function uses a non-reentrant model
  8858 ;;
  8859                           
  8860                           
  8861                           ;psect for function _setLED
  8862  0F8F                     _setLED:	
  8863                           
  8864                           ;incstack = 0
  8865                           ; Regs used in _setLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8866                           ;setLED@led stored from wreg
  8867  0F8F  1283               	bcf	3,5	;RP0=0, select bank0
  8868  0F90  1303               	bcf	3,6	;RP1=0, select bank0
  8869  0F91  00D2               	movwf	setLED@led
  8870                           
  8871                           ;LED_B1.c: 82: LedPointSelect(led);
  8872  0F92  0852               	movf	setLED@led,w
  8873  0F93  158A  241C  158A   	fcall	_LedPointSelect
  8874                           
  8875                           ;LED_B1.c: 83: if (command == 0) {
  8876  0F96  1283               	bcf	3,5	;RP0=0, select bank0
  8877  0F97  1303               	bcf	3,6	;RP1=0, select bank0
  8878  0F98  08D1               	movf	setLED@command,f
  8879  0F99  1D03               	skipz
  8880  0F9A  2FA8               	goto	l4508
  8881                           
  8882                           ;LED_B1.c: 85: if (led == 1) {
  8883  0F9B  0852               	movf	setLED@led,w
  8884  0F9C  3A01               	xorlw	1
  8885  0F9D  1D03               	skipz
  8886  0F9E  2FA0               	goto	l4500
  8887                           
  8888                           ;LED_B1.c: 89: RB4 = 1;
  8889  0F9F  1606               	bsf	6,4	;volatile
  8890  0FA0                     l4500:	
  8891                           
  8892                           ;LED_B1.c: 91: }
  8893                           ;LED_B1.c: 94: if (led == 2) {
  8894  0FA0  0852               	movf	setLED@led,w
  8895  0FA1  3A02               	xorlw	2
  8896  0FA2  1903               	btfsc	3,2
  8897                           
  8898                           ;LED_B1.c: 98: RB5 = 1;
  8899  0FA3  1686               	bsf	6,5	;volatile
  8900                           
  8901                           ;LED_B1.c: 100: }
  8902                           ;LED_B1.c: 112: if (led == 99) {
  8903  0FA4  0852               	movf	setLED@led,w
  8904  0FA5  3A63               	xorlw	99
  8905  0FA6  1903               	btfsc	3,2
  8906                           
  8907                           ;LED_B1.c: 116: RB3 = 1;
  8908  0FA7  1586               	bsf	6,3	;volatile
  8909  0FA8                     l4508:	
  8910                           
  8911                           ;LED_B1.c: 118: }
  8912                           ;LED_B1.c: 120: }
  8913                           ;LED_B1.c: 121: if (command == 1) {
  8914  0FA8  0851               	movf	setLED@command,w
  8915  0FA9  3A01               	xorlw	1
  8916  0FAA  1D03               	skipz
  8917  0FAB  2FB9               	goto	l4522
  8918                           
  8919                           ;LED_B1.c: 123: if (led == 1) {
  8920  0FAC  0852               	movf	setLED@led,w
  8921  0FAD  3A01               	xorlw	1
  8922  0FAE  1D03               	skipz
  8923  0FAF  2FB1               	goto	l4514
  8924                           
  8925                           ;LED_B1.c: 127: RB4 = 0;
  8926  0FB0  1206               	bcf	6,4	;volatile
  8927  0FB1                     l4514:	
  8928                           
  8929                           ;LED_B1.c: 129: }
  8930                           ;LED_B1.c: 132: if (led == 2) {
  8931  0FB1  0852               	movf	setLED@led,w
  8932  0FB2  3A02               	xorlw	2
  8933  0FB3  1903               	btfsc	3,2
  8934                           
  8935                           ;LED_B1.c: 136: RB5 = 0;
  8936  0FB4  1286               	bcf	6,5	;volatile
  8937                           
  8938                           ;LED_B1.c: 138: }
  8939                           ;LED_B1.c: 150: if (led == 99) {
  8940  0FB5  0852               	movf	setLED@led,w
  8941  0FB6  3A63               	xorlw	99
  8942  0FB7  1903               	btfsc	3,2
  8943                           
  8944                           ;LED_B1.c: 154: RB3 = 0;
  8945  0FB8  1186               	bcf	6,3	;volatile
  8946  0FB9                     l4522:	
  8947                           
  8948                           ;LED_B1.c: 156: }
  8949                           ;LED_B1.c: 158: }
  8950                           ;LED_B1.c: 159: if (command == 10) {
  8951  0FB9  0851               	movf	setLED@command,w
  8952  0FBA  3A0A               	xorlw	10
  8953  0FBB  1D03               	skipz
  8954  0FBC  2FD4               	goto	l4540
  8955                           
  8956                           ;LED_B1.c: 160: LED->GO = 0;
  8957  0FBD  0876               	movf	_LED,w
  8958  0FBE  0084               	movwf	4
  8959  0FBF  1383               	bcf	3,7	;select IRP bank0
  8960  0FC0  1080               	bcf	0,1
  8961                           
  8962                           ;LED_B1.c: 161: LED->Time = 0;
  8963  0FC1  0A76               	incf	_LED,w
  8964  0FC2  0084               	movwf	4
  8965  0FC3  0180               	clrf	0
  8966  0FC4  0A84               	incf	4,f
  8967  0FC5  0180               	clrf	0
  8968                           
  8969                           ;LED_B1.c: 163: if (led == 1) {
  8970  0FC6  0852               	movf	setLED@led,w
  8971  0FC7  3A01               	xorlw	1
  8972  0FC8  1D03               	skipz
  8973  0FC9  2FCC               	goto	l4532
  8974                           
  8975                           ;LED_B1.c: 167: RB4 = 1;
  8976  0FCA  1606               	bsf	6,4	;volatile
  8977                           
  8978                           ;LED_B1.c: 169: }
  8979  0FCB  2FD0               	goto	l4536
  8980  0FCC                     l4532:	
  8981                           
  8982                           ;LED_B1.c: 172: else if (led == 2) {
  8983  0FCC  0852               	movf	setLED@led,w
  8984  0FCD  3A02               	xorlw	2
  8985  0FCE  1903               	btfsc	3,2
  8986                           
  8987                           ;LED_B1.c: 176: RB5 = 1;
  8988  0FCF  1686               	bsf	6,5	;volatile
  8989  0FD0                     l4536:	
  8990                           
  8991                           ;LED_B1.c: 178: }
  8992                           ;LED_B1.c: 190: if (led == 99) {
  8993  0FD0  0852               	movf	setLED@led,w
  8994  0FD1  3A63               	xorlw	99
  8995  0FD2  1903               	btfsc	3,2
  8996                           
  8997                           ;LED_B1.c: 194: RB3 = 1;
  8998  0FD3  1586               	bsf	6,3	;volatile
  8999  0FD4                     l4540:	
  9000                           
  9001                           ;LED_B1.c: 196: }
  9002                           ;LED_B1.c: 198: }
  9003                           ;LED_B1.c: 199: if (command == 11) {
  9004  0FD4  0851               	movf	setLED@command,w
  9005  0FD5  3A0B               	xorlw	11
  9006  0FD6  1D03               	skipz
  9007  0FD7  2FDC               	goto	l4544
  9008                           
  9009                           ;LED_B1.c: 200: LED->GO = 1;
  9010  0FD8  0876               	movf	_LED,w
  9011  0FD9  0084               	movwf	4
  9012  0FDA  1383               	bcf	3,7	;select IRP bank0
  9013  0FDB  1480               	bsf	0,1
  9014  0FDC                     l4544:	
  9015                           
  9016                           ;LED_B1.c: 201: }
  9017                           ;LED_B1.c: 205: if (command == 111) {
  9018  0FDC  0851               	movf	setLED@command,w
  9019  0FDD  3A6F               	xorlw	111
  9020  0FDE  1D03               	skipz
  9021  0FDF  2FFA               	goto	l4570
  9022                           
  9023                           ;LED_B1.c: 206: PIRLED.Count = 0;
  9024  0FE0  01AB               	clrf	_PIRLED+1
  9025                           
  9026                           ;LED_B1.c: 207: PIRLED.Time = 0;
  9027  0FE1  01AC               	clrf	_PIRLED+2
  9028  0FE2  01AD               	clrf	_PIRLED+3
  9029                           
  9030                           ;LED_B1.c: 208: PIRLED.status = 0;
  9031  0FE3  122A               	bcf	_PIRLED,4
  9032                           
  9033                           ;LED_B1.c: 209: PIRLED.GO = 1;
  9034  0FE4  142A               	bsf	_PIRLED,0
  9035                           
  9036                           ;LED_B1.c: 210: PIRLED.GO1 = 0;
  9037  0FE5  10AA               	bcf	_PIRLED,1
  9038                           
  9039                           ;LED_B1.c: 211: PIRLED.GO2 = 0;
  9040  0FE6  112A               	bcf	_PIRLED,2
  9041                           
  9042                           ;LED_B1.c: 212: PIRLED.GO3 = 0;
  9043  0FE7  11AA               	bcf	_PIRLED,3
  9044                           
  9045                           ;LED_B1.c: 213: if (led == 1) {
  9046  0FE8  0852               	movf	setLED@led,w
  9047  0FE9  3A01               	xorlw	1
  9048  0FEA  1D03               	skipz
  9049  0FEB  2FEE               	goto	l4562
  9050                           
  9051                           ;LED_B1.c: 214: PIRLED.GO1 = 1;
  9052  0FEC  14AA               	bsf	_PIRLED,1
  9053                           
  9054                           ;LED_B1.c: 215: } else if (led == 2) {
  9055  0FED  0008               	return
  9056  0FEE                     l4562:	
  9057  0FEE  0852               	movf	setLED@led,w
  9058  0FEF  3A02               	xorlw	2
  9059  0FF0  1D03               	skipz
  9060  0FF1  2FF4               	goto	l4566
  9061                           
  9062                           ;LED_B1.c: 216: PIRLED.GO2 = 1;
  9063  0FF2  152A               	bsf	_PIRLED,2
  9064                           
  9065                           ;LED_B1.c: 217: } else if (led == 3) {
  9066  0FF3  0008               	return
  9067  0FF4                     l4566:	
  9068  0FF4  0852               	movf	setLED@led,w
  9069  0FF5  3A03               	xorlw	3
  9070  0FF6  1D03               	skipz
  9071  0FF7  0008               	return
  9072                           
  9073                           ;LED_B1.c: 218: PIRLED.GO3 = 1;
  9074  0FF8  15AA               	bsf	_PIRLED,3
  9075                           
  9076                           ;LED_B1.c: 219: }
  9077                           ;LED_B1.c: 220: } else if (command == 110) {
  9078  0FF9  0008               	return
  9079  0FFA                     l4570:	
  9080  0FFA  0851               	movf	setLED@command,w
  9081  0FFB  3A6E               	xorlw	110
  9082  0FFC  1D03               	skipz
  9083  0FFD  0008               	return
  9084                           
  9085                           ;LED_B1.c: 221: PIRLED.GO = 0;
  9086  0FFE  102A               	bcf	_PIRLED,0
  9087  0FFF  0008               	return
  9088  1000                     __end_of_setLED:	
  9089                           
  9090                           	psect	text58
  9091  0C1C                     __ptext58:	
  9092 ;; *************** function _LedPointSelect *****************
  9093 ;; Defined at:
  9094 ;;		line 7 in file "../src/LED_B1.c"
  9095 ;; Parameters:    Size  Location     Type
  9096 ;;  led             1    wreg     unsigned char 
  9097 ;; Auto vars:     Size  Location     Type
  9098 ;;  led             1    5[COMMON] unsigned char 
  9099 ;; Return value:  Size  Location     Type
  9100 ;;		None               void
  9101 ;; Registers used:
  9102 ;;		wreg
  9103 ;; Tracked objects:
  9104 ;;		On entry : 0/0
  9105 ;;		On exit  : 0/0
  9106 ;;		Unchanged: 0/0
  9107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9108 ;;      Params:         0       0       0       0
  9109 ;;      Locals:         1       0       0       0
  9110 ;;      Temps:          1       0       0       0
  9111 ;;      Totals:         2       0       0       0
  9112 ;;Total ram usage:        2 bytes
  9113 ;; Hardware stack levels used:    1
  9114 ;; Hardware stack levels required when called:    2
  9115 ;; This function calls:
  9116 ;;		Nothing
  9117 ;; This function is called by:
  9118 ;;		_setLED_Initialization
  9119 ;;		_setLED
  9120 ;;		_setLED_Main
  9121 ;; This function uses a non-reentrant model
  9122 ;;
  9123                           
  9124                           
  9125                           ;psect for function _LedPointSelect
  9126  0C1C                     _LedPointSelect:	
  9127                           
  9128                           ;incstack = 0
  9129                           ; Regs used in _LedPointSelect: [wreg]
  9130                           ;LedPointSelect@led stored from wreg
  9131  0C1C  00F5               	movwf	LedPointSelect@led
  9132                           
  9133                           ;LED_B1.c: 9: if (led == 1) {
  9134  0C1D  0875               	movf	LedPointSelect@led,w
  9135  0C1E  3A01               	xorlw	1
  9136  0C1F  1D03               	skipz
  9137  0C20  2C25               	goto	l268
  9138                           
  9139                           ;LED_B1.c: 10: LED = &VarLED1;
  9140  0C21  3049               	movlw	_VarLED1& (0+255)
  9141  0C22  00F4               	movwf	??_LedPointSelect
  9142  0C23  0874               	movf	??_LedPointSelect,w
  9143  0C24  00F6               	movwf	_LED
  9144  0C25                     l268:	
  9145                           
  9146                           ;LED_B1.c: 11: }
  9147                           ;LED_B1.c: 14: if (led == 2) {
  9148  0C25  0875               	movf	LedPointSelect@led,w
  9149  0C26  3A02               	xorlw	2
  9150  0C27  1D03               	skipz
  9151  0C28  2C2D               	goto	l269
  9152                           
  9153                           ;LED_B1.c: 15: LED = &VarLED2;
  9154  0C29  304D               	movlw	_VarLED2& (0+255)
  9155  0C2A  00F4               	movwf	??_LedPointSelect
  9156  0C2B  0874               	movf	??_LedPointSelect,w
  9157  0C2C  00F6               	movwf	_LED
  9158  0C2D                     l269:	
  9159                           
  9160                           ;LED_B1.c: 16: }
  9161                           ;LED_B1.c: 24: if (led == 99) {
  9162  0C2D  0875               	movf	LedPointSelect@led,w
  9163  0C2E  3A63               	xorlw	99
  9164  0C2F  1D03               	skipz
  9165  0C30  0008               	return
  9166                           
  9167                           ;LED_B1.c: 25: LED = &VarErrLED;
  9168  0C31  3045               	movlw	_VarErrLED& (0+255)
  9169  0C32  00F4               	movwf	??_LedPointSelect
  9170  0C33  0874               	movf	??_LedPointSelect,w
  9171  0C34  00F6               	movwf	_LED
  9172  0C35  0008               	return
  9173  0C36                     __end_of_LedPointSelect:	
  9174                           
  9175                           	psect	text59
  9176  0AF1                     __ptext59:	
  9177 ;; *************** function _getMain_All_LightsStatus *****************
  9178 ;; Defined at:
  9179 ;;		line 373 in file "../src/Main_B1.c"
  9180 ;; Parameters:    Size  Location     Type
  9181 ;;		None
  9182 ;; Auto vars:     Size  Location     Type
  9183 ;;  status          1    4[COMMON] unsigned char 
  9184 ;; Return value:  Size  Location     Type
  9185 ;;                  1    wreg      unsigned char 
  9186 ;; Registers used:
  9187 ;;		wreg, status,2
  9188 ;; Tracked objects:
  9189 ;;		On entry : 0/0
  9190 ;;		On exit  : 0/0
  9191 ;;		Unchanged: 0/0
  9192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9193 ;;      Params:         0       0       0       0
  9194 ;;      Locals:         1       0       0       0
  9195 ;;      Temps:          0       0       0       0
  9196 ;;      Totals:         1       0       0       0
  9197 ;;Total ram usage:        1 bytes
  9198 ;; Hardware stack levels used:    1
  9199 ;; Hardware stack levels required when called:    2
  9200 ;; This function calls:
  9201 ;;		Nothing
  9202 ;; This function is called by:
  9203 ;;		_Exception_Main
  9204 ;;		_Load_Main
  9205 ;;		_setTemp_Main
  9206 ;;		_Lights_Main
  9207 ;; This function uses a non-reentrant model
  9208 ;;
  9209                           
  9210                           
  9211                           ;psect for function _getMain_All_LightsStatus
  9212  0AF1                     _getMain_All_LightsStatus:	
  9213                           
  9214                           ;Main_B1.c: 374: char status = 0;
  9215                           
  9216                           ;incstack = 0
  9217                           ; Regs used in _getMain_All_LightsStatus: [wreg+status,2]
  9218  0AF1  01F4               	clrf	getMain_All_LightsStatus@status
  9219                           
  9220                           ;Main_B1.c: 378: status = Lights1.Status == 1 ? 1 : 0;
  9221  0AF2  3000               	movlw	0
  9222  0AF3  1283               	bcf	3,5	;RP0=0, select bank0
  9223  0AF4  1303               	bcf	3,6	;RP1=0, select bank0
  9224  0AF5  1940               	btfsc	_Lights1,2
  9225  0AF6  3001               	movlw	1
  9226  0AF7  00F4               	movwf	getMain_All_LightsStatus@status
  9227                           
  9228                           ;Main_B1.c: 420: return status;
  9229  0AF8  0874               	movf	getMain_All_LightsStatus@status,w
  9230  0AF9  0008               	return
  9231  0AFA                     __end_of_getMain_All_LightsStatus:	
  9232                           
  9233                           	psect	text60
  9234  0DAE                     __ptext60:	
  9235 ;; *************** function _getMain_All_Error_Status *****************
  9236 ;; Defined at:
  9237 ;;		line 424 in file "../src/Main_B1.c"
  9238 ;; Parameters:    Size  Location     Type
  9239 ;;  command         1    wreg     unsigned char 
  9240 ;; Auto vars:     Size  Location     Type
  9241 ;;  command         1    4[BANK0 ] unsigned char 
  9242 ;;  status          1    5[BANK0 ] unsigned char 
  9243 ;; Return value:  Size  Location     Type
  9244 ;;                  1    wreg      unsigned char 
  9245 ;; Registers used:
  9246 ;;		wreg, status,2, status,0
  9247 ;; Tracked objects:
  9248 ;;		On entry : 0/0
  9249 ;;		On exit  : 0/0
  9250 ;;		Unchanged: 0/0
  9251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9252 ;;      Params:         0       0       0       0
  9253 ;;      Locals:         0       6       0       0
  9254 ;;      Temps:          1       0       0       0
  9255 ;;      Totals:         1       6       0       0
  9256 ;;Total ram usage:        7 bytes
  9257 ;; Hardware stack levels used:    1
  9258 ;; Hardware stack levels required when called:    2
  9259 ;; This function calls:
  9260 ;;		Nothing
  9261 ;; This function is called by:
  9262 ;;		_Exception_Main
  9263 ;;		_Load_Main
  9264 ;;		_setTemp_Main
  9265 ;;		_PIR_Main
  9266 ;;		_setSYSC_Main
  9267 ;;		_Lights_Main
  9268 ;; This function uses a non-reentrant model
  9269 ;;
  9270                           
  9271                           
  9272                           ;psect for function _getMain_All_Error_Status
  9273  0DAE                     _getMain_All_Error_Status:	
  9274                           
  9275                           ;incstack = 0
  9276                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2+status,0]
  9277                           ;getMain_All_Error_Status@command stored from wreg
  9278  0DAE  1283               	bcf	3,5	;RP0=0, select bank0
  9279  0DAF  1303               	bcf	3,6	;RP1=0, select bank0
  9280  0DB0  00D5               	movwf	getMain_All_Error_Status@command
  9281                           
  9282                           ;Main_B1.c: 425: char status = 0;
  9283  0DB1  01D6               	clrf	getMain_All_Error_Status@status
  9284                           
  9285                           ;Main_B1.c: 428: if (status == 0 && command != 1) {
  9286  0DB2  08D6               	movf	getMain_All_Error_Status@status,f
  9287  0DB3  1D03               	skipz
  9288  0DB4  2DBD               	goto	l3282
  9289  0DB5  0855               	movf	getMain_All_Error_Status@command,w
  9290  0DB6  3A01               	xorlw	1
  9291  0DB7  1903               	skipnz
  9292  0DB8  2DBD               	goto	l3282
  9293                           
  9294                           ;Main_B1.c: 429: status = SYSC.ERROR == 1 ? 1 : 0;
  9295  0DB9  3000               	movlw	0
  9296  0DBA  18A0               	btfsc	_SYSC,1
  9297  0DBB  3001               	movlw	1
  9298  0DBC  00D6               	movwf	getMain_All_Error_Status@status
  9299  0DBD                     l3282:	
  9300                           
  9301                           ;Main_B1.c: 430: }
  9302                           ;Main_B1.c: 436: if (status == 0 && command != 2) {
  9303  0DBD  08D6               	movf	getMain_All_Error_Status@status,f
  9304  0DBE  1D03               	skipz
  9305  0DBF  2DD1               	goto	l3292
  9306  0DC0  0855               	movf	getMain_All_Error_Status@command,w
  9307  0DC1  3A02               	xorlw	2
  9308  0DC2  1903               	skipnz
  9309  0DC3  2DD1               	goto	l3292
  9310                           
  9311                           ;Main_B1.c: 437: status = Temp.ERROR == 1 ? 2 : 0;
  9312  0DC4  18B9               	btfsc	_Temp,1
  9313  0DC5  2DC9               	goto	l3290
  9314  0DC6  01D1               	clrf	_getMain_All_Error_Status$2142
  9315  0DC7  01D2               	clrf	_getMain_All_Error_Status$2142+1
  9316  0DC8  2DCD               	goto	l613
  9317  0DC9                     l3290:	
  9318  0DC9  3002               	movlw	2
  9319  0DCA  00D1               	movwf	_getMain_All_Error_Status$2142
  9320  0DCB  3000               	movlw	0
  9321  0DCC  00D2               	movwf	_getMain_All_Error_Status$2142+1
  9322  0DCD                     l613:	
  9323  0DCD  0851               	movf	_getMain_All_Error_Status$2142,w
  9324  0DCE  00F4               	movwf	??_getMain_All_Error_Status
  9325  0DCF  0874               	movf	??_getMain_All_Error_Status,w
  9326  0DD0  00D6               	movwf	getMain_All_Error_Status@status
  9327  0DD1                     l3292:	
  9328                           
  9329                           ;Main_B1.c: 438: }
  9330                           ;Main_B1.c: 443: if (status == 0 && command != 3) {
  9331  0DD1  08D6               	movf	getMain_All_Error_Status@status,f
  9332  0DD2  1D03               	skipz
  9333  0DD3  2DEA               	goto	l614
  9334  0DD4  0855               	movf	getMain_All_Error_Status@command,w
  9335  0DD5  3A03               	xorlw	3
  9336  0DD6  1903               	skipnz
  9337  0DD7  2DEA               	goto	l614
  9338                           
  9339                           ;Main_B1.c: 444: status = Load.ERROR == 1 ? 3 : 0;
  9340  0DD8  1683               	bsf	3,5	;RP0=1, select bank1
  9341  0DD9  1303               	bcf	3,6	;RP1=0, select bank1
  9342  0DDA  1ACA               	btfsc	_Load^(0+128),5
  9343  0DDB  2DE1               	goto	l3300
  9344  0DDC  1283               	bcf	3,5	;RP0=0, select bank0
  9345  0DDD  1303               	bcf	3,6	;RP1=0, select bank0
  9346  0DDE  01D3               	clrf	_getMain_All_Error_Status$2143
  9347  0DDF  01D4               	clrf	_getMain_All_Error_Status$2143+1
  9348  0DE0  2DE6               	goto	l618
  9349  0DE1                     l3300:	
  9350  0DE1  3003               	movlw	3
  9351  0DE2  1283               	bcf	3,5	;RP0=0, select bank0
  9352  0DE3  00D3               	movwf	_getMain_All_Error_Status$2143
  9353  0DE4  3000               	movlw	0
  9354  0DE5  00D4               	movwf	_getMain_All_Error_Status$2143+1
  9355  0DE6                     l618:	
  9356  0DE6  0853               	movf	_getMain_All_Error_Status$2143,w
  9357  0DE7  00F4               	movwf	??_getMain_All_Error_Status
  9358  0DE8  0874               	movf	??_getMain_All_Error_Status,w
  9359  0DE9  00D6               	movwf	getMain_All_Error_Status@status
  9360  0DEA                     l614:	
  9361                           
  9362                           ;Main_B1.c: 445: }
  9363                           ;Main_B1.c: 455: return status;
  9364  0DEA  0856               	movf	getMain_All_Error_Status@status,w
  9365  0DEB  0008               	return
  9366  0DEC                     __end_of_getMain_All_Error_Status:	
  9367                           
  9368                           	psect	text61
  9369  0AE8                     __ptext61:	
  9370 ;; *************** function _getAll_Lights_Line *****************
  9371 ;; Defined at:
  9372 ;;		line 310 in file "../src/TriacRelay_B1.c"
  9373 ;; Parameters:    Size  Location     Type
  9374 ;;		None
  9375 ;; Auto vars:     Size  Location     Type
  9376 ;;  line            1    4[COMMON] unsigned char 
  9377 ;; Return value:  Size  Location     Type
  9378 ;;                  1    wreg      unsigned char 
  9379 ;; Registers used:
  9380 ;;		wreg, status,2
  9381 ;; Tracked objects:
  9382 ;;		On entry : 0/0
  9383 ;;		On exit  : 0/0
  9384 ;;		Unchanged: 0/0
  9385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9386 ;;      Params:         0       0       0       0
  9387 ;;      Locals:         1       0       0       0
  9388 ;;      Temps:          0       0       0       0
  9389 ;;      Totals:         1       0       0       0
  9390 ;;Total ram usage:        1 bytes
  9391 ;; Hardware stack levels used:    1
  9392 ;; Hardware stack levels required when called:    2
  9393 ;; This function calls:
  9394 ;;		Nothing
  9395 ;; This function is called by:
  9396 ;;		_Exception_Main
  9397 ;; This function uses a non-reentrant model
  9398 ;;
  9399                           
  9400                           
  9401                           ;psect for function _getAll_Lights_Line
  9402  0AE8                     _getAll_Lights_Line:	
  9403                           
  9404                           ;TriacRelay_B1.c: 311: char line = 0;
  9405                           
  9406                           ;incstack = 0
  9407                           ; Regs used in _getAll_Lights_Line: [wreg+status,2]
  9408  0AE8  01F4               	clrf	getAll_Lights_Line@line
  9409                           
  9410                           ;TriacRelay_B1.c: 313: if (Lights1.Line == 1) {
  9411  0AE9  1283               	bcf	3,5	;RP0=0, select bank0
  9412  0AEA  1303               	bcf	3,6	;RP1=0, select bank0
  9413  0AEB  1C41               	btfss	_Lights1+1,0
  9414  0AEC  2AEF               	goto	l3558
  9415                           
  9416                           ;TriacRelay_B1.c: 314: line = 1;
  9417  0AED  01F4               	clrf	getAll_Lights_Line@line
  9418  0AEE  0AF4               	incf	getAll_Lights_Line@line,f
  9419  0AEF                     l3558:	
  9420                           
  9421                           ;TriacRelay_B1.c: 315: }
  9422                           ;TriacRelay_B1.c: 327: return line;
  9423  0AEF  0874               	movf	getAll_Lights_Line@line,w
  9424  0AF0  0008               	return
  9425  0AF1                     __end_of_getAll_Lights_Line:	
  9426                           
  9427                           	psect	text62
  9428  0B1A                     __ptext62:	
  9429 ;; *************** function _DetectSYSC_Signal *****************
  9430 ;; Defined at:
  9431 ;;		line 50 in file "../src/SYSC_B1.c"
  9432 ;; Parameters:    Size  Location     Type
  9433 ;;		None
  9434 ;; Auto vars:     Size  Location     Type
  9435 ;;		None
  9436 ;; Return value:  Size  Location     Type
  9437 ;;		None               void
  9438 ;; Registers used:
  9439 ;;		status,2
  9440 ;; Tracked objects:
  9441 ;;		On entry : 0/0
  9442 ;;		On exit  : 0/0
  9443 ;;		Unchanged: 0/0
  9444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9445 ;;      Params:         0       0       0       0
  9446 ;;      Locals:         0       0       0       0
  9447 ;;      Temps:          0       0       0       0
  9448 ;;      Totals:         0       0       0       0
  9449 ;;Total ram usage:        0 bytes
  9450 ;; Hardware stack levels used:    1
  9451 ;; Hardware stack levels required when called:    2
  9452 ;; This function calls:
  9453 ;;		Nothing
  9454 ;; This function is called by:
  9455 ;;		_main
  9456 ;; This function uses a non-reentrant model
  9457 ;;
  9458                           
  9459                           
  9460                           ;psect for function _DetectSYSC_Signal
  9461  0B1A                     _DetectSYSC_Signal:	
  9462                           
  9463                           ;SYSC_B1.c: 51: if (SYSC.Signal == 0) {
  9464                           
  9465                           ;incstack = 0
  9466                           ; Regs used in _DetectSYSC_Signal: [status,2]
  9467  0B1A  1283               	bcf	3,5	;RP0=0, select bank0
  9468  0B1B  1303               	bcf	3,6	;RP1=0, select bank0
  9469  0B1C  19A0               	btfsc	_SYSC,3
  9470  0B1D  2B24               	goto	l1146
  9471                           
  9472                           ;SYSC_B1.c: 52: if (RA5 == 1) {
  9473  0B1E  1E85               	btfss	5,5	;volatile
  9474  0B1F  0008               	return
  9475                           
  9476                           ;SYSC_B1.c: 53: SYSC.Signal = 1;
  9477  0B20  15A0               	bsf	_SYSC,3
  9478                           
  9479                           ;SYSC_B1.c: 54: SYSC.Time = 0;
  9480  0B21  01A1               	clrf	_SYSC+1
  9481  0B22  01A2               	clrf	_SYSC+2
  9482                           
  9483                           ;SYSC_B1.c: 55: }
  9484                           ;SYSC_B1.c: 56: } else {
  9485  0B23  0008               	return
  9486  0B24                     l1146:	
  9487                           
  9488                           ;SYSC_B1.c: 57: if (RA5 == 0) {
  9489  0B24  1A85               	btfsc	5,5	;volatile
  9490  0B25  0008               	return
  9491                           
  9492                           ;SYSC_B1.c: 58: SYSC.Signal = 0;
  9493  0B26  11A0               	bcf	_SYSC,3
  9494  0B27  0008               	return
  9495  0B28                     __end_of_DetectSYSC_Signal:	
  9496                           
  9497                           	psect	text63
  9498  0D7A                     __ptext63:	
  9499 ;; *************** function _CDS_Main *****************
  9500 ;; Defined at:
  9501 ;;		line 11 in file "../src/CDS_B1.c"
  9502 ;; Parameters:    Size  Location     Type
  9503 ;;		None
  9504 ;; Auto vars:     Size  Location     Type
  9505 ;;		None
  9506 ;; Return value:  Size  Location     Type
  9507 ;;		None               void
  9508 ;; Registers used:
  9509 ;;		wreg, status,2, status,0
  9510 ;; Tracked objects:
  9511 ;;		On entry : 0/0
  9512 ;;		On exit  : 0/0
  9513 ;;		Unchanged: 0/0
  9514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9515 ;;      Params:         0       0       0       0
  9516 ;;      Locals:         0       0       0       0
  9517 ;;      Temps:          0       3       0       0
  9518 ;;      Totals:         0       3       0       0
  9519 ;;Total ram usage:        3 bytes
  9520 ;; Hardware stack levels used:    1
  9521 ;; Hardware stack levels required when called:    2
  9522 ;; This function calls:
  9523 ;;		Nothing
  9524 ;; This function is called by:
  9525 ;;		_main
  9526 ;; This function uses a non-reentrant model
  9527 ;;
  9528                           
  9529                           
  9530                           ;psect for function _CDS_Main
  9531  0D7A                     _CDS_Main:	
  9532                           
  9533                           ;CDS_B1.c: 13: if (_CDS.Enable == 1) {
  9534                           
  9535                           ;incstack = 0
  9536                           ; Regs used in _CDS_Main: [wreg+status,2+status,0]
  9537  0D7A  1283               	bcf	3,5	;RP0=0, select bank0
  9538  0D7B  1303               	bcf	3,6	;RP1=0, select bank0
  9539  0D7C  1C2E               	btfss	__CDS,0
  9540  0D7D  0008               	return
  9541                           
  9542                           ;CDS_B1.c: 14: if (_CDS.GO == 0) {
  9543  0D7E  18AE               	btfsc	__CDS,1
  9544  0D7F  2D8D               	goto	l123
  9545                           
  9546                           ;CDS_B1.c: 15: if (_CDS.ADtoGO == 0) {
  9547  0D80  19AE               	btfsc	__CDS,3
  9548  0D81  0008               	return
  9549                           
  9550                           ;CDS_B1.c: 16: _CDS.Time++;
  9551  0D82  3001               	movlw	1
  9552  0D83  00D1               	movwf	??_CDS_Main
  9553  0D84  0851               	movf	??_CDS_Main,w
  9554  0D85  07AF               	addwf	__CDS+1,f
  9555                           
  9556                           ;CDS_B1.c: 17: if (_CDS.Time >= (100 / 20))
  9557  0D86  3005               	movlw	5
  9558  0D87  022F               	subwf	__CDS+1,w
  9559  0D88  1C03               	skipc
  9560  0D89  0008               	return
  9561                           
  9562                           ;CDS_B1.c: 18: {
  9563                           ;CDS_B1.c: 19: _CDS.Time = 0;
  9564  0D8A  01AF               	clrf	__CDS+1
  9565                           
  9566                           ;CDS_B1.c: 20: _CDS.ADtoGO = 1;
  9567  0D8B  15AE               	bsf	__CDS,3
  9568                           
  9569                           ;CDS_B1.c: 21: }
  9570                           ;CDS_B1.c: 22: }
  9571                           ;CDS_B1.c: 23: } else {
  9572  0D8C  0008               	return
  9573  0D8D                     l123:	
  9574                           
  9575                           ;CDS_B1.c: 24: if (_CDS.GO == 1) {
  9576  0D8D  1CAE               	btfss	__CDS,1
  9577  0D8E  0008               	return
  9578                           
  9579                           ;CDS_B1.c: 25: _CDS.GO = 0;
  9580  0D8F  10AE               	bcf	__CDS,1
  9581                           
  9582                           ;CDS_B1.c: 26: if (_CDS.Status == 0) {
  9583  0D90  1A2E               	btfsc	__CDS,4
  9584  0D91  2D98               	goto	l4898
  9585                           
  9586                           ;CDS_B1.c: 27: if (_CDS.SignalAD >= _CDS.VRAD) {
  9587  0D92  0830               	movf	__CDS+2,w
  9588  0D93  0231               	subwf	__CDS+3,w
  9589  0D94  1C03               	skipc
  9590  0D95  0008               	return
  9591                           
  9592                           ;CDS_B1.c: 28: _CDS.Status = 1;
  9593  0D96  162E               	bsf	__CDS,4
  9594                           
  9595                           ;CDS_B1.c: 29: }
  9596                           ;CDS_B1.c: 30: } else {
  9597  0D97  0008               	return
  9598  0D98                     l4898:	
  9599                           
  9600                           ;CDS_B1.c: 31: if (_CDS.SignalAD <= (_CDS.VRAD - 100)) {
  9601  0D98  0830               	movf	__CDS+2,w
  9602  0D99  3E9C               	addlw	156
  9603  0D9A  00D1               	movwf	??_CDS_Main
  9604  0D9B  30FF               	movlw	255
  9605  0D9C  1803               	skipnc
  9606  0D9D  3000               	movlw	0
  9607  0D9E  00D2               	movwf	??_CDS_Main+1
  9608  0D9F  0852               	movf	??_CDS_Main+1,w
  9609  0DA0  3A80               	xorlw	128
  9610  0DA1  00D3               	movwf	??_CDS_Main+2
  9611  0DA2  3080               	movlw	128
  9612  0DA3  0253               	subwf	??_CDS_Main+2,w
  9613  0DA4  1D03               	skipz
  9614  0DA5  2DA8               	goto	u5945
  9615  0DA6  0831               	movf	__CDS+3,w
  9616  0DA7  0251               	subwf	??_CDS_Main,w
  9617  0DA8                     u5945:	
  9618  0DA8  1C03               	skipc
  9619  0DA9  0008               	return
  9620                           
  9621                           ;CDS_B1.c: 32: _CDS.Status = 0;
  9622  0DAA  1283               	bcf	3,5	;RP0=0, select bank0
  9623  0DAB  1303               	bcf	3,6	;RP1=0, select bank0
  9624  0DAC  122E               	bcf	__CDS,4
  9625  0DAD  0008               	return
  9626  0DAE                     __end_of_CDS_Main:	
  9627                           
  9628                           	psect	text64
  9629  0A9F                     __ptext64:	
  9630 ;; *************** function _CDS_Initialization *****************
  9631 ;; Defined at:
  9632 ;;		line 7 in file "../src/CDS_B1.c"
  9633 ;; Parameters:    Size  Location     Type
  9634 ;;		None
  9635 ;; Auto vars:     Size  Location     Type
  9636 ;;		None
  9637 ;; Return value:  Size  Location     Type
  9638 ;;		None               void
  9639 ;; Registers used:
  9640 ;;		None
  9641 ;; Tracked objects:
  9642 ;;		On entry : 0/0
  9643 ;;		On exit  : 0/0
  9644 ;;		Unchanged: 0/0
  9645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9646 ;;      Params:         0       0       0       0
  9647 ;;      Locals:         0       0       0       0
  9648 ;;      Temps:          0       0       0       0
  9649 ;;      Totals:         0       0       0       0
  9650 ;;Total ram usage:        0 bytes
  9651 ;; Hardware stack levels used:    1
  9652 ;; Hardware stack levels required when called:    2
  9653 ;; This function calls:
  9654 ;;		Nothing
  9655 ;; This function is called by:
  9656 ;;		_main
  9657 ;; This function uses a non-reentrant model
  9658 ;;
  9659                           
  9660                           
  9661                           ;psect for function _CDS_Initialization
  9662  0A9F                     _CDS_Initialization:	
  9663                           
  9664                           ;CDS_B1.c: 8: _CDS.Enable = 1;
  9665                           
  9666                           ;incstack = 0
  9667                           ; Regs used in _CDS_Initialization: []
  9668  0A9F  1283               	bcf	3,5	;RP0=0, select bank0
  9669  0AA0  1303               	bcf	3,6	;RP1=0, select bank0
  9670  0AA1  142E               	bsf	__CDS,0
  9671  0AA2  0008               	return
  9672  0AA3                     __end_of_CDS_Initialization:	
  9673                           
  9674                           	psect	text65
  9675  0BEC                     __ptext65:	
  9676 ;; *************** function _ISR *****************
  9677 ;; Defined at:
  9678 ;;		line 116 in file "../src/MCU_B1.c"
  9679 ;; Parameters:    Size  Location     Type
  9680 ;;		None
  9681 ;; Auto vars:     Size  Location     Type
  9682 ;;		None
  9683 ;; Return value:  Size  Location     Type
  9684 ;;		None               void
  9685 ;; Registers used:
  9686 ;;		wreg, status,2, status,0, pclath, cstack
  9687 ;; Tracked objects:
  9688 ;;		On entry : 0/0
  9689 ;;		On exit  : 0/0
  9690 ;;		Unchanged: 0/0
  9691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9692 ;;      Params:         0       0       0       0
  9693 ;;      Locals:         0       0       0       0
  9694 ;;      Temps:          4       0       0       0
  9695 ;;      Totals:         4       0       0       0
  9696 ;;Total ram usage:        4 bytes
  9697 ;; Hardware stack levels used:    1
  9698 ;; Hardware stack levels required when called:    1
  9699 ;; This function calls:
  9700 ;;		_TMR1_ISR
  9701 ;; This function is called by:
  9702 ;;		Interrupt level 1
  9703 ;; This function uses a non-reentrant model
  9704 ;;
  9705                           
  9706                           
  9707                           ;psect for function _ISR
  9708  0BEC                     _ISR:	
  9709                           
  9710                           ;MCU_B1.c: 125: if (TMR1IE == 1 && TMR1IF == 1) {
  9711  0BEC  1683               	bsf	3,5	;RP0=1, select bank1
  9712  0BED  1303               	bcf	3,6	;RP1=0, select bank1
  9713  0BEE  1C0C               	btfss	12,0	;volatile
  9714  0BEF  2BF7               	goto	i1l447
  9715  0BF0  1283               	bcf	3,5	;RP0=0, select bank0
  9716  0BF1  1303               	bcf	3,6	;RP1=0, select bank0
  9717  0BF2  1C0C               	btfss	12,0	;volatile
  9718  0BF3  2BF7               	goto	i1l447
  9719                           
  9720                           ;MCU_B1.c: 126: TMR1_ISR();
  9721  0BF4  158A  23A9  158A   	fcall	_TMR1_ISR
  9722  0BF7                     i1l447:	
  9723                           ;MCU_B1.c: 127: }
  9724                           ;MCU_B1.c: 148: return;
  9725                           
  9726  0BF7  0873               	movf	??_ISR+3,w
  9727  0BF8  1283               	bcf	3,5	;RP0=0, select bank0
  9728  0BF9  1303               	bcf	3,6	;RP1=0, select bank0
  9729  0BFA  00FF               	movwf	127
  9730  0BFB  0872               	movf	??_ISR+2,w
  9731  0BFC  008A               	movwf	10
  9732  0BFD  0871               	movf	??_ISR+1,w
  9733  0BFE  0084               	movwf	4
  9734  0BFF  0E70               	swapf	??_ISR^(0+-128),w
  9735  0C00  0083               	movwf	3
  9736  0C01  0EFE               	swapf	126,f
  9737  0C02  0E7E               	swapf	126,w
  9738  0C03  0009               	retfie
  9739  0C04                     __end_of_ISR:	
  9740                           
  9741                           	psect	intentry
  9742  0004                     __pintentry:	
  9743                           ;incstack = 0
  9744                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  9745                           
  9746  0004                     interrupt_function:	
  9747  007E                     saved_w	set	btemp
  9748  0004  00FE               	movwf	btemp
  9749  0005  0E03               	swapf	3,w
  9750  0006  00F0               	movwf	??_ISR
  9751  0007  0804               	movf	4,w
  9752  0008  00F1               	movwf	??_ISR+1
  9753  0009  080A               	movf	10,w
  9754  000A  00F2               	movwf	??_ISR+2
  9755  000B  1283               	bcf	3,5	;RP0=0, select bank0
  9756  000C  1303               	bcf	3,6	;RP1=0, select bank0
  9757  000D  087F               	movf	btemp+1,w
  9758  000E  00F3               	movwf	??_ISR+3
  9759  000F  158A  2BEC         	ljmp	_ISR
  9760                           
  9761                           	psect	text66
  9762  0BA9                     __ptext66:	
  9763 ;; *************** function _TMR1_ISR *****************
  9764 ;; Defined at:
  9765 ;;		line 236 in file "../src/MCU_B1.c"
  9766 ;; Parameters:    Size  Location     Type
  9767 ;;		None
  9768 ;; Auto vars:     Size  Location     Type
  9769 ;;		None
  9770 ;; Return value:  Size  Location     Type
  9771 ;;		None               void
  9772 ;; Registers used:
  9773 ;;		wreg, status,2
  9774 ;; Tracked objects:
  9775 ;;		On entry : 0/0
  9776 ;;		On exit  : 0/0
  9777 ;;		Unchanged: 0/0
  9778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9779 ;;      Params:         0       0       0       0
  9780 ;;      Locals:         0       0       0       0
  9781 ;;      Temps:          0       0       0       0
  9782 ;;      Totals:         0       0       0       0
  9783 ;;Total ram usage:        0 bytes
  9784 ;; Hardware stack levels used:    1
  9785 ;; This function calls:
  9786 ;;		Nothing
  9787 ;; This function is called by:
  9788 ;;		_ISR
  9789 ;; This function uses a non-reentrant model
  9790 ;;
  9791                           
  9792                           
  9793                           ;psect for function _TMR1_ISR
  9794  0BA9                     _TMR1_ISR:	
  9795                           
  9796                           ;MCU_B1.c: 268: Timer1.Count++;
  9797                           
  9798                           ;incstack = 0
  9799                           ; Regs used in _TMR1_ISR: [wreg+status,2]
  9800  0BA9  3001               	movlw	1
  9801  0BAA  1283               	bcf	3,5	;RP0=0, select bank0
  9802  0BAB  1303               	bcf	3,6	;RP1=0, select bank0
  9803  0BAC  07B3               	addwf	_Timer1+1,f
  9804  0BAD  1803               	skipnc
  9805  0BAE  0AB4               	incf	_Timer1+2,f
  9806  0BAF  3000               	movlw	0
  9807  0BB0  07B4               	addwf	_Timer1+2,f
  9808                           
  9809                           ;MCU_B1.c: 269: if (Timer1.Count == (int)(20*10)) {
  9810  0BB1  30C8               	movlw	200
  9811  0BB2  0633               	xorwf	_Timer1+1,w
  9812  0BB3  0434               	iorwf	_Timer1+2,w
  9813  0BB4  1D03               	skipz
  9814  0BB5  2BB9               	goto	i1l3800
  9815                           
  9816                           ;MCU_B1.c: 270: Timer1.Count = 0;
  9817  0BB6  01B3               	clrf	_Timer1+1
  9818  0BB7  01B4               	clrf	_Timer1+2
  9819                           
  9820                           ;MCU_B1.c: 271: Timer1.Timeout = 1;
  9821  0BB8  1432               	bsf	_Timer1,0
  9822  0BB9                     i1l3800:	
  9823                           
  9824                           ;MCU_B1.c: 272: }
  9825                           ;MCU_B1.c: 274: TMR1H = (int)((65536-1480)/256);
  9826  0BB9  30FA               	movlw	250
  9827  0BBA  008F               	movwf	15	;volatile
  9828                           
  9829                           ;MCU_B1.c: 275: TMR1L = (int)((65536-1480)%256);
  9830  0BBB  3038               	movlw	56
  9831  0BBC  008E               	movwf	14	;volatile
  9832                           
  9833                           ;MCU_B1.c: 276: TMR1IF = 0;
  9834  0BBD  100C               	bcf	12,0	;volatile
  9835  0BBE  0008               	return
  9836  0BBF                     __end_of_TMR1_ISR:	
  9837  007E                     btemp	set	126	;btemp
  9838  007E                     wtemp	set	126
  9839  007E                     wtemp0	set	126
  9840  0080                     wtemp1	set	128
  9841  0082                     wtemp2	set	130
  9842  0084                     wtemp3	set	132
  9843  0086                     wtemp4	set	134
  9844  0088                     wtemp5	set	136
  9845  007F                     wtemp6	set	127
  9846  007E                     ttemp	set	126
  9847  007E                     ttemp0	set	126
  9848  0081                     ttemp1	set	129
  9849  0084                     ttemp2	set	132
  9850  0087                     ttemp3	set	135
  9851  007F                     ttemp4	set	127
  9852  007E                     ltemp	set	126
  9853  007E                     ltemp0	set	126
  9854  0082                     ltemp1	set	130
  9855  0086                     ltemp2	set	134
  9856  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         123
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     23      72
    BANK1            80      0      70
    BANK2            16      0       0

Pointer List with Targets:

    Lights	PTR struct Lights size(1) Largest target is 5
		 -> NULL(NULL[0]), Lights1(BANK0[5]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK0[4]), VarLED2(BANK0[4]), VarLED1(BANK0[4]), 


Critical Paths under _main in COMMON

    _getTemp_AD->_getAD
    _getPIR_AD->_getAD
    _getLoad_AD->_getAD
    _getCDS_AD->_getAD
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_getMain_All_Error_Status
    _setTemp_Main->_getMain_All_LightsStatus
    _setSYSC_Main->_getMain_All_Error_Status
    _Mcu_Initialization->_WDT_Set
    _Load_Main->___wmul
    _Load_Main->_getMain_Lights_Count
    _Load_Main->_setLoad_AH_AL_Restore
    _Load_Initialization->_setLoad_AH_AL_Restore
    _setLights_Main->_LightsPointSelect
    _setLights_Main->_getLights_Allow_Condition
    _getLights_Allow_Condition->_getLoad_OK
    _Lights_Control->_LightsPointSelect
    _setLights_Initialization->_LightsPointSelect
    _setLED_Initialization->_LedPointSelect
    _setLights_SwOn->_LightsPointSelect
    _getLights_Status->_LightsPointSelect
    _setLights_SwOff->_LightsPointSelect
    _setLights_Trigger->_LightsPointSelect
    _setLED->_LedPointSelect

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_PIR_Main
    _getPIR_AD->___awdiv
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_getMain_All_Error_Status
    _setSYSC_Main->_getMain_All_Error_Status
    _PIR_Main->_getMain_All_Error_Status
    _Load_Main->___lwdiv
    _Lights_Main->_Lights_Control
    _setLights_Main->_setLights
    _setLights->_setLED
    _Lights_Control->___awdiv
    _Lights_Initialization->_setLights_Initialization
    _LED_Main->_setPIRLED_Main
    _setPIRLED_Main->_setLED
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Exception_Main->_getMain_All_Error_Status
    _setLights_SwOn->_setLights_Trigger
    _setLights_SwOff->_setLights_Trigger

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4   25604
                                             18 BANK0      5     1      4
                 _CDS_Initialization
                           _CDS_Main
                  _DetectSYSC_Signal
                     _Exception_Main
                 _LED_Initialization
                           _LED_Main
              _Lights_Initialization
                        _Lights_Main
                _Load_Initialization
                          _Load_Main
                 _Mcu_Initialization
                 _PIR_Initialization
                           _PIR_Main
                _SYSC_Initialization
                          _SYSC_Main
                _Temp_Initialization
                          _Temp_Main
                           _WDT_Main
                          _getCDS_AD
                         _getLoad_AD
                          _getPIR_AD
                         _getTemp_AD
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           4     4      0     654
                                              0 BANK0      4     4      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getPIR_AD                                            9     8      1    2829
                                              8 BANK0      9     8      1
                            ___awdiv
                            ___lwdiv
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getLoad_AD                                           7     7      0    1053
                                              0 BANK0      7     7      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getCDS_AD                                            6     5      1     669
                                              0 BANK0      6     5      1
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                2     1      1     524
                                              4 COMMON     2     1      1
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              4 COMMON     1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0     347
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         6     6      0     347
                                              5 COMMON     1     1      0
                                              6 BANK0      5     5      0
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSC_Main                                            0     0      0     206
                       _setSYSC_Main
 ---------------------------------------------------------------------------------
 (2) _setSYSC_Main                                         0     0      0     206
           _getMain_All_Error_Status
 ---------------------------------------------------------------------------------
 (1) _SYSC_Initialization                                  0     0      0       0
             _setSYSC_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSYSC_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIR_Main                                            12    12      0    4060
                                              6 BANK0     12    12      0
                      _getCDS_Status
                   _getLights_Status
           _getMain_All_Error_Status
                             _setLED
                    _setLights_SwOff
                     _setLights_SwOn
 ---------------------------------------------------------------------------------
 (2) _getCDS_Status                                        1     1      0      23
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PIR_Initialization                                   1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Load_Main                                           10    10      0    1943
                                              7 BANK0     10    10      0
                            ___lwdiv
                             ___wmul
                    _getLight_LoadGO
               _getLight_Load_Status
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
               _getMain_Lights_Count
              _setLoad_AH_AL_Restore
 ---------------------------------------------------------------------------------
 (2) _getMain_Lights_Count                                 2     2      0      25
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _getLight_Load_Status                                 1     1      0      23
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getLight_LoadGO                                      1     1      0      23
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     290
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     857
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _Load_Initialization                                  0     0      0      90
              _setLoad_AH_AL_Restore
 ---------------------------------------------------------------------------------
 (2) _setLoad_AH_AL_Restore                                2     2      0      90
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lights_Main                                          0     0      0    4318
                     _Lights_Control
                         _getLoad_OK
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
                     _setLights_Main
 ---------------------------------------------------------------------------------
 (2) _setLights_Main                                       1     1      0    3023
                                              5 BANK0      1     1      0
                  _LightsPointSelect
          _getLights_Allow_Condition
                          _setLights
 ---------------------------------------------------------------------------------
 (3) _setLights                                            3     2      1    2760
                                              2 BANK0      3     2      1
                             _setLED
                     _setLights_Line
 ---------------------------------------------------------------------------------
 (4) _setLights_Line                                       1     1      0      44
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _getLights_Allow_Condition                            4     4      0     108
                                              5 COMMON     1     1      0
                                              0 BANK0      2     2      0
                         _getLoad_OK
 ---------------------------------------------------------------------------------
 (4) _getLoad_OK                                           1     1      0      34
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Lights_Control                                       3     3      0    1031
                                              8 BANK0      3     3      0
                  _LightsPointSelect
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     907
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lights_Initialization                                0     0      0      62
           _setLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLights_Initialization                             1     1      0      62
                                              0 BANK0      1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0    2416
                     _setPIRLED_Main
 ---------------------------------------------------------------------------------
 (2) _setPIRLED_Main                                       2     2      0    2416
                                              2 BANK0      2     2      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    2531
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    2531
                                              2 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Exception_Main                                       9     9      0    4426
                                              6 BANK0      9     9      0
                 _getAll_Lights_Line
                   _getLights_Status
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
                             _setLED
                    _setLights_SwOff
                     _setLights_SwOn
 ---------------------------------------------------------------------------------
 (2) _setLights_SwOn                                       1     1      0     621
                                              3 BANK0      1     1      0
                  _LightsPointSelect
                   _getLights_Status
                  _setLights_Trigger
 ---------------------------------------------------------------------------------
 (3) _getLights_Status                                     2     2      0      96
                                              0 BANK0      2     2      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _setLights_SwOff                                      1     1      0     494
                                              3 BANK0      1     1      0
                  _LightsPointSelect
                  _setLights_Trigger
 ---------------------------------------------------------------------------------
 (3) _setLights_Trigger                                    3     2      1     401
                                              0 BANK0      3     2      1
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _LightsPointSelect                                    2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _setLED                                               2     1      1    2376
                                              0 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (3) _LedPointSelect                                       2     2      0      93
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _getMain_All_LightsStatus                             1     1      0      24
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _getMain_All_Error_Status                             7     7      0     206
                                              4 COMMON     1     1      0
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _getAll_Lights_Line                                   1     1      0      24
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DetectSYSC_Signal                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CDS_Main                                             3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDS_Initialization
   _CDS_Main
   _DetectSYSC_Signal
   _Exception_Main
     _getAll_Lights_Line
     _getLights_Status
       _LightsPointSelect
     _getMain_All_Error_Status
     _getMain_All_LightsStatus
     _setLED
       _LedPointSelect
     _setLights_SwOff
       _LightsPointSelect
       _setLights_Trigger
         _LightsPointSelect
     _setLights_SwOn
       _LightsPointSelect
       _getLights_Status
         _LightsPointSelect
       _setLights_Trigger
         _LightsPointSelect
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setPIRLED_Main
       _setLED
         _LedPointSelect
   _Lights_Initialization
     _setLights_Initialization
       _LightsPointSelect
   _Lights_Main
     _Lights_Control
       _LightsPointSelect
       ___awdiv
     _getLoad_OK
     _getMain_All_Error_Status
     _getMain_All_LightsStatus
     _setLights_Main
       _LightsPointSelect
       _getLights_Allow_Condition
         _getLoad_OK
       _setLights
         _setLED
           _LedPointSelect
         _setLights_Line
   _Load_Initialization
     _setLoad_AH_AL_Restore
   _Load_Main
     ___lwdiv
     ___wmul
     _getLight_LoadGO
     _getLight_Load_Status
     _getMain_All_Error_Status
     _getMain_All_LightsStatus
     _getMain_Lights_Count
     _setLoad_AH_AL_Restore
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _PIR_Initialization
   _PIR_Main
     _getCDS_Status
     _getLights_Status
       _LightsPointSelect
     _getMain_All_Error_Status
     _setLED
       _LedPointSelect
     _setLights_SwOff
       _LightsPointSelect
       _setLights_Trigger
         _LightsPointSelect
     _setLights_SwOn
       _LightsPointSelect
       _getLights_Status
         _LightsPointSelect
       _setLights_Trigger
         _LightsPointSelect
   _SYSC_Initialization
     _setSYSC_Initialization
   _SYSC_Main
     _setSYSC_Main
       _getMain_All_Error_Status
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       _getMain_All_Error_Status
       _getMain_All_LightsStatus
   _WDT_Main
     _WDT_Clearing
   _getCDS_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getLoad_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getPIR_AD
     ___awdiv
     ___lwdiv
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getTemp_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_MainTimer

 _ISR (ROOT)
   _TMR1_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      98       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      48       5       90.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      46       7       87.5%
BITBANK2            10      0       0       8        0.0%
BANK2               10      0       0       9        0.0%
DATA                 0      0      98      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Thu Feb 26 14:24:22 2015

                        __CFG_CP$ON 0000                        _WDT_Clearing 0002  
         getMain_Lights_Count@count 0074                        ___awdiv@sign 0056  
                    setTemp_Main@AD 005B                                  fsr 0004  
               ___wmul@multiplicand 0053                                 l123 0D8D  
                               l268 0C25                                 l613 0DCD  
                               l269 0C2D                                 l614 0DEA  
                               l618 0DE6                                 l644 0606  
                               l741 0392                                 l725 040F  
                               l735 03E8                                 l727 0266  
                               l736 03E6                                 l728 0262  
                               l729 025C                                 l853 0726  
                               l935 0091                                 l927 020F  
                               l847 0780                                 l928 008B  
                               l937 00A4                                 l929 0059  
                               l858 077C                                 _GIE 005F  
                               _RB2 0032                                 _RA4 002C  
                               _LED 0076                                 _RB3 0033  
                               _RA5 002D                                 _RB4 0034  
                               _RB5 0035                                 _PS0 0408  
                               _PS1 0409                                 _PS2 040A  
                               _ISR 0BEC                                 _PSA 040B  
                               _WDT 0035                   ??_setLights_SwOff 0076  
                               _Cmd 0037              getAll_Lights_Line@line 0074  
                               fsr0 0004                                 indf 0000  
                   __end_of_ADC_Set 0AD0           __end_of_LightsPointSelect 0B04  
                  _getLights_Status 0B61             __size_of_Lights_Control 0083  
                              ?_ISR 0070                          Load_Main@i 0060  
                              l1304 0CB6                                l1146 0B24  
                    _Load_Main$2405 005B                                l1427 0D31  
                              l3300 0DE1                                l5002 048A  
                              l5012 04A3                                l5102 02C8  
                              l3290 0DC9                                l3282 0DBD  
                              l5210 0CB7                                l3602 0728  
                              l3610 073C                                l5042 0535  
                              l5034 0509                                l5018 04BF  
                              l3292 0DD1                                l4500 0FA0  
                              l5028 04ED                                l5134 0363  
                              l5128 0353                                l5080 0265  
                              l5064 0246                                l5320 016D  
                              l5312 013F                                l5304 012B  
                              l3608 0739                                l5048 0543  
                              l4514 0FB1                                l4522 0FB9  
                              l5410 05D8                                l5146 03AF  
                              l5138 0384                                l3634 076C  
                              l4532 0FCC                                l4540 0FD4  
                              l4508 0FA8                                l4612 0BE4  
                              l5156 03C8                                l5340 01D9  
                              l5324 019F                                l3660 0E43  
                              l3644 077B                                l3558 0AEF  
                              l5414 05EA                                l5406 05CC  
                              l4710 0F22                                l4702 0F0F  
                              l5326 01AE                                l5238 007B  
                              l4544 0FDC                                l4536 0FD0  
                              l5408 05A9                                l4624 06A2  
                              l5192 03FC                                l5096 028C  
                              l4720 0C95                                l4562 0FEE  
                              l4570 0FFA                                l5418 05F8  
                              l4706 0F1A                                l4642 06CD  
                              l4810 0D73                                l3666 0E5E  
                              l4660 0704                                l5292 00EA  
                              l5276 00C7                                l4724 0C9B  
                              l4566 0FF4                                l5382 0560  
                              l4750 07AB                                l4646 06E0  
                              l4638 06C6                                l5358 0209  
                              l5294 00EB                                l4718 0C92  
                              l5454 0F44                                l5288 00DE  
                              l5394 0596                                l4770 07E5  
                              l4754 07B1                                l4842 0D27  
                              l5466 0F67                                l5396 0573  
                              l5388 056F                                l4764 07C3  
                              l4684 0EE3                                l4828 0656  
                              l4940 0EAB                                l3980 0C60  
                              l5398 05A2                                l4766 07CF  
                              l4758 07B7                                l4694 0EEB  
                              l4678 0ED8                                l4870 0E1A  
                              l4862 0DF6                                l4768 07D7  
                              l4696 0EF9                                l4864 0E04  
                              l4936 0EA3                                l4928 0E8F  
                              l4786 0D20                                l4874 0E25  
                              l4956 0EC7                                l4990 0469  
                              l4898 0D98                                l4994 0474  
                              l4986 045E                                l4998 047F  
             _myMain_Initialization 0A8C                        __CFG_WDTE$ON 0000  
                              u3445 0E6A                                _PEIE 005E  
                              u5405 0EEE                                u5425 0EFA  
                              u5435 0F06                                u5275 0BA3  
                              u5445 0F10                                u6335 028A  
                              u5560 07CC                                u5720 0652  
                              u5705 063E                                u6345 02C6  
                              u6435 03A7                                u6355 031D  
                              u5580 07E2                                u5815 0DF9  
                              u5745 0675                                u5835 0E05  
                              u5845 0E11                                u5855 0E1B  
                              u5775 0D32                                u6815 0158  
                              u5945 0DA8                                u5785 0D39  
                              u6835 0191                                u6855 01BE  
                              u6785 0109                                u6970 059F  
                              u6795 0121                                u6990 05D5  
                              u6975 057C                                u6895 01F6  
                              u6995 05B2                                __CDS 002E  
           ?_setSYSC_Initialization 0070                                _WPUB 0095  
                              _SYSC 0020                                __PIR 00A0  
                              _Load 00CA                                _Temp 0039  
                              _main 0F29                                btemp 007E  
                   __end_of_WDT_Set 0B52                                ltemp 007E  
                              start 0011                                ttemp 007E  
                              wtemp 007E                    __end_of_CDS_Main 0DAE  
      __size_of_Temp_Initialization 0003                               ??_ISR 0070  
                 _setLights_Trigger 0C6A                       ??_Lights_Main 0076  
                     __CFG_PLLEN$ON 0000                    __end_of_LED_Main 0A90  
                ?_setLights_Trigger 0051                    ??_setPIRLED_Main 0053  
                             ?_main 0063                     __end_of___awdiv 0F29  
                             _ADRES 001E                     ___awdiv@divisor 0051  
                             _T1CON 0010                     __end_of___lwdiv 0E2C  
                             i1l447 0BF7                     ___awdiv@counter 0055  
                             _TMR1H 000F                               _TMR1L 000E  
                             _PORTA 0005                               _PORTB 0006  
                             _PORTC 0007                               _TRISA 0085  
                             _TRISB 0086                               _TRISC 0087  
           __end_of_Timeout_Counter 0BA9                               _Light 0077  
               ??_setLights_Trigger 0052                    __end_of_PIR_Main 022D  
                  __end_of_TMR1_ISR 0BBF                    __end_of_TMR1_Set 0B44  
                             _getAD 0C85      __end_of_setSYSC_Initialization 0AAB  
    getLights_Allow_Condition@allow 0051             __end_of_getLight_LoadGO 0AB6  
                  __end_of_WDT_Main 0B83                       _LightsControl 0079  
                    __CFG_BOREN$OFF 0000        __end_of_getMain_Lights_Count 0B0E  
                             pclath 000A                               ltemp0 007E  
                             ltemp1 0082                               ltemp2 0086  
                             ltemp3 0080      __size_of_setLED_Initialization 0012  
     __end_of_setLED_Initialization 0B95                               ttemp0 007E  
                             ttemp1 0081                               ttemp2 0084  
                             ttemp3 0087                               ttemp4 007F  
                             status 0003                               wtemp0 007E  
                             wtemp1 0080                               wtemp2 0082  
                             wtemp3 0084                               wtemp4 0086  
                             wtemp5 0088                               wtemp6 007F  
                 getPIR_AD@channel1 005E                   getPIR_AD@channel2 0059  
            ?_setLoad_AH_AL_Restore 0070                   setTemp_Main@error 0057  
                    _setLights_Main 0D4A                      _setLights_Line 0B28  
                   __initialization 0013                      _setLights_SwOn 0D00  
                __size_of_SYSC_Main 0003           __end_of_setLights_Trigger 0C85  
                      __end_of_main 0F8F                    __end_of_Fosc_Set 0AB0  
    getMain_All_LightsStatus@status 0074                      _Exception_Main 0545  
                         ??_ADC_Set 0074                              ??_main 0067  
             PIR_Main@Enable_Switch 005E                 __end_of_Lights_Main 0CBF  
        __size_of_LightsPointSelect 000A            _getMain_All_LightsStatus 0AF1  
                            ?_getAD 0074              ?_myMain_Initialization 0070  
                            _ADCON0 001F                              _ADCON1 009F  
                  ___awdiv@dividend 0053                           ??_WDT_Set 0074  
                            _ANSELA 0185                              _ANSELB 0186  
          _getMain_All_Error_Status 0DAE                              i1l3800 0BB9  
                            _FVRCON 009D              getLights_Status@lights 0051  
                            _PIRLED 002A                              _OSCCON 0090  
                __size_of_Load_Main 01EA                              _TMR1IE 0460  
                            _TMR1IF 0060                              _IO_Set 0C04  
              Exception_Main@i_2155 005D              getLights_Status@status 0052  
            __end_of_setLights_Main 0D7A              __end_of_setLights_Line 0B36  
            __end_of_setLights_SwOn 0D25        __size_of_SYSC_Initialization 0003  
        __end_of_Mcu_Initialization 0B61                              _Lights 0078  
                            _Timer1 0032         __size_of_CDS_Initialization 0004  
           ??_Lights_Initialization 0076              __end_of_Exception_Main 0607  
              Exception_Main@lights 0058                              ___wmul 0D25  
                         ??___awdiv 0074                           ??___lwdiv 0074  
              Exception_Main@status 005A                              _setLED 0F8F  
                            _myMain 0025                    ___awdiv@quotient 0057  
                __size_of_Temp_Main 0003                Load_Main@LightsCount 005F  
       __end_of_Load_Initialization 0A93     getLights_Allow_Condition@lights 0070  
                            saved_w 007E                    setLights_SwOn@sw 0054  
                  ?_Timeout_Counter 0070         getMain_Lights_Count@status1 0075  
                 __end_of_SYSC_Main 0A99                      _Lights_Control 0607  
           __size_of_LedPointSelect 001A                           ?_CDS_Main 0070  
                setTemp_Main@TempGO 0058                    ?_getLight_LoadGO 0070  
       __size_of_PIR_Initialization 000B             __end_of__initialization 0023  
                         ?_LED_Main 0070                       ?_my_MainTimer 0070  
                   ?_setLights_Main 0070                     ?_setLights_Line 0070  
                   ?_setLights_SwOn 0070                       ?_setSYSC_Main 0070  
                   _setLights_SwOff 0C36          __size_of_setLights_Trigger 001B  
                    __pcstackCOMMON 0070                  __size_of_getCDS_AD 0022  
                   ?_Exception_Main 0070            __end_of_getLights_Status 0B72  
                     __end_of_getAD 0CA1                           ?_PIR_Main 0070  
                         ?_TMR1_ISR 0070       __size_of_getLight_Load_Status 0006  
                         ?_TMR1_Set 0070              setLoad_AH_AL_Restore@i 0075  
                _LED_Initialization 0B0E                  __size_of_getPIR_AD 012E  
                       _Lights_Main 0CA1            _setLights_Initialization 0AC2  
              _getMain_Lights_Count 0B04                           ?_WDT_Main 0070  
                 __end_of_Load_Main 0417          __end_of_set_TimeoutCleared 0AC2  
               ?_LED_Initialization 0070              __end_of_Lights_Control 068A  
                           ??_getAD 0075                 _Temp_Initialization 0A99  
                        ??_CDS_Main 0051                          __pbssBANK0 0020  
                        __pbssBANK1 00A0                           ?_Fosc_Set 0070  
       __size_of_getAll_Lights_Line 0009                   __end_of_Temp_Main 0A9F  
                           ?_IO_Set 0070                     __CFG_VCAPEN$DIS 0000  
                    ??_my_MainTimer 0074                          ??_LED_Main 0076  
                    ??_setSYSC_Main 0075                ??_LED_Initialization 0076  
                 LedPointSelect@led 0075                          __pmaintext 0F29  
        ?_getLights_Allow_Condition 0070                ?_Temp_Initialization 0070  
              PIR_Main@LightsStatus 0062                             ?___wmul 0051  
                        ??_PIR_Main 0057                          ??_TMR1_ISR 0070  
                     ?_setTemp_Main 0070                  __size_of_setLights 007F  
                        _getLoad_AD 0E70                          ??_TMR1_Set 0074  
                        __pintentry 0004                          _getLoad_OK 0AD0  
                           ?_setLED 0051             setLights_Trigger@lights 0053  
             ?_getMain_Lights_Count 0070                             _ADC_Set 0AC9  
                        _getTemp_AD 0CBF                          ??_WDT_Main 0074  
            __size_of_getCDS_Status 0008                     ?_Lights_Control 0070  
                 __end_of_getCDS_AD 0D00                             _WDT_Set 0B44  
                     getPIR_AD@VRAD 0060                          ??_Fosc_Set 0074  
                 __end_of_getPIR_AD 0545             ??_setLoad_AH_AL_Restore 0074  
           __end_of_setLights_SwOff 0C50      _getLights_Allow_Condition$4248 0052  
                   __size_of_IO_Set 0018                          getCDS_AD@i 0054  
                        getCDS_AD@j 0055                             _Lights1 0040  
                           _VarLED1 0049                             _VarLED2 004D  
             ??_Temp_Initialization 0074                      ??_setTemp_Main 0075  
                           ___awdiv 0ECC                     __size_of___wmul 0025  
                           ___lwdiv 0DEC          ??_getMain_All_LightsStatus 0074  
                       PIR_Main@cds 005D                     __size_of_setLED 0071  
                           __ptext0 0000                             __ptext1 0C50  
                           __ptext2 0A8C                             __ptext3 0CBF  
                           __ptext4 0417                             __ptext5 0E70  
                           __ptext6 0CDE                             __ptext7 0C85  
                           __ptext8 0ABC                             __ptext9 0B95  
                        getPIR_AD@i 0061                          getPIR_AD@j 005D  
                      __size_of_ISR 0018          ??_getMain_All_Error_Status 0074  
               _SYSC_Initialization 0A93             ??_myMain_Initialization 0074  
          ??_setTemp_Initialization 0074                      _LedPointSelect 0C1C  
                   getTemp_AD@ADRES 0054                             clrloop0 0AE1  
                 __end_of_setLights 0709                end_of_initialization 0023  
                     _getCDS_Status 0AD8                ?_SYSC_Initialization 0070  
             _setLED_Initialization 0B83                   setLights_SwOff@sw 0054  
                       ?_getLoad_AD 0070      __size_of_Lights_Initialization 0004  
                       ?_getLoad_OK 0070              ??_getMain_Lights_Count 0074  
     __end_of_Lights_Initialization 0AA7                         ?_getTemp_AD 0070  
          setLED_Initialization@led 0053             setTemp_Main@DangerValue 005A  
                _Mcu_Initialization 0B52                __end_of_my_MainTimer 0C6A  
              __end_of_setSYSC_Main 0E70              __end_of_LedPointSelect 0C36  
          Load_Main@ErrorCountValue 005D                 setPIRLED_Main@count 0054  
               ?_Mcu_Initialization 0070             __size_of_setPIRLED_Main 0071  
                  ??_setLights_Main 0076                    ??_setLights_Line 0074  
              setLights_Main@lights 0056                    ??_setLights_SwOn 0076  
                         _SYSC_Main 0A96     getMain_All_Error_Status@command 0055  
                 __size_of_CDS_Main 0034                      ?_getCDS_Status 0070  
                  ?_setLights_SwOff 0070               ??_SYSC_Initialization 0074  
                  ??_Exception_Main 0057                      __end_of_IO_Set 0C1C  
        __end_of_CDS_Initialization 0AA3          ??_setLights_Initialization 0076  
                 __size_of_LED_Main 0003                ??_Mcu_Initialization 0075  
                     ?_WDT_Clearing 0070                   ?_getLights_Status 0070  
                      ?_Lights_Main 0070                      __end_of___wmul 0D4A  
                 __size_of_PIR_Main 0207                   __size_of_TMR1_ISR 0016  
                ??_getLights_Status 0076                   __size_of_TMR1_Set 000E  
                    __end_of_setLED 1000            ??_setSYSC_Initialization 0074  
                 __size_of_WDT_Main 0011                 start_initialization 0013  
                   ?_LedPointSelect 0070                setLights_Line@lights 0074  
                         _Load_Main 022D                         __end_of_ISR 0C04  
        __end_of_PIR_Initialization 0800        __size_of_Load_Initialization 0003  
      __end_of_getLight_Load_Status 0ABC     __size_of_setTemp_Initialization 0001  
               getCDS_Status@status 0074                __end_of_setTemp_Main 0784  
               __size_of_getLoad_AD 005C                 __size_of_getLoad_OK 0008  
                        ?_SYSC_Main 0070                  _set_TimeoutCleared 0ABC  
                          ??_IO_Set 0074            __size_of_Timeout_Counter 0014  
                         _VarErrLED 0045                 __size_of_getTemp_AD 001F  
            ?_setLED_Initialization 0070                   __size_of_Fosc_Set 0005  
          __size_of_getLight_LoadGO 0006                           _Temp_Main 0A9C  
                   setLights@lights 0055                 ?_set_TimeoutCleared 0070  
                    ??_WDT_Clearing 0074         ??_getLights_Allow_Condition 0075  
               Exception_Main@count 0059                     setLights@status 0053  
               Exception_Main@error 005F                            ??___wmul 0074  
  __end_of_getMain_All_LightsStatus 0AFA                            ??_setLED 0076  
                          ?_ADC_Set 0070                    ??_Lights_Control 0059  
  __end_of_getMain_All_Error_Status 0DEC                         __pbssCOMMON 0076  
           Load_Main@Load_RunStatus 005E                           ___latbits 0001  
                        ?_Load_Main 0070                       __pcstackBANK0 0051  
              ??_set_TimeoutCleared 0074          __end_of_getAll_Lights_Line 0AF1  
                          ?_WDT_Set 0070                     ??_getCDS_Status 0074  
                     PIR_Main@error 005C                           _getCDS_AD 0CDE  
    __size_of_setLoad_AH_AL_Restore 0016       __end_of_setLoad_AH_AL_Restore 0BD5  
                         _getPIR_AD 0417         __size_of_LED_Initialization 000C  
                   Exception_Main@i 005B                          ?_Temp_Main 0070  
                  ___lwdiv@dividend 0053                      Load_Main@error 005A  
            _setTemp_Initialization 0A8B                       _PIR_Main$2874 005F  
                          ?___awdiv 0051               __size_of_my_MainTimer 001A  
                          ?___lwdiv 0051               __size_of_setSYSC_Main 0044  
          setLights_Trigger@command 0051     __size_of_setSYSC_Initialization 0004  
         _getLights_Allow_Condition 0BD5      __size_of_myMain_Initialization 0001  
     __end_of_myMain_Initialization 0A8D                      __size_of_getAD 001C  
                  ___lwdiv@quotient 0056                      _setPIRLED_Main 0784  
                          _CDS_Main 0D7A                         ??_SYSC_Main 0075  
       __end_of_Temp_Initialization 0A9C                   interrupt_function 0004  
                        ?_getCDS_AD 0051                      ___wmul@product 0074  
                          _LED_Main 0A8D                           _setLights 068A  
                         clear_ram0 0AE0    __end_of_setLights_Initialization 0AC9  
                      _my_MainTimer 0C50                          ?_getPIR_AD 0059  
                      _setSYSC_Main 0E2C                            _GO_nDONE 00F9  
                 ??_Timeout_Counter 0074                PIR_Main@TriggerValue 0061  
                          _PIR_Main 0026                        ??_getLoad_AD 0051  
                          _TMR1_ISR 0BA9                        ??_getLoad_OK 0074  
              _getLight_Load_Status 0AB6                            _TMR1_Set 0B36  
                 ??_getLight_LoadGO 0074                        ??_getTemp_AD 0051  
                          _WDT_Main 0B72                    __size_of_ADC_Set 0007  
                 ___wmul@multiplier 0051                      getPIR_AD@VRAD1 005F  
              __size_of_Lights_Main 001E               __size_of_setTemp_Main 007B  
                       ??_Load_Main 0058              __end_of_setPIRLED_Main 07F5  
    getMain_All_Error_Status@status 0056                         getAD@adcon0 0075  
                       getAD@adcon1 0074                __end_of_WDT_Clearing 0004  
 __size_of_getMain_All_LightsStatus 0009           ?_getMain_All_LightsStatus 0070  
                          _Fosc_Set 0AAB                    __size_of_WDT_Set 000E  
                __end_of_getLoad_AD 0ECC                  __end_of_getLoad_OK 0AD8  
 __size_of_getMain_All_Error_Status 003E           ?_getMain_All_Error_Status 0070  
                        ?_setLights 0053                  __end_of_getTemp_AD 0CDE  
            _setSYSC_Initialization 0AA7                   getLoad_AD@channel 0053  
                 _DetectSYSC_Signal 0B1A                            _SwDetect 0038  
                       ??_Temp_Main 0076       _getMain_All_Error_Status$2142 0051  
     _getMain_All_Error_Status$2143 0053                 _Load_Initialization 0A90  
                ?_DetectSYSC_Signal 0070                           setLED@led 0052  
             ?_getLight_Load_Status 0070                        _setTemp_Main 0709  
                  __size_of___awdiv 005D      getLight_Load_Status@loadstatus 0074  
                  __size_of___lwdiv 0040                    ??_LedPointSelect 0074  
     __size_of_getMain_Lights_Count 000A                 ??_DetectSYSC_Signal 0074  
                _CDS_Initialization 0A9F               _Lights_Initialization 0AA3  
                 getTemp_AD@channel 0053                     ?_setPIRLED_Main 0070  
                   ___lwdiv@divisor 0051                ?_Load_Initialization 0070  
               ?_CDS_Initialization 0070                     ___lwdiv@counter 0055  
                          __ptext10 0B72                            __ptext11 0002  
                          __ptext20 0026                            __ptext12 0A9C  
                          __ptext21 0AD8                            __ptext13 0709  
                          __ptext30 0B04                            __ptext22 07F5  
                          __ptext14 0A99                            __ptext31 0AB6  
                          __ptext23 0B52                            __ptext15 0A8B  
                          __ptext40 0B28                            __ptext32 0AB0  
                          __ptext24 0B44                            __ptext16 0A96  
                          __ptext41 0BD5                            __ptext33 0D25  
                          __ptext25 0B36                            __ptext17 0E2C  
                          __ptext50 0B83                            __ptext42 0AD0  
                          __ptext34 0DEC                            __ptext26 0C04  
                          __ptext18 0A93                            __ptext51 0545  
                          __ptext43 0607                            __ptext35 0A90  
                          __ptext27 0AAB                            __ptext19 0AA7  
                          __ptext60 0DAE                            __ptext52 0D00  
                          __ptext44 0ECC                            __ptext36 0BBF  
                          __ptext28 0AC9                            __ptext61 0AE8  
                          __ptext53 0B61                            __ptext45 0AA3  
                          __ptext37 0CA1                            __ptext29 022D  
                          __ptext62 0B1A                            __ptext54 0C36  
                          __ptext46 0AC2                            __ptext38 0D4A  
                          __ptext63 0D7A                            __ptext55 0C6A  
                          __ptext47 0A8D                            __ptext39 068A  
                          __ptext64 0A9F                            __ptext56 0AFA  
                          __ptext48 0784                            __ptext65 0BEC  
                          __ptext57 0F8F                            __ptext49 0B0E  
                          __ptext66 0BA9                            __ptext58 0C1C  
                          __ptext59 0AF1           __size_of_getLights_Status 0011  
       __end_of_SYSC_Initialization 0A96             ??_setLED_Initialization 0076  
                       ??_getCDS_AD 0052                       setLED@command 0051  
         __end_of_DetectSYSC_Signal 0B28                       __size_of_main 0066  
                       ??_getPIR_AD 005A                  _PIR_Initialization 07F5  
              ??_CDS_Initialization 0074         __size_of_Mcu_Initialization 000F  
          __size_of_setLights_SwOff 001A                        getLoad_OK@ok 0074  
               ?_PIR_Initialization 0070                            main@argc 0063  
                          main@argv 0065   __size_of_setLights_Initialization 0007  
         ?_setLights_Initialization 0070               ??_Load_Initialization 0076  
              Lights_Control@lights 005B                ??_PIR_Initialization 0074  
                          intlevel1 0000  __size_of_getLights_Allow_Condition 0017  
             setTemp_Main@SafeValue 0059                         ??_setLights 0054  
           ?_setTemp_Initialization 0070             LightsPointSelect@lights 0075  
                _getAll_Lights_Line 0AE8                     getLoad_AD@ADRES 0056  
            ??_getLight_Load_Status 0074                         getLoad_AD@i 0057  
                       getLoad_AD@j 0055                         getLoad_AD@k 0054  
           __size_of_setLights_Main 0030             __size_of_setLights_Line 000E  
           __size_of_setLights_SwOn 0025                 ?_getAll_Lights_Line 0070  
             getLight_LoadGO@loadgo 0074              ?_Lights_Initialization 0070  
           __size_of_Exception_Main 00C2               __size_of_WDT_Clearing 0002  
    setLights_Initialization@lights 0051         __size_of_set_TimeoutCleared 0006  
                 _LightsPointSelect 0AFA                ??_getAll_Lights_Line 0074  
                __CFG_FOSC$INTOSCIO 0000                  ?_LightsPointSelect 0070  
                   _Timeout_Counter 0B95          __end_of_LED_Initialization 0B1A  
             __end_of_getCDS_Status 0AE0      __end_of_setTemp_Initialization 0A8C  
        __size_of_DetectSYSC_Signal 000E                     _getLight_LoadGO 0AB0  
                 getCDS_AD@channel1 0056                   getCDS_AD@channel2 0051  
 __end_of_getLights_Allow_Condition 0BEC                 ??_LightsPointSelect 0074  
             _setLoad_AH_AL_Restore 0BBF  
