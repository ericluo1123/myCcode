

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Thu Feb 26 16:13:45 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F723A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,inline,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,inline,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,inline,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,inline,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,inline,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,inline,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,delta=2
    61                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text50,local,class=CODE,merge=1,delta=2
    63                           	psect	text51,local,class=CODE,merge=1,delta=2
    64                           	psect	text52,local,class=CODE,merge=1,delta=2
    65                           	psect	text53,local,class=CODE,merge=1,delta=2
    66                           	psect	text54,local,class=CODE,merge=1,delta=2
    67                           	psect	text55,local,class=CODE,merge=1,delta=2
    68                           	psect	text56,local,class=CODE,merge=1,delta=2
    69                           	psect	text57,local,class=CODE,merge=1,delta=2
    70                           	psect	text58,local,class=CODE,merge=1,delta=2
    71                           	psect	text59,local,class=CODE,merge=1,delta=2
    72                           	psect	text60,local,class=CODE,merge=1,delta=2
    73                           	psect	text61,local,class=CODE,merge=1,delta=2
    74                           	psect	text62,local,class=CODE,merge=1,inline,delta=2
    75                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
    76                           	psect	text64,local,class=CODE,merge=1,inline,delta=2
    77                           	psect	text65,local,class=CODE,merge=1,delta=2
    78                           	psect	intentry,global,class=CODE,delta=2
    79                           	psect	text66,local,class=CODE,merge=1,inline,delta=2
    80                           	dabs	1,0x7E,2
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0089                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  008F                     	;# 
   124  0090                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0095                     	;# 
   131  0095                     	;# 
   132  0096                     	;# 
   133  0096                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009F                     	;# 
   139  0108                     	;# 
   140  0109                     	;# 
   141  010C                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  0185                     	;# 
   148  0186                     	;# 
   149  018C                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0089                     	;# 
   189  008C                     	;# 
   190  008D                     	;# 
   191  008E                     	;# 
   192  008F                     	;# 
   193  0090                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0096                     	;# 
   203  0098                     	;# 
   204  0099                     	;# 
   205  009C                     	;# 
   206  009D                     	;# 
   207  009F                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0186                     	;# 
   218  018C                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000D                     	;# 
   232  000E                     	;# 
   233  000E                     	;# 
   234  000F                     	;# 
   235  0010                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0014                     	;# 
   240  0015                     	;# 
   241  0015                     	;# 
   242  0016                     	;# 
   243  0017                     	;# 
   244  0018                     	;# 
   245  0019                     	;# 
   246  001A                     	;# 
   247  001B                     	;# 
   248  001B                     	;# 
   249  001C                     	;# 
   250  001D                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  0081                     	;# 
   254  0085                     	;# 
   255  0086                     	;# 
   256  0087                     	;# 
   257  0089                     	;# 
   258  008C                     	;# 
   259  008D                     	;# 
   260  008E                     	;# 
   261  008F                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0096                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009F                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0186                     	;# 
   287  018C                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0089                     	;# 
   327  008C                     	;# 
   328  008D                     	;# 
   329  008E                     	;# 
   330  008F                     	;# 
   331  0090                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0094                     	;# 
   337  0095                     	;# 
   338  0095                     	;# 
   339  0096                     	;# 
   340  0096                     	;# 
   341  0098                     	;# 
   342  0099                     	;# 
   343  009C                     	;# 
   344  009D                     	;# 
   345  009F                     	;# 
   346  0108                     	;# 
   347  0109                     	;# 
   348  010C                     	;# 
   349  010C                     	;# 
   350  010D                     	;# 
   351  010D                     	;# 
   352  010E                     	;# 
   353  010F                     	;# 
   354  0185                     	;# 
   355  0186                     	;# 
   356  018C                     	;# 
   357  0000                     	;# 
   358  0001                     	;# 
   359  0002                     	;# 
   360  0003                     	;# 
   361  0004                     	;# 
   362  0005                     	;# 
   363  0006                     	;# 
   364  0007                     	;# 
   365  0009                     	;# 
   366  000A                     	;# 
   367  000B                     	;# 
   368  000C                     	;# 
   369  000D                     	;# 
   370  000E                     	;# 
   371  000E                     	;# 
   372  000F                     	;# 
   373  0010                     	;# 
   374  0011                     	;# 
   375  0012                     	;# 
   376  0013                     	;# 
   377  0014                     	;# 
   378  0015                     	;# 
   379  0015                     	;# 
   380  0016                     	;# 
   381  0017                     	;# 
   382  0018                     	;# 
   383  0019                     	;# 
   384  001A                     	;# 
   385  001B                     	;# 
   386  001B                     	;# 
   387  001C                     	;# 
   388  001D                     	;# 
   389  001E                     	;# 
   390  001F                     	;# 
   391  0081                     	;# 
   392  0085                     	;# 
   393  0086                     	;# 
   394  0087                     	;# 
   395  0089                     	;# 
   396  008C                     	;# 
   397  008D                     	;# 
   398  008E                     	;# 
   399  008F                     	;# 
   400  0090                     	;# 
   401  0091                     	;# 
   402  0092                     	;# 
   403  0093                     	;# 
   404  0093                     	;# 
   405  0094                     	;# 
   406  0095                     	;# 
   407  0095                     	;# 
   408  0096                     	;# 
   409  0096                     	;# 
   410  0098                     	;# 
   411  0099                     	;# 
   412  009C                     	;# 
   413  009D                     	;# 
   414  009F                     	;# 
   415  0108                     	;# 
   416  0109                     	;# 
   417  010C                     	;# 
   418  010C                     	;# 
   419  010D                     	;# 
   420  010D                     	;# 
   421  010E                     	;# 
   422  010F                     	;# 
   423  0185                     	;# 
   424  0186                     	;# 
   425  018C                     	;# 
   426  0000                     	;# 
   427  0001                     	;# 
   428  0002                     	;# 
   429  0003                     	;# 
   430  0004                     	;# 
   431  0005                     	;# 
   432  0006                     	;# 
   433  0007                     	;# 
   434  0009                     	;# 
   435  000A                     	;# 
   436  000B                     	;# 
   437  000C                     	;# 
   438  000D                     	;# 
   439  000E                     	;# 
   440  000E                     	;# 
   441  000F                     	;# 
   442  0010                     	;# 
   443  0011                     	;# 
   444  0012                     	;# 
   445  0013                     	;# 
   446  0014                     	;# 
   447  0015                     	;# 
   448  0015                     	;# 
   449  0016                     	;# 
   450  0017                     	;# 
   451  0018                     	;# 
   452  0019                     	;# 
   453  001A                     	;# 
   454  001B                     	;# 
   455  001B                     	;# 
   456  001C                     	;# 
   457  001D                     	;# 
   458  001E                     	;# 
   459  001F                     	;# 
   460  0081                     	;# 
   461  0085                     	;# 
   462  0086                     	;# 
   463  0087                     	;# 
   464  0089                     	;# 
   465  008C                     	;# 
   466  008D                     	;# 
   467  008E                     	;# 
   468  008F                     	;# 
   469  0090                     	;# 
   470  0091                     	;# 
   471  0092                     	;# 
   472  0093                     	;# 
   473  0093                     	;# 
   474  0094                     	;# 
   475  0095                     	;# 
   476  0095                     	;# 
   477  0096                     	;# 
   478  0096                     	;# 
   479  0098                     	;# 
   480  0099                     	;# 
   481  009C                     	;# 
   482  009D                     	;# 
   483  009F                     	;# 
   484  0108                     	;# 
   485  0109                     	;# 
   486  010C                     	;# 
   487  010C                     	;# 
   488  010D                     	;# 
   489  010D                     	;# 
   490  010E                     	;# 
   491  010F                     	;# 
   492  0185                     	;# 
   493  0186                     	;# 
   494  018C                     	;# 
   495  0000                     	;# 
   496  0001                     	;# 
   497  0002                     	;# 
   498  0003                     	;# 
   499  0004                     	;# 
   500  0005                     	;# 
   501  0006                     	;# 
   502  0007                     	;# 
   503  0009                     	;# 
   504  000A                     	;# 
   505  000B                     	;# 
   506  000C                     	;# 
   507  000D                     	;# 
   508  000E                     	;# 
   509  000E                     	;# 
   510  000F                     	;# 
   511  0010                     	;# 
   512  0011                     	;# 
   513  0012                     	;# 
   514  0013                     	;# 
   515  0014                     	;# 
   516  0015                     	;# 
   517  0015                     	;# 
   518  0016                     	;# 
   519  0017                     	;# 
   520  0018                     	;# 
   521  0019                     	;# 
   522  001A                     	;# 
   523  001B                     	;# 
   524  001B                     	;# 
   525  001C                     	;# 
   526  001D                     	;# 
   527  001E                     	;# 
   528  001F                     	;# 
   529  0081                     	;# 
   530  0085                     	;# 
   531  0086                     	;# 
   532  0087                     	;# 
   533  0089                     	;# 
   534  008C                     	;# 
   535  008D                     	;# 
   536  008E                     	;# 
   537  008F                     	;# 
   538  0090                     	;# 
   539  0091                     	;# 
   540  0092                     	;# 
   541  0093                     	;# 
   542  0093                     	;# 
   543  0094                     	;# 
   544  0095                     	;# 
   545  0095                     	;# 
   546  0096                     	;# 
   547  0096                     	;# 
   548  0098                     	;# 
   549  0099                     	;# 
   550  009C                     	;# 
   551  009D                     	;# 
   552  009F                     	;# 
   553  0108                     	;# 
   554  0109                     	;# 
   555  010C                     	;# 
   556  010C                     	;# 
   557  010D                     	;# 
   558  010D                     	;# 
   559  010E                     	;# 
   560  010F                     	;# 
   561  0185                     	;# 
   562  0186                     	;# 
   563  018C                     	;# 
   564  0000                     	;# 
   565  0001                     	;# 
   566  0002                     	;# 
   567  0003                     	;# 
   568  0004                     	;# 
   569  0005                     	;# 
   570  0006                     	;# 
   571  0007                     	;# 
   572  0009                     	;# 
   573  000A                     	;# 
   574  000B                     	;# 
   575  000C                     	;# 
   576  000D                     	;# 
   577  000E                     	;# 
   578  000E                     	;# 
   579  000F                     	;# 
   580  0010                     	;# 
   581  0011                     	;# 
   582  0012                     	;# 
   583  0013                     	;# 
   584  0014                     	;# 
   585  0015                     	;# 
   586  0015                     	;# 
   587  0016                     	;# 
   588  0017                     	;# 
   589  0018                     	;# 
   590  0019                     	;# 
   591  001A                     	;# 
   592  001B                     	;# 
   593  001B                     	;# 
   594  001C                     	;# 
   595  001D                     	;# 
   596  001E                     	;# 
   597  001F                     	;# 
   598  0081                     	;# 
   599  0085                     	;# 
   600  0086                     	;# 
   601  0087                     	;# 
   602  0089                     	;# 
   603  008C                     	;# 
   604  008D                     	;# 
   605  008E                     	;# 
   606  008F                     	;# 
   607  0090                     	;# 
   608  0091                     	;# 
   609  0092                     	;# 
   610  0093                     	;# 
   611  0093                     	;# 
   612  0094                     	;# 
   613  0095                     	;# 
   614  0095                     	;# 
   615  0096                     	;# 
   616  0096                     	;# 
   617  0098                     	;# 
   618  0099                     	;# 
   619  009C                     	;# 
   620  009D                     	;# 
   621  009F                     	;# 
   622  0108                     	;# 
   623  0109                     	;# 
   624  010C                     	;# 
   625  010C                     	;# 
   626  010D                     	;# 
   627  010D                     	;# 
   628  010E                     	;# 
   629  010F                     	;# 
   630  0185                     	;# 
   631  0186                     	;# 
   632  018C                     	;# 
   633  0000                     	;# 
   634  0001                     	;# 
   635  0002                     	;# 
   636  0003                     	;# 
   637  0004                     	;# 
   638  0005                     	;# 
   639  0006                     	;# 
   640  0007                     	;# 
   641  0009                     	;# 
   642  000A                     	;# 
   643  000B                     	;# 
   644  000C                     	;# 
   645  000D                     	;# 
   646  000E                     	;# 
   647  000E                     	;# 
   648  000F                     	;# 
   649  0010                     	;# 
   650  0011                     	;# 
   651  0012                     	;# 
   652  0013                     	;# 
   653  0014                     	;# 
   654  0015                     	;# 
   655  0015                     	;# 
   656  0016                     	;# 
   657  0017                     	;# 
   658  0018                     	;# 
   659  0019                     	;# 
   660  001A                     	;# 
   661  001B                     	;# 
   662  001B                     	;# 
   663  001C                     	;# 
   664  001D                     	;# 
   665  001E                     	;# 
   666  001F                     	;# 
   667  0081                     	;# 
   668  0085                     	;# 
   669  0086                     	;# 
   670  0087                     	;# 
   671  0089                     	;# 
   672  008C                     	;# 
   673  008D                     	;# 
   674  008E                     	;# 
   675  008F                     	;# 
   676  0090                     	;# 
   677  0091                     	;# 
   678  0092                     	;# 
   679  0093                     	;# 
   680  0093                     	;# 
   681  0094                     	;# 
   682  0095                     	;# 
   683  0095                     	;# 
   684  0096                     	;# 
   685  0096                     	;# 
   686  0098                     	;# 
   687  0099                     	;# 
   688  009C                     	;# 
   689  009D                     	;# 
   690  009F                     	;# 
   691  0108                     	;# 
   692  0109                     	;# 
   693  010C                     	;# 
   694  010C                     	;# 
   695  010D                     	;# 
   696  010D                     	;# 
   697  010E                     	;# 
   698  010F                     	;# 
   699  0185                     	;# 
   700  0186                     	;# 
   701  018C                     	;# 
   702  0000                     	;# 
   703  0001                     	;# 
   704  0002                     	;# 
   705  0003                     	;# 
   706  0004                     	;# 
   707  0005                     	;# 
   708  0006                     	;# 
   709  0007                     	;# 
   710  0009                     	;# 
   711  000A                     	;# 
   712  000B                     	;# 
   713  000C                     	;# 
   714  000D                     	;# 
   715  000E                     	;# 
   716  000E                     	;# 
   717  000F                     	;# 
   718  0010                     	;# 
   719  0011                     	;# 
   720  0012                     	;# 
   721  0013                     	;# 
   722  0014                     	;# 
   723  0015                     	;# 
   724  0015                     	;# 
   725  0016                     	;# 
   726  0017                     	;# 
   727  0018                     	;# 
   728  0019                     	;# 
   729  001A                     	;# 
   730  001B                     	;# 
   731  001B                     	;# 
   732  001C                     	;# 
   733  001D                     	;# 
   734  001E                     	;# 
   735  001F                     	;# 
   736  0081                     	;# 
   737  0085                     	;# 
   738  0086                     	;# 
   739  0087                     	;# 
   740  0089                     	;# 
   741  008C                     	;# 
   742  008D                     	;# 
   743  008E                     	;# 
   744  008F                     	;# 
   745  0090                     	;# 
   746  0091                     	;# 
   747  0092                     	;# 
   748  0093                     	;# 
   749  0093                     	;# 
   750  0094                     	;# 
   751  0095                     	;# 
   752  0095                     	;# 
   753  0096                     	;# 
   754  0096                     	;# 
   755  0098                     	;# 
   756  0099                     	;# 
   757  009C                     	;# 
   758  009D                     	;# 
   759  009F                     	;# 
   760  0108                     	;# 
   761  0109                     	;# 
   762  010C                     	;# 
   763  010C                     	;# 
   764  010D                     	;# 
   765  010D                     	;# 
   766  010E                     	;# 
   767  010F                     	;# 
   768  0185                     	;# 
   769  0186                     	;# 
   770  018C                     	;# 
   771  0000                     	;# 
   772  0001                     	;# 
   773  0002                     	;# 
   774  0003                     	;# 
   775  0004                     	;# 
   776  0005                     	;# 
   777  0006                     	;# 
   778  0007                     	;# 
   779  0009                     	;# 
   780  000A                     	;# 
   781  000B                     	;# 
   782  000C                     	;# 
   783  000D                     	;# 
   784  000E                     	;# 
   785  000E                     	;# 
   786  000F                     	;# 
   787  0010                     	;# 
   788  0011                     	;# 
   789  0012                     	;# 
   790  0013                     	;# 
   791  0014                     	;# 
   792  0015                     	;# 
   793  0015                     	;# 
   794  0016                     	;# 
   795  0017                     	;# 
   796  0018                     	;# 
   797  0019                     	;# 
   798  001A                     	;# 
   799  001B                     	;# 
   800  001B                     	;# 
   801  001C                     	;# 
   802  001D                     	;# 
   803  001E                     	;# 
   804  001F                     	;# 
   805  0081                     	;# 
   806  0085                     	;# 
   807  0086                     	;# 
   808  0087                     	;# 
   809  0089                     	;# 
   810  008C                     	;# 
   811  008D                     	;# 
   812  008E                     	;# 
   813  008F                     	;# 
   814  0090                     	;# 
   815  0091                     	;# 
   816  0092                     	;# 
   817  0093                     	;# 
   818  0093                     	;# 
   819  0094                     	;# 
   820  0095                     	;# 
   821  0095                     	;# 
   822  0096                     	;# 
   823  0096                     	;# 
   824  0098                     	;# 
   825  0099                     	;# 
   826  009C                     	;# 
   827  009D                     	;# 
   828  009F                     	;# 
   829  0108                     	;# 
   830  0109                     	;# 
   831  010C                     	;# 
   832  010C                     	;# 
   833  010D                     	;# 
   834  010D                     	;# 
   835  010E                     	;# 
   836  010F                     	;# 
   837  0185                     	;# 
   838  0186                     	;# 
   839  018C                     	;# 
   840  0000                     	;# 
   841  0001                     	;# 
   842  0002                     	;# 
   843  0003                     	;# 
   844  0004                     	;# 
   845  0005                     	;# 
   846  0006                     	;# 
   847  0007                     	;# 
   848  0009                     	;# 
   849  000A                     	;# 
   850  000B                     	;# 
   851  000C                     	;# 
   852  000D                     	;# 
   853  000E                     	;# 
   854  000E                     	;# 
   855  000F                     	;# 
   856  0010                     	;# 
   857  0011                     	;# 
   858  0012                     	;# 
   859  0013                     	;# 
   860  0014                     	;# 
   861  0015                     	;# 
   862  0015                     	;# 
   863  0016                     	;# 
   864  0017                     	;# 
   865  0018                     	;# 
   866  0019                     	;# 
   867  001A                     	;# 
   868  001B                     	;# 
   869  001B                     	;# 
   870  001C                     	;# 
   871  001D                     	;# 
   872  001E                     	;# 
   873  001F                     	;# 
   874  0081                     	;# 
   875  0085                     	;# 
   876  0086                     	;# 
   877  0087                     	;# 
   878  0089                     	;# 
   879  008C                     	;# 
   880  008D                     	;# 
   881  008E                     	;# 
   882  008F                     	;# 
   883  0090                     	;# 
   884  0091                     	;# 
   885  0092                     	;# 
   886  0093                     	;# 
   887  0093                     	;# 
   888  0094                     	;# 
   889  0095                     	;# 
   890  0095                     	;# 
   891  0096                     	;# 
   892  0096                     	;# 
   893  0098                     	;# 
   894  0099                     	;# 
   895  009C                     	;# 
   896  009D                     	;# 
   897  009F                     	;# 
   898  0108                     	;# 
   899  0109                     	;# 
   900  010C                     	;# 
   901  010C                     	;# 
   902  010D                     	;# 
   903  010D                     	;# 
   904  010E                     	;# 
   905  010F                     	;# 
   906  0185                     	;# 
   907  0186                     	;# 
   908  018C                     	;# 
   909  0000                     	;# 
   910  0001                     	;# 
   911  0002                     	;# 
   912  0003                     	;# 
   913  0004                     	;# 
   914  0005                     	;# 
   915  0006                     	;# 
   916  0007                     	;# 
   917  0009                     	;# 
   918  000A                     	;# 
   919  000B                     	;# 
   920  000C                     	;# 
   921  000D                     	;# 
   922  000E                     	;# 
   923  000E                     	;# 
   924  000F                     	;# 
   925  0010                     	;# 
   926  0011                     	;# 
   927  0012                     	;# 
   928  0013                     	;# 
   929  0014                     	;# 
   930  0015                     	;# 
   931  0015                     	;# 
   932  0016                     	;# 
   933  0017                     	;# 
   934  0018                     	;# 
   935  0019                     	;# 
   936  001A                     	;# 
   937  001B                     	;# 
   938  001B                     	;# 
   939  001C                     	;# 
   940  001D                     	;# 
   941  001E                     	;# 
   942  001F                     	;# 
   943  0081                     	;# 
   944  0085                     	;# 
   945  0086                     	;# 
   946  0087                     	;# 
   947  0089                     	;# 
   948  008C                     	;# 
   949  008D                     	;# 
   950  008E                     	;# 
   951  008F                     	;# 
   952  0090                     	;# 
   953  0091                     	;# 
   954  0092                     	;# 
   955  0093                     	;# 
   956  0093                     	;# 
   957  0094                     	;# 
   958  0095                     	;# 
   959  0095                     	;# 
   960  0096                     	;# 
   961  0096                     	;# 
   962  0098                     	;# 
   963  0099                     	;# 
   964  009C                     	;# 
   965  009D                     	;# 
   966  009F                     	;# 
   967  0108                     	;# 
   968  0109                     	;# 
   969  010C                     	;# 
   970  010C                     	;# 
   971  010D                     	;# 
   972  010D                     	;# 
   973  010E                     	;# 
   974  010F                     	;# 
   975  0185                     	;# 
   976  0186                     	;# 
   977  018C                     	;# 
   978  0000                     	;# 
   979  0001                     	;# 
   980  0002                     	;# 
   981  0003                     	;# 
   982  0004                     	;# 
   983  0005                     	;# 
   984  0006                     	;# 
   985  0007                     	;# 
   986  0009                     	;# 
   987  000A                     	;# 
   988  000B                     	;# 
   989  000C                     	;# 
   990  000D                     	;# 
   991  000E                     	;# 
   992  000E                     	;# 
   993  000F                     	;# 
   994  0010                     	;# 
   995  0011                     	;# 
   996  0012                     	;# 
   997  0013                     	;# 
   998  0014                     	;# 
   999  0015                     	;# 
  1000  0015                     	;# 
  1001  0016                     	;# 
  1002  0017                     	;# 
  1003  0018                     	;# 
  1004  0019                     	;# 
  1005  001A                     	;# 
  1006  001B                     	;# 
  1007  001B                     	;# 
  1008  001C                     	;# 
  1009  001D                     	;# 
  1010  001E                     	;# 
  1011  001F                     	;# 
  1012  0081                     	;# 
  1013  0085                     	;# 
  1014  0086                     	;# 
  1015  0087                     	;# 
  1016  0089                     	;# 
  1017  008C                     	;# 
  1018  008D                     	;# 
  1019  008E                     	;# 
  1020  008F                     	;# 
  1021  0090                     	;# 
  1022  0091                     	;# 
  1023  0092                     	;# 
  1024  0093                     	;# 
  1025  0093                     	;# 
  1026  0094                     	;# 
  1027  0095                     	;# 
  1028  0095                     	;# 
  1029  0096                     	;# 
  1030  0096                     	;# 
  1031  0098                     	;# 
  1032  0099                     	;# 
  1033  009C                     	;# 
  1034  009D                     	;# 
  1035  009F                     	;# 
  1036  0108                     	;# 
  1037  0109                     	;# 
  1038  010C                     	;# 
  1039  010C                     	;# 
  1040  010D                     	;# 
  1041  010D                     	;# 
  1042  010E                     	;# 
  1043  010F                     	;# 
  1044  0185                     	;# 
  1045  0186                     	;# 
  1046  018C                     	;# 
  1047  0000                     	;# 
  1048  0001                     	;# 
  1049  0002                     	;# 
  1050  0003                     	;# 
  1051  0004                     	;# 
  1052  0005                     	;# 
  1053  0006                     	;# 
  1054  0007                     	;# 
  1055  0009                     	;# 
  1056  000A                     	;# 
  1057  000B                     	;# 
  1058  000C                     	;# 
  1059  000D                     	;# 
  1060  000E                     	;# 
  1061  000E                     	;# 
  1062  000F                     	;# 
  1063  0010                     	;# 
  1064  0011                     	;# 
  1065  0012                     	;# 
  1066  0013                     	;# 
  1067  0014                     	;# 
  1068  0015                     	;# 
  1069  0015                     	;# 
  1070  0016                     	;# 
  1071  0017                     	;# 
  1072  0018                     	;# 
  1073  0019                     	;# 
  1074  001A                     	;# 
  1075  001B                     	;# 
  1076  001B                     	;# 
  1077  001C                     	;# 
  1078  001D                     	;# 
  1079  001E                     	;# 
  1080  001F                     	;# 
  1081  0081                     	;# 
  1082  0085                     	;# 
  1083  0086                     	;# 
  1084  0087                     	;# 
  1085  0089                     	;# 
  1086  008C                     	;# 
  1087  008D                     	;# 
  1088  008E                     	;# 
  1089  008F                     	;# 
  1090  0090                     	;# 
  1091  0091                     	;# 
  1092  0092                     	;# 
  1093  0093                     	;# 
  1094  0093                     	;# 
  1095  0094                     	;# 
  1096  0095                     	;# 
  1097  0095                     	;# 
  1098  0096                     	;# 
  1099  0096                     	;# 
  1100  0098                     	;# 
  1101  0099                     	;# 
  1102  009C                     	;# 
  1103  009D                     	;# 
  1104  009F                     	;# 
  1105  0108                     	;# 
  1106  0109                     	;# 
  1107  010C                     	;# 
  1108  010C                     	;# 
  1109  010D                     	;# 
  1110  010D                     	;# 
  1111  010E                     	;# 
  1112  010F                     	;# 
  1113  0185                     	;# 
  1114  0186                     	;# 
  1115  018C                     	;# 
  1116  0000                     	;# 
  1117  0001                     	;# 
  1118  0002                     	;# 
  1119  0003                     	;# 
  1120  0004                     	;# 
  1121  0005                     	;# 
  1122  0006                     	;# 
  1123  0007                     	;# 
  1124  0009                     	;# 
  1125  000A                     	;# 
  1126  000B                     	;# 
  1127  000C                     	;# 
  1128  000D                     	;# 
  1129  000E                     	;# 
  1130  000E                     	;# 
  1131  000F                     	;# 
  1132  0010                     	;# 
  1133  0011                     	;# 
  1134  0012                     	;# 
  1135  0013                     	;# 
  1136  0014                     	;# 
  1137  0015                     	;# 
  1138  0015                     	;# 
  1139  0016                     	;# 
  1140  0017                     	;# 
  1141  0018                     	;# 
  1142  0019                     	;# 
  1143  001A                     	;# 
  1144  001B                     	;# 
  1145  001B                     	;# 
  1146  001C                     	;# 
  1147  001D                     	;# 
  1148  001E                     	;# 
  1149  001F                     	;# 
  1150  0081                     	;# 
  1151  0085                     	;# 
  1152  0086                     	;# 
  1153  0087                     	;# 
  1154  0089                     	;# 
  1155  008C                     	;# 
  1156  008D                     	;# 
  1157  008E                     	;# 
  1158  008F                     	;# 
  1159  0090                     	;# 
  1160  0091                     	;# 
  1161  0092                     	;# 
  1162  0093                     	;# 
  1163  0093                     	;# 
  1164  0094                     	;# 
  1165  0095                     	;# 
  1166  0095                     	;# 
  1167  0096                     	;# 
  1168  0096                     	;# 
  1169  0098                     	;# 
  1170  0099                     	;# 
  1171  009C                     	;# 
  1172  009D                     	;# 
  1173  009F                     	;# 
  1174  0108                     	;# 
  1175  0109                     	;# 
  1176  010C                     	;# 
  1177  010C                     	;# 
  1178  010D                     	;# 
  1179  010D                     	;# 
  1180  010E                     	;# 
  1181  010F                     	;# 
  1182  0185                     	;# 
  1183  0186                     	;# 
  1184  018C                     	;# 
  1185  0000                     	;# 
  1186  0001                     	;# 
  1187  0002                     	;# 
  1188  0003                     	;# 
  1189  0004                     	;# 
  1190  0005                     	;# 
  1191  0006                     	;# 
  1192  0007                     	;# 
  1193  0009                     	;# 
  1194  000A                     	;# 
  1195  000B                     	;# 
  1196  000C                     	;# 
  1197  000D                     	;# 
  1198  000E                     	;# 
  1199  000E                     	;# 
  1200  000F                     	;# 
  1201  0010                     	;# 
  1202  0011                     	;# 
  1203  0012                     	;# 
  1204  0013                     	;# 
  1205  0014                     	;# 
  1206  0015                     	;# 
  1207  0015                     	;# 
  1208  0016                     	;# 
  1209  0017                     	;# 
  1210  0018                     	;# 
  1211  0019                     	;# 
  1212  001A                     	;# 
  1213  001B                     	;# 
  1214  001B                     	;# 
  1215  001C                     	;# 
  1216  001D                     	;# 
  1217  001E                     	;# 
  1218  001F                     	;# 
  1219  0081                     	;# 
  1220  0085                     	;# 
  1221  0086                     	;# 
  1222  0087                     	;# 
  1223  0089                     	;# 
  1224  008C                     	;# 
  1225  008D                     	;# 
  1226  008E                     	;# 
  1227  008F                     	;# 
  1228  0090                     	;# 
  1229  0091                     	;# 
  1230  0092                     	;# 
  1231  0093                     	;# 
  1232  0093                     	;# 
  1233  0094                     	;# 
  1234  0095                     	;# 
  1235  0095                     	;# 
  1236  0096                     	;# 
  1237  0096                     	;# 
  1238  0098                     	;# 
  1239  0099                     	;# 
  1240  009C                     	;# 
  1241  009D                     	;# 
  1242  009F                     	;# 
  1243  0108                     	;# 
  1244  0109                     	;# 
  1245  010C                     	;# 
  1246  010C                     	;# 
  1247  010D                     	;# 
  1248  010D                     	;# 
  1249  010E                     	;# 
  1250  010F                     	;# 
  1251  0185                     	;# 
  1252  0186                     	;# 
  1253  018C                     	;# 
  1254  0000                     	;# 
  1255  0001                     	;# 
  1256  0002                     	;# 
  1257  0003                     	;# 
  1258  0004                     	;# 
  1259  0005                     	;# 
  1260  0006                     	;# 
  1261  0007                     	;# 
  1262  0009                     	;# 
  1263  000A                     	;# 
  1264  000B                     	;# 
  1265  000C                     	;# 
  1266  000D                     	;# 
  1267  000E                     	;# 
  1268  000E                     	;# 
  1269  000F                     	;# 
  1270  0010                     	;# 
  1271  0011                     	;# 
  1272  0012                     	;# 
  1273  0013                     	;# 
  1274  0014                     	;# 
  1275  0015                     	;# 
  1276  0015                     	;# 
  1277  0016                     	;# 
  1278  0017                     	;# 
  1279  0018                     	;# 
  1280  0019                     	;# 
  1281  001A                     	;# 
  1282  001B                     	;# 
  1283  001B                     	;# 
  1284  001C                     	;# 
  1285  001D                     	;# 
  1286  001E                     	;# 
  1287  001F                     	;# 
  1288  0081                     	;# 
  1289  0085                     	;# 
  1290  0086                     	;# 
  1291  0087                     	;# 
  1292  0089                     	;# 
  1293  008C                     	;# 
  1294  008D                     	;# 
  1295  008E                     	;# 
  1296  008F                     	;# 
  1297  0090                     	;# 
  1298  0091                     	;# 
  1299  0092                     	;# 
  1300  0093                     	;# 
  1301  0093                     	;# 
  1302  0094                     	;# 
  1303  0095                     	;# 
  1304  0095                     	;# 
  1305  0096                     	;# 
  1306  0096                     	;# 
  1307  0098                     	;# 
  1308  0099                     	;# 
  1309  009C                     	;# 
  1310  009D                     	;# 
  1311  009F                     	;# 
  1312  0108                     	;# 
  1313  0109                     	;# 
  1314  010C                     	;# 
  1315  010C                     	;# 
  1316  010D                     	;# 
  1317  010D                     	;# 
  1318  010E                     	;# 
  1319  010F                     	;# 
  1320  0185                     	;# 
  1321  0186                     	;# 
  1322  018C                     	;# 
  1323  001F                     _ADCON0	set	31
  1324  001E                     _ADRES	set	30
  1325  0005                     _PORTA	set	5
  1326  0006                     _PORTB	set	6
  1327  0007                     _PORTC	set	7
  1328  0010                     _T1CON	set	16
  1329  000F                     _TMR1H	set	15
  1330  000E                     _TMR1L	set	14
  1331  005F                     _GIE	set	95
  1332  00F9                     _GO_nDONE	set	249
  1333  005E                     _PEIE	set	94
  1334  002D                     _RA5	set	45
  1335  002E                     _RA6	set	46
  1336  002F                     _RA7	set	47
  1337  0032                     _RB2	set	50
  1338  0033                     _RB3	set	51
  1339  0060                     _TMR1IF	set	96
  1340  009F                     _ADCON1	set	159
  1341  009D                     _FVRCON	set	157
  1342  0090                     _OSCCON	set	144
  1343  0085                     _TRISA	set	133
  1344  0086                     _TRISB	set	134
  1345  0087                     _TRISC	set	135
  1346  0095                     _WPUB	set	149
  1347  0408                     _PS0	set	1032
  1348  0409                     _PS1	set	1033
  1349  040A                     _PS2	set	1034
  1350  040B                     _PSA	set	1035
  1351  0460                     _TMR1IE	set	1120
  1352  0185                     _ANSELA	set	389
  1353  0186                     _ANSELB	set	390
  1354                           
  1355                           	psect	text0
  1356  0000                     __ptext0:	
  1357                           ; #config settings
  1358                           
  1359                           
  1360                           ;psect for function _TMR1_ISR
  1361  0000                     
  1362                           	psect	cinit
  1363  0013                     start_initialization:	
  1364  0013                     __initialization:	
  1365                           
  1366                           ; Clear objects allocated to COMMON
  1367  0013  01F6               	clrf	__pbssCOMMON& (0+127)
  1368  0014  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1369  0015  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1370  0016  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  1371                           
  1372                           ; Clear objects allocated to BANK0
  1373  0017  1383               	bcf	3,7	;select IRP bank0
  1374  0018  3020               	movlw	low __pbssBANK0
  1375  0019  0084               	movwf	4
  1376  001A  304D               	movlw	low (__pbssBANK0+45)
  1377  001B  158A  22FE  118A   	fcall	clear_ram0
  1378                           
  1379                           ; Clear objects allocated to BANK1
  1380  001E  30A0               	movlw	low __pbssBANK1
  1381  001F  0084               	movwf	4
  1382  0020  30E6               	movlw	low (__pbssBANK1+70)
  1383  0021  158A  22FE         	fcall	clear_ram0
  1384  0023                     end_of_initialization:	
  1385                           ;End of C runtime variable initialization code
  1386                           
  1387  0023                     __end_of__initialization:	
  1388  0023  0183               	clrf	3
  1389  0024  158A  2F9A         	ljmp	_main	;jump to C main() function
  1390                           
  1391                           	psect	bssCOMMON
  1392  0076                     __pbssCOMMON:	
  1393  0076                     _LED:	
  1394  0076                     	ds	1
  1395  0077                     _Light:	
  1396  0077                     	ds	1
  1397  0078                     _Lights:	
  1398  0078                     	ds	1
  1399  0079                     _LightsControl:	
  1400  0079                     	ds	1
  1401                           
  1402                           	psect	bssBANK0
  1403  0020                     __pbssBANK0:	
  1404  0020                     _SYSC:	
  1405  0020                     	ds	5
  1406  0025                     _myMain:	
  1407  0025                     	ds	5
  1408  002A                     _PIRLED:	
  1409  002A                     	ds	4
  1410  002E                     __CDS:	
  1411  002E                     	ds	4
  1412  0032                     _Timer1:	
  1413  0032                     	ds	3
  1414  0035                     _WDT:	
  1415  0035                     	ds	2
  1416  0037                     _Cmd:	
  1417  0037                     	ds	1
  1418  0038                     _SwDetect:	
  1419  0038                     	ds	1
  1420  0039                     _Temp:	
  1421  0039                     	ds	7
  1422  0040                     _Lights1:	
  1423  0040                     	ds	5
  1424  0045                     _VarLED1:	
  1425  0045                     	ds	4
  1426  0049                     _VarLED2:	
  1427  0049                     	ds	4
  1428                           
  1429                           	psect	bssBANK1
  1430  00A0                     __pbssBANK1:	
  1431  00A0                     __PIR:	
  1432  00A0                     	ds	42
  1433  00CA                     _Load:	
  1434  00CA                     	ds	28
  1435                           
  1436                           	psect	clrtext
  1437  0AFE                     clear_ram0:	
  1438                           ;	Called with FSR containing the base address, and
  1439                           ;	W with the last address+1
  1440                           
  1441  0AFE  0064               	clrwdt	;clear the watchdog before getting into this loop
  1442  0AFF                     clrloop0:	
  1443  0AFF  0180               	clrf	0	;clear RAM location pointed to by FSR
  1444  0B00  0A84               	incf	4,f	;increment pointer
  1445  0B01  0604               	xorwf	4,w	;XOR with final address
  1446  0B02  1903               	btfsc	3,2	;have we reached the end yet?
  1447  0B03  3400               	retlw	0	;all done for this memory range, return
  1448  0B04  0604               	xorwf	4,w	;XOR again to restore value
  1449  0B05  2AFF               	goto	clrloop0	;do the next byte
  1450                           
  1451                           	psect	cstackCOMMON
  1452  0070                     __pcstackCOMMON:	
  1453  0070                     ?_setLED_Initialization:	
  1454  0070                     ?_setPIRLED_Main:	
  1455                           ; 0 bytes @ 0x0
  1456                           
  1457  0070                     ?_Fosc_Set:	
  1458                           ; 0 bytes @ 0x0
  1459                           
  1460  0070                     ?_IO_Set:	
  1461                           ; 0 bytes @ 0x0
  1462                           
  1463  0070                     ?_TMR1_Set:	
  1464                           ; 0 bytes @ 0x0
  1465                           
  1466  0070                     ?_ADC_Set:	
  1467                           ; 0 bytes @ 0x0
  1468                           
  1469  0070                     ?_WDT_Set:	
  1470                           ; 0 bytes @ 0x0
  1471                           
  1472  0070                     ?_TMR1_ISR:	
  1473                           ; 0 bytes @ 0x0
  1474                           
  1475  0070                     ??_TMR1_ISR:	
  1476                           ; 0 bytes @ 0x0
  1477                           
  1478  0070                     ?_Timeout_Counter:	
  1479                           ; 0 bytes @ 0x0
  1480                           
  1481  0070                     ?_set_TimeoutCleared:	
  1482                           ; 0 bytes @ 0x0
  1483                           
  1484  0070                     ?_WDT_Clearing:	
  1485                           ; 0 bytes @ 0x0
  1486                           
  1487  0070                     ?_myMain_Initialization:	
  1488                           ; 0 bytes @ 0x0
  1489                           
  1490  0070                     ?_SYSC_Initialization:	
  1491                           ; 0 bytes @ 0x0
  1492                           
  1493  0070                     ?_Temp_Initialization:	
  1494                           ; 0 bytes @ 0x0
  1495                           
  1496  0070                     ?_Load_Initialization:	
  1497                           ; 0 bytes @ 0x0
  1498                           
  1499  0070                     ?_Lights_Initialization:	
  1500                           ; 0 bytes @ 0x0
  1501                           
  1502  0070                     ?_PIR_Initialization:	
  1503                           ; 0 bytes @ 0x0
  1504                           
  1505  0070                     ?_DetectSYSC_Signal:	
  1506                           ; 0 bytes @ 0x0
  1507                           
  1508  0070                     ?_getLoad_AD:	
  1509                           ; 0 bytes @ 0x0
  1510                           
  1511  0070                     ?_getTemp_AD:	
  1512                           ; 0 bytes @ 0x0
  1513                           
  1514  0070                     ?_my_MainTimer:	
  1515                           ; 0 bytes @ 0x0
  1516                           
  1517  0070                     ?_SYSC_Main:	
  1518                           ; 0 bytes @ 0x0
  1519                           
  1520  0070                     ?_Temp_Main:	
  1521                           ; 0 bytes @ 0x0
  1522                           
  1523  0070                     ?_Load_Main:	
  1524                           ; 0 bytes @ 0x0
  1525                           
  1526  0070                     ?_Lights_Main:	
  1527                           ; 0 bytes @ 0x0
  1528                           
  1529  0070                     ?_PIR_Main:	
  1530                           ; 0 bytes @ 0x0
  1531                           
  1532  0070                     ?_Exception_Main:	
  1533                           ; 0 bytes @ 0x0
  1534                           
  1535  0070                     ?_setLights_SwOn:	
  1536                           ; 0 bytes @ 0x0
  1537                           
  1538  0070                     ?_setLights_SwOff:	
  1539                           ; 0 bytes @ 0x0
  1540                           
  1541  0070                     ?_setLoad_AH_AL_Restore:	
  1542                           ; 0 bytes @ 0x0
  1543                           
  1544  0070                     ?_setTemp_Initialization:	
  1545                           ; 0 bytes @ 0x0
  1546                           
  1547  0070                     ?_setTemp_Main:	
  1548                           ; 0 bytes @ 0x0
  1549                           
  1550  0070                     ?_setSYSC_Initialization:	
  1551                           ; 0 bytes @ 0x0
  1552                           
  1553  0070                     ?_setSYSC_Main:	
  1554                           ; 0 bytes @ 0x0
  1555                           
  1556  0070                     ?_setLights_Initialization:	
  1557                           ; 0 bytes @ 0x0
  1558                           
  1559  0070                     ?_setLights_Main:	
  1560                           ; 0 bytes @ 0x0
  1561                           
  1562  0070                     ?_Lights_Control:	
  1563                           ; 0 bytes @ 0x0
  1564                           
  1565  0070                     ?_setLights_Line:	
  1566                           ; 0 bytes @ 0x0
  1567                           
  1568  0070                     ?_CDS_Initialization:	
  1569                           ; 0 bytes @ 0x0
  1570                           
  1571  0070                     ?_CDS_Main:	
  1572                           ; 0 bytes @ 0x0
  1573                           
  1574  0070                     ?_LedPointSelect:	
  1575                           ; 0 bytes @ 0x0
  1576                           
  1577  0070                     ?_LED_Initialization:	
  1578                           ; 0 bytes @ 0x0
  1579                           
  1580  0070                     ?_LED_Main:	
  1581                           ; 0 bytes @ 0x0
  1582                           
  1583  0070                     ?_Mcu_Initialization:	
  1584                           ; 0 bytes @ 0x0
  1585                           
  1586  0070                     ?_ISR:	
  1587                           ; 0 bytes @ 0x0
  1588                           
  1589  0070                     ??_ISR:	
  1590                           ; 0 bytes @ 0x0
  1591                           
  1592  0070                     ?_WDT_Main:	
  1593                           ; 0 bytes @ 0x0
  1594                           
  1595  0070                     ?_LightsPointSelect:	
  1596                           ; 0 bytes @ 0x0
  1597                           
  1598  0070                     ?_getLights_Status:	
  1599                           ; 0 bytes @ 0x0
  1600                           
  1601  0070                     ?_getAll_Lights_Line:	
  1602                           ; 1 bytes @ 0x0
  1603                           
  1604  0070                     ?_getLight_LoadGO:	
  1605                           ; 1 bytes @ 0x0
  1606                           
  1607  0070                     ?_getLight_Load_Status:	
  1608                           ; 1 bytes @ 0x0
  1609                           
  1610  0070                     ?_getLights_Allow_Condition:	
  1611                           ; 1 bytes @ 0x0
  1612                           
  1613  0070                     ?_getCDS_Status:	
  1614                           ; 1 bytes @ 0x0
  1615                           
  1616  0070                     ?_getMain_All_LightsStatus:	
  1617                           ; 1 bytes @ 0x0
  1618                           
  1619  0070                     ?_getMain_All_Error_Status:	
  1620                           ; 1 bytes @ 0x0
  1621                           
  1622  0070                     ?_getMain_Lights_Count:	
  1623                           ; 1 bytes @ 0x0
  1624                           
  1625  0070                     ?_getLoad_OK:	
  1626                           ; 1 bytes @ 0x0
  1627                           
  1628  0070                     getLights_Allow_Condition@lights:	
  1629                           ; 1 bytes @ 0x0
  1630                           
  1631                           
  1632                           ; 1 bytes @ 0x0
  1633  0070                     	ds	4
  1634  0074                     ??_Fosc_Set:	
  1635  0074                     ??_IO_Set:	
  1636                           ; 0 bytes @ 0x4
  1637                           
  1638  0074                     ??_TMR1_Set:	
  1639                           ; 0 bytes @ 0x4
  1640                           
  1641  0074                     ??_ADC_Set:	
  1642                           ; 0 bytes @ 0x4
  1643                           
  1644  0074                     ??_WDT_Set:	
  1645                           ; 0 bytes @ 0x4
  1646                           
  1647  0074                     ??_Timeout_Counter:	
  1648                           ; 0 bytes @ 0x4
  1649                           
  1650  0074                     ??_set_TimeoutCleared:	
  1651                           ; 0 bytes @ 0x4
  1652                           
  1653  0074                     ??_WDT_Clearing:	
  1654                           ; 0 bytes @ 0x4
  1655                           
  1656  0074                     ??_myMain_Initialization:	
  1657                           ; 0 bytes @ 0x4
  1658                           
  1659  0074                     ??_SYSC_Initialization:	
  1660                           ; 0 bytes @ 0x4
  1661                           
  1662  0074                     ??_Temp_Initialization:	
  1663                           ; 0 bytes @ 0x4
  1664                           
  1665  0074                     ??_PIR_Initialization:	
  1666                           ; 0 bytes @ 0x4
  1667                           
  1668  0074                     ??_DetectSYSC_Signal:	
  1669                           ; 0 bytes @ 0x4
  1670                           
  1671  0074                     ??_my_MainTimer:	
  1672                           ; 0 bytes @ 0x4
  1673                           
  1674  0074                     ??_getAll_Lights_Line:	
  1675                           ; 0 bytes @ 0x4
  1676                           
  1677  0074                     ??_setLoad_AH_AL_Restore:	
  1678                           ; 0 bytes @ 0x4
  1679                           
  1680  0074                     ??_getLight_LoadGO:	
  1681                           ; 0 bytes @ 0x4
  1682                           
  1683  0074                     ??_getLight_Load_Status:	
  1684                           ; 0 bytes @ 0x4
  1685                           
  1686  0074                     ??_setTemp_Initialization:	
  1687                           ; 0 bytes @ 0x4
  1688                           
  1689  0074                     ??_setSYSC_Initialization:	
  1690                           ; 0 bytes @ 0x4
  1691                           
  1692  0074                     ??_setLights_Line:	
  1693                           ; 0 bytes @ 0x4
  1694                           
  1695  0074                     ??_CDS_Initialization:	
  1696                           ; 0 bytes @ 0x4
  1697                           
  1698  0074                     ??_getCDS_Status:	
  1699                           ; 0 bytes @ 0x4
  1700                           
  1701  0074                     ??_LedPointSelect:	
  1702                           ; 0 bytes @ 0x4
  1703                           
  1704  0074                     ??_WDT_Main:	
  1705                           ; 0 bytes @ 0x4
  1706                           
  1707  0074                     ??_getMain_All_LightsStatus:	
  1708                           ; 0 bytes @ 0x4
  1709                           
  1710  0074                     ??_getMain_All_Error_Status:	
  1711                           ; 0 bytes @ 0x4
  1712                           
  1713  0074                     ??_getMain_Lights_Count:	
  1714                           ; 0 bytes @ 0x4
  1715                           
  1716  0074                     ??_getLoad_OK:	
  1717                           ; 0 bytes @ 0x4
  1718                           
  1719  0074                     ??_LightsPointSelect:	
  1720                           ; 0 bytes @ 0x4
  1721                           
  1722  0074                     ??___wmul:	
  1723                           ; 0 bytes @ 0x4
  1724                           
  1725  0074                     ??___awdiv:	
  1726                           ; 0 bytes @ 0x4
  1727                           
  1728  0074                     ??___lwdiv:	
  1729                           ; 0 bytes @ 0x4
  1730                           
  1731  0074                     ?_getAD:	
  1732                           ; 0 bytes @ 0x4
  1733                           
  1734  0074                     getCDS_Status@status:	
  1735                           ; 1 bytes @ 0x4
  1736                           
  1737  0074                     getAD@adcon1:	
  1738                           ; 1 bytes @ 0x4
  1739                           
  1740  0074                     getMain_All_LightsStatus@status:	
  1741                           ; 1 bytes @ 0x4
  1742                           
  1743  0074                     getMain_Lights_Count@count:	
  1744                           ; 1 bytes @ 0x4
  1745                           
  1746  0074                     getLoad_OK@ok:	
  1747                           ; 1 bytes @ 0x4
  1748                           
  1749  0074                     setLights_Line@lights:	
  1750                           ; 1 bytes @ 0x4
  1751                           
  1752  0074                     getAll_Lights_Line@line:	
  1753                           ; 1 bytes @ 0x4
  1754                           
  1755  0074                     getLight_LoadGO@loadgo:	
  1756                           ; 1 bytes @ 0x4
  1757                           
  1758  0074                     getLight_Load_Status@loadstatus:	
  1759                           ; 1 bytes @ 0x4
  1760                           
  1761  0074                     ___wmul@product:	
  1762                           ; 1 bytes @ 0x4
  1763                           
  1764                           
  1765                           ; 2 bytes @ 0x4
  1766  0074                     	ds	1
  1767  0075                     ??_getAD:	
  1768  0075                     ??_SYSC_Main:	
  1769                           ; 0 bytes @ 0x5
  1770                           
  1771  0075                     ??_setTemp_Main:	
  1772                           ; 0 bytes @ 0x5
  1773                           
  1774  0075                     ??_setSYSC_Main:	
  1775                           ; 0 bytes @ 0x5
  1776                           
  1777  0075                     ??_getLights_Allow_Condition:	
  1778                           ; 0 bytes @ 0x5
  1779                           
  1780  0075                     ??_Mcu_Initialization:	
  1781                           ; 0 bytes @ 0x5
  1782                           
  1783  0075                     LedPointSelect@led:	
  1784                           ; 0 bytes @ 0x5
  1785                           
  1786  0075                     getAD@adcon0:	
  1787                           ; 1 bytes @ 0x5
  1788                           
  1789  0075                     getMain_Lights_Count@status1:	
  1790                           ; 1 bytes @ 0x5
  1791                           
  1792  0075                     setLoad_AH_AL_Restore@i:	
  1793                           ; 1 bytes @ 0x5
  1794                           
  1795  0075                     LightsPointSelect@lights:	
  1796                           ; 1 bytes @ 0x5
  1797                           
  1798                           
  1799                           ; 1 bytes @ 0x5
  1800  0075                     	ds	1
  1801  0076                     ??_setLED_Initialization:	
  1802  0076                     ??_setLED:	
  1803                           ; 0 bytes @ 0x6
  1804                           
  1805  0076                     ??_Load_Initialization:	
  1806                           ; 0 bytes @ 0x6
  1807                           
  1808  0076                     ??_Lights_Initialization:	
  1809                           ; 0 bytes @ 0x6
  1810                           
  1811  0076                     ??_Temp_Main:	
  1812                           ; 0 bytes @ 0x6
  1813                           
  1814  0076                     ??_Lights_Main:	
  1815                           ; 0 bytes @ 0x6
  1816                           
  1817  0076                     ??_getLights_Status:	
  1818                           ; 0 bytes @ 0x6
  1819                           
  1820  0076                     ??_setLights_SwOn:	
  1821                           ; 0 bytes @ 0x6
  1822                           
  1823  0076                     ??_setLights_SwOff:	
  1824                           ; 0 bytes @ 0x6
  1825                           
  1826  0076                     ??_setLights_Initialization:	
  1827                           ; 0 bytes @ 0x6
  1828                           
  1829  0076                     ??_setLights_Main:	
  1830                           ; 0 bytes @ 0x6
  1831                           
  1832  0076                     ??_LED_Initialization:	
  1833                           ; 0 bytes @ 0x6
  1834                           
  1835  0076                     ??_LED_Main:	
  1836                           ; 0 bytes @ 0x6
  1837                           
  1838                           
  1839                           	psect	cstackBANK0
  1840  004D                     __pcstackBANK0:	
  1841                           ; 0 bytes @ 0x6
  1842                           
  1843  004D                     ?_setLED:	
  1844  004D                     ??_getLoad_AD:	
  1845                           ; 0 bytes @ 0x0
  1846                           
  1847  004D                     ??_getTemp_AD:	
  1848                           ; 0 bytes @ 0x0
  1849                           
  1850  004D                     ??_CDS_Main:	
  1851                           ; 0 bytes @ 0x0
  1852                           
  1853  004D                     ?_getCDS_AD:	
  1854                           ; 0 bytes @ 0x0
  1855                           
  1856  004D                     ?_setLights_Trigger:	
  1857                           ; 0 bytes @ 0x0
  1858                           
  1859  004D                     ?___wmul:	
  1860                           ; 0 bytes @ 0x0
  1861                           
  1862  004D                     ?___awdiv:	
  1863                           ; 2 bytes @ 0x0
  1864                           
  1865  004D                     ?___lwdiv:	
  1866                           ; 2 bytes @ 0x0
  1867                           
  1868  004D                     getCDS_AD@channel2:	
  1869                           ; 2 bytes @ 0x0
  1870                           
  1871  004D                     setLED@command:	
  1872                           ; 1 bytes @ 0x0
  1873                           
  1874  004D                     setLights_Initialization@lights:	
  1875                           ; 1 bytes @ 0x0
  1876                           
  1877  004D                     getLights_Status@lights:	
  1878                           ; 1 bytes @ 0x0
  1879                           
  1880  004D                     setLights_Trigger@command:	
  1881                           ; 1 bytes @ 0x0
  1882                           
  1883  004D                     getLights_Allow_Condition@allow:	
  1884                           ; 1 bytes @ 0x0
  1885                           
  1886  004D                     _getMain_All_Error_Status$2127:	
  1887                           ; 1 bytes @ 0x0
  1888                           
  1889  004D                     ___wmul@multiplier:	
  1890                           ; 2 bytes @ 0x0
  1891                           
  1892  004D                     ___awdiv@divisor:	
  1893                           ; 2 bytes @ 0x0
  1894                           
  1895  004D                     ___lwdiv@divisor:	
  1896                           ; 2 bytes @ 0x0
  1897                           
  1898                           
  1899                           ; 2 bytes @ 0x0
  1900  004D                     	ds	1
  1901  004E                     ??_getCDS_AD:	
  1902  004E                     ??_setLights_Trigger:	
  1903                           ; 0 bytes @ 0x1
  1904                           
  1905  004E                     setLED@led:	
  1906                           ; 0 bytes @ 0x1
  1907                           
  1908  004E                     getLights_Status@status:	
  1909                           ; 1 bytes @ 0x1
  1910                           
  1911  004E                     _getLights_Allow_Condition$4224:	
  1912                           ; 1 bytes @ 0x1
  1913                           
  1914                           
  1915                           ; 1 bytes @ 0x1
  1916  004E                     	ds	1
  1917  004F                     ??_setPIRLED_Main:	
  1918  004F                     ?_setLights:	
  1919                           ; 0 bytes @ 0x2
  1920                           
  1921  004F                     setLED_Initialization@led:	
  1922                           ; 0 bytes @ 0x2
  1923                           
  1924  004F                     getLoad_AD@channel:	
  1925                           ; 1 bytes @ 0x2
  1926                           
  1927  004F                     getTemp_AD@channel:	
  1928                           ; 1 bytes @ 0x2
  1929                           
  1930  004F                     setLights@status:	
  1931                           ; 1 bytes @ 0x2
  1932                           
  1933  004F                     setLights_Trigger@lights:	
  1934                           ; 1 bytes @ 0x2
  1935                           
  1936  004F                     _getMain_All_Error_Status$2128:	
  1937                           ; 1 bytes @ 0x2
  1938                           
  1939  004F                     ___wmul@multiplicand:	
  1940                           ; 2 bytes @ 0x2
  1941                           
  1942  004F                     ___awdiv@dividend:	
  1943                           ; 2 bytes @ 0x2
  1944                           
  1945  004F                     ___lwdiv@dividend:	
  1946                           ; 2 bytes @ 0x2
  1947                           
  1948                           
  1949                           ; 2 bytes @ 0x2
  1950  004F                     	ds	1
  1951  0050                     ??_setLights:	
  1952  0050                     getCDS_AD@i:	
  1953                           ; 0 bytes @ 0x3
  1954                           
  1955  0050                     setPIRLED_Main@count:	
  1956                           ; 1 bytes @ 0x3
  1957                           
  1958  0050                     getLoad_AD@k:	
  1959                           ; 1 bytes @ 0x3
  1960                           
  1961  0050                     getTemp_AD@ADRES:	
  1962                           ; 1 bytes @ 0x3
  1963                           
  1964  0050                     setLights_SwOn@sw:	
  1965                           ; 1 bytes @ 0x3
  1966                           
  1967  0050                     setLights_SwOff@sw:	
  1968                           ; 1 bytes @ 0x3
  1969                           
  1970                           
  1971                           ; 1 bytes @ 0x3
  1972  0050                     	ds	1
  1973  0051                     getCDS_AD@j:	
  1974  0051                     getMain_All_Error_Status@command:	
  1975                           ; 1 bytes @ 0x4
  1976                           
  1977  0051                     getLoad_AD@j:	
  1978                           ; 1 bytes @ 0x4
  1979                           
  1980  0051                     setLights@lights:	
  1981                           ; 1 bytes @ 0x4
  1982                           
  1983  0051                     ___awdiv@counter:	
  1984                           ; 1 bytes @ 0x4
  1985                           
  1986  0051                     ___lwdiv@counter:	
  1987                           ; 1 bytes @ 0x4
  1988                           
  1989                           
  1990                           ; 1 bytes @ 0x4
  1991  0051                     	ds	1
  1992  0052                     getCDS_AD@channel1:	
  1993  0052                     getMain_All_Error_Status@status:	
  1994                           ; 1 bytes @ 0x5
  1995                           
  1996  0052                     getLoad_AD@ADRES:	
  1997                           ; 1 bytes @ 0x5
  1998                           
  1999  0052                     setLights_Main@lights:	
  2000                           ; 1 bytes @ 0x5
  2001                           
  2002  0052                     ___awdiv@sign:	
  2003                           ; 1 bytes @ 0x5
  2004                           
  2005  0052                     ___lwdiv@quotient:	
  2006                           ; 1 bytes @ 0x5
  2007                           
  2008                           
  2009                           ; 2 bytes @ 0x5
  2010  0052                     	ds	1
  2011  0053                     ??_PIR_Main:	
  2012  0053                     ??_Exception_Main:	
  2013                           ; 0 bytes @ 0x6
  2014                           
  2015  0053                     getLoad_AD@i:	
  2016                           ; 0 bytes @ 0x6
  2017                           
  2018  0053                     setTemp_Main@error:	
  2019                           ; 1 bytes @ 0x6
  2020                           
  2021  0053                     ___awdiv@quotient:	
  2022                           ; 1 bytes @ 0x6
  2023                           
  2024                           
  2025                           ; 2 bytes @ 0x6
  2026  0053                     	ds	1
  2027  0054                     ??_Load_Main:	
  2028  0054                     Exception_Main@lights:	
  2029                           ; 0 bytes @ 0x7
  2030                           
  2031  0054                     setTemp_Main@TempGO:	
  2032                           ; 1 bytes @ 0x7
  2033                           
  2034                           
  2035                           ; 1 bytes @ 0x7
  2036  0054                     	ds	1
  2037  0055                     ?_getPIR_AD:	
  2038  0055                     ??_Lights_Control:	
  2039                           ; 0 bytes @ 0x8
  2040                           
  2041  0055                     Exception_Main@count:	
  2042                           ; 0 bytes @ 0x8
  2043                           
  2044  0055                     setTemp_Main@SafeValue:	
  2045                           ; 1 bytes @ 0x8
  2046                           
  2047  0055                     getPIR_AD@channel2:	
  2048                           ; 1 bytes @ 0x8
  2049                           
  2050                           
  2051                           ; 1 bytes @ 0x8
  2052  0055                     	ds	1
  2053  0056                     ??_getPIR_AD:	
  2054  0056                     Exception_Main@status:	
  2055                           ; 0 bytes @ 0x9
  2056                           
  2057  0056                     Load_Main@error:	
  2058                           ; 1 bytes @ 0x9
  2059                           
  2060  0056                     setTemp_Main@DangerValue:	
  2061                           ; 1 bytes @ 0x9
  2062                           
  2063                           
  2064                           ; 1 bytes @ 0x9
  2065  0056                     	ds	1
  2066  0057                     setTemp_Main@AD:	
  2067  0057                     Lights_Control@lights:	
  2068                           ; 1 bytes @ 0xA
  2069                           
  2070  0057                     Exception_Main@i:	
  2071                           ; 1 bytes @ 0xA
  2072                           
  2073  0057                     _Load_Main$2389:	
  2074                           ; 2 bytes @ 0xA
  2075                           
  2076                           
  2077                           ; 2 bytes @ 0xA
  2078  0057                     	ds	1
  2079  0058                     PIR_Main@error:	
  2080                           
  2081                           ; 1 bytes @ 0xB
  2082  0058                     	ds	1
  2083  0059                     Load_Main@ErrorCountValue:	
  2084  0059                     PIR_Main@cds:	
  2085                           ; 1 bytes @ 0xC
  2086                           
  2087  0059                     getPIR_AD@j:	
  2088                           ; 1 bytes @ 0xC
  2089                           
  2090  0059                     Exception_Main@i_2140:	
  2091                           ; 1 bytes @ 0xC
  2092                           
  2093                           
  2094                           ; 2 bytes @ 0xC
  2095  0059                     	ds	1
  2096  005A                     Load_Main@Load_RunStatus:	
  2097  005A                     PIR_Main@Enable_Switch:	
  2098                           ; 1 bytes @ 0xD
  2099                           
  2100  005A                     getPIR_AD@channel1:	
  2101                           ; 1 bytes @ 0xD
  2102                           
  2103                           
  2104                           ; 1 bytes @ 0xD
  2105  005A                     	ds	1
  2106  005B                     Exception_Main@error:	
  2107  005B                     Load_Main@LightsCount:	
  2108                           ; 1 bytes @ 0xE
  2109                           
  2110  005B                     getPIR_AD@VRAD1:	
  2111                           ; 1 bytes @ 0xE
  2112                           
  2113  005B                     _PIR_Main$2856:	
  2114                           ; 1 bytes @ 0xE
  2115                           
  2116                           
  2117                           ; 2 bytes @ 0xE
  2118  005B                     	ds	1
  2119  005C                     getPIR_AD@VRAD:	
  2120  005C                     Load_Main@i:	
  2121                           ; 1 bytes @ 0xF
  2122                           
  2123                           
  2124                           ; 2 bytes @ 0xF
  2125  005C                     	ds	1
  2126  005D                     PIR_Main@TriggerValue:	
  2127  005D                     getPIR_AD@i:	
  2128                           ; 1 bytes @ 0x10
  2129                           
  2130                           
  2131                           ; 1 bytes @ 0x10
  2132  005D                     	ds	1
  2133  005E                     PIR_Main@LightsStatus:	
  2134                           
  2135                           ; 1 bytes @ 0x11
  2136  005E                     	ds	1
  2137  005F                     ?_main:	
  2138  005F                     main@argc:	
  2139                           ; 2 bytes @ 0x12
  2140                           
  2141                           
  2142                           ; 2 bytes @ 0x12
  2143  005F                     	ds	2
  2144  0061                     main@argv:	
  2145                           
  2146                           ; 2 bytes @ 0x14
  2147  0061                     	ds	2
  2148  0063                     ??_main:	
  2149                           
  2150                           ; 0 bytes @ 0x16
  2151  0063                     	ds	1
  2152                           
  2153                           	psect	maintext
  2154  0F9A                     __pmaintext:	
  2155 ;;
  2156 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2157 ;;
  2158 ;; *************** function _main *****************
  2159 ;; Defined at:
  2160 ;;		line 7 in file "../src/Main_B1.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;  argc            2   18[BANK0 ] int 
  2163 ;;  argv            2   20[BANK0 ] PTR PTR unsigned char 
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;		None
  2166 ;; Return value:  Size  Location     Type
  2167 ;;                  2   18[BANK0 ] int 
  2168 ;; Registers used:
  2169 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2170 ;; Tracked objects:
  2171 ;;		On entry : 17F/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2175 ;;      Params:         0       4       0       0
  2176 ;;      Locals:         0       0       0       0
  2177 ;;      Temps:          0       1       0       0
  2178 ;;      Totals:         0       5       0       0
  2179 ;;Total ram usage:        5 bytes
  2180 ;; Hardware stack levels required when called:    7
  2181 ;; This function calls:
  2182 ;;		_CDS_Initialization
  2183 ;;		_CDS_Main
  2184 ;;		_DetectSYSC_Signal
  2185 ;;		_Exception_Main
  2186 ;;		_LED_Initialization
  2187 ;;		_LED_Main
  2188 ;;		_Lights_Initialization
  2189 ;;		_Lights_Main
  2190 ;;		_Load_Initialization
  2191 ;;		_Load_Main
  2192 ;;		_Mcu_Initialization
  2193 ;;		_PIR_Initialization
  2194 ;;		_PIR_Main
  2195 ;;		_SYSC_Initialization
  2196 ;;		_SYSC_Main
  2197 ;;		_Temp_Initialization
  2198 ;;		_Temp_Main
  2199 ;;		_WDT_Main
  2200 ;;		_getCDS_AD
  2201 ;;		_getLoad_AD
  2202 ;;		_getPIR_AD
  2203 ;;		_getTemp_AD
  2204 ;;		_myMain_Initialization
  2205 ;;		_my_MainTimer
  2206 ;; This function is called by:
  2207 ;;		Startup code after reset
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           
  2212                           ;psect for function _main
  2213  0F9A                     _main:	
  2214                           
  2215                           ;Main_B1.c: 8: myMain_Initialization();
  2216                           
  2217                           ;incstack = 0
  2218                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2219  0F9A  158A  22A2  158A   	fcall	_myMain_Initialization
  2220                           
  2221                           ;Main_B1.c: 9: Mcu_Initialization();
  2222  0F9D  158A  2364  158A   	fcall	_Mcu_Initialization
  2223                           
  2224                           ;Main_B1.c: 10: ;;
  2225                           ;Main_B1.c: 11: LED_Initialization();
  2226  0FA0  158A  22E6  158A   	fcall	_LED_Initialization
  2227                           
  2228                           ;Main_B1.c: 12: ;;
  2229                           ;Main_B1.c: 14: SYSC_Initialization();
  2230  0FA3  158A  22A9  158A   	fcall	_SYSC_Initialization
  2231                           
  2232                           ;Main_B1.c: 15: Temp_Initialization();
  2233  0FA6  158A  22AF  158A   	fcall	_Temp_Initialization
  2234                           
  2235                           ;Main_B1.c: 16: Load_Initialization();
  2236  0FA9  158A  22A6  158A   	fcall	_Load_Initialization
  2237                           
  2238                           ;Main_B1.c: 17: ;;
  2239                           ;Main_B1.c: 18: ;;
  2240                           ;Main_B1.c: 20: ;;
  2241                           ;Main_B1.c: 21: Lights_Initialization();
  2242  0FAC  158A  22B9  158A   	fcall	_Lights_Initialization
  2243                           
  2244                           ;Main_B1.c: 22: CDS_Initialization();
  2245  0FAF  158A  22B5  158A   	fcall	_CDS_Initialization
  2246                           
  2247                           ;Main_B1.c: 23: PIR_Initialization();
  2248  0FB2  118A  27F5  158A   	fcall	_PIR_Initialization
  2249  0FB5                     l5339:	
  2250                           ;Main_B1.c: 24: ;;
  2251                           ;Main_B1.c: 25: ;;
  2252                           ;Main_B1.c: 26: ;;
  2253                           ;Main_B1.c: 27: ;;
  2254                           ;Main_B1.c: 28: ;;
  2255                           ;Main_B1.c: 30: while (1) {
  2256                           
  2257                           
  2258                           ;Main_B1.c: 32: if (myMain.PowerON == 1) {
  2259  0FB5  1283               	bcf	3,5	;RP0=0, select bank0
  2260  0FB6  1303               	bcf	3,6	;RP1=0, select bank0
  2261  0FB7  1C25               	btfss	_myMain,0
  2262  0FB8  2FD8               	goto	l5351
  2263                           
  2264                           ;Main_B1.c: 34: DetectSYSC_Signal();
  2265  0FB9  158A  232C  158A   	fcall	_DetectSYSC_Signal
  2266                           
  2267                           ;Main_B1.c: 38: getLoad_AD(0x01);
  2268  0FBC  3001               	movlw	1
  2269  0FBD  158A  267C  158A   	fcall	_getLoad_AD
  2270                           
  2271                           ;Main_B1.c: 42: getTemp_AD(0x11);
  2272  0FC0  3011               	movlw	17
  2273  0FC1  158A  24CB  158A   	fcall	_getTemp_AD
  2274                           
  2275                           ;Main_B1.c: 50: getCDS_AD(0x29, 0x05);
  2276  0FC4  3005               	movlw	5
  2277  0FC5  1283               	bcf	3,5	;RP0=0, select bank0
  2278  0FC6  1303               	bcf	3,6	;RP1=0, select bank0
  2279  0FC7  00E3               	movwf	??_main
  2280  0FC8  0863               	movf	??_main,w
  2281  0FC9  00CD               	movwf	getCDS_AD@channel2
  2282  0FCA  3029               	movlw	41
  2283  0FCB  158A  24EA  158A   	fcall	_getCDS_AD
  2284                           
  2285                           ;Main_B1.c: 54: getPIR_AD(0x2d, 0x09);
  2286  0FCE  3009               	movlw	9
  2287  0FCF  1283               	bcf	3,5	;RP0=0, select bank0
  2288  0FD0  1303               	bcf	3,6	;RP1=0, select bank0
  2289  0FD1  00E3               	movwf	??_main
  2290  0FD2  0863               	movf	??_main,w
  2291  0FD3  00D5               	movwf	getPIR_AD@channel2
  2292  0FD4  302D               	movlw	45
  2293  0FD5  118A  2417  158A   	fcall	_getPIR_AD
  2294  0FD8                     l5351:	
  2295                           
  2296                           ;Main_B1.c: 57: }
  2297                           ;Main_B1.c: 93: if (Timer1.Timeout == 1) {
  2298  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  2299  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  2300  0FDA  1C32               	btfss	_Timer1,0
  2301  0FDB  2FB5               	goto	l5339
  2302                           
  2303                           ;Main_B1.c: 94: Timer1.Timeout = 0;
  2304  0FDC  1032               	bcf	_Timer1,0
  2305                           
  2306                           ;Main_B1.c: 96: my_MainTimer();
  2307  0FDD  158A  245C  158A   	fcall	_my_MainTimer
  2308                           
  2309                           ;Main_B1.c: 97: WDT_Main();
  2310  0FE0  158A  2384  158A   	fcall	_WDT_Main
  2311                           
  2312                           ;Main_B1.c: 98: ;;
  2313                           ;Main_B1.c: 99: ;;
  2314                           ;Main_B1.c: 100: if (myMain.PowerON == 1) {
  2315  0FE3  1283               	bcf	3,5	;RP0=0, select bank0
  2316  0FE4  1303               	bcf	3,6	;RP1=0, select bank0
  2317  0FE5  1C25               	btfss	_myMain,0
  2318  0FE6  2FB5               	goto	l5339
  2319                           
  2320                           ;Main_B1.c: 101: ;;
  2321                           ;Main_B1.c: 103: LED_Main();
  2322  0FE7  158A  22A3  158A   	fcall	_LED_Main
  2323                           
  2324                           ;Main_B1.c: 104: ;;
  2325                           ;Main_B1.c: 106: SYSC_Main();
  2326  0FEA  158A  22AC  158A   	fcall	_SYSC_Main
  2327                           
  2328                           ;Main_B1.c: 107: Temp_Main();
  2329  0FED  158A  22B2  158A   	fcall	_Temp_Main
  2330                           
  2331                           ;Main_B1.c: 108: Load_Main();
  2332  0FF0  118A  222D  158A   	fcall	_Load_Main
  2333                           
  2334                           ;Main_B1.c: 109: ;;
  2335                           ;Main_B1.c: 111: Lights_Main();
  2336  0FF3  158A  24AD  158A   	fcall	_Lights_Main
  2337                           
  2338                           ;Main_B1.c: 112: ;;
  2339                           ;Main_B1.c: 113: ;;
  2340                           ;Main_B1.c: 114: CDS_Main();
  2341  0FF6  158A  2586  158A   	fcall	_CDS_Main
  2342                           
  2343                           ;Main_B1.c: 115: PIR_Main();
  2344  0FF9  118A  2026  158A   	fcall	_PIR_Main
  2345                           
  2346                           ;Main_B1.c: 117: ;;
  2347                           ;Main_B1.c: 118: ;;
  2348                           ;Main_B1.c: 119: ;;
  2349                           ;Main_B1.c: 120: ;;
  2350                           ;Main_B1.c: 121: Exception_Main();
  2351  0FFC  118A  2545  158A   	fcall	_Exception_Main
  2352  0FFF  2FB5               	goto	l5339
  2353  1000                     __end_of_main:	
  2354                           ;Main_B1.c: 128: }
  2355                           ;Main_B1.c: 129: }
  2356                           ;Main_B1.c: 163: }
  2357                           ;Main_B1.c: 164: return (0);
  2358                           ;	Return value of _main is never used
  2359                           
  2360                           
  2361                           	psect	text1
  2362  0C5C                     __ptext1:	
  2363 ;; *************** function _my_MainTimer *****************
  2364 ;; Defined at:
  2365 ;;		line 185 in file "../src/Main_B1.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;		None
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;		None
  2370 ;; Return value:  Size  Location     Type
  2371 ;;		None               void
  2372 ;; Registers used:
  2373 ;;		wreg, status,2, status,0
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2379 ;;      Params:         0       0       0       0
  2380 ;;      Locals:         0       0       0       0
  2381 ;;      Temps:          1       0       0       0
  2382 ;;      Totals:         1       0       0       0
  2383 ;;Total ram usage:        1 bytes
  2384 ;; Hardware stack levels used:    1
  2385 ;; Hardware stack levels required when called:    2
  2386 ;; This function calls:
  2387 ;;		Nothing
  2388 ;; This function is called by:
  2389 ;;		_main
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392                           
  2393                           
  2394                           ;psect for function _my_MainTimer
  2395  0C5C                     _my_MainTimer:	
  2396                           
  2397                           ;Main_B1.c: 187: if (myMain.PowerON == 0) {
  2398                           
  2399                           ;incstack = 0
  2400                           ; Regs used in _my_MainTimer: [wreg+status,2+status,0]
  2401  0C5C  1283               	bcf	3,5	;RP0=0, select bank0
  2402  0C5D  1303               	bcf	3,6	;RP1=0, select bank0
  2403  0C5E  1825               	btfsc	_myMain,0
  2404  0C5F  2C6C               	goto	l3883
  2405                           
  2406                           ;Main_B1.c: 188: myMain.PowerCount++;
  2407  0C60  3001               	movlw	1
  2408  0C61  00F4               	movwf	??_my_MainTimer
  2409  0C62  0874               	movf	??_my_MainTimer,w
  2410  0C63  07A6               	addwf	_myMain+1,f
  2411                           
  2412                           ;Main_B1.c: 189: if (myMain.PowerCount == (1500 / 20)) {
  2413  0C64  0826               	movf	_myMain+1,w
  2414  0C65  3A4B               	xorlw	75
  2415  0C66  1D03               	skipz
  2416  0C67  0008               	return
  2417                           
  2418                           ;Main_B1.c: 190: myMain.PowerCount = 0;
  2419  0C68  01A6               	clrf	_myMain+1
  2420                           
  2421                           ;Main_B1.c: 191: myMain.PowerON = 1;
  2422  0C69  1425               	bsf	_myMain,0
  2423                           
  2424                           ;Main_B1.c: 196: ;;
  2425                           ;Main_B1.c: 197: myMain.SelfTest = 1;
  2426  0C6A  1625               	bsf	_myMain,4
  2427                           
  2428                           ;Main_B1.c: 206: }
  2429                           ;Main_B1.c: 207: } else {
  2430  0C6B  0008               	return
  2431  0C6C                     l3883:	
  2432                           
  2433                           ;Main_B1.c: 208: myMain.PowerCount++;
  2434  0C6C  3001               	movlw	1
  2435  0C6D  00F4               	movwf	??_my_MainTimer
  2436  0C6E  0874               	movf	??_my_MainTimer,w
  2437  0C6F  07A6               	addwf	_myMain+1,f
  2438                           
  2439                           ;Main_B1.c: 209: if (myMain.PowerCount == (1000 / 20)) {
  2440  0C70  0826               	movf	_myMain+1,w
  2441  0C71  3A32               	xorlw	50
  2442  0C72  1D03               	skipz
  2443  0C73  0008               	return
  2444                           
  2445                           ;Main_B1.c: 210: myMain.PowerCount = 0;
  2446  0C74  01A6               	clrf	_myMain+1
  2447  0C75  0008               	return
  2448  0C76                     __end_of_my_MainTimer:	
  2449                           
  2450                           	psect	text2
  2451  0AA2                     __ptext2:	
  2452 ;; *************** function _myMain_Initialization *****************
  2453 ;; Defined at:
  2454 ;;		line 170 in file "../src/Main_B1.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;		None
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;		None
  2459 ;; Return value:  Size  Location     Type
  2460 ;;		None               void
  2461 ;; Registers used:
  2462 ;;		None
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2468 ;;      Params:         0       0       0       0
  2469 ;;      Locals:         0       0       0       0
  2470 ;;      Temps:          0       0       0       0
  2471 ;;      Totals:         0       0       0       0
  2472 ;;Total ram usage:        0 bytes
  2473 ;; Hardware stack levels used:    1
  2474 ;; Hardware stack levels required when called:    2
  2475 ;; This function calls:
  2476 ;;		Nothing
  2477 ;; This function is called by:
  2478 ;;		_main
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482                           
  2483                           ;psect for function _myMain_Initialization
  2484  0AA2                     _myMain_Initialization:	
  2485                           
  2486                           ;incstack = 0
  2487                           ; Regs used in _myMain_Initialization: []
  2488  0AA2  0008               	return
  2489  0AA3                     __end_of_myMain_Initialization:	
  2490                           
  2491                           	psect	text3
  2492  0CCB                     __ptext3:	
  2493 ;; *************** function _getTemp_AD *****************
  2494 ;; Defined at:
  2495 ;;		line 15 in file "../src/OverTemperature_B1.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;  channel         1    wreg     unsigned char 
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;  channel         1    2[BANK0 ] unsigned char 
  2500 ;;  ADRES           1    3[BANK0 ] unsigned char 
  2501 ;; Return value:  Size  Location     Type
  2502 ;;		None               void
  2503 ;; Registers used:
  2504 ;;		wreg, status,2, status,0, pclath, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2510 ;;      Params:         0       0       0       0
  2511 ;;      Locals:         0       2       0       0
  2512 ;;      Temps:          0       2       0       0
  2513 ;;      Totals:         0       4       0       0
  2514 ;;Total ram usage:        4 bytes
  2515 ;; Hardware stack levels used:    1
  2516 ;; Hardware stack levels required when called:    4
  2517 ;; This function calls:
  2518 ;;		_getAD
  2519 ;; This function is called by:
  2520 ;;		_main
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           
  2525                           ;psect for function _getTemp_AD
  2526  0CCB                     _getTemp_AD:	
  2527                           
  2528                           ;incstack = 0
  2529                           ; Regs used in _getTemp_AD: [wreg+status,2+status,0+pclath+cstack]
  2530                           ;getTemp_AD@channel stored from wreg
  2531  0CCB  1283               	bcf	3,5	;RP0=0, select bank0
  2532  0CCC  1303               	bcf	3,6	;RP1=0, select bank0
  2533  0CCD  00CF               	movwf	getTemp_AD@channel
  2534                           
  2535                           ;OverTemperature_B1.c: 16: ADtype ADRES = 0;
  2536  0CCE  01D0               	clrf	getTemp_AD@ADRES
  2537                           
  2538                           ;OverTemperature_B1.c: 19: if (Temp.ADtoGO == 1) {
  2539  0CCF  1D39               	btfss	_Temp,2
  2540  0CD0  0008               	return
  2541                           
  2542                           ;OverTemperature_B1.c: 21: ADRES = getAD(channel, 0x70);
  2543  0CD1  3070               	movlw	112
  2544  0CD2  00CD               	movwf	??_getTemp_AD
  2545  0CD3  084D               	movf	??_getTemp_AD,w
  2546  0CD4  00F4               	movwf	getAD@adcon1
  2547  0CD5  084F               	movf	getTemp_AD@channel,w
  2548  0CD6  158A  2491  158A   	fcall	_getAD
  2549  0CD9  1283               	bcf	3,5	;RP0=0, select bank0
  2550  0CDA  1303               	bcf	3,6	;RP1=0, select bank0
  2551  0CDB  00CE               	movwf	??_getTemp_AD+1
  2552  0CDC  084E               	movf	??_getTemp_AD+1,w
  2553  0CDD  00D0               	movwf	getTemp_AD@ADRES
  2554                           
  2555                           ;OverTemperature_B1.c: 29: if (ADRES > 0) {
  2556  0CDE  0850               	movf	getTemp_AD@ADRES,w
  2557  0CDF  1903               	btfsc	3,2
  2558  0CE0  0008               	return
  2559                           
  2560                           ;OverTemperature_B1.c: 30: if (Temp.ADV < ADRES) {
  2561  0CE1  0850               	movf	getTemp_AD@ADRES,w
  2562  0CE2  023F               	subwf	_Temp+6,w
  2563  0CE3  1803               	skipnc
  2564  0CE4  0008               	return
  2565                           
  2566                           ;OverTemperature_B1.c: 31: Temp.ADV = ADRES;
  2567  0CE5  0850               	movf	getTemp_AD@ADRES,w
  2568  0CE6  00CD               	movwf	??_getTemp_AD
  2569  0CE7  084D               	movf	??_getTemp_AD,w
  2570  0CE8  00BF               	movwf	_Temp+6
  2571  0CE9  0008               	return
  2572  0CEA                     __end_of_getTemp_AD:	
  2573                           
  2574                           	psect	text4
  2575  0417                     __ptext4:	
  2576 ;; *************** function _getPIR_AD *****************
  2577 ;; Defined at:
  2578 ;;		line 342 in file "../src/PIR_B1.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;  channel1        1    wreg     unsigned char 
  2581 ;;  channel2        1    8[BANK0 ] unsigned char 
  2582 ;; Auto vars:     Size  Location     Type
  2583 ;;  channel1        1   13[BANK0 ] unsigned char 
  2584 ;;  i               1   16[BANK0 ] unsigned char 
  2585 ;;  VRAD            1   15[BANK0 ] unsigned char 
  2586 ;;  VRAD1           1   14[BANK0 ] unsigned char 
  2587 ;;  j               1   12[BANK0 ] unsigned char 
  2588 ;; Return value:  Size  Location     Type
  2589 ;;		None               void
  2590 ;; Registers used:
  2591 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2592 ;; Tracked objects:
  2593 ;;		On entry : 0/0
  2594 ;;		On exit  : 0/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2597 ;;      Params:         0       1       0       0
  2598 ;;      Locals:         0       5       0       0
  2599 ;;      Temps:          0       3       0       0
  2600 ;;      Totals:         0       9       0       0
  2601 ;;Total ram usage:        9 bytes
  2602 ;; Hardware stack levels used:    1
  2603 ;; Hardware stack levels required when called:    4
  2604 ;; This function calls:
  2605 ;;		___awdiv
  2606 ;;		___lwdiv
  2607 ;;		_getAD
  2608 ;; This function is called by:
  2609 ;;		_main
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613                           
  2614                           ;psect for function _getPIR_AD
  2615  0417                     _getPIR_AD:	
  2616                           
  2617                           ;incstack = 0
  2618                           ; Regs used in _getPIR_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2619                           ;getPIR_AD@channel1 stored from wreg
  2620  0417  1283               	bcf	3,5	;RP0=0, select bank0
  2621  0418  1303               	bcf	3,6	;RP1=0, select bank0
  2622  0419  00DA               	movwf	getPIR_AD@channel1
  2623                           
  2624                           ;PIR_B1.c: 343: char i = 0, j = 0;
  2625  041A  01DD               	clrf	getPIR_AD@i
  2626  041B  01D9               	clrf	getPIR_AD@j
  2627                           
  2628                           ;PIR_B1.c: 344: char VRAD = 0, VRAD1 = 0;
  2629  041C  01DC               	clrf	getPIR_AD@VRAD
  2630  041D  01DB               	clrf	getPIR_AD@VRAD1
  2631                           
  2632                           ;PIR_B1.c: 345: if (_PIR.ADtoGO == 1 && _PIR.GO == 0) {
  2633  041E  1683               	bsf	3,5	;RP0=1, select bank1
  2634  041F  1303               	bcf	3,6	;RP1=0, select bank1
  2635  0420  1CA0               	btfss	__PIR^(0+128),1
  2636  0421  0008               	return
  2637  0422  1920               	btfsc	__PIR^(0+128),2
  2638  0423  0008               	return
  2639                           
  2640                           ;PIR_B1.c: 346: _PIR.GO = 1;
  2641  0424  1520               	bsf	__PIR^(0+128),2
  2642                           
  2643                           ;PIR_B1.c: 353: VRAD1 = getAD(channel1, 0x70);
  2644  0425  3070               	movlw	112
  2645  0426  1283               	bcf	3,5	;RP0=0, select bank0
  2646  0427  1303               	bcf	3,6	;RP1=0, select bank0
  2647  0428  00D6               	movwf	??_getPIR_AD
  2648  0429  0856               	movf	??_getPIR_AD,w
  2649  042A  00F4               	movwf	getAD@adcon1
  2650  042B  085A               	movf	getPIR_AD@channel1,w
  2651  042C  158A  2491  118A   	fcall	_getAD
  2652  042F  1283               	bcf	3,5	;RP0=0, select bank0
  2653  0430  1303               	bcf	3,6	;RP1=0, select bank0
  2654  0431  00D7               	movwf	??_getPIR_AD+1
  2655  0432  0857               	movf	??_getPIR_AD+1,w
  2656  0433  00DB               	movwf	getPIR_AD@VRAD1
  2657                           
  2658                           ;PIR_B1.c: 354: VRAD = VRAD1 / 25;
  2659  0434  3019               	movlw	25
  2660  0435  00CD               	movwf	___awdiv@divisor
  2661  0436  3000               	movlw	0
  2662  0437  00CE               	movwf	___awdiv@divisor+1
  2663  0438  085B               	movf	getPIR_AD@VRAD1,w
  2664  0439  00D6               	movwf	??_getPIR_AD
  2665  043A  01D7               	clrf	??_getPIR_AD+1
  2666  043B  0856               	movf	??_getPIR_AD,w
  2667  043C  00CF               	movwf	___awdiv@dividend
  2668  043D  0857               	movf	??_getPIR_AD+1,w
  2669  043E  00D0               	movwf	___awdiv@dividend+1
  2670  043F  158A  26D8  118A   	fcall	___awdiv
  2671  0442  1283               	bcf	3,5	;RP0=0, select bank0
  2672  0443  1303               	bcf	3,6	;RP1=0, select bank0
  2673  0444  084D               	movf	?___awdiv,w
  2674  0445  00D8               	movwf	??_getPIR_AD+2
  2675  0446  0858               	movf	??_getPIR_AD+2,w
  2676  0447  00DC               	movwf	getPIR_AD@VRAD
  2677                           
  2678                           ;PIR_B1.c: 355: _PIR.SignalAD = getAD(channel2, 0x70);
  2679  0448  3070               	movlw	112
  2680  0449  00D6               	movwf	??_getPIR_AD
  2681  044A  0856               	movf	??_getPIR_AD,w
  2682  044B  00F4               	movwf	getAD@adcon1
  2683  044C  0855               	movf	getPIR_AD@channel2,w
  2684  044D  158A  2491  118A   	fcall	_getAD
  2685  0450  1283               	bcf	3,5	;RP0=0, select bank0
  2686  0451  1303               	bcf	3,6	;RP1=0, select bank0
  2687  0452  00D7               	movwf	??_getPIR_AD+1
  2688  0453  0857               	movf	??_getPIR_AD+1,w
  2689  0454  1683               	bsf	3,5	;RP0=1, select bank1
  2690  0455  1303               	bcf	3,6	;RP1=0, select bank1
  2691  0456  00A1               	movwf	(__PIR^(0+128)+1)
  2692                           
  2693                           ;PIR_B1.c: 369: if (VRAD < 1) {
  2694  0457  1283               	bcf	3,5	;RP0=0, select bank0
  2695  0458  1303               	bcf	3,6	;RP1=0, select bank0
  2696  0459  08DC               	movf	getPIR_AD@VRAD,f
  2697  045A  1D03               	skipz
  2698  045B  2C5E               	goto	l4873
  2699                           
  2700                           ;PIR_B1.c: 370: _PIR.CloseTimeValue = 5;
  2701  045C  3005               	movlw	5
  2702  045D  2C64               	goto	L1
  2703  045E                     l4873:	
  2704                           ;PIR_B1.c: 371: } else if (VRAD < 3) {
  2705                           
  2706  045E  3003               	movlw	3
  2707  045F  1283               	bcf	3,5	;RP0=0, select bank0
  2708  0460  025C               	subwf	getPIR_AD@VRAD,w
  2709  0461  1803               	skipnc
  2710  0462  2C69               	goto	l4877
  2711                           
  2712                           ;PIR_B1.c: 372: _PIR.CloseTimeValue = 60;
  2713  0463  303C               	movlw	60
  2714  0464                     L1:	
  2715  0464  1683               	bsf	3,5	;RP0=1, select bank1
  2716  0465  1303               	bcf	3,6	;RP1=0, select bank1
  2717  0466  00C3               	movwf	(__PIR^(0+128)+35)
  2718  0467  3000               	movlw	0
  2719  0468  2C8F               	goto	L5
  2720  0469                     l4877:	
  2721                           ;PIR_B1.c: 373: } else if (VRAD < 5) {
  2722                           
  2723  0469  3005               	movlw	5
  2724  046A  1283               	bcf	3,5	;RP0=0, select bank0
  2725  046B  025C               	subwf	getPIR_AD@VRAD,w
  2726  046C  1803               	skipnc
  2727  046D  2C74               	goto	l4881
  2728                           
  2729                           ;PIR_B1.c: 374: _PIR.CloseTimeValue = 300;
  2730  046E  302C               	movlw	44
  2731  046F  1683               	bsf	3,5	;RP0=1, select bank1
  2732  0470  1303               	bcf	3,6	;RP1=0, select bank1
  2733  0471  00C3               	movwf	(__PIR^(0+128)+35)
  2734  0472  3001               	movlw	1
  2735  0473  2C8F               	goto	L5
  2736  0474                     l4881:	
  2737                           ;PIR_B1.c: 375: } else if (VRAD < 7) {
  2738                           
  2739  0474  3007               	movlw	7
  2740  0475  1283               	bcf	3,5	;RP0=0, select bank0
  2741  0476  025C               	subwf	getPIR_AD@VRAD,w
  2742  0477  1803               	skipnc
  2743  0478  2C7F               	goto	l4885
  2744                           
  2745                           ;PIR_B1.c: 376: _PIR.CloseTimeValue = 600;
  2746  0479  3058               	movlw	88
  2747  047A  1683               	bsf	3,5	;RP0=1, select bank1
  2748  047B  1303               	bcf	3,6	;RP1=0, select bank1
  2749  047C  00C3               	movwf	(__PIR^(0+128)+35)
  2750  047D  3002               	movlw	2
  2751  047E  2C8F               	goto	L5
  2752  047F                     l4885:	
  2753                           ;PIR_B1.c: 377: } else if (VRAD < 9) {
  2754                           
  2755  047F  3009               	movlw	9
  2756  0480  1283               	bcf	3,5	;RP0=0, select bank0
  2757  0481  025C               	subwf	getPIR_AD@VRAD,w
  2758  0482  1803               	skipnc
  2759  0483  2C8A               	goto	l4889
  2760                           
  2761                           ;PIR_B1.c: 378: _PIR.CloseTimeValue = 900;
  2762  0484  3084               	movlw	132
  2763  0485  1683               	bsf	3,5	;RP0=1, select bank1
  2764  0486  1303               	bcf	3,6	;RP1=0, select bank1
  2765  0487  00C3               	movwf	(__PIR^(0+128)+35)
  2766  0488  3003               	movlw	3
  2767  0489  2C8F               	goto	L5
  2768  048A                     l4889:	
  2769                           ;PIR_B1.c: 379: } else {
  2770                           
  2771                           
  2772                           ;PIR_B1.c: 380: _PIR.CloseTimeValue = 1200;
  2773  048A  30B0               	movlw	176
  2774  048B  1683               	bsf	3,5	;RP0=1, select bank1
  2775  048C  1303               	bcf	3,6	;RP1=0, select bank1
  2776  048D  00C3               	movwf	(__PIR^(0+128)+35)
  2777  048E  3004               	movlw	4
  2778  048F                     L5:	
  2779  048F  00C4               	movwf	(__PIR^(0+128)+36)
  2780                           
  2781                           ;PIR_B1.c: 381: }
  2782                           ;PIR_B1.c: 390: _PIR.TenAverage[_PIR.TenCount] = _PIR.SignalAD;
  2783  0490  0821               	movf	(__PIR^(0+128)+1),w
  2784  0491  1283               	bcf	3,5	;RP0=0, select bank0
  2785  0492  1303               	bcf	3,6	;RP1=0, select bank0
  2786  0493  00D6               	movwf	??_getPIR_AD
  2787  0494  1683               	bsf	3,5	;RP0=1, select bank1
  2788  0495  1303               	bcf	3,6	;RP1=0, select bank1
  2789  0496  0824               	movf	(__PIR^(0+128)+4),w
  2790  0497  3EA5               	addlw	(__PIR+5)& (0+255)
  2791  0498  0084               	movwf	4
  2792  0499  1283               	bcf	3,5	;RP0=0, select bank0
  2793  049A  1303               	bcf	3,6	;RP1=0, select bank0
  2794  049B  0856               	movf	??_getPIR_AD,w
  2795  049C  1383               	bcf	3,7	;select IRP bank1
  2796  049D  0080               	movwf	0
  2797                           
  2798                           ;PIR_B1.c: 391: for (i = 0; i < 10; i++) {
  2799  049E  01DD               	clrf	getPIR_AD@i
  2800  049F  300A               	movlw	10
  2801  04A0  025D               	subwf	getPIR_AD@i,w
  2802  04A1  1803               	btfsc	3,0
  2803  04A2  2CBF               	goto	l4905
  2804  04A3                     l4899:	
  2805                           
  2806                           ;PIR_B1.c: 392: _PIR.TenAverageValue += _PIR.TenAverage[i];
  2807  04A3  085D               	movf	getPIR_AD@i,w
  2808  04A4  3EA5               	addlw	(__PIR+5)& (0+255)
  2809  04A5  0084               	movwf	4
  2810  04A6  0800               	movf	0,w
  2811  04A7  00D6               	movwf	??_getPIR_AD
  2812  04A8  01D7               	clrf	??_getPIR_AD+1
  2813  04A9  0856               	movf	??_getPIR_AD,w
  2814  04AA  1683               	bsf	3,5	;RP0=1, select bank1
  2815  04AB  1303               	bcf	3,6	;RP1=0, select bank1
  2816  04AC  07AF               	addwf	(__PIR^(0+128)+15),f
  2817  04AD  1803               	skipnc
  2818  04AE  0AB0               	incf	((__PIR+1)^(0+128)+15),f
  2819  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  2820  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  2821  04B1  0857               	movf	??_getPIR_AD+1,w
  2822  04B2  1683               	bsf	3,5	;RP0=1, select bank1
  2823  04B3  1303               	bcf	3,6	;RP1=0, select bank1
  2824  04B4  07B0               	addwf	((__PIR+1)^(0+128)+15),f
  2825  04B5  3001               	movlw	1
  2826  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  2827  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  2828  04B8  00D6               	movwf	??_getPIR_AD
  2829  04B9  0856               	movf	??_getPIR_AD,w
  2830  04BA  07DD               	addwf	getPIR_AD@i,f
  2831  04BB  300A               	movlw	10
  2832  04BC  025D               	subwf	getPIR_AD@i,w
  2833  04BD  1C03               	skipc
  2834  04BE  2CA3               	goto	l4899
  2835  04BF                     l4905:	
  2836                           
  2837                           ;PIR_B1.c: 393: }
  2838                           ;PIR_B1.c: 394: _PIR.HundredAverage[_PIR.HundreCount] = (_PIR.TenAverageValue / 10);
  2839  04BF  300A               	movlw	10
  2840  04C0  00CD               	movwf	___lwdiv@divisor
  2841  04C1  3000               	movlw	0
  2842  04C2  00CE               	movwf	___lwdiv@divisor+1
  2843  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  2844  04C4  1303               	bcf	3,6	;RP1=0, select bank1
  2845  04C5  0830               	movf	((__PIR+1)^(0+128)+15),w
  2846  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  2847  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  2848  04C8  01D0               	clrf	___lwdiv@dividend+1
  2849  04C9  07D0               	addwf	___lwdiv@dividend+1,f
  2850  04CA  1683               	bsf	3,5	;RP0=1, select bank1
  2851  04CB  1303               	bcf	3,6	;RP1=0, select bank1
  2852  04CC  082F               	movf	(__PIR^(0+128)+15),w
  2853  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  2854  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  2855  04CF  01CF               	clrf	___lwdiv@dividend
  2856  04D0  07CF               	addwf	___lwdiv@dividend,f
  2857  04D1  158A  25F8  118A   	fcall	___lwdiv
  2858  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  2859  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  2860  04D6  084D               	movf	?___lwdiv,w
  2861  04D7  00D6               	movwf	??_getPIR_AD
  2862  04D8  1683               	bsf	3,5	;RP0=1, select bank1
  2863  04D9  1303               	bcf	3,6	;RP1=0, select bank1
  2864  04DA  0831               	movf	(__PIR^(0+128)+17),w
  2865  04DB  3EB2               	addlw	(__PIR+18)& (0+255)
  2866  04DC  0084               	movwf	4
  2867  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  2868  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  2869  04DF  0856               	movf	??_getPIR_AD,w
  2870  04E0  1383               	bcf	3,7	;select IRP bank1
  2871  04E1  0080               	movwf	0
  2872                           
  2873                           ;PIR_B1.c: 395: _PIR.TenAverageValue = 0;
  2874  04E2  1683               	bsf	3,5	;RP0=1, select bank1
  2875  04E3  1303               	bcf	3,6	;RP1=0, select bank1
  2876  04E4  01AF               	clrf	(__PIR^(0+128)+15)
  2877  04E5  01B0               	clrf	((__PIR+1)^(0+128)+15)
  2878                           
  2879                           ;PIR_B1.c: 397: for (i = 0; i <= 9; i++) {
  2880  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  2881  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  2882  04E8  01DD               	clrf	getPIR_AD@i
  2883  04E9  300A               	movlw	10
  2884  04EA  025D               	subwf	getPIR_AD@i,w
  2885  04EB  1803               	btfsc	3,0
  2886  04EC  2D09               	goto	l4921
  2887  04ED                     l4915:	
  2888                           
  2889                           ;PIR_B1.c: 398: _PIR.HundredAverageValue += _PIR.HundredAverage[i];
  2890  04ED  085D               	movf	getPIR_AD@i,w
  2891  04EE  3EB2               	addlw	(__PIR+18)& (0+255)
  2892  04EF  0084               	movwf	4
  2893  04F0  0800               	movf	0,w
  2894  04F1  00D6               	movwf	??_getPIR_AD
  2895  04F2  01D7               	clrf	??_getPIR_AD+1
  2896  04F3  0856               	movf	??_getPIR_AD,w
  2897  04F4  1683               	bsf	3,5	;RP0=1, select bank1
  2898  04F5  1303               	bcf	3,6	;RP1=0, select bank1
  2899  04F6  07BC               	addwf	(__PIR^(0+128)+28),f
  2900  04F7  1803               	skipnc
  2901  04F8  0ABD               	incf	((__PIR+1)^(0+128)+28),f
  2902  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  2903  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  2904  04FB  0857               	movf	??_getPIR_AD+1,w
  2905  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  2906  04FD  1303               	bcf	3,6	;RP1=0, select bank1
  2907  04FE  07BD               	addwf	((__PIR+1)^(0+128)+28),f
  2908  04FF  3001               	movlw	1
  2909  0500  1283               	bcf	3,5	;RP0=0, select bank0
  2910  0501  1303               	bcf	3,6	;RP1=0, select bank0
  2911  0502  00D6               	movwf	??_getPIR_AD
  2912  0503  0856               	movf	??_getPIR_AD,w
  2913  0504  07DD               	addwf	getPIR_AD@i,f
  2914  0505  300A               	movlw	10
  2915  0506  025D               	subwf	getPIR_AD@i,w
  2916  0507  1C03               	skipc
  2917  0508  2CED               	goto	l4915
  2918  0509                     l4921:	
  2919                           
  2920                           ;PIR_B1.c: 399: }
  2921                           ;PIR_B1.c: 400: _PIR.ReferenceVoltage = (_PIR.HundredAverageValue / 10);
  2922  0509  300A               	movlw	10
  2923  050A  00CD               	movwf	___lwdiv@divisor
  2924  050B  3000               	movlw	0
  2925  050C  00CE               	movwf	___lwdiv@divisor+1
  2926  050D  1683               	bsf	3,5	;RP0=1, select bank1
  2927  050E  1303               	bcf	3,6	;RP1=0, select bank1
  2928  050F  083D               	movf	((__PIR+1)^(0+128)+28),w
  2929  0510  1283               	bcf	3,5	;RP0=0, select bank0
  2930  0511  1303               	bcf	3,6	;RP1=0, select bank0
  2931  0512  01D0               	clrf	___lwdiv@dividend+1
  2932  0513  07D0               	addwf	___lwdiv@dividend+1,f
  2933  0514  1683               	bsf	3,5	;RP0=1, select bank1
  2934  0515  1303               	bcf	3,6	;RP1=0, select bank1
  2935  0516  083C               	movf	(__PIR^(0+128)+28),w
  2936  0517  1283               	bcf	3,5	;RP0=0, select bank0
  2937  0518  1303               	bcf	3,6	;RP1=0, select bank0
  2938  0519  01CF               	clrf	___lwdiv@dividend
  2939  051A  07CF               	addwf	___lwdiv@dividend,f
  2940  051B  158A  25F8  118A   	fcall	___lwdiv
  2941  051E  1283               	bcf	3,5	;RP0=0, select bank0
  2942  051F  1303               	bcf	3,6	;RP1=0, select bank0
  2943  0520  084D               	movf	?___lwdiv,w
  2944  0521  00D6               	movwf	??_getPIR_AD
  2945  0522  0856               	movf	??_getPIR_AD,w
  2946  0523  1683               	bsf	3,5	;RP0=1, select bank1
  2947  0524  1303               	bcf	3,6	;RP1=0, select bank1
  2948  0525  00A3               	movwf	(__PIR^(0+128)+3)
  2949                           
  2950                           ;PIR_B1.c: 401: _PIR.HundredAverageValue = 0;
  2951  0526  01BC               	clrf	(__PIR^(0+128)+28)
  2952  0527  01BD               	clrf	((__PIR+1)^(0+128)+28)
  2953                           
  2954                           ;PIR_B1.c: 403: if (_PIR.TenCount < 10) {
  2955  0528  300A               	movlw	10
  2956  0529  0224               	subwf	(__PIR^(0+128)+4),w
  2957  052A  1803               	skipnc
  2958  052B  2D35               	goto	l4929
  2959                           
  2960                           ;PIR_B1.c: 404: _PIR.TenCount++;
  2961  052C  3001               	movlw	1
  2962  052D  1283               	bcf	3,5	;RP0=0, select bank0
  2963  052E  1303               	bcf	3,6	;RP1=0, select bank0
  2964  052F  00D6               	movwf	??_getPIR_AD
  2965  0530  0856               	movf	??_getPIR_AD,w
  2966  0531  1683               	bsf	3,5	;RP0=1, select bank1
  2967  0532  1303               	bcf	3,6	;RP1=0, select bank1
  2968  0533  07A4               	addwf	(__PIR^(0+128)+4),f
  2969                           
  2970                           ;PIR_B1.c: 405: } else {
  2971  0534  0008               	return
  2972  0535                     l4929:	
  2973                           
  2974                           ;PIR_B1.c: 406: _PIR.TenCount = 0;
  2975  0535  01A4               	clrf	(__PIR^(0+128)+4)
  2976                           
  2977                           ;PIR_B1.c: 407: if (_PIR.HundreCount < 10)
  2978  0536  300A               	movlw	10
  2979  0537  0231               	subwf	(__PIR^(0+128)+17),w
  2980  0538  1803               	skipnc
  2981  0539  2D43               	goto	l4935
  2982                           
  2983                           ;PIR_B1.c: 408: _PIR.HundreCount++;
  2984  053A  3001               	movlw	1
  2985  053B  1283               	bcf	3,5	;RP0=0, select bank0
  2986  053C  1303               	bcf	3,6	;RP1=0, select bank0
  2987  053D  00D6               	movwf	??_getPIR_AD
  2988  053E  0856               	movf	??_getPIR_AD,w
  2989  053F  1683               	bsf	3,5	;RP0=1, select bank1
  2990  0540  1303               	bcf	3,6	;RP1=0, select bank1
  2991  0541  07B1               	addwf	(__PIR^(0+128)+17),f
  2992  0542  0008               	return
  2993  0543                     l4935:	
  2994                           
  2995                           ;PIR_B1.c: 409: else
  2996                           ;PIR_B1.c: 410: _PIR.HundreCount = 0;
  2997  0543  01B1               	clrf	(__PIR^(0+128)+17)
  2998  0544  0008               	return
  2999  0545                     __end_of_getPIR_AD:	
  3000                           
  3001                           	psect	text5
  3002  0E7C                     __ptext5:	
  3003 ;; *************** function _getLoad_AD *****************
  3004 ;; Defined at:
  3005 ;;		line 15 in file "../src/OverLoad_B1.c"
  3006 ;; Parameters:    Size  Location     Type
  3007 ;;  channel         1    wreg     unsigned char 
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;  channel         1    2[BANK0 ] unsigned char 
  3010 ;;  i               1    6[BANK0 ] unsigned char 
  3011 ;;  ADRES           1    5[BANK0 ] unsigned char 
  3012 ;;  j               1    4[BANK0 ] unsigned char 
  3013 ;;  k               1    3[BANK0 ] unsigned char 
  3014 ;; Return value:  Size  Location     Type
  3015 ;;		None               void
  3016 ;; Registers used:
  3017 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3023 ;;      Params:         0       0       0       0
  3024 ;;      Locals:         0       5       0       0
  3025 ;;      Temps:          0       2       0       0
  3026 ;;      Totals:         0       7       0       0
  3027 ;;Total ram usage:        7 bytes
  3028 ;; Hardware stack levels used:    1
  3029 ;; Hardware stack levels required when called:    4
  3030 ;; This function calls:
  3031 ;;		_getAD
  3032 ;; This function is called by:
  3033 ;;		_main
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           
  3038                           ;psect for function _getLoad_AD
  3039  0E7C                     _getLoad_AD:	
  3040                           
  3041                           ;incstack = 0
  3042                           ; Regs used in _getLoad_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3043                           ;getLoad_AD@channel stored from wreg
  3044  0E7C  1283               	bcf	3,5	;RP0=0, select bank0
  3045  0E7D  1303               	bcf	3,6	;RP1=0, select bank0
  3046  0E7E  00CF               	movwf	getLoad_AD@channel
  3047                           
  3048                           ;OverLoad_B1.c: 16: char i = 0, j = 0, k = 0;
  3049  0E7F  01D3               	clrf	getLoad_AD@i
  3050  0E80  01D1               	clrf	getLoad_AD@j
  3051  0E81  01D0               	clrf	getLoad_AD@k
  3052                           
  3053                           ;OverLoad_B1.c: 17: ADtype ADRES = 0;
  3054  0E82  01D2               	clrf	getLoad_AD@ADRES
  3055                           
  3056                           ;OverLoad_B1.c: 18: if (Load.ADtoGO == 1) {
  3057  0E83  1683               	bsf	3,5	;RP0=1, select bank1
  3058  0E84  1303               	bcf	3,6	;RP1=0, select bank1
  3059  0E85  1E4A               	btfss	_Load^(0+128),4
  3060  0E86  0008               	return
  3061                           
  3062                           ;OverLoad_B1.c: 20: ADRES = getAD(channel, 0x73);
  3063  0E87  3073               	movlw	115
  3064  0E88  1283               	bcf	3,5	;RP0=0, select bank0
  3065  0E89  1303               	bcf	3,6	;RP1=0, select bank0
  3066  0E8A  00CD               	movwf	??_getLoad_AD
  3067  0E8B  084D               	movf	??_getLoad_AD,w
  3068  0E8C  00F4               	movwf	getAD@adcon1
  3069  0E8D  084F               	movf	getLoad_AD@channel,w
  3070  0E8E  158A  2491  158A   	fcall	_getAD
  3071  0E91  1283               	bcf	3,5	;RP0=0, select bank0
  3072  0E92  1303               	bcf	3,6	;RP1=0, select bank0
  3073  0E93  00CE               	movwf	??_getLoad_AD+1
  3074  0E94  084E               	movf	??_getLoad_AD+1,w
  3075  0E95  00D2               	movwf	getLoad_AD@ADRES
  3076                           
  3077                           ;OverLoad_B1.c: 21: for (i = 0; i < 4; i++) {
  3078  0E96  01D3               	clrf	getLoad_AD@i
  3079  0E97  3004               	movlw	4
  3080  0E98  0253               	subwf	getLoad_AD@i,w
  3081  0E99  1803               	btfsc	3,0
  3082  0E9A  2EB7               	goto	l4827
  3083  0E9B                     l4815:	
  3084                           
  3085                           ;OverLoad_B1.c: 22: if (Load.AH[i] < ADRES && j == 0) {
  3086  0E9B  0853               	movf	getLoad_AD@i,w
  3087  0E9C  3ED4               	addlw	(_Load+10)& (0+255)
  3088  0E9D  0084               	movwf	4
  3089  0E9E  0852               	movf	getLoad_AD@ADRES,w
  3090  0E9F  1383               	bcf	3,7	;select IRP bank1
  3091  0EA0  0200               	subwf	0,w
  3092  0EA1  1803               	skipnc
  3093  0EA2  2EAF               	goto	l4823
  3094  0EA3  08D1               	movf	getLoad_AD@j,f
  3095  0EA4  1D03               	skipz
  3096  0EA5  2EAF               	goto	l4823
  3097                           
  3098                           ;OverLoad_B1.c: 23: Load.AH[i] = ADRES;
  3099  0EA6  0852               	movf	getLoad_AD@ADRES,w
  3100  0EA7  00CD               	movwf	??_getLoad_AD
  3101  0EA8  0853               	movf	getLoad_AD@i,w
  3102  0EA9  3ED4               	addlw	(_Load+10)& (0+255)
  3103  0EAA  0084               	movwf	4
  3104  0EAB  084D               	movf	??_getLoad_AD,w
  3105  0EAC  0080               	movwf	0
  3106                           
  3107                           ;OverLoad_B1.c: 24: j = 1;
  3108  0EAD  01D1               	clrf	getLoad_AD@j
  3109  0EAE  0AD1               	incf	getLoad_AD@j,f
  3110  0EAF                     l4823:	
  3111  0EAF  3001               	movlw	1
  3112  0EB0  00CD               	movwf	??_getLoad_AD
  3113  0EB1  084D               	movf	??_getLoad_AD,w
  3114  0EB2  07D3               	addwf	getLoad_AD@i,f
  3115  0EB3  3004               	movlw	4
  3116  0EB4  0253               	subwf	getLoad_AD@i,w
  3117  0EB5  1C03               	skipc
  3118  0EB6  2E9B               	goto	l4815
  3119  0EB7                     l4827:	
  3120                           
  3121                           ;OverLoad_B1.c: 25: }
  3122                           ;OverLoad_B1.c: 26: }
  3123                           ;OverLoad_B1.c: 27: if (j == 0) {
  3124  0EB7  08D1               	movf	getLoad_AD@j,f
  3125  0EB8  1D03               	skipz
  3126  0EB9  0008               	return
  3127                           
  3128                           ;OverLoad_B1.c: 28: for (i = 0; i < 4; i++) {
  3129  0EBA  01D3               	clrf	getLoad_AD@i
  3130  0EBB                     L6:	
  3131  0EBB  3004               	movlw	4
  3132  0EBC  0253               	subwf	getLoad_AD@i,w
  3133  0EBD  1803               	btfsc	3,0
  3134  0EBE  0008               	return
  3135                           
  3136                           ;OverLoad_B1.c: 29: if (Load.AL[i] > ADRES && k == 0) {
  3137  0EBF  0853               	movf	getLoad_AD@i,w
  3138  0EC0  3ED9               	addlw	(_Load+15)& (0+255)
  3139  0EC1  0084               	movwf	4
  3140  0EC2  1383               	bcf	3,7	;select IRP bank1
  3141  0EC3  0800               	movf	0,w
  3142  0EC4  0252               	subwf	getLoad_AD@ADRES,w
  3143  0EC5  1803               	skipnc
  3144  0EC6  2ED3               	goto	l4843
  3145  0EC7  08D0               	movf	getLoad_AD@k,f
  3146  0EC8  1D03               	skipz
  3147  0EC9  2ED3               	goto	l4843
  3148                           
  3149                           ;OverLoad_B1.c: 30: Load.AL[i] = ADRES;
  3150  0ECA  0852               	movf	getLoad_AD@ADRES,w
  3151  0ECB  00CD               	movwf	??_getLoad_AD
  3152  0ECC  0853               	movf	getLoad_AD@i,w
  3153  0ECD  3ED9               	addlw	(_Load+15)& (0+255)
  3154  0ECE  0084               	movwf	4
  3155  0ECF  084D               	movf	??_getLoad_AD,w
  3156  0ED0  0080               	movwf	0
  3157                           
  3158                           ;OverLoad_B1.c: 31: k = 1;
  3159  0ED1  01D0               	clrf	getLoad_AD@k
  3160  0ED2  0AD0               	incf	getLoad_AD@k,f
  3161  0ED3                     l4843:	
  3162  0ED3  3001               	movlw	1
  3163  0ED4  00CD               	movwf	??_getLoad_AD
  3164  0ED5  084D               	movf	??_getLoad_AD,w
  3165  0ED6  07D3               	addwf	getLoad_AD@i,f
  3166  0ED7  2EBB               	goto	L6
  3167  0ED8                     __end_of_getLoad_AD:	
  3168                           
  3169                           	psect	text6
  3170  0CEA                     __ptext6:	
  3171 ;; *************** function _getCDS_AD *****************
  3172 ;; Defined at:
  3173 ;;		line 48 in file "../src/CDS_B1.c"
  3174 ;; Parameters:    Size  Location     Type
  3175 ;;  channel1        1    wreg     unsigned char 
  3176 ;;  channel2        1    0[BANK0 ] unsigned char 
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;  channel1        1    5[BANK0 ] unsigned char 
  3179 ;;  j               1    4[BANK0 ] unsigned char 
  3180 ;;  i               1    3[BANK0 ] unsigned char 
  3181 ;; Return value:  Size  Location     Type
  3182 ;;		None               void
  3183 ;; Registers used:
  3184 ;;		wreg, status,2, status,0, pclath, cstack
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3190 ;;      Params:         0       1       0       0
  3191 ;;      Locals:         0       3       0       0
  3192 ;;      Temps:          0       2       0       0
  3193 ;;      Totals:         0       6       0       0
  3194 ;;Total ram usage:        6 bytes
  3195 ;; Hardware stack levels used:    1
  3196 ;; Hardware stack levels required when called:    4
  3197 ;; This function calls:
  3198 ;;		_getAD
  3199 ;; This function is called by:
  3200 ;;		_main
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203                           
  3204                           
  3205                           ;psect for function _getCDS_AD
  3206  0CEA                     _getCDS_AD:	
  3207                           
  3208                           ;incstack = 0
  3209                           ; Regs used in _getCDS_AD: [wreg+status,2+status,0+pclath+cstack]
  3210                           ;getCDS_AD@channel1 stored from wreg
  3211  0CEA  1283               	bcf	3,5	;RP0=0, select bank0
  3212  0CEB  1303               	bcf	3,6	;RP1=0, select bank0
  3213  0CEC  00D2               	movwf	getCDS_AD@channel1
  3214                           
  3215                           ;CDS_B1.c: 49: char i = 0, j = 0;
  3216  0CED  01D0               	clrf	getCDS_AD@i
  3217  0CEE  01D1               	clrf	getCDS_AD@j
  3218                           
  3219                           ;CDS_B1.c: 50: if (_CDS.ADtoGO == 1) {
  3220  0CEF  1DAE               	btfss	__CDS,3
  3221  0CF0  0008               	return
  3222                           
  3223                           ;CDS_B1.c: 51: _CDS.GO = 1;
  3224  0CF1  14AE               	bsf	__CDS,1
  3225                           
  3226                           ;CDS_B1.c: 52: _CDS.VRAD = getAD(channel1, 0x70);
  3227  0CF2  3070               	movlw	112
  3228  0CF3  00CE               	movwf	??_getCDS_AD
  3229  0CF4  084E               	movf	??_getCDS_AD,w
  3230  0CF5  00F4               	movwf	getAD@adcon1
  3231  0CF6  0852               	movf	getCDS_AD@channel1,w
  3232  0CF7  158A  2491  158A   	fcall	_getAD
  3233  0CFA  1283               	bcf	3,5	;RP0=0, select bank0
  3234  0CFB  1303               	bcf	3,6	;RP1=0, select bank0
  3235  0CFC  00CF               	movwf	??_getCDS_AD+1
  3236  0CFD  084F               	movf	??_getCDS_AD+1,w
  3237  0CFE  00B0               	movwf	__CDS+2
  3238                           
  3239                           ;CDS_B1.c: 53: _CDS.SignalAD = getAD(channel2, 0x70);
  3240  0CFF  3070               	movlw	112
  3241  0D00  00CE               	movwf	??_getCDS_AD
  3242  0D01  084E               	movf	??_getCDS_AD,w
  3243  0D02  00F4               	movwf	getAD@adcon1
  3244  0D03  084D               	movf	getCDS_AD@channel2,w
  3245  0D04  158A  2491         	fcall	_getAD
  3246  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  3247  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  3248  0D08  00CF               	movwf	??_getCDS_AD+1
  3249  0D09  084F               	movf	??_getCDS_AD+1,w
  3250  0D0A  00B1               	movwf	__CDS+3
  3251  0D0B  0008               	return
  3252  0D0C                     __end_of_getCDS_AD:	
  3253                           
  3254                           	psect	text7
  3255  0C91                     __ptext7:	
  3256 ;; *************** function _getAD *****************
  3257 ;; Defined at:
  3258 ;;		line 434 in file "../src/MCU_B1.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;  adcon0          1    wreg     unsigned char 
  3261 ;;  adcon1          1    4[COMMON] unsigned char 
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;  adcon0          1    5[COMMON] unsigned char 
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  1    wreg      unsigned char 
  3266 ;; Registers used:
  3267 ;;		wreg, status,2, status,0, pclath, cstack
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3273 ;;      Params:         1       0       0       0
  3274 ;;      Locals:         1       0       0       0
  3275 ;;      Temps:          0       0       0       0
  3276 ;;      Totals:         2       0       0       0
  3277 ;;Total ram usage:        2 bytes
  3278 ;; Hardware stack levels used:    1
  3279 ;; Hardware stack levels required when called:    3
  3280 ;; This function calls:
  3281 ;;		_Timeout_Counter
  3282 ;;		_set_TimeoutCleared
  3283 ;; This function is called by:
  3284 ;;		_getCDS_AD
  3285 ;;		_getLoad_AD
  3286 ;;		_getTemp_AD
  3287 ;;		_getPIR_AD
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           
  3292                           ;psect for function _getAD
  3293  0C91                     _getAD:	
  3294                           
  3295                           ;incstack = 0
  3296                           ; Regs used in _getAD: [wreg+status,2+status,0+pclath+cstack]
  3297                           ;getAD@adcon0 stored from wreg
  3298  0C91  00F5               	movwf	getAD@adcon0
  3299                           
  3300                           ;MCU_B1.c: 435: ADCON0 = adcon0;
  3301  0C92  0875               	movf	getAD@adcon0,w
  3302  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  3303  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  3304  0C95  009F               	movwf	31	;volatile
  3305                           
  3306                           ;MCU_B1.c: 436: ADCON1 = adcon1;
  3307  0C96  0874               	movf	getAD@adcon1,w
  3308  0C97  1683               	bsf	3,5	;RP0=1, select bank1
  3309  0C98  1303               	bcf	3,6	;RP1=0, select bank1
  3310  0C99  009F               	movwf	31	;volatile
  3311                           
  3312                           ;MCU_B1.c: 437: GO_nDONE = 1;
  3313  0C9A  1283               	bcf	3,5	;RP0=0, select bank0
  3314  0C9B  1303               	bcf	3,6	;RP1=0, select bank0
  3315  0C9C  149F               	bsf	31,1	;volatile
  3316                           
  3317                           ;MCU_B1.c: 438: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  3318  0C9D  2CA1               	goto	l4607
  3319  0C9E                     l4605:	
  3320                           
  3321                           ;MCU_B1.c: 439: Timeout_Counter();
  3322  0C9E  158A  23B9  158A   	fcall	_Timeout_Counter
  3323  0CA1                     l4607:	
  3324  0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  3325  0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  3326  0CA3  1C9F               	btfss	31,1	;volatile
  3327  0CA4  2CA7               	goto	l4611
  3328  0CA5  1D27               	btfss	_myMain+2,2
  3329  0CA6  2C9E               	goto	l4605
  3330  0CA7                     l4611:	
  3331                           
  3332                           ;MCU_B1.c: 440: };
  3333                           ;MCU_B1.c: 441: set_TimeoutCleared();
  3334  0CA7  158A  22D2         	fcall	_set_TimeoutCleared
  3335                           
  3336                           ;MCU_B1.c: 442: return ADRES;
  3337  0CA9  1283               	bcf	3,5	;RP0=0, select bank0
  3338  0CAA  1303               	bcf	3,6	;RP1=0, select bank0
  3339  0CAB  081E               	movf	30,w	;volatile
  3340  0CAC  0008               	return
  3341  0CAD                     __end_of_getAD:	
  3342                           
  3343                           	psect	text8
  3344  0AD2                     __ptext8:	
  3345 ;; *************** function _set_TimeoutCleared *****************
  3346 ;; Defined at:
  3347 ;;		line 281 in file "../src/Main_B1.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;		None
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;		None
  3352 ;; Return value:  Size  Location     Type
  3353 ;;		None               void
  3354 ;; Registers used:
  3355 ;;		status,2
  3356 ;; Tracked objects:
  3357 ;;		On entry : 0/0
  3358 ;;		On exit  : 0/0
  3359 ;;		Unchanged: 0/0
  3360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3361 ;;      Params:         0       0       0       0
  3362 ;;      Locals:         0       0       0       0
  3363 ;;      Temps:          0       0       0       0
  3364 ;;      Totals:         0       0       0       0
  3365 ;;Total ram usage:        0 bytes
  3366 ;; Hardware stack levels used:    1
  3367 ;; Hardware stack levels required when called:    2
  3368 ;; This function calls:
  3369 ;;		Nothing
  3370 ;; This function is called by:
  3371 ;;		_getAD
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           
  3376                           ;psect for function _set_TimeoutCleared
  3377  0AD2                     _set_TimeoutCleared:	
  3378                           
  3379                           ;Main_B1.c: 282: myMain.Timeout = 0;
  3380                           
  3381                           ;incstack = 0
  3382                           ; Regs used in _set_TimeoutCleared: [status,2]
  3383  0AD2  1283               	bcf	3,5	;RP0=0, select bank0
  3384  0AD3  1303               	bcf	3,6	;RP1=0, select bank0
  3385  0AD4  1127               	bcf	_myMain+2,2
  3386                           
  3387                           ;Main_B1.c: 283: myMain.Timeout_Counter = 0;
  3388  0AD5  01A8               	clrf	_myMain+3
  3389  0AD6  01A9               	clrf	_myMain+4
  3390  0AD7  0008               	return
  3391  0AD8                     __end_of_set_TimeoutCleared:	
  3392                           
  3393                           	psect	text9
  3394  0BB9                     __ptext9:	
  3395 ;; *************** function _Timeout_Counter *****************
  3396 ;; Defined at:
  3397 ;;		line 272 in file "../src/Main_B1.c"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;		None
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;		None
  3402 ;; Return value:  Size  Location     Type
  3403 ;;		None               void
  3404 ;; Registers used:
  3405 ;;		wreg, status,2
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3411 ;;      Params:         0       0       0       0
  3412 ;;      Locals:         0       0       0       0
  3413 ;;      Temps:          0       0       0       0
  3414 ;;      Totals:         0       0       0       0
  3415 ;;Total ram usage:        0 bytes
  3416 ;; Hardware stack levels used:    1
  3417 ;; Hardware stack levels required when called:    2
  3418 ;; This function calls:
  3419 ;;		Nothing
  3420 ;; This function is called by:
  3421 ;;		_getAD
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425                           
  3426                           ;psect for function _Timeout_Counter
  3427  0BB9                     _Timeout_Counter:	
  3428                           
  3429                           ;Main_B1.c: 273: myMain.Timeout_Counter++;
  3430                           
  3431                           ;incstack = 0
  3432                           ; Regs used in _Timeout_Counter: [wreg+status,2]
  3433  0BB9  3001               	movlw	1
  3434  0BBA  1283               	bcf	3,5	;RP0=0, select bank0
  3435  0BBB  1303               	bcf	3,6	;RP1=0, select bank0
  3436  0BBC  07A8               	addwf	_myMain+3,f
  3437  0BBD  1803               	skipnc
  3438  0BBE  0AA9               	incf	_myMain+4,f
  3439  0BBF  3000               	movlw	0
  3440  0BC0  07A9               	addwf	_myMain+4,f
  3441                           
  3442                           ;Main_B1.c: 274: if (myMain.Timeout_Counter == 25000) {
  3443  0BC1  3061               	movlw	97
  3444  0BC2  0629               	xorwf	_myMain+4,w
  3445  0BC3  1D03               	skipz
  3446  0BC4  2BC7               	goto	u5135
  3447  0BC5  30A8               	movlw	168
  3448  0BC6  0628               	xorwf	_myMain+3,w
  3449  0BC7                     u5135:	
  3450  0BC7  1D03               	skipz
  3451  0BC8  0008               	return
  3452                           
  3453                           ;Main_B1.c: 275: myMain.Timeout_Counter = 0;
  3454  0BC9  01A8               	clrf	_myMain+3
  3455  0BCA  01A9               	clrf	_myMain+4
  3456                           
  3457                           ;Main_B1.c: 276: myMain.Timeout = 1;
  3458  0BCB  1527               	bsf	_myMain+2,2
  3459  0BCC  0008               	return
  3460  0BCD                     __end_of_Timeout_Counter:	
  3461                           
  3462                           	psect	text10
  3463  0B84                     __ptext10:	
  3464 ;; *************** function _WDT_Main *****************
  3465 ;; Defined at:
  3466 ;;		line 1116 in file "../src/MCU_B1.c"
  3467 ;; Parameters:    Size  Location     Type
  3468 ;;		None
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;		None
  3471 ;; Return value:  Size  Location     Type
  3472 ;;		None               void
  3473 ;; Registers used:
  3474 ;;		wreg, status,2, status,0, pclath, cstack
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3480 ;;      Params:         0       0       0       0
  3481 ;;      Locals:         0       0       0       0
  3482 ;;      Temps:          1       0       0       0
  3483 ;;      Totals:         1       0       0       0
  3484 ;;Total ram usage:        1 bytes
  3485 ;; Hardware stack levels used:    1
  3486 ;; Hardware stack levels required when called:    3
  3487 ;; This function calls:
  3488 ;;		_WDT_Clearing
  3489 ;; This function is called by:
  3490 ;;		_main
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493                           
  3494                           
  3495                           ;psect for function _WDT_Main
  3496  0B84                     _WDT_Main:	
  3497                           
  3498                           ;MCU_B1.c: 1117: if (WDT.Enable == 1) {
  3499                           
  3500                           ;incstack = 0
  3501                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  3502  0B84  1283               	bcf	3,5	;RP0=0, select bank0
  3503  0B85  1303               	bcf	3,6	;RP1=0, select bank0
  3504  0B86  1C35               	btfss	_WDT,0
  3505  0B87  0008               	return
  3506                           
  3507                           ;MCU_B1.c: 1118: if (WDT.Timer-- > 0) {
  3508  0B88  3001               	movlw	1
  3509  0B89  02B6               	subwf	_WDT+1,f
  3510  0B8A  0836               	movf	_WDT+1,w
  3511  0B8B  3AFF               	xorlw	255
  3512  0B8C  1903               	skipnz
  3513  0B8D  0008               	return
  3514                           
  3515                           ;MCU_B1.c: 1119: WDT.Timer = 100;
  3516  0B8E  3064               	movlw	100
  3517  0B8F  00F4               	movwf	??_WDT_Main
  3518  0B90  0874               	movf	??_WDT_Main,w
  3519  0B91  00B6               	movwf	_WDT+1
  3520                           
  3521                           ;MCU_B1.c: 1120: WDT_Clearing();
  3522  0B92  118A  2002         	fcall	_WDT_Clearing
  3523  0B94  0008               	return
  3524  0B95                     __end_of_WDT_Main:	
  3525                           
  3526                           	psect	text11
  3527  0002                     __ptext11:	
  3528 ;; *************** function _WDT_Clearing *****************
  3529 ;; Defined at:
  3530 ;;		line 1126 in file "../src/MCU_B1.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;		None
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;		None
  3535 ;; Return value:  Size  Location     Type
  3536 ;;		None               void
  3537 ;; Registers used:
  3538 ;;		None
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3544 ;;      Params:         0       0       0       0
  3545 ;;      Locals:         0       0       0       0
  3546 ;;      Temps:          0       0       0       0
  3547 ;;      Totals:         0       0       0       0
  3548 ;;Total ram usage:        0 bytes
  3549 ;; Hardware stack levels used:    1
  3550 ;; Hardware stack levels required when called:    2
  3551 ;; This function calls:
  3552 ;;		Nothing
  3553 ;; This function is called by:
  3554 ;;		_WDT_Main
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           
  3559                           ;psect for function _WDT_Clearing
  3560  0002                     _WDT_Clearing:	
  3561                           
  3562                           ;incstack = 0
  3563                           ; Regs used in _WDT_Clearing: []
  3564  0002  0064               	clrwdt	;# 
  3565  0003  0008               	return
  3566  0004                     __end_of_WDT_Clearing:	
  3567                           
  3568                           	psect	text12
  3569  0AB2                     __ptext12:	
  3570 ;; *************** function _Temp_Main *****************
  3571 ;; Defined at:
  3572 ;;		line 57 in file "../src/OverTemperature_B1.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;		None
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;		None
  3577 ;; Return value:  Size  Location     Type
  3578 ;;		None               void
  3579 ;; Registers used:
  3580 ;;		wreg, status,2, status,0, pclath, cstack
  3581 ;; Tracked objects:
  3582 ;;		On entry : 0/0
  3583 ;;		On exit  : 0/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3586 ;;      Params:         0       0       0       0
  3587 ;;      Locals:         0       0       0       0
  3588 ;;      Temps:          0       0       0       0
  3589 ;;      Totals:         0       0       0       0
  3590 ;;Total ram usage:        0 bytes
  3591 ;; Hardware stack levels used:    1
  3592 ;; Hardware stack levels required when called:    4
  3593 ;; This function calls:
  3594 ;;		_setTemp_Main
  3595 ;; This function is called by:
  3596 ;;		_main
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           
  3601                           ;psect for function _Temp_Main
  3602  0AB2                     _Temp_Main:	
  3603                           
  3604                           ;OverTemperature_B1.c: 59: setTemp_Main();
  3605                           
  3606                           ;incstack = 0
  3607                           ; Regs used in _Temp_Main: [wreg+status,2+status,0+pclath+cstack]
  3608  0AB2  118A  2709         	fcall	_setTemp_Main
  3609  0AB4  0008               	return
  3610  0AB5                     __end_of_Temp_Main:	
  3611                           
  3612                           	psect	text13
  3613  0709                     __ptext13:	
  3614 ;; *************** function _setTemp_Main *****************
  3615 ;; Defined at:
  3616 ;;		line 64 in file "../src/OverTemperature_B1.c"
  3617 ;; Parameters:    Size  Location     Type
  3618 ;;		None
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;  AD              1   10[BANK0 ] unsigned char 
  3621 ;;  DangerValue     1    9[BANK0 ] unsigned char 
  3622 ;;  SafeValue       1    8[BANK0 ] unsigned char 
  3623 ;;  TempGO          1    7[BANK0 ] unsigned char 
  3624 ;;  error           1    6[BANK0 ] unsigned char 
  3625 ;; Return value:  Size  Location     Type
  3626 ;;		None               void
  3627 ;; Registers used:
  3628 ;;		wreg, status,2, status,0, pclath, cstack
  3629 ;; Tracked objects:
  3630 ;;		On entry : 0/0
  3631 ;;		On exit  : 0/0
  3632 ;;		Unchanged: 0/0
  3633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3634 ;;      Params:         0       0       0       0
  3635 ;;      Locals:         0       5       0       0
  3636 ;;      Temps:          1       0       0       0
  3637 ;;      Totals:         1       5       0       0
  3638 ;;Total ram usage:        6 bytes
  3639 ;; Hardware stack levels used:    1
  3640 ;; Hardware stack levels required when called:    3
  3641 ;; This function calls:
  3642 ;;		_getMain_All_Error_Status
  3643 ;;		_getMain_All_LightsStatus
  3644 ;; This function is called by:
  3645 ;;		_Temp_Main
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           
  3650                           ;psect for function _setTemp_Main
  3651  0709                     _setTemp_Main:	
  3652                           
  3653                           ;OverTemperature_B1.c: 65: char error = getMain_All_Error_Status(0);
  3654                           
  3655                           ;incstack = 0
  3656                           ; Regs used in _setTemp_Main: [wreg+status,2+status,0+pclath+cstack]
  3657  0709  3000               	movlw	0
  3658  070A  158A  25BA  118A   	fcall	_getMain_All_Error_Status
  3659  070D  00F5               	movwf	??_setTemp_Main
  3660  070E  0875               	movf	??_setTemp_Main,w
  3661  070F  1283               	bcf	3,5	;RP0=0, select bank0
  3662  0710  1303               	bcf	3,6	;RP1=0, select bank0
  3663  0711  00D3               	movwf	setTemp_Main@error
  3664                           
  3665                           ;OverTemperature_B1.c: 66: ADtype SafeValue = 0, DangerValue = 0, AD;
  3666  0712  01D5               	clrf	setTemp_Main@SafeValue
  3667  0713  01D6               	clrf	setTemp_Main@DangerValue
  3668                           
  3669                           ;OverTemperature_B1.c: 67: char TempGO = getMain_All_LightsStatus();
  3670  0714  158A  230F  118A   	fcall	_getMain_All_LightsStatus
  3671  0717  00F5               	movwf	??_setTemp_Main
  3672  0718  0875               	movf	??_setTemp_Main,w
  3673  0719  1283               	bcf	3,5	;RP0=0, select bank0
  3674  071A  1303               	bcf	3,6	;RP1=0, select bank0
  3675  071B  00D4               	movwf	setTemp_Main@TempGO
  3676                           
  3677                           ;OverTemperature_B1.c: 69: if (Temp.Enable == 1) {
  3678  071C  1C39               	btfss	_Temp,0
  3679  071D  2F80               	goto	l820
  3680                           
  3681                           ;OverTemperature_B1.c: 77: if (Temp.ADtoGO == 0) {
  3682  071E  1939               	btfsc	_Temp,2
  3683  071F  2F3C               	goto	l3513
  3684                           
  3685                           ;OverTemperature_B1.c: 78: if ((TempGO == 1 && Temp.ERROR == 0) || Temp.ERROR == 1) {
  3686  0720  0854               	movf	setTemp_Main@TempGO,w
  3687  0721  3A01               	xorlw	1
  3688  0722  1D03               	skipz
  3689  0723  2F26               	goto	l826
  3690  0724  1CB9               	btfss	_Temp,1
  3691  0725  2F28               	goto	l3505
  3692  0726                     l826:	
  3693  0726  1CB9               	btfss	_Temp,1
  3694  0727  2F39               	goto	l3511
  3695  0728                     l3505:	
  3696                           
  3697                           ;OverTemperature_B1.c: 79: Temp.Time++;
  3698  0728  3001               	movlw	1
  3699  0729  07BA               	addwf	_Temp+1,f
  3700  072A  1803               	skipnc
  3701  072B  0ABB               	incf	_Temp+2,f
  3702  072C  3000               	movlw	0
  3703  072D  07BB               	addwf	_Temp+2,f
  3704                           
  3705                           ;OverTemperature_B1.c: 80: if (Temp.Time >= (5000 / 20)) {
  3706  072E  3000               	movlw	0
  3707  072F  023B               	subwf	_Temp+2,w
  3708  0730  30FA               	movlw	250
  3709  0731  1903               	skipnz
  3710  0732  023A               	subwf	_Temp+1,w
  3711  0733  1C03               	skipc
  3712  0734  0008               	return
  3713                           
  3714                           ;OverTemperature_B1.c: 81: Temp.Time = 0;
  3715  0735  01BA               	clrf	_Temp+1
  3716  0736  01BB               	clrf	_Temp+2
  3717                           
  3718                           ;OverTemperature_B1.c: 82: Temp.ADtoGO = 1;
  3719  0737  1539               	bsf	_Temp,2
  3720                           
  3721                           ;OverTemperature_B1.c: 83: }
  3722                           ;OverTemperature_B1.c: 84: } else {
  3723  0738  0008               	return
  3724  0739                     l3511:	
  3725                           
  3726                           ;OverTemperature_B1.c: 85: Temp.Time = 0;
  3727  0739  01BA               	clrf	_Temp+1
  3728  073A  01BB               	clrf	_Temp+2
  3729                           
  3730                           ;OverTemperature_B1.c: 86: }
  3731                           ;OverTemperature_B1.c: 87: } else {
  3732  073B  0008               	return
  3733  073C                     l3513:	
  3734                           
  3735                           ;OverTemperature_B1.c: 88: Temp.Time++;
  3736  073C  3001               	movlw	1
  3737  073D  07BA               	addwf	_Temp+1,f
  3738  073E  1803               	skipnc
  3739  073F  0ABB               	incf	_Temp+2,f
  3740  0740  3000               	movlw	0
  3741  0741  07BB               	addwf	_Temp+2,f
  3742                           
  3743                           ;OverTemperature_B1.c: 89: if (Temp.Time >= (100 / 20)) {
  3744  0742  3000               	movlw	0
  3745  0743  023B               	subwf	_Temp+2,w
  3746  0744  3005               	movlw	5
  3747  0745  1903               	skipnz
  3748  0746  023A               	subwf	_Temp+1,w
  3749  0747  1C03               	skipc
  3750  0748  0008               	return
  3751                           
  3752                           ;OverTemperature_B1.c: 90: Temp.Time = 0;
  3753  0749  01BA               	clrf	_Temp+1
  3754  074A  01BB               	clrf	_Temp+2
  3755                           
  3756                           ;OverTemperature_B1.c: 95: if (Temp.ADV > 0) {
  3757  074B  083F               	movf	_Temp+6,w
  3758  074C  1903               	btfsc	3,2
  3759  074D  2F7C               	goto	l831
  3760                           
  3761                           ;OverTemperature_B1.c: 96: Temp.ADtoGO = 0;
  3762  074E  1139               	bcf	_Temp,2
  3763                           
  3764                           ;OverTemperature_B1.c: 97: AD = Temp.ADV;
  3765  074F  083F               	movf	_Temp+6,w
  3766  0750  00F5               	movwf	??_setTemp_Main
  3767  0751  0875               	movf	??_setTemp_Main,w
  3768  0752  00D7               	movwf	setTemp_Main@AD
  3769                           
  3770                           ;OverTemperature_B1.c: 106: SafeValue = 0x7a;
  3771  0753  307A               	movlw	122
  3772  0754  00F5               	movwf	??_setTemp_Main
  3773  0755  0875               	movf	??_setTemp_Main,w
  3774  0756  00D5               	movwf	setTemp_Main@SafeValue
  3775                           
  3776                           ;OverTemperature_B1.c: 107: DangerValue = 0x7d;
  3777  0757  307D               	movlw	125
  3778  0758  00F5               	movwf	??_setTemp_Main
  3779  0759  0875               	movf	??_setTemp_Main,w
  3780  075A  00D6               	movwf	setTemp_Main@DangerValue
  3781                           
  3782                           ;OverTemperature_B1.c: 119: if (Temp.ERROR == 1) {
  3783  075B  1CB9               	btfss	_Temp,1
  3784  075C  2F6C               	goto	l3537
  3785                           
  3786                           ;OverTemperature_B1.c: 120: if (AD >= SafeValue) {
  3787  075D  0855               	movf	setTemp_Main@SafeValue,w
  3788  075E  0257               	subwf	setTemp_Main@AD,w
  3789  075F  1C03               	skipc
  3790  0760  2F7B               	goto	l3547
  3791                           
  3792                           ;OverTemperature_B1.c: 121: Temp.Count++;
  3793  0761  3001               	movlw	1
  3794  0762  00F5               	movwf	??_setTemp_Main
  3795  0763  0875               	movf	??_setTemp_Main,w
  3796  0764  07BC               	addwf	_Temp+3,f
  3797                           
  3798                           ;OverTemperature_B1.c: 122: if (Temp.Count >= 3) {
  3799  0765  3003               	movlw	3
  3800  0766  023C               	subwf	_Temp+3,w
  3801  0767  1C03               	skipc
  3802  0768  2F7C               	goto	l831
  3803                           
  3804                           ;OverTemperature_B1.c: 123: Temp.Count = 0;
  3805  0769  01BC               	clrf	_Temp+3
  3806                           
  3807                           ;OverTemperature_B1.c: 124: Temp.ERROR = 0;
  3808  076A  10B9               	bcf	_Temp,1
  3809                           
  3810                           ;OverTemperature_B1.c: 126: }
  3811                           ;OverTemperature_B1.c: 127: } else {
  3812                           
  3813                           ;OverTemperature_B1.c: 125: ;;
  3814  076B  2F7C               	goto	l831
  3815  076C                     l3537:	
  3816                           ;OverTemperature_B1.c: 129: }
  3817                           ;OverTemperature_B1.c: 130: } else {
  3818                           
  3819                           ;OverTemperature_B1.c: 128: Temp.Count = 0;
  3820                           
  3821                           
  3822                           ;OverTemperature_B1.c: 131: if (AD <= DangerValue) {
  3823  076C  0857               	movf	setTemp_Main@AD,w
  3824  076D  0256               	subwf	setTemp_Main@DangerValue,w
  3825  076E  1C03               	skipc
  3826  076F  2F7B               	goto	l3547
  3827                           
  3828                           ;OverTemperature_B1.c: 132: Temp.Count++;
  3829  0770  3001               	movlw	1
  3830  0771  00F5               	movwf	??_setTemp_Main
  3831  0772  0875               	movf	??_setTemp_Main,w
  3832  0773  07BC               	addwf	_Temp+3,f
  3833                           
  3834                           ;OverTemperature_B1.c: 133: if (Temp.Count >= 3) {
  3835  0774  3003               	movlw	3
  3836  0775  023C               	subwf	_Temp+3,w
  3837  0776  1C03               	skipc
  3838  0777  2F7C               	goto	l831
  3839                           
  3840                           ;OverTemperature_B1.c: 134: Temp.Count = 0;
  3841  0778  01BC               	clrf	_Temp+3
  3842                           
  3843                           ;OverTemperature_B1.c: 135: Temp.ERROR = 1;
  3844  0779  14B9               	bsf	_Temp,1
  3845                           
  3846                           ;OverTemperature_B1.c: 136: }
  3847                           ;OverTemperature_B1.c: 137: } else {
  3848  077A  2F7C               	goto	l831
  3849  077B                     l3547:	
  3850                           
  3851                           ;OverTemperature_B1.c: 138: Temp.Count = 0;
  3852  077B  01BC               	clrf	_Temp+3
  3853  077C                     l831:	
  3854                           ;OverTemperature_B1.c: 139: }
  3855                           ;OverTemperature_B1.c: 140: }
  3856                           ;OverTemperature_B1.c: 141: ;;
  3857                           ;OverTemperature_B1.c: 142: ;;
  3858                           
  3859                           
  3860                           ;OverTemperature_B1.c: 158: }
  3861                           ;OverTemperature_B1.c: 159: Temp.ADH[0] = 0;
  3862  077C  01BD               	clrf	_Temp+4
  3863                           
  3864                           ;OverTemperature_B1.c: 160: Temp.ADH[1] = 0;
  3865  077D  01BE               	clrf	_Temp+5
  3866                           
  3867                           ;OverTemperature_B1.c: 161: Temp.ADV = 0;
  3868  077E  01BF               	clrf	_Temp+6
  3869                           
  3870                           ;OverTemperature_B1.c: 162: }
  3871                           ;OverTemperature_B1.c: 163: }
  3872                           ;OverTemperature_B1.c: 166: } else {
  3873  077F  0008               	return
  3874  0780                     l820:	
  3875                           
  3876                           ;OverTemperature_B1.c: 167: if (myMain.PowerON == 1) {
  3877  0780  1C25               	btfss	_myMain,0
  3878  0781  0008               	return
  3879                           
  3880                           ;OverTemperature_B1.c: 168: Temp.Enable = 1;
  3881  0782  1439               	bsf	_Temp,0
  3882  0783  0008               	return
  3883  0784                     __end_of_setTemp_Main:	
  3884                           
  3885                           	psect	text14
  3886  0AAF                     __ptext14:	
  3887 ;; *************** function _Temp_Initialization *****************
  3888 ;; Defined at:
  3889 ;;		line 8 in file "../src/OverTemperature_B1.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;		None
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;		None
  3894 ;; Return value:  Size  Location     Type
  3895 ;;		None               void
  3896 ;; Registers used:
  3897 ;;		status,2, status,0, pclath, cstack
  3898 ;; Tracked objects:
  3899 ;;		On entry : 0/0
  3900 ;;		On exit  : 0/0
  3901 ;;		Unchanged: 0/0
  3902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3903 ;;      Params:         0       0       0       0
  3904 ;;      Locals:         0       0       0       0
  3905 ;;      Temps:          0       0       0       0
  3906 ;;      Totals:         0       0       0       0
  3907 ;;Total ram usage:        0 bytes
  3908 ;; Hardware stack levels used:    1
  3909 ;; Hardware stack levels required when called:    3
  3910 ;; This function calls:
  3911 ;;		_setTemp_Initialization
  3912 ;; This function is called by:
  3913 ;;		_main
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917                           
  3918                           ;psect for function _Temp_Initialization
  3919  0AAF                     _Temp_Initialization:	
  3920                           
  3921                           ;OverTemperature_B1.c: 10: setTemp_Initialization();
  3922                           
  3923                           ;incstack = 0
  3924                           ; Regs used in _Temp_Initialization: [status,2+status,0+pclath+cstack]
  3925  0AAF  158A  22A1         	fcall	_setTemp_Initialization
  3926  0AB1  0008               	return
  3927  0AB2                     __end_of_Temp_Initialization:	
  3928                           
  3929                           	psect	text15
  3930  0AA1                     __ptext15:	
  3931 ;; *************** function _setTemp_Initialization *****************
  3932 ;; Defined at:
  3933 ;;		line 52 in file "../src/OverTemperature_B1.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;		None
  3936 ;; Auto vars:     Size  Location     Type
  3937 ;;		None
  3938 ;; Return value:  Size  Location     Type
  3939 ;;		None               void
  3940 ;; Registers used:
  3941 ;;		None
  3942 ;; Tracked objects:
  3943 ;;		On entry : 0/0
  3944 ;;		On exit  : 0/0
  3945 ;;		Unchanged: 0/0
  3946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3947 ;;      Params:         0       0       0       0
  3948 ;;      Locals:         0       0       0       0
  3949 ;;      Temps:          0       0       0       0
  3950 ;;      Totals:         0       0       0       0
  3951 ;;Total ram usage:        0 bytes
  3952 ;; Hardware stack levels used:    1
  3953 ;; Hardware stack levels required when called:    2
  3954 ;; This function calls:
  3955 ;;		Nothing
  3956 ;; This function is called by:
  3957 ;;		_Temp_Initialization
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           
  3962                           ;psect for function _setTemp_Initialization
  3963  0AA1                     _setTemp_Initialization:	
  3964                           
  3965                           ;incstack = 0
  3966                           ; Regs used in _setTemp_Initialization: []
  3967  0AA1  0008               	return
  3968  0AA2                     __end_of_setTemp_Initialization:	
  3969                           
  3970                           	psect	text16
  3971  0AAC                     __ptext16:	
  3972 ;; *************** function _SYSC_Main *****************
  3973 ;; Defined at:
  3974 ;;		line 17 in file "../src/SYSC_B1.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;		None
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;		None
  3979 ;; Return value:  Size  Location     Type
  3980 ;;		None               void
  3981 ;; Registers used:
  3982 ;;		wreg, status,2, status,0, pclath, cstack
  3983 ;; Tracked objects:
  3984 ;;		On entry : 0/0
  3985 ;;		On exit  : 0/0
  3986 ;;		Unchanged: 0/0
  3987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3988 ;;      Params:         0       0       0       0
  3989 ;;      Locals:         0       0       0       0
  3990 ;;      Temps:          0       0       0       0
  3991 ;;      Totals:         0       0       0       0
  3992 ;;Total ram usage:        0 bytes
  3993 ;; Hardware stack levels used:    1
  3994 ;; Hardware stack levels required when called:    4
  3995 ;; This function calls:
  3996 ;;		_setSYSC_Main
  3997 ;; This function is called by:
  3998 ;;		_main
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002                           
  4003                           ;psect for function _SYSC_Main
  4004  0AAC                     _SYSC_Main:	
  4005                           
  4006                           ;SYSC_B1.c: 19: setSYSC_Main();
  4007                           
  4008                           ;incstack = 0
  4009                           ; Regs used in _SYSC_Main: [wreg+status,2+status,0+pclath+cstack]
  4010  0AAC  158A  2638         	fcall	_setSYSC_Main
  4011  0AAE  0008               	return
  4012  0AAF                     __end_of_SYSC_Main:	
  4013                           
  4014                           	psect	text17
  4015  0E38                     __ptext17:	
  4016 ;; *************** function _setSYSC_Main *****************
  4017 ;; Defined at:
  4018 ;;		line 23 in file "../src/SYSC_B1.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;		None
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;		None
  4023 ;; Return value:  Size  Location     Type
  4024 ;;		None               void
  4025 ;; Registers used:
  4026 ;;		wreg, status,2, status,0, pclath, cstack
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4032 ;;      Params:         0       0       0       0
  4033 ;;      Locals:         0       0       0       0
  4034 ;;      Temps:          0       0       0       0
  4035 ;;      Totals:         0       0       0       0
  4036 ;;Total ram usage:        0 bytes
  4037 ;; Hardware stack levels used:    1
  4038 ;; Hardware stack levels required when called:    3
  4039 ;; This function calls:
  4040 ;;		_getMain_All_Error_Status
  4041 ;; This function is called by:
  4042 ;;		_SYSC_Main
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           
  4047                           ;psect for function _setSYSC_Main
  4048  0E38                     _setSYSC_Main:	
  4049                           
  4050                           ;SYSC_B1.c: 25: if (SYSC.Enable == 1) {
  4051                           
  4052                           ;incstack = 0
  4053                           ; Regs used in _setSYSC_Main: [wreg+status,2+status,0+pclath+cstack]
  4054  0E38  1283               	bcf	3,5	;RP0=0, select bank0
  4055  0E39  1303               	bcf	3,6	;RP1=0, select bank0
  4056  0E3A  1C20               	btfss	_SYSC,0
  4057  0E3B  0008               	return
  4058                           
  4059                           ;SYSC_B1.c: 26: if (SYSC.ERROR == 0) {
  4060  0E3C  18A0               	btfsc	_SYSC,1
  4061  0E3D  2E4F               	goto	l3563
  4062                           
  4063                           ;SYSC_B1.c: 27: SYSC.Time++;
  4064  0E3E  3001               	movlw	1
  4065  0E3F  07A1               	addwf	_SYSC+1,f
  4066  0E40  1803               	skipnc
  4067  0E41  0AA2               	incf	_SYSC+2,f
  4068  0E42  3000               	movlw	0
  4069  0E43  07A2               	addwf	_SYSC+2,f
  4070                           
  4071                           ;SYSC_B1.c: 28: if (SYSC.Time >= (500 / 20)) {
  4072  0E44  3000               	movlw	0
  4073  0E45  0222               	subwf	_SYSC+2,w
  4074  0E46  3019               	movlw	25
  4075  0E47  1903               	skipnz
  4076  0E48  0221               	subwf	_SYSC+1,w
  4077  0E49  1C03               	skipc
  4078  0E4A  0008               	return
  4079                           
  4080                           ;SYSC_B1.c: 29: SYSC.Time = 0;
  4081  0E4B  01A1               	clrf	_SYSC+1
  4082  0E4C  01A2               	clrf	_SYSC+2
  4083                           
  4084                           ;SYSC_B1.c: 30: SYSC.ERROR = 1;
  4085  0E4D  14A0               	bsf	_SYSC,1
  4086                           
  4087                           ;SYSC_B1.c: 31: }
  4088                           ;SYSC_B1.c: 32: } else {
  4089  0E4E  0008               	return
  4090  0E4F                     l3563:	
  4091                           
  4092                           ;SYSC_B1.c: 33: if (getMain_All_Error_Status(1) == 0) {
  4093  0E4F  3001               	movlw	1
  4094  0E50  158A  25BA  158A   	fcall	_getMain_All_Error_Status
  4095  0E53  3800               	iorlw	0
  4096  0E54  1D03               	skipz
  4097  0E55  0008               	return
  4098                           
  4099                           ;SYSC_B1.c: 34: SYSC.Time++;
  4100  0E56  3001               	movlw	1
  4101  0E57  1283               	bcf	3,5	;RP0=0, select bank0
  4102  0E58  1303               	bcf	3,6	;RP1=0, select bank0
  4103  0E59  07A1               	addwf	_SYSC+1,f
  4104  0E5A  1803               	skipnc
  4105  0E5B  0AA2               	incf	_SYSC+2,f
  4106  0E5C  3000               	movlw	0
  4107  0E5D  07A2               	addwf	_SYSC+2,f
  4108                           
  4109                           ;SYSC_B1.c: 35: if (SYSC.Time >= (500 / 20)) {
  4110  0E5E  3000               	movlw	0
  4111  0E5F  0222               	subwf	_SYSC+2,w
  4112  0E60  3019               	movlw	25
  4113  0E61  1903               	skipnz
  4114  0E62  0221               	subwf	_SYSC+1,w
  4115  0E63  1C03               	skipc
  4116  0E64  2E6A               	goto	l3569
  4117                           
  4118                           ;SYSC_B1.c: 36: SYSC.Time = 0;
  4119  0E65  01A1               	clrf	_SYSC+1
  4120  0E66  01A2               	clrf	_SYSC+2
  4121                           
  4122                           ;SYSC_B1.c: 37: SYSC.Counter = 0;
  4123  0E67  01A3               	clrf	_SYSC+3
  4124  0E68  01A4               	clrf	_SYSC+4
  4125                           
  4126                           ;SYSC_B1.c: 38: } else {
  4127  0E69  0008               	return
  4128  0E6A                     l3569:	
  4129                           
  4130                           ;SYSC_B1.c: 39: SYSC.Counter++;
  4131  0E6A  3001               	movlw	1
  4132  0E6B  07A3               	addwf	_SYSC+3,f
  4133  0E6C  1803               	skipnc
  4134  0E6D  0AA4               	incf	_SYSC+4,f
  4135  0E6E  3000               	movlw	0
  4136  0E6F  07A4               	addwf	_SYSC+4,f
  4137                           
  4138                           ;SYSC_B1.c: 40: if (SYSC.Counter == (10000 / 20)) {
  4139  0E70  3001               	movlw	1
  4140  0E71  0624               	xorwf	_SYSC+4,w
  4141  0E72  1D03               	skipz
  4142  0E73  2E76               	goto	u3355
  4143  0E74  30F4               	movlw	244
  4144  0E75  0623               	xorwf	_SYSC+3,w
  4145  0E76                     u3355:	
  4146  0E76  1D03               	skipz
  4147  0E77  0008               	return
  4148                           
  4149                           ;SYSC_B1.c: 41: SYSC.Counter = 0;
  4150  0E78  01A3               	clrf	_SYSC+3
  4151  0E79  01A4               	clrf	_SYSC+4
  4152                           
  4153                           ;SYSC_B1.c: 42: SYSC.ERROR = 0;
  4154  0E7A  10A0               	bcf	_SYSC,1
  4155  0E7B  0008               	return
  4156  0E7C                     __end_of_setSYSC_Main:	
  4157                           
  4158                           	psect	text18
  4159  0AA9                     __ptext18:	
  4160 ;; *************** function _SYSC_Initialization *****************
  4161 ;; Defined at:
  4162 ;;		line 7 in file "../src/SYSC_B1.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;		None
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;		None
  4167 ;; Return value:  Size  Location     Type
  4168 ;;		None               void
  4169 ;; Registers used:
  4170 ;;		status,2, status,0, pclath, cstack
  4171 ;; Tracked objects:
  4172 ;;		On entry : 0/0
  4173 ;;		On exit  : 0/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4176 ;;      Params:         0       0       0       0
  4177 ;;      Locals:         0       0       0       0
  4178 ;;      Temps:          0       0       0       0
  4179 ;;      Totals:         0       0       0       0
  4180 ;;Total ram usage:        0 bytes
  4181 ;; Hardware stack levels used:    1
  4182 ;; Hardware stack levels required when called:    3
  4183 ;; This function calls:
  4184 ;;		_setSYSC_Initialization
  4185 ;; This function is called by:
  4186 ;;		_main
  4187 ;; This function uses a non-reentrant model
  4188 ;;
  4189                           
  4190                           
  4191                           ;psect for function _SYSC_Initialization
  4192  0AA9                     _SYSC_Initialization:	
  4193                           
  4194                           ;SYSC_B1.c: 9: setSYSC_Initialization();
  4195                           
  4196                           ;incstack = 0
  4197                           ; Regs used in _SYSC_Initialization: [status,2+status,0+pclath+cstack]
  4198  0AA9  158A  22BD         	fcall	_setSYSC_Initialization
  4199  0AAB  0008               	return
  4200  0AAC                     __end_of_SYSC_Initialization:	
  4201                           
  4202                           	psect	text19
  4203  0ABD                     __ptext19:	
  4204 ;; *************** function _setSYSC_Initialization *****************
  4205 ;; Defined at:
  4206 ;;		line 13 in file "../src/SYSC_B1.c"
  4207 ;; Parameters:    Size  Location     Type
  4208 ;;		None
  4209 ;; Auto vars:     Size  Location     Type
  4210 ;;		None
  4211 ;; Return value:  Size  Location     Type
  4212 ;;		None               void
  4213 ;; Registers used:
  4214 ;;		None
  4215 ;; Tracked objects:
  4216 ;;		On entry : 0/0
  4217 ;;		On exit  : 0/0
  4218 ;;		Unchanged: 0/0
  4219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4220 ;;      Params:         0       0       0       0
  4221 ;;      Locals:         0       0       0       0
  4222 ;;      Temps:          0       0       0       0
  4223 ;;      Totals:         0       0       0       0
  4224 ;;Total ram usage:        0 bytes
  4225 ;; Hardware stack levels used:    1
  4226 ;; Hardware stack levels required when called:    2
  4227 ;; This function calls:
  4228 ;;		Nothing
  4229 ;; This function is called by:
  4230 ;;		_SYSC_Initialization
  4231 ;; This function uses a non-reentrant model
  4232 ;;
  4233                           
  4234                           
  4235                           ;psect for function _setSYSC_Initialization
  4236  0ABD                     _setSYSC_Initialization:	
  4237                           
  4238                           ;SYSC_B1.c: 14: SYSC.Enable = 1;
  4239                           
  4240                           ;incstack = 0
  4241                           ; Regs used in _setSYSC_Initialization: []
  4242  0ABD  1283               	bcf	3,5	;RP0=0, select bank0
  4243  0ABE  1303               	bcf	3,6	;RP1=0, select bank0
  4244  0ABF  1420               	bsf	_SYSC,0
  4245  0AC0  0008               	return
  4246  0AC1                     __end_of_setSYSC_Initialization:	
  4247                           
  4248                           	psect	text20
  4249  0026                     __ptext20:	
  4250 ;; *************** function _PIR_Main *****************
  4251 ;; Defined at:
  4252 ;;		line 13 in file "../src/PIR_B1.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;		None
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;  LightsStatus    1   17[BANK0 ] unsigned char 
  4257 ;;  TriggerValue    1   16[BANK0 ] unsigned char 
  4258 ;;  Enable_Switc    1   13[BANK0 ] unsigned char 
  4259 ;;  cds             1   12[BANK0 ] unsigned char 
  4260 ;;  error           1   11[BANK0 ] unsigned char 
  4261 ;; Return value:  Size  Location     Type
  4262 ;;		None               void
  4263 ;; Registers used:
  4264 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4265 ;; Tracked objects:
  4266 ;;		On entry : 0/0
  4267 ;;		On exit  : 0/0
  4268 ;;		Unchanged: 0/0
  4269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4270 ;;      Params:         0       0       0       0
  4271 ;;      Locals:         0       7       0       0
  4272 ;;      Temps:          0       5       0       0
  4273 ;;      Totals:         0      12       0       0
  4274 ;;Total ram usage:       12 bytes
  4275 ;; Hardware stack levels used:    1
  4276 ;; Hardware stack levels required when called:    5
  4277 ;; This function calls:
  4278 ;;		_getCDS_Status
  4279 ;;		_getLights_Status
  4280 ;;		_getMain_All_Error_Status
  4281 ;;		_setLED
  4282 ;;		_setLights_SwOff
  4283 ;;		_setLights_SwOn
  4284 ;; This function is called by:
  4285 ;;		_main
  4286 ;; This function uses a non-reentrant model
  4287 ;;
  4288                           
  4289                           
  4290                           ;psect for function _PIR_Main
  4291  0026                     _PIR_Main:	
  4292                           
  4293                           ;PIR_B1.c: 14: char error = getMain_All_Error_Status(0);
  4294                           
  4295                           ;incstack = 0
  4296                           ; Regs used in _PIR_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4297  0026  3000               	movlw	0
  4298  0027  158A  25BA  118A   	fcall	_getMain_All_Error_Status
  4299  002A  1283               	bcf	3,5	;RP0=0, select bank0
  4300  002B  1303               	bcf	3,6	;RP1=0, select bank0
  4301  002C  00D3               	movwf	??_PIR_Main
  4302  002D  0853               	movf	??_PIR_Main,w
  4303  002E  00D8               	movwf	PIR_Main@error
  4304                           
  4305                           ;PIR_B1.c: 15: char cds = getCDS_Status();
  4306  002F  158A  22F6  118A   	fcall	_getCDS_Status
  4307  0032  1283               	bcf	3,5	;RP0=0, select bank0
  4308  0033  1303               	bcf	3,6	;RP1=0, select bank0
  4309  0034  00D3               	movwf	??_PIR_Main
  4310  0035  0853               	movf	??_PIR_Main,w
  4311  0036  00D9               	movwf	PIR_Main@cds
  4312                           
  4313                           ;PIR_B1.c: 16: char LightsStatus = 0;
  4314  0037  01DE               	clrf	PIR_Main@LightsStatus
  4315                           
  4316                           ;PIR_B1.c: 17: char Enable_Switch = 1;
  4317  0038  01DA               	clrf	PIR_Main@Enable_Switch
  4318  0039  0ADA               	incf	PIR_Main@Enable_Switch,f
  4319                           
  4320                           ;PIR_B1.c: 18: char TriggerValue = 0;
  4321  003A  01DD               	clrf	PIR_Main@TriggerValue
  4322                           
  4323                           ;PIR_B1.c: 25: LightsStatus = getLights_Status(1);
  4324  003B  3001               	movlw	1
  4325  003C  158A  2373  118A   	fcall	_getLights_Status
  4326  003F  1283               	bcf	3,5	;RP0=0, select bank0
  4327  0040  1303               	bcf	3,6	;RP1=0, select bank0
  4328  0041  00D3               	movwf	??_PIR_Main
  4329  0042  0853               	movf	??_PIR_Main,w
  4330  0043  00DE               	movwf	PIR_Main@LightsStatus
  4331                           
  4332                           ;PIR_B1.c: 35: if (_PIR.Enable == 1) {
  4333  0044  1683               	bsf	3,5	;RP0=1, select bank1
  4334  0045  1303               	bcf	3,6	;RP1=0, select bank1
  4335  0046  1C20               	btfss	__PIR^(0+128),0
  4336  0047  2A0F               	goto	l898
  4337                           
  4338                           ;PIR_B1.c: 36: if (error == 0) {
  4339  0048  1283               	bcf	3,5	;RP0=0, select bank0
  4340  0049  1303               	bcf	3,6	;RP1=0, select bank0
  4341  004A  08D8               	movf	PIR_Main@error,f
  4342  004B  1D03               	skipz
  4343  004C  288B               	goto	l899
  4344                           
  4345                           ;PIR_B1.c: 38: if (cds == 1 && Enable_Switch == 1) {
  4346  004D  0859               	movf	PIR_Main@cds,w
  4347  004E  3A01               	xorlw	1
  4348  004F  1D03               	skipz
  4349  0050  2859               	goto	l900
  4350  0051  085A               	movf	PIR_Main@Enable_Switch,w
  4351  0052  3A01               	xorlw	1
  4352  0053  1D03               	skipz
  4353  0054  2859               	goto	l900
  4354                           
  4355                           ;PIR_B1.c: 39: _PIR.Available = 1;
  4356  0055  1683               	bsf	3,5	;RP0=1, select bank1
  4357  0056  1303               	bcf	3,6	;RP1=0, select bank1
  4358  0057  17A0               	bsf	__PIR^(0+128),7
  4359                           
  4360                           ;PIR_B1.c: 40: } else {
  4361  0058  287B               	goto	l5125
  4362  0059                     l900:	
  4363                           
  4364                           ;PIR_B1.c: 41: _PIR.Available = 0;
  4365  0059  1683               	bsf	3,5	;RP0=1, select bank1
  4366  005A  1303               	bcf	3,6	;RP1=0, select bank1
  4367  005B  13A0               	bcf	__PIR^(0+128),7
  4368                           
  4369                           ;PIR_B1.c: 43: if (_PIR.OK == 1) {
  4370  005C  1DA0               	btfss	__PIR^(0+128),3
  4371  005D  287B               	goto	l5125
  4372                           
  4373                           ;PIR_B1.c: 45: setLED(1, 0);
  4374  005E  1283               	bcf	3,5	;RP0=0, select bank0
  4375  005F  1303               	bcf	3,6	;RP1=0, select bank0
  4376  0060  01CD               	clrf	setLED@command
  4377  0061  3001               	movlw	1
  4378  0062  158A  2735  118A   	fcall	_setLED
  4379                           
  4380                           ;PIR_B1.c: 46: setLED(2, 0);
  4381  0065  1283               	bcf	3,5	;RP0=0, select bank0
  4382  0066  1303               	bcf	3,6	;RP1=0, select bank0
  4383  0067  01CD               	clrf	setLED@command
  4384  0068  3002               	movlw	2
  4385  0069  158A  2735  118A   	fcall	_setLED
  4386                           
  4387                           ;PIR_B1.c: 51: if (getLights_Status(1) == 1) {
  4388  006C  3001               	movlw	1
  4389  006D  158A  2373  118A   	fcall	_getLights_Status
  4390  0070  3A01               	xorlw	1
  4391  0071  1D03               	skipz
  4392  0072  287B               	goto	l5125
  4393                           
  4394                           ;PIR_B1.c: 52: setLights_SwOn(1);
  4395  0073  3001               	movlw	1
  4396  0074  158A  250C  118A   	fcall	_setLights_SwOn
  4397                           
  4398                           ;PIR_B1.c: 53: setLights_SwOff(1);
  4399  0077  3001               	movlw	1
  4400  0078  158A  2428  118A   	fcall	_setLights_SwOff
  4401  007B                     l5125:	
  4402                           
  4403                           ;PIR_B1.c: 55: }
  4404                           ;PIR_B1.c: 67: }
  4405                           ;PIR_B1.c: 68: }
  4406                           ;PIR_B1.c: 72: if (_PIR.Detect == 0) {
  4407  007B  1683               	bsf	3,5	;RP0=1, select bank1
  4408  007C  1303               	bcf	3,6	;RP1=0, select bank1
  4409  007D  1A20               	btfsc	__PIR^(0+128),4
  4410  007E  2891               	goto	l906
  4411                           
  4412                           ;PIR_B1.c: 73: _PIR.Detect = 1;
  4413  007F  1620               	bsf	__PIR^(0+128),4
  4414                           
  4415                           ;PIR_B1.c: 75: if (_PIR.OK == 0) {
  4416  0080  19A0               	btfsc	__PIR^(0+128),3
  4417  0081  2891               	goto	l906
  4418                           
  4419                           ;PIR_B1.c: 76: setLED(1, 1);
  4420  0082  1283               	bcf	3,5	;RP0=0, select bank0
  4421  0083  1303               	bcf	3,6	;RP1=0, select bank0
  4422  0084  01CD               	clrf	setLED@command
  4423  0085  0ACD               	incf	setLED@command,f
  4424  0086  3001               	movlw	1
  4425  0087  158A  2735  118A   	fcall	_setLED
  4426                           
  4427                           ;PIR_B1.c: 77: }
  4428                           ;PIR_B1.c: 80: }
  4429                           ;PIR_B1.c: 81: } else {
  4430  008A  2891               	goto	l906
  4431  008B                     l899:	
  4432                           
  4433                           ;PIR_B1.c: 82: if (_PIR.Detect == 1) {
  4434  008B  1683               	bsf	3,5	;RP0=1, select bank1
  4435  008C  1303               	bcf	3,6	;RP1=0, select bank1
  4436  008D  1E20               	btfss	__PIR^(0+128),4
  4437  008E  2891               	goto	l906
  4438                           
  4439                           ;PIR_B1.c: 83: _PIR.Detect = 0;
  4440  008F  1220               	bcf	__PIR^(0+128),4
  4441                           
  4442                           ;PIR_B1.c: 84: _PIR.Available = 0;
  4443  0090  13A0               	bcf	__PIR^(0+128),7
  4444  0091                     l906:	
  4445                           
  4446                           ;PIR_B1.c: 102: }
  4447                           ;PIR_B1.c: 103: }
  4448                           ;PIR_B1.c: 105: if (_PIR.ADtoGO == 0) {
  4449  0091  1683               	bsf	3,5	;RP0=1, select bank1
  4450  0092  1303               	bcf	3,6	;RP1=0, select bank1
  4451  0093  18A0               	btfsc	__PIR^(0+128),1
  4452  0094  28A4               	goto	l908
  4453                           
  4454                           ;PIR_B1.c: 106: _PIR.Time++;
  4455  0095  3001               	movlw	1
  4456  0096  1283               	bcf	3,5	;RP0=0, select bank0
  4457  0097  1303               	bcf	3,6	;RP1=0, select bank0
  4458  0098  00D3               	movwf	??_PIR_Main
  4459  0099  0853               	movf	??_PIR_Main,w
  4460  009A  1683               	bsf	3,5	;RP0=1, select bank1
  4461  009B  1303               	bcf	3,6	;RP1=0, select bank1
  4462  009C  07A2               	addwf	(__PIR^(0+128)+2),f
  4463                           
  4464                           ;PIR_B1.c: 107: if (_PIR.Time == (100 / 20)) {
  4465  009D  0822               	movf	(__PIR^(0+128)+2),w
  4466  009E  3A05               	xorlw	5
  4467  009F  1D03               	skipz
  4468  00A0  29AE               	goto	l5213
  4469                           
  4470                           ;PIR_B1.c: 108: _PIR.Time = 0;
  4471  00A1  01A2               	clrf	(__PIR^(0+128)+2)
  4472                           
  4473                           ;PIR_B1.c: 109: _PIR.ADtoGO = 1;
  4474  00A2  14A0               	bsf	__PIR^(0+128),1
  4475                           
  4476                           ;PIR_B1.c: 110: }
  4477                           ;PIR_B1.c: 111: } else {
  4478  00A3  29AE               	goto	l5213
  4479  00A4                     l908:	
  4480                           
  4481                           ;PIR_B1.c: 112: if (_PIR.GO == 1) {
  4482  00A4  1D20               	btfss	__PIR^(0+128),2
  4483  00A5  29AE               	goto	l5213
  4484                           
  4485                           ;PIR_B1.c: 113: _PIR.GO = 0;
  4486  00A6  1120               	bcf	__PIR^(0+128),2
  4487                           
  4488                           ;PIR_B1.c: 114: _PIR.ADtoGO = 0;
  4489  00A7  10A0               	bcf	__PIR^(0+128),1
  4490                           
  4491                           ;PIR_B1.c: 115: if (_PIR.Available == 1) {
  4492  00A8  1BA0               	btfsc	__PIR^(0+128),7
  4493                           
  4494                           ;PIR_B1.c: 116: if (_PIR.OK == 1) {
  4495  00A9  1DA0               	btfss	__PIR^(0+128),3
  4496  00AA  29AE               	goto	l5213
  4497                           
  4498                           ;PIR_B1.c: 118: _PIR.Time++;
  4499  00AB  3001               	movlw	1
  4500  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  4501  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  4502  00AE  00D3               	movwf	??_PIR_Main
  4503  00AF  0853               	movf	??_PIR_Main,w
  4504  00B0  1683               	bsf	3,5	;RP0=1, select bank1
  4505  00B1  1303               	bcf	3,6	;RP1=0, select bank1
  4506  00B2  07A2               	addwf	(__PIR^(0+128)+2),f
  4507                           
  4508                           ;PIR_B1.c: 119: if (_PIR.Time == 60) {
  4509  00B3  0822               	movf	(__PIR^(0+128)+2),w
  4510  00B4  3A3C               	xorlw	60
  4511  00B5  1D03               	skipz
  4512  00B6  28EB               	goto	l5181
  4513                           
  4514                           ;PIR_B1.c: 120: _PIR.Time = 0;
  4515  00B7  01A2               	clrf	(__PIR^(0+128)+2)
  4516                           
  4517                           ;PIR_B1.c: 121: if (_PIR.RangeCount >= 90) {
  4518  00B8  305A               	movlw	90
  4519  00B9  0247               	subwf	(__PIR^(0+128)+39),w
  4520  00BA  1C03               	skipc
  4521  00BB  28C7               	goto	l5163
  4522                           
  4523                           ;PIR_B1.c: 122: _PIR.RangeTime1 = 0;
  4524  00BC  01C6               	clrf	(__PIR^(0+128)+38)
  4525                           
  4526                           ;PIR_B1.c: 124: if (_PIR.RangeValue == 25) {
  4527  00BD  0848               	movf	(__PIR^(0+128)+40),w
  4528  00BE  3A19               	xorlw	25
  4529  00BF  1903               	btfsc	3,2
  4530  00C0  28DC               	goto	L12
  4531                           
  4532                           ;PIR_B1.c: 126: } else if (_PIR.RangeValue == (25+10)) {
  4533                           
  4534                           ;PIR_B1.c: 125: _PIR.RangeValue = (25+10);
  4535  00C1  0848               	movf	(__PIR^(0+128)+40),w
  4536  00C2  3A23               	xorlw	35
  4537  00C3  1D03               	skipz
  4538  00C4  28EA               	goto	l5179
  4539                           
  4540                           ;PIR_B1.c: 127: _PIR.RangeValue = (25+20);
  4541  00C5  302D               	movlw	45
  4542  00C6  28E3               	goto	L9
  4543  00C7                     l5163:	
  4544                           ;PIR_B1.c: 128: }
  4545                           ;PIR_B1.c: 129: } else if (_PIR.RangeCount <= 10) {
  4546                           
  4547  00C7  300B               	movlw	11
  4548  00C8  0247               	subwf	(__PIR^(0+128)+39),w
  4549  00C9  1803               	skipnc
  4550  00CA  28EA               	goto	l5179
  4551                           
  4552                           ;PIR_B1.c: 130: _PIR.RangeTime1++;
  4553  00CB  3001               	movlw	1
  4554  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  4555  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  4556  00CE  00D3               	movwf	??_PIR_Main
  4557  00CF  0853               	movf	??_PIR_Main,w
  4558  00D0  1683               	bsf	3,5	;RP0=1, select bank1
  4559  00D1  1303               	bcf	3,6	;RP1=0, select bank1
  4560  00D2  07C6               	addwf	(__PIR^(0+128)+38),f
  4561                           
  4562                           ;PIR_B1.c: 131: if (_PIR.RangeTime1 == 2) {
  4563  00D3  0846               	movf	(__PIR^(0+128)+38),w
  4564  00D4  3A02               	xorlw	2
  4565  00D5  1D03               	skipz
  4566  00D6  28EA               	goto	l5179
  4567                           
  4568                           ;PIR_B1.c: 132: _PIR.RangeTime1 = 0;
  4569  00D7  01C6               	clrf	(__PIR^(0+128)+38)
  4570                           
  4571                           ;PIR_B1.c: 134: if (_PIR.RangeValue == (25+20)) {
  4572  00D8  0848               	movf	(__PIR^(0+128)+40),w
  4573  00D9  3A2D               	xorlw	45
  4574  00DA  1D03               	skipz
  4575  00DB  28DE               	goto	l5175
  4576  00DC                     L12:	
  4577                           
  4578                           ;PIR_B1.c: 135: _PIR.RangeValue = (25+10);
  4579  00DC  3023               	movlw	35
  4580  00DD  28E3               	goto	L9
  4581  00DE                     l5175:	
  4582                           ;PIR_B1.c: 136: } else if (_PIR.RangeValue == (25+10)) {
  4583                           
  4584  00DE  0848               	movf	(__PIR^(0+128)+40),w
  4585  00DF  3A23               	xorlw	35
  4586  00E0  1D03               	skipz
  4587  00E1  28EA               	goto	l5179
  4588                           
  4589                           ;PIR_B1.c: 137: _PIR.RangeValue = 25;
  4590  00E2  3019               	movlw	25
  4591  00E3                     L9:	
  4592  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  4593  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  4594  00E5  00D3               	movwf	??_PIR_Main
  4595  00E6  0853               	movf	??_PIR_Main,w
  4596  00E7  1683               	bsf	3,5	;RP0=1, select bank1
  4597  00E8  1303               	bcf	3,6	;RP1=0, select bank1
  4598  00E9  00C8               	movwf	(__PIR^(0+128)+40)
  4599  00EA                     l5179:	
  4600                           
  4601                           ;PIR_B1.c: 138: }
  4602                           ;PIR_B1.c: 139: }
  4603                           ;PIR_B1.c: 140: }
  4604                           ;PIR_B1.c: 141: _PIR.RangeCount = 0;
  4605  00EA  01C7               	clrf	(__PIR^(0+128)+39)
  4606  00EB                     l5181:	
  4607                           
  4608                           ;PIR_B1.c: 142: }
  4609                           ;PIR_B1.c: 145: if ((_PIR.SignalAD >= (_PIR.ReferenceVoltage - _PIR.RangeValue))
  4610                           ;PIR_B1.c: 146: && (_PIR.SignalAD <= (_PIR.ReferenceVoltage + _PIR.RangeValue))) {
  4611  00EB  0848               	movf	(__PIR^(0+128)+40),w
  4612  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  4613  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  4614  00EE  00D3               	movwf	??_PIR_Main
  4615  00EF  01D4               	clrf	??_PIR_Main+1
  4616  00F0  09D3               	comf	??_PIR_Main,f
  4617  00F1  09D4               	comf	??_PIR_Main+1,f
  4618  00F2  0AD3               	incf	??_PIR_Main,f
  4619  00F3  1903               	skipnz
  4620  00F4  0AD4               	incf	??_PIR_Main+1,f
  4621  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  4622  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  4623  00F7  0823               	movf	(__PIR^(0+128)+3),w
  4624  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  4625  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  4626  00FA  0753               	addwf	??_PIR_Main,w
  4627  00FB  00D5               	movwf	??_PIR_Main+2
  4628  00FC  0854               	movf	??_PIR_Main+1,w
  4629  00FD  1803               	skipnc
  4630  00FE  0A54               	incf	??_PIR_Main+1,w
  4631  00FF  00D6               	movwf	??_PIR_Main+3
  4632  0100  0856               	movf	??_PIR_Main+3,w
  4633  0101  3A80               	xorlw	128
  4634  0102  3C80               	sublw	128
  4635  0103  1D03               	skipz
  4636  0104  2909               	goto	u6645
  4637  0105  0855               	movf	??_PIR_Main+2,w
  4638  0106  1683               	bsf	3,5	;RP0=1, select bank1
  4639  0107  1303               	bcf	3,6	;RP1=0, select bank1
  4640  0108  0221               	subwf	(__PIR^(0+128)+1),w
  4641  0109                     u6645:	
  4642  0109  1C03               	skipc
  4643  010A  292B               	goto	l5191
  4644  010B  1683               	bsf	3,5	;RP0=1, select bank1
  4645  010C  1303               	bcf	3,6	;RP1=0, select bank1
  4646  010D  0823               	movf	(__PIR^(0+128)+3),w
  4647  010E  0748               	addwf	(__PIR^(0+128)+40),w
  4648  010F  1283               	bcf	3,5	;RP0=0, select bank0
  4649  0110  1303               	bcf	3,6	;RP1=0, select bank0
  4650  0111  00D3               	movwf	??_PIR_Main
  4651  0112  01D4               	clrf	??_PIR_Main+1
  4652  0113  0DD4               	rlf	??_PIR_Main+1,f
  4653  0114  0854               	movf	??_PIR_Main+1,w
  4654  0115  3A80               	xorlw	128
  4655  0116  00D5               	movwf	??_PIR_Main+2
  4656  0117  3080               	movlw	128
  4657  0118  0255               	subwf	??_PIR_Main+2,w
  4658  0119  1D03               	skipz
  4659  011A  2921               	goto	u6655
  4660  011B  1683               	bsf	3,5	;RP0=1, select bank1
  4661  011C  1303               	bcf	3,6	;RP1=0, select bank1
  4662  011D  0821               	movf	(__PIR^(0+128)+1),w
  4663  011E  1283               	bcf	3,5	;RP0=0, select bank0
  4664  011F  1303               	bcf	3,6	;RP1=0, select bank0
  4665  0120  0253               	subwf	??_PIR_Main,w
  4666  0121                     u6655:	
  4667  0121  1C03               	skipc
  4668  0122  292B               	goto	l5191
  4669                           
  4670                           ;PIR_B1.c: 148: _PIR.Count = 0;
  4671  0123  1683               	bsf	3,5	;RP0=1, select bank1
  4672  0124  1303               	bcf	3,6	;RP1=0, select bank1
  4673  0125  01BE               	clrf	(__PIR^(0+128)+30)
  4674  0126  01BF               	clrf	((__PIR+1)^(0+128)+30)
  4675                           
  4676                           ;PIR_B1.c: 155: setLED(1, 0);
  4677  0127  1283               	bcf	3,5	;RP0=0, select bank0
  4678  0128  1303               	bcf	3,6	;RP1=0, select bank0
  4679  0129  01CD               	clrf	setLED@command
  4680  012A  2997               	goto	L13
  4681  012B                     l5191:	
  4682                           ;PIR_B1.c: 159: } else {
  4683                           
  4684                           ;PIR_B1.c: 156: setLED(2, 0);
  4685                           
  4686                           
  4687                           ;PIR_B1.c: 162: _PIR.RangeCount++;
  4688  012B  3001               	movlw	1
  4689  012C  1283               	bcf	3,5	;RP0=0, select bank0
  4690  012D  1303               	bcf	3,6	;RP1=0, select bank0
  4691  012E  00D3               	movwf	??_PIR_Main
  4692  012F  0853               	movf	??_PIR_Main,w
  4693  0130  1683               	bsf	3,5	;RP0=1, select bank1
  4694  0131  1303               	bcf	3,6	;RP1=0, select bank1
  4695  0132  07C7               	addwf	(__PIR^(0+128)+39),f
  4696                           
  4697                           ;PIR_B1.c: 163: _PIR.Count++;
  4698  0133  3001               	movlw	1
  4699  0134  07BE               	addwf	(__PIR^(0+128)+30),f
  4700  0135  1803               	skipnc
  4701  0136  0ABF               	incf	((__PIR+1)^(0+128)+30),f
  4702  0137  3000               	movlw	0
  4703  0138  07BF               	addwf	((__PIR+1)^(0+128)+30),f
  4704                           
  4705                           ;PIR_B1.c: 165: TriggerValue = LightsStatus == 1 ? 3 : 3;
  4706  0139  1283               	bcf	3,5	;RP0=0, select bank0
  4707  013A  1303               	bcf	3,6	;RP1=0, select bank0
  4708  013B  085E               	movf	PIR_Main@LightsStatus,w
  4709  013C  3A01               	xorlw	1
  4710  013D  1903               	skipnz
  4711  013E  293F               	goto	l5199
  4712  013F                     l5199:	
  4713  013F  3003               	movlw	3
  4714  0140  00DB               	movwf	_PIR_Main$2856
  4715  0141  3000               	movlw	0
  4716  0142  00DC               	movwf	_PIR_Main$2856+1
  4717  0143  085B               	movf	_PIR_Main$2856,w
  4718  0144  00D3               	movwf	??_PIR_Main
  4719  0145  0853               	movf	??_PIR_Main,w
  4720  0146  00DD               	movwf	PIR_Main@TriggerValue
  4721                           
  4722                           ;PIR_B1.c: 167: if (_PIR.Count == TriggerValue) {
  4723  0147  085D               	movf	PIR_Main@TriggerValue,w
  4724  0148  00D3               	movwf	??_PIR_Main
  4725  0149  01D4               	clrf	??_PIR_Main+1
  4726  014A  1683               	bsf	3,5	;RP0=1, select bank1
  4727  014B  1303               	bcf	3,6	;RP1=0, select bank1
  4728  014C  083F               	movf	((__PIR+1)^(0+128)+30),w
  4729  014D  1283               	bcf	3,5	;RP0=0, select bank0
  4730  014E  1303               	bcf	3,6	;RP1=0, select bank0
  4731  014F  0654               	xorwf	??_PIR_Main+1,w
  4732  0150  1D03               	skipz
  4733  0151  2958               	goto	u6675
  4734  0152  1683               	bsf	3,5	;RP0=1, select bank1
  4735  0153  1303               	bcf	3,6	;RP1=0, select bank1
  4736  0154  083E               	movf	(__PIR^(0+128)+30),w
  4737  0155  1283               	bcf	3,5	;RP0=0, select bank0
  4738  0156  1303               	bcf	3,6	;RP1=0, select bank0
  4739  0157  0653               	xorwf	??_PIR_Main,w
  4740  0158                     u6675:	
  4741  0158  1D03               	skipz
  4742  0159  29AE               	goto	l5213
  4743                           
  4744                           ;PIR_B1.c: 168: _PIR.Count = 0;
  4745  015A  1683               	bsf	3,5	;RP0=1, select bank1
  4746  015B  1303               	bcf	3,6	;RP1=0, select bank1
  4747  015C  01BE               	clrf	(__PIR^(0+128)+30)
  4748  015D  01BF               	clrf	((__PIR+1)^(0+128)+30)
  4749                           
  4750                           ;PIR_B1.c: 175: if (getLights_Status(1) == 0) {
  4751  015E  3001               	movlw	1
  4752  015F  158A  2373  118A   	fcall	_getLights_Status
  4753  0162  3800               	iorlw	0
  4754  0163  1D03               	skipz
  4755  0164  296D               	goto	l5207
  4756                           
  4757                           ;PIR_B1.c: 176: setLights_SwOn(1);
  4758  0165  3001               	movlw	1
  4759  0166  158A  250C  118A   	fcall	_setLights_SwOn
  4760                           
  4761                           ;PIR_B1.c: 177: setLights_SwOff(1);
  4762  0169  3001               	movlw	1
  4763  016A  158A  2428  118A   	fcall	_setLights_SwOff
  4764  016D                     l5207:	
  4765                           
  4766                           ;PIR_B1.c: 179: }
  4767                           ;PIR_B1.c: 193: if ((_PIR.SignalAD <= (_PIR.ReferenceVoltage - _PIR.RangeValue))) {
  4768  016D  1683               	bsf	3,5	;RP0=1, select bank1
  4769  016E  1303               	bcf	3,6	;RP1=0, select bank1
  4770  016F  0848               	movf	(__PIR^(0+128)+40),w
  4771  0170  1283               	bcf	3,5	;RP0=0, select bank0
  4772  0171  1303               	bcf	3,6	;RP1=0, select bank0
  4773  0172  00D3               	movwf	??_PIR_Main
  4774  0173  01D4               	clrf	??_PIR_Main+1
  4775  0174  09D3               	comf	??_PIR_Main,f
  4776  0175  09D4               	comf	??_PIR_Main+1,f
  4777  0176  0AD3               	incf	??_PIR_Main,f
  4778  0177  1903               	skipnz
  4779  0178  0AD4               	incf	??_PIR_Main+1,f
  4780  0179  1683               	bsf	3,5	;RP0=1, select bank1
  4781  017A  1303               	bcf	3,6	;RP1=0, select bank1
  4782  017B  0823               	movf	(__PIR^(0+128)+3),w
  4783  017C  1283               	bcf	3,5	;RP0=0, select bank0
  4784  017D  1303               	bcf	3,6	;RP1=0, select bank0
  4785  017E  0753               	addwf	??_PIR_Main,w
  4786  017F  00D5               	movwf	??_PIR_Main+2
  4787  0180  0854               	movf	??_PIR_Main+1,w
  4788  0181  1803               	skipnc
  4789  0182  0A54               	incf	??_PIR_Main+1,w
  4790  0183  00D6               	movwf	??_PIR_Main+3
  4791  0184  0856               	movf	??_PIR_Main+3,w
  4792  0185  3A80               	xorlw	128
  4793  0186  00D7               	movwf	??_PIR_Main+4
  4794  0187  3080               	movlw	128
  4795  0188  0257               	subwf	??_PIR_Main+4,w
  4796  0189  1D03               	skipz
  4797  018A  2991               	goto	u6695
  4798  018B  1683               	bsf	3,5	;RP0=1, select bank1
  4799  018C  1303               	bcf	3,6	;RP1=0, select bank1
  4800  018D  0821               	movf	(__PIR^(0+128)+1),w
  4801  018E  1283               	bcf	3,5	;RP0=0, select bank0
  4802  018F  1303               	bcf	3,6	;RP1=0, select bank0
  4803  0190  0255               	subwf	??_PIR_Main+2,w
  4804  0191                     u6695:	
  4805  0191  1C03               	skipc
  4806  0192  299F               	goto	l5211
  4807                           
  4808                           ;PIR_B1.c: 194: setLED(1, 1);
  4809  0193  1283               	bcf	3,5	;RP0=0, select bank0
  4810  0194  1303               	bcf	3,6	;RP1=0, select bank0
  4811  0195  01CD               	clrf	setLED@command
  4812  0196  0ACD               	incf	setLED@command,f
  4813  0197                     L13:	
  4814  0197  3001               	movlw	1
  4815  0198  158A  2735  118A   	fcall	_setLED
  4816                           
  4817                           ;PIR_B1.c: 195: setLED(2, 0);
  4818  019B  1283               	bcf	3,5	;RP0=0, select bank0
  4819  019C  1303               	bcf	3,6	;RP1=0, select bank0
  4820  019D  01CD               	clrf	setLED@command
  4821  019E  29AA               	goto	L10
  4822  019F                     l5211:	
  4823                           ;PIR_B1.c: 196: } else {
  4824                           
  4825                           
  4826                           ;PIR_B1.c: 197: setLED(1, 0);
  4827  019F  1283               	bcf	3,5	;RP0=0, select bank0
  4828  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  4829  01A1  01CD               	clrf	setLED@command
  4830  01A2  3001               	movlw	1
  4831  01A3  158A  2735  118A   	fcall	_setLED
  4832                           
  4833                           ;PIR_B1.c: 198: setLED(2, 1);
  4834  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  4835  01A7  1303               	bcf	3,6	;RP1=0, select bank0
  4836  01A8  01CD               	clrf	setLED@command
  4837  01A9  0ACD               	incf	setLED@command,f
  4838  01AA                     L10:	
  4839  01AA  3002               	movlw	2
  4840  01AB  158A  2735  118A   	fcall	_setLED
  4841  01AE                     l5213:	
  4842                           
  4843                           ;PIR_B1.c: 199: }
  4844                           ;PIR_B1.c: 241: }
  4845                           ;PIR_B1.c: 242: }
  4846                           ;PIR_B1.c: 243: }
  4847                           ;PIR_B1.c: 244: }
  4848                           ;PIR_B1.c: 245: }
  4849                           ;PIR_B1.c: 246: }
  4850                           ;PIR_B1.c: 247: if (_PIR.OK == 0) {
  4851  01AE  1683               	bsf	3,5	;RP0=1, select bank1
  4852  01AF  1303               	bcf	3,6	;RP1=0, select bank1
  4853  01B0  19A0               	btfsc	__PIR^(0+128),3
  4854  01B1  29D9               	goto	l5227
  4855                           
  4856                           ;PIR_B1.c: 248: _PIR.Count++;
  4857  01B2  3001               	movlw	1
  4858  01B3  07BE               	addwf	(__PIR^(0+128)+30),f
  4859  01B4  1803               	skipnc
  4860  01B5  0ABF               	incf	((__PIR+1)^(0+128)+30),f
  4861  01B6  3000               	movlw	0
  4862  01B7  07BF               	addwf	((__PIR+1)^(0+128)+30),f
  4863                           
  4864                           ;PIR_B1.c: 249: if (_PIR.Count == (30000 / 20)) {
  4865  01B8  3005               	movlw	5
  4866  01B9  063F               	xorwf	((__PIR+1)^(0+128)+30),w
  4867  01BA  1D03               	skipz
  4868  01BB  29BE               	goto	u6715
  4869  01BC  30DC               	movlw	220
  4870  01BD  063E               	xorwf	(__PIR^(0+128)+30),w
  4871  01BE                     u6715:	
  4872  01BE  1D03               	skipz
  4873  01BF  0008               	return
  4874                           
  4875                           ;PIR_B1.c: 250: _PIR.Count = 0;
  4876  01C0  01BE               	clrf	(__PIR^(0+128)+30)
  4877  01C1  01BF               	clrf	((__PIR+1)^(0+128)+30)
  4878                           
  4879                           ;PIR_B1.c: 251: _PIR.OK = 1;
  4880  01C2  15A0               	bsf	__PIR^(0+128),3
  4881                           
  4882                           ;PIR_B1.c: 253: setLED(1, 0);
  4883  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  4884  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  4885  01C5  01CD               	clrf	setLED@command
  4886  01C6  3001               	movlw	1
  4887  01C7  158A  2735  118A   	fcall	_setLED
  4888                           
  4889                           ;PIR_B1.c: 259: if (getLights_Status(1) == 1) {
  4890  01CA  3001               	movlw	1
  4891  01CB  158A  2373  118A   	fcall	_getLights_Status
  4892  01CE  3A01               	xorlw	1
  4893  01CF  1D03               	skipz
  4894  01D0  0008               	return
  4895                           
  4896                           ;PIR_B1.c: 260: setLights_SwOn(1);
  4897  01D1  3001               	movlw	1
  4898  01D2  158A  250C  118A   	fcall	_setLights_SwOn
  4899                           
  4900                           ;PIR_B1.c: 261: setLights_SwOff(1);
  4901  01D5  3001               	movlw	1
  4902  01D6  158A  2428         	fcall	_setLights_SwOff
  4903                           
  4904                           ;PIR_B1.c: 263: }
  4905                           ;PIR_B1.c: 276: }
  4906                           ;PIR_B1.c: 277: } else {
  4907  01D8  0008               	return
  4908  01D9                     l5227:	
  4909                           
  4910                           ;PIR_B1.c: 278: if (LightsStatus == 1) {
  4911  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  4912  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  4913  01DB  085E               	movf	PIR_Main@LightsStatus,w
  4914  01DC  3A01               	xorlw	1
  4915  01DD  1D03               	skipz
  4916  01DE  2A09               	goto	l5245
  4917                           
  4918                           ;PIR_B1.c: 279: _PIR.CloseTimeSeconds++;
  4919  01DF  3001               	movlw	1
  4920  01E0  00D3               	movwf	??_PIR_Main
  4921  01E1  0853               	movf	??_PIR_Main,w
  4922  01E2  1683               	bsf	3,5	;RP0=1, select bank1
  4923  01E3  1303               	bcf	3,6	;RP1=0, select bank1
  4924  01E4  07C2               	addwf	(__PIR^(0+128)+34),f
  4925                           
  4926                           ;PIR_B1.c: 280: if (_PIR.CloseTimeSeconds == (1000 / 20)) {
  4927  01E5  0842               	movf	(__PIR^(0+128)+34),w
  4928  01E6  3A32               	xorlw	50
  4929  01E7  1D03               	skipz
  4930  01E8  0008               	return
  4931                           
  4932                           ;PIR_B1.c: 281: _PIR.CloseTimeSeconds = 0;
  4933  01E9  01C2               	clrf	(__PIR^(0+128)+34)
  4934                           
  4935                           ;PIR_B1.c: 282: _PIR.CloseTimeMinutes++;
  4936  01EA  3001               	movlw	1
  4937  01EB  07C0               	addwf	(__PIR^(0+128)+32),f
  4938  01EC  1803               	skipnc
  4939  01ED  0AC1               	incf	((__PIR+1)^(0+128)+32),f
  4940  01EE  3000               	movlw	0
  4941  01EF  07C1               	addwf	((__PIR+1)^(0+128)+32),f
  4942                           
  4943                           ;PIR_B1.c: 283: if (_PIR.CloseTimeMinutes == _PIR.CloseTimeValue) {
  4944  01F0  0844               	movf	((__PIR+1)^(0+128)+35),w
  4945  01F1  0641               	xorwf	((__PIR+1)^(0+128)+32),w
  4946  01F2  1D03               	skipz
  4947  01F3  29F6               	goto	u6755
  4948  01F4  0843               	movf	(__PIR^(0+128)+35),w
  4949  01F5  0640               	xorwf	(__PIR^(0+128)+32),w
  4950  01F6                     u6755:	
  4951  01F6  1D03               	skipz
  4952  01F7  0008               	return
  4953                           
  4954                           ;PIR_B1.c: 284: _PIR.CloseTimeMinutes = 0;
  4955  01F8  01C0               	clrf	(__PIR^(0+128)+32)
  4956  01F9  01C1               	clrf	((__PIR+1)^(0+128)+32)
  4957                           
  4958                           ;PIR_B1.c: 290: if (getLights_Status(1) == 1) {
  4959  01FA  3001               	movlw	1
  4960  01FB  158A  2373  118A   	fcall	_getLights_Status
  4961  01FE  3A01               	xorlw	1
  4962  01FF  1D03               	skipz
  4963  0200  0008               	return
  4964                           
  4965                           ;PIR_B1.c: 291: setLights_SwOn(1);
  4966  0201  3001               	movlw	1
  4967  0202  158A  250C  118A   	fcall	_setLights_SwOn
  4968                           
  4969                           ;PIR_B1.c: 292: setLights_SwOff(1);
  4970  0205  3001               	movlw	1
  4971  0206  158A  2428         	fcall	_setLights_SwOff
  4972                           
  4973                           ;PIR_B1.c: 294: }
  4974                           ;PIR_B1.c: 306: }
  4975                           ;PIR_B1.c: 307: }
  4976                           ;PIR_B1.c: 308: } else {
  4977  0208  0008               	return
  4978  0209                     l5245:	
  4979                           
  4980                           ;PIR_B1.c: 309: _PIR.CloseTimeSeconds = 0;
  4981  0209  1683               	bsf	3,5	;RP0=1, select bank1
  4982  020A  1303               	bcf	3,6	;RP1=0, select bank1
  4983  020B  01C2               	clrf	(__PIR^(0+128)+34)
  4984                           
  4985                           ;PIR_B1.c: 310: _PIR.CloseTimeMinutes = 0;
  4986  020C  01C0               	clrf	(__PIR^(0+128)+32)
  4987  020D  01C1               	clrf	((__PIR+1)^(0+128)+32)
  4988                           
  4989                           ;PIR_B1.c: 311: }
  4990                           ;PIR_B1.c: 312: }
  4991                           ;PIR_B1.c: 313: } else {
  4992  020E  0008               	return
  4993  020F                     l898:	
  4994                           
  4995                           ;PIR_B1.c: 314: if (myMain.PowerON == 1) {
  4996  020F  1283               	bcf	3,5	;RP0=0, select bank0
  4997  0210  1303               	bcf	3,6	;RP1=0, select bank0
  4998  0211  1C25               	btfss	_myMain,0
  4999  0212  0008               	return
  5000                           
  5001                           ;PIR_B1.c: 315: _PIR.Enable = 1;
  5002  0213  1683               	bsf	3,5	;RP0=1, select bank1
  5003  0214  1303               	bcf	3,6	;RP1=0, select bank1
  5004  0215  1420               	bsf	__PIR^(0+128),0
  5005                           
  5006                           ;PIR_B1.c: 317: setLED(1, 1);
  5007  0216  1283               	bcf	3,5	;RP0=0, select bank0
  5008  0217  1303               	bcf	3,6	;RP1=0, select bank0
  5009  0218  01CD               	clrf	setLED@command
  5010  0219  0ACD               	incf	setLED@command,f
  5011  021A  3001               	movlw	1
  5012  021B  158A  2735  118A   	fcall	_setLED
  5013                           
  5014                           ;PIR_B1.c: 322: if (getLights_Status(1) == 0) {
  5015  021E  3001               	movlw	1
  5016  021F  158A  2373  118A   	fcall	_getLights_Status
  5017  0222  3800               	iorlw	0
  5018  0223  1D03               	skipz
  5019  0224  0008               	return
  5020                           
  5021                           ;PIR_B1.c: 323: setLights_SwOn(1);
  5022  0225  3001               	movlw	1
  5023  0226  158A  250C  118A   	fcall	_setLights_SwOn
  5024                           
  5025                           ;PIR_B1.c: 324: setLights_SwOff(1);
  5026  0229  3001               	movlw	1
  5027  022A  158A  2428         	fcall	_setLights_SwOff
  5028  022C  0008               	return
  5029  022D                     __end_of_PIR_Main:	
  5030                           
  5031                           	psect	text21
  5032  0AF6                     __ptext21:	
  5033 ;; *************** function _getCDS_Status *****************
  5034 ;; Defined at:
  5035 ;;		line 42 in file "../src/CDS_B1.c"
  5036 ;; Parameters:    Size  Location     Type
  5037 ;;		None
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;  status          1    4[COMMON] unsigned char 
  5040 ;; Return value:  Size  Location     Type
  5041 ;;                  1    wreg      unsigned char 
  5042 ;; Registers used:
  5043 ;;		wreg, status,2
  5044 ;; Tracked objects:
  5045 ;;		On entry : 0/0
  5046 ;;		On exit  : 0/0
  5047 ;;		Unchanged: 0/0
  5048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5049 ;;      Params:         0       0       0       0
  5050 ;;      Locals:         1       0       0       0
  5051 ;;      Temps:          0       0       0       0
  5052 ;;      Totals:         1       0       0       0
  5053 ;;Total ram usage:        1 bytes
  5054 ;; Hardware stack levels used:    1
  5055 ;; Hardware stack levels required when called:    2
  5056 ;; This function calls:
  5057 ;;		Nothing
  5058 ;; This function is called by:
  5059 ;;		_PIR_Main
  5060 ;; This function uses a non-reentrant model
  5061 ;;
  5062                           
  5063                           
  5064                           ;psect for function _getCDS_Status
  5065  0AF6                     _getCDS_Status:	
  5066                           
  5067                           ;CDS_B1.c: 43: char status = _CDS.Status == 1 ? 1 : 0;
  5068                           
  5069                           ;incstack = 0
  5070                           ; Regs used in _getCDS_Status: [wreg+status,2]
  5071  0AF6  3000               	movlw	0
  5072  0AF7  1283               	bcf	3,5	;RP0=0, select bank0
  5073  0AF8  1303               	bcf	3,6	;RP1=0, select bank0
  5074  0AF9  1A2E               	btfsc	__CDS,4
  5075  0AFA  3001               	movlw	1
  5076  0AFB  00F4               	movwf	getCDS_Status@status
  5077                           
  5078                           ;CDS_B1.c: 44: return status;
  5079  0AFC  0874               	movf	getCDS_Status@status,w
  5080  0AFD  0008               	return
  5081  0AFE                     __end_of_getCDS_Status:	
  5082                           
  5083                           	psect	text22
  5084  07F5                     __ptext22:	
  5085 ;; *************** function _PIR_Initialization *****************
  5086 ;; Defined at:
  5087 ;;		line 7 in file "../src/PIR_B1.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;		None
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;		None
  5092 ;; Return value:  Size  Location     Type
  5093 ;;		None               void
  5094 ;; Registers used:
  5095 ;;		wreg
  5096 ;; Tracked objects:
  5097 ;;		On entry : 0/0
  5098 ;;		On exit  : 0/0
  5099 ;;		Unchanged: 0/0
  5100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5101 ;;      Params:         0       0       0       0
  5102 ;;      Locals:         0       0       0       0
  5103 ;;      Temps:          1       0       0       0
  5104 ;;      Totals:         1       0       0       0
  5105 ;;Total ram usage:        1 bytes
  5106 ;; Hardware stack levels used:    1
  5107 ;; Hardware stack levels required when called:    2
  5108 ;; This function calls:
  5109 ;;		Nothing
  5110 ;; This function is called by:
  5111 ;;		_main
  5112 ;; This function uses a non-reentrant model
  5113 ;;
  5114                           
  5115                           
  5116                           ;psect for function _PIR_Initialization
  5117  07F5                     _PIR_Initialization:	
  5118                           
  5119                           ;PIR_B1.c: 8: _PIR.RangeValue = 25;
  5120                           
  5121                           ;incstack = 0
  5122                           ; Regs used in _PIR_Initialization: [wreg]
  5123  07F5  3019               	movlw	25
  5124  07F6  00F4               	movwf	??_PIR_Initialization
  5125  07F7  0874               	movf	??_PIR_Initialization,w
  5126  07F8  1683               	bsf	3,5	;RP0=1, select bank1
  5127  07F9  1303               	bcf	3,6	;RP1=0, select bank1
  5128  07FA  00C8               	movwf	(__PIR^(0+128)+40)
  5129                           
  5130                           ;PIR_B1.c: 9: _PIR.CloseTimeValue = 5;
  5131  07FB  3005               	movlw	5
  5132  07FC  00C3               	movwf	(__PIR^(0+128)+35)
  5133  07FD  3000               	movlw	0
  5134  07FE  00C4               	movwf	(__PIR^(0+128)+36)
  5135  07FF  0008               	return
  5136  0800                     __end_of_PIR_Initialization:	
  5137                           
  5138                           	psect	text23
  5139  0B64                     __ptext23:	
  5140 ;; *************** function _Mcu_Initialization *****************
  5141 ;; Defined at:
  5142 ;;		line 30 in file "../src/MCU_B1.c"
  5143 ;; Parameters:    Size  Location     Type
  5144 ;;		None
  5145 ;; Auto vars:     Size  Location     Type
  5146 ;;		None
  5147 ;; Return value:  Size  Location     Type
  5148 ;;		None               void
  5149 ;; Registers used:
  5150 ;;		wreg, status,2, status,0, pclath, cstack
  5151 ;; Tracked objects:
  5152 ;;		On entry : 0/0
  5153 ;;		On exit  : 0/0
  5154 ;;		Unchanged: 0/0
  5155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5156 ;;      Params:         0       0       0       0
  5157 ;;      Locals:         0       0       0       0
  5158 ;;      Temps:          0       0       0       0
  5159 ;;      Totals:         0       0       0       0
  5160 ;;Total ram usage:        0 bytes
  5161 ;; Hardware stack levels used:    1
  5162 ;; Hardware stack levels required when called:    3
  5163 ;; This function calls:
  5164 ;;		_ADC_Set
  5165 ;;		_Fosc_Set
  5166 ;;		_IO_Set
  5167 ;;		_TMR1_Set
  5168 ;;		_WDT_Set
  5169 ;; This function is called by:
  5170 ;;		_main
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           
  5175                           ;psect for function _Mcu_Initialization
  5176  0B64                     _Mcu_Initialization:	
  5177                           
  5178                           ;MCU_B1.c: 32: Fosc_Set();
  5179                           
  5180                           ;incstack = 0
  5181                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  5182  0B64  158A  22C1  158A   	fcall	_Fosc_Set
  5183                           
  5184                           ;MCU_B1.c: 34: IO_Set();
  5185  0B67  158A  2442  158A   	fcall	_IO_Set
  5186                           
  5187                           ;MCU_B1.c: 36: ;;
  5188                           ;MCU_B1.c: 38: TMR1_Set();
  5189  0B6A  158A  2348  158A   	fcall	_TMR1_Set
  5190                           
  5191                           ;MCU_B1.c: 40: ADC_Set();
  5192  0B6D  158A  22DF  158A   	fcall	_ADC_Set
  5193                           
  5194                           ;MCU_B1.c: 42: ;;
  5195                           ;MCU_B1.c: 44: ;;
  5196                           ;MCU_B1.c: 46: ;;
  5197                           ;MCU_B1.c: 48: ;;
  5198                           ;MCU_B1.c: 50: ;;
  5199                           ;MCU_B1.c: 52: WDT_Set();
  5200  0B70  158A  2356         	fcall	_WDT_Set
  5201  0B72  0008               	return
  5202  0B73                     __end_of_Mcu_Initialization:	
  5203                           
  5204                           	psect	text24
  5205  0B56                     __ptext24:	
  5206 ;; *************** function _WDT_Set *****************
  5207 ;; Defined at:
  5208 ;;		line 1102 in file "../src/MCU_B1.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;		None
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;		None
  5213 ;; Return value:  Size  Location     Type
  5214 ;;		None               void
  5215 ;; Registers used:
  5216 ;;		wreg
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5222 ;;      Params:         0       0       0       0
  5223 ;;      Locals:         0       0       0       0
  5224 ;;      Temps:          1       0       0       0
  5225 ;;      Totals:         1       0       0       0
  5226 ;;Total ram usage:        1 bytes
  5227 ;; Hardware stack levels used:    1
  5228 ;; Hardware stack levels required when called:    2
  5229 ;; This function calls:
  5230 ;;		Nothing
  5231 ;; This function is called by:
  5232 ;;		_Mcu_Initialization
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           
  5237                           ;psect for function _WDT_Set
  5238  0B56                     _WDT_Set:	
  5239                           
  5240                           ;MCU_B1.c: 1104: PSA = 1;
  5241                           
  5242                           ;incstack = 0
  5243                           ; Regs used in _WDT_Set: [wreg]
  5244  0B56  1683               	bsf	3,5	;RP0=1, select bank1
  5245  0B57  1303               	bcf	3,6	;RP1=0, select bank1
  5246  0B58  1581               	bsf	1,3	;volatile
  5247                           
  5248                           ;MCU_B1.c: 1105: PS0 = 1;
  5249  0B59  1401               	bsf	1,0	;volatile
  5250                           
  5251                           ;MCU_B1.c: 1106: PS1 = 1;
  5252  0B5A  1481               	bsf	1,1	;volatile
  5253                           
  5254                           ;MCU_B1.c: 1107: PS2 = 1;
  5255  0B5B  1501               	bsf	1,2	;volatile
  5256                           
  5257                           ;MCU_B1.c: 1111: WDT.Enable = 1;
  5258  0B5C  1283               	bcf	3,5	;RP0=0, select bank0
  5259  0B5D  1303               	bcf	3,6	;RP1=0, select bank0
  5260  0B5E  1435               	bsf	_WDT,0
  5261                           
  5262                           ;MCU_B1.c: 1112: WDT.Timer = 10;
  5263  0B5F  300A               	movlw	10
  5264  0B60  00F4               	movwf	??_WDT_Set
  5265  0B61  0874               	movf	??_WDT_Set,w
  5266  0B62  00B6               	movwf	_WDT+1
  5267  0B63  0008               	return
  5268  0B64                     __end_of_WDT_Set:	
  5269                           
  5270                           	psect	text25
  5271  0B48                     __ptext25:	
  5272 ;; *************** function _TMR1_Set *****************
  5273 ;; Defined at:
  5274 ;;		line 226 in file "../src/MCU_B1.c"
  5275 ;; Parameters:    Size  Location     Type
  5276 ;;		None
  5277 ;; Auto vars:     Size  Location     Type
  5278 ;;		None
  5279 ;; Return value:  Size  Location     Type
  5280 ;;		None               void
  5281 ;; Registers used:
  5282 ;;		wreg
  5283 ;; Tracked objects:
  5284 ;;		On entry : 0/0
  5285 ;;		On exit  : 0/0
  5286 ;;		Unchanged: 0/0
  5287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5288 ;;      Params:         0       0       0       0
  5289 ;;      Locals:         0       0       0       0
  5290 ;;      Temps:          0       0       0       0
  5291 ;;      Totals:         0       0       0       0
  5292 ;;Total ram usage:        0 bytes
  5293 ;; Hardware stack levels used:    1
  5294 ;; Hardware stack levels required when called:    2
  5295 ;; This function calls:
  5296 ;;		Nothing
  5297 ;; This function is called by:
  5298 ;;		_Mcu_Initialization
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302                           
  5303                           ;psect for function _TMR1_Set
  5304  0B48                     _TMR1_Set:	
  5305                           
  5306                           ;MCU_B1.c: 227: T1CON = (0x40 | 0x00 | 0x01);
  5307                           
  5308                           ;incstack = 0
  5309                           ; Regs used in _TMR1_Set: [wreg]
  5310  0B48  3041               	movlw	65
  5311  0B49  1283               	bcf	3,5	;RP0=0, select bank0
  5312  0B4A  1303               	bcf	3,6	;RP1=0, select bank0
  5313  0B4B  0090               	movwf	16	;volatile
  5314                           
  5315                           ;MCU_B1.c: 228: TMR1H = (int)((65536-1480)/256);
  5316  0B4C  30FA               	movlw	250
  5317  0B4D  008F               	movwf	15	;volatile
  5318                           
  5319                           ;MCU_B1.c: 229: TMR1L = (int)((65536-1480)%256);
  5320  0B4E  3038               	movlw	56
  5321  0B4F  008E               	movwf	14	;volatile
  5322                           
  5323                           ;MCU_B1.c: 230: TMR1IE = 1;
  5324  0B50  1683               	bsf	3,5	;RP0=1, select bank1
  5325  0B51  1303               	bcf	3,6	;RP1=0, select bank1
  5326  0B52  140C               	bsf	12,0	;volatile
  5327                           
  5328                           ;MCU_B1.c: 231: PEIE = 1;
  5329  0B53  170B               	bsf	11,6	;volatile
  5330                           
  5331                           ;MCU_B1.c: 232: GIE = 1;
  5332  0B54  178B               	bsf	11,7	;volatile
  5333  0B55  0008               	return
  5334  0B56                     __end_of_TMR1_Set:	
  5335                           
  5336                           	psect	text26
  5337  0C42                     __ptext26:	
  5338 ;; *************** function _IO_Set *****************
  5339 ;; Defined at:
  5340 ;;		line 60 in file "../src/MCU_B1.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;		None
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;		None
  5345 ;; Return value:  Size  Location     Type
  5346 ;;		None               void
  5347 ;; Registers used:
  5348 ;;		wreg, status,2
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5354 ;;      Params:         0       0       0       0
  5355 ;;      Locals:         0       0       0       0
  5356 ;;      Temps:          0       0       0       0
  5357 ;;      Totals:         0       0       0       0
  5358 ;;Total ram usage:        0 bytes
  5359 ;; Hardware stack levels used:    1
  5360 ;; Hardware stack levels required when called:    2
  5361 ;; This function calls:
  5362 ;;		Nothing
  5363 ;; This function is called by:
  5364 ;;		_Mcu_Initialization
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           
  5369                           ;psect for function _IO_Set
  5370  0C42                     _IO_Set:	
  5371                           
  5372                           ;MCU_B1.c: 62: TRISA = 0b00101111;;
  5373                           
  5374                           ;incstack = 0
  5375                           ; Regs used in _IO_Set: [wreg+status,2]
  5376  0C42  302F               	movlw	47
  5377  0C43  1683               	bsf	3,5	;RP0=1, select bank1
  5378  0C44  1303               	bcf	3,6	;RP1=0, select bank1
  5379  0C45  0085               	movwf	5	;volatile
  5380                           
  5381                           ;MCU_B1.c: 63: TRISB = 0b00010011;;
  5382  0C46  3013               	movlw	19
  5383  0C47  0086               	movwf	6	;volatile
  5384                           
  5385                           ;MCU_B1.c: 64: TRISC = 0b00001100;;
  5386  0C48  300C               	movlw	12
  5387  0C49  0087               	movwf	7	;volatile
  5388                           
  5389                           ;MCU_B1.c: 65: ANSELA = 0b00001111;;
  5390  0C4A  300F               	movlw	15
  5391  0C4B  1683               	bsf	3,5	;RP0=1, select bank3
  5392  0C4C  1703               	bsf	3,6	;RP1=1, select bank3
  5393  0C4D  0085               	movwf	5	;volatile
  5394                           
  5395                           ;MCU_B1.c: 66: ANSELB = 0b00010010;;
  5396  0C4E  3012               	movlw	18
  5397  0C4F  0086               	movwf	6	;volatile
  5398                           
  5399                           ;MCU_B1.c: 67: PORTA = 0b10101111;;
  5400  0C50  30AF               	movlw	175
  5401  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  5402  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  5403  0C53  0085               	movwf	5	;volatile
  5404                           
  5405                           ;MCU_B1.c: 68: PORTB = 0b00010011;;
  5406  0C54  3013               	movlw	19
  5407  0C55  0086               	movwf	6	;volatile
  5408                           
  5409                           ;MCU_B1.c: 69: PORTC = 0b00001100;;
  5410  0C56  300C               	movlw	12
  5411  0C57  0087               	movwf	7	;volatile
  5412                           
  5413                           ;MCU_B1.c: 71: WPUB = 0b00000000;;
  5414  0C58  1683               	bsf	3,5	;RP0=1, select bank1
  5415  0C59  1303               	bcf	3,6	;RP1=0, select bank1
  5416  0C5A  0195               	clrf	21	;volatile
  5417  0C5B  0008               	return
  5418  0C5C                     __end_of_IO_Set:	
  5419                           
  5420                           	psect	text27
  5421  0AC1                     __ptext27:	
  5422 ;; *************** function _Fosc_Set *****************
  5423 ;; Defined at:
  5424 ;;		line 56 in file "../src/MCU_B1.c"
  5425 ;; Parameters:    Size  Location     Type
  5426 ;;		None
  5427 ;; Auto vars:     Size  Location     Type
  5428 ;;		None
  5429 ;; Return value:  Size  Location     Type
  5430 ;;		None               void
  5431 ;; Registers used:
  5432 ;;		wreg
  5433 ;; Tracked objects:
  5434 ;;		On entry : 0/0
  5435 ;;		On exit  : 0/0
  5436 ;;		Unchanged: 0/0
  5437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5438 ;;      Params:         0       0       0       0
  5439 ;;      Locals:         0       0       0       0
  5440 ;;      Temps:          0       0       0       0
  5441 ;;      Totals:         0       0       0       0
  5442 ;;Total ram usage:        0 bytes
  5443 ;; Hardware stack levels used:    1
  5444 ;; Hardware stack levels required when called:    2
  5445 ;; This function calls:
  5446 ;;		Nothing
  5447 ;; This function is called by:
  5448 ;;		_Mcu_Initialization
  5449 ;; This function uses a non-reentrant model
  5450 ;;
  5451                           
  5452                           
  5453                           ;psect for function _Fosc_Set
  5454  0AC1                     _Fosc_Set:	
  5455                           
  5456                           ;MCU_B1.c: 57: OSCCON = 0x3c;
  5457                           
  5458                           ;incstack = 0
  5459                           ; Regs used in _Fosc_Set: [wreg]
  5460  0AC1  303C               	movlw	60
  5461  0AC2  1683               	bsf	3,5	;RP0=1, select bank1
  5462  0AC3  1303               	bcf	3,6	;RP1=0, select bank1
  5463  0AC4  0090               	movwf	16	;volatile
  5464  0AC5  0008               	return
  5465  0AC6                     __end_of_Fosc_Set:	
  5466                           
  5467                           	psect	text28
  5468  0ADF                     __ptext28:	
  5469 ;; *************** function _ADC_Set *****************
  5470 ;; Defined at:
  5471 ;;		line 427 in file "../src/MCU_B1.c"
  5472 ;; Parameters:    Size  Location     Type
  5473 ;;		None
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;		None
  5476 ;; Return value:  Size  Location     Type
  5477 ;;		None               void
  5478 ;; Registers used:
  5479 ;;		wreg
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5485 ;;      Params:         0       0       0       0
  5486 ;;      Locals:         0       0       0       0
  5487 ;;      Temps:          0       0       0       0
  5488 ;;      Totals:         0       0       0       0
  5489 ;;Total ram usage:        0 bytes
  5490 ;; Hardware stack levels used:    1
  5491 ;; Hardware stack levels required when called:    2
  5492 ;; This function calls:
  5493 ;;		Nothing
  5494 ;; This function is called by:
  5495 ;;		_Mcu_Initialization
  5496 ;; This function uses a non-reentrant model
  5497 ;;
  5498                           
  5499                           
  5500                           ;psect for function _ADC_Set
  5501  0ADF                     _ADC_Set:	
  5502                           
  5503                           ;MCU_B1.c: 428: ADCON1 = 0x73;
  5504                           
  5505                           ;incstack = 0
  5506                           ; Regs used in _ADC_Set: [wreg]
  5507  0ADF  3073               	movlw	115
  5508  0AE0  1683               	bsf	3,5	;RP0=1, select bank1
  5509  0AE1  1303               	bcf	3,6	;RP1=0, select bank1
  5510  0AE2  009F               	movwf	31	;volatile
  5511                           
  5512                           ;MCU_B1.c: 429: FVRCON = 0xc1;
  5513  0AE3  30C1               	movlw	193
  5514  0AE4  009D               	movwf	29	;volatile
  5515  0AE5  0008               	return
  5516  0AE6                     __end_of_ADC_Set:	
  5517                           
  5518                           	psect	text29
  5519  022D                     __ptext29:	
  5520 ;; *************** function _Load_Main *****************
  5521 ;; Defined at:
  5522 ;;		line 39 in file "../src/OverLoad_B1.c"
  5523 ;; Parameters:    Size  Location     Type
  5524 ;;		None
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;  i               2   15[BANK0 ] int 
  5527 ;;  LightsCount     1   14[BANK0 ] unsigned char 
  5528 ;;  Load_RunStat    1   13[BANK0 ] unsigned char 
  5529 ;;  ErrorCountVa    1   12[BANK0 ] unsigned char 
  5530 ;;  error           1    9[BANK0 ] unsigned char 
  5531 ;; Return value:  Size  Location     Type
  5532 ;;		None               void
  5533 ;; Registers used:
  5534 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5535 ;; Tracked objects:
  5536 ;;		On entry : 0/0
  5537 ;;		On exit  : 0/0
  5538 ;;		Unchanged: 0/0
  5539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5540 ;;      Params:         0       0       0       0
  5541 ;;      Locals:         0       8       0       0
  5542 ;;      Temps:          0       2       0       0
  5543 ;;      Totals:         0      10       0       0
  5544 ;;Total ram usage:       10 bytes
  5545 ;; Hardware stack levels used:    1
  5546 ;; Hardware stack levels required when called:    3
  5547 ;; This function calls:
  5548 ;;		___lwdiv
  5549 ;;		___wmul
  5550 ;;		_getLight_LoadGO
  5551 ;;		_getLight_Load_Status
  5552 ;;		_getMain_All_Error_Status
  5553 ;;		_getMain_All_LightsStatus
  5554 ;;		_getMain_Lights_Count
  5555 ;;		_setLoad_AH_AL_Restore
  5556 ;; This function is called by:
  5557 ;;		_main
  5558 ;; This function uses a non-reentrant model
  5559 ;;
  5560                           
  5561                           
  5562                           ;psect for function _Load_Main
  5563  022D                     _Load_Main:	
  5564                           
  5565                           ;OverLoad_B1.c: 40: char error = getMain_All_Error_Status(0);
  5566                           
  5567                           ;incstack = 0
  5568                           ; Regs used in _Load_Main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5569  022D  3000               	movlw	0
  5570  022E  158A  25BA  118A   	fcall	_getMain_All_Error_Status
  5571  0231  1283               	bcf	3,5	;RP0=0, select bank0
  5572  0232  1303               	bcf	3,6	;RP1=0, select bank0
  5573  0233  00D4               	movwf	??_Load_Main
  5574  0234  0854               	movf	??_Load_Main,w
  5575  0235  00D6               	movwf	Load_Main@error
  5576                           
  5577                           ;OverLoad_B1.c: 41: char Load_RunStatus = 0, ErrorCountValue = 0, LightsCount=0;
  5578  0236  01DA               	clrf	Load_Main@Load_RunStatus
  5579  0237  01D9               	clrf	Load_Main@ErrorCountValue
  5580  0238  01DB               	clrf	Load_Main@LightsCount
  5581                           
  5582                           ;OverLoad_B1.c: 42: if (Load.Enable == 1) {
  5583  0239  1683               	bsf	3,5	;RP0=1, select bank1
  5584  023A  1303               	bcf	3,6	;RP1=0, select bank1
  5585  023B  1C4A               	btfss	_Load^(0+128),0
  5586  023C  2C0F               	goto	l700
  5587                           
  5588                           ;OverLoad_B1.c: 44: if (getMain_All_LightsStatus() == 0) {
  5589  023D  158A  230F  118A   	fcall	_getMain_All_LightsStatus
  5590  0240  3800               	iorlw	0
  5591  0241  1D03               	skipz
  5592  0242  2A46               	goto	l4951
  5593                           
  5594                           ;OverLoad_B1.c: 45: Load.GO = 0;
  5595  0243  1683               	bsf	3,5	;RP0=1, select bank1
  5596  0244  1303               	bcf	3,6	;RP1=0, select bank1
  5597  0245  2A65               	goto	l4967
  5598  0246                     l4951:	
  5599                           ;OverLoad_B1.c: 46: } else {
  5600                           
  5601                           
  5602                           ;OverLoad_B1.c: 69: if (error == 0) {
  5603  0246  1283               	bcf	3,5	;RP0=0, select bank0
  5604  0247  1303               	bcf	3,6	;RP1=0, select bank0
  5605  0248  08D6               	movf	Load_Main@error,f
  5606  0249  1D03               	skipz
  5607  024A  2A62               	goto	l703
  5608                           
  5609                           ;OverLoad_B1.c: 70: Load.GO = 1;
  5610  024B  1683               	bsf	3,5	;RP0=1, select bank1
  5611  024C  1303               	bcf	3,6	;RP1=0, select bank1
  5612  024D  14CA               	bsf	_Load^(0+128),1
  5613                           
  5614                           ;OverLoad_B1.c: 72: if (getLight_LoadGO() == 1) {
  5615  024E  158A  22C6  118A   	fcall	_getLight_LoadGO
  5616  0251  3A01               	xorlw	1
  5617  0252  1D03               	skipz
  5618  0253  2A5C               	goto	l704
  5619                           
  5620                           ;OverLoad_B1.c: 73: if (Load.Run == 0 && Load.OK == 0) {
  5621  0254  1683               	bsf	3,5	;RP0=1, select bank1
  5622  0255  1303               	bcf	3,6	;RP1=0, select bank1
  5623  0256  1DCA               	btfss	_Load^(0+128),3
  5624  0257  1BCA               	btfsc	_Load^(0+128),7
  5625  0258  2A66               	goto	l702
  5626                           
  5627                           ;OverLoad_B1.c: 74: Load.Run = 1;
  5628  0259  15CA               	bsf	_Load^(0+128),3
  5629                           
  5630                           ;OverLoad_B1.c: 75: Load.Count = 0;
  5631  025A  01E3               	clrf	(_Load^(0+128)+25)
  5632                           
  5633                           ;OverLoad_B1.c: 76: }
  5634                           ;OverLoad_B1.c: 77: } else {
  5635  025B  2A66               	goto	l702
  5636  025C                     l704:	
  5637                           
  5638                           ;OverLoad_B1.c: 78: if (Load.OK == 1) {
  5639  025C  1683               	bsf	3,5	;RP0=1, select bank1
  5640  025D  1303               	bcf	3,6	;RP1=0, select bank1
  5641  025E  1FCA               	btfss	_Load^(0+128),7
  5642  025F  2A66               	goto	l702
  5643                           
  5644                           ;OverLoad_B1.c: 79: Load.OK = 0;
  5645  0260  13CA               	bcf	_Load^(0+128),7
  5646                           
  5647                           ;OverLoad_B1.c: 80: }
  5648                           ;OverLoad_B1.c: 81: }
  5649                           ;OverLoad_B1.c: 82: } else {
  5650  0261  2A66               	goto	l702
  5651  0262                     l703:	
  5652                           
  5653                           ;OverLoad_B1.c: 83: if (Load.GO == 1) {
  5654  0262  1683               	bsf	3,5	;RP0=1, select bank1
  5655  0263  1303               	bcf	3,6	;RP1=0, select bank1
  5656  0264  18CA               	btfsc	_Load^(0+128),1
  5657  0265                     l4967:	
  5658                           
  5659                           ;OverLoad_B1.c: 84: Load.GO = 0;
  5660  0265  10CA               	bcf	_Load^(0+128),1
  5661  0266                     l702:	
  5662                           
  5663                           ;OverLoad_B1.c: 85: }
  5664                           ;OverLoad_B1.c: 86: }
  5665                           ;OverLoad_B1.c: 88: }
  5666                           ;OverLoad_B1.c: 91: if (Load.GO == 1) {
  5667  0266  1CCA               	btfss	_Load^(0+128),1
  5668  0267  2BE8               	goto	l710
  5669                           
  5670                           ;OverLoad_B1.c: 92: Load.LightsON = 1;
  5671  0268  154A               	bsf	_Load^(0+128),2
  5672                           
  5673                           ;OverLoad_B1.c: 94: if (Load.ADtoGO == 1) {
  5674  0269  1E4A               	btfss	_Load^(0+128),4
  5675  026A  2BE6               	goto	l711
  5676                           
  5677                           ;OverLoad_B1.c: 95: Load.Time++;
  5678  026B  3001               	movlw	1
  5679  026C  07CB               	addwf	(_Load^(0+128)+1),f
  5680  026D  1803               	skipnc
  5681  026E  0ACC               	incf	((_Load+1)^(0+128)+1),f
  5682  026F  3000               	movlw	0
  5683  0270  07CC               	addwf	((_Load+1)^(0+128)+1),f
  5684                           
  5685                           ;OverLoad_B1.c: 96: if (Load.Time >= (40 / 20)) {
  5686  0271  3000               	movlw	0
  5687  0272  024C               	subwf	((_Load+1)^(0+128)+1),w
  5688  0273  3002               	movlw	2
  5689  0274  1903               	skipnz
  5690  0275  024B               	subwf	(_Load^(0+128)+1),w
  5691  0276  1C03               	skipc
  5692  0277  0008               	return
  5693                           
  5694                           ;OverLoad_B1.c: 97: Load.Time = 0;
  5695  0278  01CB               	clrf	(_Load^(0+128)+1)
  5696  0279  01CC               	clrf	((_Load+1)^(0+128)+1)
  5697                           
  5698                           ;OverLoad_B1.c: 98: Load.ADtoGO = 0;
  5699  027A  124A               	bcf	_Load^(0+128),4
  5700                           
  5701                           ;OverLoad_B1.c: 100: for (int i = 1; i < 4; i++) {
  5702  027B  3001               	movlw	1
  5703  027C  1283               	bcf	3,5	;RP0=0, select bank0
  5704  027D  1303               	bcf	3,6	;RP1=0, select bank0
  5705  027E  00DC               	movwf	Load_Main@i
  5706  027F  3000               	movlw	0
  5707  0280  00DD               	movwf	Load_Main@i+1
  5708  0281  085D               	movf	Load_Main@i+1,w
  5709  0282  3A80               	xorlw	128
  5710  0283  00FF               	movwf	127
  5711  0284  3080               	movlw	128
  5712  0285  027F               	subwf	127,w
  5713  0286  1D03               	skipz
  5714  0287  2A8A               	goto	u6195
  5715  0288  3004               	movlw	4
  5716  0289  025C               	subwf	Load_Main@i,w
  5717  028A                     u6195:	
  5718  028A  1803               	btfsc	3,0
  5719  028B  2AC8               	goto	l4989
  5720  028C                     l4983:	
  5721                           
  5722                           ;OverLoad_B1.c: 101: Load.ADH += Load.AH[i];
  5723  028C  1283               	bcf	3,5	;RP0=0, select bank0
  5724  028D  1303               	bcf	3,6	;RP1=0, select bank0
  5725  028E  085C               	movf	Load_Main@i,w
  5726  028F  3ED4               	addlw	(_Load+10)& (0+255)
  5727  0290  0084               	movwf	4
  5728  0291  1383               	bcf	3,7	;select IRP bank1
  5729  0292  0800               	movf	0,w
  5730  0293  00D4               	movwf	??_Load_Main
  5731  0294  01D5               	clrf	??_Load_Main+1
  5732  0295  0854               	movf	??_Load_Main,w
  5733  0296  1683               	bsf	3,5	;RP0=1, select bank1
  5734  0297  1303               	bcf	3,6	;RP1=0, select bank1
  5735  0298  07CF               	addwf	(_Load^(0+128)+5),f
  5736  0299  1803               	skipnc
  5737  029A  0AD0               	incf	((_Load+1)^(0+128)+5),f
  5738  029B  1283               	bcf	3,5	;RP0=0, select bank0
  5739  029C  1303               	bcf	3,6	;RP1=0, select bank0
  5740  029D  0855               	movf	??_Load_Main+1,w
  5741  029E  1683               	bsf	3,5	;RP0=1, select bank1
  5742  029F  1303               	bcf	3,6	;RP1=0, select bank1
  5743  02A0  07D0               	addwf	((_Load+1)^(0+128)+5),f
  5744                           
  5745                           ;OverLoad_B1.c: 102: Load.ADL += Load.AL[i];
  5746  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  5747  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  5748  02A3  085C               	movf	Load_Main@i,w
  5749  02A4  3ED9               	addlw	(_Load+15)& (0+255)
  5750  02A5  0084               	movwf	4
  5751  02A6  0800               	movf	0,w
  5752  02A7  00D4               	movwf	??_Load_Main
  5753  02A8  01D5               	clrf	??_Load_Main+1
  5754  02A9  0854               	movf	??_Load_Main,w
  5755  02AA  1683               	bsf	3,5	;RP0=1, select bank1
  5756  02AB  1303               	bcf	3,6	;RP1=0, select bank1
  5757  02AC  07D1               	addwf	(_Load^(0+128)+7),f
  5758  02AD  1803               	skipnc
  5759  02AE  0AD2               	incf	((_Load+1)^(0+128)+7),f
  5760  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  5761  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  5762  02B1  0855               	movf	??_Load_Main+1,w
  5763  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  5764  02B3  1303               	bcf	3,6	;RP1=0, select bank1
  5765  02B4  07D2               	addwf	((_Load+1)^(0+128)+7),f
  5766  02B5  3001               	movlw	1
  5767  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  5768  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  5769  02B8  07DC               	addwf	Load_Main@i,f
  5770  02B9  1803               	skipnc
  5771  02BA  0ADD               	incf	Load_Main@i+1,f
  5772  02BB  3000               	movlw	0
  5773  02BC  07DD               	addwf	Load_Main@i+1,f
  5774  02BD  085D               	movf	Load_Main@i+1,w
  5775  02BE  3A80               	xorlw	128
  5776  02BF  00FF               	movwf	127
  5777  02C0  3080               	movlw	128
  5778  02C1  027F               	subwf	127,w
  5779  02C2  1D03               	skipz
  5780  02C3  2AC6               	goto	u6205
  5781  02C4  3004               	movlw	4
  5782  02C5  025C               	subwf	Load_Main@i,w
  5783  02C6                     u6205:	
  5784  02C6  1C03               	skipc
  5785  02C7  2A8C               	goto	l4983
  5786  02C8                     l4989:	
  5787                           
  5788                           ;OverLoad_B1.c: 103: }
  5789                           ;OverLoad_B1.c: 104: Load.ADH /= 3;
  5790  02C8  3003               	movlw	3
  5791  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  5792  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  5793  02CB  00CD               	movwf	___lwdiv@divisor
  5794  02CC  3000               	movlw	0
  5795  02CD  00CE               	movwf	___lwdiv@divisor+1
  5796  02CE  1683               	bsf	3,5	;RP0=1, select bank1
  5797  02CF  1303               	bcf	3,6	;RP1=0, select bank1
  5798  02D0  0850               	movf	((_Load+1)^(0+128)+5),w
  5799  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  5800  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  5801  02D3  01D0               	clrf	___lwdiv@dividend+1
  5802  02D4  07D0               	addwf	___lwdiv@dividend+1,f
  5803  02D5  1683               	bsf	3,5	;RP0=1, select bank1
  5804  02D6  1303               	bcf	3,6	;RP1=0, select bank1
  5805  02D7  084F               	movf	(_Load^(0+128)+5),w
  5806  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  5807  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  5808  02DA  01CF               	clrf	___lwdiv@dividend
  5809  02DB  07CF               	addwf	___lwdiv@dividend,f
  5810  02DC  158A  25F8  118A   	fcall	___lwdiv
  5811  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  5812  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  5813  02E1  084E               	movf	?___lwdiv+1,w
  5814  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  5815  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  5816  02E4  01D0               	clrf	((_Load+1)^(0+128)+5)
  5817  02E5  07D0               	addwf	((_Load+1)^(0+128)+5),f
  5818  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  5819  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  5820  02E8  084D               	movf	?___lwdiv,w
  5821  02E9  1683               	bsf	3,5	;RP0=1, select bank1
  5822  02EA  1303               	bcf	3,6	;RP1=0, select bank1
  5823  02EB  01CF               	clrf	(_Load^(0+128)+5)
  5824  02EC  07CF               	addwf	(_Load^(0+128)+5),f
  5825                           
  5826                           ;OverLoad_B1.c: 105: Load.ADL /= 3;
  5827  02ED  3003               	movlw	3
  5828  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  5829  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  5830  02F0  00CD               	movwf	___lwdiv@divisor
  5831  02F1  3000               	movlw	0
  5832  02F2  00CE               	movwf	___lwdiv@divisor+1
  5833  02F3  1683               	bsf	3,5	;RP0=1, select bank1
  5834  02F4  1303               	bcf	3,6	;RP1=0, select bank1
  5835  02F5  0852               	movf	((_Load+1)^(0+128)+7),w
  5836  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  5837  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  5838  02F8  01D0               	clrf	___lwdiv@dividend+1
  5839  02F9  07D0               	addwf	___lwdiv@dividend+1,f
  5840  02FA  1683               	bsf	3,5	;RP0=1, select bank1
  5841  02FB  1303               	bcf	3,6	;RP1=0, select bank1
  5842  02FC  0851               	movf	(_Load^(0+128)+7),w
  5843  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  5844  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  5845  02FF  01CF               	clrf	___lwdiv@dividend
  5846  0300  07CF               	addwf	___lwdiv@dividend,f
  5847  0301  158A  25F8  118A   	fcall	___lwdiv
  5848  0304  1283               	bcf	3,5	;RP0=0, select bank0
  5849  0305  1303               	bcf	3,6	;RP1=0, select bank0
  5850  0306  084E               	movf	?___lwdiv+1,w
  5851  0307  1683               	bsf	3,5	;RP0=1, select bank1
  5852  0308  1303               	bcf	3,6	;RP1=0, select bank1
  5853  0309  01D2               	clrf	((_Load+1)^(0+128)+7)
  5854  030A  07D2               	addwf	((_Load+1)^(0+128)+7),f
  5855  030B  1283               	bcf	3,5	;RP0=0, select bank0
  5856  030C  1303               	bcf	3,6	;RP1=0, select bank0
  5857  030D  084D               	movf	?___lwdiv,w
  5858  030E  1683               	bsf	3,5	;RP0=1, select bank1
  5859  030F  1303               	bcf	3,6	;RP1=0, select bank1
  5860  0310  01D1               	clrf	(_Load^(0+128)+7)
  5861  0311  07D1               	addwf	(_Load^(0+128)+7),f
  5862                           
  5863                           ;OverLoad_B1.c: 106: setLoad_AH_AL_Restore();
  5864  0312  158A  23E3  118A   	fcall	_setLoad_AH_AL_Restore
  5865                           
  5866                           ;OverLoad_B1.c: 108: if (Load.ADH >= Load.ADL) {
  5867  0315  1683               	bsf	3,5	;RP0=1, select bank1
  5868  0316  1303               	bcf	3,6	;RP1=0, select bank1
  5869  0317  0852               	movf	((_Load+1)^(0+128)+7),w
  5870  0318  0250               	subwf	((_Load+1)^(0+128)+5),w
  5871  0319  1D03               	skipz
  5872  031A  2B1D               	goto	u6215
  5873  031B  0851               	movf	(_Load^(0+128)+7),w
  5874  031C  024F               	subwf	(_Load^(0+128)+5),w
  5875  031D                     u6215:	
  5876  031D  1C03               	skipc
  5877  031E  0008               	return
  5878                           
  5879                           ;OverLoad_B1.c: 109: Load.AD = Load.ADH - Load.ADL;
  5880  031F  0351               	decf	(_Load^(0+128)+7),w
  5881  0320  3AFF               	xorlw	255
  5882  0321  074F               	addwf	(_Load^(0+128)+5),w
  5883  0322  1283               	bcf	3,5	;RP0=0, select bank0
  5884  0323  1303               	bcf	3,6	;RP1=0, select bank0
  5885  0324  00D4               	movwf	??_Load_Main
  5886  0325  0854               	movf	??_Load_Main,w
  5887  0326  1683               	bsf	3,5	;RP0=1, select bank1
  5888  0327  1303               	bcf	3,6	;RP1=0, select bank1
  5889  0328  00DE               	movwf	(_Load^(0+128)+20)
  5890                           
  5891                           ;OverLoad_B1.c: 110: Load.ADH = 0;
  5892  0329  01CF               	clrf	(_Load^(0+128)+5)
  5893  032A  01D0               	clrf	((_Load+1)^(0+128)+5)
  5894                           
  5895                           ;OverLoad_B1.c: 111: Load.ADL = 0;
  5896  032B  01D1               	clrf	(_Load^(0+128)+7)
  5897  032C  01D2               	clrf	((_Load+1)^(0+128)+7)
  5898                           
  5899                           ;OverLoad_B1.c: 113: if (Load.Run == 1) {
  5900  032D  1DCA               	btfss	_Load^(0+128),3
  5901  032E  2B92               	goto	l716
  5902                           
  5903                           ;OverLoad_B1.c: 114: if (Load.Count < 2) {
  5904  032F  3002               	movlw	2
  5905  0330  0263               	subwf	(_Load^(0+128)+25),w
  5906  0331  1803               	skipnc
  5907  0332  2B92               	goto	l716
  5908                           
  5909                           ;OverLoad_B1.c: 115: Load.Count++;
  5910  0333  3001               	movlw	1
  5911  0334  1283               	bcf	3,5	;RP0=0, select bank0
  5912  0335  1303               	bcf	3,6	;RP1=0, select bank0
  5913  0336  00D4               	movwf	??_Load_Main
  5914  0337  0854               	movf	??_Load_Main,w
  5915  0338  1683               	bsf	3,5	;RP0=1, select bank1
  5916  0339  1303               	bcf	3,6	;RP1=0, select bank1
  5917  033A  07E3               	addwf	(_Load^(0+128)+25),f
  5918                           
  5919                           ;OverLoad_B1.c: 120: Load_RunStatus = getLight_Load_Status();
  5920  033B  158A  22CC  118A   	fcall	_getLight_Load_Status
  5921  033E  1283               	bcf	3,5	;RP0=0, select bank0
  5922  033F  1303               	bcf	3,6	;RP1=0, select bank0
  5923  0340  00D4               	movwf	??_Load_Main
  5924  0341  0854               	movf	??_Load_Main,w
  5925  0342  00DA               	movwf	Load_Main@Load_RunStatus
  5926                           
  5927                           ;OverLoad_B1.c: 122: LightsCount = getMain_Lights_Count();
  5928  0343  158A  2322  118A   	fcall	_getMain_Lights_Count
  5929  0346  1283               	bcf	3,5	;RP0=0, select bank0
  5930  0347  1303               	bcf	3,6	;RP1=0, select bank0
  5931  0348  00D4               	movwf	??_Load_Main
  5932  0349  0854               	movf	??_Load_Main,w
  5933  034A  00DB               	movwf	Load_Main@LightsCount
  5934                           
  5935                           ;OverLoad_B1.c: 124: if (Load.Count == 1) {
  5936  034B  1683               	bsf	3,5	;RP0=1, select bank1
  5937  034C  1303               	bcf	3,6	;RP1=0, select bank1
  5938  034D  0863               	movf	(_Load^(0+128)+25),w
  5939  034E  3A01               	xorlw	1
  5940  034F  1D03               	skipz
  5941  0350  2B53               	goto	l5015
  5942                           
  5943                           ;OverLoad_B1.c: 126: Load.JudgeValue = (int)(20*1.7);
  5944  0351  3022               	movlw	34
  5945  0352  2B60               	goto	L14
  5946  0353                     l5015:	
  5947                           ;OverLoad_B1.c: 127: } else if (Load.Count == 2) {
  5948                           
  5949  0353  0863               	movf	(_Load^(0+128)+25),w
  5950  0354  3A02               	xorlw	2
  5951  0355  1D03               	skipz
  5952  0356  2B92               	goto	l716
  5953                           
  5954                           ;OverLoad_B1.c: 128: if (LightsCount == 1) {
  5955  0357  1283               	bcf	3,5	;RP0=0, select bank0
  5956  0358  1303               	bcf	3,6	;RP1=0, select bank0
  5957  0359  085B               	movf	Load_Main@LightsCount,w
  5958  035A  3A01               	xorlw	1
  5959  035B  1D03               	skipz
  5960  035C  2B63               	goto	l5021
  5961                           
  5962                           ;OverLoad_B1.c: 129: Load.JudgeValue = (int)(8*1.7);
  5963  035D  300D               	movlw	13
  5964  035E  1683               	bsf	3,5	;RP0=1, select bank1
  5965  035F  1303               	bcf	3,6	;RP1=0, select bank1
  5966  0360                     L14:	
  5967  0360  00E1               	movwf	(_Load^(0+128)+23)
  5968  0361  3000               	movlw	0
  5969  0362  2B91               	goto	L15
  5970  0363                     l5021:	
  5971                           ;OverLoad_B1.c: 130: } else {
  5972                           
  5973                           
  5974                           ;OverLoad_B1.c: 131: if (Load_RunStatus == 0) {
  5975  0363  1283               	bcf	3,5	;RP0=0, select bank0
  5976  0364  08DA               	movf	Load_Main@Load_RunStatus,f
  5977  0365  1D03               	skipz
  5978  0366  2B84               	goto	l5025
  5979                           
  5980                           ;OverLoad_B1.c: 132: Load.JudgeValue = (int)(8*1.7) * LightsCount;
  5981  0367  085B               	movf	Load_Main@LightsCount,w
  5982  0368  00D4               	movwf	??_Load_Main
  5983  0369  01D5               	clrf	??_Load_Main+1
  5984  036A  0854               	movf	??_Load_Main,w
  5985  036B  00CD               	movwf	___wmul@multiplier
  5986  036C  0855               	movf	??_Load_Main+1,w
  5987  036D  00CE               	movwf	___wmul@multiplier+1
  5988  036E  300D               	movlw	13
  5989  036F  00CF               	movwf	___wmul@multiplicand
  5990  0370  3000               	movlw	0
  5991  0371  00D0               	movwf	___wmul@multiplicand+1
  5992  0372  158A  2531  118A   	fcall	___wmul
  5993  0375  1283               	bcf	3,5	;RP0=0, select bank0
  5994  0376  1303               	bcf	3,6	;RP1=0, select bank0
  5995  0377  084E               	movf	?___wmul+1,w
  5996  0378  1683               	bsf	3,5	;RP0=1, select bank1
  5997  0379  1303               	bcf	3,6	;RP1=0, select bank1
  5998  037A  01E2               	clrf	((_Load+1)^(0+128)+23)
  5999  037B  07E2               	addwf	((_Load+1)^(0+128)+23),f
  6000  037C  1283               	bcf	3,5	;RP0=0, select bank0
  6001  037D  1303               	bcf	3,6	;RP1=0, select bank0
  6002  037E  084D               	movf	?___wmul,w
  6003  037F  1683               	bsf	3,5	;RP0=1, select bank1
  6004  0380  1303               	bcf	3,6	;RP1=0, select bank1
  6005  0381  01E1               	clrf	(_Load^(0+128)+23)
  6006  0382  07E1               	addwf	(_Load^(0+128)+23),f
  6007                           
  6008                           ;OverLoad_B1.c: 133: } else if (Load_RunStatus == 1) {
  6009  0383  2B92               	goto	l716
  6010  0384                     l5025:	
  6011  0384  1283               	bcf	3,5	;RP0=0, select bank0
  6012  0385  085A               	movf	Load_Main@Load_RunStatus,w
  6013  0386  3A01               	xorlw	1
  6014  0387  1D03               	skipz
  6015  0388  2B92               	goto	l716
  6016                           
  6017                           ;OverLoad_B1.c: 134: Load.JudgeValue = (int)(8*1.7) + Load.TotalLoad;
  6018  0389  1683               	bsf	3,5	;RP0=1, select bank1
  6019  038A  1303               	bcf	3,6	;RP1=0, select bank1
  6020  038B  0853               	movf	(_Load^(0+128)+9),w
  6021  038C  3E0D               	addlw	13
  6022  038D  00E1               	movwf	(_Load^(0+128)+23)
  6023  038E  3000               	movlw	0
  6024  038F  1803               	skipnc
  6025  0390  3001               	movlw	1
  6026  0391                     L15:	
  6027  0391  00E2               	movwf	(_Load^(0+128)+24)
  6028  0392                     l716:	
  6029                           
  6030                           ;OverLoad_B1.c: 135: }
  6031                           ;OverLoad_B1.c: 136: }
  6032                           ;OverLoad_B1.c: 137: }
  6033                           ;OverLoad_B1.c: 138: }
  6034                           ;OverLoad_B1.c: 139: }
  6035                           ;OverLoad_B1.c: 141: if (Load.AD >= Load.JudgeValue) {
  6036  0392  1683               	bsf	3,5	;RP0=1, select bank1
  6037  0393  1303               	bcf	3,6	;RP1=0, select bank1
  6038  0394  085E               	movf	(_Load^(0+128)+20),w
  6039  0395  1283               	bcf	3,5	;RP0=0, select bank0
  6040  0396  1303               	bcf	3,6	;RP1=0, select bank0
  6041  0397  00D4               	movwf	??_Load_Main
  6042  0398  01D5               	clrf	??_Load_Main+1
  6043  0399  1683               	bsf	3,5	;RP0=1, select bank1
  6044  039A  1303               	bcf	3,6	;RP1=0, select bank1
  6045  039B  0862               	movf	((_Load+1)^(0+128)+23),w
  6046  039C  1283               	bcf	3,5	;RP0=0, select bank0
  6047  039D  1303               	bcf	3,6	;RP1=0, select bank0
  6048  039E  0255               	subwf	??_Load_Main+1,w
  6049  039F  1D03               	skipz
  6050  03A0  2BA7               	goto	u6295
  6051  03A1  1683               	bsf	3,5	;RP0=1, select bank1
  6052  03A2  1303               	bcf	3,6	;RP1=0, select bank1
  6053  03A3  0861               	movf	(_Load^(0+128)+23),w
  6054  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  6055  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  6056  03A6  0254               	subwf	??_Load_Main,w
  6057  03A7                     u6295:	
  6058  03A7  1C03               	skipc
  6059  03A8  2BC8               	goto	l5043
  6060                           
  6061                           ;OverLoad_B1.c: 142: ErrorCountValue = LightsCount == 1 ? 2 : 3;
  6062  03A9  085B               	movf	Load_Main@LightsCount,w
  6063  03AA  3A01               	xorlw	1
  6064  03AB  1903               	skipnz
  6065  03AC  2BAF               	goto	l5033
  6066  03AD  3003               	movlw	3
  6067  03AE  2BB0               	goto	L16
  6068  03AF                     l5033:	
  6069  03AF  3002               	movlw	2
  6070  03B0                     L16:	
  6071  03B0  00D7               	movwf	_Load_Main$2389
  6072  03B1  3000               	movlw	0
  6073  03B2  00D8               	movwf	_Load_Main$2389+1
  6074  03B3  0857               	movf	_Load_Main$2389,w
  6075  03B4  00D4               	movwf	??_Load_Main
  6076  03B5  0854               	movf	??_Load_Main,w
  6077  03B6  00D9               	movwf	Load_Main@ErrorCountValue
  6078                           
  6079                           ;OverLoad_B1.c: 143: Load.ErrorCount++;
  6080  03B7  3001               	movlw	1
  6081  03B8  00D4               	movwf	??_Load_Main
  6082  03B9  0854               	movf	??_Load_Main,w
  6083  03BA  1683               	bsf	3,5	;RP0=1, select bank1
  6084  03BB  1303               	bcf	3,6	;RP1=0, select bank1
  6085  03BC  07E4               	addwf	(_Load^(0+128)+26),f
  6086                           
  6087                           ;OverLoad_B1.c: 144: if (Load.ErrorCount > ErrorCountValue) {
  6088  03BD  0864               	movf	(_Load^(0+128)+26),w
  6089  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  6090  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  6091  03C0  0259               	subwf	Load_Main@ErrorCountValue,w
  6092  03C1  1803               	skipnc
  6093  03C2  0008               	return
  6094                           
  6095                           ;OverLoad_B1.c: 145: Load.ErrorCount = 0;
  6096  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  6097  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  6098  03C5  01E4               	clrf	(_Load^(0+128)+26)
  6099                           
  6100                           ;OverLoad_B1.c: 146: Load.ERROR = 1;
  6101  03C6  16CA               	bsf	_Load^(0+128),5
  6102                           
  6103                           ;OverLoad_B1.c: 168: }
  6104                           ;OverLoad_B1.c: 169: } else {
  6105  03C7  0008               	return
  6106  03C8                     l5043:	
  6107                           
  6108                           ;OverLoad_B1.c: 170: Load.ErrorCount = 0;
  6109  03C8  1683               	bsf	3,5	;RP0=1, select bank1
  6110  03C9  1303               	bcf	3,6	;RP1=0, select bank1
  6111  03CA  01E4               	clrf	(_Load^(0+128)+26)
  6112                           
  6113                           ;OverLoad_B1.c: 171: if (Load.Run == 1) {
  6114  03CB  1DCA               	btfss	_Load^(0+128),3
  6115  03CC  0008               	return
  6116                           
  6117                           ;OverLoad_B1.c: 172: Load.SafeCount++;
  6118  03CD  3001               	movlw	1
  6119  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  6120  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  6121  03D0  00D4               	movwf	??_Load_Main
  6122  03D1  0854               	movf	??_Load_Main,w
  6123  03D2  1683               	bsf	3,5	;RP0=1, select bank1
  6124  03D3  1303               	bcf	3,6	;RP1=0, select bank1
  6125  03D4  07E5               	addwf	(_Load^(0+128)+27),f
  6126                           
  6127                           ;OverLoad_B1.c: 173: if (Load.SafeCount >= 3) {
  6128  03D5  3003               	movlw	3
  6129  03D6  0265               	subwf	(_Load^(0+128)+27),w
  6130  03D7  1C03               	skipc
  6131  03D8  0008               	return
  6132                           
  6133                           ;OverLoad_B1.c: 174: Load.SafeCount = 0;
  6134  03D9  01E5               	clrf	(_Load^(0+128)+27)
  6135                           
  6136                           ;OverLoad_B1.c: 175: Load.OK = 1;
  6137  03DA  17CA               	bsf	_Load^(0+128),7
  6138                           
  6139                           ;OverLoad_B1.c: 176: Load.Run = 0;
  6140  03DB  11CA               	bcf	_Load^(0+128),3
  6141                           
  6142                           ;OverLoad_B1.c: 177: Load.Count = 0;
  6143  03DC  01E3               	clrf	(_Load^(0+128)+25)
  6144                           
  6145                           ;OverLoad_B1.c: 178: Load.TotalLoad = Load.AD;
  6146  03DD  085E               	movf	(_Load^(0+128)+20),w
  6147  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  6148  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  6149  03E0  00D4               	movwf	??_Load_Main
  6150  03E1  0854               	movf	??_Load_Main,w
  6151  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  6152  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  6153  03E4  00D3               	movwf	(_Load^(0+128)+9)
  6154                           
  6155                           ;OverLoad_B1.c: 182: }
  6156                           ;OverLoad_B1.c: 183: }
  6157                           ;OverLoad_B1.c: 206: }
  6158                           ;OverLoad_B1.c: 207: }
  6159                           ;OverLoad_B1.c: 208: }
  6160                           ;OverLoad_B1.c: 209: } else {
  6161  03E5  0008               	return
  6162  03E6                     l711:	
  6163                           
  6164                           ;OverLoad_B1.c: 210: Load.ADtoGO = 1;
  6165  03E6  164A               	bsf	_Load^(0+128),4
  6166                           
  6167                           ;OverLoad_B1.c: 211: }
  6168                           ;OverLoad_B1.c: 212: } else {
  6169  03E7  0008               	return
  6170  03E8                     l710:	
  6171                           
  6172                           ;OverLoad_B1.c: 214: if (Load.LightsON == 1) {
  6173  03E8  1D4A               	btfss	_Load^(0+128),2
  6174  03E9  2BFC               	goto	l5079
  6175                           
  6176                           ;OverLoad_B1.c: 215: Load.LightsON = 0;
  6177  03EA  114A               	bcf	_Load^(0+128),2
  6178                           
  6179                           ;OverLoad_B1.c: 217: Load.ADtoGO = 0;
  6180  03EB  124A               	bcf	_Load^(0+128),4
  6181                           
  6182                           ;OverLoad_B1.c: 218: Load.Time = 0;
  6183  03EC  01CB               	clrf	(_Load^(0+128)+1)
  6184  03ED  01CC               	clrf	((_Load+1)^(0+128)+1)
  6185                           
  6186                           ;OverLoad_B1.c: 219: setLoad_AH_AL_Restore();
  6187  03EE  158A  23E3  118A   	fcall	_setLoad_AH_AL_Restore
  6188                           
  6189                           ;OverLoad_B1.c: 221: Load.ErrorCount = 0;
  6190  03F1  1683               	bsf	3,5	;RP0=1, select bank1
  6191  03F2  1303               	bcf	3,6	;RP1=0, select bank1
  6192  03F3  01E4               	clrf	(_Load^(0+128)+26)
  6193                           
  6194                           ;OverLoad_B1.c: 222: Load.SafeCount = 0;
  6195  03F4  01E5               	clrf	(_Load^(0+128)+27)
  6196                           
  6197                           ;OverLoad_B1.c: 224: Load.ADH = 0;
  6198  03F5  01CF               	clrf	(_Load^(0+128)+5)
  6199  03F6  01D0               	clrf	((_Load+1)^(0+128)+5)
  6200                           
  6201                           ;OverLoad_B1.c: 225: Load.ADL = 0;
  6202  03F7  01D1               	clrf	(_Load^(0+128)+7)
  6203  03F8  01D2               	clrf	((_Load+1)^(0+128)+7)
  6204                           
  6205                           ;OverLoad_B1.c: 231: Load.Run = 0;
  6206  03F9  11CA               	bcf	_Load^(0+128),3
  6207                           
  6208                           ;OverLoad_B1.c: 232: Load.Count = 0;
  6209  03FA  01E3               	clrf	(_Load^(0+128)+25)
  6210                           
  6211                           ;OverLoad_B1.c: 233: Load.OK = 0;
  6212  03FB  13CA               	bcf	_Load^(0+128),7
  6213  03FC                     l5079:	
  6214                           
  6215                           ;OverLoad_B1.c: 255: }
  6216                           ;OverLoad_B1.c: 256: if (Load.ERROR == 1) {
  6217  03FC  1ECA               	btfss	_Load^(0+128),5
  6218  03FD  0008               	return
  6219                           
  6220                           ;OverLoad_B1.c: 257: Load.ErrorTime++;
  6221  03FE  3001               	movlw	1
  6222  03FF  07CD               	addwf	(_Load^(0+128)+3),f
  6223  0400  1803               	skipnc
  6224  0401  0ACE               	incf	((_Load+1)^(0+128)+3),f
  6225  0402  3000               	movlw	0
  6226  0403  07CE               	addwf	((_Load+1)^(0+128)+3),f
  6227                           
  6228                           ;OverLoad_B1.c: 258: if (Load.ErrorTime >= (10000 / 20)) {
  6229  0404  3001               	movlw	1
  6230  0405  024E               	subwf	((_Load+1)^(0+128)+3),w
  6231  0406  30F4               	movlw	244
  6232  0407  1903               	skipnz
  6233  0408  024D               	subwf	(_Load^(0+128)+3),w
  6234  0409  1C03               	skipc
  6235  040A  0008               	return
  6236                           
  6237                           ;OverLoad_B1.c: 259: Load.ErrorTime = 0;
  6238  040B  01CD               	clrf	(_Load^(0+128)+3)
  6239  040C  01CE               	clrf	((_Load+1)^(0+128)+3)
  6240                           
  6241                           ;OverLoad_B1.c: 260: Load.ERROR = 0;
  6242  040D  12CA               	bcf	_Load^(0+128),5
  6243                           
  6244                           ;OverLoad_B1.c: 261: }
  6245                           ;OverLoad_B1.c: 262: }
  6246                           ;OverLoad_B1.c: 263: }
  6247                           ;OverLoad_B1.c: 264: } else {
  6248  040E  0008               	return
  6249  040F                     l700:	
  6250                           
  6251                           ;OverLoad_B1.c: 265: if (myMain.PowerON == 1) {
  6252  040F  1283               	bcf	3,5	;RP0=0, select bank0
  6253  0410  1303               	bcf	3,6	;RP1=0, select bank0
  6254  0411  1C25               	btfss	_myMain,0
  6255  0412  0008               	return
  6256                           
  6257                           ;OverLoad_B1.c: 266: Load.Enable = 1;
  6258  0413  1683               	bsf	3,5	;RP0=1, select bank1
  6259  0414  1303               	bcf	3,6	;RP1=0, select bank1
  6260  0415  144A               	bsf	_Load^(0+128),0
  6261  0416  0008               	return
  6262  0417                     __end_of_Load_Main:	
  6263                           
  6264                           	psect	text30
  6265  0B22                     __ptext30:	
  6266 ;; *************** function _getMain_Lights_Count *****************
  6267 ;; Defined at:
  6268 ;;		line 459 in file "../src/Main_B1.c"
  6269 ;; Parameters:    Size  Location     Type
  6270 ;;		None
  6271 ;; Auto vars:     Size  Location     Type
  6272 ;;  status1         1    5[COMMON] unsigned char 
  6273 ;;  count           1    4[COMMON] unsigned char 
  6274 ;; Return value:  Size  Location     Type
  6275 ;;                  1    wreg      unsigned char 
  6276 ;; Registers used:
  6277 ;;		wreg, status,2
  6278 ;; Tracked objects:
  6279 ;;		On entry : 0/0
  6280 ;;		On exit  : 0/0
  6281 ;;		Unchanged: 0/0
  6282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6283 ;;      Params:         0       0       0       0
  6284 ;;      Locals:         2       0       0       0
  6285 ;;      Temps:          0       0       0       0
  6286 ;;      Totals:         2       0       0       0
  6287 ;;Total ram usage:        2 bytes
  6288 ;; Hardware stack levels used:    1
  6289 ;; Hardware stack levels required when called:    2
  6290 ;; This function calls:
  6291 ;;		Nothing
  6292 ;; This function is called by:
  6293 ;;		_Load_Main
  6294 ;; This function uses a non-reentrant model
  6295 ;;
  6296                           
  6297                           
  6298                           ;psect for function _getMain_Lights_Count
  6299  0B22                     _getMain_Lights_Count:	
  6300                           
  6301                           ;Main_B1.c: 460: char count = 0;
  6302                           
  6303                           ;incstack = 0
  6304                           ; Regs used in _getMain_Lights_Count: [wreg+status,2]
  6305  0B22  01F4               	clrf	getMain_Lights_Count@count
  6306                           
  6307                           ;Main_B1.c: 476: char status1 = Lights1.Status == 1 ? 1 : 0;
  6308  0B23  3000               	movlw	0
  6309  0B24  1283               	bcf	3,5	;RP0=0, select bank0
  6310  0B25  1303               	bcf	3,6	;RP1=0, select bank0
  6311  0B26  1940               	btfsc	_Lights1,2
  6312  0B27  3001               	movlw	1
  6313  0B28  00F5               	movwf	getMain_Lights_Count@status1
  6314                           
  6315                           ;Main_B1.c: 487: return count = status1;
  6316  0B29  0875               	movf	getMain_Lights_Count@status1,w
  6317  0B2A  00F4               	movwf	getMain_Lights_Count@count
  6318  0B2B  0008               	return
  6319  0B2C                     __end_of_getMain_Lights_Count:	
  6320                           
  6321                           	psect	text31
  6322  0ACC                     __ptext31:	
  6323 ;; *************** function _getLight_Load_Status *****************
  6324 ;; Defined at:
  6325 ;;		line 405 in file "../src/TriacRelay_B1.c"
  6326 ;; Parameters:    Size  Location     Type
  6327 ;;		None
  6328 ;; Auto vars:     Size  Location     Type
  6329 ;;  loadstatus      1    4[COMMON] unsigned char 
  6330 ;; Return value:  Size  Location     Type
  6331 ;;                  1    wreg      unsigned char 
  6332 ;; Registers used:
  6333 ;;		wreg, status,2
  6334 ;; Tracked objects:
  6335 ;;		On entry : 0/0
  6336 ;;		On exit  : 0/0
  6337 ;;		Unchanged: 0/0
  6338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6339 ;;      Params:         0       0       0       0
  6340 ;;      Locals:         1       0       0       0
  6341 ;;      Temps:          0       0       0       0
  6342 ;;      Totals:         1       0       0       0
  6343 ;;Total ram usage:        1 bytes
  6344 ;; Hardware stack levels used:    1
  6345 ;; Hardware stack levels required when called:    2
  6346 ;; This function calls:
  6347 ;;		Nothing
  6348 ;; This function is called by:
  6349 ;;		_Load_Main
  6350 ;; This function uses a non-reentrant model
  6351 ;;
  6352                           
  6353                           
  6354                           ;psect for function _getLight_Load_Status
  6355  0ACC                     _getLight_Load_Status:	
  6356                           
  6357                           ;TriacRelay_B1.c: 406: char loadstatus = Light.Load_Status == 1 ? 1 : 0;
  6358                           
  6359                           ;incstack = 0
  6360                           ; Regs used in _getLight_Load_Status: [wreg+status,2]
  6361  0ACC  3000               	movlw	0
  6362  0ACD  18F7               	btfsc	_Light,1
  6363  0ACE  3001               	movlw	1
  6364  0ACF  00F4               	movwf	getLight_Load_Status@loadstatus
  6365                           
  6366                           ;TriacRelay_B1.c: 407: return loadstatus;
  6367  0AD0  0874               	movf	getLight_Load_Status@loadstatus,w
  6368  0AD1  0008               	return
  6369  0AD2                     __end_of_getLight_Load_Status:	
  6370                           
  6371                           	psect	text32
  6372  0AC6                     __ptext32:	
  6373 ;; *************** function _getLight_LoadGO *****************
  6374 ;; Defined at:
  6375 ;;		line 400 in file "../src/TriacRelay_B1.c"
  6376 ;; Parameters:    Size  Location     Type
  6377 ;;		None
  6378 ;; Auto vars:     Size  Location     Type
  6379 ;;  loadgo          1    4[COMMON] unsigned char 
  6380 ;; Return value:  Size  Location     Type
  6381 ;;                  1    wreg      unsigned char 
  6382 ;; Registers used:
  6383 ;;		wreg, status,2
  6384 ;; Tracked objects:
  6385 ;;		On entry : 0/0
  6386 ;;		On exit  : 0/0
  6387 ;;		Unchanged: 0/0
  6388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6389 ;;      Params:         0       0       0       0
  6390 ;;      Locals:         1       0       0       0
  6391 ;;      Temps:          0       0       0       0
  6392 ;;      Totals:         1       0       0       0
  6393 ;;Total ram usage:        1 bytes
  6394 ;; Hardware stack levels used:    1
  6395 ;; Hardware stack levels required when called:    2
  6396 ;; This function calls:
  6397 ;;		Nothing
  6398 ;; This function is called by:
  6399 ;;		_Load_Main
  6400 ;; This function uses a non-reentrant model
  6401 ;;
  6402                           
  6403                           
  6404                           ;psect for function _getLight_LoadGO
  6405  0AC6                     _getLight_LoadGO:	
  6406                           
  6407                           ;TriacRelay_B1.c: 401: char loadgo = Light.LoadGO == 1 ? 1 : 0;
  6408                           
  6409                           ;incstack = 0
  6410                           ; Regs used in _getLight_LoadGO: [wreg+status,2]
  6411  0AC6  3000               	movlw	0
  6412  0AC7  1877               	btfsc	_Light,0
  6413  0AC8  3001               	movlw	1
  6414  0AC9  00F4               	movwf	getLight_LoadGO@loadgo
  6415                           
  6416                           ;TriacRelay_B1.c: 402: return loadgo;
  6417  0ACA  0874               	movf	getLight_LoadGO@loadgo,w
  6418  0ACB  0008               	return
  6419  0ACC                     __end_of_getLight_LoadGO:	
  6420                           
  6421                           	psect	text33
  6422  0D31                     __ptext33:	
  6423 ;; *************** function ___wmul *****************
  6424 ;; Defined at:
  6425 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul16.c"
  6426 ;; Parameters:    Size  Location     Type
  6427 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6428 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6429 ;; Auto vars:     Size  Location     Type
  6430 ;;  product         2    4[COMMON] unsigned int 
  6431 ;; Return value:  Size  Location     Type
  6432 ;;                  2    0[BANK0 ] unsigned int 
  6433 ;; Registers used:
  6434 ;;		wreg, status,2, status,0
  6435 ;; Tracked objects:
  6436 ;;		On entry : 0/0
  6437 ;;		On exit  : 0/0
  6438 ;;		Unchanged: 0/0
  6439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6440 ;;      Params:         0       4       0       0
  6441 ;;      Locals:         2       0       0       0
  6442 ;;      Temps:          0       0       0       0
  6443 ;;      Totals:         2       4       0       0
  6444 ;;Total ram usage:        6 bytes
  6445 ;; Hardware stack levels used:    1
  6446 ;; Hardware stack levels required when called:    2
  6447 ;; This function calls:
  6448 ;;		Nothing
  6449 ;; This function is called by:
  6450 ;;		_Load_Main
  6451 ;; This function uses a non-reentrant model
  6452 ;;
  6453                           
  6454                           
  6455                           ;psect for function ___wmul
  6456  0D31                     ___wmul:	
  6457                           
  6458                           ;incstack = 0
  6459                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6460  0D31  01F4               	clrf	___wmul@product
  6461  0D32  01F5               	clrf	___wmul@product+1
  6462  0D33                     l4729:	
  6463  0D33  1283               	bcf	3,5	;RP0=0, select bank0
  6464  0D34  1303               	bcf	3,6	;RP1=0, select bank0
  6465  0D35  1C4D               	btfss	___wmul@multiplier,0
  6466  0D36  2D3D               	goto	l1384
  6467  0D37  084F               	movf	___wmul@multiplicand,w
  6468  0D38  07F4               	addwf	___wmul@product,f
  6469  0D39  1803               	skipnc
  6470  0D3A  0AF5               	incf	___wmul@product+1,f
  6471  0D3B  0850               	movf	___wmul@multiplicand+1,w
  6472  0D3C  07F5               	addwf	___wmul@product+1,f
  6473  0D3D                     l1384:	
  6474  0D3D  3001               	movlw	1
  6475  0D3E                     u5635:	
  6476  0D3E  1003               	clrc
  6477  0D3F  0DCF               	rlf	___wmul@multiplicand,f
  6478  0D40  0DD0               	rlf	___wmul@multiplicand+1,f
  6479  0D41  3EFF               	addlw	-1
  6480  0D42  1D03               	skipz
  6481  0D43  2D3E               	goto	u5635
  6482  0D44  3001               	movlw	1
  6483  0D45                     u5645:	
  6484  0D45  1003               	clrc
  6485  0D46  0CCE               	rrf	___wmul@multiplier+1,f
  6486  0D47  0CCD               	rrf	___wmul@multiplier,f
  6487  0D48  3EFF               	addlw	-1
  6488  0D49  1D03               	skipz
  6489  0D4A  2D45               	goto	u5645
  6490  0D4B  084E               	movf	___wmul@multiplier+1,w
  6491  0D4C  044D               	iorwf	___wmul@multiplier,w
  6492  0D4D  1D03               	skipz
  6493  0D4E  2D33               	goto	l4729
  6494  0D4F  0875               	movf	___wmul@product+1,w
  6495  0D50  01CE               	clrf	?___wmul+1
  6496  0D51  07CE               	addwf	?___wmul+1,f
  6497  0D52  0874               	movf	___wmul@product,w
  6498  0D53  01CD               	clrf	?___wmul
  6499  0D54  07CD               	addwf	?___wmul,f
  6500  0D55  0008               	return
  6501  0D56                     __end_of___wmul:	
  6502                           
  6503                           	psect	text34
  6504  0DF8                     __ptext34:	
  6505 ;; *************** function ___lwdiv *****************
  6506 ;; Defined at:
  6507 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  6508 ;; Parameters:    Size  Location     Type
  6509 ;;  divisor         2    0[BANK0 ] unsigned int 
  6510 ;;  dividend        2    2[BANK0 ] unsigned int 
  6511 ;; Auto vars:     Size  Location     Type
  6512 ;;  quotient        2    5[BANK0 ] unsigned int 
  6513 ;;  counter         1    4[BANK0 ] unsigned char 
  6514 ;; Return value:  Size  Location     Type
  6515 ;;                  2    0[BANK0 ] unsigned int 
  6516 ;; Registers used:
  6517 ;;		wreg, status,2, status,0
  6518 ;; Tracked objects:
  6519 ;;		On entry : 0/0
  6520 ;;		On exit  : 0/0
  6521 ;;		Unchanged: 0/0
  6522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6523 ;;      Params:         0       4       0       0
  6524 ;;      Locals:         0       3       0       0
  6525 ;;      Temps:          1       0       0       0
  6526 ;;      Totals:         1       7       0       0
  6527 ;;Total ram usage:        8 bytes
  6528 ;; Hardware stack levels used:    1
  6529 ;; Hardware stack levels required when called:    2
  6530 ;; This function calls:
  6531 ;;		Nothing
  6532 ;; This function is called by:
  6533 ;;		_Load_Main
  6534 ;;		_getPIR_AD
  6535 ;; This function uses a non-reentrant model
  6536 ;;
  6537                           
  6538                           
  6539                           ;psect for function ___lwdiv
  6540  0DF8                     ___lwdiv:	
  6541                           
  6542                           ;incstack = 0
  6543                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6544  0DF8  1283               	bcf	3,5	;RP0=0, select bank0
  6545  0DF9  1303               	bcf	3,6	;RP1=0, select bank0
  6546  0DFA  01D2               	clrf	___lwdiv@quotient
  6547  0DFB  01D3               	clrf	___lwdiv@quotient+1
  6548  0DFC  084E               	movf	___lwdiv@divisor+1,w
  6549  0DFD  044D               	iorwf	___lwdiv@divisor,w
  6550  0DFE  1903               	skipnz
  6551  0DFF  2E31               	goto	l4761
  6552  0E00  01D1               	clrf	___lwdiv@counter
  6553  0E01  0AD1               	incf	___lwdiv@counter,f
  6554  0E02                     l4749:	
  6555  0E02  1BCE               	btfsc	___lwdiv@divisor+1,7
  6556  0E03  2E10               	goto	l4751
  6557  0E04  3001               	movlw	1
  6558  0E05                     u5675:	
  6559  0E05  1003               	clrc
  6560  0E06  0DCD               	rlf	___lwdiv@divisor,f
  6561  0E07  0DCE               	rlf	___lwdiv@divisor+1,f
  6562  0E08  3EFF               	addlw	-1
  6563  0E09  1D03               	skipz
  6564  0E0A  2E05               	goto	u5675
  6565  0E0B  3001               	movlw	1
  6566  0E0C  00F4               	movwf	??___lwdiv
  6567  0E0D  0874               	movf	??___lwdiv,w
  6568  0E0E  07D1               	addwf	___lwdiv@counter,f
  6569  0E0F  2E02               	goto	l4749
  6570  0E10                     l4751:	
  6571  0E10  3001               	movlw	1
  6572  0E11                     u5695:	
  6573  0E11  1003               	clrc
  6574  0E12  0DD2               	rlf	___lwdiv@quotient,f
  6575  0E13  0DD3               	rlf	___lwdiv@quotient+1,f
  6576  0E14  3EFF               	addlw	-1
  6577  0E15  1D03               	skipz
  6578  0E16  2E11               	goto	u5695
  6579  0E17  084E               	movf	___lwdiv@divisor+1,w
  6580  0E18  0250               	subwf	___lwdiv@dividend+1,w
  6581  0E19  1D03               	skipz
  6582  0E1A  2E1D               	goto	u5705
  6583  0E1B  084D               	movf	___lwdiv@divisor,w
  6584  0E1C  024F               	subwf	___lwdiv@dividend,w
  6585  0E1D                     u5705:	
  6586  0E1D  1C03               	skipc
  6587  0E1E  2E26               	goto	l4757
  6588  0E1F  084D               	movf	___lwdiv@divisor,w
  6589  0E20  02CF               	subwf	___lwdiv@dividend,f
  6590  0E21  084E               	movf	___lwdiv@divisor+1,w
  6591  0E22  1C03               	skipc
  6592  0E23  03D0               	decf	___lwdiv@dividend+1,f
  6593  0E24  02D0               	subwf	___lwdiv@dividend+1,f
  6594  0E25  1452               	bsf	___lwdiv@quotient,0
  6595  0E26                     l4757:	
  6596  0E26  3001               	movlw	1
  6597  0E27                     u5715:	
  6598  0E27  1003               	clrc
  6599  0E28  0CCE               	rrf	___lwdiv@divisor+1,f
  6600  0E29  0CCD               	rrf	___lwdiv@divisor,f
  6601  0E2A  3EFF               	addlw	-1
  6602  0E2B  1D03               	skipz
  6603  0E2C  2E27               	goto	u5715
  6604  0E2D  3001               	movlw	1
  6605  0E2E  02D1               	subwf	___lwdiv@counter,f
  6606  0E2F  1D03               	btfss	3,2
  6607  0E30  2E10               	goto	l4751
  6608  0E31                     l4761:	
  6609  0E31  0853               	movf	___lwdiv@quotient+1,w
  6610  0E32  01CE               	clrf	?___lwdiv+1
  6611  0E33  07CE               	addwf	?___lwdiv+1,f
  6612  0E34  0852               	movf	___lwdiv@quotient,w
  6613  0E35  01CD               	clrf	?___lwdiv
  6614  0E36  07CD               	addwf	?___lwdiv,f
  6615  0E37  0008               	return
  6616  0E38                     __end_of___lwdiv:	
  6617                           
  6618                           	psect	text35
  6619  0AA6                     __ptext35:	
  6620 ;; *************** function _Load_Initialization *****************
  6621 ;; Defined at:
  6622 ;;		line 9 in file "../src/OverLoad_B1.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;		None
  6625 ;; Auto vars:     Size  Location     Type
  6626 ;;		None
  6627 ;; Return value:  Size  Location     Type
  6628 ;;		None               void
  6629 ;; Registers used:
  6630 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6631 ;; Tracked objects:
  6632 ;;		On entry : 0/0
  6633 ;;		On exit  : 0/0
  6634 ;;		Unchanged: 0/0
  6635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6636 ;;      Params:         0       0       0       0
  6637 ;;      Locals:         0       0       0       0
  6638 ;;      Temps:          0       0       0       0
  6639 ;;      Totals:         0       0       0       0
  6640 ;;Total ram usage:        0 bytes
  6641 ;; Hardware stack levels used:    1
  6642 ;; Hardware stack levels required when called:    3
  6643 ;; This function calls:
  6644 ;;		_setLoad_AH_AL_Restore
  6645 ;; This function is called by:
  6646 ;;		_main
  6647 ;; This function uses a non-reentrant model
  6648 ;;
  6649                           
  6650                           
  6651                           ;psect for function _Load_Initialization
  6652  0AA6                     _Load_Initialization:	
  6653                           
  6654                           ;OverLoad_B1.c: 11: setLoad_AH_AL_Restore();
  6655                           
  6656                           ;incstack = 0
  6657                           ; Regs used in _Load_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6658  0AA6  158A  23E3         	fcall	_setLoad_AH_AL_Restore
  6659  0AA8  0008               	return
  6660  0AA9                     __end_of_Load_Initialization:	
  6661                           
  6662                           	psect	text36
  6663  0BE3                     __ptext36:	
  6664 ;; *************** function _setLoad_AH_AL_Restore *****************
  6665 ;; Defined at:
  6666 ;;		line 292 in file "../src/OverLoad_B1.c"
  6667 ;; Parameters:    Size  Location     Type
  6668 ;;		None
  6669 ;; Auto vars:     Size  Location     Type
  6670 ;;  i               1    5[COMMON] unsigned char 
  6671 ;; Return value:  Size  Location     Type
  6672 ;;		None               void
  6673 ;; Registers used:
  6674 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6675 ;; Tracked objects:
  6676 ;;		On entry : 0/0
  6677 ;;		On exit  : 0/0
  6678 ;;		Unchanged: 0/0
  6679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6680 ;;      Params:         0       0       0       0
  6681 ;;      Locals:         1       0       0       0
  6682 ;;      Temps:          1       0       0       0
  6683 ;;      Totals:         2       0       0       0
  6684 ;;Total ram usage:        2 bytes
  6685 ;; Hardware stack levels used:    1
  6686 ;; Hardware stack levels required when called:    2
  6687 ;; This function calls:
  6688 ;;		Nothing
  6689 ;; This function is called by:
  6690 ;;		_Load_Initialization
  6691 ;;		_Load_Main
  6692 ;; This function uses a non-reentrant model
  6693 ;;
  6694                           
  6695                           
  6696                           ;psect for function _setLoad_AH_AL_Restore
  6697  0BE3                     _setLoad_AH_AL_Restore:	
  6698                           
  6699                           ;OverLoad_B1.c: 293: char i;
  6700                           ;OverLoad_B1.c: 294: for (i = 0; i < 5; i++) {
  6701                           
  6702                           ;incstack = 0
  6703                           ; Regs used in _setLoad_AH_AL_Restore: [wreg-fsr0h+status,2+status,0]
  6704  0BE3  01F5               	clrf	setLoad_AH_AL_Restore@i
  6705  0BE4                     L17:	
  6706  0BE4  3005               	movlw	5
  6707  0BE5  0275               	subwf	setLoad_AH_AL_Restore@i,w
  6708  0BE6  1803               	btfsc	3,0
  6709  0BE7  0008               	return
  6710                           
  6711                           ;OverLoad_B1.c: 295: Load.AH[i] = 0;
  6712  0BE8  0875               	movf	setLoad_AH_AL_Restore@i,w
  6713  0BE9  3ED4               	addlw	(_Load+10)& (0+255)
  6714  0BEA  0084               	movwf	4
  6715  0BEB  1383               	bcf	3,7	;select IRP bank1
  6716  0BEC  0180               	clrf	0
  6717                           
  6718                           ;OverLoad_B1.c: 296: Load.AL[i] = 0xff;
  6719  0BED  30FF               	movlw	255
  6720  0BEE  00F4               	movwf	??_setLoad_AH_AL_Restore
  6721  0BEF  0875               	movf	setLoad_AH_AL_Restore@i,w
  6722  0BF0  3ED9               	addlw	(_Load+15)& (0+255)
  6723  0BF1  0084               	movwf	4
  6724  0BF2  0874               	movf	??_setLoad_AH_AL_Restore,w
  6725  0BF3  0080               	movwf	0
  6726  0BF4  3001               	movlw	1
  6727  0BF5  00F4               	movwf	??_setLoad_AH_AL_Restore
  6728  0BF6  0874               	movf	??_setLoad_AH_AL_Restore,w
  6729  0BF7  07F5               	addwf	setLoad_AH_AL_Restore@i,f
  6730  0BF8  2BE4               	goto	L17
  6731  0BF9                     __end_of_setLoad_AH_AL_Restore:	
  6732                           
  6733                           	psect	text37
  6734  0CAD                     __ptext37:	
  6735 ;; *************** function _Lights_Main *****************
  6736 ;; Defined at:
  6737 ;;		line 52 in file "../src/TriacRelay_B1.c"
  6738 ;; Parameters:    Size  Location     Type
  6739 ;;		None
  6740 ;; Auto vars:     Size  Location     Type
  6741 ;;		None
  6742 ;; Return value:  Size  Location     Type
  6743 ;;		None               void
  6744 ;; Registers used:
  6745 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6746 ;; Tracked objects:
  6747 ;;		On entry : 0/0
  6748 ;;		On exit  : 0/0
  6749 ;;		Unchanged: 0/0
  6750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6751 ;;      Params:         0       0       0       0
  6752 ;;      Locals:         0       0       0       0
  6753 ;;      Temps:          0       0       0       0
  6754 ;;      Totals:         0       0       0       0
  6755 ;;Total ram usage:        0 bytes
  6756 ;; Hardware stack levels used:    1
  6757 ;; Hardware stack levels required when called:    6
  6758 ;; This function calls:
  6759 ;;		_Lights_Control
  6760 ;;		_getLoad_OK
  6761 ;;		_getMain_All_Error_Status
  6762 ;;		_getMain_All_LightsStatus
  6763 ;;		_setLights_Main
  6764 ;; This function is called by:
  6765 ;;		_main
  6766 ;; This function uses a non-reentrant model
  6767 ;;
  6768                           
  6769                           
  6770                           ;psect for function _Lights_Main
  6771  0CAD                     _Lights_Main:	
  6772                           
  6773                           ;TriacRelay_B1.c: 65: if (Light.LoadGO == 1) {
  6774                           
  6775                           ;incstack = 0
  6776                           ; Regs used in _Lights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6777  0CAD  1C77               	btfss	_Light,0
  6778  0CAE  2CC3               	goto	l5097
  6779                           
  6780                           ;TriacRelay_B1.c: 66: if (getLoad_OK() == 1 || getMain_All_Error_Status(0) != 0 || getMa
      +                          in_All_LightsStatus() == 0) {
  6781  0CAF  158A  22EE  158A   	fcall	_getLoad_OK
  6782  0CB2  3A01               	xorlw	1
  6783  0CB3  1903               	skipnz
  6784  0CB4  2CC2               	goto	l1263
  6785  0CB5  3000               	movlw	0
  6786  0CB6  158A  25BA  158A   	fcall	_getMain_All_Error_Status
  6787  0CB9  3800               	iorlw	0
  6788  0CBA  1D03               	skipz
  6789  0CBB  2CC2               	goto	l1263
  6790  0CBC  158A  230F  158A   	fcall	_getMain_All_LightsStatus
  6791  0CBF  3800               	iorlw	0
  6792  0CC0  1D03               	skipz
  6793  0CC1  2CC3               	goto	l5097
  6794  0CC2                     l1263:	
  6795                           
  6796                           ;TriacRelay_B1.c: 67: Light.LoadGO = 0;
  6797  0CC2  1077               	bcf	_Light,0
  6798  0CC3                     l5097:	
  6799                           
  6800                           ;TriacRelay_B1.c: 68: }
  6801                           ;TriacRelay_B1.c: 69: }
  6802                           ;TriacRelay_B1.c: 73: setLights_Main(1);
  6803  0CC3  3001               	movlw	1
  6804  0CC4  158A  2556  158A   	fcall	_setLights_Main
  6805                           
  6806                           ;TriacRelay_B1.c: 74: Lights_Control(1);
  6807  0CC7  3001               	movlw	1
  6808  0CC8  118A  2607         	fcall	_Lights_Control
  6809  0CCA  0008               	return
  6810  0CCB                     __end_of_Lights_Main:	
  6811                           
  6812                           	psect	text38
  6813  0D56                     __ptext38:	
  6814 ;; *************** function _setLights_Main *****************
  6815 ;; Defined at:
  6816 ;;		line 91 in file "../src/TriacRelay_B1.c"
  6817 ;; Parameters:    Size  Location     Type
  6818 ;;  lights          1    wreg     unsigned char 
  6819 ;; Auto vars:     Size  Location     Type
  6820 ;;  lights          1    5[BANK0 ] unsigned char 
  6821 ;; Return value:  Size  Location     Type
  6822 ;;		None               void
  6823 ;; Registers used:
  6824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6825 ;; Tracked objects:
  6826 ;;		On entry : 0/0
  6827 ;;		On exit  : 0/0
  6828 ;;		Unchanged: 0/0
  6829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6830 ;;      Params:         0       0       0       0
  6831 ;;      Locals:         0       1       0       0
  6832 ;;      Temps:          0       0       0       0
  6833 ;;      Totals:         0       1       0       0
  6834 ;;Total ram usage:        1 bytes
  6835 ;; Hardware stack levels used:    1
  6836 ;; Hardware stack levels required when called:    5
  6837 ;; This function calls:
  6838 ;;		_LightsPointSelect
  6839 ;;		_getLights_Allow_Condition
  6840 ;;		_setLights
  6841 ;; This function is called by:
  6842 ;;		_Lights_Main
  6843 ;; This function uses a non-reentrant model
  6844 ;;
  6845                           
  6846                           
  6847                           ;psect for function _setLights_Main
  6848  0D56                     _setLights_Main:	
  6849                           
  6850                           ;incstack = 0
  6851                           ; Regs used in _setLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6852                           ;setLights_Main@lights stored from wreg
  6853  0D56  1283               	bcf	3,5	;RP0=0, select bank0
  6854  0D57  1303               	bcf	3,6	;RP1=0, select bank0
  6855  0D58  00D2               	movwf	setLights_Main@lights
  6856                           
  6857                           ;TriacRelay_B1.c: 92: LightsPointSelect(lights);
  6858  0D59  0852               	movf	setLights_Main@lights,w
  6859  0D5A  158A  2318  158A   	fcall	_LightsPointSelect
  6860                           
  6861                           ;TriacRelay_B1.c: 93: if (Lights->GO == 0) {
  6862  0D5D  0878               	movf	_Lights,w
  6863  0D5E  0084               	movwf	4
  6864  0D5F  1383               	bcf	3,7	;select IRP bank0
  6865  0D60  1880               	btfsc	0,1
  6866  0D61  0008               	return
  6867                           
  6868                           ;TriacRelay_B1.c: 94: if (Lights->Trigger == 1) {
  6869  0D62  0878               	movf	_Lights,w
  6870  0D63  0084               	movwf	4
  6871  0D64  1D80               	btfss	0,3
  6872  0D65  0008               	return
  6873                           
  6874                           ;TriacRelay_B1.c: 95: if (getLights_Allow_Condition(lights) == 0) {
  6875  0D66  1283               	bcf	3,5	;RP0=0, select bank0
  6876  0D67  1303               	bcf	3,6	;RP1=0, select bank0
  6877  0D68  0852               	movf	setLights_Main@lights,w
  6878  0D69  158A  23F9  158A   	fcall	_getLights_Allow_Condition
  6879  0D6C  3800               	iorlw	0
  6880  0D6D  1D03               	skipz
  6881  0D6E  0008               	return
  6882                           
  6883                           ;TriacRelay_B1.c: 96: Lights->Trigger = 0;
  6884  0D6F  0878               	movf	_Lights,w
  6885  0D70  0084               	movwf	4
  6886  0D71  1383               	bcf	3,7	;select IRP bank0
  6887  0D72  1180               	bcf	0,3
  6888                           
  6889                           ;TriacRelay_B1.c: 97: if (Lights->Switch == 1) {
  6890  0D73  0878               	movf	_Lights,w
  6891  0D74  0084               	movwf	4
  6892  0D75  1E00               	btfss	0,4
  6893  0D76  2D7F               	goto	l4697
  6894                           
  6895                           ;TriacRelay_B1.c: 98: setLights(lights, 1);
  6896  0D77  1283               	bcf	3,5	;RP0=0, select bank0
  6897  0D78  1303               	bcf	3,6	;RP1=0, select bank0
  6898  0D79  01CF               	clrf	setLights@status
  6899  0D7A  0ACF               	incf	setLights@status,f
  6900  0D7B  0852               	movf	setLights_Main@lights,w
  6901  0D7C  118A  268A         	fcall	_setLights
  6902                           
  6903                           ;TriacRelay_B1.c: 99: } else {
  6904  0D7E  0008               	return
  6905  0D7F                     l4697:	
  6906                           
  6907                           ;TriacRelay_B1.c: 100: setLights(lights, 0);
  6908  0D7F  1283               	bcf	3,5	;RP0=0, select bank0
  6909  0D80  1303               	bcf	3,6	;RP1=0, select bank0
  6910  0D81  01CF               	clrf	setLights@status
  6911  0D82  0852               	movf	setLights_Main@lights,w
  6912  0D83  118A  268A         	fcall	_setLights
  6913  0D85  0008               	return
  6914  0D86                     __end_of_setLights_Main:	
  6915                           
  6916                           	psect	text39
  6917  068A                     __ptext39:	
  6918 ;; *************** function _setLights *****************
  6919 ;; Defined at:
  6920 ;;		line 108 in file "../src/TriacRelay_B1.c"
  6921 ;; Parameters:    Size  Location     Type
  6922 ;;  lights          1    wreg     unsigned char 
  6923 ;;  status          1    2[BANK0 ] unsigned char 
  6924 ;; Auto vars:     Size  Location     Type
  6925 ;;  lights          1    4[BANK0 ] unsigned char 
  6926 ;; Return value:  Size  Location     Type
  6927 ;;		None               void
  6928 ;; Registers used:
  6929 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6930 ;; Tracked objects:
  6931 ;;		On entry : 0/0
  6932 ;;		On exit  : 0/0
  6933 ;;		Unchanged: 0/0
  6934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6935 ;;      Params:         0       1       0       0
  6936 ;;      Locals:         0       1       0       0
  6937 ;;      Temps:          0       1       0       0
  6938 ;;      Totals:         0       3       0       0
  6939 ;;Total ram usage:        3 bytes
  6940 ;; Hardware stack levels used:    1
  6941 ;; Hardware stack levels required when called:    4
  6942 ;; This function calls:
  6943 ;;		_setLED
  6944 ;;		_setLights_Line
  6945 ;; This function is called by:
  6946 ;;		_setLights_Main
  6947 ;; This function uses a non-reentrant model
  6948 ;;
  6949                           
  6950                           
  6951                           ;psect for function _setLights
  6952  068A                     _setLights:	
  6953                           
  6954                           ;incstack = 0
  6955                           ; Regs used in _setLights: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6956                           ;setLights@lights stored from wreg
  6957  068A  1283               	bcf	3,5	;RP0=0, select bank0
  6958  068B  1303               	bcf	3,6	;RP1=0, select bank0
  6959  068C  00D1               	movwf	setLights@lights
  6960                           
  6961                           ;TriacRelay_B1.c: 116: if (status == 1) {
  6962  068D  084F               	movf	setLights@status,w
  6963  068E  3A01               	xorlw	1
  6964  068F  1D03               	skipz
  6965  0690  2ECD               	goto	l4529
  6966                           
  6967                           ;TriacRelay_B1.c: 118: if (lights == 2) {
  6968  0691  0851               	movf	setLights@lights,w
  6969  0692  3A02               	xorlw	2
  6970  0693  1D03               	skipz
  6971  0694  2EA2               	goto	l4511
  6972                           
  6973                           ;TriacRelay_B1.c: 119: setLED(1, 0);
  6974  0695  01CD               	clrf	setLED@command
  6975  0696  3001               	movlw	1
  6976  0697  158A  2735  118A   	fcall	_setLED
  6977                           
  6978                           ;TriacRelay_B1.c: 120: setLED(2, 1);
  6979  069A  1283               	bcf	3,5	;RP0=0, select bank0
  6980  069B  1303               	bcf	3,6	;RP1=0, select bank0
  6981  069C  01CD               	clrf	setLED@command
  6982  069D  0ACD               	incf	setLED@command,f
  6983  069E  3002               	movlw	2
  6984  069F  158A  2735  118A   	fcall	_setLED
  6985  06A2                     l4511:	
  6986                           
  6987                           ;TriacRelay_B1.c: 121: }
  6988                           ;TriacRelay_B1.c: 127: if (Lights->Status == 0) {
  6989  06A2  0878               	movf	_Lights,w
  6990  06A3  0084               	movwf	4
  6991  06A4  1383               	bcf	3,7	;select IRP bank0
  6992  06A5  1900               	btfsc	0,2
  6993  06A6  2EC6               	goto	l4525
  6994                           
  6995                           ;TriacRelay_B1.c: 128: Lights->Status = 1;
  6996  06A7  0878               	movf	_Lights,w
  6997  06A8  0084               	movwf	4
  6998  06A9  1500               	bsf	0,2
  6999                           
  7000                           ;TriacRelay_B1.c: 130: if (lights == 1) {
  7001  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  7002  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  7003  06AC  0851               	movf	setLights@lights,w
  7004  06AD  3A01               	xorlw	1
  7005  06AE  1D03               	skipz
  7006  06AF  2EC6               	goto	l4525
  7007                           
  7008                           ;TriacRelay_B1.c: 131: RB2 = 1;
  7009  06B0  1506               	bsf	6,2	;volatile
  7010                           
  7011                           ;TriacRelay_B1.c: 132: Lights->RelayValue = 100;
  7012  06B1  3064               	movlw	100
  7013  06B2  00D0               	movwf	??_setLights
  7014  06B3  0878               	movf	_Lights,w
  7015  06B4  3E04               	addlw	4
  7016  06B5  0084               	movwf	4
  7017  06B6  0850               	movf	??_setLights,w
  7018  06B7  0080               	movwf	0
  7019                           
  7020                           ;TriacRelay_B1.c: 133: Lights->TriacValue = 140;
  7021  06B8  308C               	movlw	140
  7022  06B9  00D0               	movwf	??_setLights
  7023  06BA  0878               	movf	_Lights,w
  7024  06BB  3E03               	addlw	3
  7025  06BC  0084               	movwf	4
  7026  06BD  0850               	movf	??_setLights,w
  7027  06BE  0080               	movwf	0
  7028                           
  7029                           ;TriacRelay_B1.c: 134: Lights->Time = 0;
  7030  06BF  0878               	movf	_Lights,w
  7031  06C0  3E02               	addlw	2
  7032  06C1  0084               	movwf	4
  7033  06C2  0180               	clrf	0
  7034                           
  7035                           ;TriacRelay_B1.c: 135: Lights->GO = 1;
  7036  06C3  0878               	movf	_Lights,w
  7037  06C4  0084               	movwf	4
  7038  06C5  1480               	bsf	0,1
  7039  06C6                     l4525:	
  7040                           
  7041                           ;TriacRelay_B1.c: 136: }
  7042                           ;TriacRelay_B1.c: 162: }
  7043                           ;TriacRelay_B1.c: 164: Light.Load_Status = 1;
  7044  06C6  14F7               	bsf	_Light,1
  7045                           
  7046                           ;TriacRelay_B1.c: 165: setLights_Line(lights);
  7047  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  7048  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  7049  06C9  0851               	movf	setLights@lights,w
  7050  06CA  158A  233A         	fcall	_setLights_Line
  7051                           
  7052                           ;TriacRelay_B1.c: 167: } else {
  7053  06CC  0008               	return
  7054  06CD                     l4529:	
  7055                           
  7056                           ;TriacRelay_B1.c: 170: if (lights == 2) {
  7057  06CD  1283               	bcf	3,5	;RP0=0, select bank0
  7058  06CE  1303               	bcf	3,6	;RP1=0, select bank0
  7059  06CF  0851               	movf	setLights@lights,w
  7060  06D0  3A02               	xorlw	2
  7061  06D1  1D03               	skipz
  7062  06D2  2EE0               	goto	l4533
  7063                           
  7064                           ;TriacRelay_B1.c: 171: setLED(1, 1);
  7065  06D3  01CD               	clrf	setLED@command
  7066  06D4  0ACD               	incf	setLED@command,f
  7067  06D5  3001               	movlw	1
  7068  06D6  158A  2735  118A   	fcall	_setLED
  7069                           
  7070                           ;TriacRelay_B1.c: 172: setLED(2, 0);
  7071  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  7072  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  7073  06DB  01CD               	clrf	setLED@command
  7074  06DC  3002               	movlw	2
  7075  06DD  158A  2735  118A   	fcall	_setLED
  7076  06E0                     l4533:	
  7077                           
  7078                           ;TriacRelay_B1.c: 173: }
  7079                           ;TriacRelay_B1.c: 175: if (Lights->Status == 1) {
  7080  06E0  0878               	movf	_Lights,w
  7081  06E1  0084               	movwf	4
  7082  06E2  1383               	bcf	3,7	;select IRP bank0
  7083  06E3  1D00               	btfss	0,2
  7084  06E4  2F04               	goto	l4547
  7085                           
  7086                           ;TriacRelay_B1.c: 176: Lights->Status = 0;
  7087  06E5  0878               	movf	_Lights,w
  7088  06E6  0084               	movwf	4
  7089  06E7  1100               	bcf	0,2
  7090                           
  7091                           ;TriacRelay_B1.c: 178: if (lights == 1) {
  7092  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  7093  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  7094  06EA  0851               	movf	setLights@lights,w
  7095  06EB  3A01               	xorlw	1
  7096  06EC  1D03               	skipz
  7097  06ED  2F04               	goto	l4547
  7098                           
  7099                           ;TriacRelay_B1.c: 179: RB2 = 1;
  7100  06EE  1506               	bsf	6,2	;volatile
  7101                           
  7102                           ;TriacRelay_B1.c: 180: Lights->RelayValue = 40;
  7103  06EF  3028               	movlw	40
  7104  06F0  00D0               	movwf	??_setLights
  7105  06F1  0878               	movf	_Lights,w
  7106  06F2  3E04               	addlw	4
  7107  06F3  0084               	movwf	4
  7108  06F4  0850               	movf	??_setLights,w
  7109  06F5  0080               	movwf	0
  7110                           
  7111                           ;TriacRelay_B1.c: 181: Lights->TriacValue = 80;
  7112  06F6  3050               	movlw	80
  7113  06F7  00D0               	movwf	??_setLights
  7114  06F8  0878               	movf	_Lights,w
  7115  06F9  3E03               	addlw	3
  7116  06FA  0084               	movwf	4
  7117  06FB  0850               	movf	??_setLights,w
  7118  06FC  0080               	movwf	0
  7119                           
  7120                           ;TriacRelay_B1.c: 182: Lights->Time = 0;
  7121  06FD  0878               	movf	_Lights,w
  7122  06FE  3E02               	addlw	2
  7123  06FF  0084               	movwf	4
  7124  0700  0180               	clrf	0
  7125                           
  7126                           ;TriacRelay_B1.c: 183: Lights->GO = 1;
  7127  0701  0878               	movf	_Lights,w
  7128  0702  0084               	movwf	4
  7129  0703  1480               	bsf	0,1
  7130  0704                     l4547:	
  7131                           
  7132                           ;TriacRelay_B1.c: 184: }
  7133                           ;TriacRelay_B1.c: 211: }
  7134                           ;TriacRelay_B1.c: 213: Light.Load_Status = 0;
  7135  0704  10F7               	bcf	_Light,1
  7136                           
  7137                           ;TriacRelay_B1.c: 214: setLights_Line(0);
  7138  0705  3000               	movlw	0
  7139  0706  158A  233A         	fcall	_setLights_Line
  7140  0708  0008               	return
  7141  0709                     __end_of_setLights:	
  7142                           
  7143                           	psect	text40
  7144  0B3A                     __ptext40:	
  7145 ;; *************** function _setLights_Line *****************
  7146 ;; Defined at:
  7147 ;;		line 285 in file "../src/TriacRelay_B1.c"
  7148 ;; Parameters:    Size  Location     Type
  7149 ;;  lights          1    wreg     unsigned char 
  7150 ;; Auto vars:     Size  Location     Type
  7151 ;;  lights          1    4[COMMON] unsigned char 
  7152 ;; Return value:  Size  Location     Type
  7153 ;;		None               void
  7154 ;; Registers used:
  7155 ;;		wreg
  7156 ;; Tracked objects:
  7157 ;;		On entry : 0/0
  7158 ;;		On exit  : 0/0
  7159 ;;		Unchanged: 0/0
  7160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7161 ;;      Params:         0       0       0       0
  7162 ;;      Locals:         1       0       0       0
  7163 ;;      Temps:          0       0       0       0
  7164 ;;      Totals:         1       0       0       0
  7165 ;;Total ram usage:        1 bytes
  7166 ;; Hardware stack levels used:    1
  7167 ;; Hardware stack levels required when called:    2
  7168 ;; This function calls:
  7169 ;;		Nothing
  7170 ;; This function is called by:
  7171 ;;		_setLights
  7172 ;; This function uses a non-reentrant model
  7173 ;;
  7174                           
  7175                           
  7176                           ;psect for function _setLights_Line
  7177  0B3A                     _setLights_Line:	
  7178                           
  7179                           ;incstack = 0
  7180                           ; Regs used in _setLights_Line: [wreg]
  7181                           ;setLights_Line@lights stored from wreg
  7182  0B3A  00F4               	movwf	setLights_Line@lights
  7183                           
  7184                           ;TriacRelay_B1.c: 286: Light.LoadGO = 1;
  7185  0B3B  1477               	bsf	_Light,0
  7186                           
  7187                           ;TriacRelay_B1.c: 288: Lights1.Line = 0;
  7188  0B3C  1283               	bcf	3,5	;RP0=0, select bank0
  7189  0B3D  1303               	bcf	3,6	;RP1=0, select bank0
  7190  0B3E  1041               	bcf	_Lights1+1,0
  7191                           
  7192                           ;TriacRelay_B1.c: 289: if (lights == 1 && lights != 0) {
  7193  0B3F  0874               	movf	setLights_Line@lights,w
  7194  0B40  3A01               	xorlw	1
  7195  0B41  1D03               	skipz
  7196  0B42  0008               	return
  7197  0B43  0874               	movf	setLights_Line@lights,w
  7198  0B44  1903               	btfsc	3,2
  7199  0B45  0008               	return
  7200                           
  7201                           ;TriacRelay_B1.c: 290: Lights1.Line = 1;
  7202  0B46  1441               	bsf	_Lights1+1,0
  7203  0B47  0008               	return
  7204  0B48                     __end_of_setLights_Line:	
  7205                           
  7206                           	psect	text41
  7207  0BF9                     __ptext41:	
  7208 ;; *************** function _getLights_Allow_Condition *****************
  7209 ;; Defined at:
  7210 ;;		line 367 in file "../src/TriacRelay_B1.c"
  7211 ;; Parameters:    Size  Location     Type
  7212 ;;  lights          1    wreg     unsigned char 
  7213 ;; Auto vars:     Size  Location     Type
  7214 ;;  lights          1    0[COMMON] unsigned char 
  7215 ;;  allow           1    0[BANK0 ] unsigned char 
  7216 ;; Return value:  Size  Location     Type
  7217 ;;                  1    wreg      unsigned char 
  7218 ;; Registers used:
  7219 ;;		wreg, status,2, pclath, cstack
  7220 ;; Tracked objects:
  7221 ;;		On entry : 0/0
  7222 ;;		On exit  : 0/0
  7223 ;;		Unchanged: 0/0
  7224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7225 ;;      Params:         0       0       0       0
  7226 ;;      Locals:         0       2       0       0
  7227 ;;      Temps:          1       0       0       0
  7228 ;;      Totals:         1       2       0       0
  7229 ;;Total ram usage:        3 bytes
  7230 ;; Hardware stack levels used:    1
  7231 ;; Hardware stack levels required when called:    3
  7232 ;; This function calls:
  7233 ;;		_getLoad_OK
  7234 ;; This function is called by:
  7235 ;;		_setLights_Main
  7236 ;; This function uses a non-reentrant model
  7237 ;;
  7238                           
  7239                           
  7240                           ;psect for function _getLights_Allow_Condition
  7241  0BF9                     _getLights_Allow_Condition:	
  7242                           
  7243                           ;TriacRelay_B1.c: 368: char allow = 0;
  7244                           
  7245                           ;incstack = 0
  7246                           ; Regs used in _getLights_Allow_Condition: [wreg+status,2+pclath+cstack]
  7247  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  7248  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  7249  0BFB  01CD               	clrf	getLights_Allow_Condition@allow
  7250                           
  7251                           ;TriacRelay_B1.c: 371: allow = getLoad_OK() == 0 && Light.LoadGO == 0 ? 0 : 1;
  7252  0BFC  01CE               	clrf	_getLights_Allow_Condition$4224
  7253  0BFD  0ACE               	incf	_getLights_Allow_Condition$4224,f
  7254  0BFE  158A  22EE  158A   	fcall	_getLoad_OK
  7255  0C01  3800               	iorlw	0
  7256  0C02  1903               	btfsc	3,2
  7257  0C03  1877               	btfsc	_Light,0
  7258  0C04  2C08               	goto	l4499
  7259  0C05  1283               	bcf	3,5	;RP0=0, select bank0
  7260  0C06  1303               	bcf	3,6	;RP1=0, select bank0
  7261  0C07  01CE               	clrf	_getLights_Allow_Condition$4224
  7262  0C08                     l4499:	
  7263  0C08  1283               	bcf	3,5	;RP0=0, select bank0
  7264  0C09  1303               	bcf	3,6	;RP1=0, select bank0
  7265  0C0A  084E               	movf	_getLights_Allow_Condition$4224,w
  7266  0C0B  00F5               	movwf	??_getLights_Allow_Condition
  7267  0C0C  0875               	movf	??_getLights_Allow_Condition,w
  7268  0C0D  00CD               	movwf	getLights_Allow_Condition@allow
  7269                           
  7270                           ;TriacRelay_B1.c: 396: return allow;
  7271  0C0E  084D               	movf	getLights_Allow_Condition@allow,w
  7272  0C0F  0008               	return
  7273  0C10                     __end_of_getLights_Allow_Condition:	
  7274                           
  7275                           	psect	text42
  7276  0AEE                     __ptext42:	
  7277 ;; *************** function _getLoad_OK *****************
  7278 ;; Defined at:
  7279 ;;		line 272 in file "../src/OverLoad_B1.c"
  7280 ;; Parameters:    Size  Location     Type
  7281 ;;		None
  7282 ;; Auto vars:     Size  Location     Type
  7283 ;;  ok              1    4[COMMON] unsigned char 
  7284 ;; Return value:  Size  Location     Type
  7285 ;;                  1    wreg      unsigned char 
  7286 ;; Registers used:
  7287 ;;		wreg, status,2
  7288 ;; Tracked objects:
  7289 ;;		On entry : 0/0
  7290 ;;		On exit  : 0/0
  7291 ;;		Unchanged: 0/0
  7292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7293 ;;      Params:         0       0       0       0
  7294 ;;      Locals:         1       0       0       0
  7295 ;;      Temps:          0       0       0       0
  7296 ;;      Totals:         1       0       0       0
  7297 ;;Total ram usage:        1 bytes
  7298 ;; Hardware stack levels used:    1
  7299 ;; Hardware stack levels required when called:    2
  7300 ;; This function calls:
  7301 ;;		Nothing
  7302 ;; This function is called by:
  7303 ;;		_Lights_Main
  7304 ;;		_getLights_Allow_Condition
  7305 ;; This function uses a non-reentrant model
  7306 ;;
  7307                           
  7308                           
  7309                           ;psect for function _getLoad_OK
  7310  0AEE                     _getLoad_OK:	
  7311                           
  7312                           ;OverLoad_B1.c: 273: char ok = Load.OK == 1 ? 1 : 0;
  7313                           
  7314                           ;incstack = 0
  7315                           ; Regs used in _getLoad_OK: [wreg+status,2]
  7316  0AEE  3000               	movlw	0
  7317  0AEF  1683               	bsf	3,5	;RP0=1, select bank1
  7318  0AF0  1303               	bcf	3,6	;RP1=0, select bank1
  7319  0AF1  1BCA               	btfsc	_Load^(0+128),7
  7320  0AF2  3001               	movlw	1
  7321  0AF3  00F4               	movwf	getLoad_OK@ok
  7322                           
  7323                           ;OverLoad_B1.c: 274: return ok;
  7324  0AF4  0874               	movf	getLoad_OK@ok,w
  7325  0AF5  0008               	return
  7326  0AF6                     __end_of_getLoad_OK:	
  7327                           
  7328                           	psect	text43
  7329  0607                     __ptext43:	
  7330 ;; *************** function _Lights_Control *****************
  7331 ;; Defined at:
  7332 ;;		line 220 in file "../src/TriacRelay_B1.c"
  7333 ;; Parameters:    Size  Location     Type
  7334 ;;  lights          1    wreg     unsigned char 
  7335 ;; Auto vars:     Size  Location     Type
  7336 ;;  lights          1   10[BANK0 ] unsigned char 
  7337 ;; Return value:  Size  Location     Type
  7338 ;;		None               void
  7339 ;; Registers used:
  7340 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7341 ;; Tracked objects:
  7342 ;;		On entry : 0/0
  7343 ;;		On exit  : 0/0
  7344 ;;		Unchanged: 0/0
  7345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7346 ;;      Params:         0       0       0       0
  7347 ;;      Locals:         0       1       0       0
  7348 ;;      Temps:          0       2       0       0
  7349 ;;      Totals:         0       3       0       0
  7350 ;;Total ram usage:        3 bytes
  7351 ;; Hardware stack levels used:    1
  7352 ;; Hardware stack levels required when called:    3
  7353 ;; This function calls:
  7354 ;;		_LightsPointSelect
  7355 ;;		___awdiv
  7356 ;; This function is called by:
  7357 ;;		_Lights_Main
  7358 ;; This function uses a non-reentrant model
  7359 ;;
  7360                           
  7361                           
  7362                           ;psect for function _Lights_Control
  7363  0607                     _Lights_Control:	
  7364                           
  7365                           ;incstack = 0
  7366                           ; Regs used in _Lights_Control: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7367                           ;Lights_Control@lights stored from wreg
  7368  0607  1283               	bcf	3,5	;RP0=0, select bank0
  7369  0608  1303               	bcf	3,6	;RP1=0, select bank0
  7370  0609  00D7               	movwf	Lights_Control@lights
  7371                           
  7372                           ;TriacRelay_B1.c: 221: LightsPointSelect(lights);
  7373  060A  0857               	movf	Lights_Control@lights,w
  7374  060B  158A  2318  118A   	fcall	_LightsPointSelect
  7375                           
  7376                           ;TriacRelay_B1.c: 222: if (Lights->GO == 1) {
  7377  060E  0878               	movf	_Lights,w
  7378  060F  0084               	movwf	4
  7379  0610  1383               	bcf	3,7	;select IRP bank0
  7380  0611  1C80               	btfss	0,1
  7381  0612  0008               	return
  7382                           
  7383                           ;TriacRelay_B1.c: 223: Lights->Time++;
  7384  0613  3001               	movlw	1
  7385  0614  1283               	bcf	3,5	;RP0=0, select bank0
  7386  0615  1303               	bcf	3,6	;RP1=0, select bank0
  7387  0616  00D5               	movwf	??_Lights_Control
  7388  0617  0878               	movf	_Lights,w
  7389  0618  3E02               	addlw	2
  7390  0619  0084               	movwf	4
  7391  061A  0855               	movf	??_Lights_Control,w
  7392  061B  0780               	addwf	0,f
  7393                           
  7394                           ;TriacRelay_B1.c: 224: if (Lights->RelaySet == 0) {
  7395  061C  0878               	movf	_Lights,w
  7396  061D  0084               	movwf	4
  7397  061E  1B80               	btfsc	0,7
  7398  061F  2E56               	goto	l4715
  7399                           
  7400                           ;TriacRelay_B1.c: 225: if (Lights->Time >= (Lights->RelayValue / 20)) {
  7401  0620  3014               	movlw	20
  7402  0621  00CD               	movwf	___awdiv@divisor
  7403  0622  3000               	movlw	0
  7404  0623  00CE               	movwf	___awdiv@divisor+1
  7405  0624  0878               	movf	_Lights,w
  7406  0625  3E04               	addlw	4
  7407  0626  0084               	movwf	4
  7408  0627  0800               	movf	0,w
  7409  0628  00D5               	movwf	??_Lights_Control
  7410  0629  01D6               	clrf	??_Lights_Control+1
  7411  062A  0855               	movf	??_Lights_Control,w
  7412  062B  00CF               	movwf	___awdiv@dividend
  7413  062C  0856               	movf	??_Lights_Control+1,w
  7414  062D  00D0               	movwf	___awdiv@dividend+1
  7415  062E  158A  26D8  118A   	fcall	___awdiv
  7416  0631  0878               	movf	_Lights,w
  7417  0632  3E02               	addlw	2
  7418  0633  0084               	movwf	4
  7419  0634  1283               	bcf	3,5	;RP0=0, select bank0
  7420  0635  1303               	bcf	3,6	;RP1=0, select bank0
  7421  0636  084E               	movf	?___awdiv+1,w
  7422  0637  3A80               	xorlw	128
  7423  0638  3C80               	sublw	128
  7424  0639  1D03               	skipz
  7425  063A  2E3E               	goto	u5565
  7426  063B  084D               	movf	?___awdiv,w
  7427  063C  1383               	bcf	3,7	;select IRP bank0
  7428  063D  0200               	subwf	0,w
  7429  063E                     u5565:	
  7430  063E  1C03               	skipc
  7431  063F  0008               	return
  7432                           
  7433                           ;TriacRelay_B1.c: 226: Lights->RelaySet = 1;
  7434  0640  0878               	movf	_Lights,w
  7435  0641  0084               	movwf	4
  7436  0642  1383               	bcf	3,7	;select IRP bank0
  7437  0643  1780               	bsf	0,7
  7438                           
  7439                           ;TriacRelay_B1.c: 228: if (lights == 1) {
  7440  0644  1283               	bcf	3,5	;RP0=0, select bank0
  7441  0645  1303               	bcf	3,6	;RP1=0, select bank0
  7442  0646  0857               	movf	Lights_Control@lights,w
  7443  0647  3A01               	xorlw	1
  7444  0648  1D03               	skipz
  7445  0649  0008               	return
  7446                           
  7447                           ;TriacRelay_B1.c: 229: RB3 = Lights->Status == 1 ? 1 : 0;
  7448  064A  0878               	movf	_Lights,w
  7449  064B  0084               	movwf	4
  7450  064C  1D00               	btfss	0,2
  7451  064D  2E52               	goto	u5580
  7452  064E  1283               	bcf	3,5	;RP0=0, select bank0
  7453  064F  1303               	bcf	3,6	;RP1=0, select bank0
  7454  0650  1586               	bsf	6,3	;volatile
  7455  0651  0008               	return
  7456  0652                     u5580:	
  7457  0652  1283               	bcf	3,5	;RP0=0, select bank0
  7458  0653  1303               	bcf	3,6	;RP1=0, select bank0
  7459  0654  1186               	bcf	6,3	;volatile
  7460                           
  7461                           ;TriacRelay_B1.c: 230: }
  7462                           ;TriacRelay_B1.c: 242: }
  7463                           ;TriacRelay_B1.c: 243: } else {
  7464  0655  0008               	return
  7465  0656                     l4715:	
  7466                           
  7467                           ;TriacRelay_B1.c: 244: if (Lights->Time >= (Lights->TriacValue / 20)) {
  7468  0656  3014               	movlw	20
  7469  0657  00CD               	movwf	___awdiv@divisor
  7470  0658  3000               	movlw	0
  7471  0659  00CE               	movwf	___awdiv@divisor+1
  7472  065A  0878               	movf	_Lights,w
  7473  065B  3E03               	addlw	3
  7474  065C  0084               	movwf	4
  7475  065D  1383               	bcf	3,7	;select IRP bank0
  7476  065E  0800               	movf	0,w
  7477  065F  00D5               	movwf	??_Lights_Control
  7478  0660  01D6               	clrf	??_Lights_Control+1
  7479  0661  0855               	movf	??_Lights_Control,w
  7480  0662  00CF               	movwf	___awdiv@dividend
  7481  0663  0856               	movf	??_Lights_Control+1,w
  7482  0664  00D0               	movwf	___awdiv@dividend+1
  7483  0665  158A  26D8  118A   	fcall	___awdiv
  7484  0668  0878               	movf	_Lights,w
  7485  0669  3E02               	addlw	2
  7486  066A  0084               	movwf	4
  7487  066B  1283               	bcf	3,5	;RP0=0, select bank0
  7488  066C  1303               	bcf	3,6	;RP1=0, select bank0
  7489  066D  084E               	movf	?___awdiv+1,w
  7490  066E  3A80               	xorlw	128
  7491  066F  3C80               	sublw	128
  7492  0670  1D03               	skipz
  7493  0671  2E75               	goto	u5605
  7494  0672  084D               	movf	?___awdiv,w
  7495  0673  1383               	bcf	3,7	;select IRP bank0
  7496  0674  0200               	subwf	0,w
  7497  0675                     u5605:	
  7498  0675  1C03               	skipc
  7499  0676  0008               	return
  7500                           
  7501                           ;TriacRelay_B1.c: 245: Lights->Time = 0;
  7502  0677  0878               	movf	_Lights,w
  7503  0678  3E02               	addlw	2
  7504  0679  0084               	movwf	4
  7505  067A  1383               	bcf	3,7	;select IRP bank0
  7506  067B  0180               	clrf	0
  7507                           
  7508                           ;TriacRelay_B1.c: 246: Lights->GO = 0;
  7509  067C  0878               	movf	_Lights,w
  7510  067D  0084               	movwf	4
  7511  067E  1080               	bcf	0,1
  7512                           
  7513                           ;TriacRelay_B1.c: 247: Lights->RelaySet = 0;
  7514  067F  0878               	movf	_Lights,w
  7515  0680  0084               	movwf	4
  7516  0681  1380               	bcf	0,7
  7517                           
  7518                           ;TriacRelay_B1.c: 250: if (lights == 1) {
  7519  0682  1283               	bcf	3,5	;RP0=0, select bank0
  7520  0683  1303               	bcf	3,6	;RP1=0, select bank0
  7521  0684  0857               	movf	Lights_Control@lights,w
  7522  0685  3A01               	xorlw	1
  7523  0686  1D03               	skipz
  7524  0687  0008               	return
  7525                           
  7526                           ;TriacRelay_B1.c: 251: RB2 = 0;
  7527  0688  1106               	bcf	6,2	;volatile
  7528  0689  0008               	return
  7529  068A                     __end_of_Lights_Control:	
  7530                           
  7531                           	psect	text44
  7532  0ED8                     __ptext44:	
  7533 ;; *************** function ___awdiv *****************
  7534 ;; Defined at:
  7535 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  7536 ;; Parameters:    Size  Location     Type
  7537 ;;  divisor         2    0[BANK0 ] int 
  7538 ;;  dividend        2    2[BANK0 ] int 
  7539 ;; Auto vars:     Size  Location     Type
  7540 ;;  quotient        2    6[BANK0 ] int 
  7541 ;;  sign            1    5[BANK0 ] unsigned char 
  7542 ;;  counter         1    4[BANK0 ] unsigned char 
  7543 ;; Return value:  Size  Location     Type
  7544 ;;                  2    0[BANK0 ] int 
  7545 ;; Registers used:
  7546 ;;		wreg, status,2, status,0
  7547 ;; Tracked objects:
  7548 ;;		On entry : 0/0
  7549 ;;		On exit  : 0/0
  7550 ;;		Unchanged: 0/0
  7551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7552 ;;      Params:         0       4       0       0
  7553 ;;      Locals:         0       4       0       0
  7554 ;;      Temps:          1       0       0       0
  7555 ;;      Totals:         1       8       0       0
  7556 ;;Total ram usage:        9 bytes
  7557 ;; Hardware stack levels used:    1
  7558 ;; Hardware stack levels required when called:    2
  7559 ;; This function calls:
  7560 ;;		Nothing
  7561 ;; This function is called by:
  7562 ;;		_getPIR_AD
  7563 ;;		_Lights_Control
  7564 ;; This function uses a non-reentrant model
  7565 ;;
  7566                           
  7567                           
  7568                           ;psect for function ___awdiv
  7569  0ED8                     ___awdiv:	
  7570                           
  7571                           ;incstack = 0
  7572                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7573  0ED8  1283               	bcf	3,5	;RP0=0, select bank0
  7574  0ED9  1303               	bcf	3,6	;RP1=0, select bank0
  7575  0EDA  01D2               	clrf	___awdiv@sign
  7576  0EDB  1FCE               	btfss	___awdiv@divisor+1,7
  7577  0EDC  2EE4               	goto	l4565
  7578  0EDD  09CD               	comf	___awdiv@divisor,f
  7579  0EDE  09CE               	comf	___awdiv@divisor+1,f
  7580  0EDF  0ACD               	incf	___awdiv@divisor,f
  7581  0EE0  1903               	skipnz
  7582  0EE1  0ACE               	incf	___awdiv@divisor+1,f
  7583  0EE2  01D2               	clrf	___awdiv@sign
  7584  0EE3  0AD2               	incf	___awdiv@sign,f
  7585  0EE4                     l4565:	
  7586  0EE4  1FD0               	btfss	___awdiv@dividend+1,7
  7587  0EE5  2EEF               	goto	l4571
  7588  0EE6  09CF               	comf	___awdiv@dividend,f
  7589  0EE7  09D0               	comf	___awdiv@dividend+1,f
  7590  0EE8  0ACF               	incf	___awdiv@dividend,f
  7591  0EE9  1903               	skipnz
  7592  0EEA  0AD0               	incf	___awdiv@dividend+1,f
  7593  0EEB  3001               	movlw	1
  7594  0EEC  00F4               	movwf	??___awdiv
  7595  0EED  0874               	movf	??___awdiv,w
  7596  0EEE  06D2               	xorwf	___awdiv@sign,f
  7597  0EEF                     l4571:	
  7598  0EEF  01D3               	clrf	___awdiv@quotient
  7599  0EF0  01D4               	clrf	___awdiv@quotient+1
  7600  0EF1  084E               	movf	___awdiv@divisor+1,w
  7601  0EF2  044D               	iorwf	___awdiv@divisor,w
  7602  0EF3  1903               	skipnz
  7603  0EF4  2F26               	goto	l4593
  7604  0EF5  01D1               	clrf	___awdiv@counter
  7605  0EF6  0AD1               	incf	___awdiv@counter,f
  7606  0EF7                     l4581:	
  7607  0EF7  1BCE               	btfsc	___awdiv@divisor+1,7
  7608  0EF8  2F05               	goto	l4583
  7609  0EF9  3001               	movlw	1
  7610  0EFA                     u5265:	
  7611  0EFA  1003               	clrc
  7612  0EFB  0DCD               	rlf	___awdiv@divisor,f
  7613  0EFC  0DCE               	rlf	___awdiv@divisor+1,f
  7614  0EFD  3EFF               	addlw	-1
  7615  0EFE  1D03               	skipz
  7616  0EFF  2EFA               	goto	u5265
  7617  0F00  3001               	movlw	1
  7618  0F01  00F4               	movwf	??___awdiv
  7619  0F02  0874               	movf	??___awdiv,w
  7620  0F03  07D1               	addwf	___awdiv@counter,f
  7621  0F04  2EF7               	goto	l4581
  7622  0F05                     l4583:	
  7623  0F05  3001               	movlw	1
  7624  0F06                     u5285:	
  7625  0F06  1003               	clrc
  7626  0F07  0DD3               	rlf	___awdiv@quotient,f
  7627  0F08  0DD4               	rlf	___awdiv@quotient+1,f
  7628  0F09  3EFF               	addlw	-1
  7629  0F0A  1D03               	skipz
  7630  0F0B  2F06               	goto	u5285
  7631  0F0C  084E               	movf	___awdiv@divisor+1,w
  7632  0F0D  0250               	subwf	___awdiv@dividend+1,w
  7633  0F0E  1D03               	skipz
  7634  0F0F  2F12               	goto	u5295
  7635  0F10  084D               	movf	___awdiv@divisor,w
  7636  0F11  024F               	subwf	___awdiv@dividend,w
  7637  0F12                     u5295:	
  7638  0F12  1C03               	skipc
  7639  0F13  2F1B               	goto	l4589
  7640  0F14  084D               	movf	___awdiv@divisor,w
  7641  0F15  02CF               	subwf	___awdiv@dividend,f
  7642  0F16  084E               	movf	___awdiv@divisor+1,w
  7643  0F17  1C03               	skipc
  7644  0F18  03D0               	decf	___awdiv@dividend+1,f
  7645  0F19  02D0               	subwf	___awdiv@dividend+1,f
  7646  0F1A  1453               	bsf	___awdiv@quotient,0
  7647  0F1B                     l4589:	
  7648  0F1B  3001               	movlw	1
  7649  0F1C                     u5305:	
  7650  0F1C  1003               	clrc
  7651  0F1D  0CCE               	rrf	___awdiv@divisor+1,f
  7652  0F1E  0CCD               	rrf	___awdiv@divisor,f
  7653  0F1F  3EFF               	addlw	-1
  7654  0F20  1D03               	skipz
  7655  0F21  2F1C               	goto	u5305
  7656  0F22  3001               	movlw	1
  7657  0F23  02D1               	subwf	___awdiv@counter,f
  7658  0F24  1D03               	btfss	3,2
  7659  0F25  2F05               	goto	l4583
  7660  0F26                     l4593:	
  7661  0F26  0852               	movf	___awdiv@sign,w
  7662  0F27  1903               	btfsc	3,2
  7663  0F28  2F2E               	goto	l4597
  7664  0F29  09D3               	comf	___awdiv@quotient,f
  7665  0F2A  09D4               	comf	___awdiv@quotient+1,f
  7666  0F2B  0AD3               	incf	___awdiv@quotient,f
  7667  0F2C  1903               	skipnz
  7668  0F2D  0AD4               	incf	___awdiv@quotient+1,f
  7669  0F2E                     l4597:	
  7670  0F2E  0854               	movf	___awdiv@quotient+1,w
  7671  0F2F  01CE               	clrf	?___awdiv+1
  7672  0F30  07CE               	addwf	?___awdiv+1,f
  7673  0F31  0853               	movf	___awdiv@quotient,w
  7674  0F32  01CD               	clrf	?___awdiv
  7675  0F33  07CD               	addwf	?___awdiv,f
  7676  0F34  0008               	return
  7677  0F35                     __end_of___awdiv:	
  7678                           
  7679                           	psect	text45
  7680  0AB9                     __ptext45:	
  7681 ;; *************** function _Lights_Initialization *****************
  7682 ;; Defined at:
  7683 ;;		line 32 in file "../src/TriacRelay_B1.c"
  7684 ;; Parameters:    Size  Location     Type
  7685 ;;		None
  7686 ;; Auto vars:     Size  Location     Type
  7687 ;;		None
  7688 ;; Return value:  Size  Location     Type
  7689 ;;		None               void
  7690 ;; Registers used:
  7691 ;;		wreg, status,2, status,0, pclath, cstack
  7692 ;; Tracked objects:
  7693 ;;		On entry : 0/0
  7694 ;;		On exit  : 0/0
  7695 ;;		Unchanged: 0/0
  7696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7697 ;;      Params:         0       0       0       0
  7698 ;;      Locals:         0       0       0       0
  7699 ;;      Temps:          0       0       0       0
  7700 ;;      Totals:         0       0       0       0
  7701 ;;Total ram usage:        0 bytes
  7702 ;; Hardware stack levels used:    1
  7703 ;; Hardware stack levels required when called:    4
  7704 ;; This function calls:
  7705 ;;		_setLights_Initialization
  7706 ;; This function is called by:
  7707 ;;		_main
  7708 ;; This function uses a non-reentrant model
  7709 ;;
  7710                           
  7711                           
  7712                           ;psect for function _Lights_Initialization
  7713  0AB9                     _Lights_Initialization:	
  7714                           
  7715                           ;TriacRelay_B1.c: 34: setLights_Initialization(1);
  7716                           
  7717                           ;incstack = 0
  7718                           ; Regs used in _Lights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  7719  0AB9  3001               	movlw	1
  7720  0ABA  158A  22D8         	fcall	_setLights_Initialization
  7721  0ABC  0008               	return
  7722  0ABD                     __end_of_Lights_Initialization:	
  7723                           
  7724                           	psect	text46
  7725  0AD8                     __ptext46:	
  7726 ;; *************** function _setLights_Initialization *****************
  7727 ;; Defined at:
  7728 ;;		line 47 in file "../src/TriacRelay_B1.c"
  7729 ;; Parameters:    Size  Location     Type
  7730 ;;  lights          1    wreg     unsigned char 
  7731 ;; Auto vars:     Size  Location     Type
  7732 ;;  lights          1    0[BANK0 ] unsigned char 
  7733 ;; Return value:  Size  Location     Type
  7734 ;;		None               void
  7735 ;; Registers used:
  7736 ;;		wreg, status,2, status,0, pclath, cstack
  7737 ;; Tracked objects:
  7738 ;;		On entry : 0/0
  7739 ;;		On exit  : 0/0
  7740 ;;		Unchanged: 0/0
  7741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7742 ;;      Params:         0       0       0       0
  7743 ;;      Locals:         0       1       0       0
  7744 ;;      Temps:          0       0       0       0
  7745 ;;      Totals:         0       1       0       0
  7746 ;;Total ram usage:        1 bytes
  7747 ;; Hardware stack levels used:    1
  7748 ;; Hardware stack levels required when called:    3
  7749 ;; This function calls:
  7750 ;;		_LightsPointSelect
  7751 ;; This function is called by:
  7752 ;;		_Lights_Initialization
  7753 ;; This function uses a non-reentrant model
  7754 ;;
  7755                           
  7756                           
  7757                           ;psect for function _setLights_Initialization
  7758  0AD8                     _setLights_Initialization:	
  7759                           
  7760                           ;incstack = 0
  7761                           ; Regs used in _setLights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  7762                           ;setLights_Initialization@lights stored from wreg
  7763  0AD8  1283               	bcf	3,5	;RP0=0, select bank0
  7764  0AD9  1303               	bcf	3,6	;RP1=0, select bank0
  7765  0ADA  00CD               	movwf	setLights_Initialization@lights
  7766                           
  7767                           ;TriacRelay_B1.c: 48: LightsPointSelect(lights);
  7768  0ADB  084D               	movf	setLights_Initialization@lights,w
  7769  0ADC  158A  2318         	fcall	_LightsPointSelect
  7770  0ADE  0008               	return
  7771  0ADF                     __end_of_setLights_Initialization:	
  7772                           
  7773                           	psect	text47
  7774  0AA3                     __ptext47:	
  7775 ;; *************** function _LED_Main *****************
  7776 ;; Defined at:
  7777 ;;		line 47 in file "../src/LED_B1.c"
  7778 ;; Parameters:    Size  Location     Type
  7779 ;;		None
  7780 ;; Auto vars:     Size  Location     Type
  7781 ;;		None
  7782 ;; Return value:  Size  Location     Type
  7783 ;;		None               void
  7784 ;; Registers used:
  7785 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7786 ;; Tracked objects:
  7787 ;;		On entry : 0/0
  7788 ;;		On exit  : 0/0
  7789 ;;		Unchanged: 0/0
  7790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7791 ;;      Params:         0       0       0       0
  7792 ;;      Locals:         0       0       0       0
  7793 ;;      Temps:          0       0       0       0
  7794 ;;      Totals:         0       0       0       0
  7795 ;;Total ram usage:        0 bytes
  7796 ;; Hardware stack levels used:    1
  7797 ;; Hardware stack levels required when called:    5
  7798 ;; This function calls:
  7799 ;;		_setPIRLED_Main
  7800 ;; This function is called by:
  7801 ;;		_main
  7802 ;; This function uses a non-reentrant model
  7803 ;;
  7804                           
  7805                           
  7806                           ;psect for function _LED_Main
  7807  0AA3                     _LED_Main:	
  7808                           
  7809                           ;LED_B1.c: 55: setPIRLED_Main();
  7810                           
  7811                           ;incstack = 0
  7812                           ; Regs used in _LED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7813  0AA3  118A  2784         	fcall	_setPIRLED_Main
  7814  0AA5  0008               	return
  7815  0AA6                     __end_of_LED_Main:	
  7816                           
  7817                           	psect	text48
  7818  0784                     __ptext48:	
  7819 ;; *************** function _setPIRLED_Main *****************
  7820 ;; Defined at:
  7821 ;;		line 265 in file "../src/LED_B1.c"
  7822 ;; Parameters:    Size  Location     Type
  7823 ;;		None
  7824 ;; Auto vars:     Size  Location     Type
  7825 ;;  count           1    3[BANK0 ] unsigned char 
  7826 ;; Return value:  Size  Location     Type
  7827 ;;		None               void
  7828 ;; Registers used:
  7829 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7830 ;; Tracked objects:
  7831 ;;		On entry : 0/0
  7832 ;;		On exit  : 0/0
  7833 ;;		Unchanged: 0/0
  7834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7835 ;;      Params:         0       0       0       0
  7836 ;;      Locals:         0       1       0       0
  7837 ;;      Temps:          0       1       0       0
  7838 ;;      Totals:         0       2       0       0
  7839 ;;Total ram usage:        2 bytes
  7840 ;; Hardware stack levels used:    1
  7841 ;; Hardware stack levels required when called:    4
  7842 ;; This function calls:
  7843 ;;		_setLED
  7844 ;; This function is called by:
  7845 ;;		_LED_Main
  7846 ;; This function uses a non-reentrant model
  7847 ;;
  7848                           
  7849                           
  7850                           ;psect for function _setPIRLED_Main
  7851  0784                     _setPIRLED_Main:	
  7852                           
  7853                           ;LED_B1.c: 267: char count;
  7854                           ;LED_B1.c: 268: if (PIRLED.GO == 1) {
  7855                           
  7856                           ;incstack = 0
  7857                           ; Regs used in _setPIRLED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7858  0784  1283               	bcf	3,5	;RP0=0, select bank0
  7859  0785  1303               	bcf	3,6	;RP1=0, select bank0
  7860  0786  1C2A               	btfss	_PIRLED,0
  7861  0787  0008               	return
  7862                           
  7863                           ;LED_B1.c: 269: PIRLED.Time++;
  7864  0788  3001               	movlw	1
  7865  0789  07AC               	addwf	_PIRLED+2,f
  7866  078A  1803               	skipnc
  7867  078B  0AAD               	incf	_PIRLED+3,f
  7868  078C  3000               	movlw	0
  7869  078D  07AD               	addwf	_PIRLED+3,f
  7870                           
  7871                           ;LED_B1.c: 270: if (PIRLED.Time >= 500 / 20) {
  7872  078E  3000               	movlw	0
  7873  078F  022D               	subwf	_PIRLED+3,w
  7874  0790  3019               	movlw	25
  7875  0791  1903               	skipnz
  7876  0792  022C               	subwf	_PIRLED+2,w
  7877  0793  1C03               	skipc
  7878  0794  0008               	return
  7879                           
  7880                           ;LED_B1.c: 271: PIRLED.Time = 0;
  7881  0795  01AC               	clrf	_PIRLED+2
  7882  0796  01AD               	clrf	_PIRLED+3
  7883                           
  7884                           ;LED_B1.c: 272: setLED(1, 0);
  7885  0797  01CD               	clrf	setLED@command
  7886  0798  3001               	movlw	1
  7887  0799  158A  2735  118A   	fcall	_setLED
  7888                           
  7889                           ;LED_B1.c: 273: setLED(2, 0);
  7890  079C  1283               	bcf	3,5	;RP0=0, select bank0
  7891  079D  1303               	bcf	3,6	;RP1=0, select bank0
  7892  079E  01CD               	clrf	setLED@command
  7893  079F  3002               	movlw	2
  7894  07A0  158A  2735  118A   	fcall	_setLED
  7895                           
  7896                           ;LED_B1.c: 274: if (PIRLED.GO1 == 1) {
  7897  07A3  1283               	bcf	3,5	;RP0=0, select bank0
  7898  07A4  1303               	bcf	3,6	;RP1=0, select bank0
  7899  07A5  1CAA               	btfss	_PIRLED,1
  7900  07A6  2FAB               	goto	l4637
  7901                           
  7902                           ;LED_B1.c: 275: count = 4;
  7903  07A7  3004               	movlw	4
  7904  07A8  00CF               	movwf	??_setPIRLED_Main
  7905  07A9  084F               	movf	??_setPIRLED_Main,w
  7906  07AA  00D0               	movwf	setPIRLED_Main@count
  7907  07AB                     l4637:	
  7908                           
  7909                           ;LED_B1.c: 276: }
  7910                           ;LED_B1.c: 277: if (PIRLED.GO2 == 1) {
  7911  07AB  1D2A               	btfss	_PIRLED,2
  7912  07AC  2FB1               	goto	l4641
  7913                           
  7914                           ;LED_B1.c: 278: count = 6;
  7915  07AD  3006               	movlw	6
  7916  07AE  00CF               	movwf	??_setPIRLED_Main
  7917  07AF  084F               	movf	??_setPIRLED_Main,w
  7918  07B0  00D0               	movwf	setPIRLED_Main@count
  7919  07B1                     l4641:	
  7920                           
  7921                           ;LED_B1.c: 279: }
  7922                           ;LED_B1.c: 280: if (PIRLED.GO3 == 1) {
  7923  07B1  1DAA               	btfss	_PIRLED,3
  7924  07B2  2FB7               	goto	l4645
  7925                           
  7926                           ;LED_B1.c: 281: count = 8;
  7927  07B3  3008               	movlw	8
  7928  07B4  00CF               	movwf	??_setPIRLED_Main
  7929  07B5  084F               	movf	??_setPIRLED_Main,w
  7930  07B6  00D0               	movwf	setPIRLED_Main@count
  7931  07B7                     l4645:	
  7932                           
  7933                           ;LED_B1.c: 282: }
  7934                           ;LED_B1.c: 283: PIRLED.Count++;
  7935  07B7  3001               	movlw	1
  7936  07B8  00CF               	movwf	??_setPIRLED_Main
  7937  07B9  084F               	movf	??_setPIRLED_Main,w
  7938  07BA  07AB               	addwf	_PIRLED+1,f
  7939                           
  7940                           ;LED_B1.c: 284: if (PIRLED.Count == 1 || PIRLED.Count == 2) {
  7941  07BB  082B               	movf	_PIRLED+1,w
  7942  07BC  3A01               	xorlw	1
  7943  07BD  1903               	skipnz
  7944  07BE  2FC3               	goto	l4651
  7945  07BF  082B               	movf	_PIRLED+1,w
  7946  07C0  3A02               	xorlw	2
  7947  07C1  1D03               	skipz
  7948  07C2  2FD7               	goto	l4655
  7949  07C3                     l4651:	
  7950                           
  7951                           ;LED_B1.c: 285: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  7952  07C3  1003               	clrc
  7953  07C4  1E2A               	btfss	_PIRLED,4
  7954  07C5  1403               	setc
  7955  07C6  1C03               	btfss	3,0
  7956  07C7  2FCC               	goto	u5420
  7957  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  7958  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  7959  07CA  162A               	bsf	_PIRLED,4
  7960  07CB  2FCF               	goto	l4653
  7961  07CC                     u5420:	
  7962  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  7963  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  7964  07CE  122A               	bcf	_PIRLED,4
  7965  07CF                     l4653:	
  7966                           
  7967                           ;LED_B1.c: 286: setLED(2, PIRLED.status);
  7968  07CF  3000               	movlw	0
  7969  07D0  1A2A               	btfsc	_PIRLED,4
  7970  07D1  3001               	movlw	1
  7971  07D2  00CD               	movwf	setLED@command
  7972  07D3  3002               	movlw	2
  7973  07D4  158A  2735         	fcall	_setLED
  7974                           
  7975                           ;LED_B1.c: 287: } else {
  7976  07D6  0008               	return
  7977  07D7                     l4655:	
  7978                           
  7979                           ;LED_B1.c: 288: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  7980  07D7  1003               	clrc
  7981  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  7982  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  7983  07DA  1E2A               	btfss	_PIRLED,4
  7984  07DB  1403               	setc
  7985  07DC  1C03               	btfss	3,0
  7986  07DD  2FE2               	goto	u5440
  7987  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  7988  07DF  1303               	bcf	3,6	;RP1=0, select bank0
  7989  07E0  162A               	bsf	_PIRLED,4
  7990  07E1  2FE5               	goto	l4657
  7991  07E2                     u5440:	
  7992  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  7993  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  7994  07E4  122A               	bcf	_PIRLED,4
  7995  07E5                     l4657:	
  7996                           
  7997                           ;LED_B1.c: 289: setLED(1, PIRLED.status);
  7998  07E5  3000               	movlw	0
  7999  07E6  1A2A               	btfsc	_PIRLED,4
  8000  07E7  3001               	movlw	1
  8001  07E8  00CD               	movwf	setLED@command
  8002  07E9  3001               	movlw	1
  8003  07EA  158A  2735  118A   	fcall	_setLED
  8004                           
  8005                           ;LED_B1.c: 290: if (PIRLED.Count == count) {
  8006  07ED  1283               	bcf	3,5	;RP0=0, select bank0
  8007  07EE  1303               	bcf	3,6	;RP1=0, select bank0
  8008  07EF  082B               	movf	_PIRLED+1,w
  8009  07F0  0650               	xorwf	setPIRLED_Main@count,w
  8010  07F1  1D03               	skipz
  8011  07F2  0008               	return
  8012                           
  8013                           ;LED_B1.c: 291: PIRLED.Count = 0;
  8014  07F3  01AB               	clrf	_PIRLED+1
  8015  07F4  0008               	return
  8016  07F5                     __end_of_setPIRLED_Main:	
  8017                           
  8018                           	psect	text49
  8019  0AE6                     __ptext49:	
  8020 ;; *************** function _LED_Initialization *****************
  8021 ;; Defined at:
  8022 ;;		line 31 in file "../src/LED_B1.c"
  8023 ;; Parameters:    Size  Location     Type
  8024 ;;		None
  8025 ;; Auto vars:     Size  Location     Type
  8026 ;;		None
  8027 ;; Return value:  Size  Location     Type
  8028 ;;		None               void
  8029 ;; Registers used:
  8030 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8031 ;; Tracked objects:
  8032 ;;		On entry : 0/0
  8033 ;;		On exit  : 0/0
  8034 ;;		Unchanged: 0/0
  8035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8036 ;;      Params:         0       0       0       0
  8037 ;;      Locals:         0       0       0       0
  8038 ;;      Temps:          0       0       0       0
  8039 ;;      Totals:         0       0       0       0
  8040 ;;Total ram usage:        0 bytes
  8041 ;; Hardware stack levels used:    1
  8042 ;; Hardware stack levels required when called:    5
  8043 ;; This function calls:
  8044 ;;		_setLED_Initialization
  8045 ;; This function is called by:
  8046 ;;		_main
  8047 ;; This function uses a non-reentrant model
  8048 ;;
  8049                           
  8050                           
  8051                           ;psect for function _LED_Initialization
  8052  0AE6                     _LED_Initialization:	
  8053                           
  8054                           ;LED_B1.c: 33: setLED_Initialization(1);
  8055                           
  8056                           ;incstack = 0
  8057                           ; Regs used in _LED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8058  0AE6  3001               	movlw	1
  8059  0AE7  158A  23A7  158A   	fcall	_setLED_Initialization
  8060                           
  8061                           ;LED_B1.c: 36: setLED_Initialization(2);
  8062  0AEA  3002               	movlw	2
  8063  0AEB  158A  23A7         	fcall	_setLED_Initialization
  8064  0AED  0008               	return
  8065  0AEE                     __end_of_LED_Initialization:	
  8066                           
  8067                           	psect	text50
  8068  0BA7                     __ptext50:	
  8069 ;; *************** function _setLED_Initialization *****************
  8070 ;; Defined at:
  8071 ;;		line 74 in file "../src/LED_B1.c"
  8072 ;; Parameters:    Size  Location     Type
  8073 ;;  led             1    wreg     unsigned char 
  8074 ;; Auto vars:     Size  Location     Type
  8075 ;;  led             1    2[BANK0 ] unsigned char 
  8076 ;; Return value:  Size  Location     Type
  8077 ;;		None               void
  8078 ;; Registers used:
  8079 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8080 ;; Tracked objects:
  8081 ;;		On entry : 0/0
  8082 ;;		On exit  : 0/0
  8083 ;;		Unchanged: 0/0
  8084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8085 ;;      Params:         0       0       0       0
  8086 ;;      Locals:         0       1       0       0
  8087 ;;      Temps:          0       0       0       0
  8088 ;;      Totals:         0       1       0       0
  8089 ;;Total ram usage:        1 bytes
  8090 ;; Hardware stack levels used:    1
  8091 ;; Hardware stack levels required when called:    4
  8092 ;; This function calls:
  8093 ;;		_LedPointSelect
  8094 ;;		_setLED
  8095 ;; This function is called by:
  8096 ;;		_LED_Initialization
  8097 ;; This function uses a non-reentrant model
  8098 ;;
  8099                           
  8100                           
  8101                           ;psect for function _setLED_Initialization
  8102  0BA7                     _setLED_Initialization:	
  8103                           
  8104                           ;incstack = 0
  8105                           ; Regs used in _setLED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8106                           ;setLED_Initialization@led stored from wreg
  8107  0BA7  1283               	bcf	3,5	;RP0=0, select bank0
  8108  0BA8  1303               	bcf	3,6	;RP1=0, select bank0
  8109  0BA9  00CF               	movwf	setLED_Initialization@led
  8110                           
  8111                           ;LED_B1.c: 75: LedPointSelect(led);
  8112  0BAA  084F               	movf	setLED_Initialization@led,w
  8113  0BAB  158A  2395  158A   	fcall	_LedPointSelect
  8114                           
  8115                           ;LED_B1.c: 76: LED->Enable = 1;
  8116  0BAE  0876               	movf	_LED,w
  8117  0BAF  0084               	movwf	4
  8118  0BB0  1383               	bcf	3,7	;select IRP bank0
  8119  0BB1  1400               	bsf	0,0
  8120                           
  8121                           ;LED_B1.c: 77: setLED(led, 0);
  8122  0BB2  1283               	bcf	3,5	;RP0=0, select bank0
  8123  0BB3  1303               	bcf	3,6	;RP1=0, select bank0
  8124  0BB4  01CD               	clrf	setLED@command
  8125  0BB5  084F               	movf	setLED_Initialization@led,w
  8126  0BB6  158A  2735         	fcall	_setLED
  8127  0BB8  0008               	return
  8128  0BB9                     __end_of_setLED_Initialization:	
  8129                           
  8130                           	psect	text51
  8131  0545                     __ptext51:	
  8132 ;; *************** function _Exception_Main *****************
  8133 ;; Defined at:
  8134 ;;		line 499 in file "../src/Main_B1.c"
  8135 ;; Parameters:    Size  Location     Type
  8136 ;;		None
  8137 ;; Auto vars:     Size  Location     Type
  8138 ;;  i               2   12[BANK0 ] int 
  8139 ;;  i               2   10[BANK0 ] int 
  8140 ;;  error           1   14[BANK0 ] unsigned char 
  8141 ;;  status          1    9[BANK0 ] unsigned char 
  8142 ;;  count           1    8[BANK0 ] unsigned char 
  8143 ;;  lights          1    7[BANK0 ] unsigned char 
  8144 ;; Return value:  Size  Location     Type
  8145 ;;		None               void
  8146 ;; Registers used:
  8147 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8148 ;; Tracked objects:
  8149 ;;		On entry : 0/0
  8150 ;;		On exit  : 0/0
  8151 ;;		Unchanged: 0/0
  8152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8153 ;;      Params:         0       0       0       0
  8154 ;;      Locals:         0       8       0       0
  8155 ;;      Temps:          0       1       0       0
  8156 ;;      Totals:         0       9       0       0
  8157 ;;Total ram usage:        9 bytes
  8158 ;; Hardware stack levels used:    1
  8159 ;; Hardware stack levels required when called:    5
  8160 ;; This function calls:
  8161 ;;		_getAll_Lights_Line
  8162 ;;		_getLights_Status
  8163 ;;		_getMain_All_Error_Status
  8164 ;;		_getMain_All_LightsStatus
  8165 ;;		_setLED
  8166 ;;		_setLights_SwOff
  8167 ;;		_setLights_SwOn
  8168 ;; This function is called by:
  8169 ;;		_main
  8170 ;; This function uses a non-reentrant model
  8171 ;;
  8172                           
  8173                           
  8174                           ;psect for function _Exception_Main
  8175  0545                     _Exception_Main:	
  8176                           
  8177                           ;Main_B1.c: 500: char error = getMain_All_Error_Status(0);
  8178                           
  8179                           ;incstack = 0
  8180                           ; Regs used in _Exception_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8181  0545  3000               	movlw	0
  8182  0546  158A  25BA  118A   	fcall	_getMain_All_Error_Status
  8183  0549  1283               	bcf	3,5	;RP0=0, select bank0
  8184  054A  1303               	bcf	3,6	;RP1=0, select bank0
  8185  054B  00D3               	movwf	??_Exception_Main
  8186  054C  0853               	movf	??_Exception_Main,w
  8187  054D  00DB               	movwf	Exception_Main@error
  8188                           
  8189                           ;Main_B1.c: 501: char lights = 0, count = 1;
  8190  054E  01D4               	clrf	Exception_Main@lights
  8191  054F  01D5               	clrf	Exception_Main@count
  8192  0550  0AD5               	incf	Exception_Main@count,f
  8193                           
  8194                           ;Main_B1.c: 502: char status = 0;
  8195  0551  01D6               	clrf	Exception_Main@status
  8196                           
  8197                           ;Main_B1.c: 504: if (myMain.Error_Run == 1) {
  8198  0552  1DA7               	btfss	_myMain+2,3
  8199  0553  2D60               	goto	l5269
  8200                           
  8201                           ;Main_B1.c: 505: if (error == 0) {
  8202  0554  08DB               	movf	Exception_Main@error,f
  8203  0555  1D03               	skipz
  8204  0556  0008               	return
  8205                           
  8206                           ;Main_B1.c: 506: myMain.Error_Run = 0;
  8207  0557  11A7               	bcf	_myMain+2,3
  8208                           
  8209                           ;Main_B1.c: 511: setLED(error, 110);
  8210  0558  306E               	movlw	110
  8211  0559  00D3               	movwf	??_Exception_Main
  8212  055A  0853               	movf	??_Exception_Main,w
  8213  055B  00CD               	movwf	setLED@command
  8214  055C  085B               	movf	Exception_Main@error,w
  8215  055D  158A  2735         	fcall	_setLED
  8216                           
  8217                           ;Main_B1.c: 522: }
  8218                           ;Main_B1.c: 523: } else {
  8219  055F  0008               	return
  8220  0560                     l5269:	
  8221                           
  8222                           ;Main_B1.c: 524: if (error != 0) {
  8223  0560  1283               	bcf	3,5	;RP0=0, select bank0
  8224  0561  1303               	bcf	3,6	;RP1=0, select bank0
  8225  0562  085B               	movf	Exception_Main@error,w
  8226  0563  1903               	btfsc	3,2
  8227  0564  0008               	return
  8228                           
  8229                           ;Main_B1.c: 525: myMain.Error_Run = 1;
  8230  0565  15A7               	bsf	_myMain+2,3
  8231                           
  8232                           ;Main_B1.c: 529: setLED(error, 111);
  8233  0566  306F               	movlw	111
  8234  0567  00D3               	movwf	??_Exception_Main
  8235  0568  0853               	movf	??_Exception_Main,w
  8236  0569  00CD               	movwf	setLED@command
  8237  056A  085B               	movf	Exception_Main@error,w
  8238  056B  158A  2735  118A   	fcall	_setLED
  8239                           
  8240                           ;Main_B1.c: 591: switch (error) {
  8241  056E  2DF8               	goto	l5305
  8242  056F                     l5275:	
  8243                           ;Main_B1.c: 592: case 1:
  8244                           
  8245                           
  8246                           ;Main_B1.c: 593: for (int i = 0; i < count; i++) {
  8247  056F  1283               	bcf	3,5	;RP0=0, select bank0
  8248  0570  1303               	bcf	3,6	;RP1=0, select bank0
  8249  0571  01D7               	clrf	Exception_Main@i
  8250  0572  01D8               	clrf	Exception_Main@i+1
  8251  0573                     l5283:	
  8252  0573  0858               	movf	Exception_Main@i+1,w
  8253  0574  3A80               	xorlw	128
  8254  0575  00D3               	movwf	??_Exception_Main
  8255  0576  3080               	movlw	128
  8256  0577  0253               	subwf	??_Exception_Main,w
  8257  0578  1D03               	skipz
  8258  0579  2D7C               	goto	u6835
  8259  057A  0855               	movf	Exception_Main@count,w
  8260  057B  0257               	subwf	Exception_Main@i,w
  8261  057C                     u6835:	
  8262  057C  1803               	btfsc	3,0
  8263  057D  2D9F               	goto	u6830
  8264                           
  8265                           ;Main_B1.c: 594: if (getLights_Status(i + 1) == 1) {
  8266  057E  1283               	bcf	3,5	;RP0=0, select bank0
  8267  057F  1303               	bcf	3,6	;RP1=0, select bank0
  8268  0580  0857               	movf	Exception_Main@i,w
  8269  0581  3E01               	addlw	1
  8270  0582  158A  2373  118A   	fcall	_getLights_Status
  8271  0585  3A01               	xorlw	1
  8272  0586  1D03               	skipz
  8273  0587  2D96               	goto	l5281
  8274                           
  8275                           ;Main_B1.c: 596: setLights_SwOn(i + 1);
  8276  0588  1283               	bcf	3,5	;RP0=0, select bank0
  8277  0589  1303               	bcf	3,6	;RP1=0, select bank0
  8278  058A  0857               	movf	Exception_Main@i,w
  8279  058B  3E01               	addlw	1
  8280  058C  158A  250C  118A   	fcall	_setLights_SwOn
  8281                           
  8282                           ;Main_B1.c: 597: setLights_SwOff(i + 1);
  8283  058F  1283               	bcf	3,5	;RP0=0, select bank0
  8284  0590  1303               	bcf	3,6	;RP1=0, select bank0
  8285  0591  0857               	movf	Exception_Main@i,w
  8286  0592  3E01               	addlw	1
  8287  0593  158A  2428  118A   	fcall	_setLights_SwOff
  8288  0596                     l5281:	
  8289  0596  3001               	movlw	1
  8290  0597  1283               	bcf	3,5	;RP0=0, select bank0
  8291  0598  1303               	bcf	3,6	;RP1=0, select bank0
  8292  0599  07D7               	addwf	Exception_Main@i,f
  8293  059A  1803               	skipnc
  8294  059B  0AD8               	incf	Exception_Main@i+1,f
  8295  059C  3000               	movlw	0
  8296  059D  07D8               	addwf	Exception_Main@i+1,f
  8297  059E  2D73               	goto	l5283
  8298  059F                     u6830:	
  8299  059F  1283               	bcf	3,5	;RP0=0, select bank0
  8300  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  8301  05A1  0008               	return
  8302  05A2                     l5285:	
  8303                           ;Main_B1.c: 601: case 2:
  8304                           
  8305                           ;Main_B1.c: 598: }
  8306                           ;Main_B1.c: 599: }
  8307                           ;Main_B1.c: 600: break;
  8308                           
  8309                           
  8310                           ;Main_B1.c: 602: if (getMain_All_LightsStatus() == 1) {
  8311  05A2  158A  230F  118A   	fcall	_getMain_All_LightsStatus
  8312                           
  8313                           ;Main_B1.c: 604: }
  8314                           ;Main_B1.c: 606: for (int i = 0; i < count; i++) {
  8315                           
  8316                           ;Main_B1.c: 603: ;;
  8317  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  8318  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  8319  05A7  01D9               	clrf	Exception_Main@i_2140
  8320  05A8  01DA               	clrf	Exception_Main@i_2140+1
  8321  05A9                     l5295:	
  8322  05A9  085A               	movf	Exception_Main@i_2140+1,w
  8323  05AA  3A80               	xorlw	128
  8324  05AB  00D3               	movwf	??_Exception_Main
  8325  05AC  3080               	movlw	128
  8326  05AD  0253               	subwf	??_Exception_Main,w
  8327  05AE  1D03               	skipz
  8328  05AF  2DB2               	goto	u6855
  8329  05B0  0855               	movf	Exception_Main@count,w
  8330  05B1  0259               	subwf	Exception_Main@i_2140,w
  8331  05B2                     u6855:	
  8332  05B2  1803               	btfsc	3,0
  8333  05B3  2DD5               	goto	u6850
  8334                           
  8335                           ;Main_B1.c: 607: if (getLights_Status(i + 1) == 1) {
  8336  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  8337  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  8338  05B6  0859               	movf	Exception_Main@i_2140,w
  8339  05B7  3E01               	addlw	1
  8340  05B8  158A  2373  118A   	fcall	_getLights_Status
  8341  05BB  3A01               	xorlw	1
  8342  05BC  1D03               	skipz
  8343  05BD  2DCC               	goto	l5293
  8344                           
  8345                           ;Main_B1.c: 608: setLights_SwOn(i + 1);
  8346  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  8347  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  8348  05C0  0859               	movf	Exception_Main@i_2140,w
  8349  05C1  3E01               	addlw	1
  8350  05C2  158A  250C  118A   	fcall	_setLights_SwOn
  8351                           
  8352                           ;Main_B1.c: 609: setLights_SwOff(i + 1);
  8353  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  8354  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  8355  05C7  0859               	movf	Exception_Main@i_2140,w
  8356  05C8  3E01               	addlw	1
  8357  05C9  158A  2428  118A   	fcall	_setLights_SwOff
  8358  05CC                     l5293:	
  8359  05CC  3001               	movlw	1
  8360  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  8361  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  8362  05CF  07D9               	addwf	Exception_Main@i_2140,f
  8363  05D0  1803               	skipnc
  8364  05D1  0ADA               	incf	Exception_Main@i_2140+1,f
  8365  05D2  3000               	movlw	0
  8366  05D3  07DA               	addwf	Exception_Main@i_2140+1,f
  8367  05D4  2DA9               	goto	l5295
  8368  05D5                     u6850:	
  8369  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  8370  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  8371  05D7  0008               	return
  8372  05D8                     l5297:	
  8373                           ;Main_B1.c: 613: case 3:
  8374                           
  8375                           ;Main_B1.c: 610: }
  8376                           ;Main_B1.c: 611: }
  8377                           ;Main_B1.c: 612: break;
  8378                           
  8379                           
  8380                           ;Main_B1.c: 614: status = getAll_Lights_Line();
  8381  05D8  158A  2306  118A   	fcall	_getAll_Lights_Line
  8382  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  8383  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  8384  05DD  00D3               	movwf	??_Exception_Main
  8385  05DE  0853               	movf	??_Exception_Main,w
  8386  05DF  00D6               	movwf	Exception_Main@status
  8387                           
  8388                           ;Main_B1.c: 616: if (getLights_Status(status) == 1) {
  8389  05E0  0856               	movf	Exception_Main@status,w
  8390  05E1  158A  2373  118A   	fcall	_getLights_Status
  8391  05E4  3A01               	xorlw	1
  8392  05E5  1903               	btfsc	3,2
  8393  05E6  2DEA               	goto	l5301
  8394  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  8395  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  8396  05E9  0008               	return
  8397  05EA                     l5301:	
  8398                           
  8399                           ;Main_B1.c: 617: setLights_SwOn(status);
  8400  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  8401  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  8402  05EC  0856               	movf	Exception_Main@status,w
  8403  05ED  158A  250C  118A   	fcall	_setLights_SwOn
  8404                           
  8405                           ;Main_B1.c: 618: setLights_SwOff(status);
  8406  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  8407  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  8408  05F2  0856               	movf	Exception_Main@status,w
  8409  05F3  158A  2428         	fcall	_setLights_SwOff
  8410  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  8411  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  8412  05F7  0008               	return
  8413  05F8                     l5305:	
  8414                           ;Main_B1.c: 623: }
  8415                           
  8416                           ;Main_B1.c: 620: }
  8417                           ;Main_B1.c: 621: ;;
  8418                           ;Main_B1.c: 622: break;
  8419                           
  8420  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  8421  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  8422  05FA  085B               	movf	Exception_Main@error,w
  8423                           
  8424                           ; Switch size 1, requested type "space"
  8425                           ; Number of cases is 3, Range of values is 1 to 3
  8426                           ; switch strategies available:
  8427                           ; Name         Instructions Cycles
  8428                           ; simple_byte           10     6 (average)
  8429                           ; direct_byte           16    10 (fixed)
  8430                           ; jumptable            263     9 (fixed)
  8431                           ;	Chosen strategy is simple_byte
  8432  05FB  3A01               	xorlw	1	; case 1
  8433  05FC  1903               	skipnz
  8434  05FD  2D6F               	goto	l5275
  8435  05FE  3A03               	xorlw	3	; case 2
  8436  05FF  1903               	skipnz
  8437  0600  2DA2               	goto	l5285
  8438  0601  3A01               	xorlw	1	; case 3
  8439  0602  1903               	skipnz
  8440  0603  2DD8               	goto	l5297
  8441  0604  2E06               	goto	l621
  8442  0605  0008               	return
  8443  0606                     l621:	
  8444  0606  0008               	return
  8445  0607                     __end_of_Exception_Main:	
  8446                           
  8447                           	psect	text52
  8448  0D0C                     __ptext52:	
  8449 ;; *************** function _setLights_SwOn *****************
  8450 ;; Defined at:
  8451 ;;		line 410 in file "../src/TriacRelay_B1.c"
  8452 ;; Parameters:    Size  Location     Type
  8453 ;;  sw              1    wreg     unsigned char 
  8454 ;; Auto vars:     Size  Location     Type
  8455 ;;  sw              1    3[BANK0 ] unsigned char 
  8456 ;; Return value:  Size  Location     Type
  8457 ;;		None               void
  8458 ;; Registers used:
  8459 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8460 ;; Tracked objects:
  8461 ;;		On entry : 0/0
  8462 ;;		On exit  : 0/0
  8463 ;;		Unchanged: 0/0
  8464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8465 ;;      Params:         0       0       0       0
  8466 ;;      Locals:         0       1       0       0
  8467 ;;      Temps:          0       0       0       0
  8468 ;;      Totals:         0       1       0       0
  8469 ;;Total ram usage:        1 bytes
  8470 ;; Hardware stack levels used:    1
  8471 ;; Hardware stack levels required when called:    4
  8472 ;; This function calls:
  8473 ;;		_LightsPointSelect
  8474 ;;		_getLights_Status
  8475 ;;		_setLights_Trigger
  8476 ;; This function is called by:
  8477 ;;		_Exception_Main
  8478 ;;		_PIR_Main
  8479 ;; This function uses a non-reentrant model
  8480 ;;
  8481                           
  8482                           
  8483                           ;psect for function _setLights_SwOn
  8484  0D0C                     _setLights_SwOn:	
  8485                           
  8486                           ;incstack = 0
  8487                           ; Regs used in _setLights_SwOn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8488                           ;setLights_SwOn@sw stored from wreg
  8489  0D0C  1283               	bcf	3,5	;RP0=0, select bank0
  8490  0D0D  1303               	bcf	3,6	;RP1=0, select bank0
  8491  0D0E  00D0               	movwf	setLights_SwOn@sw
  8492                           
  8493                           ;TriacRelay_B1.c: 411: LightsPointSelect(sw);
  8494  0D0F  0850               	movf	setLights_SwOn@sw,w
  8495  0D10  158A  2318  158A   	fcall	_LightsPointSelect
  8496                           
  8497                           ;TriacRelay_B1.c: 414: Lights->SwFlag = 1;
  8498  0D13  0A78               	incf	_Lights,w
  8499  0D14  0084               	movwf	4
  8500  0D15  1383               	bcf	3,7	;select IRP bank0
  8501  0D16  1500               	bsf	0,2
  8502                           
  8503                           ;TriacRelay_B1.c: 415: if (getLights_Status(sw) == 0) {
  8504  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  8505  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  8506  0D19  0850               	movf	setLights_SwOn@sw,w
  8507  0D1A  158A  2373  158A   	fcall	_getLights_Status
  8508  0D1D  3800               	iorlw	0
  8509  0D1E  1D03               	skipz
  8510  0D1F  2D2C               	goto	l4673
  8511                           
  8512                           ;TriacRelay_B1.c: 416: Lights->SwStatus = 1;
  8513  0D20  0A78               	incf	_Lights,w
  8514  0D21  0084               	movwf	4
  8515  0D22  1383               	bcf	3,7	;select IRP bank0
  8516  0D23  1580               	bsf	0,3
  8517                           
  8518                           ;TriacRelay_B1.c: 417: setLights_Trigger(sw, 1);
  8519  0D24  1283               	bcf	3,5	;RP0=0, select bank0
  8520  0D25  1303               	bcf	3,6	;RP1=0, select bank0
  8521  0D26  01CD               	clrf	setLights_Trigger@command
  8522  0D27  0ACD               	incf	setLights_Trigger@command,f
  8523  0D28  0850               	movf	setLights_SwOn@sw,w
  8524  0D29  158A  2476         	fcall	_setLights_Trigger
  8525                           
  8526                           ;TriacRelay_B1.c: 418: } else {
  8527  0D2B  0008               	return
  8528  0D2C                     l4673:	
  8529                           
  8530                           ;TriacRelay_B1.c: 419: Lights->SwStatus = 0;
  8531  0D2C  0A78               	incf	_Lights,w
  8532  0D2D  0084               	movwf	4
  8533  0D2E  1383               	bcf	3,7	;select IRP bank0
  8534  0D2F  1180               	bcf	0,3
  8535  0D30  0008               	return
  8536  0D31                     __end_of_setLights_SwOn:	
  8537                           
  8538                           	psect	text53
  8539  0B73                     __ptext53:	
  8540 ;; *************** function _getLights_Status *****************
  8541 ;; Defined at:
  8542 ;;		line 271 in file "../src/TriacRelay_B1.c"
  8543 ;; Parameters:    Size  Location     Type
  8544 ;;  lights          1    wreg     unsigned char 
  8545 ;; Auto vars:     Size  Location     Type
  8546 ;;  lights          1    0[BANK0 ] unsigned char 
  8547 ;;  status          1    1[BANK0 ] unsigned char 
  8548 ;; Return value:  Size  Location     Type
  8549 ;;                  1    wreg      unsigned char 
  8550 ;; Registers used:
  8551 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8552 ;; Tracked objects:
  8553 ;;		On entry : 0/0
  8554 ;;		On exit  : 0/0
  8555 ;;		Unchanged: 0/0
  8556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8557 ;;      Params:         0       0       0       0
  8558 ;;      Locals:         0       2       0       0
  8559 ;;      Temps:          0       0       0       0
  8560 ;;      Totals:         0       2       0       0
  8561 ;;Total ram usage:        2 bytes
  8562 ;; Hardware stack levels used:    1
  8563 ;; Hardware stack levels required when called:    3
  8564 ;; This function calls:
  8565 ;;		_LightsPointSelect
  8566 ;; This function is called by:
  8567 ;;		_Exception_Main
  8568 ;;		_PIR_Main
  8569 ;;		_setLights_SwOn
  8570 ;;		_setLights_ErrorClose
  8571 ;; This function uses a non-reentrant model
  8572 ;;
  8573                           
  8574                           
  8575                           ;psect for function _getLights_Status
  8576  0B73                     _getLights_Status:	
  8577                           
  8578                           ;incstack = 0
  8579                           ; Regs used in _getLights_Status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8580                           ;getLights_Status@lights stored from wreg
  8581  0B73  1283               	bcf	3,5	;RP0=0, select bank0
  8582  0B74  1303               	bcf	3,6	;RP1=0, select bank0
  8583  0B75  00CD               	movwf	getLights_Status@lights
  8584                           
  8585                           ;TriacRelay_B1.c: 272: LightsPointSelect(lights);
  8586  0B76  084D               	movf	getLights_Status@lights,w
  8587  0B77  158A  2318         	fcall	_LightsPointSelect
  8588                           
  8589                           ;TriacRelay_B1.c: 273: char status = Lights->Status == 1 ? 1 : 0;
  8590  0B79  0878               	movf	_Lights,w
  8591  0B7A  0084               	movwf	4
  8592  0B7B  3000               	movlw	0
  8593  0B7C  1383               	bcf	3,7	;select IRP bank0
  8594  0B7D  1900               	btfsc	0,2
  8595  0B7E  3001               	movlw	1
  8596  0B7F  1283               	bcf	3,5	;RP0=0, select bank0
  8597  0B80  1303               	bcf	3,6	;RP1=0, select bank0
  8598  0B81  00CE               	movwf	getLights_Status@status
  8599                           
  8600                           ;TriacRelay_B1.c: 274: return status;
  8601  0B82  084E               	movf	getLights_Status@status,w
  8602  0B83  0008               	return
  8603  0B84                     __end_of_getLights_Status:	
  8604                           
  8605                           	psect	text54
  8606  0C28                     __ptext54:	
  8607 ;; *************** function _setLights_SwOff *****************
  8608 ;; Defined at:
  8609 ;;		line 438 in file "../src/TriacRelay_B1.c"
  8610 ;; Parameters:    Size  Location     Type
  8611 ;;  sw              1    wreg     unsigned char 
  8612 ;; Auto vars:     Size  Location     Type
  8613 ;;  sw              1    3[BANK0 ] unsigned char 
  8614 ;; Return value:  Size  Location     Type
  8615 ;;		None               void
  8616 ;; Registers used:
  8617 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8618 ;; Tracked objects:
  8619 ;;		On entry : 0/0
  8620 ;;		On exit  : 0/0
  8621 ;;		Unchanged: 0/0
  8622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8623 ;;      Params:         0       0       0       0
  8624 ;;      Locals:         0       1       0       0
  8625 ;;      Temps:          0       0       0       0
  8626 ;;      Totals:         0       1       0       0
  8627 ;;Total ram usage:        1 bytes
  8628 ;; Hardware stack levels used:    1
  8629 ;; Hardware stack levels required when called:    4
  8630 ;; This function calls:
  8631 ;;		_LightsPointSelect
  8632 ;;		_setLights_Trigger
  8633 ;; This function is called by:
  8634 ;;		_Exception_Main
  8635 ;;		_PIR_Main
  8636 ;; This function uses a non-reentrant model
  8637 ;;
  8638                           
  8639                           
  8640                           ;psect for function _setLights_SwOff
  8641  0C28                     _setLights_SwOff:	
  8642                           
  8643                           ;incstack = 0
  8644                           ; Regs used in _setLights_SwOff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8645                           ;setLights_SwOff@sw stored from wreg
  8646  0C28  1283               	bcf	3,5	;RP0=0, select bank0
  8647  0C29  1303               	bcf	3,6	;RP1=0, select bank0
  8648  0C2A  00D0               	movwf	setLights_SwOff@sw
  8649                           
  8650                           ;TriacRelay_B1.c: 440: LightsPointSelect(sw);
  8651  0C2B  0850               	movf	setLights_SwOff@sw,w
  8652  0C2C  158A  2318  158A   	fcall	_LightsPointSelect
  8653                           
  8654                           ;TriacRelay_B1.c: 442: if (Lights->SwFlag == 1) {
  8655  0C2F  0A78               	incf	_Lights,w
  8656  0C30  0084               	movwf	4
  8657  0C31  1383               	bcf	3,7	;select IRP bank0
  8658  0C32  1D00               	btfss	0,2
  8659  0C33  0008               	return
  8660                           
  8661                           ;TriacRelay_B1.c: 443: Lights->SwFlag = 0;
  8662  0C34  0A78               	incf	_Lights,w
  8663  0C35  0084               	movwf	4
  8664  0C36  1100               	bcf	0,2
  8665                           
  8666                           ;TriacRelay_B1.c: 444: if (Lights->SwStatus == 0) {
  8667  0C37  0A78               	incf	_Lights,w
  8668  0C38  0084               	movwf	4
  8669  0C39  1980               	btfsc	0,3
  8670  0C3A  0008               	return
  8671                           
  8672                           ;TriacRelay_B1.c: 445: setLights_Trigger(sw, 0);
  8673  0C3B  1283               	bcf	3,5	;RP0=0, select bank0
  8674  0C3C  1303               	bcf	3,6	;RP1=0, select bank0
  8675  0C3D  01CD               	clrf	setLights_Trigger@command
  8676  0C3E  0850               	movf	setLights_SwOff@sw,w
  8677  0C3F  158A  2476         	fcall	_setLights_Trigger
  8678  0C41  0008               	return
  8679  0C42                     __end_of_setLights_SwOff:	
  8680                           
  8681                           	psect	text55
  8682  0C76                     __ptext55:	
  8683 ;; *************** function _setLights_Trigger *****************
  8684 ;; Defined at:
  8685 ;;		line 278 in file "../src/TriacRelay_B1.c"
  8686 ;; Parameters:    Size  Location     Type
  8687 ;;  lights          1    wreg     unsigned char 
  8688 ;;  command         1    0[BANK0 ] unsigned char 
  8689 ;; Auto vars:     Size  Location     Type
  8690 ;;  lights          1    2[BANK0 ] unsigned char 
  8691 ;; Return value:  Size  Location     Type
  8692 ;;		None               void
  8693 ;; Registers used:
  8694 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8695 ;; Tracked objects:
  8696 ;;		On entry : 0/0
  8697 ;;		On exit  : 0/0
  8698 ;;		Unchanged: 0/0
  8699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8700 ;;      Params:         0       1       0       0
  8701 ;;      Locals:         0       1       0       0
  8702 ;;      Temps:          0       1       0       0
  8703 ;;      Totals:         0       3       0       0
  8704 ;;Total ram usage:        3 bytes
  8705 ;; Hardware stack levels used:    1
  8706 ;; Hardware stack levels required when called:    3
  8707 ;; This function calls:
  8708 ;;		_LightsPointSelect
  8709 ;; This function is called by:
  8710 ;;		_setLights_SwOn
  8711 ;;		_setLights_SwOff
  8712 ;;		_setLights_ErrorClose
  8713 ;; This function uses a non-reentrant model
  8714 ;;
  8715                           
  8716                           
  8717                           ;psect for function _setLights_Trigger
  8718  0C76                     _setLights_Trigger:	
  8719                           
  8720                           ;incstack = 0
  8721                           ; Regs used in _setLights_Trigger: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8722                           ;setLights_Trigger@lights stored from wreg
  8723  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  8724  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  8725  0C78  00CF               	movwf	setLights_Trigger@lights
  8726                           
  8727                           ;TriacRelay_B1.c: 279: LightsPointSelect(lights);
  8728  0C79  084F               	movf	setLights_Trigger@lights,w
  8729  0C7A  158A  2318         	fcall	_LightsPointSelect
  8730                           
  8731                           ;TriacRelay_B1.c: 280: Lights->Trigger = 1;
  8732  0C7C  0878               	movf	_Lights,w
  8733  0C7D  0084               	movwf	4
  8734  0C7E  1383               	bcf	3,7	;select IRP bank0
  8735  0C7F  1580               	bsf	0,3
  8736                           
  8737                           ;TriacRelay_B1.c: 281: Lights->Switch = command == 1 ? 1 : 0;
  8738  0C80  1283               	bcf	3,5	;RP0=0, select bank0
  8739  0C81  1303               	bcf	3,6	;RP1=0, select bank0
  8740  0C82  084D               	movf	setLights_Trigger@command,w
  8741  0C83  3A01               	xorlw	1
  8742  0C84  3000               	movlw	0
  8743  0C85  1903               	skipnz
  8744  0C86  3001               	movlw	1
  8745  0C87  00CE               	movwf	??_setLights_Trigger
  8746  0C88  0878               	movf	_Lights,w
  8747  0C89  0084               	movwf	4
  8748  0C8A  0ECE               	swapf	??_setLights_Trigger,f
  8749  0C8B  0800               	movf	0,w
  8750  0C8C  064E               	xorwf	??_setLights_Trigger,w
  8751  0C8D  39EF               	andlw	-17
  8752  0C8E  064E               	xorwf	??_setLights_Trigger,w
  8753  0C8F  0080               	movwf	0
  8754  0C90  0008               	return
  8755  0C91                     __end_of_setLights_Trigger:	
  8756                           
  8757                           	psect	text56
  8758  0B18                     __ptext56:	
  8759 ;; *************** function _LightsPointSelect *****************
  8760 ;; Defined at:
  8761 ;;		line 10 in file "../src/TriacRelay_B1.c"
  8762 ;; Parameters:    Size  Location     Type
  8763 ;;  lights          1    wreg     unsigned char 
  8764 ;; Auto vars:     Size  Location     Type
  8765 ;;  lights          1    5[COMMON] unsigned char 
  8766 ;; Return value:  Size  Location     Type
  8767 ;;		None               void
  8768 ;; Registers used:
  8769 ;;		wreg
  8770 ;; Tracked objects:
  8771 ;;		On entry : 0/0
  8772 ;;		On exit  : 0/0
  8773 ;;		Unchanged: 0/0
  8774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8775 ;;      Params:         0       0       0       0
  8776 ;;      Locals:         1       0       0       0
  8777 ;;      Temps:          1       0       0       0
  8778 ;;      Totals:         2       0       0       0
  8779 ;;Total ram usage:        2 bytes
  8780 ;; Hardware stack levels used:    1
  8781 ;; Hardware stack levels required when called:    2
  8782 ;; This function calls:
  8783 ;;		Nothing
  8784 ;; This function is called by:
  8785 ;;		_setLights_Initialization
  8786 ;;		_setLights_Main
  8787 ;;		_Lights_Control
  8788 ;;		_getLights_Status
  8789 ;;		_setLights_Trigger
  8790 ;;		_setLights_SwOn
  8791 ;;		_setLights_SwOff
  8792 ;; This function uses a non-reentrant model
  8793 ;;
  8794                           
  8795                           
  8796                           ;psect for function _LightsPointSelect
  8797  0B18                     _LightsPointSelect:	
  8798                           
  8799                           ;incstack = 0
  8800                           ; Regs used in _LightsPointSelect: [wreg]
  8801                           ;LightsPointSelect@lights stored from wreg
  8802  0B18  00F5               	movwf	LightsPointSelect@lights
  8803                           
  8804                           ;TriacRelay_B1.c: 13: if (lights == 1) {
  8805  0B19  0875               	movf	LightsPointSelect@lights,w
  8806  0B1A  3A01               	xorlw	1
  8807  0B1B  1D03               	skipz
  8808  0B1C  0008               	return
  8809                           
  8810                           ;TriacRelay_B1.c: 14: Lights = &Lights1;
  8811  0B1D  3040               	movlw	_Lights1& (0+255)
  8812  0B1E  00F4               	movwf	??_LightsPointSelect
  8813  0B1F  0874               	movf	??_LightsPointSelect,w
  8814  0B20  00F8               	movwf	_Lights
  8815  0B21  0008               	return
  8816  0B22                     __end_of_LightsPointSelect:	
  8817                           
  8818                           	psect	text57
  8819  0F35                     __ptext57:	
  8820 ;; *************** function _setLED *****************
  8821 ;; Defined at:
  8822 ;;		line 81 in file "../src/LED_B1.c"
  8823 ;; Parameters:    Size  Location     Type
  8824 ;;  led             1    wreg     unsigned char 
  8825 ;;  command         1    0[BANK0 ] unsigned char 
  8826 ;; Auto vars:     Size  Location     Type
  8827 ;;  led             1    1[BANK0 ] unsigned char 
  8828 ;; Return value:  Size  Location     Type
  8829 ;;		None               void
  8830 ;; Registers used:
  8831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8832 ;; Tracked objects:
  8833 ;;		On entry : 0/0
  8834 ;;		On exit  : 0/0
  8835 ;;		Unchanged: 0/0
  8836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8837 ;;      Params:         0       1       0       0
  8838 ;;      Locals:         0       1       0       0
  8839 ;;      Temps:          0       0       0       0
  8840 ;;      Totals:         0       2       0       0
  8841 ;;Total ram usage:        2 bytes
  8842 ;; Hardware stack levels used:    1
  8843 ;; Hardware stack levels required when called:    3
  8844 ;; This function calls:
  8845 ;;		_LedPointSelect
  8846 ;; This function is called by:
  8847 ;;		_setLED_Initialization
  8848 ;;		_setPIRLED_Main
  8849 ;;		_Exception_Main
  8850 ;;		_PIR_Main
  8851 ;;		_setLights
  8852 ;; This function uses a non-reentrant model
  8853 ;;
  8854                           
  8855                           
  8856                           ;psect for function _setLED
  8857  0F35                     _setLED:	
  8858                           
  8859                           ;incstack = 0
  8860                           ; Regs used in _setLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8861                           ;setLED@led stored from wreg
  8862  0F35  1283               	bcf	3,5	;RP0=0, select bank0
  8863  0F36  1303               	bcf	3,6	;RP1=0, select bank0
  8864  0F37  00CE               	movwf	setLED@led
  8865                           
  8866                           ;LED_B1.c: 82: LedPointSelect(led);
  8867  0F38  084E               	movf	setLED@led,w
  8868  0F39  158A  2395  158A   	fcall	_LedPointSelect
  8869                           
  8870                           ;LED_B1.c: 83: if (command == 0) {
  8871  0F3C  1283               	bcf	3,5	;RP0=0, select bank0
  8872  0F3D  1303               	bcf	3,6	;RP1=0, select bank0
  8873  0F3E  08CD               	movf	setLED@command,f
  8874  0F3F  1D03               	skipz
  8875  0F40  2F4A               	goto	l4403
  8876                           
  8877                           ;LED_B1.c: 85: if (led == 1) {
  8878  0F41  084E               	movf	setLED@led,w
  8879  0F42  3A01               	xorlw	1
  8880  0F43  1D03               	skipz
  8881  0F44  2F46               	goto	l4399
  8882                           
  8883                           ;LED_B1.c: 89: RA6 = 1;
  8884  0F45  1705               	bsf	5,6	;volatile
  8885  0F46                     l4399:	
  8886                           
  8887                           ;LED_B1.c: 91: }
  8888                           ;LED_B1.c: 94: if (led == 2) {
  8889  0F46  084E               	movf	setLED@led,w
  8890  0F47  3A02               	xorlw	2
  8891  0F48  1903               	btfsc	3,2
  8892                           
  8893                           ;LED_B1.c: 98: RA7 = 1;
  8894  0F49  1785               	bsf	5,7	;volatile
  8895  0F4A                     l4403:	
  8896                           
  8897                           ;LED_B1.c: 100: }
  8898                           ;LED_B1.c: 120: }
  8899                           ;LED_B1.c: 121: if (command == 1) {
  8900  0F4A  084D               	movf	setLED@command,w
  8901  0F4B  3A01               	xorlw	1
  8902  0F4C  1D03               	skipz
  8903  0F4D  2F57               	goto	l4413
  8904                           
  8905                           ;LED_B1.c: 123: if (led == 1) {
  8906  0F4E  084E               	movf	setLED@led,w
  8907  0F4F  3A01               	xorlw	1
  8908  0F50  1D03               	skipz
  8909  0F51  2F53               	goto	l4409
  8910                           
  8911                           ;LED_B1.c: 127: RA6 = 0;
  8912  0F52  1305               	bcf	5,6	;volatile
  8913  0F53                     l4409:	
  8914                           
  8915                           ;LED_B1.c: 129: }
  8916                           ;LED_B1.c: 132: if (led == 2) {
  8917  0F53  084E               	movf	setLED@led,w
  8918  0F54  3A02               	xorlw	2
  8919  0F55  1903               	btfsc	3,2
  8920                           
  8921                           ;LED_B1.c: 136: RA7 = 0;
  8922  0F56  1385               	bcf	5,7	;volatile
  8923  0F57                     l4413:	
  8924                           
  8925                           ;LED_B1.c: 138: }
  8926                           ;LED_B1.c: 158: }
  8927                           ;LED_B1.c: 159: if (command == 10) {
  8928  0F57  084D               	movf	setLED@command,w
  8929  0F58  3A0A               	xorlw	10
  8930  0F59  1D03               	skipz
  8931  0F5A  2F6E               	goto	l4427
  8932                           
  8933                           ;LED_B1.c: 160: LED->GO = 0;
  8934  0F5B  0876               	movf	_LED,w
  8935  0F5C  0084               	movwf	4
  8936  0F5D  1383               	bcf	3,7	;select IRP bank0
  8937  0F5E  1080               	bcf	0,1
  8938                           
  8939                           ;LED_B1.c: 161: LED->Time = 0;
  8940  0F5F  0A76               	incf	_LED,w
  8941  0F60  0084               	movwf	4
  8942  0F61  0180               	clrf	0
  8943  0F62  0A84               	incf	4,f
  8944  0F63  0180               	clrf	0
  8945                           
  8946                           ;LED_B1.c: 163: if (led == 1) {
  8947  0F64  084E               	movf	setLED@led,w
  8948  0F65  3A01               	xorlw	1
  8949  0F66  1D03               	skipz
  8950  0F67  2F6A               	goto	l4423
  8951                           
  8952                           ;LED_B1.c: 167: RA6 = 1;
  8953  0F68  1705               	bsf	5,6	;volatile
  8954                           
  8955                           ;LED_B1.c: 169: }
  8956  0F69  2F6E               	goto	l4427
  8957  0F6A                     l4423:	
  8958                           
  8959                           ;LED_B1.c: 172: else if (led == 2) {
  8960  0F6A  084E               	movf	setLED@led,w
  8961  0F6B  3A02               	xorlw	2
  8962  0F6C  1903               	btfsc	3,2
  8963                           
  8964                           ;LED_B1.c: 176: RA7 = 1;
  8965  0F6D  1785               	bsf	5,7	;volatile
  8966  0F6E                     l4427:	
  8967                           
  8968                           ;LED_B1.c: 178: }
  8969                           ;LED_B1.c: 198: }
  8970                           ;LED_B1.c: 199: if (command == 11) {
  8971  0F6E  084D               	movf	setLED@command,w
  8972  0F6F  3A0B               	xorlw	11
  8973  0F70  1D03               	skipz
  8974  0F71  2F76               	goto	l4431
  8975                           
  8976                           ;LED_B1.c: 200: LED->GO = 1;
  8977  0F72  0876               	movf	_LED,w
  8978  0F73  0084               	movwf	4
  8979  0F74  1383               	bcf	3,7	;select IRP bank0
  8980  0F75  1480               	bsf	0,1
  8981  0F76                     l4431:	
  8982                           
  8983                           ;LED_B1.c: 201: }
  8984                           ;LED_B1.c: 205: if (command == 111) {
  8985  0F76  084D               	movf	setLED@command,w
  8986  0F77  3A6F               	xorlw	111
  8987  0F78  1D03               	skipz
  8988  0F79  2F94               	goto	l4457
  8989                           
  8990                           ;LED_B1.c: 206: PIRLED.Count = 0;
  8991  0F7A  01AB               	clrf	_PIRLED+1
  8992                           
  8993                           ;LED_B1.c: 207: PIRLED.Time = 0;
  8994  0F7B  01AC               	clrf	_PIRLED+2
  8995  0F7C  01AD               	clrf	_PIRLED+3
  8996                           
  8997                           ;LED_B1.c: 208: PIRLED.status = 0;
  8998  0F7D  122A               	bcf	_PIRLED,4
  8999                           
  9000                           ;LED_B1.c: 209: PIRLED.GO = 1;
  9001  0F7E  142A               	bsf	_PIRLED,0
  9002                           
  9003                           ;LED_B1.c: 210: PIRLED.GO1 = 0;
  9004  0F7F  10AA               	bcf	_PIRLED,1
  9005                           
  9006                           ;LED_B1.c: 211: PIRLED.GO2 = 0;
  9007  0F80  112A               	bcf	_PIRLED,2
  9008                           
  9009                           ;LED_B1.c: 212: PIRLED.GO3 = 0;
  9010  0F81  11AA               	bcf	_PIRLED,3
  9011                           
  9012                           ;LED_B1.c: 213: if (led == 1) {
  9013  0F82  084E               	movf	setLED@led,w
  9014  0F83  3A01               	xorlw	1
  9015  0F84  1D03               	skipz
  9016  0F85  2F88               	goto	l4449
  9017                           
  9018                           ;LED_B1.c: 214: PIRLED.GO1 = 1;
  9019  0F86  14AA               	bsf	_PIRLED,1
  9020                           
  9021                           ;LED_B1.c: 215: } else if (led == 2) {
  9022  0F87  0008               	return
  9023  0F88                     l4449:	
  9024  0F88  084E               	movf	setLED@led,w
  9025  0F89  3A02               	xorlw	2
  9026  0F8A  1D03               	skipz
  9027  0F8B  2F8E               	goto	l4453
  9028                           
  9029                           ;LED_B1.c: 216: PIRLED.GO2 = 1;
  9030  0F8C  152A               	bsf	_PIRLED,2
  9031                           
  9032                           ;LED_B1.c: 217: } else if (led == 3) {
  9033  0F8D  0008               	return
  9034  0F8E                     l4453:	
  9035  0F8E  084E               	movf	setLED@led,w
  9036  0F8F  3A03               	xorlw	3
  9037  0F90  1D03               	skipz
  9038  0F91  0008               	return
  9039                           
  9040                           ;LED_B1.c: 218: PIRLED.GO3 = 1;
  9041  0F92  15AA               	bsf	_PIRLED,3
  9042                           
  9043                           ;LED_B1.c: 219: }
  9044                           ;LED_B1.c: 220: } else if (command == 110) {
  9045  0F93  0008               	return
  9046  0F94                     l4457:	
  9047  0F94  084D               	movf	setLED@command,w
  9048  0F95  3A6E               	xorlw	110
  9049  0F96  1D03               	skipz
  9050  0F97  0008               	return
  9051                           
  9052                           ;LED_B1.c: 221: PIRLED.GO = 0;
  9053  0F98  102A               	bcf	_PIRLED,0
  9054  0F99  0008               	return
  9055  0F9A                     __end_of_setLED:	
  9056                           
  9057                           	psect	text58
  9058  0B95                     __ptext58:	
  9059 ;; *************** function _LedPointSelect *****************
  9060 ;; Defined at:
  9061 ;;		line 7 in file "../src/LED_B1.c"
  9062 ;; Parameters:    Size  Location     Type
  9063 ;;  led             1    wreg     unsigned char 
  9064 ;; Auto vars:     Size  Location     Type
  9065 ;;  led             1    5[COMMON] unsigned char 
  9066 ;; Return value:  Size  Location     Type
  9067 ;;		None               void
  9068 ;; Registers used:
  9069 ;;		wreg
  9070 ;; Tracked objects:
  9071 ;;		On entry : 0/0
  9072 ;;		On exit  : 0/0
  9073 ;;		Unchanged: 0/0
  9074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9075 ;;      Params:         0       0       0       0
  9076 ;;      Locals:         1       0       0       0
  9077 ;;      Temps:          1       0       0       0
  9078 ;;      Totals:         2       0       0       0
  9079 ;;Total ram usage:        2 bytes
  9080 ;; Hardware stack levels used:    1
  9081 ;; Hardware stack levels required when called:    2
  9082 ;; This function calls:
  9083 ;;		Nothing
  9084 ;; This function is called by:
  9085 ;;		_setLED_Initialization
  9086 ;;		_setLED
  9087 ;;		_setLED_Main
  9088 ;; This function uses a non-reentrant model
  9089 ;;
  9090                           
  9091                           
  9092                           ;psect for function _LedPointSelect
  9093  0B95                     _LedPointSelect:	
  9094                           
  9095                           ;incstack = 0
  9096                           ; Regs used in _LedPointSelect: [wreg]
  9097                           ;LedPointSelect@led stored from wreg
  9098  0B95  00F5               	movwf	LedPointSelect@led
  9099                           
  9100                           ;LED_B1.c: 9: if (led == 1) {
  9101  0B96  0875               	movf	LedPointSelect@led,w
  9102  0B97  3A01               	xorlw	1
  9103  0B98  1D03               	skipz
  9104  0B99  2B9E               	goto	l254
  9105                           
  9106                           ;LED_B1.c: 10: LED = &VarLED1;
  9107  0B9A  3045               	movlw	_VarLED1& (0+255)
  9108  0B9B  00F4               	movwf	??_LedPointSelect
  9109  0B9C  0874               	movf	??_LedPointSelect,w
  9110  0B9D  00F6               	movwf	_LED
  9111  0B9E                     l254:	
  9112                           
  9113                           ;LED_B1.c: 11: }
  9114                           ;LED_B1.c: 14: if (led == 2) {
  9115  0B9E  0875               	movf	LedPointSelect@led,w
  9116  0B9F  3A02               	xorlw	2
  9117  0BA0  1D03               	skipz
  9118  0BA1  0008               	return
  9119                           
  9120                           ;LED_B1.c: 15: LED = &VarLED2;
  9121  0BA2  3049               	movlw	_VarLED2& (0+255)
  9122  0BA3  00F4               	movwf	??_LedPointSelect
  9123  0BA4  0874               	movf	??_LedPointSelect,w
  9124  0BA5  00F6               	movwf	_LED
  9125  0BA6  0008               	return
  9126  0BA7                     __end_of_LedPointSelect:	
  9127                           
  9128                           	psect	text59
  9129  0B0F                     __ptext59:	
  9130 ;; *************** function _getMain_All_LightsStatus *****************
  9131 ;; Defined at:
  9132 ;;		line 373 in file "../src/Main_B1.c"
  9133 ;; Parameters:    Size  Location     Type
  9134 ;;		None
  9135 ;; Auto vars:     Size  Location     Type
  9136 ;;  status          1    4[COMMON] unsigned char 
  9137 ;; Return value:  Size  Location     Type
  9138 ;;                  1    wreg      unsigned char 
  9139 ;; Registers used:
  9140 ;;		wreg, status,2
  9141 ;; Tracked objects:
  9142 ;;		On entry : 0/0
  9143 ;;		On exit  : 0/0
  9144 ;;		Unchanged: 0/0
  9145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9146 ;;      Params:         0       0       0       0
  9147 ;;      Locals:         1       0       0       0
  9148 ;;      Temps:          0       0       0       0
  9149 ;;      Totals:         1       0       0       0
  9150 ;;Total ram usage:        1 bytes
  9151 ;; Hardware stack levels used:    1
  9152 ;; Hardware stack levels required when called:    2
  9153 ;; This function calls:
  9154 ;;		Nothing
  9155 ;; This function is called by:
  9156 ;;		_Exception_Main
  9157 ;;		_Load_Main
  9158 ;;		_setTemp_Main
  9159 ;;		_Lights_Main
  9160 ;; This function uses a non-reentrant model
  9161 ;;
  9162                           
  9163                           
  9164                           ;psect for function _getMain_All_LightsStatus
  9165  0B0F                     _getMain_All_LightsStatus:	
  9166                           
  9167                           ;Main_B1.c: 374: char status = 0;
  9168                           
  9169                           ;incstack = 0
  9170                           ; Regs used in _getMain_All_LightsStatus: [wreg+status,2]
  9171  0B0F  01F4               	clrf	getMain_All_LightsStatus@status
  9172                           
  9173                           ;Main_B1.c: 378: status = Lights1.Status == 1 ? 1 : 0;
  9174  0B10  3000               	movlw	0
  9175  0B11  1283               	bcf	3,5	;RP0=0, select bank0
  9176  0B12  1303               	bcf	3,6	;RP1=0, select bank0
  9177  0B13  1940               	btfsc	_Lights1,2
  9178  0B14  3001               	movlw	1
  9179  0B15  00F4               	movwf	getMain_All_LightsStatus@status
  9180                           
  9181                           ;Main_B1.c: 420: return status;
  9182  0B16  0874               	movf	getMain_All_LightsStatus@status,w
  9183  0B17  0008               	return
  9184  0B18                     __end_of_getMain_All_LightsStatus:	
  9185                           
  9186                           	psect	text60
  9187  0DBA                     __ptext60:	
  9188 ;; *************** function _getMain_All_Error_Status *****************
  9189 ;; Defined at:
  9190 ;;		line 424 in file "../src/Main_B1.c"
  9191 ;; Parameters:    Size  Location     Type
  9192 ;;  command         1    wreg     unsigned char 
  9193 ;; Auto vars:     Size  Location     Type
  9194 ;;  command         1    4[BANK0 ] unsigned char 
  9195 ;;  status          1    5[BANK0 ] unsigned char 
  9196 ;; Return value:  Size  Location     Type
  9197 ;;                  1    wreg      unsigned char 
  9198 ;; Registers used:
  9199 ;;		wreg, status,2, status,0
  9200 ;; Tracked objects:
  9201 ;;		On entry : 0/0
  9202 ;;		On exit  : 0/0
  9203 ;;		Unchanged: 0/0
  9204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9205 ;;      Params:         0       0       0       0
  9206 ;;      Locals:         0       6       0       0
  9207 ;;      Temps:          1       0       0       0
  9208 ;;      Totals:         1       6       0       0
  9209 ;;Total ram usage:        7 bytes
  9210 ;; Hardware stack levels used:    1
  9211 ;; Hardware stack levels required when called:    2
  9212 ;; This function calls:
  9213 ;;		Nothing
  9214 ;; This function is called by:
  9215 ;;		_Exception_Main
  9216 ;;		_Load_Main
  9217 ;;		_setTemp_Main
  9218 ;;		_PIR_Main
  9219 ;;		_setSYSC_Main
  9220 ;;		_Lights_Main
  9221 ;; This function uses a non-reentrant model
  9222 ;;
  9223                           
  9224                           
  9225                           ;psect for function _getMain_All_Error_Status
  9226  0DBA                     _getMain_All_Error_Status:	
  9227                           
  9228                           ;incstack = 0
  9229                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2+status,0]
  9230                           ;getMain_All_Error_Status@command stored from wreg
  9231  0DBA  1283               	bcf	3,5	;RP0=0, select bank0
  9232  0DBB  1303               	bcf	3,6	;RP1=0, select bank0
  9233  0DBC  00D1               	movwf	getMain_All_Error_Status@command
  9234                           
  9235                           ;Main_B1.c: 425: char status = 0;
  9236  0DBD  01D2               	clrf	getMain_All_Error_Status@status
  9237                           
  9238                           ;Main_B1.c: 428: if (status == 0 && command != 1) {
  9239  0DBE  08D2               	movf	getMain_All_Error_Status@status,f
  9240  0DBF  1D03               	skipz
  9241  0DC0  2DC9               	goto	l3197
  9242  0DC1  0851               	movf	getMain_All_Error_Status@command,w
  9243  0DC2  3A01               	xorlw	1
  9244  0DC3  1903               	skipnz
  9245  0DC4  2DC9               	goto	l3197
  9246                           
  9247                           ;Main_B1.c: 429: status = SYSC.ERROR == 1 ? 1 : 0;
  9248  0DC5  3000               	movlw	0
  9249  0DC6  18A0               	btfsc	_SYSC,1
  9250  0DC7  3001               	movlw	1
  9251  0DC8  00D2               	movwf	getMain_All_Error_Status@status
  9252  0DC9                     l3197:	
  9253                           
  9254                           ;Main_B1.c: 430: }
  9255                           ;Main_B1.c: 436: if (status == 0 && command != 2) {
  9256  0DC9  08D2               	movf	getMain_All_Error_Status@status,f
  9257  0DCA  1D03               	skipz
  9258  0DCB  2DDD               	goto	l3207
  9259  0DCC  0851               	movf	getMain_All_Error_Status@command,w
  9260  0DCD  3A02               	xorlw	2
  9261  0DCE  1903               	skipnz
  9262  0DCF  2DDD               	goto	l3207
  9263                           
  9264                           ;Main_B1.c: 437: status = Temp.ERROR == 1 ? 2 : 0;
  9265  0DD0  18B9               	btfsc	_Temp,1
  9266  0DD1  2DD5               	goto	l3205
  9267  0DD2  01CD               	clrf	_getMain_All_Error_Status$2127
  9268  0DD3  01CE               	clrf	_getMain_All_Error_Status$2127+1
  9269  0DD4  2DD9               	goto	l590
  9270  0DD5                     l3205:	
  9271  0DD5  3002               	movlw	2
  9272  0DD6  00CD               	movwf	_getMain_All_Error_Status$2127
  9273  0DD7  3000               	movlw	0
  9274  0DD8  00CE               	movwf	_getMain_All_Error_Status$2127+1
  9275  0DD9                     l590:	
  9276  0DD9  084D               	movf	_getMain_All_Error_Status$2127,w
  9277  0DDA  00F4               	movwf	??_getMain_All_Error_Status
  9278  0DDB  0874               	movf	??_getMain_All_Error_Status,w
  9279  0DDC  00D2               	movwf	getMain_All_Error_Status@status
  9280  0DDD                     l3207:	
  9281                           
  9282                           ;Main_B1.c: 438: }
  9283                           ;Main_B1.c: 443: if (status == 0 && command != 3) {
  9284  0DDD  08D2               	movf	getMain_All_Error_Status@status,f
  9285  0DDE  1D03               	skipz
  9286  0DDF  2DF6               	goto	l591
  9287  0DE0  0851               	movf	getMain_All_Error_Status@command,w
  9288  0DE1  3A03               	xorlw	3
  9289  0DE2  1903               	skipnz
  9290  0DE3  2DF6               	goto	l591
  9291                           
  9292                           ;Main_B1.c: 444: status = Load.ERROR == 1 ? 3 : 0;
  9293  0DE4  1683               	bsf	3,5	;RP0=1, select bank1
  9294  0DE5  1303               	bcf	3,6	;RP1=0, select bank1
  9295  0DE6  1ACA               	btfsc	_Load^(0+128),5
  9296  0DE7  2DED               	goto	l3215
  9297  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  9298  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  9299  0DEA  01CF               	clrf	_getMain_All_Error_Status$2128
  9300  0DEB  01D0               	clrf	_getMain_All_Error_Status$2128+1
  9301  0DEC  2DF2               	goto	l595
  9302  0DED                     l3215:	
  9303  0DED  3003               	movlw	3
  9304  0DEE  1283               	bcf	3,5	;RP0=0, select bank0
  9305  0DEF  00CF               	movwf	_getMain_All_Error_Status$2128
  9306  0DF0  3000               	movlw	0
  9307  0DF1  00D0               	movwf	_getMain_All_Error_Status$2128+1
  9308  0DF2                     l595:	
  9309  0DF2  084F               	movf	_getMain_All_Error_Status$2128,w
  9310  0DF3  00F4               	movwf	??_getMain_All_Error_Status
  9311  0DF4  0874               	movf	??_getMain_All_Error_Status,w
  9312  0DF5  00D2               	movwf	getMain_All_Error_Status@status
  9313  0DF6                     l591:	
  9314                           
  9315                           ;Main_B1.c: 445: }
  9316                           ;Main_B1.c: 455: return status;
  9317  0DF6  0852               	movf	getMain_All_Error_Status@status,w
  9318  0DF7  0008               	return
  9319  0DF8                     __end_of_getMain_All_Error_Status:	
  9320                           
  9321                           	psect	text61
  9322  0B06                     __ptext61:	
  9323 ;; *************** function _getAll_Lights_Line *****************
  9324 ;; Defined at:
  9325 ;;		line 310 in file "../src/TriacRelay_B1.c"
  9326 ;; Parameters:    Size  Location     Type
  9327 ;;		None
  9328 ;; Auto vars:     Size  Location     Type
  9329 ;;  line            1    4[COMMON] unsigned char 
  9330 ;; Return value:  Size  Location     Type
  9331 ;;                  1    wreg      unsigned char 
  9332 ;; Registers used:
  9333 ;;		wreg, status,2
  9334 ;; Tracked objects:
  9335 ;;		On entry : 0/0
  9336 ;;		On exit  : 0/0
  9337 ;;		Unchanged: 0/0
  9338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9339 ;;      Params:         0       0       0       0
  9340 ;;      Locals:         1       0       0       0
  9341 ;;      Temps:          0       0       0       0
  9342 ;;      Totals:         1       0       0       0
  9343 ;;Total ram usage:        1 bytes
  9344 ;; Hardware stack levels used:    1
  9345 ;; Hardware stack levels required when called:    2
  9346 ;; This function calls:
  9347 ;;		Nothing
  9348 ;; This function is called by:
  9349 ;;		_Exception_Main
  9350 ;; This function uses a non-reentrant model
  9351 ;;
  9352                           
  9353                           
  9354                           ;psect for function _getAll_Lights_Line
  9355  0B06                     _getAll_Lights_Line:	
  9356                           
  9357                           ;TriacRelay_B1.c: 311: char line = 0;
  9358                           
  9359                           ;incstack = 0
  9360                           ; Regs used in _getAll_Lights_Line: [wreg+status,2]
  9361  0B06  01F4               	clrf	getAll_Lights_Line@line
  9362                           
  9363                           ;TriacRelay_B1.c: 313: if (Lights1.Line == 1) {
  9364  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  9365  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  9366  0B09  1C41               	btfss	_Lights1+1,0
  9367  0B0A  2B0D               	goto	l3461
  9368                           
  9369                           ;TriacRelay_B1.c: 314: line = 1;
  9370  0B0B  01F4               	clrf	getAll_Lights_Line@line
  9371  0B0C  0AF4               	incf	getAll_Lights_Line@line,f
  9372  0B0D                     l3461:	
  9373                           
  9374                           ;TriacRelay_B1.c: 315: }
  9375                           ;TriacRelay_B1.c: 327: return line;
  9376  0B0D  0874               	movf	getAll_Lights_Line@line,w
  9377  0B0E  0008               	return
  9378  0B0F                     __end_of_getAll_Lights_Line:	
  9379                           
  9380                           	psect	text62
  9381  0B2C                     __ptext62:	
  9382 ;; *************** function _DetectSYSC_Signal *****************
  9383 ;; Defined at:
  9384 ;;		line 50 in file "../src/SYSC_B1.c"
  9385 ;; Parameters:    Size  Location     Type
  9386 ;;		None
  9387 ;; Auto vars:     Size  Location     Type
  9388 ;;		None
  9389 ;; Return value:  Size  Location     Type
  9390 ;;		None               void
  9391 ;; Registers used:
  9392 ;;		status,2
  9393 ;; Tracked objects:
  9394 ;;		On entry : 0/0
  9395 ;;		On exit  : 0/0
  9396 ;;		Unchanged: 0/0
  9397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9398 ;;      Params:         0       0       0       0
  9399 ;;      Locals:         0       0       0       0
  9400 ;;      Temps:          0       0       0       0
  9401 ;;      Totals:         0       0       0       0
  9402 ;;Total ram usage:        0 bytes
  9403 ;; Hardware stack levels used:    1
  9404 ;; Hardware stack levels required when called:    2
  9405 ;; This function calls:
  9406 ;;		Nothing
  9407 ;; This function is called by:
  9408 ;;		_main
  9409 ;; This function uses a non-reentrant model
  9410 ;;
  9411                           
  9412                           
  9413                           ;psect for function _DetectSYSC_Signal
  9414  0B2C                     _DetectSYSC_Signal:	
  9415                           
  9416                           ;SYSC_B1.c: 51: if (SYSC.Signal == 0) {
  9417                           
  9418                           ;incstack = 0
  9419                           ; Regs used in _DetectSYSC_Signal: [status,2]
  9420  0B2C  1283               	bcf	3,5	;RP0=0, select bank0
  9421  0B2D  1303               	bcf	3,6	;RP1=0, select bank0
  9422  0B2E  19A0               	btfsc	_SYSC,3
  9423  0B2F  2B36               	goto	l1111
  9424                           
  9425                           ;SYSC_B1.c: 52: if (RA5 == 1) {
  9426  0B30  1E85               	btfss	5,5	;volatile
  9427  0B31  0008               	return
  9428                           
  9429                           ;SYSC_B1.c: 53: SYSC.Signal = 1;
  9430  0B32  15A0               	bsf	_SYSC,3
  9431                           
  9432                           ;SYSC_B1.c: 54: SYSC.Time = 0;
  9433  0B33  01A1               	clrf	_SYSC+1
  9434  0B34  01A2               	clrf	_SYSC+2
  9435                           
  9436                           ;SYSC_B1.c: 55: }
  9437                           ;SYSC_B1.c: 56: } else {
  9438  0B35  0008               	return
  9439  0B36                     l1111:	
  9440                           
  9441                           ;SYSC_B1.c: 57: if (RA5 == 0) {
  9442  0B36  1A85               	btfsc	5,5	;volatile
  9443  0B37  0008               	return
  9444                           
  9445                           ;SYSC_B1.c: 58: SYSC.Signal = 0;
  9446  0B38  11A0               	bcf	_SYSC,3
  9447  0B39  0008               	return
  9448  0B3A                     __end_of_DetectSYSC_Signal:	
  9449                           
  9450                           	psect	text63
  9451  0D86                     __ptext63:	
  9452 ;; *************** function _CDS_Main *****************
  9453 ;; Defined at:
  9454 ;;		line 11 in file "../src/CDS_B1.c"
  9455 ;; Parameters:    Size  Location     Type
  9456 ;;		None
  9457 ;; Auto vars:     Size  Location     Type
  9458 ;;		None
  9459 ;; Return value:  Size  Location     Type
  9460 ;;		None               void
  9461 ;; Registers used:
  9462 ;;		wreg, status,2, status,0
  9463 ;; Tracked objects:
  9464 ;;		On entry : 0/0
  9465 ;;		On exit  : 0/0
  9466 ;;		Unchanged: 0/0
  9467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9468 ;;      Params:         0       0       0       0
  9469 ;;      Locals:         0       0       0       0
  9470 ;;      Temps:          0       3       0       0
  9471 ;;      Totals:         0       3       0       0
  9472 ;;Total ram usage:        3 bytes
  9473 ;; Hardware stack levels used:    1
  9474 ;; Hardware stack levels required when called:    2
  9475 ;; This function calls:
  9476 ;;		Nothing
  9477 ;; This function is called by:
  9478 ;;		_main
  9479 ;; This function uses a non-reentrant model
  9480 ;;
  9481                           
  9482                           
  9483                           ;psect for function _CDS_Main
  9484  0D86                     _CDS_Main:	
  9485                           
  9486                           ;CDS_B1.c: 13: if (_CDS.Enable == 1) {
  9487                           
  9488                           ;incstack = 0
  9489                           ; Regs used in _CDS_Main: [wreg+status,2+status,0]
  9490  0D86  1283               	bcf	3,5	;RP0=0, select bank0
  9491  0D87  1303               	bcf	3,6	;RP1=0, select bank0
  9492  0D88  1C2E               	btfss	__CDS,0
  9493  0D89  0008               	return
  9494                           
  9495                           ;CDS_B1.c: 14: if (_CDS.GO == 0) {
  9496  0D8A  18AE               	btfsc	__CDS,1
  9497  0D8B  2D99               	goto	l117
  9498                           
  9499                           ;CDS_B1.c: 15: if (_CDS.ADtoGO == 0) {
  9500  0D8C  19AE               	btfsc	__CDS,3
  9501  0D8D  0008               	return
  9502                           
  9503                           ;CDS_B1.c: 16: _CDS.Time++;
  9504  0D8E  3001               	movlw	1
  9505  0D8F  00CD               	movwf	??_CDS_Main
  9506  0D90  084D               	movf	??_CDS_Main,w
  9507  0D91  07AF               	addwf	__CDS+1,f
  9508                           
  9509                           ;CDS_B1.c: 17: if (_CDS.Time >= (100 / 20))
  9510  0D92  3005               	movlw	5
  9511  0D93  022F               	subwf	__CDS+1,w
  9512  0D94  1C03               	skipc
  9513  0D95  0008               	return
  9514                           
  9515                           ;CDS_B1.c: 18: {
  9516                           ;CDS_B1.c: 19: _CDS.Time = 0;
  9517  0D96  01AF               	clrf	__CDS+1
  9518                           
  9519                           ;CDS_B1.c: 20: _CDS.ADtoGO = 1;
  9520  0D97  15AE               	bsf	__CDS,3
  9521                           
  9522                           ;CDS_B1.c: 21: }
  9523                           ;CDS_B1.c: 22: }
  9524                           ;CDS_B1.c: 23: } else {
  9525  0D98  0008               	return
  9526  0D99                     l117:	
  9527                           
  9528                           ;CDS_B1.c: 24: if (_CDS.GO == 1) {
  9529  0D99  1CAE               	btfss	__CDS,1
  9530  0D9A  0008               	return
  9531                           
  9532                           ;CDS_B1.c: 25: _CDS.GO = 0;
  9533  0D9B  10AE               	bcf	__CDS,1
  9534                           
  9535                           ;CDS_B1.c: 26: if (_CDS.Status == 0) {
  9536  0D9C  1A2E               	btfsc	__CDS,4
  9537  0D9D  2DA4               	goto	l4785
  9538                           
  9539                           ;CDS_B1.c: 27: if (_CDS.SignalAD >= _CDS.VRAD) {
  9540  0D9E  0830               	movf	__CDS+2,w
  9541  0D9F  0231               	subwf	__CDS+3,w
  9542  0DA0  1C03               	skipc
  9543  0DA1  0008               	return
  9544                           
  9545                           ;CDS_B1.c: 28: _CDS.Status = 1;
  9546  0DA2  162E               	bsf	__CDS,4
  9547                           
  9548                           ;CDS_B1.c: 29: }
  9549                           ;CDS_B1.c: 30: } else {
  9550  0DA3  0008               	return
  9551  0DA4                     l4785:	
  9552                           
  9553                           ;CDS_B1.c: 31: if (_CDS.SignalAD <= (_CDS.VRAD - 100)) {
  9554  0DA4  0830               	movf	__CDS+2,w
  9555  0DA5  3E9C               	addlw	156
  9556  0DA6  00CD               	movwf	??_CDS_Main
  9557  0DA7  30FF               	movlw	255
  9558  0DA8  1803               	skipnc
  9559  0DA9  3000               	movlw	0
  9560  0DAA  00CE               	movwf	??_CDS_Main+1
  9561  0DAB  084E               	movf	??_CDS_Main+1,w
  9562  0DAC  3A80               	xorlw	128
  9563  0DAD  00CF               	movwf	??_CDS_Main+2
  9564  0DAE  3080               	movlw	128
  9565  0DAF  024F               	subwf	??_CDS_Main+2,w
  9566  0DB0  1D03               	skipz
  9567  0DB1  2DB4               	goto	u5805
  9568  0DB2  0831               	movf	__CDS+3,w
  9569  0DB3  024D               	subwf	??_CDS_Main,w
  9570  0DB4                     u5805:	
  9571  0DB4  1C03               	skipc
  9572  0DB5  0008               	return
  9573                           
  9574                           ;CDS_B1.c: 32: _CDS.Status = 0;
  9575  0DB6  1283               	bcf	3,5	;RP0=0, select bank0
  9576  0DB7  1303               	bcf	3,6	;RP1=0, select bank0
  9577  0DB8  122E               	bcf	__CDS,4
  9578  0DB9  0008               	return
  9579  0DBA                     __end_of_CDS_Main:	
  9580                           
  9581                           	psect	text64
  9582  0AB5                     __ptext64:	
  9583 ;; *************** function _CDS_Initialization *****************
  9584 ;; Defined at:
  9585 ;;		line 7 in file "../src/CDS_B1.c"
  9586 ;; Parameters:    Size  Location     Type
  9587 ;;		None
  9588 ;; Auto vars:     Size  Location     Type
  9589 ;;		None
  9590 ;; Return value:  Size  Location     Type
  9591 ;;		None               void
  9592 ;; Registers used:
  9593 ;;		None
  9594 ;; Tracked objects:
  9595 ;;		On entry : 0/0
  9596 ;;		On exit  : 0/0
  9597 ;;		Unchanged: 0/0
  9598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9599 ;;      Params:         0       0       0       0
  9600 ;;      Locals:         0       0       0       0
  9601 ;;      Temps:          0       0       0       0
  9602 ;;      Totals:         0       0       0       0
  9603 ;;Total ram usage:        0 bytes
  9604 ;; Hardware stack levels used:    1
  9605 ;; Hardware stack levels required when called:    2
  9606 ;; This function calls:
  9607 ;;		Nothing
  9608 ;; This function is called by:
  9609 ;;		_main
  9610 ;; This function uses a non-reentrant model
  9611 ;;
  9612                           
  9613                           
  9614                           ;psect for function _CDS_Initialization
  9615  0AB5                     _CDS_Initialization:	
  9616                           
  9617                           ;CDS_B1.c: 8: _CDS.Enable = 1;
  9618                           
  9619                           ;incstack = 0
  9620                           ; Regs used in _CDS_Initialization: []
  9621  0AB5  1283               	bcf	3,5	;RP0=0, select bank0
  9622  0AB6  1303               	bcf	3,6	;RP1=0, select bank0
  9623  0AB7  142E               	bsf	__CDS,0
  9624  0AB8  0008               	return
  9625  0AB9                     __end_of_CDS_Initialization:	
  9626                           
  9627                           	psect	text65
  9628  0C10                     __ptext65:	
  9629 ;; *************** function _ISR *****************
  9630 ;; Defined at:
  9631 ;;		line 116 in file "../src/MCU_B1.c"
  9632 ;; Parameters:    Size  Location     Type
  9633 ;;		None
  9634 ;; Auto vars:     Size  Location     Type
  9635 ;;		None
  9636 ;; Return value:  Size  Location     Type
  9637 ;;		None               void
  9638 ;; Registers used:
  9639 ;;		wreg, status,2, status,0, pclath, cstack
  9640 ;; Tracked objects:
  9641 ;;		On entry : 0/0
  9642 ;;		On exit  : 0/0
  9643 ;;		Unchanged: 0/0
  9644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9645 ;;      Params:         0       0       0       0
  9646 ;;      Locals:         0       0       0       0
  9647 ;;      Temps:          4       0       0       0
  9648 ;;      Totals:         4       0       0       0
  9649 ;;Total ram usage:        4 bytes
  9650 ;; Hardware stack levels used:    1
  9651 ;; Hardware stack levels required when called:    1
  9652 ;; This function calls:
  9653 ;;		_TMR1_ISR
  9654 ;; This function is called by:
  9655 ;;		Interrupt level 1
  9656 ;; This function uses a non-reentrant model
  9657 ;;
  9658                           
  9659                           
  9660                           ;psect for function _ISR
  9661  0C10                     _ISR:	
  9662                           
  9663                           ;MCU_B1.c: 125: if (TMR1IE == 1 && TMR1IF == 1) {
  9664  0C10  1683               	bsf	3,5	;RP0=1, select bank1
  9665  0C11  1303               	bcf	3,6	;RP1=0, select bank1
  9666  0C12  1C0C               	btfss	12,0	;volatile
  9667  0C13  2C1B               	goto	i1l426
  9668  0C14  1283               	bcf	3,5	;RP0=0, select bank0
  9669  0C15  1303               	bcf	3,6	;RP1=0, select bank0
  9670  0C16  1C0C               	btfss	12,0	;volatile
  9671  0C17  2C1B               	goto	i1l426
  9672                           
  9673                           ;MCU_B1.c: 126: TMR1_ISR();
  9674  0C18  158A  23CD  158A   	fcall	_TMR1_ISR
  9675  0C1B                     i1l426:	
  9676                           ;MCU_B1.c: 127: }
  9677                           ;MCU_B1.c: 148: return;
  9678                           
  9679  0C1B  0873               	movf	??_ISR+3,w
  9680  0C1C  1283               	bcf	3,5	;RP0=0, select bank0
  9681  0C1D  1303               	bcf	3,6	;RP1=0, select bank0
  9682  0C1E  00FF               	movwf	127
  9683  0C1F  0872               	movf	??_ISR+2,w
  9684  0C20  008A               	movwf	10
  9685  0C21  0871               	movf	??_ISR+1,w
  9686  0C22  0084               	movwf	4
  9687  0C23  0E70               	swapf	??_ISR^(0+-128),w
  9688  0C24  0083               	movwf	3
  9689  0C25  0EFE               	swapf	126,f
  9690  0C26  0E7E               	swapf	126,w
  9691  0C27  0009               	retfie
  9692  0C28                     __end_of_ISR:	
  9693                           
  9694                           	psect	intentry
  9695  0004                     __pintentry:	
  9696                           ;incstack = 0
  9697                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  9698                           
  9699  0004                     interrupt_function:	
  9700  007E                     saved_w	set	btemp
  9701  0004  00FE               	movwf	btemp
  9702  0005  0E03               	swapf	3,w
  9703  0006  00F0               	movwf	??_ISR
  9704  0007  0804               	movf	4,w
  9705  0008  00F1               	movwf	??_ISR+1
  9706  0009  080A               	movf	10,w
  9707  000A  00F2               	movwf	??_ISR+2
  9708  000B  1283               	bcf	3,5	;RP0=0, select bank0
  9709  000C  1303               	bcf	3,6	;RP1=0, select bank0
  9710  000D  087F               	movf	btemp+1,w
  9711  000E  00F3               	movwf	??_ISR+3
  9712  000F  158A  2C10         	ljmp	_ISR
  9713                           
  9714                           	psect	text66
  9715  0BCD                     __ptext66:	
  9716 ;; *************** function _TMR1_ISR *****************
  9717 ;; Defined at:
  9718 ;;		line 236 in file "../src/MCU_B1.c"
  9719 ;; Parameters:    Size  Location     Type
  9720 ;;		None
  9721 ;; Auto vars:     Size  Location     Type
  9722 ;;		None
  9723 ;; Return value:  Size  Location     Type
  9724 ;;		None               void
  9725 ;; Registers used:
  9726 ;;		wreg, status,2
  9727 ;; Tracked objects:
  9728 ;;		On entry : 0/0
  9729 ;;		On exit  : 0/0
  9730 ;;		Unchanged: 0/0
  9731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9732 ;;      Params:         0       0       0       0
  9733 ;;      Locals:         0       0       0       0
  9734 ;;      Temps:          0       0       0       0
  9735 ;;      Totals:         0       0       0       0
  9736 ;;Total ram usage:        0 bytes
  9737 ;; Hardware stack levels used:    1
  9738 ;; This function calls:
  9739 ;;		Nothing
  9740 ;; This function is called by:
  9741 ;;		_ISR
  9742 ;; This function uses a non-reentrant model
  9743 ;;
  9744                           
  9745                           
  9746                           ;psect for function _TMR1_ISR
  9747  0BCD                     _TMR1_ISR:	
  9748                           
  9749                           ;MCU_B1.c: 268: Timer1.Count++;
  9750                           
  9751                           ;incstack = 0
  9752                           ; Regs used in _TMR1_ISR: [wreg+status,2]
  9753  0BCD  3001               	movlw	1
  9754  0BCE  1283               	bcf	3,5	;RP0=0, select bank0
  9755  0BCF  1303               	bcf	3,6	;RP1=0, select bank0
  9756  0BD0  07B3               	addwf	_Timer1+1,f
  9757  0BD1  1803               	skipnc
  9758  0BD2  0AB4               	incf	_Timer1+2,f
  9759  0BD3  3000               	movlw	0
  9760  0BD4  07B4               	addwf	_Timer1+2,f
  9761                           
  9762                           ;MCU_B1.c: 269: if (Timer1.Count == (int)(20*10)) {
  9763  0BD5  30C8               	movlw	200
  9764  0BD6  0633               	xorwf	_Timer1+1,w
  9765  0BD7  0434               	iorwf	_Timer1+2,w
  9766  0BD8  1D03               	skipz
  9767  0BD9  2BDD               	goto	i1l3703
  9768                           
  9769                           ;MCU_B1.c: 270: Timer1.Count = 0;
  9770  0BDA  01B3               	clrf	_Timer1+1
  9771  0BDB  01B4               	clrf	_Timer1+2
  9772                           
  9773                           ;MCU_B1.c: 271: Timer1.Timeout = 1;
  9774  0BDC  1432               	bsf	_Timer1,0
  9775  0BDD                     i1l3703:	
  9776                           
  9777                           ;MCU_B1.c: 272: }
  9778                           ;MCU_B1.c: 274: TMR1H = (int)((65536-1480)/256);
  9779  0BDD  30FA               	movlw	250
  9780  0BDE  008F               	movwf	15	;volatile
  9781                           
  9782                           ;MCU_B1.c: 275: TMR1L = (int)((65536-1480)%256);
  9783  0BDF  3038               	movlw	56
  9784  0BE0  008E               	movwf	14	;volatile
  9785                           
  9786                           ;MCU_B1.c: 276: TMR1IF = 0;
  9787  0BE1  100C               	bcf	12,0	;volatile
  9788  0BE2  0008               	return
  9789  0BE3                     __end_of_TMR1_ISR:	
  9790  007E                     btemp	set	126	;btemp
  9791  007E                     wtemp	set	126
  9792  007E                     wtemp0	set	126
  9793  0080                     wtemp1	set	128
  9794  0082                     wtemp2	set	130
  9795  0084                     wtemp3	set	132
  9796  0086                     wtemp4	set	134
  9797  0088                     wtemp5	set	136
  9798  007F                     wtemp6	set	127
  9799  007E                     ttemp	set	126
  9800  007E                     ttemp0	set	126
  9801  0081                     ttemp1	set	129
  9802  0084                     ttemp2	set	132
  9803  0087                     ttemp3	set	135
  9804  007F                     ttemp4	set	127
  9805  007E                     ltemp	set	126
  9806  007E                     ltemp0	set	126
  9807  0082                     ltemp1	set	130
  9808  0086                     ltemp2	set	134
  9809  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         119
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     23      68
    BANK1            80      0      70
    BANK2            16      0       0

Pointer List with Targets:

    Lights	PTR struct Lights size(1) Largest target is 5
		 -> NULL(NULL[0]), Lights1(BANK0[5]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarLED2(BANK0[4]), VarLED1(BANK0[4]), 


Critical Paths under _main in COMMON

    _getTemp_AD->_getAD
    _getPIR_AD->_getAD
    _getLoad_AD->_getAD
    _getCDS_AD->_getAD
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_getMain_All_Error_Status
    _setTemp_Main->_getMain_All_LightsStatus
    _setSYSC_Main->_getMain_All_Error_Status
    _Mcu_Initialization->_WDT_Set
    _Load_Main->___wmul
    _Load_Main->_getMain_Lights_Count
    _Load_Main->_setLoad_AH_AL_Restore
    _Load_Initialization->_setLoad_AH_AL_Restore
    _setLights_Main->_LightsPointSelect
    _setLights_Main->_getLights_Allow_Condition
    _getLights_Allow_Condition->_getLoad_OK
    _Lights_Control->_LightsPointSelect
    _setLights_Initialization->_LightsPointSelect
    _setLED_Initialization->_LedPointSelect
    _setLights_SwOn->_LightsPointSelect
    _getLights_Status->_LightsPointSelect
    _setLights_SwOff->_LightsPointSelect
    _setLights_Trigger->_LightsPointSelect
    _setLED->_LedPointSelect

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_PIR_Main
    _getPIR_AD->___awdiv
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_getMain_All_Error_Status
    _setSYSC_Main->_getMain_All_Error_Status
    _PIR_Main->_getMain_All_Error_Status
    _Load_Main->___lwdiv
    _Lights_Main->_Lights_Control
    _setLights_Main->_setLights
    _setLights->_setLED
    _Lights_Control->___awdiv
    _Lights_Initialization->_setLights_Initialization
    _LED_Main->_setPIRLED_Main
    _setPIRLED_Main->_setLED
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Exception_Main->_getMain_All_Error_Status
    _setLights_SwOn->_setLights_Trigger
    _setLights_SwOff->_setLights_Trigger

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4   24953
                                             18 BANK0      5     1      4
                 _CDS_Initialization
                           _CDS_Main
                  _DetectSYSC_Signal
                     _Exception_Main
                 _LED_Initialization
                           _LED_Main
              _Lights_Initialization
                        _Lights_Main
                _Load_Initialization
                          _Load_Main
                 _Mcu_Initialization
                 _PIR_Initialization
                           _PIR_Main
                _SYSC_Initialization
                          _SYSC_Main
                _Temp_Initialization
                          _Temp_Main
                           _WDT_Main
                          _getCDS_AD
                         _getLoad_AD
                          _getPIR_AD
                         _getTemp_AD
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           4     4      0     654
                                              0 BANK0      4     4      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getPIR_AD                                            9     8      1    2829
                                              8 BANK0      9     8      1
                            ___awdiv
                            ___lwdiv
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getLoad_AD                                           7     7      0    1053
                                              0 BANK0      7     7      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getCDS_AD                                            6     5      1     669
                                              0 BANK0      6     5      1
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                2     1      1     524
                                              4 COMMON     2     1      1
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              4 COMMON     1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0     347
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         6     6      0     347
                                              5 COMMON     1     1      0
                                              6 BANK0      5     5      0
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSC_Main                                            0     0      0     206
                       _setSYSC_Main
 ---------------------------------------------------------------------------------
 (2) _setSYSC_Main                                         0     0      0     206
           _getMain_All_Error_Status
 ---------------------------------------------------------------------------------
 (1) _SYSC_Initialization                                  0     0      0       0
             _setSYSC_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSYSC_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIR_Main                                            12    12      0    3936
                                              6 BANK0     12    12      0
                      _getCDS_Status
                   _getLights_Status
           _getMain_All_Error_Status
                             _setLED
                    _setLights_SwOff
                     _setLights_SwOn
 ---------------------------------------------------------------------------------
 (2) _getCDS_Status                                        1     1      0      23
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PIR_Initialization                                   1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Load_Main                                           10    10      0    1943
                                              7 BANK0     10    10      0
                            ___lwdiv
                             ___wmul
                    _getLight_LoadGO
               _getLight_Load_Status
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
               _getMain_Lights_Count
              _setLoad_AH_AL_Restore
 ---------------------------------------------------------------------------------
 (2) _getMain_Lights_Count                                 2     2      0      25
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _getLight_Load_Status                                 1     1      0      23
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getLight_LoadGO                                      1     1      0      23
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     290
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     857
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _Load_Initialization                                  0     0      0      90
              _setLoad_AH_AL_Restore
 ---------------------------------------------------------------------------------
 (2) _setLoad_AH_AL_Restore                                2     2      0      90
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lights_Main                                          0     0      0    4194
                     _Lights_Control
                         _getLoad_OK
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
                     _setLights_Main
 ---------------------------------------------------------------------------------
 (2) _setLights_Main                                       1     1      0    2899
                                              5 BANK0      1     1      0
                  _LightsPointSelect
          _getLights_Allow_Condition
                          _setLights
 ---------------------------------------------------------------------------------
 (3) _setLights                                            3     2      1    2636
                                              2 BANK0      3     2      1
                             _setLED
                     _setLights_Line
 ---------------------------------------------------------------------------------
 (4) _setLights_Line                                       1     1      0      44
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _getLights_Allow_Condition                            4     4      0     108
                                              5 COMMON     1     1      0
                                              0 BANK0      2     2      0
                         _getLoad_OK
 ---------------------------------------------------------------------------------
 (4) _getLoad_OK                                           1     1      0      34
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Lights_Control                                       3     3      0    1031
                                              8 BANK0      3     3      0
                  _LightsPointSelect
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     907
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lights_Initialization                                0     0      0      62
           _setLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLights_Initialization                             1     1      0      62
                                              0 BANK0      1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0    2292
                     _setPIRLED_Main
 ---------------------------------------------------------------------------------
 (2) _setPIRLED_Main                                       2     2      0    2292
                                              2 BANK0      2     2      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    2376
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    2376
                                              2 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Exception_Main                                       9     9      0    4302
                                              6 BANK0      9     9      0
                 _getAll_Lights_Line
                   _getLights_Status
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
                             _setLED
                    _setLights_SwOff
                     _setLights_SwOn
 ---------------------------------------------------------------------------------
 (2) _setLights_SwOn                                       1     1      0     621
                                              3 BANK0      1     1      0
                  _LightsPointSelect
                   _getLights_Status
                  _setLights_Trigger
 ---------------------------------------------------------------------------------
 (3) _getLights_Status                                     2     2      0      96
                                              0 BANK0      2     2      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _setLights_SwOff                                      1     1      0     494
                                              3 BANK0      1     1      0
                  _LightsPointSelect
                  _setLights_Trigger
 ---------------------------------------------------------------------------------
 (3) _setLights_Trigger                                    3     2      1     401
                                              0 BANK0      3     2      1
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _LightsPointSelect                                    2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _setLED                                               2     1      1    2252
                                              0 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (3) _LedPointSelect                                       2     2      0      62
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _getMain_All_LightsStatus                             1     1      0      24
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _getMain_All_Error_Status                             7     7      0     206
                                              4 COMMON     1     1      0
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _getAll_Lights_Line                                   1     1      0      24
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DetectSYSC_Signal                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CDS_Main                                             3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDS_Initialization
   _CDS_Main
   _DetectSYSC_Signal
   _Exception_Main
     _getAll_Lights_Line
     _getLights_Status
       _LightsPointSelect
     _getMain_All_Error_Status
     _getMain_All_LightsStatus
     _setLED
       _LedPointSelect
     _setLights_SwOff
       _LightsPointSelect
       _setLights_Trigger
         _LightsPointSelect
     _setLights_SwOn
       _LightsPointSelect
       _getLights_Status
         _LightsPointSelect
       _setLights_Trigger
         _LightsPointSelect
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setPIRLED_Main
       _setLED
         _LedPointSelect
   _Lights_Initialization
     _setLights_Initialization
       _LightsPointSelect
   _Lights_Main
     _Lights_Control
       _LightsPointSelect
       ___awdiv
     _getLoad_OK
     _getMain_All_Error_Status
     _getMain_All_LightsStatus
     _setLights_Main
       _LightsPointSelect
       _getLights_Allow_Condition
         _getLoad_OK
       _setLights
         _setLED
           _LedPointSelect
         _setLights_Line
   _Load_Initialization
     _setLoad_AH_AL_Restore
   _Load_Main
     ___lwdiv
     ___wmul
     _getLight_LoadGO
     _getLight_Load_Status
     _getMain_All_Error_Status
     _getMain_All_LightsStatus
     _getMain_Lights_Count
     _setLoad_AH_AL_Restore
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _PIR_Initialization
   _PIR_Main
     _getCDS_Status
     _getLights_Status
       _LightsPointSelect
     _getMain_All_Error_Status
     _setLED
       _LedPointSelect
     _setLights_SwOff
       _LightsPointSelect
       _setLights_Trigger
         _LightsPointSelect
     _setLights_SwOn
       _LightsPointSelect
       _getLights_Status
         _LightsPointSelect
       _setLights_Trigger
         _LightsPointSelect
   _SYSC_Initialization
     _setSYSC_Initialization
   _SYSC_Main
     _setSYSC_Main
       _getMain_All_Error_Status
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       _getMain_All_Error_Status
       _getMain_All_LightsStatus
   _WDT_Main
     _WDT_Clearing
   _getCDS_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getLoad_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getPIR_AD
     ___awdiv
     ___lwdiv
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getTemp_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_MainTimer

 _ISR (ROOT)
   _TMR1_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      94       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      44       5       85.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      46       7       87.5%
BITBANK2            10      0       0       8        0.0%
BANK2               10      0       0       9        0.0%
DATA                 0      0      94      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Thu Feb 26 16:13:45 2015

                        __CFG_CP$ON 0000                        _WDT_Clearing 0002  
         getMain_Lights_Count@count 0074                        ___awdiv@sign 0052  
                    setTemp_Main@AD 0057                                  fsr 0004  
               ___wmul@multiplicand 004F                                 l117 0D99  
                               l254 0B9E                                 l700 040F  
                               l621 0606                                 l710 03E8  
                               l702 0266                                 l711 03E6  
                               l703 0262                                 l704 025C  
                               l716 0392                                 l900 0059  
                               l820 0780                                 l590 0DD9  
                               l591 0DF6                                 l831 077C  
                               l906 0091                                 l826 0726  
                               l595 0DF2                                 l908 00A4  
                               l898 020F                                 l899 008B  
                               _GIE 005F                                 _RB2 0032  
                               _LED 0076                                 _RB3 0033  
                               _RA5 002D                                 _RA6 002E  
                               _RA7 002F                                 _PS0 0408  
                               _PS1 0409                                 _PS2 040A  
                               _ISR 0C10                                 _PSA 040B  
                               _WDT 0035                   ??_setLights_SwOff 0076  
                               _Cmd 0037              getAll_Lights_Line@line 0074  
                               fsr0 0004                                 indf 0000  
                   __end_of_ADC_Set 0AE6           __end_of_LightsPointSelect 0B22  
                  _getLights_Status 0B73             __size_of_Lights_Control 0083  
                              ?_ISR 0070                          Load_Main@i 005C  
                              l1111 0B36                                l1263 0CC2  
                              l3205 0DD5                                l3215 0DED  
                              l3207 0DDD                                l1384 0D3D  
                    _Load_Main$2389 0057                                l5021 0363  
                              l5015 0353                                l3511 0739  
                              l5033 03AF                                l5025 0384  
                              l3505 0728                                l3513 073C  
                              l4403 0F4A                                l5043 03C8  
                              l5211 019F                                l3461 0B0D  
                              l3197 0DC9                                l4413 0F57  
                              l5301 05EA                                l5213 01AE  
                              l5125 007B                                l4431 0F76  
                              l4423 0F6A                                l4511 06A2  
                              l5207 016D                                l4409 0F53  
                              l5305 05F8                                l3537 076C  
                              l4427 0F6E                                l5227 01D9  
                              l5163 00C7                                l3563 0E4F  
                              l3547 077B                                l4611 0CA7  
                              l4453 0F8E                                l4533 06E0  
                              l4525 06C6                                l5245 0209  
                              l5181 00EB                                l4605 0C9E  
                              l5079 03FC                                l5191 012B  
                              l5175 00DE                                l4607 0CA1  
                              l5351 0FD8                                l4449 0F88  
                              l4457 0F94                                l5281 0596  
                              l4641 07B1                                l4529 06CD  
                              l5097 0CC3                                l3569 0E6A  
                              l5283 0573                                l5275 056F  
                              l4651 07C3                                l4571 0EEF  
                              l4715 0656                                l4547 0704  
                              l5179 00EA                                l5339 0FB5  
                              l5293 05CC                                l5285 05A2  
                              l5269 0560                                l4653 07CF  
                              l4645 07B7                                l4637 07AB  
                              l4581 0EF7                                l4565 0EE4  
                              l4399 0F46                                l5295 05A9  
                              l4655 07D7                                l4583 0F05  
                              l4751 0E10                                l5199 013F  
                              l4823 0EAF                                l4815 0E9B  
                              l4673 0D2C                                l5297 05D8  
                              l4657 07E5                                l4593 0F26  
                              l4761 0E31                                l4729 0D33  
                              l4921 0509                                l4905 04BF  
                              l4499 0C08                                l4843 0ED3  
                              l4827 0EB7                                l4915 04ED  
                              l3883 0C6C                                l4597 0F2E  
                              l4589 0F1B                                l4757 0E26  
                              l4749 0E02                                l4951 0246  
                              l4935 0543                                l4785 0DA4  
                              l4697 0D7F                                l4929 0535  
                              l4881 0474                                l4873 045E  
                              l4885 047F                                l4877 0469  
                              l4983 028C                                l4967 0265  
                              l4889 048A                                l4899 04A3  
                              l4989 02C8               _myMain_Initialization 0AA2  
                      __CFG_WDTE$ON 0000                                u3355 0E76  
                              u5135 0BC7                                u5305 0F1C  
                              _PEIE 005E                                u5420 07CC  
                              u6205 02C6                                u6215 031D  
                              u5440 07E2                                u5265 0EFA  
                              u5285 0F06                                u5605 0675  
                              u5295 0F12                                u5705 0E1D  
                              u5715 0E27                                u5635 0D3E  
                              u6195 028A                                u5580 0652  
                              u5805 0DB4                                u5565 063E  
                              u5645 0D45                                u6295 03A7  
                              u5675 0E05                                u6715 01BE  
                              u6645 0109                                u6830 059F  
                              u5695 0E11                                u6655 0121  
                              u6850 05D5                                u6835 057C  
                              u6755 01F6                                u6675 0158  
                              u6855 05B2                                u6695 0191  
                              __CDS 002E             ?_setSYSC_Initialization 0070  
                              _WPUB 0095                                _SYSC 0020  
                              __PIR 00A0                                _Load 00CA  
                              _Temp 0039                                _main 0F9A  
                              btemp 007E                     __end_of_WDT_Set 0B64  
                              ltemp 007E                                start 0011  
                              ttemp 007E                                wtemp 007E  
                  __end_of_CDS_Main 0DBA        __size_of_Temp_Initialization 0003  
                             ??_ISR 0070                   _setLights_Trigger 0C76  
                     ??_Lights_Main 0076                       __CFG_PLLEN$ON 0000  
                  __end_of_LED_Main 0AA6                  ?_setLights_Trigger 004D  
                  ??_setPIRLED_Main 004F                               ?_main 005F  
                   __end_of___awdiv 0F35                               _ADRES 001E  
                   ___awdiv@divisor 004D                               _T1CON 0010  
                   __end_of___lwdiv 0E38                               i1l426 0C1B  
                   ___awdiv@counter 0051                               _TMR1H 000F  
                             _TMR1L 000E                               _PORTA 0005  
                             _PORTB 0006                               _PORTC 0007  
                             _TRISA 0085                               _TRISB 0086  
                             _TRISC 0087             __end_of_Timeout_Counter 0BCD  
                             _Light 0077                 ??_setLights_Trigger 004E  
                  __end_of_PIR_Main 022D                    __end_of_TMR1_ISR 0BE3  
                  __end_of_TMR1_Set 0B56                               _getAD 0C91  
    __end_of_setSYSC_Initialization 0AC1      getLights_Allow_Condition@allow 004D  
           __end_of_getLight_LoadGO 0ACC                    __end_of_WDT_Main 0B95  
                     _LightsControl 0079                      __CFG_BOREN$OFF 0000  
      __end_of_getMain_Lights_Count 0B2C                               pclath 000A  
                             ltemp0 007E                               ltemp1 0082  
                             ltemp2 0086                               ltemp3 0080  
    __size_of_setLED_Initialization 0012       __end_of_setLED_Initialization 0BB9  
                             ttemp0 007E                               ttemp1 0081  
                             ttemp2 0084                               ttemp3 0087  
                             ttemp4 007F                               status 0003  
                             wtemp0 007E                               wtemp1 0080  
                             wtemp2 0082                               wtemp3 0084  
                             wtemp4 0086                               wtemp5 0088  
                             wtemp6 007F                   getPIR_AD@channel1 005A  
                 getPIR_AD@channel2 0055              ?_setLoad_AH_AL_Restore 0070  
                 setTemp_Main@error 0053                      _setLights_Main 0D56  
                    _setLights_Line 0B3A                     __initialization 0013  
                    _setLights_SwOn 0D0C                  __size_of_SYSC_Main 0003  
         __end_of_setLights_Trigger 0C91                        __end_of_main 1000  
                  __end_of_Fosc_Set 0AC6      getMain_All_LightsStatus@status 0074  
                    _Exception_Main 0545                           ??_ADC_Set 0074  
                            ??_main 0063               PIR_Main@Enable_Switch 005A  
               __end_of_Lights_Main 0CCB          __size_of_LightsPointSelect 000A  
          _getMain_All_LightsStatus 0B0F                              ?_getAD 0074  
            ?_myMain_Initialization 0070                              _ADCON0 001F  
                            _ADCON1 009F                    ___awdiv@dividend 004F  
                         ??_WDT_Set 0074                              _ANSELA 0185  
                            _ANSELB 0186            _getMain_All_Error_Status 0DBA  
                            i1l3703 0BDD                              _FVRCON 009D  
            getLights_Status@lights 004D                              _PIRLED 002A  
                            _OSCCON 0090                  __size_of_Load_Main 01EA  
                            _TMR1IE 0460                              _TMR1IF 0060  
                            _IO_Set 0C42                Exception_Main@i_2140 0059  
            getLights_Status@status 004E              __end_of_setLights_Main 0D86  
            __end_of_setLights_Line 0B48              __end_of_setLights_SwOn 0D31  
      __size_of_SYSC_Initialization 0003          __end_of_Mcu_Initialization 0B73  
                            _Lights 0078                              _Timer1 0032  
       __size_of_CDS_Initialization 0004             ??_Lights_Initialization 0076  
            __end_of_Exception_Main 0607                Exception_Main@lights 0054  
                            ___wmul 0D31                           ??___awdiv 0074  
                         ??___lwdiv 0074                Exception_Main@status 0056  
                            _setLED 0F35                              _myMain 0025  
                  ___awdiv@quotient 0053                  __size_of_Temp_Main 0003  
              Load_Main@LightsCount 005B         __end_of_Load_Initialization 0AA9  
   getLights_Allow_Condition@lights 0070                              saved_w 007E  
                  setLights_SwOn@sw 0050                    ?_Timeout_Counter 0070  
       getMain_Lights_Count@status1 0075                   __end_of_SYSC_Main 0AAF  
                    _Lights_Control 0607             __size_of_LedPointSelect 0012  
                         ?_CDS_Main 0070                  setTemp_Main@TempGO 0054  
                  ?_getLight_LoadGO 0070         __size_of_PIR_Initialization 000B  
           __end_of__initialization 0023                           ?_LED_Main 0070  
                     ?_my_MainTimer 0070                     ?_setLights_Main 0070  
                   ?_setLights_Line 0070                     ?_setLights_SwOn 0070  
                     ?_setSYSC_Main 0070                     _setLights_SwOff 0C28  
        __size_of_setLights_Trigger 001B                      __pcstackCOMMON 0070  
                __size_of_getCDS_AD 0022                     ?_Exception_Main 0070  
          __end_of_getLights_Status 0B84                       __end_of_getAD 0CAD  
                         ?_PIR_Main 0070                           ?_TMR1_ISR 0070  
     __size_of_getLight_Load_Status 0006                           ?_TMR1_Set 0070  
            setLoad_AH_AL_Restore@i 0075                  _LED_Initialization 0AE6  
                __size_of_getPIR_AD 012E                         _Lights_Main 0CAD  
          _setLights_Initialization 0AD8                _getMain_Lights_Count 0B22  
                         ?_WDT_Main 0070                   __end_of_Load_Main 0417  
        __end_of_set_TimeoutCleared 0AD8                 ?_LED_Initialization 0070  
            __end_of_Lights_Control 068A                             ??_getAD 0075  
               _Temp_Initialization 0AAF                          ??_CDS_Main 004D  
                        __pbssBANK0 0020                          __pbssBANK1 00A0  
                         ?_Fosc_Set 0070         __size_of_getAll_Lights_Line 0009  
                 __end_of_Temp_Main 0AB5                             ?_IO_Set 0070  
                   __CFG_VCAPEN$DIS 0000                      ??_my_MainTimer 0074  
                        ??_LED_Main 0076                      ??_setSYSC_Main 0075  
              ??_LED_Initialization 0076                   LedPointSelect@led 0075  
                        __pmaintext 0F9A          ?_getLights_Allow_Condition 0070  
              ?_Temp_Initialization 0070                PIR_Main@LightsStatus 005E  
                           ?___wmul 004D                          ??_PIR_Main 0053  
                        ??_TMR1_ISR 0070                       ?_setTemp_Main 0070  
                __size_of_setLights 007F                          _getLoad_AD 0E7C  
                        ??_TMR1_Set 0074                          __pintentry 0004  
                        _getLoad_OK 0AEE                             ?_setLED 004D  
           setLights_Trigger@lights 004F               ?_getMain_Lights_Count 0070  
                           _ADC_Set 0ADF                          _getTemp_AD 0CCB  
                        ??_WDT_Main 0074              __size_of_getCDS_Status 0008  
                   ?_Lights_Control 0070                   __end_of_getCDS_AD 0D0C  
                           _WDT_Set 0B56                       getPIR_AD@VRAD 005C  
                        ??_Fosc_Set 0074                   __end_of_getPIR_AD 0545  
           ??_setLoad_AH_AL_Restore 0074             __end_of_setLights_SwOff 0C42  
    _getLights_Allow_Condition$4224 004E                     __size_of_IO_Set 001A  
                        getCDS_AD@i 0050                          getCDS_AD@j 0051  
                           _Lights1 0040                             _VarLED1 0045  
                           _VarLED2 0049               ??_Temp_Initialization 0074  
                    ??_setTemp_Main 0075                             ___awdiv 0ED8  
                   __size_of___wmul 0025                             ___lwdiv 0DF8  
        ??_getMain_All_LightsStatus 0074                         PIR_Main@cds 0059  
                   __size_of_setLED 0065                             __ptext0 0000  
                           __ptext1 0C5C                             __ptext2 0AA2  
                           __ptext3 0CCB                             __ptext4 0417  
                           __ptext5 0E7C                             __ptext6 0CEA  
                           __ptext7 0C91                             __ptext8 0AD2  
                           __ptext9 0BB9                          getPIR_AD@i 005D  
                        getPIR_AD@j 0059                        __size_of_ISR 0018  
        ??_getMain_All_Error_Status 0074                 _SYSC_Initialization 0AA9  
           ??_myMain_Initialization 0074            ??_setTemp_Initialization 0074  
                    _LedPointSelect 0B95                     getTemp_AD@ADRES 0050  
                           clrloop0 0AFF                   __end_of_setLights 0709  
              end_of_initialization 0023                       _getCDS_Status 0AF6  
              ?_SYSC_Initialization 0070               _setLED_Initialization 0BA7  
                 setLights_SwOff@sw 0050                         ?_getLoad_AD 0070  
    __size_of_Lights_Initialization 0004                         ?_getLoad_OK 0070  
            ??_getMain_Lights_Count 0074       __end_of_Lights_Initialization 0ABD  
                       ?_getTemp_AD 0070            setLED_Initialization@led 004F  
           setTemp_Main@DangerValue 0056                  _Mcu_Initialization 0B64  
              __end_of_my_MainTimer 0C76                __end_of_setSYSC_Main 0E7C  
            __end_of_LedPointSelect 0BA7            Load_Main@ErrorCountValue 0059  
               setPIRLED_Main@count 0050                 ?_Mcu_Initialization 0070  
           __size_of_setPIRLED_Main 0071                    ??_setLights_Main 0076  
                  ??_setLights_Line 0074                setLights_Main@lights 0052  
                  ??_setLights_SwOn 0076                           _SYSC_Main 0AAC  
   getMain_All_Error_Status@command 0051                   __size_of_CDS_Main 0034  
                    ?_getCDS_Status 0070                    ?_setLights_SwOff 0070  
             ??_SYSC_Initialization 0074                    ??_Exception_Main 0053  
                    __end_of_IO_Set 0C5C          __end_of_CDS_Initialization 0AB9  
        ??_setLights_Initialization 0076                   __size_of_LED_Main 0003  
              ??_Mcu_Initialization 0075                       ?_WDT_Clearing 0070  
                 ?_getLights_Status 0070                        ?_Lights_Main 0070  
                    __end_of___wmul 0D56                   __size_of_PIR_Main 0207  
                 __size_of_TMR1_ISR 0016                  ??_getLights_Status 0076  
                 __size_of_TMR1_Set 000E                      __end_of_setLED 0F9A  
          ??_setSYSC_Initialization 0074                   __size_of_WDT_Main 0011  
               start_initialization 0013                     ?_LedPointSelect 0070  
              setLights_Line@lights 0074                           _Load_Main 022D  
                       __end_of_ISR 0C28          __end_of_PIR_Initialization 0800  
      __size_of_Load_Initialization 0003        __end_of_getLight_Load_Status 0AD2  
   __size_of_setTemp_Initialization 0001                 getCDS_Status@status 0074  
              __end_of_setTemp_Main 0784                 __size_of_getLoad_AD 005C  
               __size_of_getLoad_OK 0008                          ?_SYSC_Main 0070  
                _set_TimeoutCleared 0AD2                            ??_IO_Set 0074  
          __size_of_Timeout_Counter 0014                 __size_of_getTemp_AD 001F  
            ?_setLED_Initialization 0070                   __size_of_Fosc_Set 0005  
          __size_of_getLight_LoadGO 0006                           _Temp_Main 0AB2  
                   setLights@lights 0051                 ?_set_TimeoutCleared 0070  
                    ??_WDT_Clearing 0074         ??_getLights_Allow_Condition 0075  
               Exception_Main@count 0055                     setLights@status 004F  
               Exception_Main@error 005B                            ??___wmul 0074  
  __end_of_getMain_All_LightsStatus 0B18                            ??_setLED 0076  
                          ?_ADC_Set 0070                    ??_Lights_Control 0055  
  __end_of_getMain_All_Error_Status 0DF8                         __pbssCOMMON 0076  
           Load_Main@Load_RunStatus 005A                           ___latbits 0001  
                        ?_Load_Main 0070                       __pcstackBANK0 004D  
              ??_set_TimeoutCleared 0074          __end_of_getAll_Lights_Line 0B0F  
                          ?_WDT_Set 0070                     ??_getCDS_Status 0074  
                     PIR_Main@error 0058                           _getCDS_AD 0CEA  
    __size_of_setLoad_AH_AL_Restore 0016       __end_of_setLoad_AH_AL_Restore 0BF9  
                         _getPIR_AD 0417         __size_of_LED_Initialization 0008  
                   Exception_Main@i 0057                          ?_Temp_Main 0070  
                  ___lwdiv@dividend 004F                      Load_Main@error 0056  
            _setTemp_Initialization 0AA1                       _PIR_Main$2856 005B  
                          ?___awdiv 004D               __size_of_my_MainTimer 001A  
                          ?___lwdiv 004D               __size_of_setSYSC_Main 0044  
          setLights_Trigger@command 004D     __size_of_setSYSC_Initialization 0004  
         _getLights_Allow_Condition 0BF9      __size_of_myMain_Initialization 0001  
     __end_of_myMain_Initialization 0AA3                      __size_of_getAD 001C  
                  ___lwdiv@quotient 0052                      _setPIRLED_Main 0784  
                          _CDS_Main 0D86                         ??_SYSC_Main 0075  
       __end_of_Temp_Initialization 0AB2                   interrupt_function 0004  
                        ?_getCDS_AD 004D                      ___wmul@product 0074  
                          _LED_Main 0AA3                           _setLights 068A  
                         clear_ram0 0AFE    __end_of_setLights_Initialization 0ADF  
                      _my_MainTimer 0C5C                          ?_getPIR_AD 0055  
                      _setSYSC_Main 0E38                            _GO_nDONE 00F9  
                 ??_Timeout_Counter 0074                PIR_Main@TriggerValue 005D  
                          _PIR_Main 0026                        ??_getLoad_AD 004D  
                          _TMR1_ISR 0BCD                        ??_getLoad_OK 0074  
              _getLight_Load_Status 0ACC                            _TMR1_Set 0B48  
                 ??_getLight_LoadGO 0074                        ??_getTemp_AD 004D  
                          _WDT_Main 0B84                    __size_of_ADC_Set 0007  
                 ___wmul@multiplier 004D                      getPIR_AD@VRAD1 005B  
              __size_of_Lights_Main 001E               __size_of_setTemp_Main 007B  
                       ??_Load_Main 0054              __end_of_setPIRLED_Main 07F5  
    getMain_All_Error_Status@status 0052                         getAD@adcon0 0075  
                       getAD@adcon1 0074                __end_of_WDT_Clearing 0004  
 __size_of_getMain_All_LightsStatus 0009           ?_getMain_All_LightsStatus 0070  
                          _Fosc_Set 0AC1                    __size_of_WDT_Set 000E  
                __end_of_getLoad_AD 0ED8                  __end_of_getLoad_OK 0AF6  
 __size_of_getMain_All_Error_Status 003E           ?_getMain_All_Error_Status 0070  
                        ?_setLights 004F                  __end_of_getTemp_AD 0CEA  
            _setSYSC_Initialization 0ABD                   getLoad_AD@channel 004F  
                 _DetectSYSC_Signal 0B2C                            _SwDetect 0038  
                       ??_Temp_Main 0076       _getMain_All_Error_Status$2127 004D  
     _getMain_All_Error_Status$2128 004F                 _Load_Initialization 0AA6  
                ?_DetectSYSC_Signal 0070                           setLED@led 004E  
             ?_getLight_Load_Status 0070                        _setTemp_Main 0709  
                  __size_of___awdiv 005D      getLight_Load_Status@loadstatus 0074  
                  __size_of___lwdiv 0040                    ??_LedPointSelect 0074  
     __size_of_getMain_Lights_Count 000A                 ??_DetectSYSC_Signal 0074  
                _CDS_Initialization 0AB5               _Lights_Initialization 0AB9  
                 getTemp_AD@channel 004F                     ?_setPIRLED_Main 0070  
                   ___lwdiv@divisor 004D                ?_Load_Initialization 0070  
               ?_CDS_Initialization 0070                     ___lwdiv@counter 0051  
                          __ptext10 0B84                            __ptext11 0002  
                          __ptext20 0026                            __ptext12 0AB2  
                          __ptext21 0AF6                            __ptext13 0709  
                          __ptext30 0B22                            __ptext22 07F5  
                          __ptext14 0AAF                            __ptext31 0ACC  
                          __ptext23 0B64                            __ptext15 0AA1  
                          __ptext40 0B3A                            __ptext32 0AC6  
                          __ptext24 0B56                            __ptext16 0AAC  
                          __ptext41 0BF9                            __ptext33 0D31  
                          __ptext25 0B48                            __ptext17 0E38  
                          __ptext50 0BA7                            __ptext42 0AEE  
                          __ptext34 0DF8                            __ptext26 0C42  
                          __ptext18 0AA9                            __ptext51 0545  
                          __ptext43 0607                            __ptext35 0AA6  
                          __ptext27 0AC1                            __ptext19 0ABD  
                          __ptext60 0DBA                            __ptext52 0D0C  
                          __ptext44 0ED8                            __ptext36 0BE3  
                          __ptext28 0ADF                            __ptext61 0B06  
                          __ptext53 0B73                            __ptext45 0AB9  
                          __ptext37 0CAD                            __ptext29 022D  
                          __ptext62 0B2C                            __ptext54 0C28  
                          __ptext46 0AD8                            __ptext38 0D56  
                          __ptext63 0D86                            __ptext55 0C76  
                          __ptext47 0AA3                            __ptext39 068A  
                          __ptext64 0AB5                            __ptext56 0B18  
                          __ptext48 0784                            __ptext65 0C10  
                          __ptext57 0F35                            __ptext49 0AE6  
                          __ptext66 0BCD                            __ptext58 0B95  
                          __ptext59 0B0F           __size_of_getLights_Status 0011  
       __end_of_SYSC_Initialization 0AAC             ??_setLED_Initialization 0076  
                       ??_getCDS_AD 004E                       setLED@command 004D  
         __end_of_DetectSYSC_Signal 0B3A                       __size_of_main 0066  
                       ??_getPIR_AD 0056                  _PIR_Initialization 07F5  
              ??_CDS_Initialization 0074         __size_of_Mcu_Initialization 000F  
          __size_of_setLights_SwOff 001A                        getLoad_OK@ok 0074  
               ?_PIR_Initialization 0070                            main@argc 005F  
                          main@argv 0061   __size_of_setLights_Initialization 0007  
         ?_setLights_Initialization 0070               ??_Load_Initialization 0076  
              Lights_Control@lights 0057                ??_PIR_Initialization 0074  
                          intlevel1 0000  __size_of_getLights_Allow_Condition 0017  
             setTemp_Main@SafeValue 0055                         ??_setLights 0050  
           ?_setTemp_Initialization 0070             LightsPointSelect@lights 0075  
                _getAll_Lights_Line 0B06                     getLoad_AD@ADRES 0052  
            ??_getLight_Load_Status 0074                         getLoad_AD@i 0053  
                       getLoad_AD@j 0051                         getLoad_AD@k 0050  
           __size_of_setLights_Main 0030             __size_of_setLights_Line 000E  
           __size_of_setLights_SwOn 0025                 ?_getAll_Lights_Line 0070  
             getLight_LoadGO@loadgo 0074              ?_Lights_Initialization 0070  
           __size_of_Exception_Main 00C2               __size_of_WDT_Clearing 0002  
    setLights_Initialization@lights 004D         __size_of_set_TimeoutCleared 0006  
                 _LightsPointSelect 0B18                ??_getAll_Lights_Line 0074  
                __CFG_FOSC$INTOSCIO 0000                  ?_LightsPointSelect 0070  
                   _Timeout_Counter 0BB9          __end_of_LED_Initialization 0AEE  
             __end_of_getCDS_Status 0AFE      __end_of_setTemp_Initialization 0AA2  
        __size_of_DetectSYSC_Signal 000E                     _getLight_LoadGO 0AC6  
                 getCDS_AD@channel1 0052                   getCDS_AD@channel2 004D  
 __end_of_getLights_Allow_Condition 0C10                 ??_LightsPointSelect 0074  
             _setLoad_AH_AL_Restore 0BE3  
