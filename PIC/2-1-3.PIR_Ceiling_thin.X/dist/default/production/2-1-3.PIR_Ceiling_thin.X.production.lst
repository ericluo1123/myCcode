

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Fri Feb 13 16:09:49 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F723A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,inline,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,inline,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,inline,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,inline,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,inline,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,inline,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,delta=2
    61                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text50,local,class=CODE,merge=1,delta=2
    63                           	psect	text51,local,class=CODE,merge=1,delta=2
    64                           	psect	text52,local,class=CODE,merge=1,delta=2
    65                           	psect	text53,local,class=CODE,merge=1,delta=2
    66                           	psect	text54,local,class=CODE,merge=1,delta=2
    67                           	psect	text55,local,class=CODE,merge=1,delta=2
    68                           	psect	text56,local,class=CODE,merge=1,delta=2
    69                           	psect	text57,local,class=CODE,merge=1,delta=2
    70                           	psect	text58,local,class=CODE,merge=1,delta=2
    71                           	psect	text59,local,class=CODE,merge=1,delta=2
    72                           	psect	text60,local,class=CODE,merge=1,delta=2
    73                           	psect	text61,local,class=CODE,merge=1,delta=2
    74                           	psect	text62,local,class=CODE,merge=1,inline,delta=2
    75                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
    76                           	psect	text64,local,class=CODE,merge=1,inline,delta=2
    77                           	psect	text65,local,class=CODE,merge=1,delta=2
    78                           	psect	intentry,global,class=CODE,delta=2
    79                           	psect	text66,local,class=CODE,merge=1,inline,delta=2
    80                           	dabs	1,0x7E,2
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0089                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  008F                     	;# 
   124  0090                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0095                     	;# 
   131  0095                     	;# 
   132  0096                     	;# 
   133  0096                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009F                     	;# 
   139  0108                     	;# 
   140  0109                     	;# 
   141  010C                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  0185                     	;# 
   148  0186                     	;# 
   149  018C                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0089                     	;# 
   189  008C                     	;# 
   190  008D                     	;# 
   191  008E                     	;# 
   192  008F                     	;# 
   193  0090                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0096                     	;# 
   203  0098                     	;# 
   204  0099                     	;# 
   205  009C                     	;# 
   206  009D                     	;# 
   207  009F                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0186                     	;# 
   218  018C                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000D                     	;# 
   232  000E                     	;# 
   233  000E                     	;# 
   234  000F                     	;# 
   235  0010                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0014                     	;# 
   240  0015                     	;# 
   241  0015                     	;# 
   242  0016                     	;# 
   243  0017                     	;# 
   244  0018                     	;# 
   245  0019                     	;# 
   246  001A                     	;# 
   247  001B                     	;# 
   248  001B                     	;# 
   249  001C                     	;# 
   250  001D                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  0081                     	;# 
   254  0085                     	;# 
   255  0086                     	;# 
   256  0087                     	;# 
   257  0089                     	;# 
   258  008C                     	;# 
   259  008D                     	;# 
   260  008E                     	;# 
   261  008F                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0096                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009F                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0186                     	;# 
   287  018C                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0089                     	;# 
   327  008C                     	;# 
   328  008D                     	;# 
   329  008E                     	;# 
   330  008F                     	;# 
   331  0090                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0094                     	;# 
   337  0095                     	;# 
   338  0095                     	;# 
   339  0096                     	;# 
   340  0096                     	;# 
   341  0098                     	;# 
   342  0099                     	;# 
   343  009C                     	;# 
   344  009D                     	;# 
   345  009F                     	;# 
   346  0108                     	;# 
   347  0109                     	;# 
   348  010C                     	;# 
   349  010C                     	;# 
   350  010D                     	;# 
   351  010D                     	;# 
   352  010E                     	;# 
   353  010F                     	;# 
   354  0185                     	;# 
   355  0186                     	;# 
   356  018C                     	;# 
   357  0000                     	;# 
   358  0001                     	;# 
   359  0002                     	;# 
   360  0003                     	;# 
   361  0004                     	;# 
   362  0005                     	;# 
   363  0006                     	;# 
   364  0007                     	;# 
   365  0009                     	;# 
   366  000A                     	;# 
   367  000B                     	;# 
   368  000C                     	;# 
   369  000D                     	;# 
   370  000E                     	;# 
   371  000E                     	;# 
   372  000F                     	;# 
   373  0010                     	;# 
   374  0011                     	;# 
   375  0012                     	;# 
   376  0013                     	;# 
   377  0014                     	;# 
   378  0015                     	;# 
   379  0015                     	;# 
   380  0016                     	;# 
   381  0017                     	;# 
   382  0018                     	;# 
   383  0019                     	;# 
   384  001A                     	;# 
   385  001B                     	;# 
   386  001B                     	;# 
   387  001C                     	;# 
   388  001D                     	;# 
   389  001E                     	;# 
   390  001F                     	;# 
   391  0081                     	;# 
   392  0085                     	;# 
   393  0086                     	;# 
   394  0087                     	;# 
   395  0089                     	;# 
   396  008C                     	;# 
   397  008D                     	;# 
   398  008E                     	;# 
   399  008F                     	;# 
   400  0090                     	;# 
   401  0091                     	;# 
   402  0092                     	;# 
   403  0093                     	;# 
   404  0093                     	;# 
   405  0094                     	;# 
   406  0095                     	;# 
   407  0095                     	;# 
   408  0096                     	;# 
   409  0096                     	;# 
   410  0098                     	;# 
   411  0099                     	;# 
   412  009C                     	;# 
   413  009D                     	;# 
   414  009F                     	;# 
   415  0108                     	;# 
   416  0109                     	;# 
   417  010C                     	;# 
   418  010C                     	;# 
   419  010D                     	;# 
   420  010D                     	;# 
   421  010E                     	;# 
   422  010F                     	;# 
   423  0185                     	;# 
   424  0186                     	;# 
   425  018C                     	;# 
   426  0000                     	;# 
   427  0001                     	;# 
   428  0002                     	;# 
   429  0003                     	;# 
   430  0004                     	;# 
   431  0005                     	;# 
   432  0006                     	;# 
   433  0007                     	;# 
   434  0009                     	;# 
   435  000A                     	;# 
   436  000B                     	;# 
   437  000C                     	;# 
   438  000D                     	;# 
   439  000E                     	;# 
   440  000E                     	;# 
   441  000F                     	;# 
   442  0010                     	;# 
   443  0011                     	;# 
   444  0012                     	;# 
   445  0013                     	;# 
   446  0014                     	;# 
   447  0015                     	;# 
   448  0015                     	;# 
   449  0016                     	;# 
   450  0017                     	;# 
   451  0018                     	;# 
   452  0019                     	;# 
   453  001A                     	;# 
   454  001B                     	;# 
   455  001B                     	;# 
   456  001C                     	;# 
   457  001D                     	;# 
   458  001E                     	;# 
   459  001F                     	;# 
   460  0081                     	;# 
   461  0085                     	;# 
   462  0086                     	;# 
   463  0087                     	;# 
   464  0089                     	;# 
   465  008C                     	;# 
   466  008D                     	;# 
   467  008E                     	;# 
   468  008F                     	;# 
   469  0090                     	;# 
   470  0091                     	;# 
   471  0092                     	;# 
   472  0093                     	;# 
   473  0093                     	;# 
   474  0094                     	;# 
   475  0095                     	;# 
   476  0095                     	;# 
   477  0096                     	;# 
   478  0096                     	;# 
   479  0098                     	;# 
   480  0099                     	;# 
   481  009C                     	;# 
   482  009D                     	;# 
   483  009F                     	;# 
   484  0108                     	;# 
   485  0109                     	;# 
   486  010C                     	;# 
   487  010C                     	;# 
   488  010D                     	;# 
   489  010D                     	;# 
   490  010E                     	;# 
   491  010F                     	;# 
   492  0185                     	;# 
   493  0186                     	;# 
   494  018C                     	;# 
   495  0000                     	;# 
   496  0001                     	;# 
   497  0002                     	;# 
   498  0003                     	;# 
   499  0004                     	;# 
   500  0005                     	;# 
   501  0006                     	;# 
   502  0007                     	;# 
   503  0009                     	;# 
   504  000A                     	;# 
   505  000B                     	;# 
   506  000C                     	;# 
   507  000D                     	;# 
   508  000E                     	;# 
   509  000E                     	;# 
   510  000F                     	;# 
   511  0010                     	;# 
   512  0011                     	;# 
   513  0012                     	;# 
   514  0013                     	;# 
   515  0014                     	;# 
   516  0015                     	;# 
   517  0015                     	;# 
   518  0016                     	;# 
   519  0017                     	;# 
   520  0018                     	;# 
   521  0019                     	;# 
   522  001A                     	;# 
   523  001B                     	;# 
   524  001B                     	;# 
   525  001C                     	;# 
   526  001D                     	;# 
   527  001E                     	;# 
   528  001F                     	;# 
   529  0081                     	;# 
   530  0085                     	;# 
   531  0086                     	;# 
   532  0087                     	;# 
   533  0089                     	;# 
   534  008C                     	;# 
   535  008D                     	;# 
   536  008E                     	;# 
   537  008F                     	;# 
   538  0090                     	;# 
   539  0091                     	;# 
   540  0092                     	;# 
   541  0093                     	;# 
   542  0093                     	;# 
   543  0094                     	;# 
   544  0095                     	;# 
   545  0095                     	;# 
   546  0096                     	;# 
   547  0096                     	;# 
   548  0098                     	;# 
   549  0099                     	;# 
   550  009C                     	;# 
   551  009D                     	;# 
   552  009F                     	;# 
   553  0108                     	;# 
   554  0109                     	;# 
   555  010C                     	;# 
   556  010C                     	;# 
   557  010D                     	;# 
   558  010D                     	;# 
   559  010E                     	;# 
   560  010F                     	;# 
   561  0185                     	;# 
   562  0186                     	;# 
   563  018C                     	;# 
   564  0000                     	;# 
   565  0001                     	;# 
   566  0002                     	;# 
   567  0003                     	;# 
   568  0004                     	;# 
   569  0005                     	;# 
   570  0006                     	;# 
   571  0007                     	;# 
   572  0009                     	;# 
   573  000A                     	;# 
   574  000B                     	;# 
   575  000C                     	;# 
   576  000D                     	;# 
   577  000E                     	;# 
   578  000E                     	;# 
   579  000F                     	;# 
   580  0010                     	;# 
   581  0011                     	;# 
   582  0012                     	;# 
   583  0013                     	;# 
   584  0014                     	;# 
   585  0015                     	;# 
   586  0015                     	;# 
   587  0016                     	;# 
   588  0017                     	;# 
   589  0018                     	;# 
   590  0019                     	;# 
   591  001A                     	;# 
   592  001B                     	;# 
   593  001B                     	;# 
   594  001C                     	;# 
   595  001D                     	;# 
   596  001E                     	;# 
   597  001F                     	;# 
   598  0081                     	;# 
   599  0085                     	;# 
   600  0086                     	;# 
   601  0087                     	;# 
   602  0089                     	;# 
   603  008C                     	;# 
   604  008D                     	;# 
   605  008E                     	;# 
   606  008F                     	;# 
   607  0090                     	;# 
   608  0091                     	;# 
   609  0092                     	;# 
   610  0093                     	;# 
   611  0093                     	;# 
   612  0094                     	;# 
   613  0095                     	;# 
   614  0095                     	;# 
   615  0096                     	;# 
   616  0096                     	;# 
   617  0098                     	;# 
   618  0099                     	;# 
   619  009C                     	;# 
   620  009D                     	;# 
   621  009F                     	;# 
   622  0108                     	;# 
   623  0109                     	;# 
   624  010C                     	;# 
   625  010C                     	;# 
   626  010D                     	;# 
   627  010D                     	;# 
   628  010E                     	;# 
   629  010F                     	;# 
   630  0185                     	;# 
   631  0186                     	;# 
   632  018C                     	;# 
   633  0000                     	;# 
   634  0001                     	;# 
   635  0002                     	;# 
   636  0003                     	;# 
   637  0004                     	;# 
   638  0005                     	;# 
   639  0006                     	;# 
   640  0007                     	;# 
   641  0009                     	;# 
   642  000A                     	;# 
   643  000B                     	;# 
   644  000C                     	;# 
   645  000D                     	;# 
   646  000E                     	;# 
   647  000E                     	;# 
   648  000F                     	;# 
   649  0010                     	;# 
   650  0011                     	;# 
   651  0012                     	;# 
   652  0013                     	;# 
   653  0014                     	;# 
   654  0015                     	;# 
   655  0015                     	;# 
   656  0016                     	;# 
   657  0017                     	;# 
   658  0018                     	;# 
   659  0019                     	;# 
   660  001A                     	;# 
   661  001B                     	;# 
   662  001B                     	;# 
   663  001C                     	;# 
   664  001D                     	;# 
   665  001E                     	;# 
   666  001F                     	;# 
   667  0081                     	;# 
   668  0085                     	;# 
   669  0086                     	;# 
   670  0087                     	;# 
   671  0089                     	;# 
   672  008C                     	;# 
   673  008D                     	;# 
   674  008E                     	;# 
   675  008F                     	;# 
   676  0090                     	;# 
   677  0091                     	;# 
   678  0092                     	;# 
   679  0093                     	;# 
   680  0093                     	;# 
   681  0094                     	;# 
   682  0095                     	;# 
   683  0095                     	;# 
   684  0096                     	;# 
   685  0096                     	;# 
   686  0098                     	;# 
   687  0099                     	;# 
   688  009C                     	;# 
   689  009D                     	;# 
   690  009F                     	;# 
   691  0108                     	;# 
   692  0109                     	;# 
   693  010C                     	;# 
   694  010C                     	;# 
   695  010D                     	;# 
   696  010D                     	;# 
   697  010E                     	;# 
   698  010F                     	;# 
   699  0185                     	;# 
   700  0186                     	;# 
   701  018C                     	;# 
   702  0000                     	;# 
   703  0001                     	;# 
   704  0002                     	;# 
   705  0003                     	;# 
   706  0004                     	;# 
   707  0005                     	;# 
   708  0006                     	;# 
   709  0007                     	;# 
   710  0009                     	;# 
   711  000A                     	;# 
   712  000B                     	;# 
   713  000C                     	;# 
   714  000D                     	;# 
   715  000E                     	;# 
   716  000E                     	;# 
   717  000F                     	;# 
   718  0010                     	;# 
   719  0011                     	;# 
   720  0012                     	;# 
   721  0013                     	;# 
   722  0014                     	;# 
   723  0015                     	;# 
   724  0015                     	;# 
   725  0016                     	;# 
   726  0017                     	;# 
   727  0018                     	;# 
   728  0019                     	;# 
   729  001A                     	;# 
   730  001B                     	;# 
   731  001B                     	;# 
   732  001C                     	;# 
   733  001D                     	;# 
   734  001E                     	;# 
   735  001F                     	;# 
   736  0081                     	;# 
   737  0085                     	;# 
   738  0086                     	;# 
   739  0087                     	;# 
   740  0089                     	;# 
   741  008C                     	;# 
   742  008D                     	;# 
   743  008E                     	;# 
   744  008F                     	;# 
   745  0090                     	;# 
   746  0091                     	;# 
   747  0092                     	;# 
   748  0093                     	;# 
   749  0093                     	;# 
   750  0094                     	;# 
   751  0095                     	;# 
   752  0095                     	;# 
   753  0096                     	;# 
   754  0096                     	;# 
   755  0098                     	;# 
   756  0099                     	;# 
   757  009C                     	;# 
   758  009D                     	;# 
   759  009F                     	;# 
   760  0108                     	;# 
   761  0109                     	;# 
   762  010C                     	;# 
   763  010C                     	;# 
   764  010D                     	;# 
   765  010D                     	;# 
   766  010E                     	;# 
   767  010F                     	;# 
   768  0185                     	;# 
   769  0186                     	;# 
   770  018C                     	;# 
   771  0000                     	;# 
   772  0001                     	;# 
   773  0002                     	;# 
   774  0003                     	;# 
   775  0004                     	;# 
   776  0005                     	;# 
   777  0006                     	;# 
   778  0007                     	;# 
   779  0009                     	;# 
   780  000A                     	;# 
   781  000B                     	;# 
   782  000C                     	;# 
   783  000D                     	;# 
   784  000E                     	;# 
   785  000E                     	;# 
   786  000F                     	;# 
   787  0010                     	;# 
   788  0011                     	;# 
   789  0012                     	;# 
   790  0013                     	;# 
   791  0014                     	;# 
   792  0015                     	;# 
   793  0015                     	;# 
   794  0016                     	;# 
   795  0017                     	;# 
   796  0018                     	;# 
   797  0019                     	;# 
   798  001A                     	;# 
   799  001B                     	;# 
   800  001B                     	;# 
   801  001C                     	;# 
   802  001D                     	;# 
   803  001E                     	;# 
   804  001F                     	;# 
   805  0081                     	;# 
   806  0085                     	;# 
   807  0086                     	;# 
   808  0087                     	;# 
   809  0089                     	;# 
   810  008C                     	;# 
   811  008D                     	;# 
   812  008E                     	;# 
   813  008F                     	;# 
   814  0090                     	;# 
   815  0091                     	;# 
   816  0092                     	;# 
   817  0093                     	;# 
   818  0093                     	;# 
   819  0094                     	;# 
   820  0095                     	;# 
   821  0095                     	;# 
   822  0096                     	;# 
   823  0096                     	;# 
   824  0098                     	;# 
   825  0099                     	;# 
   826  009C                     	;# 
   827  009D                     	;# 
   828  009F                     	;# 
   829  0108                     	;# 
   830  0109                     	;# 
   831  010C                     	;# 
   832  010C                     	;# 
   833  010D                     	;# 
   834  010D                     	;# 
   835  010E                     	;# 
   836  010F                     	;# 
   837  0185                     	;# 
   838  0186                     	;# 
   839  018C                     	;# 
   840  0000                     	;# 
   841  0001                     	;# 
   842  0002                     	;# 
   843  0003                     	;# 
   844  0004                     	;# 
   845  0005                     	;# 
   846  0006                     	;# 
   847  0007                     	;# 
   848  0009                     	;# 
   849  000A                     	;# 
   850  000B                     	;# 
   851  000C                     	;# 
   852  000D                     	;# 
   853  000E                     	;# 
   854  000E                     	;# 
   855  000F                     	;# 
   856  0010                     	;# 
   857  0011                     	;# 
   858  0012                     	;# 
   859  0013                     	;# 
   860  0014                     	;# 
   861  0015                     	;# 
   862  0015                     	;# 
   863  0016                     	;# 
   864  0017                     	;# 
   865  0018                     	;# 
   866  0019                     	;# 
   867  001A                     	;# 
   868  001B                     	;# 
   869  001B                     	;# 
   870  001C                     	;# 
   871  001D                     	;# 
   872  001E                     	;# 
   873  001F                     	;# 
   874  0081                     	;# 
   875  0085                     	;# 
   876  0086                     	;# 
   877  0087                     	;# 
   878  0089                     	;# 
   879  008C                     	;# 
   880  008D                     	;# 
   881  008E                     	;# 
   882  008F                     	;# 
   883  0090                     	;# 
   884  0091                     	;# 
   885  0092                     	;# 
   886  0093                     	;# 
   887  0093                     	;# 
   888  0094                     	;# 
   889  0095                     	;# 
   890  0095                     	;# 
   891  0096                     	;# 
   892  0096                     	;# 
   893  0098                     	;# 
   894  0099                     	;# 
   895  009C                     	;# 
   896  009D                     	;# 
   897  009F                     	;# 
   898  0108                     	;# 
   899  0109                     	;# 
   900  010C                     	;# 
   901  010C                     	;# 
   902  010D                     	;# 
   903  010D                     	;# 
   904  010E                     	;# 
   905  010F                     	;# 
   906  0185                     	;# 
   907  0186                     	;# 
   908  018C                     	;# 
   909  0000                     	;# 
   910  0001                     	;# 
   911  0002                     	;# 
   912  0003                     	;# 
   913  0004                     	;# 
   914  0005                     	;# 
   915  0006                     	;# 
   916  0007                     	;# 
   917  0009                     	;# 
   918  000A                     	;# 
   919  000B                     	;# 
   920  000C                     	;# 
   921  000D                     	;# 
   922  000E                     	;# 
   923  000E                     	;# 
   924  000F                     	;# 
   925  0010                     	;# 
   926  0011                     	;# 
   927  0012                     	;# 
   928  0013                     	;# 
   929  0014                     	;# 
   930  0015                     	;# 
   931  0015                     	;# 
   932  0016                     	;# 
   933  0017                     	;# 
   934  0018                     	;# 
   935  0019                     	;# 
   936  001A                     	;# 
   937  001B                     	;# 
   938  001B                     	;# 
   939  001C                     	;# 
   940  001D                     	;# 
   941  001E                     	;# 
   942  001F                     	;# 
   943  0081                     	;# 
   944  0085                     	;# 
   945  0086                     	;# 
   946  0087                     	;# 
   947  0089                     	;# 
   948  008C                     	;# 
   949  008D                     	;# 
   950  008E                     	;# 
   951  008F                     	;# 
   952  0090                     	;# 
   953  0091                     	;# 
   954  0092                     	;# 
   955  0093                     	;# 
   956  0093                     	;# 
   957  0094                     	;# 
   958  0095                     	;# 
   959  0095                     	;# 
   960  0096                     	;# 
   961  0096                     	;# 
   962  0098                     	;# 
   963  0099                     	;# 
   964  009C                     	;# 
   965  009D                     	;# 
   966  009F                     	;# 
   967  0108                     	;# 
   968  0109                     	;# 
   969  010C                     	;# 
   970  010C                     	;# 
   971  010D                     	;# 
   972  010D                     	;# 
   973  010E                     	;# 
   974  010F                     	;# 
   975  0185                     	;# 
   976  0186                     	;# 
   977  018C                     	;# 
   978  0000                     	;# 
   979  0001                     	;# 
   980  0002                     	;# 
   981  0003                     	;# 
   982  0004                     	;# 
   983  0005                     	;# 
   984  0006                     	;# 
   985  0007                     	;# 
   986  0009                     	;# 
   987  000A                     	;# 
   988  000B                     	;# 
   989  000C                     	;# 
   990  000D                     	;# 
   991  000E                     	;# 
   992  000E                     	;# 
   993  000F                     	;# 
   994  0010                     	;# 
   995  0011                     	;# 
   996  0012                     	;# 
   997  0013                     	;# 
   998  0014                     	;# 
   999  0015                     	;# 
  1000  0015                     	;# 
  1001  0016                     	;# 
  1002  0017                     	;# 
  1003  0018                     	;# 
  1004  0019                     	;# 
  1005  001A                     	;# 
  1006  001B                     	;# 
  1007  001B                     	;# 
  1008  001C                     	;# 
  1009  001D                     	;# 
  1010  001E                     	;# 
  1011  001F                     	;# 
  1012  0081                     	;# 
  1013  0085                     	;# 
  1014  0086                     	;# 
  1015  0087                     	;# 
  1016  0089                     	;# 
  1017  008C                     	;# 
  1018  008D                     	;# 
  1019  008E                     	;# 
  1020  008F                     	;# 
  1021  0090                     	;# 
  1022  0091                     	;# 
  1023  0092                     	;# 
  1024  0093                     	;# 
  1025  0093                     	;# 
  1026  0094                     	;# 
  1027  0095                     	;# 
  1028  0095                     	;# 
  1029  0096                     	;# 
  1030  0096                     	;# 
  1031  0098                     	;# 
  1032  0099                     	;# 
  1033  009C                     	;# 
  1034  009D                     	;# 
  1035  009F                     	;# 
  1036  0108                     	;# 
  1037  0109                     	;# 
  1038  010C                     	;# 
  1039  010C                     	;# 
  1040  010D                     	;# 
  1041  010D                     	;# 
  1042  010E                     	;# 
  1043  010F                     	;# 
  1044  0185                     	;# 
  1045  0186                     	;# 
  1046  018C                     	;# 
  1047  0000                     	;# 
  1048  0001                     	;# 
  1049  0002                     	;# 
  1050  0003                     	;# 
  1051  0004                     	;# 
  1052  0005                     	;# 
  1053  0006                     	;# 
  1054  0007                     	;# 
  1055  0009                     	;# 
  1056  000A                     	;# 
  1057  000B                     	;# 
  1058  000C                     	;# 
  1059  000D                     	;# 
  1060  000E                     	;# 
  1061  000E                     	;# 
  1062  000F                     	;# 
  1063  0010                     	;# 
  1064  0011                     	;# 
  1065  0012                     	;# 
  1066  0013                     	;# 
  1067  0014                     	;# 
  1068  0015                     	;# 
  1069  0015                     	;# 
  1070  0016                     	;# 
  1071  0017                     	;# 
  1072  0018                     	;# 
  1073  0019                     	;# 
  1074  001A                     	;# 
  1075  001B                     	;# 
  1076  001B                     	;# 
  1077  001C                     	;# 
  1078  001D                     	;# 
  1079  001E                     	;# 
  1080  001F                     	;# 
  1081  0081                     	;# 
  1082  0085                     	;# 
  1083  0086                     	;# 
  1084  0087                     	;# 
  1085  0089                     	;# 
  1086  008C                     	;# 
  1087  008D                     	;# 
  1088  008E                     	;# 
  1089  008F                     	;# 
  1090  0090                     	;# 
  1091  0091                     	;# 
  1092  0092                     	;# 
  1093  0093                     	;# 
  1094  0093                     	;# 
  1095  0094                     	;# 
  1096  0095                     	;# 
  1097  0095                     	;# 
  1098  0096                     	;# 
  1099  0096                     	;# 
  1100  0098                     	;# 
  1101  0099                     	;# 
  1102  009C                     	;# 
  1103  009D                     	;# 
  1104  009F                     	;# 
  1105  0108                     	;# 
  1106  0109                     	;# 
  1107  010C                     	;# 
  1108  010C                     	;# 
  1109  010D                     	;# 
  1110  010D                     	;# 
  1111  010E                     	;# 
  1112  010F                     	;# 
  1113  0185                     	;# 
  1114  0186                     	;# 
  1115  018C                     	;# 
  1116  0000                     	;# 
  1117  0001                     	;# 
  1118  0002                     	;# 
  1119  0003                     	;# 
  1120  0004                     	;# 
  1121  0005                     	;# 
  1122  0006                     	;# 
  1123  0007                     	;# 
  1124  0009                     	;# 
  1125  000A                     	;# 
  1126  000B                     	;# 
  1127  000C                     	;# 
  1128  000D                     	;# 
  1129  000E                     	;# 
  1130  000E                     	;# 
  1131  000F                     	;# 
  1132  0010                     	;# 
  1133  0011                     	;# 
  1134  0012                     	;# 
  1135  0013                     	;# 
  1136  0014                     	;# 
  1137  0015                     	;# 
  1138  0015                     	;# 
  1139  0016                     	;# 
  1140  0017                     	;# 
  1141  0018                     	;# 
  1142  0019                     	;# 
  1143  001A                     	;# 
  1144  001B                     	;# 
  1145  001B                     	;# 
  1146  001C                     	;# 
  1147  001D                     	;# 
  1148  001E                     	;# 
  1149  001F                     	;# 
  1150  0081                     	;# 
  1151  0085                     	;# 
  1152  0086                     	;# 
  1153  0087                     	;# 
  1154  0089                     	;# 
  1155  008C                     	;# 
  1156  008D                     	;# 
  1157  008E                     	;# 
  1158  008F                     	;# 
  1159  0090                     	;# 
  1160  0091                     	;# 
  1161  0092                     	;# 
  1162  0093                     	;# 
  1163  0093                     	;# 
  1164  0094                     	;# 
  1165  0095                     	;# 
  1166  0095                     	;# 
  1167  0096                     	;# 
  1168  0096                     	;# 
  1169  0098                     	;# 
  1170  0099                     	;# 
  1171  009C                     	;# 
  1172  009D                     	;# 
  1173  009F                     	;# 
  1174  0108                     	;# 
  1175  0109                     	;# 
  1176  010C                     	;# 
  1177  010C                     	;# 
  1178  010D                     	;# 
  1179  010D                     	;# 
  1180  010E                     	;# 
  1181  010F                     	;# 
  1182  0185                     	;# 
  1183  0186                     	;# 
  1184  018C                     	;# 
  1185  0000                     	;# 
  1186  0001                     	;# 
  1187  0002                     	;# 
  1188  0003                     	;# 
  1189  0004                     	;# 
  1190  0005                     	;# 
  1191  0006                     	;# 
  1192  0007                     	;# 
  1193  0009                     	;# 
  1194  000A                     	;# 
  1195  000B                     	;# 
  1196  000C                     	;# 
  1197  000D                     	;# 
  1198  000E                     	;# 
  1199  000E                     	;# 
  1200  000F                     	;# 
  1201  0010                     	;# 
  1202  0011                     	;# 
  1203  0012                     	;# 
  1204  0013                     	;# 
  1205  0014                     	;# 
  1206  0015                     	;# 
  1207  0015                     	;# 
  1208  0016                     	;# 
  1209  0017                     	;# 
  1210  0018                     	;# 
  1211  0019                     	;# 
  1212  001A                     	;# 
  1213  001B                     	;# 
  1214  001B                     	;# 
  1215  001C                     	;# 
  1216  001D                     	;# 
  1217  001E                     	;# 
  1218  001F                     	;# 
  1219  0081                     	;# 
  1220  0085                     	;# 
  1221  0086                     	;# 
  1222  0087                     	;# 
  1223  0089                     	;# 
  1224  008C                     	;# 
  1225  008D                     	;# 
  1226  008E                     	;# 
  1227  008F                     	;# 
  1228  0090                     	;# 
  1229  0091                     	;# 
  1230  0092                     	;# 
  1231  0093                     	;# 
  1232  0093                     	;# 
  1233  0094                     	;# 
  1234  0095                     	;# 
  1235  0095                     	;# 
  1236  0096                     	;# 
  1237  0096                     	;# 
  1238  0098                     	;# 
  1239  0099                     	;# 
  1240  009C                     	;# 
  1241  009D                     	;# 
  1242  009F                     	;# 
  1243  0108                     	;# 
  1244  0109                     	;# 
  1245  010C                     	;# 
  1246  010C                     	;# 
  1247  010D                     	;# 
  1248  010D                     	;# 
  1249  010E                     	;# 
  1250  010F                     	;# 
  1251  0185                     	;# 
  1252  0186                     	;# 
  1253  018C                     	;# 
  1254  0000                     	;# 
  1255  0001                     	;# 
  1256  0002                     	;# 
  1257  0003                     	;# 
  1258  0004                     	;# 
  1259  0005                     	;# 
  1260  0006                     	;# 
  1261  0007                     	;# 
  1262  0009                     	;# 
  1263  000A                     	;# 
  1264  000B                     	;# 
  1265  000C                     	;# 
  1266  000D                     	;# 
  1267  000E                     	;# 
  1268  000E                     	;# 
  1269  000F                     	;# 
  1270  0010                     	;# 
  1271  0011                     	;# 
  1272  0012                     	;# 
  1273  0013                     	;# 
  1274  0014                     	;# 
  1275  0015                     	;# 
  1276  0015                     	;# 
  1277  0016                     	;# 
  1278  0017                     	;# 
  1279  0018                     	;# 
  1280  0019                     	;# 
  1281  001A                     	;# 
  1282  001B                     	;# 
  1283  001B                     	;# 
  1284  001C                     	;# 
  1285  001D                     	;# 
  1286  001E                     	;# 
  1287  001F                     	;# 
  1288  0081                     	;# 
  1289  0085                     	;# 
  1290  0086                     	;# 
  1291  0087                     	;# 
  1292  0089                     	;# 
  1293  008C                     	;# 
  1294  008D                     	;# 
  1295  008E                     	;# 
  1296  008F                     	;# 
  1297  0090                     	;# 
  1298  0091                     	;# 
  1299  0092                     	;# 
  1300  0093                     	;# 
  1301  0093                     	;# 
  1302  0094                     	;# 
  1303  0095                     	;# 
  1304  0095                     	;# 
  1305  0096                     	;# 
  1306  0096                     	;# 
  1307  0098                     	;# 
  1308  0099                     	;# 
  1309  009C                     	;# 
  1310  009D                     	;# 
  1311  009F                     	;# 
  1312  0108                     	;# 
  1313  0109                     	;# 
  1314  010C                     	;# 
  1315  010C                     	;# 
  1316  010D                     	;# 
  1317  010D                     	;# 
  1318  010E                     	;# 
  1319  010F                     	;# 
  1320  0185                     	;# 
  1321  0186                     	;# 
  1322  018C                     	;# 
  1323  001F                     _ADCON0	set	31
  1324  001E                     _ADRES	set	30
  1325  0005                     _PORTA	set	5
  1326  0006                     _PORTB	set	6
  1327  0007                     _PORTC	set	7
  1328  0010                     _T1CON	set	16
  1329  000F                     _TMR1H	set	15
  1330  000E                     _TMR1L	set	14
  1331  005F                     _GIE	set	95
  1332  00F9                     _GO_nDONE	set	249
  1333  005E                     _PEIE	set	94
  1334  002D                     _RA5	set	45
  1335  002E                     _RA6	set	46
  1336  002F                     _RA7	set	47
  1337  0032                     _RB2	set	50
  1338  0033                     _RB3	set	51
  1339  0060                     _TMR1IF	set	96
  1340  009F                     _ADCON1	set	159
  1341  009D                     _FVRCON	set	157
  1342  0090                     _OSCCON	set	144
  1343  0085                     _TRISA	set	133
  1344  0086                     _TRISB	set	134
  1345  0087                     _TRISC	set	135
  1346  0095                     _WPUB	set	149
  1347  0408                     _PS0	set	1032
  1348  0409                     _PS1	set	1033
  1349  040A                     _PS2	set	1034
  1350  040B                     _PSA	set	1035
  1351  0460                     _TMR1IE	set	1120
  1352  0185                     _ANSELA	set	389
  1353  0186                     _ANSELB	set	390
  1354                           
  1355                           	psect	text0
  1356  0000                     __ptext0:	
  1357                           ; #config settings
  1358                           
  1359                           
  1360                           ;psect for function _TMR1_ISR
  1361  0000                     
  1362                           	psect	cinit
  1363  0013                     start_initialization:	
  1364  0013                     __initialization:	
  1365                           
  1366                           ; Clear objects allocated to COMMON
  1367  0013  01F6               	clrf	__pbssCOMMON& (0+127)
  1368  0014  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1369  0015  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1370  0016  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  1371                           
  1372                           ; Clear objects allocated to BANK0
  1373  0017  1383               	bcf	3,7	;select IRP bank0
  1374  0018  3020               	movlw	low __pbssBANK0
  1375  0019  0084               	movwf	4
  1376  001A  304D               	movlw	low (__pbssBANK0+45)
  1377  001B  158A  22F0  118A   	fcall	clear_ram0
  1378                           
  1379                           ; Clear objects allocated to BANK1
  1380  001E  30A0               	movlw	low __pbssBANK1
  1381  001F  0084               	movwf	4
  1382  0020  30E6               	movlw	low (__pbssBANK1+70)
  1383  0021  158A  22F0         	fcall	clear_ram0
  1384  0023                     end_of_initialization:	
  1385                           ;End of C runtime variable initialization code
  1386                           
  1387  0023                     __end_of__initialization:	
  1388  0023  0183               	clrf	3
  1389  0024  158A  2F9A         	ljmp	_main	;jump to C main() function
  1390                           
  1391                           	psect	bssCOMMON
  1392  0076                     __pbssCOMMON:	
  1393  0076                     _LED:	
  1394  0076                     	ds	1
  1395  0077                     _Light:	
  1396  0077                     	ds	1
  1397  0078                     _Lights:	
  1398  0078                     	ds	1
  1399  0079                     _LightsControl:	
  1400  0079                     	ds	1
  1401                           
  1402                           	psect	bssBANK0
  1403  0020                     __pbssBANK0:	
  1404  0020                     _SYSC:	
  1405  0020                     	ds	5
  1406  0025                     _myMain:	
  1407  0025                     	ds	5
  1408  002A                     _PIRLED:	
  1409  002A                     	ds	4
  1410  002E                     __CDS:	
  1411  002E                     	ds	4
  1412  0032                     _Timer1:	
  1413  0032                     	ds	3
  1414  0035                     _WDT:	
  1415  0035                     	ds	2
  1416  0037                     _Cmd:	
  1417  0037                     	ds	1
  1418  0038                     _SwDetect:	
  1419  0038                     	ds	1
  1420  0039                     _Temp:	
  1421  0039                     	ds	7
  1422  0040                     _Lights1:	
  1423  0040                     	ds	5
  1424  0045                     _VarLED1:	
  1425  0045                     	ds	4
  1426  0049                     _VarLED2:	
  1427  0049                     	ds	4
  1428                           
  1429                           	psect	bssBANK1
  1430  00A0                     __pbssBANK1:	
  1431  00A0                     __PIR:	
  1432  00A0                     	ds	42
  1433  00CA                     _Load:	
  1434  00CA                     	ds	28
  1435                           
  1436                           	psect	clrtext
  1437  0AF0                     clear_ram0:	
  1438                           ;	Called with FSR containing the base address, and
  1439                           ;	W with the last address+1
  1440                           
  1441  0AF0  0064               	clrwdt	;clear the watchdog before getting into this loop
  1442  0AF1                     clrloop0:	
  1443  0AF1  0180               	clrf	0	;clear RAM location pointed to by FSR
  1444  0AF2  0A84               	incf	4,f	;increment pointer
  1445  0AF3  0604               	xorwf	4,w	;XOR with final address
  1446  0AF4  1903               	btfsc	3,2	;have we reached the end yet?
  1447  0AF5  3400               	retlw	0	;all done for this memory range, return
  1448  0AF6  0604               	xorwf	4,w	;XOR again to restore value
  1449  0AF7  2AF1               	goto	clrloop0	;do the next byte
  1450                           
  1451                           	psect	cstackCOMMON
  1452  0070                     __pcstackCOMMON:	
  1453  0070                     ?_setLED_Initialization:	
  1454  0070                     ?_setPIRLED_Main:	
  1455                           ; 0 bytes @ 0x0
  1456                           
  1457  0070                     ?_Fosc_Set:	
  1458                           ; 0 bytes @ 0x0
  1459                           
  1460  0070                     ?_IO_Set:	
  1461                           ; 0 bytes @ 0x0
  1462                           
  1463  0070                     ?_TMR1_Set:	
  1464                           ; 0 bytes @ 0x0
  1465                           
  1466  0070                     ?_ADC_Set:	
  1467                           ; 0 bytes @ 0x0
  1468                           
  1469  0070                     ?_WDT_Set:	
  1470                           ; 0 bytes @ 0x0
  1471                           
  1472  0070                     ?_TMR1_ISR:	
  1473                           ; 0 bytes @ 0x0
  1474                           
  1475  0070                     ??_TMR1_ISR:	
  1476                           ; 0 bytes @ 0x0
  1477                           
  1478  0070                     ?_Timeout_Counter:	
  1479                           ; 0 bytes @ 0x0
  1480                           
  1481  0070                     ?_set_TimeoutCleared:	
  1482                           ; 0 bytes @ 0x0
  1483                           
  1484  0070                     ?_WDT_Clearing:	
  1485                           ; 0 bytes @ 0x0
  1486                           
  1487  0070                     ?_myMain_Initialization:	
  1488                           ; 0 bytes @ 0x0
  1489                           
  1490  0070                     ?_SYSC_Initialization:	
  1491                           ; 0 bytes @ 0x0
  1492                           
  1493  0070                     ?_Temp_Initialization:	
  1494                           ; 0 bytes @ 0x0
  1495                           
  1496  0070                     ?_Load_Initialization:	
  1497                           ; 0 bytes @ 0x0
  1498                           
  1499  0070                     ?_Lights_Initialization:	
  1500                           ; 0 bytes @ 0x0
  1501                           
  1502  0070                     ?_PIR_Initialization:	
  1503                           ; 0 bytes @ 0x0
  1504                           
  1505  0070                     ?_DetectSYSC_Signal:	
  1506                           ; 0 bytes @ 0x0
  1507                           
  1508  0070                     ?_getLoad_AD:	
  1509                           ; 0 bytes @ 0x0
  1510                           
  1511  0070                     ?_getTemp_AD:	
  1512                           ; 0 bytes @ 0x0
  1513                           
  1514  0070                     ?_my_MainTimer:	
  1515                           ; 0 bytes @ 0x0
  1516                           
  1517  0070                     ?_SYSC_Main:	
  1518                           ; 0 bytes @ 0x0
  1519                           
  1520  0070                     ?_Temp_Main:	
  1521                           ; 0 bytes @ 0x0
  1522                           
  1523  0070                     ?_Load_Main:	
  1524                           ; 0 bytes @ 0x0
  1525                           
  1526  0070                     ?_Lights_Main:	
  1527                           ; 0 bytes @ 0x0
  1528                           
  1529  0070                     ?_PIR_Main:	
  1530                           ; 0 bytes @ 0x0
  1531                           
  1532  0070                     ?_Exception_Main:	
  1533                           ; 0 bytes @ 0x0
  1534                           
  1535  0070                     ?_setLights_SwOn:	
  1536                           ; 0 bytes @ 0x0
  1537                           
  1538  0070                     ?_setLights_SwOff:	
  1539                           ; 0 bytes @ 0x0
  1540                           
  1541  0070                     ?_setLoad_AH_AL_Restore:	
  1542                           ; 0 bytes @ 0x0
  1543                           
  1544  0070                     ?_setTemp_Initialization:	
  1545                           ; 0 bytes @ 0x0
  1546                           
  1547  0070                     ?_setTemp_Main:	
  1548                           ; 0 bytes @ 0x0
  1549                           
  1550  0070                     ?_setSYSC_Initialization:	
  1551                           ; 0 bytes @ 0x0
  1552                           
  1553  0070                     ?_setSYSC_Main:	
  1554                           ; 0 bytes @ 0x0
  1555                           
  1556  0070                     ?_setLights_Initialization:	
  1557                           ; 0 bytes @ 0x0
  1558                           
  1559  0070                     ?_setLights_Main:	
  1560                           ; 0 bytes @ 0x0
  1561                           
  1562  0070                     ?_Lights_Control:	
  1563                           ; 0 bytes @ 0x0
  1564                           
  1565  0070                     ?_setLights_Line:	
  1566                           ; 0 bytes @ 0x0
  1567                           
  1568  0070                     ?_CDS_Initialization:	
  1569                           ; 0 bytes @ 0x0
  1570                           
  1571  0070                     ?_CDS_Main:	
  1572                           ; 0 bytes @ 0x0
  1573                           
  1574  0070                     ?_LedPointSelect:	
  1575                           ; 0 bytes @ 0x0
  1576                           
  1577  0070                     ?_LED_Initialization:	
  1578                           ; 0 bytes @ 0x0
  1579                           
  1580  0070                     ?_LED_Main:	
  1581                           ; 0 bytes @ 0x0
  1582                           
  1583  0070                     ?_Mcu_Initialization:	
  1584                           ; 0 bytes @ 0x0
  1585                           
  1586  0070                     ?_ISR:	
  1587                           ; 0 bytes @ 0x0
  1588                           
  1589  0070                     ??_ISR:	
  1590                           ; 0 bytes @ 0x0
  1591                           
  1592  0070                     ?_WDT_Main:	
  1593                           ; 0 bytes @ 0x0
  1594                           
  1595  0070                     ?_LightsPointSelect:	
  1596                           ; 0 bytes @ 0x0
  1597                           
  1598  0070                     ?_getLights_Status:	
  1599                           ; 0 bytes @ 0x0
  1600                           
  1601  0070                     ?_getAll_Lights_Line:	
  1602                           ; 1 bytes @ 0x0
  1603                           
  1604  0070                     ?_getLight_LoadGO:	
  1605                           ; 1 bytes @ 0x0
  1606                           
  1607  0070                     ?_getLight_Load_Status:	
  1608                           ; 1 bytes @ 0x0
  1609                           
  1610  0070                     ?_getLights_Allow_Condition:	
  1611                           ; 1 bytes @ 0x0
  1612                           
  1613  0070                     ?_getCDS_Status:	
  1614                           ; 1 bytes @ 0x0
  1615                           
  1616  0070                     ?_getMain_All_LightsStatus:	
  1617                           ; 1 bytes @ 0x0
  1618                           
  1619  0070                     ?_getMain_All_Error_Status:	
  1620                           ; 1 bytes @ 0x0
  1621                           
  1622  0070                     ?_getMain_Lights_Count:	
  1623                           ; 1 bytes @ 0x0
  1624                           
  1625  0070                     ?_getLoad_OK:	
  1626                           ; 1 bytes @ 0x0
  1627                           
  1628  0070                     getLights_Allow_Condition@lights:	
  1629                           ; 1 bytes @ 0x0
  1630                           
  1631                           
  1632                           ; 1 bytes @ 0x0
  1633  0070                     	ds	4
  1634  0074                     ??_Fosc_Set:	
  1635  0074                     ??_IO_Set:	
  1636                           ; 0 bytes @ 0x4
  1637                           
  1638  0074                     ??_TMR1_Set:	
  1639                           ; 0 bytes @ 0x4
  1640                           
  1641  0074                     ??_ADC_Set:	
  1642                           ; 0 bytes @ 0x4
  1643                           
  1644  0074                     ??_WDT_Set:	
  1645                           ; 0 bytes @ 0x4
  1646                           
  1647  0074                     ??_Timeout_Counter:	
  1648                           ; 0 bytes @ 0x4
  1649                           
  1650  0074                     ??_set_TimeoutCleared:	
  1651                           ; 0 bytes @ 0x4
  1652                           
  1653  0074                     ??_WDT_Clearing:	
  1654                           ; 0 bytes @ 0x4
  1655                           
  1656  0074                     ??_myMain_Initialization:	
  1657                           ; 0 bytes @ 0x4
  1658                           
  1659  0074                     ??_SYSC_Initialization:	
  1660                           ; 0 bytes @ 0x4
  1661                           
  1662  0074                     ??_Temp_Initialization:	
  1663                           ; 0 bytes @ 0x4
  1664                           
  1665  0074                     ??_PIR_Initialization:	
  1666                           ; 0 bytes @ 0x4
  1667                           
  1668  0074                     ??_DetectSYSC_Signal:	
  1669                           ; 0 bytes @ 0x4
  1670                           
  1671  0074                     ??_my_MainTimer:	
  1672                           ; 0 bytes @ 0x4
  1673                           
  1674  0074                     ??_getAll_Lights_Line:	
  1675                           ; 0 bytes @ 0x4
  1676                           
  1677  0074                     ??_setLoad_AH_AL_Restore:	
  1678                           ; 0 bytes @ 0x4
  1679                           
  1680  0074                     ??_getLight_LoadGO:	
  1681                           ; 0 bytes @ 0x4
  1682                           
  1683  0074                     ??_getLight_Load_Status:	
  1684                           ; 0 bytes @ 0x4
  1685                           
  1686  0074                     ??_setTemp_Initialization:	
  1687                           ; 0 bytes @ 0x4
  1688                           
  1689  0074                     ??_setSYSC_Initialization:	
  1690                           ; 0 bytes @ 0x4
  1691                           
  1692  0074                     ??_setLights_Line:	
  1693                           ; 0 bytes @ 0x4
  1694                           
  1695  0074                     ??_CDS_Initialization:	
  1696                           ; 0 bytes @ 0x4
  1697                           
  1698  0074                     ??_getCDS_Status:	
  1699                           ; 0 bytes @ 0x4
  1700                           
  1701  0074                     ??_LedPointSelect:	
  1702                           ; 0 bytes @ 0x4
  1703                           
  1704  0074                     ??_WDT_Main:	
  1705                           ; 0 bytes @ 0x4
  1706                           
  1707  0074                     ??_getMain_All_LightsStatus:	
  1708                           ; 0 bytes @ 0x4
  1709                           
  1710  0074                     ??_getMain_All_Error_Status:	
  1711                           ; 0 bytes @ 0x4
  1712                           
  1713  0074                     ??_getMain_Lights_Count:	
  1714                           ; 0 bytes @ 0x4
  1715                           
  1716  0074                     ??_getLoad_OK:	
  1717                           ; 0 bytes @ 0x4
  1718                           
  1719  0074                     ??_LightsPointSelect:	
  1720                           ; 0 bytes @ 0x4
  1721                           
  1722  0074                     ??___wmul:	
  1723                           ; 0 bytes @ 0x4
  1724                           
  1725  0074                     ??___awdiv:	
  1726                           ; 0 bytes @ 0x4
  1727                           
  1728  0074                     ??___lwdiv:	
  1729                           ; 0 bytes @ 0x4
  1730                           
  1731  0074                     ?_getAD:	
  1732                           ; 0 bytes @ 0x4
  1733                           
  1734  0074                     getCDS_Status@status:	
  1735                           ; 1 bytes @ 0x4
  1736                           
  1737  0074                     getAD@adcon1:	
  1738                           ; 1 bytes @ 0x4
  1739                           
  1740  0074                     getMain_All_LightsStatus@status:	
  1741                           ; 1 bytes @ 0x4
  1742                           
  1743  0074                     getMain_Lights_Count@count:	
  1744                           ; 1 bytes @ 0x4
  1745                           
  1746  0074                     getLoad_OK@ok:	
  1747                           ; 1 bytes @ 0x4
  1748                           
  1749  0074                     setLights_Line@lights:	
  1750                           ; 1 bytes @ 0x4
  1751                           
  1752  0074                     getAll_Lights_Line@line:	
  1753                           ; 1 bytes @ 0x4
  1754                           
  1755  0074                     getLight_LoadGO@loadgo:	
  1756                           ; 1 bytes @ 0x4
  1757                           
  1758  0074                     getLight_Load_Status@loadstatus:	
  1759                           ; 1 bytes @ 0x4
  1760                           
  1761  0074                     ___wmul@product:	
  1762                           ; 1 bytes @ 0x4
  1763                           
  1764                           
  1765                           ; 2 bytes @ 0x4
  1766  0074                     	ds	1
  1767  0075                     ??_getAD:	
  1768  0075                     ??_SYSC_Main:	
  1769                           ; 0 bytes @ 0x5
  1770                           
  1771  0075                     ??_setTemp_Main:	
  1772                           ; 0 bytes @ 0x5
  1773                           
  1774  0075                     ??_setSYSC_Main:	
  1775                           ; 0 bytes @ 0x5
  1776                           
  1777  0075                     ??_getLights_Allow_Condition:	
  1778                           ; 0 bytes @ 0x5
  1779                           
  1780  0075                     ??_Mcu_Initialization:	
  1781                           ; 0 bytes @ 0x5
  1782                           
  1783  0075                     LedPointSelect@led:	
  1784                           ; 0 bytes @ 0x5
  1785                           
  1786  0075                     getAD@adcon0:	
  1787                           ; 1 bytes @ 0x5
  1788                           
  1789  0075                     getMain_Lights_Count@status1:	
  1790                           ; 1 bytes @ 0x5
  1791                           
  1792  0075                     setLoad_AH_AL_Restore@i:	
  1793                           ; 1 bytes @ 0x5
  1794                           
  1795  0075                     LightsPointSelect@lights:	
  1796                           ; 1 bytes @ 0x5
  1797                           
  1798                           
  1799                           ; 1 bytes @ 0x5
  1800  0075                     	ds	1
  1801  0076                     ??_setLED_Initialization:	
  1802  0076                     ??_setLED:	
  1803                           ; 0 bytes @ 0x6
  1804                           
  1805  0076                     ??_Load_Initialization:	
  1806                           ; 0 bytes @ 0x6
  1807                           
  1808  0076                     ??_Lights_Initialization:	
  1809                           ; 0 bytes @ 0x6
  1810                           
  1811  0076                     ??_Temp_Main:	
  1812                           ; 0 bytes @ 0x6
  1813                           
  1814  0076                     ??_Lights_Main:	
  1815                           ; 0 bytes @ 0x6
  1816                           
  1817  0076                     ??_getLights_Status:	
  1818                           ; 0 bytes @ 0x6
  1819                           
  1820  0076                     ??_setLights_SwOn:	
  1821                           ; 0 bytes @ 0x6
  1822                           
  1823  0076                     ??_setLights_SwOff:	
  1824                           ; 0 bytes @ 0x6
  1825                           
  1826  0076                     ??_setLights_Initialization:	
  1827                           ; 0 bytes @ 0x6
  1828                           
  1829  0076                     ??_setLights_Main:	
  1830                           ; 0 bytes @ 0x6
  1831                           
  1832  0076                     ??_LED_Initialization:	
  1833                           ; 0 bytes @ 0x6
  1834                           
  1835  0076                     ??_LED_Main:	
  1836                           ; 0 bytes @ 0x6
  1837                           
  1838                           
  1839                           	psect	cstackBANK0
  1840  004D                     __pcstackBANK0:	
  1841                           ; 0 bytes @ 0x6
  1842                           
  1843  004D                     ?_setLED:	
  1844  004D                     ??_getLoad_AD:	
  1845                           ; 0 bytes @ 0x0
  1846                           
  1847  004D                     ??_getTemp_AD:	
  1848                           ; 0 bytes @ 0x0
  1849                           
  1850  004D                     ??_CDS_Main:	
  1851                           ; 0 bytes @ 0x0
  1852                           
  1853  004D                     ?_getCDS_AD:	
  1854                           ; 0 bytes @ 0x0
  1855                           
  1856  004D                     ?_setLights_Trigger:	
  1857                           ; 0 bytes @ 0x0
  1858                           
  1859  004D                     ?___wmul:	
  1860                           ; 0 bytes @ 0x0
  1861                           
  1862  004D                     ?___awdiv:	
  1863                           ; 2 bytes @ 0x0
  1864                           
  1865  004D                     ?___lwdiv:	
  1866                           ; 2 bytes @ 0x0
  1867                           
  1868  004D                     getCDS_AD@channel2:	
  1869                           ; 2 bytes @ 0x0
  1870                           
  1871  004D                     setLED@command:	
  1872                           ; 1 bytes @ 0x0
  1873                           
  1874  004D                     setLights_Initialization@lights:	
  1875                           ; 1 bytes @ 0x0
  1876                           
  1877  004D                     getLights_Status@lights:	
  1878                           ; 1 bytes @ 0x0
  1879                           
  1880  004D                     setLights_Trigger@command:	
  1881                           ; 1 bytes @ 0x0
  1882                           
  1883  004D                     getLights_Allow_Condition@allow:	
  1884                           ; 1 bytes @ 0x0
  1885                           
  1886  004D                     _getMain_All_Error_Status$2127:	
  1887                           ; 1 bytes @ 0x0
  1888                           
  1889  004D                     ___wmul@multiplier:	
  1890                           ; 2 bytes @ 0x0
  1891                           
  1892  004D                     ___awdiv@divisor:	
  1893                           ; 2 bytes @ 0x0
  1894                           
  1895  004D                     ___lwdiv@divisor:	
  1896                           ; 2 bytes @ 0x0
  1897                           
  1898                           
  1899                           ; 2 bytes @ 0x0
  1900  004D                     	ds	1
  1901  004E                     ??_getCDS_AD:	
  1902  004E                     ??_setLights_Trigger:	
  1903                           ; 0 bytes @ 0x1
  1904                           
  1905  004E                     setLED@led:	
  1906                           ; 0 bytes @ 0x1
  1907                           
  1908  004E                     getLights_Status@status:	
  1909                           ; 1 bytes @ 0x1
  1910                           
  1911  004E                     _getLights_Allow_Condition$4224:	
  1912                           ; 1 bytes @ 0x1
  1913                           
  1914                           
  1915                           ; 1 bytes @ 0x1
  1916  004E                     	ds	1
  1917  004F                     ??_setPIRLED_Main:	
  1918  004F                     ?_setLights:	
  1919                           ; 0 bytes @ 0x2
  1920                           
  1921  004F                     setLED_Initialization@led:	
  1922                           ; 0 bytes @ 0x2
  1923                           
  1924  004F                     getLoad_AD@channel:	
  1925                           ; 1 bytes @ 0x2
  1926                           
  1927  004F                     getTemp_AD@channel:	
  1928                           ; 1 bytes @ 0x2
  1929                           
  1930  004F                     setLights@status:	
  1931                           ; 1 bytes @ 0x2
  1932                           
  1933  004F                     setLights_Trigger@lights:	
  1934                           ; 1 bytes @ 0x2
  1935                           
  1936  004F                     _getMain_All_Error_Status$2128:	
  1937                           ; 1 bytes @ 0x2
  1938                           
  1939  004F                     ___wmul@multiplicand:	
  1940                           ; 2 bytes @ 0x2
  1941                           
  1942  004F                     ___awdiv@dividend:	
  1943                           ; 2 bytes @ 0x2
  1944                           
  1945  004F                     ___lwdiv@dividend:	
  1946                           ; 2 bytes @ 0x2
  1947                           
  1948                           
  1949                           ; 2 bytes @ 0x2
  1950  004F                     	ds	1
  1951  0050                     ??_setLights:	
  1952  0050                     getCDS_AD@i:	
  1953                           ; 0 bytes @ 0x3
  1954                           
  1955  0050                     setPIRLED_Main@count:	
  1956                           ; 1 bytes @ 0x3
  1957                           
  1958  0050                     getLoad_AD@k:	
  1959                           ; 1 bytes @ 0x3
  1960                           
  1961  0050                     getTemp_AD@ADRES:	
  1962                           ; 1 bytes @ 0x3
  1963                           
  1964  0050                     setLights_SwOn@sw:	
  1965                           ; 1 bytes @ 0x3
  1966                           
  1967  0050                     setLights_SwOff@sw:	
  1968                           ; 1 bytes @ 0x3
  1969                           
  1970                           
  1971                           ; 1 bytes @ 0x3
  1972  0050                     	ds	1
  1973  0051                     getCDS_AD@j:	
  1974  0051                     getMain_All_Error_Status@command:	
  1975                           ; 1 bytes @ 0x4
  1976                           
  1977  0051                     getLoad_AD@j:	
  1978                           ; 1 bytes @ 0x4
  1979                           
  1980  0051                     setLights@lights:	
  1981                           ; 1 bytes @ 0x4
  1982                           
  1983  0051                     ___awdiv@counter:	
  1984                           ; 1 bytes @ 0x4
  1985                           
  1986  0051                     ___lwdiv@counter:	
  1987                           ; 1 bytes @ 0x4
  1988                           
  1989                           
  1990                           ; 1 bytes @ 0x4
  1991  0051                     	ds	1
  1992  0052                     getCDS_AD@channel1:	
  1993  0052                     getMain_All_Error_Status@status:	
  1994                           ; 1 bytes @ 0x5
  1995                           
  1996  0052                     getLoad_AD@ADRES:	
  1997                           ; 1 bytes @ 0x5
  1998                           
  1999  0052                     setLights_Main@lights:	
  2000                           ; 1 bytes @ 0x5
  2001                           
  2002  0052                     ___awdiv@sign:	
  2003                           ; 1 bytes @ 0x5
  2004                           
  2005  0052                     ___lwdiv@quotient:	
  2006                           ; 1 bytes @ 0x5
  2007                           
  2008                           
  2009                           ; 2 bytes @ 0x5
  2010  0052                     	ds	1
  2011  0053                     ??_PIR_Main:	
  2012  0053                     ??_Exception_Main:	
  2013                           ; 0 bytes @ 0x6
  2014                           
  2015  0053                     getLoad_AD@i:	
  2016                           ; 0 bytes @ 0x6
  2017                           
  2018  0053                     setTemp_Main@error:	
  2019                           ; 1 bytes @ 0x6
  2020                           
  2021  0053                     ___awdiv@quotient:	
  2022                           ; 1 bytes @ 0x6
  2023                           
  2024                           
  2025                           ; 2 bytes @ 0x6
  2026  0053                     	ds	1
  2027  0054                     ??_Load_Main:	
  2028  0054                     Exception_Main@lights:	
  2029                           ; 0 bytes @ 0x7
  2030                           
  2031  0054                     setTemp_Main@TempGO:	
  2032                           ; 1 bytes @ 0x7
  2033                           
  2034                           
  2035                           ; 1 bytes @ 0x7
  2036  0054                     	ds	1
  2037  0055                     ?_getPIR_AD:	
  2038  0055                     ??_Lights_Control:	
  2039                           ; 0 bytes @ 0x8
  2040                           
  2041  0055                     Exception_Main@count:	
  2042                           ; 0 bytes @ 0x8
  2043                           
  2044  0055                     setTemp_Main@SafeValue:	
  2045                           ; 1 bytes @ 0x8
  2046                           
  2047  0055                     getPIR_AD@channel2:	
  2048                           ; 1 bytes @ 0x8
  2049                           
  2050                           
  2051                           ; 1 bytes @ 0x8
  2052  0055                     	ds	1
  2053  0056                     ??_getPIR_AD:	
  2054  0056                     Exception_Main@status:	
  2055                           ; 0 bytes @ 0x9
  2056                           
  2057  0056                     Load_Main@error:	
  2058                           ; 1 bytes @ 0x9
  2059                           
  2060  0056                     setTemp_Main@DangerValue:	
  2061                           ; 1 bytes @ 0x9
  2062                           
  2063                           
  2064                           ; 1 bytes @ 0x9
  2065  0056                     	ds	1
  2066  0057                     setTemp_Main@AD:	
  2067  0057                     Lights_Control@lights:	
  2068                           ; 1 bytes @ 0xA
  2069                           
  2070  0057                     Exception_Main@i:	
  2071                           ; 1 bytes @ 0xA
  2072                           
  2073  0057                     _Load_Main$2389:	
  2074                           ; 2 bytes @ 0xA
  2075                           
  2076                           
  2077                           ; 2 bytes @ 0xA
  2078  0057                     	ds	1
  2079  0058                     PIR_Main@error:	
  2080                           
  2081                           ; 1 bytes @ 0xB
  2082  0058                     	ds	1
  2083  0059                     Load_Main@ErrorCountValue:	
  2084  0059                     PIR_Main@Enable_Switch:	
  2085                           ; 1 bytes @ 0xC
  2086                           
  2087  0059                     getPIR_AD@j:	
  2088                           ; 1 bytes @ 0xC
  2089                           
  2090  0059                     Exception_Main@i_2140:	
  2091                           ; 1 bytes @ 0xC
  2092                           
  2093                           
  2094                           ; 2 bytes @ 0xC
  2095  0059                     	ds	1
  2096  005A                     Load_Main@Load_RunStatus:	
  2097  005A                     getPIR_AD@channel1:	
  2098                           ; 1 bytes @ 0xD
  2099                           
  2100  005A                     _PIR_Main$2856:	
  2101                           ; 1 bytes @ 0xD
  2102                           
  2103                           
  2104                           ; 2 bytes @ 0xD
  2105  005A                     	ds	1
  2106  005B                     Exception_Main@error:	
  2107  005B                     Load_Main@LightsCount:	
  2108                           ; 1 bytes @ 0xE
  2109                           
  2110  005B                     getPIR_AD@VRAD1:	
  2111                           ; 1 bytes @ 0xE
  2112                           
  2113                           
  2114                           ; 1 bytes @ 0xE
  2115  005B                     	ds	1
  2116  005C                     PIR_Main@TriggerValue:	
  2117  005C                     getPIR_AD@VRAD:	
  2118                           ; 1 bytes @ 0xF
  2119                           
  2120  005C                     Load_Main@i:	
  2121                           ; 1 bytes @ 0xF
  2122                           
  2123                           
  2124                           ; 2 bytes @ 0xF
  2125  005C                     	ds	1
  2126  005D                     PIR_Main@cds:	
  2127  005D                     getPIR_AD@i:	
  2128                           ; 1 bytes @ 0x10
  2129                           
  2130                           
  2131                           ; 1 bytes @ 0x10
  2132  005D                     	ds	1
  2133  005E                     PIR_Main@LightsStatus:	
  2134                           
  2135                           ; 1 bytes @ 0x11
  2136  005E                     	ds	1
  2137  005F                     ?_main:	
  2138  005F                     main@argc:	
  2139                           ; 2 bytes @ 0x12
  2140                           
  2141                           
  2142                           ; 2 bytes @ 0x12
  2143  005F                     	ds	2
  2144  0061                     main@argv:	
  2145                           
  2146                           ; 2 bytes @ 0x14
  2147  0061                     	ds	2
  2148  0063                     ??_main:	
  2149                           
  2150                           ; 0 bytes @ 0x16
  2151  0063                     	ds	1
  2152                           
  2153                           	psect	maintext
  2154  0F9A                     __pmaintext:	
  2155 ;;
  2156 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2157 ;;
  2158 ;; *************** function _main *****************
  2159 ;; Defined at:
  2160 ;;		line 7 in file "../src/Main_B1.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;  argc            2   18[BANK0 ] int 
  2163 ;;  argv            2   20[BANK0 ] PTR PTR unsigned char 
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;		None
  2166 ;; Return value:  Size  Location     Type
  2167 ;;                  2   18[BANK0 ] int 
  2168 ;; Registers used:
  2169 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2170 ;; Tracked objects:
  2171 ;;		On entry : 17F/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2175 ;;      Params:         0       4       0       0
  2176 ;;      Locals:         0       0       0       0
  2177 ;;      Temps:          0       1       0       0
  2178 ;;      Totals:         0       5       0       0
  2179 ;;Total ram usage:        5 bytes
  2180 ;; Hardware stack levels required when called:    7
  2181 ;; This function calls:
  2182 ;;		_CDS_Initialization
  2183 ;;		_CDS_Main
  2184 ;;		_DetectSYSC_Signal
  2185 ;;		_Exception_Main
  2186 ;;		_LED_Initialization
  2187 ;;		_LED_Main
  2188 ;;		_Lights_Initialization
  2189 ;;		_Lights_Main
  2190 ;;		_Load_Initialization
  2191 ;;		_Load_Main
  2192 ;;		_Mcu_Initialization
  2193 ;;		_PIR_Initialization
  2194 ;;		_PIR_Main
  2195 ;;		_SYSC_Initialization
  2196 ;;		_SYSC_Main
  2197 ;;		_Temp_Initialization
  2198 ;;		_Temp_Main
  2199 ;;		_WDT_Main
  2200 ;;		_getCDS_AD
  2201 ;;		_getLoad_AD
  2202 ;;		_getPIR_AD
  2203 ;;		_getTemp_AD
  2204 ;;		_myMain_Initialization
  2205 ;;		_my_MainTimer
  2206 ;; This function is called by:
  2207 ;;		Startup code after reset
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           
  2212                           ;psect for function _main
  2213  0F9A                     _main:	
  2214                           
  2215                           ;Main_B1.c: 8: myMain_Initialization();
  2216                           
  2217                           ;incstack = 0
  2218                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2219  0F9A  158A  2294  158A   	fcall	_myMain_Initialization
  2220                           
  2221                           ;Main_B1.c: 9: Mcu_Initialization();
  2222  0F9D  158A  2358  158A   	fcall	_Mcu_Initialization
  2223                           
  2224                           ;Main_B1.c: 10: ;;
  2225                           ;Main_B1.c: 11: LED_Initialization();
  2226  0FA0  158A  22D8  158A   	fcall	_LED_Initialization
  2227                           
  2228                           ;Main_B1.c: 12: ;;
  2229                           ;Main_B1.c: 14: SYSC_Initialization();
  2230  0FA3  158A  229B  158A   	fcall	_SYSC_Initialization
  2231                           
  2232                           ;Main_B1.c: 15: Temp_Initialization();
  2233  0FA6  158A  22A1  158A   	fcall	_Temp_Initialization
  2234                           
  2235                           ;Main_B1.c: 16: Load_Initialization();
  2236  0FA9  158A  2298  158A   	fcall	_Load_Initialization
  2237                           
  2238                           ;Main_B1.c: 17: ;;
  2239                           ;Main_B1.c: 18: ;;
  2240                           ;Main_B1.c: 20: ;;
  2241                           ;Main_B1.c: 21: Lights_Initialization();
  2242  0FAC  158A  22AB  158A   	fcall	_Lights_Initialization
  2243                           
  2244                           ;Main_B1.c: 22: CDS_Initialization();
  2245  0FAF  158A  22A7  158A   	fcall	_CDS_Initialization
  2246                           
  2247                           ;Main_B1.c: 23: PIR_Initialization();
  2248  0FB2  158A  2315  158A   	fcall	_PIR_Initialization
  2249  0FB5                     l5345:	
  2250                           ;Main_B1.c: 24: ;;
  2251                           ;Main_B1.c: 25: ;;
  2252                           ;Main_B1.c: 26: ;;
  2253                           ;Main_B1.c: 27: ;;
  2254                           ;Main_B1.c: 28: ;;
  2255                           ;Main_B1.c: 30: while (1) {
  2256                           
  2257                           
  2258                           ;Main_B1.c: 32: if (myMain.PowerON == 1) {
  2259  0FB5  1283               	bcf	3,5	;RP0=0, select bank0
  2260  0FB6  1303               	bcf	3,6	;RP1=0, select bank0
  2261  0FB7  1C25               	btfss	_myMain,0
  2262  0FB8  2FD8               	goto	l5357
  2263                           
  2264                           ;Main_B1.c: 34: DetectSYSC_Signal();
  2265  0FB9  158A  2320  158A   	fcall	_DetectSYSC_Signal
  2266                           
  2267                           ;Main_B1.c: 38: getLoad_AD(0x01);
  2268  0FBC  3001               	movlw	1
  2269  0FBD  158A  267C  158A   	fcall	_getLoad_AD
  2270                           
  2271                           ;Main_B1.c: 42: getTemp_AD(0x11);
  2272  0FC0  3011               	movlw	17
  2273  0FC1  158A  252B  158A   	fcall	_getTemp_AD
  2274                           
  2275                           ;Main_B1.c: 50: getCDS_AD(0x29, 0x05);
  2276  0FC4  3005               	movlw	5
  2277  0FC5  1283               	bcf	3,5	;RP0=0, select bank0
  2278  0FC6  1303               	bcf	3,6	;RP1=0, select bank0
  2279  0FC7  00E3               	movwf	??_main
  2280  0FC8  0863               	movf	??_main,w
  2281  0FC9  00CD               	movwf	getCDS_AD@channel2
  2282  0FCA  3029               	movlw	41
  2283  0FCB  158A  24BF  158A   	fcall	_getCDS_AD
  2284                           
  2285                           ;Main_B1.c: 54: getPIR_AD(0x2d, 0x09);
  2286  0FCE  3009               	movlw	9
  2287  0FCF  1283               	bcf	3,5	;RP0=0, select bank0
  2288  0FD0  1303               	bcf	3,6	;RP1=0, select bank0
  2289  0FD1  00E3               	movwf	??_main
  2290  0FD2  0863               	movf	??_main,w
  2291  0FD3  00D5               	movwf	getPIR_AD@channel2
  2292  0FD4  302D               	movlw	45
  2293  0FD5  118A  2419  158A   	fcall	_getPIR_AD
  2294  0FD8                     l5357:	
  2295                           
  2296                           ;Main_B1.c: 57: }
  2297                           ;Main_B1.c: 93: if (Timer1.Timeout == 1) {
  2298  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  2299  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  2300  0FDA  1C32               	btfss	_Timer1,0
  2301  0FDB  2FB5               	goto	l5345
  2302                           
  2303                           ;Main_B1.c: 94: Timer1.Timeout = 0;
  2304  0FDC  1032               	bcf	_Timer1,0
  2305                           
  2306                           ;Main_B1.c: 96: my_MainTimer();
  2307  0FDD  158A  2450  158A   	fcall	_my_MainTimer
  2308                           
  2309                           ;Main_B1.c: 97: WDT_Main();
  2310  0FE0  158A  2378  158A   	fcall	_WDT_Main
  2311                           
  2312                           ;Main_B1.c: 98: ;;
  2313                           ;Main_B1.c: 99: ;;
  2314                           ;Main_B1.c: 100: if (myMain.PowerON == 1) {
  2315  0FE3  1283               	bcf	3,5	;RP0=0, select bank0
  2316  0FE4  1303               	bcf	3,6	;RP1=0, select bank0
  2317  0FE5  1C25               	btfss	_myMain,0
  2318  0FE6  2FB5               	goto	l5345
  2319                           
  2320                           ;Main_B1.c: 101: ;;
  2321                           ;Main_B1.c: 103: LED_Main();
  2322  0FE7  158A  2295  158A   	fcall	_LED_Main
  2323                           
  2324                           ;Main_B1.c: 104: ;;
  2325                           ;Main_B1.c: 106: SYSC_Main();
  2326  0FEA  158A  229E  158A   	fcall	_SYSC_Main
  2327                           
  2328                           ;Main_B1.c: 107: Temp_Main();
  2329  0FED  158A  22A4  158A   	fcall	_Temp_Main
  2330                           
  2331                           ;Main_B1.c: 108: Load_Main();
  2332  0FF0  118A  222F  158A   	fcall	_Load_Main
  2333                           
  2334                           ;Main_B1.c: 109: ;;
  2335                           ;Main_B1.c: 111: Lights_Main();
  2336  0FF3  158A  24A1  158A   	fcall	_Lights_Main
  2337                           
  2338                           ;Main_B1.c: 112: ;;
  2339                           ;Main_B1.c: 113: ;;
  2340                           ;Main_B1.c: 114: CDS_Main();
  2341  0FF6  158A  2586  158A   	fcall	_CDS_Main
  2342                           
  2343                           ;Main_B1.c: 115: PIR_Main();
  2344  0FF9  118A  2026  158A   	fcall	_PIR_Main
  2345                           
  2346                           ;Main_B1.c: 117: ;;
  2347                           ;Main_B1.c: 118: ;;
  2348                           ;Main_B1.c: 119: ;;
  2349                           ;Main_B1.c: 120: ;;
  2350                           ;Main_B1.c: 121: Exception_Main();
  2351  0FFC  118A  2547  158A   	fcall	_Exception_Main
  2352  0FFF  2FB5               	goto	l5345
  2353  1000                     __end_of_main:	
  2354                           ;Main_B1.c: 128: }
  2355                           ;Main_B1.c: 129: }
  2356                           ;Main_B1.c: 163: }
  2357                           ;Main_B1.c: 164: return (0);
  2358                           ;	Return value of _main is never used
  2359                           
  2360                           
  2361                           	psect	text1
  2362  0C50                     __ptext1:	
  2363 ;; *************** function _my_MainTimer *****************
  2364 ;; Defined at:
  2365 ;;		line 185 in file "../src/Main_B1.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;		None
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;		None
  2370 ;; Return value:  Size  Location     Type
  2371 ;;		None               void
  2372 ;; Registers used:
  2373 ;;		wreg, status,2, status,0
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2379 ;;      Params:         0       0       0       0
  2380 ;;      Locals:         0       0       0       0
  2381 ;;      Temps:          1       0       0       0
  2382 ;;      Totals:         1       0       0       0
  2383 ;;Total ram usage:        1 bytes
  2384 ;; Hardware stack levels used:    1
  2385 ;; Hardware stack levels required when called:    2
  2386 ;; This function calls:
  2387 ;;		Nothing
  2388 ;; This function is called by:
  2389 ;;		_main
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392                           
  2393                           
  2394                           ;psect for function _my_MainTimer
  2395  0C50                     _my_MainTimer:	
  2396                           
  2397                           ;Main_B1.c: 187: if (myMain.PowerON == 0) {
  2398                           
  2399                           ;incstack = 0
  2400                           ; Regs used in _my_MainTimer: [wreg+status,2+status,0]
  2401  0C50  1283               	bcf	3,5	;RP0=0, select bank0
  2402  0C51  1303               	bcf	3,6	;RP1=0, select bank0
  2403  0C52  1825               	btfsc	_myMain,0
  2404  0C53  2C60               	goto	l3887
  2405                           
  2406                           ;Main_B1.c: 188: myMain.PowerCount++;
  2407  0C54  3001               	movlw	1
  2408  0C55  00F4               	movwf	??_my_MainTimer
  2409  0C56  0874               	movf	??_my_MainTimer,w
  2410  0C57  07A6               	addwf	_myMain+1,f
  2411                           
  2412                           ;Main_B1.c: 189: if (myMain.PowerCount == (1500 / 20)) {
  2413  0C58  0826               	movf	_myMain+1,w
  2414  0C59  3A4B               	xorlw	75
  2415  0C5A  1D03               	skipz
  2416  0C5B  0008               	return
  2417                           
  2418                           ;Main_B1.c: 190: myMain.PowerCount = 0;
  2419  0C5C  01A6               	clrf	_myMain+1
  2420                           
  2421                           ;Main_B1.c: 191: myMain.PowerON = 1;
  2422  0C5D  1425               	bsf	_myMain,0
  2423                           
  2424                           ;Main_B1.c: 196: ;;
  2425                           ;Main_B1.c: 197: myMain.SelfTest = 1;
  2426  0C5E  1625               	bsf	_myMain,4
  2427                           
  2428                           ;Main_B1.c: 206: }
  2429                           ;Main_B1.c: 207: } else {
  2430  0C5F  0008               	return
  2431  0C60                     l3887:	
  2432                           
  2433                           ;Main_B1.c: 208: myMain.PowerCount++;
  2434  0C60  3001               	movlw	1
  2435  0C61  00F4               	movwf	??_my_MainTimer
  2436  0C62  0874               	movf	??_my_MainTimer,w
  2437  0C63  07A6               	addwf	_myMain+1,f
  2438                           
  2439                           ;Main_B1.c: 209: if (myMain.PowerCount == (1000 / 20)) {
  2440  0C64  0826               	movf	_myMain+1,w
  2441  0C65  3A32               	xorlw	50
  2442  0C66  1D03               	skipz
  2443  0C67  0008               	return
  2444                           
  2445                           ;Main_B1.c: 210: myMain.PowerCount = 0;
  2446  0C68  01A6               	clrf	_myMain+1
  2447  0C69  0008               	return
  2448  0C6A                     __end_of_my_MainTimer:	
  2449                           
  2450                           	psect	text2
  2451  0A94                     __ptext2:	
  2452 ;; *************** function _myMain_Initialization *****************
  2453 ;; Defined at:
  2454 ;;		line 170 in file "../src/Main_B1.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;		None
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;		None
  2459 ;; Return value:  Size  Location     Type
  2460 ;;		None               void
  2461 ;; Registers used:
  2462 ;;		None
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2468 ;;      Params:         0       0       0       0
  2469 ;;      Locals:         0       0       0       0
  2470 ;;      Temps:          0       0       0       0
  2471 ;;      Totals:         0       0       0       0
  2472 ;;Total ram usage:        0 bytes
  2473 ;; Hardware stack levels used:    1
  2474 ;; Hardware stack levels required when called:    2
  2475 ;; This function calls:
  2476 ;;		Nothing
  2477 ;; This function is called by:
  2478 ;;		_main
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482                           
  2483                           ;psect for function _myMain_Initialization
  2484  0A94                     _myMain_Initialization:	
  2485                           
  2486                           ;incstack = 0
  2487                           ; Regs used in _myMain_Initialization: []
  2488  0A94  0008               	return
  2489  0A95                     __end_of_myMain_Initialization:	
  2490                           
  2491                           	psect	text3
  2492  0D2B                     __ptext3:	
  2493 ;; *************** function _getTemp_AD *****************
  2494 ;; Defined at:
  2495 ;;		line 15 in file "../src/OverTemperature_B1.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;  channel         1    wreg     unsigned char 
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;  channel         1    2[BANK0 ] unsigned char 
  2500 ;;  ADRES           1    3[BANK0 ] unsigned char 
  2501 ;; Return value:  Size  Location     Type
  2502 ;;		None               void
  2503 ;; Registers used:
  2504 ;;		wreg, status,2, status,0, pclath, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2510 ;;      Params:         0       0       0       0
  2511 ;;      Locals:         0       2       0       0
  2512 ;;      Temps:          0       2       0       0
  2513 ;;      Totals:         0       4       0       0
  2514 ;;Total ram usage:        4 bytes
  2515 ;; Hardware stack levels used:    1
  2516 ;; Hardware stack levels required when called:    4
  2517 ;; This function calls:
  2518 ;;		_getAD
  2519 ;; This function is called by:
  2520 ;;		_main
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           
  2525                           ;psect for function _getTemp_AD
  2526  0D2B                     _getTemp_AD:	
  2527                           
  2528                           ;incstack = 0
  2529                           ; Regs used in _getTemp_AD: [wreg+status,2+status,0+pclath+cstack]
  2530                           ;getTemp_AD@channel stored from wreg
  2531  0D2B  1283               	bcf	3,5	;RP0=0, select bank0
  2532  0D2C  1303               	bcf	3,6	;RP1=0, select bank0
  2533  0D2D  00CF               	movwf	getTemp_AD@channel
  2534                           
  2535                           ;OverTemperature_B1.c: 16: ADtype ADRES = 0;
  2536  0D2E  01D0               	clrf	getTemp_AD@ADRES
  2537                           
  2538                           ;OverTemperature_B1.c: 19: if (Temp.ADtoGO == 1) {
  2539  0D2F  1D39               	btfss	_Temp,2
  2540  0D30  2D49               	goto	l4863
  2541                           
  2542                           ;OverTemperature_B1.c: 21: ADRES = getAD(channel, 0x70);
  2543  0D31  3070               	movlw	112
  2544  0D32  00CD               	movwf	??_getTemp_AD
  2545  0D33  084D               	movf	??_getTemp_AD,w
  2546  0D34  00F4               	movwf	getAD@adcon1
  2547  0D35  084F               	movf	getTemp_AD@channel,w
  2548  0D36  158A  2485  158A   	fcall	_getAD
  2549  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2550  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2551  0D3B  00CE               	movwf	??_getTemp_AD+1
  2552  0D3C  084E               	movf	??_getTemp_AD+1,w
  2553  0D3D  00D0               	movwf	getTemp_AD@ADRES
  2554                           
  2555                           ;OverTemperature_B1.c: 29: if (ADRES > 0) {
  2556  0D3E  0850               	movf	getTemp_AD@ADRES,w
  2557  0D3F  1903               	btfsc	3,2
  2558  0D40  2D49               	goto	l4863
  2559                           
  2560                           ;OverTemperature_B1.c: 30: if (Temp.ADV < ADRES) {
  2561  0D41  0850               	movf	getTemp_AD@ADRES,w
  2562  0D42  023F               	subwf	_Temp+6,w
  2563  0D43  1803               	skipnc
  2564  0D44  2D49               	goto	l4863
  2565                           
  2566                           ;OverTemperature_B1.c: 31: Temp.ADV = ADRES;
  2567  0D45  0850               	movf	getTemp_AD@ADRES,w
  2568  0D46  00CD               	movwf	??_getTemp_AD
  2569  0D47  084D               	movf	??_getTemp_AD,w
  2570  0D48  00BF               	movwf	_Temp+6
  2571  0D49                     l4863:	
  2572                           
  2573                           ;OverTemperature_B1.c: 32: }
  2574                           ;OverTemperature_B1.c: 33: }
  2575                           ;OverTemperature_B1.c: 34: }
  2576                           ;OverTemperature_B1.c: 41: ADRES = getAD(channel, 0x70);
  2577  0D49  3070               	movlw	112
  2578  0D4A  00CD               	movwf	??_getTemp_AD
  2579  0D4B  084D               	movf	??_getTemp_AD,w
  2580  0D4C  00F4               	movwf	getAD@adcon1
  2581  0D4D  084F               	movf	getTemp_AD@channel,w
  2582  0D4E  158A  2485         	fcall	_getAD
  2583  0D50  1283               	bcf	3,5	;RP0=0, select bank0
  2584  0D51  1303               	bcf	3,6	;RP1=0, select bank0
  2585  0D52  00CE               	movwf	??_getTemp_AD+1
  2586  0D53  084E               	movf	??_getTemp_AD+1,w
  2587  0D54  00D0               	movwf	getTemp_AD@ADRES
  2588  0D55  0008               	return
  2589  0D56                     __end_of_getTemp_AD:	
  2590                           
  2591                           	psect	text4
  2592  0419                     __ptext4:	
  2593 ;; *************** function _getPIR_AD *****************
  2594 ;; Defined at:
  2595 ;;		line 341 in file "../src/PIR_B1.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;  channel1        1    wreg     unsigned char 
  2598 ;;  channel2        1    8[BANK0 ] unsigned char 
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;  channel1        1   13[BANK0 ] unsigned char 
  2601 ;;  i               1   16[BANK0 ] unsigned char 
  2602 ;;  VRAD            1   15[BANK0 ] unsigned char 
  2603 ;;  VRAD1           1   14[BANK0 ] unsigned char 
  2604 ;;  j               1   12[BANK0 ] unsigned char 
  2605 ;; Return value:  Size  Location     Type
  2606 ;;		None               void
  2607 ;; Registers used:
  2608 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2614 ;;      Params:         0       1       0       0
  2615 ;;      Locals:         0       5       0       0
  2616 ;;      Temps:          0       3       0       0
  2617 ;;      Totals:         0       9       0       0
  2618 ;;Total ram usage:        9 bytes
  2619 ;; Hardware stack levels used:    1
  2620 ;; Hardware stack levels required when called:    4
  2621 ;; This function calls:
  2622 ;;		___awdiv
  2623 ;;		___lwdiv
  2624 ;;		_getAD
  2625 ;; This function is called by:
  2626 ;;		_main
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           
  2631                           ;psect for function _getPIR_AD
  2632  0419                     _getPIR_AD:	
  2633                           
  2634                           ;incstack = 0
  2635                           ; Regs used in _getPIR_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2636                           ;getPIR_AD@channel1 stored from wreg
  2637  0419  1283               	bcf	3,5	;RP0=0, select bank0
  2638  041A  1303               	bcf	3,6	;RP1=0, select bank0
  2639  041B  00DA               	movwf	getPIR_AD@channel1
  2640                           
  2641                           ;PIR_B1.c: 342: char i = 0, j = 0;
  2642  041C  01DD               	clrf	getPIR_AD@i
  2643  041D  01D9               	clrf	getPIR_AD@j
  2644                           
  2645                           ;PIR_B1.c: 343: char VRAD = 0, VRAD1 = 0;
  2646  041E  01DC               	clrf	getPIR_AD@VRAD
  2647  041F  01DB               	clrf	getPIR_AD@VRAD1
  2648                           
  2649                           ;PIR_B1.c: 344: if (_PIR.ADtoGO == 1 && _PIR.GO == 0) {
  2650  0420  1683               	bsf	3,5	;RP0=1, select bank1
  2651  0421  1303               	bcf	3,6	;RP1=0, select bank1
  2652  0422  1CA0               	btfss	__PIR^(0+128),1
  2653  0423  0008               	return
  2654  0424  1920               	btfsc	__PIR^(0+128),2
  2655  0425  0008               	return
  2656                           
  2657                           ;PIR_B1.c: 345: _PIR.GO = 1;
  2658  0426  1520               	bsf	__PIR^(0+128),2
  2659                           
  2660                           ;PIR_B1.c: 352: VRAD1 = getAD(channel1, 0x70);
  2661  0427  3070               	movlw	112
  2662  0428  1283               	bcf	3,5	;RP0=0, select bank0
  2663  0429  1303               	bcf	3,6	;RP1=0, select bank0
  2664  042A  00D6               	movwf	??_getPIR_AD
  2665  042B  0856               	movf	??_getPIR_AD,w
  2666  042C  00F4               	movwf	getAD@adcon1
  2667  042D  085A               	movf	getPIR_AD@channel1,w
  2668  042E  158A  2485  118A   	fcall	_getAD
  2669  0431  1283               	bcf	3,5	;RP0=0, select bank0
  2670  0432  1303               	bcf	3,6	;RP1=0, select bank0
  2671  0433  00D7               	movwf	??_getPIR_AD+1
  2672  0434  0857               	movf	??_getPIR_AD+1,w
  2673  0435  00DB               	movwf	getPIR_AD@VRAD1
  2674                           
  2675                           ;PIR_B1.c: 353: VRAD = VRAD1 / 25;
  2676  0436  3019               	movlw	25
  2677  0437  00CD               	movwf	___awdiv@divisor
  2678  0438  3000               	movlw	0
  2679  0439  00CE               	movwf	___awdiv@divisor+1
  2680  043A  085B               	movf	getPIR_AD@VRAD1,w
  2681  043B  00D6               	movwf	??_getPIR_AD
  2682  043C  01D7               	clrf	??_getPIR_AD+1
  2683  043D  0856               	movf	??_getPIR_AD,w
  2684  043E  00CF               	movwf	___awdiv@dividend
  2685  043F  0857               	movf	??_getPIR_AD+1,w
  2686  0440  00D0               	movwf	___awdiv@dividend+1
  2687  0441  158A  26D8  118A   	fcall	___awdiv
  2688  0444  1283               	bcf	3,5	;RP0=0, select bank0
  2689  0445  1303               	bcf	3,6	;RP1=0, select bank0
  2690  0446  084D               	movf	?___awdiv,w
  2691  0447  00D8               	movwf	??_getPIR_AD+2
  2692  0448  0858               	movf	??_getPIR_AD+2,w
  2693  0449  00DC               	movwf	getPIR_AD@VRAD
  2694                           
  2695                           ;PIR_B1.c: 354: _PIR.SignalAD = getAD(channel2, 0x70);
  2696  044A  3070               	movlw	112
  2697  044B  00D6               	movwf	??_getPIR_AD
  2698  044C  0856               	movf	??_getPIR_AD,w
  2699  044D  00F4               	movwf	getAD@adcon1
  2700  044E  0855               	movf	getPIR_AD@channel2,w
  2701  044F  158A  2485  118A   	fcall	_getAD
  2702  0452  1283               	bcf	3,5	;RP0=0, select bank0
  2703  0453  1303               	bcf	3,6	;RP1=0, select bank0
  2704  0454  00D7               	movwf	??_getPIR_AD+1
  2705  0455  0857               	movf	??_getPIR_AD+1,w
  2706  0456  1683               	bsf	3,5	;RP0=1, select bank1
  2707  0457  1303               	bcf	3,6	;RP1=0, select bank1
  2708  0458  00A1               	movwf	(__PIR^(0+128)+1)
  2709                           
  2710                           ;PIR_B1.c: 368: if (VRAD < 1) {
  2711  0459  1283               	bcf	3,5	;RP0=0, select bank0
  2712  045A  1303               	bcf	3,6	;RP1=0, select bank0
  2713  045B  08DC               	movf	getPIR_AD@VRAD,f
  2714  045C  1D03               	skipz
  2715  045D  2C60               	goto	l4879
  2716                           
  2717                           ;PIR_B1.c: 369: _PIR.CloseTimeValue = 5;
  2718  045E  3005               	movlw	5
  2719  045F  2C66               	goto	L1
  2720  0460                     l4879:	
  2721                           ;PIR_B1.c: 370: } else if (VRAD < 3) {
  2722                           
  2723  0460  3003               	movlw	3
  2724  0461  1283               	bcf	3,5	;RP0=0, select bank0
  2725  0462  025C               	subwf	getPIR_AD@VRAD,w
  2726  0463  1803               	skipnc
  2727  0464  2C6B               	goto	l4883
  2728                           
  2729                           ;PIR_B1.c: 371: _PIR.CloseTimeValue = 60;
  2730  0465  303C               	movlw	60
  2731  0466                     L1:	
  2732  0466  1683               	bsf	3,5	;RP0=1, select bank1
  2733  0467  1303               	bcf	3,6	;RP1=0, select bank1
  2734  0468  00C3               	movwf	(__PIR^(0+128)+35)
  2735  0469  3000               	movlw	0
  2736  046A  2C91               	goto	L5
  2737  046B                     l4883:	
  2738                           ;PIR_B1.c: 372: } else if (VRAD < 5) {
  2739                           
  2740  046B  3005               	movlw	5
  2741  046C  1283               	bcf	3,5	;RP0=0, select bank0
  2742  046D  025C               	subwf	getPIR_AD@VRAD,w
  2743  046E  1803               	skipnc
  2744  046F  2C76               	goto	l4887
  2745                           
  2746                           ;PIR_B1.c: 373: _PIR.CloseTimeValue = 300;
  2747  0470  302C               	movlw	44
  2748  0471  1683               	bsf	3,5	;RP0=1, select bank1
  2749  0472  1303               	bcf	3,6	;RP1=0, select bank1
  2750  0473  00C3               	movwf	(__PIR^(0+128)+35)
  2751  0474  3001               	movlw	1
  2752  0475  2C91               	goto	L5
  2753  0476                     l4887:	
  2754                           ;PIR_B1.c: 374: } else if (VRAD < 7) {
  2755                           
  2756  0476  3007               	movlw	7
  2757  0477  1283               	bcf	3,5	;RP0=0, select bank0
  2758  0478  025C               	subwf	getPIR_AD@VRAD,w
  2759  0479  1803               	skipnc
  2760  047A  2C81               	goto	l4891
  2761                           
  2762                           ;PIR_B1.c: 375: _PIR.CloseTimeValue = 600;
  2763  047B  3058               	movlw	88
  2764  047C  1683               	bsf	3,5	;RP0=1, select bank1
  2765  047D  1303               	bcf	3,6	;RP1=0, select bank1
  2766  047E  00C3               	movwf	(__PIR^(0+128)+35)
  2767  047F  3002               	movlw	2
  2768  0480  2C91               	goto	L5
  2769  0481                     l4891:	
  2770                           ;PIR_B1.c: 376: } else if (VRAD < 9) {
  2771                           
  2772  0481  3009               	movlw	9
  2773  0482  1283               	bcf	3,5	;RP0=0, select bank0
  2774  0483  025C               	subwf	getPIR_AD@VRAD,w
  2775  0484  1803               	skipnc
  2776  0485  2C8C               	goto	l4895
  2777                           
  2778                           ;PIR_B1.c: 377: _PIR.CloseTimeValue = 900;
  2779  0486  3084               	movlw	132
  2780  0487  1683               	bsf	3,5	;RP0=1, select bank1
  2781  0488  1303               	bcf	3,6	;RP1=0, select bank1
  2782  0489  00C3               	movwf	(__PIR^(0+128)+35)
  2783  048A  3003               	movlw	3
  2784  048B  2C91               	goto	L5
  2785  048C                     l4895:	
  2786                           ;PIR_B1.c: 378: } else {
  2787                           
  2788                           
  2789                           ;PIR_B1.c: 379: _PIR.CloseTimeValue = 1200;
  2790  048C  30B0               	movlw	176
  2791  048D  1683               	bsf	3,5	;RP0=1, select bank1
  2792  048E  1303               	bcf	3,6	;RP1=0, select bank1
  2793  048F  00C3               	movwf	(__PIR^(0+128)+35)
  2794  0490  3004               	movlw	4
  2795  0491                     L5:	
  2796  0491  00C4               	movwf	(__PIR^(0+128)+36)
  2797                           
  2798                           ;PIR_B1.c: 380: }
  2799                           ;PIR_B1.c: 389: _PIR.TenAverage[_PIR.TenCount] = _PIR.SignalAD;
  2800  0492  0821               	movf	(__PIR^(0+128)+1),w
  2801  0493  1283               	bcf	3,5	;RP0=0, select bank0
  2802  0494  1303               	bcf	3,6	;RP1=0, select bank0
  2803  0495  00D6               	movwf	??_getPIR_AD
  2804  0496  1683               	bsf	3,5	;RP0=1, select bank1
  2805  0497  1303               	bcf	3,6	;RP1=0, select bank1
  2806  0498  0824               	movf	(__PIR^(0+128)+4),w
  2807  0499  3EA5               	addlw	(__PIR+5)& (0+255)
  2808  049A  0084               	movwf	4
  2809  049B  1283               	bcf	3,5	;RP0=0, select bank0
  2810  049C  1303               	bcf	3,6	;RP1=0, select bank0
  2811  049D  0856               	movf	??_getPIR_AD,w
  2812  049E  1383               	bcf	3,7	;select IRP bank1
  2813  049F  0080               	movwf	0
  2814                           
  2815                           ;PIR_B1.c: 390: for (i = 0; i < 10; i++) {
  2816  04A0  01DD               	clrf	getPIR_AD@i
  2817  04A1  300A               	movlw	10
  2818  04A2  025D               	subwf	getPIR_AD@i,w
  2819  04A3  1803               	btfsc	3,0
  2820  04A4  2CC1               	goto	l4911
  2821  04A5                     l4905:	
  2822                           
  2823                           ;PIR_B1.c: 391: _PIR.TenAverageValue += _PIR.TenAverage[i];
  2824  04A5  085D               	movf	getPIR_AD@i,w
  2825  04A6  3EA5               	addlw	(__PIR+5)& (0+255)
  2826  04A7  0084               	movwf	4
  2827  04A8  0800               	movf	0,w
  2828  04A9  00D6               	movwf	??_getPIR_AD
  2829  04AA  01D7               	clrf	??_getPIR_AD+1
  2830  04AB  0856               	movf	??_getPIR_AD,w
  2831  04AC  1683               	bsf	3,5	;RP0=1, select bank1
  2832  04AD  1303               	bcf	3,6	;RP1=0, select bank1
  2833  04AE  07AF               	addwf	(__PIR^(0+128)+15),f
  2834  04AF  1803               	skipnc
  2835  04B0  0AB0               	incf	((__PIR+1)^(0+128)+15),f
  2836  04B1  1283               	bcf	3,5	;RP0=0, select bank0
  2837  04B2  1303               	bcf	3,6	;RP1=0, select bank0
  2838  04B3  0857               	movf	??_getPIR_AD+1,w
  2839  04B4  1683               	bsf	3,5	;RP0=1, select bank1
  2840  04B5  1303               	bcf	3,6	;RP1=0, select bank1
  2841  04B6  07B0               	addwf	((__PIR+1)^(0+128)+15),f
  2842  04B7  3001               	movlw	1
  2843  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  2844  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  2845  04BA  00D6               	movwf	??_getPIR_AD
  2846  04BB  0856               	movf	??_getPIR_AD,w
  2847  04BC  07DD               	addwf	getPIR_AD@i,f
  2848  04BD  300A               	movlw	10
  2849  04BE  025D               	subwf	getPIR_AD@i,w
  2850  04BF  1C03               	skipc
  2851  04C0  2CA5               	goto	l4905
  2852  04C1                     l4911:	
  2853                           
  2854                           ;PIR_B1.c: 392: }
  2855                           ;PIR_B1.c: 393: _PIR.HundredAverage[_PIR.HundreCount] = (_PIR.TenAverageValue / 10);
  2856  04C1  300A               	movlw	10
  2857  04C2  00CD               	movwf	___lwdiv@divisor
  2858  04C3  3000               	movlw	0
  2859  04C4  00CE               	movwf	___lwdiv@divisor+1
  2860  04C5  1683               	bsf	3,5	;RP0=1, select bank1
  2861  04C6  1303               	bcf	3,6	;RP1=0, select bank1
  2862  04C7  0830               	movf	((__PIR+1)^(0+128)+15),w
  2863  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  2864  04C9  1303               	bcf	3,6	;RP1=0, select bank0
  2865  04CA  01D0               	clrf	___lwdiv@dividend+1
  2866  04CB  07D0               	addwf	___lwdiv@dividend+1,f
  2867  04CC  1683               	bsf	3,5	;RP0=1, select bank1
  2868  04CD  1303               	bcf	3,6	;RP1=0, select bank1
  2869  04CE  082F               	movf	(__PIR^(0+128)+15),w
  2870  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  2871  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  2872  04D1  01CF               	clrf	___lwdiv@dividend
  2873  04D2  07CF               	addwf	___lwdiv@dividend,f
  2874  04D3  158A  25F8  118A   	fcall	___lwdiv
  2875  04D6  1283               	bcf	3,5	;RP0=0, select bank0
  2876  04D7  1303               	bcf	3,6	;RP1=0, select bank0
  2877  04D8  084D               	movf	?___lwdiv,w
  2878  04D9  00D6               	movwf	??_getPIR_AD
  2879  04DA  1683               	bsf	3,5	;RP0=1, select bank1
  2880  04DB  1303               	bcf	3,6	;RP1=0, select bank1
  2881  04DC  0831               	movf	(__PIR^(0+128)+17),w
  2882  04DD  3EB2               	addlw	(__PIR+18)& (0+255)
  2883  04DE  0084               	movwf	4
  2884  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  2885  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  2886  04E1  0856               	movf	??_getPIR_AD,w
  2887  04E2  1383               	bcf	3,7	;select IRP bank1
  2888  04E3  0080               	movwf	0
  2889                           
  2890                           ;PIR_B1.c: 394: _PIR.TenAverageValue = 0;
  2891  04E4  1683               	bsf	3,5	;RP0=1, select bank1
  2892  04E5  1303               	bcf	3,6	;RP1=0, select bank1
  2893  04E6  01AF               	clrf	(__PIR^(0+128)+15)
  2894  04E7  01B0               	clrf	((__PIR+1)^(0+128)+15)
  2895                           
  2896                           ;PIR_B1.c: 396: for (i = 0; i <= 9; i++) {
  2897  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  2898  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  2899  04EA  01DD               	clrf	getPIR_AD@i
  2900  04EB  300A               	movlw	10
  2901  04EC  025D               	subwf	getPIR_AD@i,w
  2902  04ED  1803               	btfsc	3,0
  2903  04EE  2D0B               	goto	l4927
  2904  04EF                     l4921:	
  2905                           
  2906                           ;PIR_B1.c: 397: _PIR.HundredAverageValue += _PIR.HundredAverage[i];
  2907  04EF  085D               	movf	getPIR_AD@i,w
  2908  04F0  3EB2               	addlw	(__PIR+18)& (0+255)
  2909  04F1  0084               	movwf	4
  2910  04F2  0800               	movf	0,w
  2911  04F3  00D6               	movwf	??_getPIR_AD
  2912  04F4  01D7               	clrf	??_getPIR_AD+1
  2913  04F5  0856               	movf	??_getPIR_AD,w
  2914  04F6  1683               	bsf	3,5	;RP0=1, select bank1
  2915  04F7  1303               	bcf	3,6	;RP1=0, select bank1
  2916  04F8  07BC               	addwf	(__PIR^(0+128)+28),f
  2917  04F9  1803               	skipnc
  2918  04FA  0ABD               	incf	((__PIR+1)^(0+128)+28),f
  2919  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  2920  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  2921  04FD  0857               	movf	??_getPIR_AD+1,w
  2922  04FE  1683               	bsf	3,5	;RP0=1, select bank1
  2923  04FF  1303               	bcf	3,6	;RP1=0, select bank1
  2924  0500  07BD               	addwf	((__PIR+1)^(0+128)+28),f
  2925  0501  3001               	movlw	1
  2926  0502  1283               	bcf	3,5	;RP0=0, select bank0
  2927  0503  1303               	bcf	3,6	;RP1=0, select bank0
  2928  0504  00D6               	movwf	??_getPIR_AD
  2929  0505  0856               	movf	??_getPIR_AD,w
  2930  0506  07DD               	addwf	getPIR_AD@i,f
  2931  0507  300A               	movlw	10
  2932  0508  025D               	subwf	getPIR_AD@i,w
  2933  0509  1C03               	skipc
  2934  050A  2CEF               	goto	l4921
  2935  050B                     l4927:	
  2936                           
  2937                           ;PIR_B1.c: 398: }
  2938                           ;PIR_B1.c: 399: _PIR.ReferenceVoltage = (_PIR.HundredAverageValue / 10);
  2939  050B  300A               	movlw	10
  2940  050C  00CD               	movwf	___lwdiv@divisor
  2941  050D  3000               	movlw	0
  2942  050E  00CE               	movwf	___lwdiv@divisor+1
  2943  050F  1683               	bsf	3,5	;RP0=1, select bank1
  2944  0510  1303               	bcf	3,6	;RP1=0, select bank1
  2945  0511  083D               	movf	((__PIR+1)^(0+128)+28),w
  2946  0512  1283               	bcf	3,5	;RP0=0, select bank0
  2947  0513  1303               	bcf	3,6	;RP1=0, select bank0
  2948  0514  01D0               	clrf	___lwdiv@dividend+1
  2949  0515  07D0               	addwf	___lwdiv@dividend+1,f
  2950  0516  1683               	bsf	3,5	;RP0=1, select bank1
  2951  0517  1303               	bcf	3,6	;RP1=0, select bank1
  2952  0518  083C               	movf	(__PIR^(0+128)+28),w
  2953  0519  1283               	bcf	3,5	;RP0=0, select bank0
  2954  051A  1303               	bcf	3,6	;RP1=0, select bank0
  2955  051B  01CF               	clrf	___lwdiv@dividend
  2956  051C  07CF               	addwf	___lwdiv@dividend,f
  2957  051D  158A  25F8  118A   	fcall	___lwdiv
  2958  0520  1283               	bcf	3,5	;RP0=0, select bank0
  2959  0521  1303               	bcf	3,6	;RP1=0, select bank0
  2960  0522  084D               	movf	?___lwdiv,w
  2961  0523  00D6               	movwf	??_getPIR_AD
  2962  0524  0856               	movf	??_getPIR_AD,w
  2963  0525  1683               	bsf	3,5	;RP0=1, select bank1
  2964  0526  1303               	bcf	3,6	;RP1=0, select bank1
  2965  0527  00A3               	movwf	(__PIR^(0+128)+3)
  2966                           
  2967                           ;PIR_B1.c: 400: _PIR.HundredAverageValue = 0;
  2968  0528  01BC               	clrf	(__PIR^(0+128)+28)
  2969  0529  01BD               	clrf	((__PIR+1)^(0+128)+28)
  2970                           
  2971                           ;PIR_B1.c: 402: if (_PIR.TenCount < 10) {
  2972  052A  300A               	movlw	10
  2973  052B  0224               	subwf	(__PIR^(0+128)+4),w
  2974  052C  1803               	skipnc
  2975  052D  2D37               	goto	l4935
  2976                           
  2977                           ;PIR_B1.c: 403: _PIR.TenCount++;
  2978  052E  3001               	movlw	1
  2979  052F  1283               	bcf	3,5	;RP0=0, select bank0
  2980  0530  1303               	bcf	3,6	;RP1=0, select bank0
  2981  0531  00D6               	movwf	??_getPIR_AD
  2982  0532  0856               	movf	??_getPIR_AD,w
  2983  0533  1683               	bsf	3,5	;RP0=1, select bank1
  2984  0534  1303               	bcf	3,6	;RP1=0, select bank1
  2985  0535  07A4               	addwf	(__PIR^(0+128)+4),f
  2986                           
  2987                           ;PIR_B1.c: 404: } else {
  2988  0536  0008               	return
  2989  0537                     l4935:	
  2990                           
  2991                           ;PIR_B1.c: 405: _PIR.TenCount = 0;
  2992  0537  01A4               	clrf	(__PIR^(0+128)+4)
  2993                           
  2994                           ;PIR_B1.c: 406: if (_PIR.HundreCount < 10)
  2995  0538  300A               	movlw	10
  2996  0539  0231               	subwf	(__PIR^(0+128)+17),w
  2997  053A  1803               	skipnc
  2998  053B  2D45               	goto	l4941
  2999                           
  3000                           ;PIR_B1.c: 407: _PIR.HundreCount++;
  3001  053C  3001               	movlw	1
  3002  053D  1283               	bcf	3,5	;RP0=0, select bank0
  3003  053E  1303               	bcf	3,6	;RP1=0, select bank0
  3004  053F  00D6               	movwf	??_getPIR_AD
  3005  0540  0856               	movf	??_getPIR_AD,w
  3006  0541  1683               	bsf	3,5	;RP0=1, select bank1
  3007  0542  1303               	bcf	3,6	;RP1=0, select bank1
  3008  0543  07B1               	addwf	(__PIR^(0+128)+17),f
  3009  0544  0008               	return
  3010  0545                     l4941:	
  3011                           
  3012                           ;PIR_B1.c: 408: else
  3013                           ;PIR_B1.c: 409: _PIR.HundreCount = 0;
  3014  0545  01B1               	clrf	(__PIR^(0+128)+17)
  3015  0546  0008               	return
  3016  0547                     __end_of_getPIR_AD:	
  3017                           
  3018                           	psect	text5
  3019  0E7C                     __ptext5:	
  3020 ;; *************** function _getLoad_AD *****************
  3021 ;; Defined at:
  3022 ;;		line 15 in file "../src/OverLoad_B1.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;  channel         1    wreg     unsigned char 
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;  channel         1    2[BANK0 ] unsigned char 
  3027 ;;  i               1    6[BANK0 ] unsigned char 
  3028 ;;  ADRES           1    5[BANK0 ] unsigned char 
  3029 ;;  j               1    4[BANK0 ] unsigned char 
  3030 ;;  k               1    3[BANK0 ] unsigned char 
  3031 ;; Return value:  Size  Location     Type
  3032 ;;		None               void
  3033 ;; Registers used:
  3034 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3040 ;;      Params:         0       0       0       0
  3041 ;;      Locals:         0       5       0       0
  3042 ;;      Temps:          0       2       0       0
  3043 ;;      Totals:         0       7       0       0
  3044 ;;Total ram usage:        7 bytes
  3045 ;; Hardware stack levels used:    1
  3046 ;; Hardware stack levels required when called:    4
  3047 ;; This function calls:
  3048 ;;		_getAD
  3049 ;; This function is called by:
  3050 ;;		_main
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053                           
  3054                           
  3055                           ;psect for function _getLoad_AD
  3056  0E7C                     _getLoad_AD:	
  3057                           
  3058                           ;incstack = 0
  3059                           ; Regs used in _getLoad_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3060                           ;getLoad_AD@channel stored from wreg
  3061  0E7C  1283               	bcf	3,5	;RP0=0, select bank0
  3062  0E7D  1303               	bcf	3,6	;RP1=0, select bank0
  3063  0E7E  00CF               	movwf	getLoad_AD@channel
  3064                           
  3065                           ;OverLoad_B1.c: 16: char i = 0, j = 0, k = 0;
  3066  0E7F  01D3               	clrf	getLoad_AD@i
  3067  0E80  01D1               	clrf	getLoad_AD@j
  3068  0E81  01D0               	clrf	getLoad_AD@k
  3069                           
  3070                           ;OverLoad_B1.c: 17: ADtype ADRES = 0;
  3071  0E82  01D2               	clrf	getLoad_AD@ADRES
  3072                           
  3073                           ;OverLoad_B1.c: 18: if (Load.ADtoGO == 1) {
  3074  0E83  1683               	bsf	3,5	;RP0=1, select bank1
  3075  0E84  1303               	bcf	3,6	;RP1=0, select bank1
  3076  0E85  1E4A               	btfss	_Load^(0+128),4
  3077  0E86  0008               	return
  3078                           
  3079                           ;OverLoad_B1.c: 20: ADRES = getAD(channel, 0x73);
  3080  0E87  3073               	movlw	115
  3081  0E88  1283               	bcf	3,5	;RP0=0, select bank0
  3082  0E89  1303               	bcf	3,6	;RP1=0, select bank0
  3083  0E8A  00CD               	movwf	??_getLoad_AD
  3084  0E8B  084D               	movf	??_getLoad_AD,w
  3085  0E8C  00F4               	movwf	getAD@adcon1
  3086  0E8D  084F               	movf	getLoad_AD@channel,w
  3087  0E8E  158A  2485  158A   	fcall	_getAD
  3088  0E91  1283               	bcf	3,5	;RP0=0, select bank0
  3089  0E92  1303               	bcf	3,6	;RP1=0, select bank0
  3090  0E93  00CE               	movwf	??_getLoad_AD+1
  3091  0E94  084E               	movf	??_getLoad_AD+1,w
  3092  0E95  00D2               	movwf	getLoad_AD@ADRES
  3093                           
  3094                           ;OverLoad_B1.c: 21: for (i = 0; i < 4; i++) {
  3095  0E96  01D3               	clrf	getLoad_AD@i
  3096  0E97  3004               	movlw	4
  3097  0E98  0253               	subwf	getLoad_AD@i,w
  3098  0E99  1803               	btfsc	3,0
  3099  0E9A  2EB7               	goto	l4831
  3100  0E9B                     l4819:	
  3101                           
  3102                           ;OverLoad_B1.c: 22: if (Load.AH[i] < ADRES && j == 0) {
  3103  0E9B  0853               	movf	getLoad_AD@i,w
  3104  0E9C  3ED4               	addlw	(_Load+10)& (0+255)
  3105  0E9D  0084               	movwf	4
  3106  0E9E  0852               	movf	getLoad_AD@ADRES,w
  3107  0E9F  1383               	bcf	3,7	;select IRP bank1
  3108  0EA0  0200               	subwf	0,w
  3109  0EA1  1803               	skipnc
  3110  0EA2  2EAF               	goto	l4827
  3111  0EA3  08D1               	movf	getLoad_AD@j,f
  3112  0EA4  1D03               	skipz
  3113  0EA5  2EAF               	goto	l4827
  3114                           
  3115                           ;OverLoad_B1.c: 23: Load.AH[i] = ADRES;
  3116  0EA6  0852               	movf	getLoad_AD@ADRES,w
  3117  0EA7  00CD               	movwf	??_getLoad_AD
  3118  0EA8  0853               	movf	getLoad_AD@i,w
  3119  0EA9  3ED4               	addlw	(_Load+10)& (0+255)
  3120  0EAA  0084               	movwf	4
  3121  0EAB  084D               	movf	??_getLoad_AD,w
  3122  0EAC  0080               	movwf	0
  3123                           
  3124                           ;OverLoad_B1.c: 24: j = 1;
  3125  0EAD  01D1               	clrf	getLoad_AD@j
  3126  0EAE  0AD1               	incf	getLoad_AD@j,f
  3127  0EAF                     l4827:	
  3128  0EAF  3001               	movlw	1
  3129  0EB0  00CD               	movwf	??_getLoad_AD
  3130  0EB1  084D               	movf	??_getLoad_AD,w
  3131  0EB2  07D3               	addwf	getLoad_AD@i,f
  3132  0EB3  3004               	movlw	4
  3133  0EB4  0253               	subwf	getLoad_AD@i,w
  3134  0EB5  1C03               	skipc
  3135  0EB6  2E9B               	goto	l4819
  3136  0EB7                     l4831:	
  3137                           
  3138                           ;OverLoad_B1.c: 25: }
  3139                           ;OverLoad_B1.c: 26: }
  3140                           ;OverLoad_B1.c: 27: if (j == 0) {
  3141  0EB7  08D1               	movf	getLoad_AD@j,f
  3142  0EB8  1D03               	skipz
  3143  0EB9  0008               	return
  3144                           
  3145                           ;OverLoad_B1.c: 28: for (i = 0; i < 4; i++) {
  3146  0EBA  01D3               	clrf	getLoad_AD@i
  3147  0EBB                     L6:	
  3148  0EBB  3004               	movlw	4
  3149  0EBC  0253               	subwf	getLoad_AD@i,w
  3150  0EBD  1803               	btfsc	3,0
  3151  0EBE  0008               	return
  3152                           
  3153                           ;OverLoad_B1.c: 29: if (Load.AL[i] > ADRES && k == 0) {
  3154  0EBF  0853               	movf	getLoad_AD@i,w
  3155  0EC0  3ED9               	addlw	(_Load+15)& (0+255)
  3156  0EC1  0084               	movwf	4
  3157  0EC2  1383               	bcf	3,7	;select IRP bank1
  3158  0EC3  0800               	movf	0,w
  3159  0EC4  0252               	subwf	getLoad_AD@ADRES,w
  3160  0EC5  1803               	skipnc
  3161  0EC6  2ED3               	goto	l4847
  3162  0EC7  08D0               	movf	getLoad_AD@k,f
  3163  0EC8  1D03               	skipz
  3164  0EC9  2ED3               	goto	l4847
  3165                           
  3166                           ;OverLoad_B1.c: 30: Load.AL[i] = ADRES;
  3167  0ECA  0852               	movf	getLoad_AD@ADRES,w
  3168  0ECB  00CD               	movwf	??_getLoad_AD
  3169  0ECC  0853               	movf	getLoad_AD@i,w
  3170  0ECD  3ED9               	addlw	(_Load+15)& (0+255)
  3171  0ECE  0084               	movwf	4
  3172  0ECF  084D               	movf	??_getLoad_AD,w
  3173  0ED0  0080               	movwf	0
  3174                           
  3175                           ;OverLoad_B1.c: 31: k = 1;
  3176  0ED1  01D0               	clrf	getLoad_AD@k
  3177  0ED2  0AD0               	incf	getLoad_AD@k,f
  3178  0ED3                     l4847:	
  3179  0ED3  3001               	movlw	1
  3180  0ED4  00CD               	movwf	??_getLoad_AD
  3181  0ED5  084D               	movf	??_getLoad_AD,w
  3182  0ED6  07D3               	addwf	getLoad_AD@i,f
  3183  0ED7  2EBB               	goto	L6
  3184  0ED8                     __end_of_getLoad_AD:	
  3185                           
  3186                           	psect	text6
  3187  0CBF                     __ptext6:	
  3188 ;; *************** function _getCDS_AD *****************
  3189 ;; Defined at:
  3190 ;;		line 48 in file "../src/CDS_B1.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;  channel1        1    wreg     unsigned char 
  3193 ;;  channel2        1    0[BANK0 ] unsigned char 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;  channel1        1    5[BANK0 ] unsigned char 
  3196 ;;  j               1    4[BANK0 ] unsigned char 
  3197 ;;  i               1    3[BANK0 ] unsigned char 
  3198 ;; Return value:  Size  Location     Type
  3199 ;;		None               void
  3200 ;; Registers used:
  3201 ;;		wreg, status,2, status,0, pclath, cstack
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3207 ;;      Params:         0       1       0       0
  3208 ;;      Locals:         0       3       0       0
  3209 ;;      Temps:          0       2       0       0
  3210 ;;      Totals:         0       6       0       0
  3211 ;;Total ram usage:        6 bytes
  3212 ;; Hardware stack levels used:    1
  3213 ;; Hardware stack levels required when called:    4
  3214 ;; This function calls:
  3215 ;;		_getAD
  3216 ;; This function is called by:
  3217 ;;		_main
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           
  3222                           ;psect for function _getCDS_AD
  3223  0CBF                     _getCDS_AD:	
  3224                           
  3225                           ;incstack = 0
  3226                           ; Regs used in _getCDS_AD: [wreg+status,2+status,0+pclath+cstack]
  3227                           ;getCDS_AD@channel1 stored from wreg
  3228  0CBF  1283               	bcf	3,5	;RP0=0, select bank0
  3229  0CC0  1303               	bcf	3,6	;RP1=0, select bank0
  3230  0CC1  00D2               	movwf	getCDS_AD@channel1
  3231                           
  3232                           ;CDS_B1.c: 49: char i = 0, j = 0;
  3233  0CC2  01D0               	clrf	getCDS_AD@i
  3234  0CC3  01D1               	clrf	getCDS_AD@j
  3235                           
  3236                           ;CDS_B1.c: 50: if (_CDS.ADtoGO == 1) {
  3237  0CC4  1DAE               	btfss	__CDS,3
  3238  0CC5  0008               	return
  3239                           
  3240                           ;CDS_B1.c: 51: _CDS.GO = 1;
  3241  0CC6  14AE               	bsf	__CDS,1
  3242                           
  3243                           ;CDS_B1.c: 52: _CDS.VRAD = getAD(channel1, 0x70);
  3244  0CC7  3070               	movlw	112
  3245  0CC8  00CE               	movwf	??_getCDS_AD
  3246  0CC9  084E               	movf	??_getCDS_AD,w
  3247  0CCA  00F4               	movwf	getAD@adcon1
  3248  0CCB  0852               	movf	getCDS_AD@channel1,w
  3249  0CCC  158A  2485  158A   	fcall	_getAD
  3250  0CCF  1283               	bcf	3,5	;RP0=0, select bank0
  3251  0CD0  1303               	bcf	3,6	;RP1=0, select bank0
  3252  0CD1  00CF               	movwf	??_getCDS_AD+1
  3253  0CD2  084F               	movf	??_getCDS_AD+1,w
  3254  0CD3  00B0               	movwf	__CDS+2
  3255                           
  3256                           ;CDS_B1.c: 53: _CDS.SignalAD = getAD(channel2, 0x70);
  3257  0CD4  3070               	movlw	112
  3258  0CD5  00CE               	movwf	??_getCDS_AD
  3259  0CD6  084E               	movf	??_getCDS_AD,w
  3260  0CD7  00F4               	movwf	getAD@adcon1
  3261  0CD8  084D               	movf	getCDS_AD@channel2,w
  3262  0CD9  158A  2485         	fcall	_getAD
  3263  0CDB  1283               	bcf	3,5	;RP0=0, select bank0
  3264  0CDC  1303               	bcf	3,6	;RP1=0, select bank0
  3265  0CDD  00CF               	movwf	??_getCDS_AD+1
  3266  0CDE  084F               	movf	??_getCDS_AD+1,w
  3267  0CDF  00B1               	movwf	__CDS+3
  3268  0CE0  0008               	return
  3269  0CE1                     __end_of_getCDS_AD:	
  3270                           
  3271                           	psect	text7
  3272  0C85                     __ptext7:	
  3273 ;; *************** function _getAD *****************
  3274 ;; Defined at:
  3275 ;;		line 434 in file "../src/MCU_B1.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;  adcon0          1    wreg     unsigned char 
  3278 ;;  adcon1          1    4[COMMON] unsigned char 
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;  adcon0          1    5[COMMON] unsigned char 
  3281 ;; Return value:  Size  Location     Type
  3282 ;;                  1    wreg      unsigned char 
  3283 ;; Registers used:
  3284 ;;		wreg, status,2, status,0, pclath, cstack
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3290 ;;      Params:         1       0       0       0
  3291 ;;      Locals:         1       0       0       0
  3292 ;;      Temps:          0       0       0       0
  3293 ;;      Totals:         2       0       0       0
  3294 ;;Total ram usage:        2 bytes
  3295 ;; Hardware stack levels used:    1
  3296 ;; Hardware stack levels required when called:    3
  3297 ;; This function calls:
  3298 ;;		_Timeout_Counter
  3299 ;;		_set_TimeoutCleared
  3300 ;; This function is called by:
  3301 ;;		_getCDS_AD
  3302 ;;		_getLoad_AD
  3303 ;;		_getTemp_AD
  3304 ;;		_getPIR_AD
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           
  3309                           ;psect for function _getAD
  3310  0C85                     _getAD:	
  3311                           
  3312                           ;incstack = 0
  3313                           ; Regs used in _getAD: [wreg+status,2+status,0+pclath+cstack]
  3314                           ;getAD@adcon0 stored from wreg
  3315  0C85  00F5               	movwf	getAD@adcon0
  3316                           
  3317                           ;MCU_B1.c: 435: ADCON0 = adcon0;
  3318  0C86  0875               	movf	getAD@adcon0,w
  3319  0C87  1283               	bcf	3,5	;RP0=0, select bank0
  3320  0C88  1303               	bcf	3,6	;RP1=0, select bank0
  3321  0C89  009F               	movwf	31	;volatile
  3322                           
  3323                           ;MCU_B1.c: 436: ADCON1 = adcon1;
  3324  0C8A  0874               	movf	getAD@adcon1,w
  3325  0C8B  1683               	bsf	3,5	;RP0=1, select bank1
  3326  0C8C  1303               	bcf	3,6	;RP1=0, select bank1
  3327  0C8D  009F               	movwf	31	;volatile
  3328                           
  3329                           ;MCU_B1.c: 437: GO_nDONE = 1;
  3330  0C8E  1283               	bcf	3,5	;RP0=0, select bank0
  3331  0C8F  1303               	bcf	3,6	;RP1=0, select bank0
  3332  0C90  149F               	bsf	31,1	;volatile
  3333                           
  3334                           ;MCU_B1.c: 438: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  3335  0C91  2C95               	goto	l4611
  3336  0C92                     l4609:	
  3337                           
  3338                           ;MCU_B1.c: 439: Timeout_Counter();
  3339  0C92  158A  23AD  158A   	fcall	_Timeout_Counter
  3340  0C95                     l4611:	
  3341  0C95  1283               	bcf	3,5	;RP0=0, select bank0
  3342  0C96  1303               	bcf	3,6	;RP1=0, select bank0
  3343  0C97  1C9F               	btfss	31,1	;volatile
  3344  0C98  2C9B               	goto	l4615
  3345  0C99  1D27               	btfss	_myMain+2,2
  3346  0C9A  2C92               	goto	l4609
  3347  0C9B                     l4615:	
  3348                           
  3349                           ;MCU_B1.c: 440: };
  3350                           ;MCU_B1.c: 441: set_TimeoutCleared();
  3351  0C9B  158A  22C4         	fcall	_set_TimeoutCleared
  3352                           
  3353                           ;MCU_B1.c: 442: return ADRES;
  3354  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  3355  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  3356  0C9F  081E               	movf	30,w	;volatile
  3357  0CA0  0008               	return
  3358  0CA1                     __end_of_getAD:	
  3359                           
  3360                           	psect	text8
  3361  0AC4                     __ptext8:	
  3362 ;; *************** function _set_TimeoutCleared *****************
  3363 ;; Defined at:
  3364 ;;		line 281 in file "../src/Main_B1.c"
  3365 ;; Parameters:    Size  Location     Type
  3366 ;;		None
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;		None
  3369 ;; Return value:  Size  Location     Type
  3370 ;;		None               void
  3371 ;; Registers used:
  3372 ;;		status,2
  3373 ;; Tracked objects:
  3374 ;;		On entry : 0/0
  3375 ;;		On exit  : 0/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3378 ;;      Params:         0       0       0       0
  3379 ;;      Locals:         0       0       0       0
  3380 ;;      Temps:          0       0       0       0
  3381 ;;      Totals:         0       0       0       0
  3382 ;;Total ram usage:        0 bytes
  3383 ;; Hardware stack levels used:    1
  3384 ;; Hardware stack levels required when called:    2
  3385 ;; This function calls:
  3386 ;;		Nothing
  3387 ;; This function is called by:
  3388 ;;		_getAD
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           
  3393                           ;psect for function _set_TimeoutCleared
  3394  0AC4                     _set_TimeoutCleared:	
  3395                           
  3396                           ;Main_B1.c: 282: myMain.Timeout = 0;
  3397                           
  3398                           ;incstack = 0
  3399                           ; Regs used in _set_TimeoutCleared: [status,2]
  3400  0AC4  1283               	bcf	3,5	;RP0=0, select bank0
  3401  0AC5  1303               	bcf	3,6	;RP1=0, select bank0
  3402  0AC6  1127               	bcf	_myMain+2,2
  3403                           
  3404                           ;Main_B1.c: 283: myMain.Timeout_Counter = 0;
  3405  0AC7  01A8               	clrf	_myMain+3
  3406  0AC8  01A9               	clrf	_myMain+4
  3407  0AC9  0008               	return
  3408  0ACA                     __end_of_set_TimeoutCleared:	
  3409                           
  3410                           	psect	text9
  3411  0BAD                     __ptext9:	
  3412 ;; *************** function _Timeout_Counter *****************
  3413 ;; Defined at:
  3414 ;;		line 272 in file "../src/Main_B1.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;		None
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;		None
  3419 ;; Return value:  Size  Location     Type
  3420 ;;		None               void
  3421 ;; Registers used:
  3422 ;;		wreg, status,2
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3428 ;;      Params:         0       0       0       0
  3429 ;;      Locals:         0       0       0       0
  3430 ;;      Temps:          0       0       0       0
  3431 ;;      Totals:         0       0       0       0
  3432 ;;Total ram usage:        0 bytes
  3433 ;; Hardware stack levels used:    1
  3434 ;; Hardware stack levels required when called:    2
  3435 ;; This function calls:
  3436 ;;		Nothing
  3437 ;; This function is called by:
  3438 ;;		_getAD
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           
  3443                           ;psect for function _Timeout_Counter
  3444  0BAD                     _Timeout_Counter:	
  3445                           
  3446                           ;Main_B1.c: 273: myMain.Timeout_Counter++;
  3447                           
  3448                           ;incstack = 0
  3449                           ; Regs used in _Timeout_Counter: [wreg+status,2]
  3450  0BAD  3001               	movlw	1
  3451  0BAE  1283               	bcf	3,5	;RP0=0, select bank0
  3452  0BAF  1303               	bcf	3,6	;RP1=0, select bank0
  3453  0BB0  07A8               	addwf	_myMain+3,f
  3454  0BB1  1803               	skipnc
  3455  0BB2  0AA9               	incf	_myMain+4,f
  3456  0BB3  3000               	movlw	0
  3457  0BB4  07A9               	addwf	_myMain+4,f
  3458                           
  3459                           ;Main_B1.c: 274: if (myMain.Timeout_Counter == 25000) {
  3460  0BB5  3061               	movlw	97
  3461  0BB6  0629               	xorwf	_myMain+4,w
  3462  0BB7  1D03               	skipz
  3463  0BB8  2BBB               	goto	u5155
  3464  0BB9  30A8               	movlw	168
  3465  0BBA  0628               	xorwf	_myMain+3,w
  3466  0BBB                     u5155:	
  3467  0BBB  1D03               	skipz
  3468  0BBC  0008               	return
  3469                           
  3470                           ;Main_B1.c: 275: myMain.Timeout_Counter = 0;
  3471  0BBD  01A8               	clrf	_myMain+3
  3472  0BBE  01A9               	clrf	_myMain+4
  3473                           
  3474                           ;Main_B1.c: 276: myMain.Timeout = 1;
  3475  0BBF  1527               	bsf	_myMain+2,2
  3476  0BC0  0008               	return
  3477  0BC1                     __end_of_Timeout_Counter:	
  3478                           
  3479                           	psect	text10
  3480  0B78                     __ptext10:	
  3481 ;; *************** function _WDT_Main *****************
  3482 ;; Defined at:
  3483 ;;		line 1116 in file "../src/MCU_B1.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;		None
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;		None
  3488 ;; Return value:  Size  Location     Type
  3489 ;;		None               void
  3490 ;; Registers used:
  3491 ;;		wreg, status,2, status,0, pclath, cstack
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3497 ;;      Params:         0       0       0       0
  3498 ;;      Locals:         0       0       0       0
  3499 ;;      Temps:          1       0       0       0
  3500 ;;      Totals:         1       0       0       0
  3501 ;;Total ram usage:        1 bytes
  3502 ;; Hardware stack levels used:    1
  3503 ;; Hardware stack levels required when called:    3
  3504 ;; This function calls:
  3505 ;;		_WDT_Clearing
  3506 ;; This function is called by:
  3507 ;;		_main
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           
  3512                           ;psect for function _WDT_Main
  3513  0B78                     _WDT_Main:	
  3514                           
  3515                           ;MCU_B1.c: 1117: if (WDT.Enable == 1) {
  3516                           
  3517                           ;incstack = 0
  3518                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  3519  0B78  1283               	bcf	3,5	;RP0=0, select bank0
  3520  0B79  1303               	bcf	3,6	;RP1=0, select bank0
  3521  0B7A  1C35               	btfss	_WDT,0
  3522  0B7B  0008               	return
  3523                           
  3524                           ;MCU_B1.c: 1118: if (WDT.Timer-- > 0) {
  3525  0B7C  3001               	movlw	1
  3526  0B7D  02B6               	subwf	_WDT+1,f
  3527  0B7E  0836               	movf	_WDT+1,w
  3528  0B7F  3AFF               	xorlw	255
  3529  0B80  1903               	skipnz
  3530  0B81  0008               	return
  3531                           
  3532                           ;MCU_B1.c: 1119: WDT.Timer = 100;
  3533  0B82  3064               	movlw	100
  3534  0B83  00F4               	movwf	??_WDT_Main
  3535  0B84  0874               	movf	??_WDT_Main,w
  3536  0B85  00B6               	movwf	_WDT+1
  3537                           
  3538                           ;MCU_B1.c: 1120: WDT_Clearing();
  3539  0B86  118A  2002         	fcall	_WDT_Clearing
  3540  0B88  0008               	return
  3541  0B89                     __end_of_WDT_Main:	
  3542                           
  3543                           	psect	text11
  3544  0002                     __ptext11:	
  3545 ;; *************** function _WDT_Clearing *****************
  3546 ;; Defined at:
  3547 ;;		line 1126 in file "../src/MCU_B1.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;		None
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;		None
  3552 ;; Return value:  Size  Location     Type
  3553 ;;		None               void
  3554 ;; Registers used:
  3555 ;;		None
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3561 ;;      Params:         0       0       0       0
  3562 ;;      Locals:         0       0       0       0
  3563 ;;      Temps:          0       0       0       0
  3564 ;;      Totals:         0       0       0       0
  3565 ;;Total ram usage:        0 bytes
  3566 ;; Hardware stack levels used:    1
  3567 ;; Hardware stack levels required when called:    2
  3568 ;; This function calls:
  3569 ;;		Nothing
  3570 ;; This function is called by:
  3571 ;;		_WDT_Main
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           
  3576                           ;psect for function _WDT_Clearing
  3577  0002                     _WDT_Clearing:	
  3578                           
  3579                           ;incstack = 0
  3580                           ; Regs used in _WDT_Clearing: []
  3581  0002  0064               	clrwdt	;# 
  3582  0003  0008               	return
  3583  0004                     __end_of_WDT_Clearing:	
  3584                           
  3585                           	psect	text12
  3586  0AA4                     __ptext12:	
  3587 ;; *************** function _Temp_Main *****************
  3588 ;; Defined at:
  3589 ;;		line 57 in file "../src/OverTemperature_B1.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;		None
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;		None
  3594 ;; Return value:  Size  Location     Type
  3595 ;;		None               void
  3596 ;; Registers used:
  3597 ;;		wreg, status,2, status,0, pclath, cstack
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3603 ;;      Params:         0       0       0       0
  3604 ;;      Locals:         0       0       0       0
  3605 ;;      Temps:          0       0       0       0
  3606 ;;      Totals:         0       0       0       0
  3607 ;;Total ram usage:        0 bytes
  3608 ;; Hardware stack levels used:    1
  3609 ;; Hardware stack levels required when called:    4
  3610 ;; This function calls:
  3611 ;;		_setTemp_Main
  3612 ;; This function is called by:
  3613 ;;		_main
  3614 ;; This function uses a non-reentrant model
  3615 ;;
  3616                           
  3617                           
  3618                           ;psect for function _Temp_Main
  3619  0AA4                     _Temp_Main:	
  3620                           
  3621                           ;OverTemperature_B1.c: 59: setTemp_Main();
  3622                           
  3623                           ;incstack = 0
  3624                           ; Regs used in _Temp_Main: [wreg+status,2+status,0+pclath+cstack]
  3625  0AA4  118A  270B         	fcall	_setTemp_Main
  3626  0AA6  0008               	return
  3627  0AA7                     __end_of_Temp_Main:	
  3628                           
  3629                           	psect	text13
  3630  070B                     __ptext13:	
  3631 ;; *************** function _setTemp_Main *****************
  3632 ;; Defined at:
  3633 ;;		line 64 in file "../src/OverTemperature_B1.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;		None
  3636 ;; Auto vars:     Size  Location     Type
  3637 ;;  AD              1   10[BANK0 ] unsigned char 
  3638 ;;  DangerValue     1    9[BANK0 ] unsigned char 
  3639 ;;  SafeValue       1    8[BANK0 ] unsigned char 
  3640 ;;  TempGO          1    7[BANK0 ] unsigned char 
  3641 ;;  error           1    6[BANK0 ] unsigned char 
  3642 ;; Return value:  Size  Location     Type
  3643 ;;		None               void
  3644 ;; Registers used:
  3645 ;;		wreg, status,2, status,0, pclath, cstack
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3651 ;;      Params:         0       0       0       0
  3652 ;;      Locals:         0       5       0       0
  3653 ;;      Temps:          1       0       0       0
  3654 ;;      Totals:         1       5       0       0
  3655 ;;Total ram usage:        6 bytes
  3656 ;; Hardware stack levels used:    1
  3657 ;; Hardware stack levels required when called:    3
  3658 ;; This function calls:
  3659 ;;		_getMain_All_Error_Status
  3660 ;;		_getMain_All_LightsStatus
  3661 ;; This function is called by:
  3662 ;;		_Temp_Main
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           
  3667                           ;psect for function _setTemp_Main
  3668  070B                     _setTemp_Main:	
  3669                           
  3670                           ;OverTemperature_B1.c: 65: char error = getMain_All_Error_Status(0);
  3671                           
  3672                           ;incstack = 0
  3673                           ; Regs used in _setTemp_Main: [wreg+status,2+status,0+pclath+cstack]
  3674  070B  3000               	movlw	0
  3675  070C  158A  25BA  118A   	fcall	_getMain_All_Error_Status
  3676  070F  00F5               	movwf	??_setTemp_Main
  3677  0710  0875               	movf	??_setTemp_Main,w
  3678  0711  1283               	bcf	3,5	;RP0=0, select bank0
  3679  0712  1303               	bcf	3,6	;RP1=0, select bank0
  3680  0713  00D3               	movwf	setTemp_Main@error
  3681                           
  3682                           ;OverTemperature_B1.c: 66: ADtype SafeValue = 0, DangerValue = 0, AD;
  3683  0714  01D5               	clrf	setTemp_Main@SafeValue
  3684  0715  01D6               	clrf	setTemp_Main@DangerValue
  3685                           
  3686                           ;OverTemperature_B1.c: 67: char TempGO = getMain_All_LightsStatus();
  3687  0716  118A  27F7  118A   	fcall	_getMain_All_LightsStatus
  3688  0719  00F5               	movwf	??_setTemp_Main
  3689  071A  0875               	movf	??_setTemp_Main,w
  3690  071B  1283               	bcf	3,5	;RP0=0, select bank0
  3691  071C  1303               	bcf	3,6	;RP1=0, select bank0
  3692  071D  00D4               	movwf	setTemp_Main@TempGO
  3693                           
  3694                           ;OverTemperature_B1.c: 69: if (Temp.Enable == 1) {
  3695  071E  1C39               	btfss	_Temp,0
  3696  071F  2F82               	goto	l820
  3697                           
  3698                           ;OverTemperature_B1.c: 77: if (Temp.ADtoGO == 0) {
  3699  0720  1939               	btfsc	_Temp,2
  3700  0721  2F3E               	goto	l3515
  3701                           
  3702                           ;OverTemperature_B1.c: 78: if ((TempGO == 1 && Temp.ERROR == 0) || Temp.ERROR == 1) {
  3703  0722  0854               	movf	setTemp_Main@TempGO,w
  3704  0723  3A01               	xorlw	1
  3705  0724  1D03               	skipz
  3706  0725  2F28               	goto	l826
  3707  0726  1CB9               	btfss	_Temp,1
  3708  0727  2F2A               	goto	l3507
  3709  0728                     l826:	
  3710  0728  1CB9               	btfss	_Temp,1
  3711  0729  2F3B               	goto	l3513
  3712  072A                     l3507:	
  3713                           
  3714                           ;OverTemperature_B1.c: 79: Temp.Time++;
  3715  072A  3001               	movlw	1
  3716  072B  07BA               	addwf	_Temp+1,f
  3717  072C  1803               	skipnc
  3718  072D  0ABB               	incf	_Temp+2,f
  3719  072E  3000               	movlw	0
  3720  072F  07BB               	addwf	_Temp+2,f
  3721                           
  3722                           ;OverTemperature_B1.c: 80: if (Temp.Time >= (5000 / 20)) {
  3723  0730  3000               	movlw	0
  3724  0731  023B               	subwf	_Temp+2,w
  3725  0732  30FA               	movlw	250
  3726  0733  1903               	skipnz
  3727  0734  023A               	subwf	_Temp+1,w
  3728  0735  1C03               	skipc
  3729  0736  0008               	return
  3730                           
  3731                           ;OverTemperature_B1.c: 81: Temp.Time = 0;
  3732  0737  01BA               	clrf	_Temp+1
  3733  0738  01BB               	clrf	_Temp+2
  3734                           
  3735                           ;OverTemperature_B1.c: 82: Temp.ADtoGO = 1;
  3736  0739  1539               	bsf	_Temp,2
  3737                           
  3738                           ;OverTemperature_B1.c: 83: }
  3739                           ;OverTemperature_B1.c: 84: } else {
  3740  073A  0008               	return
  3741  073B                     l3513:	
  3742                           
  3743                           ;OverTemperature_B1.c: 85: Temp.Time = 0;
  3744  073B  01BA               	clrf	_Temp+1
  3745  073C  01BB               	clrf	_Temp+2
  3746                           
  3747                           ;OverTemperature_B1.c: 86: }
  3748                           ;OverTemperature_B1.c: 87: } else {
  3749  073D  0008               	return
  3750  073E                     l3515:	
  3751                           
  3752                           ;OverTemperature_B1.c: 88: Temp.Time++;
  3753  073E  3001               	movlw	1
  3754  073F  07BA               	addwf	_Temp+1,f
  3755  0740  1803               	skipnc
  3756  0741  0ABB               	incf	_Temp+2,f
  3757  0742  3000               	movlw	0
  3758  0743  07BB               	addwf	_Temp+2,f
  3759                           
  3760                           ;OverTemperature_B1.c: 89: if (Temp.Time >= (100 / 20)) {
  3761  0744  3000               	movlw	0
  3762  0745  023B               	subwf	_Temp+2,w
  3763  0746  3005               	movlw	5
  3764  0747  1903               	skipnz
  3765  0748  023A               	subwf	_Temp+1,w
  3766  0749  1C03               	skipc
  3767  074A  0008               	return
  3768                           
  3769                           ;OverTemperature_B1.c: 90: Temp.Time = 0;
  3770  074B  01BA               	clrf	_Temp+1
  3771  074C  01BB               	clrf	_Temp+2
  3772                           
  3773                           ;OverTemperature_B1.c: 95: if (Temp.ADV > 0) {
  3774  074D  083F               	movf	_Temp+6,w
  3775  074E  1903               	btfsc	3,2
  3776  074F  2F7E               	goto	l831
  3777                           
  3778                           ;OverTemperature_B1.c: 96: Temp.ADtoGO = 0;
  3779  0750  1139               	bcf	_Temp,2
  3780                           
  3781                           ;OverTemperature_B1.c: 97: AD = Temp.ADV;
  3782  0751  083F               	movf	_Temp+6,w
  3783  0752  00F5               	movwf	??_setTemp_Main
  3784  0753  0875               	movf	??_setTemp_Main,w
  3785  0754  00D7               	movwf	setTemp_Main@AD
  3786                           
  3787                           ;OverTemperature_B1.c: 106: SafeValue = 0x50;
  3788  0755  3050               	movlw	80
  3789  0756  00F5               	movwf	??_setTemp_Main
  3790  0757  0875               	movf	??_setTemp_Main,w
  3791  0758  00D5               	movwf	setTemp_Main@SafeValue
  3792                           
  3793                           ;OverTemperature_B1.c: 107: DangerValue = 0x76;
  3794  0759  3076               	movlw	118
  3795  075A  00F5               	movwf	??_setTemp_Main
  3796  075B  0875               	movf	??_setTemp_Main,w
  3797  075C  00D6               	movwf	setTemp_Main@DangerValue
  3798                           
  3799                           ;OverTemperature_B1.c: 119: if (Temp.ERROR == 1) {
  3800  075D  1CB9               	btfss	_Temp,1
  3801  075E  2F6E               	goto	l3539
  3802                           
  3803                           ;OverTemperature_B1.c: 120: if (AD >= SafeValue) {
  3804  075F  0855               	movf	setTemp_Main@SafeValue,w
  3805  0760  0257               	subwf	setTemp_Main@AD,w
  3806  0761  1C03               	skipc
  3807  0762  2F7D               	goto	l3549
  3808                           
  3809                           ;OverTemperature_B1.c: 121: Temp.Count++;
  3810  0763  3001               	movlw	1
  3811  0764  00F5               	movwf	??_setTemp_Main
  3812  0765  0875               	movf	??_setTemp_Main,w
  3813  0766  07BC               	addwf	_Temp+3,f
  3814                           
  3815                           ;OverTemperature_B1.c: 122: if (Temp.Count >= 3) {
  3816  0767  3003               	movlw	3
  3817  0768  023C               	subwf	_Temp+3,w
  3818  0769  1C03               	skipc
  3819  076A  2F7E               	goto	l831
  3820                           
  3821                           ;OverTemperature_B1.c: 123: Temp.Count = 0;
  3822  076B  01BC               	clrf	_Temp+3
  3823                           
  3824                           ;OverTemperature_B1.c: 124: Temp.ERROR = 0;
  3825  076C  10B9               	bcf	_Temp,1
  3826                           
  3827                           ;OverTemperature_B1.c: 126: }
  3828                           ;OverTemperature_B1.c: 127: } else {
  3829                           
  3830                           ;OverTemperature_B1.c: 125: ;;
  3831  076D  2F7E               	goto	l831
  3832  076E                     l3539:	
  3833                           ;OverTemperature_B1.c: 129: }
  3834                           ;OverTemperature_B1.c: 130: } else {
  3835                           
  3836                           ;OverTemperature_B1.c: 128: Temp.Count = 0;
  3837                           
  3838                           
  3839                           ;OverTemperature_B1.c: 131: if (AD <= DangerValue) {
  3840  076E  0857               	movf	setTemp_Main@AD,w
  3841  076F  0256               	subwf	setTemp_Main@DangerValue,w
  3842  0770  1C03               	skipc
  3843  0771  2F7D               	goto	l3549
  3844                           
  3845                           ;OverTemperature_B1.c: 132: Temp.Count++;
  3846  0772  3001               	movlw	1
  3847  0773  00F5               	movwf	??_setTemp_Main
  3848  0774  0875               	movf	??_setTemp_Main,w
  3849  0775  07BC               	addwf	_Temp+3,f
  3850                           
  3851                           ;OverTemperature_B1.c: 133: if (Temp.Count >= 3) {
  3852  0776  3003               	movlw	3
  3853  0777  023C               	subwf	_Temp+3,w
  3854  0778  1C03               	skipc
  3855  0779  2F7E               	goto	l831
  3856                           
  3857                           ;OverTemperature_B1.c: 134: Temp.Count = 0;
  3858  077A  01BC               	clrf	_Temp+3
  3859                           
  3860                           ;OverTemperature_B1.c: 135: Temp.ERROR = 1;
  3861  077B  14B9               	bsf	_Temp,1
  3862                           
  3863                           ;OverTemperature_B1.c: 136: }
  3864                           ;OverTemperature_B1.c: 137: } else {
  3865  077C  2F7E               	goto	l831
  3866  077D                     l3549:	
  3867                           
  3868                           ;OverTemperature_B1.c: 138: Temp.Count = 0;
  3869  077D  01BC               	clrf	_Temp+3
  3870  077E                     l831:	
  3871                           ;OverTemperature_B1.c: 139: }
  3872                           ;OverTemperature_B1.c: 140: }
  3873                           ;OverTemperature_B1.c: 141: ;;
  3874                           ;OverTemperature_B1.c: 142: ;;
  3875                           
  3876                           
  3877                           ;OverTemperature_B1.c: 158: }
  3878                           ;OverTemperature_B1.c: 159: Temp.ADH[0] = 0;
  3879  077E  01BD               	clrf	_Temp+4
  3880                           
  3881                           ;OverTemperature_B1.c: 160: Temp.ADH[1] = 0;
  3882  077F  01BE               	clrf	_Temp+5
  3883                           
  3884                           ;OverTemperature_B1.c: 161: Temp.ADV = 0;
  3885  0780  01BF               	clrf	_Temp+6
  3886                           
  3887                           ;OverTemperature_B1.c: 162: }
  3888                           ;OverTemperature_B1.c: 163: }
  3889                           ;OverTemperature_B1.c: 166: } else {
  3890  0781  0008               	return
  3891  0782                     l820:	
  3892                           
  3893                           ;OverTemperature_B1.c: 167: if (myMain.PowerON == 1) {
  3894  0782  1C25               	btfss	_myMain,0
  3895  0783  0008               	return
  3896                           
  3897                           ;OverTemperature_B1.c: 168: Temp.Enable = 1;
  3898  0784  1439               	bsf	_Temp,0
  3899  0785  0008               	return
  3900  0786                     __end_of_setTemp_Main:	
  3901                           
  3902                           	psect	text14
  3903  0AA1                     __ptext14:	
  3904 ;; *************** function _Temp_Initialization *****************
  3905 ;; Defined at:
  3906 ;;		line 8 in file "../src/OverTemperature_B1.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;		None
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;		None
  3911 ;; Return value:  Size  Location     Type
  3912 ;;		None               void
  3913 ;; Registers used:
  3914 ;;		status,2, status,0, pclath, cstack
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3920 ;;      Params:         0       0       0       0
  3921 ;;      Locals:         0       0       0       0
  3922 ;;      Temps:          0       0       0       0
  3923 ;;      Totals:         0       0       0       0
  3924 ;;Total ram usage:        0 bytes
  3925 ;; Hardware stack levels used:    1
  3926 ;; Hardware stack levels required when called:    3
  3927 ;; This function calls:
  3928 ;;		_setTemp_Initialization
  3929 ;; This function is called by:
  3930 ;;		_main
  3931 ;; This function uses a non-reentrant model
  3932 ;;
  3933                           
  3934                           
  3935                           ;psect for function _Temp_Initialization
  3936  0AA1                     _Temp_Initialization:	
  3937                           
  3938                           ;OverTemperature_B1.c: 10: setTemp_Initialization();
  3939                           
  3940                           ;incstack = 0
  3941                           ; Regs used in _Temp_Initialization: [status,2+status,0+pclath+cstack]
  3942  0AA1  158A  2293         	fcall	_setTemp_Initialization
  3943  0AA3  0008               	return
  3944  0AA4                     __end_of_Temp_Initialization:	
  3945                           
  3946                           	psect	text15
  3947  0A93                     __ptext15:	
  3948 ;; *************** function _setTemp_Initialization *****************
  3949 ;; Defined at:
  3950 ;;		line 52 in file "../src/OverTemperature_B1.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;		None
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;		None
  3955 ;; Return value:  Size  Location     Type
  3956 ;;		None               void
  3957 ;; Registers used:
  3958 ;;		None
  3959 ;; Tracked objects:
  3960 ;;		On entry : 0/0
  3961 ;;		On exit  : 0/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3964 ;;      Params:         0       0       0       0
  3965 ;;      Locals:         0       0       0       0
  3966 ;;      Temps:          0       0       0       0
  3967 ;;      Totals:         0       0       0       0
  3968 ;;Total ram usage:        0 bytes
  3969 ;; Hardware stack levels used:    1
  3970 ;; Hardware stack levels required when called:    2
  3971 ;; This function calls:
  3972 ;;		Nothing
  3973 ;; This function is called by:
  3974 ;;		_Temp_Initialization
  3975 ;; This function uses a non-reentrant model
  3976 ;;
  3977                           
  3978                           
  3979                           ;psect for function _setTemp_Initialization
  3980  0A93                     _setTemp_Initialization:	
  3981                           
  3982                           ;incstack = 0
  3983                           ; Regs used in _setTemp_Initialization: []
  3984  0A93  0008               	return
  3985  0A94                     __end_of_setTemp_Initialization:	
  3986                           
  3987                           	psect	text16
  3988  0A9E                     __ptext16:	
  3989 ;; *************** function _SYSC_Main *****************
  3990 ;; Defined at:
  3991 ;;		line 17 in file "../src/SYSC_B1.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;		None
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;		None
  3996 ;; Return value:  Size  Location     Type
  3997 ;;		None               void
  3998 ;; Registers used:
  3999 ;;		wreg, status,2, status,0, pclath, cstack
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4005 ;;      Params:         0       0       0       0
  4006 ;;      Locals:         0       0       0       0
  4007 ;;      Temps:          0       0       0       0
  4008 ;;      Totals:         0       0       0       0
  4009 ;;Total ram usage:        0 bytes
  4010 ;; Hardware stack levels used:    1
  4011 ;; Hardware stack levels required when called:    4
  4012 ;; This function calls:
  4013 ;;		_setSYSC_Main
  4014 ;; This function is called by:
  4015 ;;		_main
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019                           
  4020                           ;psect for function _SYSC_Main
  4021  0A9E                     _SYSC_Main:	
  4022                           
  4023                           ;SYSC_B1.c: 19: setSYSC_Main();
  4024                           
  4025                           ;incstack = 0
  4026                           ; Regs used in _SYSC_Main: [wreg+status,2+status,0+pclath+cstack]
  4027  0A9E  158A  2638         	fcall	_setSYSC_Main
  4028  0AA0  0008               	return
  4029  0AA1                     __end_of_SYSC_Main:	
  4030                           
  4031                           	psect	text17
  4032  0E38                     __ptext17:	
  4033 ;; *************** function _setSYSC_Main *****************
  4034 ;; Defined at:
  4035 ;;		line 23 in file "../src/SYSC_B1.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;		None
  4038 ;; Auto vars:     Size  Location     Type
  4039 ;;		None
  4040 ;; Return value:  Size  Location     Type
  4041 ;;		None               void
  4042 ;; Registers used:
  4043 ;;		wreg, status,2, status,0, pclath, cstack
  4044 ;; Tracked objects:
  4045 ;;		On entry : 0/0
  4046 ;;		On exit  : 0/0
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4049 ;;      Params:         0       0       0       0
  4050 ;;      Locals:         0       0       0       0
  4051 ;;      Temps:          0       0       0       0
  4052 ;;      Totals:         0       0       0       0
  4053 ;;Total ram usage:        0 bytes
  4054 ;; Hardware stack levels used:    1
  4055 ;; Hardware stack levels required when called:    3
  4056 ;; This function calls:
  4057 ;;		_getMain_All_Error_Status
  4058 ;; This function is called by:
  4059 ;;		_SYSC_Main
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           
  4064                           ;psect for function _setSYSC_Main
  4065  0E38                     _setSYSC_Main:	
  4066                           
  4067                           ;SYSC_B1.c: 25: if (SYSC.Enable == 1) {
  4068                           
  4069                           ;incstack = 0
  4070                           ; Regs used in _setSYSC_Main: [wreg+status,2+status,0+pclath+cstack]
  4071  0E38  1283               	bcf	3,5	;RP0=0, select bank0
  4072  0E39  1303               	bcf	3,6	;RP1=0, select bank0
  4073  0E3A  1C20               	btfss	_SYSC,0
  4074  0E3B  0008               	return
  4075                           
  4076                           ;SYSC_B1.c: 26: if (SYSC.ERROR == 0) {
  4077  0E3C  18A0               	btfsc	_SYSC,1
  4078  0E3D  2E4F               	goto	l3565
  4079                           
  4080                           ;SYSC_B1.c: 27: SYSC.Time++;
  4081  0E3E  3001               	movlw	1
  4082  0E3F  07A1               	addwf	_SYSC+1,f
  4083  0E40  1803               	skipnc
  4084  0E41  0AA2               	incf	_SYSC+2,f
  4085  0E42  3000               	movlw	0
  4086  0E43  07A2               	addwf	_SYSC+2,f
  4087                           
  4088                           ;SYSC_B1.c: 28: if (SYSC.Time >= (500 / 20)) {
  4089  0E44  3000               	movlw	0
  4090  0E45  0222               	subwf	_SYSC+2,w
  4091  0E46  3019               	movlw	25
  4092  0E47  1903               	skipnz
  4093  0E48  0221               	subwf	_SYSC+1,w
  4094  0E49  1C03               	skipc
  4095  0E4A  0008               	return
  4096                           
  4097                           ;SYSC_B1.c: 29: SYSC.Time = 0;
  4098  0E4B  01A1               	clrf	_SYSC+1
  4099  0E4C  01A2               	clrf	_SYSC+2
  4100                           
  4101                           ;SYSC_B1.c: 30: SYSC.ERROR = 1;
  4102  0E4D  14A0               	bsf	_SYSC,1
  4103                           
  4104                           ;SYSC_B1.c: 31: }
  4105                           ;SYSC_B1.c: 32: } else {
  4106  0E4E  0008               	return
  4107  0E4F                     l3565:	
  4108                           
  4109                           ;SYSC_B1.c: 33: if (getMain_All_Error_Status(1) == 0) {
  4110  0E4F  3001               	movlw	1
  4111  0E50  158A  25BA  158A   	fcall	_getMain_All_Error_Status
  4112  0E53  3800               	iorlw	0
  4113  0E54  1D03               	skipz
  4114  0E55  0008               	return
  4115                           
  4116                           ;SYSC_B1.c: 34: SYSC.Time++;
  4117  0E56  3001               	movlw	1
  4118  0E57  1283               	bcf	3,5	;RP0=0, select bank0
  4119  0E58  1303               	bcf	3,6	;RP1=0, select bank0
  4120  0E59  07A1               	addwf	_SYSC+1,f
  4121  0E5A  1803               	skipnc
  4122  0E5B  0AA2               	incf	_SYSC+2,f
  4123  0E5C  3000               	movlw	0
  4124  0E5D  07A2               	addwf	_SYSC+2,f
  4125                           
  4126                           ;SYSC_B1.c: 35: if (SYSC.Time >= (500 / 20)) {
  4127  0E5E  3000               	movlw	0
  4128  0E5F  0222               	subwf	_SYSC+2,w
  4129  0E60  3019               	movlw	25
  4130  0E61  1903               	skipnz
  4131  0E62  0221               	subwf	_SYSC+1,w
  4132  0E63  1C03               	skipc
  4133  0E64  2E6A               	goto	l3571
  4134                           
  4135                           ;SYSC_B1.c: 36: SYSC.Time = 0;
  4136  0E65  01A1               	clrf	_SYSC+1
  4137  0E66  01A2               	clrf	_SYSC+2
  4138                           
  4139                           ;SYSC_B1.c: 37: SYSC.Counter = 0;
  4140  0E67  01A3               	clrf	_SYSC+3
  4141  0E68  01A4               	clrf	_SYSC+4
  4142                           
  4143                           ;SYSC_B1.c: 38: } else {
  4144  0E69  0008               	return
  4145  0E6A                     l3571:	
  4146                           
  4147                           ;SYSC_B1.c: 39: SYSC.Counter++;
  4148  0E6A  3001               	movlw	1
  4149  0E6B  07A3               	addwf	_SYSC+3,f
  4150  0E6C  1803               	skipnc
  4151  0E6D  0AA4               	incf	_SYSC+4,f
  4152  0E6E  3000               	movlw	0
  4153  0E6F  07A4               	addwf	_SYSC+4,f
  4154                           
  4155                           ;SYSC_B1.c: 40: if (SYSC.Counter == (10000 / 20)) {
  4156  0E70  3001               	movlw	1
  4157  0E71  0624               	xorwf	_SYSC+4,w
  4158  0E72  1D03               	skipz
  4159  0E73  2E76               	goto	u3365
  4160  0E74  30F4               	movlw	244
  4161  0E75  0623               	xorwf	_SYSC+3,w
  4162  0E76                     u3365:	
  4163  0E76  1D03               	skipz
  4164  0E77  0008               	return
  4165                           
  4166                           ;SYSC_B1.c: 41: SYSC.Counter = 0;
  4167  0E78  01A3               	clrf	_SYSC+3
  4168  0E79  01A4               	clrf	_SYSC+4
  4169                           
  4170                           ;SYSC_B1.c: 42: SYSC.ERROR = 0;
  4171  0E7A  10A0               	bcf	_SYSC,1
  4172  0E7B  0008               	return
  4173  0E7C                     __end_of_setSYSC_Main:	
  4174                           
  4175                           	psect	text18
  4176  0A9B                     __ptext18:	
  4177 ;; *************** function _SYSC_Initialization *****************
  4178 ;; Defined at:
  4179 ;;		line 7 in file "../src/SYSC_B1.c"
  4180 ;; Parameters:    Size  Location     Type
  4181 ;;		None
  4182 ;; Auto vars:     Size  Location     Type
  4183 ;;		None
  4184 ;; Return value:  Size  Location     Type
  4185 ;;		None               void
  4186 ;; Registers used:
  4187 ;;		status,2, status,0, pclath, cstack
  4188 ;; Tracked objects:
  4189 ;;		On entry : 0/0
  4190 ;;		On exit  : 0/0
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4193 ;;      Params:         0       0       0       0
  4194 ;;      Locals:         0       0       0       0
  4195 ;;      Temps:          0       0       0       0
  4196 ;;      Totals:         0       0       0       0
  4197 ;;Total ram usage:        0 bytes
  4198 ;; Hardware stack levels used:    1
  4199 ;; Hardware stack levels required when called:    3
  4200 ;; This function calls:
  4201 ;;		_setSYSC_Initialization
  4202 ;; This function is called by:
  4203 ;;		_main
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206                           
  4207                           
  4208                           ;psect for function _SYSC_Initialization
  4209  0A9B                     _SYSC_Initialization:	
  4210                           
  4211                           ;SYSC_B1.c: 9: setSYSC_Initialization();
  4212                           
  4213                           ;incstack = 0
  4214                           ; Regs used in _SYSC_Initialization: [status,2+status,0+pclath+cstack]
  4215  0A9B  158A  22AF         	fcall	_setSYSC_Initialization
  4216  0A9D  0008               	return
  4217  0A9E                     __end_of_SYSC_Initialization:	
  4218                           
  4219                           	psect	text19
  4220  0AAF                     __ptext19:	
  4221 ;; *************** function _setSYSC_Initialization *****************
  4222 ;; Defined at:
  4223 ;;		line 13 in file "../src/SYSC_B1.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;		None
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;		None
  4228 ;; Return value:  Size  Location     Type
  4229 ;;		None               void
  4230 ;; Registers used:
  4231 ;;		None
  4232 ;; Tracked objects:
  4233 ;;		On entry : 0/0
  4234 ;;		On exit  : 0/0
  4235 ;;		Unchanged: 0/0
  4236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4237 ;;      Params:         0       0       0       0
  4238 ;;      Locals:         0       0       0       0
  4239 ;;      Temps:          0       0       0       0
  4240 ;;      Totals:         0       0       0       0
  4241 ;;Total ram usage:        0 bytes
  4242 ;; Hardware stack levels used:    1
  4243 ;; Hardware stack levels required when called:    2
  4244 ;; This function calls:
  4245 ;;		Nothing
  4246 ;; This function is called by:
  4247 ;;		_SYSC_Initialization
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251                           
  4252                           ;psect for function _setSYSC_Initialization
  4253  0AAF                     _setSYSC_Initialization:	
  4254                           
  4255                           ;SYSC_B1.c: 14: SYSC.Enable = 1;
  4256                           
  4257                           ;incstack = 0
  4258                           ; Regs used in _setSYSC_Initialization: []
  4259  0AAF  1283               	bcf	3,5	;RP0=0, select bank0
  4260  0AB0  1303               	bcf	3,6	;RP1=0, select bank0
  4261  0AB1  1420               	bsf	_SYSC,0
  4262  0AB2  0008               	return
  4263  0AB3                     __end_of_setSYSC_Initialization:	
  4264                           
  4265                           	psect	text20
  4266  0026                     __ptext20:	
  4267 ;; *************** function _PIR_Main *****************
  4268 ;; Defined at:
  4269 ;;		line 13 in file "../src/PIR_B1.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;		None
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;  LightsStatus    1   17[BANK0 ] unsigned char 
  4274 ;;  cds             1   16[BANK0 ] unsigned char 
  4275 ;;  TriggerValue    1   15[BANK0 ] unsigned char 
  4276 ;;  Enable_Switc    1   12[BANK0 ] unsigned char 
  4277 ;;  error           1   11[BANK0 ] unsigned char 
  4278 ;; Return value:  Size  Location     Type
  4279 ;;		None               void
  4280 ;; Registers used:
  4281 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4287 ;;      Params:         0       0       0       0
  4288 ;;      Locals:         0       7       0       0
  4289 ;;      Temps:          0       5       0       0
  4290 ;;      Totals:         0      12       0       0
  4291 ;;Total ram usage:       12 bytes
  4292 ;; Hardware stack levels used:    1
  4293 ;; Hardware stack levels required when called:    5
  4294 ;; This function calls:
  4295 ;;		_getCDS_Status
  4296 ;;		_getLights_Status
  4297 ;;		_getMain_All_Error_Status
  4298 ;;		_setLED
  4299 ;;		_setLights_SwOff
  4300 ;;		_setLights_SwOn
  4301 ;; This function is called by:
  4302 ;;		_main
  4303 ;; This function uses a non-reentrant model
  4304 ;;
  4305                           
  4306                           
  4307                           ;psect for function _PIR_Main
  4308  0026                     _PIR_Main:	
  4309                           
  4310                           ;PIR_B1.c: 14: char error = getMain_All_Error_Status(0);
  4311                           
  4312                           ;incstack = 0
  4313                           ; Regs used in _PIR_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4314  0026  3000               	movlw	0
  4315  0027  158A  25BA  118A   	fcall	_getMain_All_Error_Status
  4316  002A  1283               	bcf	3,5	;RP0=0, select bank0
  4317  002B  1303               	bcf	3,6	;RP1=0, select bank0
  4318  002C  00D3               	movwf	??_PIR_Main
  4319  002D  0853               	movf	??_PIR_Main,w
  4320  002E  00D8               	movwf	PIR_Main@error
  4321                           
  4322                           ;PIR_B1.c: 15: char cds = getCDS_Status();
  4323  002F  158A  22E8  118A   	fcall	_getCDS_Status
  4324  0032  1283               	bcf	3,5	;RP0=0, select bank0
  4325  0033  1303               	bcf	3,6	;RP1=0, select bank0
  4326  0034  00D3               	movwf	??_PIR_Main
  4327  0035  0853               	movf	??_PIR_Main,w
  4328  0036  00DD               	movwf	PIR_Main@cds
  4329                           
  4330                           ;PIR_B1.c: 16: char LightsStatus = 0;
  4331  0037  01DE               	clrf	PIR_Main@LightsStatus
  4332                           
  4333                           ;PIR_B1.c: 17: char Enable_Switch = 1;
  4334  0038  01D9               	clrf	PIR_Main@Enable_Switch
  4335  0039  0AD9               	incf	PIR_Main@Enable_Switch,f
  4336                           
  4337                           ;PIR_B1.c: 18: char TriggerValue = 0;
  4338  003A  01DC               	clrf	PIR_Main@TriggerValue
  4339                           
  4340                           ;PIR_B1.c: 25: LightsStatus = getLights_Status(1);
  4341  003B  3001               	movlw	1
  4342  003C  158A  2367  118A   	fcall	_getLights_Status
  4343  003F  1283               	bcf	3,5	;RP0=0, select bank0
  4344  0040  1303               	bcf	3,6	;RP1=0, select bank0
  4345  0041  00D3               	movwf	??_PIR_Main
  4346  0042  0853               	movf	??_PIR_Main,w
  4347  0043  00DE               	movwf	PIR_Main@LightsStatus
  4348                           
  4349                           ;PIR_B1.c: 35: if (_PIR.Enable == 1) {
  4350  0044  1683               	bsf	3,5	;RP0=1, select bank1
  4351  0045  1303               	bcf	3,6	;RP1=0, select bank1
  4352  0046  1C20               	btfss	__PIR^(0+128),0
  4353  0047  2A11               	goto	l898
  4354                           
  4355                           ;PIR_B1.c: 36: if (error == 0) {
  4356  0048  1283               	bcf	3,5	;RP0=0, select bank0
  4357  0049  1303               	bcf	3,6	;RP1=0, select bank0
  4358  004A  08D8               	movf	PIR_Main@error,f
  4359  004B  1D03               	skipz
  4360  004C  288B               	goto	l899
  4361                           
  4362                           ;PIR_B1.c: 38: if (cds == 1 && Enable_Switch == 1) {
  4363  004D  085D               	movf	PIR_Main@cds,w
  4364  004E  3A01               	xorlw	1
  4365  004F  1D03               	skipz
  4366  0050  2859               	goto	l900
  4367  0051  0859               	movf	PIR_Main@Enable_Switch,w
  4368  0052  3A01               	xorlw	1
  4369  0053  1D03               	skipz
  4370  0054  2859               	goto	l900
  4371                           
  4372                           ;PIR_B1.c: 39: _PIR.Available = 1;
  4373  0055  1683               	bsf	3,5	;RP0=1, select bank1
  4374  0056  1303               	bcf	3,6	;RP1=0, select bank1
  4375  0057  17A0               	bsf	__PIR^(0+128),7
  4376                           
  4377                           ;PIR_B1.c: 40: } else {
  4378  0058  287B               	goto	l5131
  4379  0059                     l900:	
  4380                           
  4381                           ;PIR_B1.c: 41: _PIR.Available = 0;
  4382  0059  1683               	bsf	3,5	;RP0=1, select bank1
  4383  005A  1303               	bcf	3,6	;RP1=0, select bank1
  4384  005B  13A0               	bcf	__PIR^(0+128),7
  4385                           
  4386                           ;PIR_B1.c: 43: if (_PIR.OK == 1) {
  4387  005C  1DA0               	btfss	__PIR^(0+128),3
  4388  005D  287B               	goto	l5131
  4389                           
  4390                           ;PIR_B1.c: 45: setLED(1, 0);
  4391  005E  1283               	bcf	3,5	;RP0=0, select bank0
  4392  005F  1303               	bcf	3,6	;RP1=0, select bank0
  4393  0060  01CD               	clrf	setLED@command
  4394  0061  3001               	movlw	1
  4395  0062  158A  2735  118A   	fcall	_setLED
  4396                           
  4397                           ;PIR_B1.c: 46: setLED(2, 0);
  4398  0065  1283               	bcf	3,5	;RP0=0, select bank0
  4399  0066  1303               	bcf	3,6	;RP1=0, select bank0
  4400  0067  01CD               	clrf	setLED@command
  4401  0068  3002               	movlw	2
  4402  0069  158A  2735  118A   	fcall	_setLED
  4403                           
  4404                           ;PIR_B1.c: 51: if (getLights_Status(1) == 1) {
  4405  006C  3001               	movlw	1
  4406  006D  158A  2367  118A   	fcall	_getLights_Status
  4407  0070  3A01               	xorlw	1
  4408  0071  1D03               	skipz
  4409  0072  287B               	goto	l5131
  4410                           
  4411                           ;PIR_B1.c: 52: setLights_SwOn(1);
  4412  0073  3001               	movlw	1
  4413  0074  158A  24E1  118A   	fcall	_setLights_SwOn
  4414                           
  4415                           ;PIR_B1.c: 53: setLights_SwOff(1);
  4416  0077  3001               	movlw	1
  4417  0078  158A  241C  118A   	fcall	_setLights_SwOff
  4418  007B                     l5131:	
  4419                           
  4420                           ;PIR_B1.c: 55: }
  4421                           ;PIR_B1.c: 67: }
  4422                           ;PIR_B1.c: 68: }
  4423                           ;PIR_B1.c: 72: if (_PIR.Detect == 0) {
  4424  007B  1683               	bsf	3,5	;RP0=1, select bank1
  4425  007C  1303               	bcf	3,6	;RP1=0, select bank1
  4426  007D  1A20               	btfsc	__PIR^(0+128),4
  4427  007E  2891               	goto	l906
  4428                           
  4429                           ;PIR_B1.c: 73: _PIR.Detect = 1;
  4430  007F  1620               	bsf	__PIR^(0+128),4
  4431                           
  4432                           ;PIR_B1.c: 75: if (_PIR.OK == 0) {
  4433  0080  19A0               	btfsc	__PIR^(0+128),3
  4434  0081  2891               	goto	l906
  4435                           
  4436                           ;PIR_B1.c: 76: setLED(1, 1);
  4437  0082  1283               	bcf	3,5	;RP0=0, select bank0
  4438  0083  1303               	bcf	3,6	;RP1=0, select bank0
  4439  0084  01CD               	clrf	setLED@command
  4440  0085  0ACD               	incf	setLED@command,f
  4441  0086  3001               	movlw	1
  4442  0087  158A  2735  118A   	fcall	_setLED
  4443                           
  4444                           ;PIR_B1.c: 77: }
  4445                           ;PIR_B1.c: 80: }
  4446                           ;PIR_B1.c: 81: } else {
  4447  008A  2891               	goto	l906
  4448  008B                     l899:	
  4449                           
  4450                           ;PIR_B1.c: 82: if (_PIR.Detect == 1) {
  4451  008B  1683               	bsf	3,5	;RP0=1, select bank1
  4452  008C  1303               	bcf	3,6	;RP1=0, select bank1
  4453  008D  1E20               	btfss	__PIR^(0+128),4
  4454  008E  2891               	goto	l906
  4455                           
  4456                           ;PIR_B1.c: 83: _PIR.Detect = 0;
  4457  008F  1220               	bcf	__PIR^(0+128),4
  4458                           
  4459                           ;PIR_B1.c: 84: _PIR.Available = 0;
  4460  0090  13A0               	bcf	__PIR^(0+128),7
  4461  0091                     l906:	
  4462                           
  4463                           ;PIR_B1.c: 102: }
  4464                           ;PIR_B1.c: 103: }
  4465                           ;PIR_B1.c: 105: if (_PIR.ADtoGO == 0) {
  4466  0091  1683               	bsf	3,5	;RP0=1, select bank1
  4467  0092  1303               	bcf	3,6	;RP1=0, select bank1
  4468  0093  18A0               	btfsc	__PIR^(0+128),1
  4469  0094  28A4               	goto	l908
  4470                           
  4471                           ;PIR_B1.c: 106: _PIR.Time++;
  4472  0095  3001               	movlw	1
  4473  0096  1283               	bcf	3,5	;RP0=0, select bank0
  4474  0097  1303               	bcf	3,6	;RP1=0, select bank0
  4475  0098  00D3               	movwf	??_PIR_Main
  4476  0099  0853               	movf	??_PIR_Main,w
  4477  009A  1683               	bsf	3,5	;RP0=1, select bank1
  4478  009B  1303               	bcf	3,6	;RP1=0, select bank1
  4479  009C  07A2               	addwf	(__PIR^(0+128)+2),f
  4480                           
  4481                           ;PIR_B1.c: 107: if (_PIR.Time == (100 / 20)) {
  4482  009D  0822               	movf	(__PIR^(0+128)+2),w
  4483  009E  3A05               	xorlw	5
  4484  009F  1D03               	skipz
  4485  00A0  29B1               	goto	l5219
  4486                           
  4487                           ;PIR_B1.c: 108: _PIR.Time = 0;
  4488  00A1  01A2               	clrf	(__PIR^(0+128)+2)
  4489                           
  4490                           ;PIR_B1.c: 109: _PIR.ADtoGO = 1;
  4491  00A2  14A0               	bsf	__PIR^(0+128),1
  4492                           
  4493                           ;PIR_B1.c: 110: }
  4494                           ;PIR_B1.c: 111: } else {
  4495  00A3  29B1               	goto	l5219
  4496  00A4                     l908:	
  4497                           
  4498                           ;PIR_B1.c: 112: if (_PIR.GO == 1) {
  4499  00A4  1D20               	btfss	__PIR^(0+128),2
  4500  00A5  29B1               	goto	l5219
  4501                           
  4502                           ;PIR_B1.c: 113: _PIR.GO = 0;
  4503  00A6  1120               	bcf	__PIR^(0+128),2
  4504                           
  4505                           ;PIR_B1.c: 114: _PIR.ADtoGO = 0;
  4506  00A7  10A0               	bcf	__PIR^(0+128),1
  4507                           
  4508                           ;PIR_B1.c: 115: if (_PIR.Available == 1) {
  4509  00A8  1BA0               	btfsc	__PIR^(0+128),7
  4510                           
  4511                           ;PIR_B1.c: 116: if (_PIR.OK == 1) {
  4512  00A9  1DA0               	btfss	__PIR^(0+128),3
  4513  00AA  29B1               	goto	l5219
  4514                           
  4515                           ;PIR_B1.c: 118: _PIR.Time++;
  4516  00AB  3001               	movlw	1
  4517  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  4518  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  4519  00AE  00D3               	movwf	??_PIR_Main
  4520  00AF  0853               	movf	??_PIR_Main,w
  4521  00B0  1683               	bsf	3,5	;RP0=1, select bank1
  4522  00B1  1303               	bcf	3,6	;RP1=0, select bank1
  4523  00B2  07A2               	addwf	(__PIR^(0+128)+2),f
  4524                           
  4525                           ;PIR_B1.c: 119: if (_PIR.Time == 60) {
  4526  00B3  0822               	movf	(__PIR^(0+128)+2),w
  4527  00B4  3A3C               	xorlw	60
  4528  00B5  1D03               	skipz
  4529  00B6  28EB               	goto	l5187
  4530                           
  4531                           ;PIR_B1.c: 120: _PIR.Time = 0;
  4532  00B7  01A2               	clrf	(__PIR^(0+128)+2)
  4533                           
  4534                           ;PIR_B1.c: 121: if (_PIR.RangeCount >= 90) {
  4535  00B8  305A               	movlw	90
  4536  00B9  0247               	subwf	(__PIR^(0+128)+39),w
  4537  00BA  1C03               	skipc
  4538  00BB  28C7               	goto	l5169
  4539                           
  4540                           ;PIR_B1.c: 122: _PIR.RangeTime1 = 0;
  4541  00BC  01C6               	clrf	(__PIR^(0+128)+38)
  4542                           
  4543                           ;PIR_B1.c: 124: if (_PIR.RangeValue == 25) {
  4544  00BD  0848               	movf	(__PIR^(0+128)+40),w
  4545  00BE  3A19               	xorlw	25
  4546  00BF  1903               	btfsc	3,2
  4547  00C0  28DC               	goto	L12
  4548                           
  4549                           ;PIR_B1.c: 126: } else if (_PIR.RangeValue == (25+10)) {
  4550                           
  4551                           ;PIR_B1.c: 125: _PIR.RangeValue = (25+10);
  4552  00C1  0848               	movf	(__PIR^(0+128)+40),w
  4553  00C2  3A23               	xorlw	35
  4554  00C3  1D03               	skipz
  4555  00C4  28EA               	goto	l5185
  4556                           
  4557                           ;PIR_B1.c: 127: _PIR.RangeValue = (25+20);
  4558  00C5  302D               	movlw	45
  4559  00C6  28E3               	goto	L9
  4560  00C7                     l5169:	
  4561                           ;PIR_B1.c: 128: }
  4562                           ;PIR_B1.c: 129: } else if (_PIR.RangeCount <= 10) {
  4563                           
  4564  00C7  300B               	movlw	11
  4565  00C8  0247               	subwf	(__PIR^(0+128)+39),w
  4566  00C9  1803               	skipnc
  4567  00CA  28EA               	goto	l5185
  4568                           
  4569                           ;PIR_B1.c: 130: _PIR.RangeTime1++;
  4570  00CB  3001               	movlw	1
  4571  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  4572  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  4573  00CE  00D3               	movwf	??_PIR_Main
  4574  00CF  0853               	movf	??_PIR_Main,w
  4575  00D0  1683               	bsf	3,5	;RP0=1, select bank1
  4576  00D1  1303               	bcf	3,6	;RP1=0, select bank1
  4577  00D2  07C6               	addwf	(__PIR^(0+128)+38),f
  4578                           
  4579                           ;PIR_B1.c: 131: if (_PIR.RangeTime1 == 2) {
  4580  00D3  0846               	movf	(__PIR^(0+128)+38),w
  4581  00D4  3A02               	xorlw	2
  4582  00D5  1D03               	skipz
  4583  00D6  28EA               	goto	l5185
  4584                           
  4585                           ;PIR_B1.c: 132: _PIR.RangeTime1 = 0;
  4586  00D7  01C6               	clrf	(__PIR^(0+128)+38)
  4587                           
  4588                           ;PIR_B1.c: 134: if (_PIR.RangeValue == (25+20)) {
  4589  00D8  0848               	movf	(__PIR^(0+128)+40),w
  4590  00D9  3A2D               	xorlw	45
  4591  00DA  1D03               	skipz
  4592  00DB  28DE               	goto	l5181
  4593  00DC                     L12:	
  4594                           
  4595                           ;PIR_B1.c: 135: _PIR.RangeValue = (25+10);
  4596  00DC  3023               	movlw	35
  4597  00DD  28E3               	goto	L9
  4598  00DE                     l5181:	
  4599                           ;PIR_B1.c: 136: } else if (_PIR.RangeValue == (25+10)) {
  4600                           
  4601  00DE  0848               	movf	(__PIR^(0+128)+40),w
  4602  00DF  3A23               	xorlw	35
  4603  00E0  1D03               	skipz
  4604  00E1  28EA               	goto	l5185
  4605                           
  4606                           ;PIR_B1.c: 137: _PIR.RangeValue = 25;
  4607  00E2  3019               	movlw	25
  4608  00E3                     L9:	
  4609  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  4610  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  4611  00E5  00D3               	movwf	??_PIR_Main
  4612  00E6  0853               	movf	??_PIR_Main,w
  4613  00E7  1683               	bsf	3,5	;RP0=1, select bank1
  4614  00E8  1303               	bcf	3,6	;RP1=0, select bank1
  4615  00E9  00C8               	movwf	(__PIR^(0+128)+40)
  4616  00EA                     l5185:	
  4617                           
  4618                           ;PIR_B1.c: 138: }
  4619                           ;PIR_B1.c: 139: }
  4620                           ;PIR_B1.c: 140: }
  4621                           ;PIR_B1.c: 141: _PIR.RangeCount = 0;
  4622  00EA  01C7               	clrf	(__PIR^(0+128)+39)
  4623  00EB                     l5187:	
  4624                           
  4625                           ;PIR_B1.c: 142: }
  4626                           ;PIR_B1.c: 145: if ((_PIR.SignalAD >= (_PIR.ReferenceVoltage - _PIR.RangeValue))
  4627                           ;PIR_B1.c: 146: && (_PIR.SignalAD <= (_PIR.ReferenceVoltage + _PIR.RangeValue))) {
  4628  00EB  0848               	movf	(__PIR^(0+128)+40),w
  4629  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  4630  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  4631  00EE  00D3               	movwf	??_PIR_Main
  4632  00EF  01D4               	clrf	??_PIR_Main+1
  4633  00F0  09D3               	comf	??_PIR_Main,f
  4634  00F1  09D4               	comf	??_PIR_Main+1,f
  4635  00F2  0AD3               	incf	??_PIR_Main,f
  4636  00F3  1903               	skipnz
  4637  00F4  0AD4               	incf	??_PIR_Main+1,f
  4638  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  4639  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  4640  00F7  0823               	movf	(__PIR^(0+128)+3),w
  4641  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  4642  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  4643  00FA  0753               	addwf	??_PIR_Main,w
  4644  00FB  00D5               	movwf	??_PIR_Main+2
  4645  00FC  0854               	movf	??_PIR_Main+1,w
  4646  00FD  1803               	skipnc
  4647  00FE  0A54               	incf	??_PIR_Main+1,w
  4648  00FF  00D6               	movwf	??_PIR_Main+3
  4649  0100  0856               	movf	??_PIR_Main+3,w
  4650  0101  3A80               	xorlw	128
  4651  0102  3C80               	sublw	128
  4652  0103  1D03               	skipz
  4653  0104  2909               	goto	u6665
  4654  0105  0855               	movf	??_PIR_Main+2,w
  4655  0106  1683               	bsf	3,5	;RP0=1, select bank1
  4656  0107  1303               	bcf	3,6	;RP1=0, select bank1
  4657  0108  0221               	subwf	(__PIR^(0+128)+1),w
  4658  0109                     u6665:	
  4659  0109  1C03               	skipc
  4660  010A  292B               	goto	l5197
  4661  010B  1683               	bsf	3,5	;RP0=1, select bank1
  4662  010C  1303               	bcf	3,6	;RP1=0, select bank1
  4663  010D  0823               	movf	(__PIR^(0+128)+3),w
  4664  010E  0748               	addwf	(__PIR^(0+128)+40),w
  4665  010F  1283               	bcf	3,5	;RP0=0, select bank0
  4666  0110  1303               	bcf	3,6	;RP1=0, select bank0
  4667  0111  00D3               	movwf	??_PIR_Main
  4668  0112  01D4               	clrf	??_PIR_Main+1
  4669  0113  0DD4               	rlf	??_PIR_Main+1,f
  4670  0114  0854               	movf	??_PIR_Main+1,w
  4671  0115  3A80               	xorlw	128
  4672  0116  00D5               	movwf	??_PIR_Main+2
  4673  0117  3080               	movlw	128
  4674  0118  0255               	subwf	??_PIR_Main+2,w
  4675  0119  1D03               	skipz
  4676  011A  2921               	goto	u6675
  4677  011B  1683               	bsf	3,5	;RP0=1, select bank1
  4678  011C  1303               	bcf	3,6	;RP1=0, select bank1
  4679  011D  0821               	movf	(__PIR^(0+128)+1),w
  4680  011E  1283               	bcf	3,5	;RP0=0, select bank0
  4681  011F  1303               	bcf	3,6	;RP1=0, select bank0
  4682  0120  0253               	subwf	??_PIR_Main,w
  4683  0121                     u6675:	
  4684  0121  1C03               	skipc
  4685  0122  292B               	goto	l5197
  4686                           
  4687                           ;PIR_B1.c: 148: _PIR.Count = 0;
  4688  0123  1683               	bsf	3,5	;RP0=1, select bank1
  4689  0124  1303               	bcf	3,6	;RP1=0, select bank1
  4690  0125  01BE               	clrf	(__PIR^(0+128)+30)
  4691  0126  01BF               	clrf	((__PIR+1)^(0+128)+30)
  4692                           
  4693                           ;PIR_B1.c: 155: setLED(1, 0);
  4694  0127  1283               	bcf	3,5	;RP0=0, select bank0
  4695  0128  1303               	bcf	3,6	;RP1=0, select bank0
  4696  0129  01CD               	clrf	setLED@command
  4697  012A  299A               	goto	L13
  4698  012B                     l5197:	
  4699                           ;PIR_B1.c: 159: } else {
  4700                           
  4701                           ;PIR_B1.c: 156: setLED(2, 0);
  4702                           
  4703                           
  4704                           ;PIR_B1.c: 162: _PIR.RangeCount++;
  4705  012B  3001               	movlw	1
  4706  012C  1283               	bcf	3,5	;RP0=0, select bank0
  4707  012D  1303               	bcf	3,6	;RP1=0, select bank0
  4708  012E  00D3               	movwf	??_PIR_Main
  4709  012F  0853               	movf	??_PIR_Main,w
  4710  0130  1683               	bsf	3,5	;RP0=1, select bank1
  4711  0131  1303               	bcf	3,6	;RP1=0, select bank1
  4712  0132  07C7               	addwf	(__PIR^(0+128)+39),f
  4713                           
  4714                           ;PIR_B1.c: 163: _PIR.Count++;
  4715  0133  3001               	movlw	1
  4716  0134  07BE               	addwf	(__PIR^(0+128)+30),f
  4717  0135  1803               	skipnc
  4718  0136  0ABF               	incf	((__PIR+1)^(0+128)+30),f
  4719  0137  3000               	movlw	0
  4720  0138  07BF               	addwf	((__PIR+1)^(0+128)+30),f
  4721                           
  4722                           ;PIR_B1.c: 165: TriggerValue = LightsStatus == 1 ? 3 : 3;
  4723  0139  1283               	bcf	3,5	;RP0=0, select bank0
  4724  013A  1303               	bcf	3,6	;RP1=0, select bank0
  4725  013B  085E               	movf	PIR_Main@LightsStatus,w
  4726  013C  3A01               	xorlw	1
  4727  013D  1903               	skipnz
  4728  013E  293F               	goto	l5205
  4729  013F                     l5205:	
  4730  013F  3003               	movlw	3
  4731  0140  00DA               	movwf	_PIR_Main$2856
  4732  0141  3000               	movlw	0
  4733  0142  00DB               	movwf	_PIR_Main$2856+1
  4734  0143  085A               	movf	_PIR_Main$2856,w
  4735  0144  00D3               	movwf	??_PIR_Main
  4736  0145  0853               	movf	??_PIR_Main,w
  4737  0146  00DC               	movwf	PIR_Main@TriggerValue
  4738                           
  4739                           ;PIR_B1.c: 167: if (_PIR.Count == TriggerValue) {
  4740  0147  085C               	movf	PIR_Main@TriggerValue,w
  4741  0148  00D3               	movwf	??_PIR_Main
  4742  0149  01D4               	clrf	??_PIR_Main+1
  4743  014A  1683               	bsf	3,5	;RP0=1, select bank1
  4744  014B  1303               	bcf	3,6	;RP1=0, select bank1
  4745  014C  083F               	movf	((__PIR+1)^(0+128)+30),w
  4746  014D  1283               	bcf	3,5	;RP0=0, select bank0
  4747  014E  1303               	bcf	3,6	;RP1=0, select bank0
  4748  014F  0654               	xorwf	??_PIR_Main+1,w
  4749  0150  1D03               	skipz
  4750  0151  2958               	goto	u6695
  4751  0152  1683               	bsf	3,5	;RP0=1, select bank1
  4752  0153  1303               	bcf	3,6	;RP1=0, select bank1
  4753  0154  083E               	movf	(__PIR^(0+128)+30),w
  4754  0155  1283               	bcf	3,5	;RP0=0, select bank0
  4755  0156  1303               	bcf	3,6	;RP1=0, select bank0
  4756  0157  0653               	xorwf	??_PIR_Main,w
  4757  0158                     u6695:	
  4758  0158  1D03               	skipz
  4759  0159  29B1               	goto	l5219
  4760                           
  4761                           ;PIR_B1.c: 168: _PIR.Count = 0;
  4762  015A  1683               	bsf	3,5	;RP0=1, select bank1
  4763  015B  1303               	bcf	3,6	;RP1=0, select bank1
  4764  015C  01BE               	clrf	(__PIR^(0+128)+30)
  4765  015D  01BF               	clrf	((__PIR+1)^(0+128)+30)
  4766                           
  4767                           ;PIR_B1.c: 170: _PIR.CloseTimeSeconds = 0;
  4768  015E  01C2               	clrf	(__PIR^(0+128)+34)
  4769                           
  4770                           ;PIR_B1.c: 171: _PIR.CloseTimeMinutes = 0;
  4771  015F  01C0               	clrf	(__PIR^(0+128)+32)
  4772  0160  01C1               	clrf	((__PIR+1)^(0+128)+32)
  4773                           
  4774                           ;PIR_B1.c: 177: if (getLights_Status(1) == 0) {
  4775  0161  3001               	movlw	1
  4776  0162  158A  2367  118A   	fcall	_getLights_Status
  4777  0165  3800               	iorlw	0
  4778  0166  1D03               	skipz
  4779  0167  2970               	goto	l5213
  4780                           
  4781                           ;PIR_B1.c: 178: setLights_SwOn(1);
  4782  0168  3001               	movlw	1
  4783  0169  158A  24E1  118A   	fcall	_setLights_SwOn
  4784                           
  4785                           ;PIR_B1.c: 179: setLights_SwOff(1);
  4786  016C  3001               	movlw	1
  4787  016D  158A  241C  118A   	fcall	_setLights_SwOff
  4788  0170                     l5213:	
  4789                           
  4790                           ;PIR_B1.c: 181: }
  4791                           ;PIR_B1.c: 195: if ((_PIR.SignalAD <= (_PIR.ReferenceVoltage - _PIR.RangeValue))) {
  4792  0170  1683               	bsf	3,5	;RP0=1, select bank1
  4793  0171  1303               	bcf	3,6	;RP1=0, select bank1
  4794  0172  0848               	movf	(__PIR^(0+128)+40),w
  4795  0173  1283               	bcf	3,5	;RP0=0, select bank0
  4796  0174  1303               	bcf	3,6	;RP1=0, select bank0
  4797  0175  00D3               	movwf	??_PIR_Main
  4798  0176  01D4               	clrf	??_PIR_Main+1
  4799  0177  09D3               	comf	??_PIR_Main,f
  4800  0178  09D4               	comf	??_PIR_Main+1,f
  4801  0179  0AD3               	incf	??_PIR_Main,f
  4802  017A  1903               	skipnz
  4803  017B  0AD4               	incf	??_PIR_Main+1,f
  4804  017C  1683               	bsf	3,5	;RP0=1, select bank1
  4805  017D  1303               	bcf	3,6	;RP1=0, select bank1
  4806  017E  0823               	movf	(__PIR^(0+128)+3),w
  4807  017F  1283               	bcf	3,5	;RP0=0, select bank0
  4808  0180  1303               	bcf	3,6	;RP1=0, select bank0
  4809  0181  0753               	addwf	??_PIR_Main,w
  4810  0182  00D5               	movwf	??_PIR_Main+2
  4811  0183  0854               	movf	??_PIR_Main+1,w
  4812  0184  1803               	skipnc
  4813  0185  0A54               	incf	??_PIR_Main+1,w
  4814  0186  00D6               	movwf	??_PIR_Main+3
  4815  0187  0856               	movf	??_PIR_Main+3,w
  4816  0188  3A80               	xorlw	128
  4817  0189  00D7               	movwf	??_PIR_Main+4
  4818  018A  3080               	movlw	128
  4819  018B  0257               	subwf	??_PIR_Main+4,w
  4820  018C  1D03               	skipz
  4821  018D  2994               	goto	u6715
  4822  018E  1683               	bsf	3,5	;RP0=1, select bank1
  4823  018F  1303               	bcf	3,6	;RP1=0, select bank1
  4824  0190  0821               	movf	(__PIR^(0+128)+1),w
  4825  0191  1283               	bcf	3,5	;RP0=0, select bank0
  4826  0192  1303               	bcf	3,6	;RP1=0, select bank0
  4827  0193  0255               	subwf	??_PIR_Main+2,w
  4828  0194                     u6715:	
  4829  0194  1C03               	skipc
  4830  0195  29A2               	goto	l5217
  4831                           
  4832                           ;PIR_B1.c: 196: setLED(1, 1);
  4833  0196  1283               	bcf	3,5	;RP0=0, select bank0
  4834  0197  1303               	bcf	3,6	;RP1=0, select bank0
  4835  0198  01CD               	clrf	setLED@command
  4836  0199  0ACD               	incf	setLED@command,f
  4837  019A                     L13:	
  4838  019A  3001               	movlw	1
  4839  019B  158A  2735  118A   	fcall	_setLED
  4840                           
  4841                           ;PIR_B1.c: 197: setLED(2, 0);
  4842  019E  1283               	bcf	3,5	;RP0=0, select bank0
  4843  019F  1303               	bcf	3,6	;RP1=0, select bank0
  4844  01A0  01CD               	clrf	setLED@command
  4845  01A1  29AD               	goto	L10
  4846  01A2                     l5217:	
  4847                           ;PIR_B1.c: 198: } else {
  4848                           
  4849                           
  4850                           ;PIR_B1.c: 199: setLED(1, 0);
  4851  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  4852  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  4853  01A4  01CD               	clrf	setLED@command
  4854  01A5  3001               	movlw	1
  4855  01A6  158A  2735  118A   	fcall	_setLED
  4856                           
  4857                           ;PIR_B1.c: 200: setLED(2, 1);
  4858  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  4859  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  4860  01AB  01CD               	clrf	setLED@command
  4861  01AC  0ACD               	incf	setLED@command,f
  4862  01AD                     L10:	
  4863  01AD  3002               	movlw	2
  4864  01AE  158A  2735  118A   	fcall	_setLED
  4865  01B1                     l5219:	
  4866                           
  4867                           ;PIR_B1.c: 201: }
  4868                           ;PIR_B1.c: 243: }
  4869                           ;PIR_B1.c: 244: }
  4870                           ;PIR_B1.c: 245: }
  4871                           ;PIR_B1.c: 246: }
  4872                           ;PIR_B1.c: 247: }
  4873                           ;PIR_B1.c: 248: }
  4874                           ;PIR_B1.c: 249: if (_PIR.OK == 0) {
  4875  01B1  1683               	bsf	3,5	;RP0=1, select bank1
  4876  01B2  1303               	bcf	3,6	;RP1=0, select bank1
  4877  01B3  19A0               	btfsc	__PIR^(0+128),3
  4878  01B4  29E1               	goto	l5235
  4879                           
  4880                           ;PIR_B1.c: 250: _PIR.Count++;
  4881  01B5  3001               	movlw	1
  4882  01B6  07BE               	addwf	(__PIR^(0+128)+30),f
  4883  01B7  1803               	skipnc
  4884  01B8  0ABF               	incf	((__PIR+1)^(0+128)+30),f
  4885  01B9  3000               	movlw	0
  4886  01BA  07BF               	addwf	((__PIR+1)^(0+128)+30),f
  4887                           
  4888                           ;PIR_B1.c: 251: if (_PIR.Count == (30000 / 20)) {
  4889  01BB  3005               	movlw	5
  4890  01BC  063F               	xorwf	((__PIR+1)^(0+128)+30),w
  4891  01BD  1D03               	skipz
  4892  01BE  29C1               	goto	u6735
  4893  01BF  30DC               	movlw	220
  4894  01C0  063E               	xorwf	(__PIR^(0+128)+30),w
  4895  01C1                     u6735:	
  4896  01C1  1D03               	skipz
  4897  01C2  0008               	return
  4898                           
  4899                           ;PIR_B1.c: 252: _PIR.Count = 0;
  4900  01C3  01BE               	clrf	(__PIR^(0+128)+30)
  4901  01C4  01BF               	clrf	((__PIR+1)^(0+128)+30)
  4902                           
  4903                           ;PIR_B1.c: 253: _PIR.OK = 1;
  4904  01C5  15A0               	bsf	__PIR^(0+128),3
  4905                           
  4906                           ;PIR_B1.c: 255: setLED(1, 0);
  4907  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  4908  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  4909  01C8  01CD               	clrf	setLED@command
  4910  01C9  3001               	movlw	1
  4911  01CA  158A  2735  118A   	fcall	_setLED
  4912                           
  4913                           ;PIR_B1.c: 258: if (cds == 0) {
  4914  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  4915  01CE  1303               	bcf	3,6	;RP1=0, select bank0
  4916  01CF  08DD               	movf	PIR_Main@cds,f
  4917  01D0  1D03               	skipz
  4918  01D1  0008               	return
  4919                           
  4920                           ;PIR_B1.c: 261: if (getLights_Status(1) == 1) {
  4921  01D2  3001               	movlw	1
  4922  01D3  158A  2367  118A   	fcall	_getLights_Status
  4923  01D6  3A01               	xorlw	1
  4924  01D7  1D03               	skipz
  4925  01D8  0008               	return
  4926                           
  4927                           ;PIR_B1.c: 262: setLights_SwOn(1);
  4928  01D9  3001               	movlw	1
  4929  01DA  158A  24E1  118A   	fcall	_setLights_SwOn
  4930                           
  4931                           ;PIR_B1.c: 263: setLights_SwOff(1);
  4932  01DD  3001               	movlw	1
  4933  01DE  158A  241C         	fcall	_setLights_SwOff
  4934                           
  4935                           ;PIR_B1.c: 265: }
  4936                           ;PIR_B1.c: 277: }
  4937                           ;PIR_B1.c: 278: }
  4938                           ;PIR_B1.c: 279: } else {
  4939  01E0  0008               	return
  4940  01E1                     l5235:	
  4941                           
  4942                           ;PIR_B1.c: 280: if (LightsStatus == 1) {
  4943  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  4944  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  4945  01E3  085E               	movf	PIR_Main@LightsStatus,w
  4946  01E4  3A01               	xorlw	1
  4947  01E5  1D03               	skipz
  4948  01E6  0008               	return
  4949                           
  4950                           ;PIR_B1.c: 281: _PIR.CloseTimeSeconds++;
  4951  01E7  3001               	movlw	1
  4952  01E8  00D3               	movwf	??_PIR_Main
  4953  01E9  0853               	movf	??_PIR_Main,w
  4954  01EA  1683               	bsf	3,5	;RP0=1, select bank1
  4955  01EB  1303               	bcf	3,6	;RP1=0, select bank1
  4956  01EC  07C2               	addwf	(__PIR^(0+128)+34),f
  4957                           
  4958                           ;PIR_B1.c: 282: if (_PIR.CloseTimeSeconds == (1000 / 20)) {
  4959  01ED  0842               	movf	(__PIR^(0+128)+34),w
  4960  01EE  3A32               	xorlw	50
  4961  01EF  1D03               	skipz
  4962  01F0  0008               	return
  4963                           
  4964                           ;PIR_B1.c: 283: _PIR.CloseTimeSeconds = 0;
  4965  01F1  01C2               	clrf	(__PIR^(0+128)+34)
  4966                           
  4967                           ;PIR_B1.c: 284: _PIR.CloseTimeMinutes++;
  4968  01F2  3001               	movlw	1
  4969  01F3  07C0               	addwf	(__PIR^(0+128)+32),f
  4970  01F4  1803               	skipnc
  4971  01F5  0AC1               	incf	((__PIR+1)^(0+128)+32),f
  4972  01F6  3000               	movlw	0
  4973  01F7  07C1               	addwf	((__PIR+1)^(0+128)+32),f
  4974                           
  4975                           ;PIR_B1.c: 285: if (_PIR.CloseTimeMinutes == _PIR.CloseTimeValue) {
  4976  01F8  0844               	movf	((__PIR+1)^(0+128)+35),w
  4977  01F9  0641               	xorwf	((__PIR+1)^(0+128)+32),w
  4978  01FA  1D03               	skipz
  4979  01FB  29FE               	goto	u6785
  4980  01FC  0843               	movf	(__PIR^(0+128)+35),w
  4981  01FD  0640               	xorwf	(__PIR^(0+128)+32),w
  4982  01FE                     u6785:	
  4983  01FE  1D03               	skipz
  4984  01FF  0008               	return
  4985                           
  4986                           ;PIR_B1.c: 286: _PIR.CloseTimeMinutes = 0;
  4987  0200  01C0               	clrf	(__PIR^(0+128)+32)
  4988  0201  01C1               	clrf	((__PIR+1)^(0+128)+32)
  4989                           
  4990                           ;PIR_B1.c: 292: if (getLights_Status(1) == 1) {
  4991  0202  3001               	movlw	1
  4992  0203  158A  2367  118A   	fcall	_getLights_Status
  4993  0206  3A01               	xorlw	1
  4994  0207  1D03               	skipz
  4995  0208  0008               	return
  4996                           
  4997                           ;PIR_B1.c: 293: setLights_SwOn(1);
  4998  0209  3001               	movlw	1
  4999  020A  158A  24E1  118A   	fcall	_setLights_SwOn
  5000                           
  5001                           ;PIR_B1.c: 294: setLights_SwOff(1);
  5002  020D  3001               	movlw	1
  5003  020E  158A  241C         	fcall	_setLights_SwOff
  5004                           
  5005                           ;PIR_B1.c: 296: }
  5006                           ;PIR_B1.c: 308: }
  5007                           ;PIR_B1.c: 309: }
  5008                           ;PIR_B1.c: 310: }
  5009                           ;PIR_B1.c: 311: }
  5010                           ;PIR_B1.c: 312: } else {
  5011  0210  0008               	return
  5012  0211                     l898:	
  5013                           
  5014                           ;PIR_B1.c: 313: if (myMain.PowerON == 1) {
  5015  0211  1283               	bcf	3,5	;RP0=0, select bank0
  5016  0212  1303               	bcf	3,6	;RP1=0, select bank0
  5017  0213  1C25               	btfss	_myMain,0
  5018  0214  0008               	return
  5019                           
  5020                           ;PIR_B1.c: 314: _PIR.Enable = 1;
  5021  0215  1683               	bsf	3,5	;RP0=1, select bank1
  5022  0216  1303               	bcf	3,6	;RP1=0, select bank1
  5023  0217  1420               	bsf	__PIR^(0+128),0
  5024                           
  5025                           ;PIR_B1.c: 316: setLED(1, 1);
  5026  0218  1283               	bcf	3,5	;RP0=0, select bank0
  5027  0219  1303               	bcf	3,6	;RP1=0, select bank0
  5028  021A  01CD               	clrf	setLED@command
  5029  021B  0ACD               	incf	setLED@command,f
  5030  021C  3001               	movlw	1
  5031  021D  158A  2735  118A   	fcall	_setLED
  5032                           
  5033                           ;PIR_B1.c: 321: if (getLights_Status(1) == 0) {
  5034  0220  3001               	movlw	1
  5035  0221  158A  2367  118A   	fcall	_getLights_Status
  5036  0224  3800               	iorlw	0
  5037  0225  1D03               	skipz
  5038  0226  0008               	return
  5039                           
  5040                           ;PIR_B1.c: 322: setLights_SwOn(1);
  5041  0227  3001               	movlw	1
  5042  0228  158A  24E1  118A   	fcall	_setLights_SwOn
  5043                           
  5044                           ;PIR_B1.c: 323: setLights_SwOff(1);
  5045  022B  3001               	movlw	1
  5046  022C  158A  241C         	fcall	_setLights_SwOff
  5047  022E  0008               	return
  5048  022F                     __end_of_PIR_Main:	
  5049                           
  5050                           	psect	text21
  5051  0AE8                     __ptext21:	
  5052 ;; *************** function _getCDS_Status *****************
  5053 ;; Defined at:
  5054 ;;		line 42 in file "../src/CDS_B1.c"
  5055 ;; Parameters:    Size  Location     Type
  5056 ;;		None
  5057 ;; Auto vars:     Size  Location     Type
  5058 ;;  status          1    4[COMMON] unsigned char 
  5059 ;; Return value:  Size  Location     Type
  5060 ;;                  1    wreg      unsigned char 
  5061 ;; Registers used:
  5062 ;;		wreg, status,2
  5063 ;; Tracked objects:
  5064 ;;		On entry : 0/0
  5065 ;;		On exit  : 0/0
  5066 ;;		Unchanged: 0/0
  5067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5068 ;;      Params:         0       0       0       0
  5069 ;;      Locals:         1       0       0       0
  5070 ;;      Temps:          0       0       0       0
  5071 ;;      Totals:         1       0       0       0
  5072 ;;Total ram usage:        1 bytes
  5073 ;; Hardware stack levels used:    1
  5074 ;; Hardware stack levels required when called:    2
  5075 ;; This function calls:
  5076 ;;		Nothing
  5077 ;; This function is called by:
  5078 ;;		_PIR_Main
  5079 ;; This function uses a non-reentrant model
  5080 ;;
  5081                           
  5082                           
  5083                           ;psect for function _getCDS_Status
  5084  0AE8                     _getCDS_Status:	
  5085                           
  5086                           ;CDS_B1.c: 43: char status = _CDS.Status == 1 ? 1 : 0;
  5087                           
  5088                           ;incstack = 0
  5089                           ; Regs used in _getCDS_Status: [wreg+status,2]
  5090  0AE8  3000               	movlw	0
  5091  0AE9  1283               	bcf	3,5	;RP0=0, select bank0
  5092  0AEA  1303               	bcf	3,6	;RP1=0, select bank0
  5093  0AEB  1A2E               	btfsc	__CDS,4
  5094  0AEC  3001               	movlw	1
  5095  0AED  00F4               	movwf	getCDS_Status@status
  5096                           
  5097                           ;CDS_B1.c: 44: return status;
  5098  0AEE  0874               	movf	getCDS_Status@status,w
  5099  0AEF  0008               	return
  5100  0AF0                     __end_of_getCDS_Status:	
  5101                           
  5102                           	psect	text22
  5103  0B15                     __ptext22:	
  5104 ;; *************** function _PIR_Initialization *****************
  5105 ;; Defined at:
  5106 ;;		line 7 in file "../src/PIR_B1.c"
  5107 ;; Parameters:    Size  Location     Type
  5108 ;;		None
  5109 ;; Auto vars:     Size  Location     Type
  5110 ;;		None
  5111 ;; Return value:  Size  Location     Type
  5112 ;;		None               void
  5113 ;; Registers used:
  5114 ;;		wreg
  5115 ;; Tracked objects:
  5116 ;;		On entry : 0/0
  5117 ;;		On exit  : 0/0
  5118 ;;		Unchanged: 0/0
  5119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5120 ;;      Params:         0       0       0       0
  5121 ;;      Locals:         0       0       0       0
  5122 ;;      Temps:          1       0       0       0
  5123 ;;      Totals:         1       0       0       0
  5124 ;;Total ram usage:        1 bytes
  5125 ;; Hardware stack levels used:    1
  5126 ;; Hardware stack levels required when called:    2
  5127 ;; This function calls:
  5128 ;;		Nothing
  5129 ;; This function is called by:
  5130 ;;		_main
  5131 ;; This function uses a non-reentrant model
  5132 ;;
  5133                           
  5134                           
  5135                           ;psect for function _PIR_Initialization
  5136  0B15                     _PIR_Initialization:	
  5137                           
  5138                           ;PIR_B1.c: 8: _PIR.RangeValue = 25;
  5139                           
  5140                           ;incstack = 0
  5141                           ; Regs used in _PIR_Initialization: [wreg]
  5142  0B15  3019               	movlw	25
  5143  0B16  00F4               	movwf	??_PIR_Initialization
  5144  0B17  0874               	movf	??_PIR_Initialization,w
  5145  0B18  1683               	bsf	3,5	;RP0=1, select bank1
  5146  0B19  1303               	bcf	3,6	;RP1=0, select bank1
  5147  0B1A  00C8               	movwf	(__PIR^(0+128)+40)
  5148                           
  5149                           ;PIR_B1.c: 9: _PIR.CloseTimeValue = 5;
  5150  0B1B  3005               	movlw	5
  5151  0B1C  00C3               	movwf	(__PIR^(0+128)+35)
  5152  0B1D  3000               	movlw	0
  5153  0B1E  00C4               	movwf	(__PIR^(0+128)+36)
  5154  0B1F  0008               	return
  5155  0B20                     __end_of_PIR_Initialization:	
  5156                           
  5157                           	psect	text23
  5158  0B58                     __ptext23:	
  5159 ;; *************** function _Mcu_Initialization *****************
  5160 ;; Defined at:
  5161 ;;		line 30 in file "../src/MCU_B1.c"
  5162 ;; Parameters:    Size  Location     Type
  5163 ;;		None
  5164 ;; Auto vars:     Size  Location     Type
  5165 ;;		None
  5166 ;; Return value:  Size  Location     Type
  5167 ;;		None               void
  5168 ;; Registers used:
  5169 ;;		wreg, status,2, status,0, pclath, cstack
  5170 ;; Tracked objects:
  5171 ;;		On entry : 0/0
  5172 ;;		On exit  : 0/0
  5173 ;;		Unchanged: 0/0
  5174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5175 ;;      Params:         0       0       0       0
  5176 ;;      Locals:         0       0       0       0
  5177 ;;      Temps:          0       0       0       0
  5178 ;;      Totals:         0       0       0       0
  5179 ;;Total ram usage:        0 bytes
  5180 ;; Hardware stack levels used:    1
  5181 ;; Hardware stack levels required when called:    3
  5182 ;; This function calls:
  5183 ;;		_ADC_Set
  5184 ;;		_Fosc_Set
  5185 ;;		_IO_Set
  5186 ;;		_TMR1_Set
  5187 ;;		_WDT_Set
  5188 ;; This function is called by:
  5189 ;;		_main
  5190 ;; This function uses a non-reentrant model
  5191 ;;
  5192                           
  5193                           
  5194                           ;psect for function _Mcu_Initialization
  5195  0B58                     _Mcu_Initialization:	
  5196                           
  5197                           ;MCU_B1.c: 32: Fosc_Set();
  5198                           
  5199                           ;incstack = 0
  5200                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  5201  0B58  158A  22B3  158A   	fcall	_Fosc_Set
  5202                           
  5203                           ;MCU_B1.c: 34: IO_Set();
  5204  0B5B  158A  2436  158A   	fcall	_IO_Set
  5205                           
  5206                           ;MCU_B1.c: 36: ;;
  5207                           ;MCU_B1.c: 38: TMR1_Set();
  5208  0B5E  158A  233C  158A   	fcall	_TMR1_Set
  5209                           
  5210                           ;MCU_B1.c: 40: ADC_Set();
  5211  0B61  158A  22D1  158A   	fcall	_ADC_Set
  5212                           
  5213                           ;MCU_B1.c: 42: ;;
  5214                           ;MCU_B1.c: 44: ;;
  5215                           ;MCU_B1.c: 46: ;;
  5216                           ;MCU_B1.c: 48: ;;
  5217                           ;MCU_B1.c: 50: ;;
  5218                           ;MCU_B1.c: 52: WDT_Set();
  5219  0B64  158A  234A         	fcall	_WDT_Set
  5220  0B66  0008               	return
  5221  0B67                     __end_of_Mcu_Initialization:	
  5222                           
  5223                           	psect	text24
  5224  0B4A                     __ptext24:	
  5225 ;; *************** function _WDT_Set *****************
  5226 ;; Defined at:
  5227 ;;		line 1102 in file "../src/MCU_B1.c"
  5228 ;; Parameters:    Size  Location     Type
  5229 ;;		None
  5230 ;; Auto vars:     Size  Location     Type
  5231 ;;		None
  5232 ;; Return value:  Size  Location     Type
  5233 ;;		None               void
  5234 ;; Registers used:
  5235 ;;		wreg
  5236 ;; Tracked objects:
  5237 ;;		On entry : 0/0
  5238 ;;		On exit  : 0/0
  5239 ;;		Unchanged: 0/0
  5240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5241 ;;      Params:         0       0       0       0
  5242 ;;      Locals:         0       0       0       0
  5243 ;;      Temps:          1       0       0       0
  5244 ;;      Totals:         1       0       0       0
  5245 ;;Total ram usage:        1 bytes
  5246 ;; Hardware stack levels used:    1
  5247 ;; Hardware stack levels required when called:    2
  5248 ;; This function calls:
  5249 ;;		Nothing
  5250 ;; This function is called by:
  5251 ;;		_Mcu_Initialization
  5252 ;; This function uses a non-reentrant model
  5253 ;;
  5254                           
  5255                           
  5256                           ;psect for function _WDT_Set
  5257  0B4A                     _WDT_Set:	
  5258                           
  5259                           ;MCU_B1.c: 1104: PSA = 1;
  5260                           
  5261                           ;incstack = 0
  5262                           ; Regs used in _WDT_Set: [wreg]
  5263  0B4A  1683               	bsf	3,5	;RP0=1, select bank1
  5264  0B4B  1303               	bcf	3,6	;RP1=0, select bank1
  5265  0B4C  1581               	bsf	1,3	;volatile
  5266                           
  5267                           ;MCU_B1.c: 1105: PS0 = 1;
  5268  0B4D  1401               	bsf	1,0	;volatile
  5269                           
  5270                           ;MCU_B1.c: 1106: PS1 = 1;
  5271  0B4E  1481               	bsf	1,1	;volatile
  5272                           
  5273                           ;MCU_B1.c: 1107: PS2 = 1;
  5274  0B4F  1501               	bsf	1,2	;volatile
  5275                           
  5276                           ;MCU_B1.c: 1111: WDT.Enable = 1;
  5277  0B50  1283               	bcf	3,5	;RP0=0, select bank0
  5278  0B51  1303               	bcf	3,6	;RP1=0, select bank0
  5279  0B52  1435               	bsf	_WDT,0
  5280                           
  5281                           ;MCU_B1.c: 1112: WDT.Timer = 10;
  5282  0B53  300A               	movlw	10
  5283  0B54  00F4               	movwf	??_WDT_Set
  5284  0B55  0874               	movf	??_WDT_Set,w
  5285  0B56  00B6               	movwf	_WDT+1
  5286  0B57  0008               	return
  5287  0B58                     __end_of_WDT_Set:	
  5288                           
  5289                           	psect	text25
  5290  0B3C                     __ptext25:	
  5291 ;; *************** function _TMR1_Set *****************
  5292 ;; Defined at:
  5293 ;;		line 226 in file "../src/MCU_B1.c"
  5294 ;; Parameters:    Size  Location     Type
  5295 ;;		None
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;		None
  5298 ;; Return value:  Size  Location     Type
  5299 ;;		None               void
  5300 ;; Registers used:
  5301 ;;		wreg
  5302 ;; Tracked objects:
  5303 ;;		On entry : 0/0
  5304 ;;		On exit  : 0/0
  5305 ;;		Unchanged: 0/0
  5306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5307 ;;      Params:         0       0       0       0
  5308 ;;      Locals:         0       0       0       0
  5309 ;;      Temps:          0       0       0       0
  5310 ;;      Totals:         0       0       0       0
  5311 ;;Total ram usage:        0 bytes
  5312 ;; Hardware stack levels used:    1
  5313 ;; Hardware stack levels required when called:    2
  5314 ;; This function calls:
  5315 ;;		Nothing
  5316 ;; This function is called by:
  5317 ;;		_Mcu_Initialization
  5318 ;; This function uses a non-reentrant model
  5319 ;;
  5320                           
  5321                           
  5322                           ;psect for function _TMR1_Set
  5323  0B3C                     _TMR1_Set:	
  5324                           
  5325                           ;MCU_B1.c: 227: T1CON = (0x40 | 0x00 | 0x01);
  5326                           
  5327                           ;incstack = 0
  5328                           ; Regs used in _TMR1_Set: [wreg]
  5329  0B3C  3041               	movlw	65
  5330  0B3D  1283               	bcf	3,5	;RP0=0, select bank0
  5331  0B3E  1303               	bcf	3,6	;RP1=0, select bank0
  5332  0B3F  0090               	movwf	16	;volatile
  5333                           
  5334                           ;MCU_B1.c: 228: TMR1H = (int)((65536-1480)/256);
  5335  0B40  30FA               	movlw	250
  5336  0B41  008F               	movwf	15	;volatile
  5337                           
  5338                           ;MCU_B1.c: 229: TMR1L = (int)((65536-1480)%256);
  5339  0B42  3038               	movlw	56
  5340  0B43  008E               	movwf	14	;volatile
  5341                           
  5342                           ;MCU_B1.c: 230: TMR1IE = 1;
  5343  0B44  1683               	bsf	3,5	;RP0=1, select bank1
  5344  0B45  1303               	bcf	3,6	;RP1=0, select bank1
  5345  0B46  140C               	bsf	12,0	;volatile
  5346                           
  5347                           ;MCU_B1.c: 231: PEIE = 1;
  5348  0B47  170B               	bsf	11,6	;volatile
  5349                           
  5350                           ;MCU_B1.c: 232: GIE = 1;
  5351  0B48  178B               	bsf	11,7	;volatile
  5352  0B49  0008               	return
  5353  0B4A                     __end_of_TMR1_Set:	
  5354                           
  5355                           	psect	text26
  5356  0C36                     __ptext26:	
  5357 ;; *************** function _IO_Set *****************
  5358 ;; Defined at:
  5359 ;;		line 60 in file "../src/MCU_B1.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;		None
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;		None
  5364 ;; Return value:  Size  Location     Type
  5365 ;;		None               void
  5366 ;; Registers used:
  5367 ;;		wreg, status,2
  5368 ;; Tracked objects:
  5369 ;;		On entry : 0/0
  5370 ;;		On exit  : 0/0
  5371 ;;		Unchanged: 0/0
  5372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5373 ;;      Params:         0       0       0       0
  5374 ;;      Locals:         0       0       0       0
  5375 ;;      Temps:          0       0       0       0
  5376 ;;      Totals:         0       0       0       0
  5377 ;;Total ram usage:        0 bytes
  5378 ;; Hardware stack levels used:    1
  5379 ;; Hardware stack levels required when called:    2
  5380 ;; This function calls:
  5381 ;;		Nothing
  5382 ;; This function is called by:
  5383 ;;		_Mcu_Initialization
  5384 ;; This function uses a non-reentrant model
  5385 ;;
  5386                           
  5387                           
  5388                           ;psect for function _IO_Set
  5389  0C36                     _IO_Set:	
  5390                           
  5391                           ;MCU_B1.c: 62: TRISA = 0b00101111;;
  5392                           
  5393                           ;incstack = 0
  5394                           ; Regs used in _IO_Set: [wreg+status,2]
  5395  0C36  302F               	movlw	47
  5396  0C37  1683               	bsf	3,5	;RP0=1, select bank1
  5397  0C38  1303               	bcf	3,6	;RP1=0, select bank1
  5398  0C39  0085               	movwf	5	;volatile
  5399                           
  5400                           ;MCU_B1.c: 63: TRISB = 0b00010011;;
  5401  0C3A  3013               	movlw	19
  5402  0C3B  0086               	movwf	6	;volatile
  5403                           
  5404                           ;MCU_B1.c: 64: TRISC = 0b00001100;;
  5405  0C3C  300C               	movlw	12
  5406  0C3D  0087               	movwf	7	;volatile
  5407                           
  5408                           ;MCU_B1.c: 65: ANSELA = 0b00001111;;
  5409  0C3E  300F               	movlw	15
  5410  0C3F  1683               	bsf	3,5	;RP0=1, select bank3
  5411  0C40  1703               	bsf	3,6	;RP1=1, select bank3
  5412  0C41  0085               	movwf	5	;volatile
  5413                           
  5414                           ;MCU_B1.c: 66: ANSELB = 0b00010010;;
  5415  0C42  3012               	movlw	18
  5416  0C43  0086               	movwf	6	;volatile
  5417                           
  5418                           ;MCU_B1.c: 67: PORTA = 0b10101111;;
  5419  0C44  30AF               	movlw	175
  5420  0C45  1283               	bcf	3,5	;RP0=0, select bank0
  5421  0C46  1303               	bcf	3,6	;RP1=0, select bank0
  5422  0C47  0085               	movwf	5	;volatile
  5423                           
  5424                           ;MCU_B1.c: 68: PORTB = 0b00010011;;
  5425  0C48  3013               	movlw	19
  5426  0C49  0086               	movwf	6	;volatile
  5427                           
  5428                           ;MCU_B1.c: 69: PORTC = 0b00001100;;
  5429  0C4A  300C               	movlw	12
  5430  0C4B  0087               	movwf	7	;volatile
  5431                           
  5432                           ;MCU_B1.c: 71: WPUB = 0b00000000;;
  5433  0C4C  1683               	bsf	3,5	;RP0=1, select bank1
  5434  0C4D  1303               	bcf	3,6	;RP1=0, select bank1
  5435  0C4E  0195               	clrf	21	;volatile
  5436  0C4F  0008               	return
  5437  0C50                     __end_of_IO_Set:	
  5438                           
  5439                           	psect	text27
  5440  0AB3                     __ptext27:	
  5441 ;; *************** function _Fosc_Set *****************
  5442 ;; Defined at:
  5443 ;;		line 56 in file "../src/MCU_B1.c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;		None
  5446 ;; Auto vars:     Size  Location     Type
  5447 ;;		None
  5448 ;; Return value:  Size  Location     Type
  5449 ;;		None               void
  5450 ;; Registers used:
  5451 ;;		wreg
  5452 ;; Tracked objects:
  5453 ;;		On entry : 0/0
  5454 ;;		On exit  : 0/0
  5455 ;;		Unchanged: 0/0
  5456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5457 ;;      Params:         0       0       0       0
  5458 ;;      Locals:         0       0       0       0
  5459 ;;      Temps:          0       0       0       0
  5460 ;;      Totals:         0       0       0       0
  5461 ;;Total ram usage:        0 bytes
  5462 ;; Hardware stack levels used:    1
  5463 ;; Hardware stack levels required when called:    2
  5464 ;; This function calls:
  5465 ;;		Nothing
  5466 ;; This function is called by:
  5467 ;;		_Mcu_Initialization
  5468 ;; This function uses a non-reentrant model
  5469 ;;
  5470                           
  5471                           
  5472                           ;psect for function _Fosc_Set
  5473  0AB3                     _Fosc_Set:	
  5474                           
  5475                           ;MCU_B1.c: 57: OSCCON = 0x3c;
  5476                           
  5477                           ;incstack = 0
  5478                           ; Regs used in _Fosc_Set: [wreg]
  5479  0AB3  303C               	movlw	60
  5480  0AB4  1683               	bsf	3,5	;RP0=1, select bank1
  5481  0AB5  1303               	bcf	3,6	;RP1=0, select bank1
  5482  0AB6  0090               	movwf	16	;volatile
  5483  0AB7  0008               	return
  5484  0AB8                     __end_of_Fosc_Set:	
  5485                           
  5486                           	psect	text28
  5487  0AD1                     __ptext28:	
  5488 ;; *************** function _ADC_Set *****************
  5489 ;; Defined at:
  5490 ;;		line 427 in file "../src/MCU_B1.c"
  5491 ;; Parameters:    Size  Location     Type
  5492 ;;		None
  5493 ;; Auto vars:     Size  Location     Type
  5494 ;;		None
  5495 ;; Return value:  Size  Location     Type
  5496 ;;		None               void
  5497 ;; Registers used:
  5498 ;;		wreg
  5499 ;; Tracked objects:
  5500 ;;		On entry : 0/0
  5501 ;;		On exit  : 0/0
  5502 ;;		Unchanged: 0/0
  5503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5504 ;;      Params:         0       0       0       0
  5505 ;;      Locals:         0       0       0       0
  5506 ;;      Temps:          0       0       0       0
  5507 ;;      Totals:         0       0       0       0
  5508 ;;Total ram usage:        0 bytes
  5509 ;; Hardware stack levels used:    1
  5510 ;; Hardware stack levels required when called:    2
  5511 ;; This function calls:
  5512 ;;		Nothing
  5513 ;; This function is called by:
  5514 ;;		_Mcu_Initialization
  5515 ;; This function uses a non-reentrant model
  5516 ;;
  5517                           
  5518                           
  5519                           ;psect for function _ADC_Set
  5520  0AD1                     _ADC_Set:	
  5521                           
  5522                           ;MCU_B1.c: 428: ADCON1 = 0x73;
  5523                           
  5524                           ;incstack = 0
  5525                           ; Regs used in _ADC_Set: [wreg]
  5526  0AD1  3073               	movlw	115
  5527  0AD2  1683               	bsf	3,5	;RP0=1, select bank1
  5528  0AD3  1303               	bcf	3,6	;RP1=0, select bank1
  5529  0AD4  009F               	movwf	31	;volatile
  5530                           
  5531                           ;MCU_B1.c: 429: FVRCON = 0xc1;
  5532  0AD5  30C1               	movlw	193
  5533  0AD6  009D               	movwf	29	;volatile
  5534  0AD7  0008               	return
  5535  0AD8                     __end_of_ADC_Set:	
  5536                           
  5537                           	psect	text29
  5538  022F                     __ptext29:	
  5539 ;; *************** function _Load_Main *****************
  5540 ;; Defined at:
  5541 ;;		line 39 in file "../src/OverLoad_B1.c"
  5542 ;; Parameters:    Size  Location     Type
  5543 ;;		None
  5544 ;; Auto vars:     Size  Location     Type
  5545 ;;  i               2   15[BANK0 ] int 
  5546 ;;  LightsCount     1   14[BANK0 ] unsigned char 
  5547 ;;  Load_RunStat    1   13[BANK0 ] unsigned char 
  5548 ;;  ErrorCountVa    1   12[BANK0 ] unsigned char 
  5549 ;;  error           1    9[BANK0 ] unsigned char 
  5550 ;; Return value:  Size  Location     Type
  5551 ;;		None               void
  5552 ;; Registers used:
  5553 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5554 ;; Tracked objects:
  5555 ;;		On entry : 0/0
  5556 ;;		On exit  : 0/0
  5557 ;;		Unchanged: 0/0
  5558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5559 ;;      Params:         0       0       0       0
  5560 ;;      Locals:         0       8       0       0
  5561 ;;      Temps:          0       2       0       0
  5562 ;;      Totals:         0      10       0       0
  5563 ;;Total ram usage:       10 bytes
  5564 ;; Hardware stack levels used:    1
  5565 ;; Hardware stack levels required when called:    3
  5566 ;; This function calls:
  5567 ;;		___lwdiv
  5568 ;;		___wmul
  5569 ;;		_getLight_LoadGO
  5570 ;;		_getLight_Load_Status
  5571 ;;		_getMain_All_Error_Status
  5572 ;;		_getMain_All_LightsStatus
  5573 ;;		_getMain_Lights_Count
  5574 ;;		_setLoad_AH_AL_Restore
  5575 ;; This function is called by:
  5576 ;;		_main
  5577 ;; This function uses a non-reentrant model
  5578 ;;
  5579                           
  5580                           
  5581                           ;psect for function _Load_Main
  5582  022F                     _Load_Main:	
  5583                           
  5584                           ;OverLoad_B1.c: 40: char error = getMain_All_Error_Status(0);
  5585                           
  5586                           ;incstack = 0
  5587                           ; Regs used in _Load_Main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5588  022F  3000               	movlw	0
  5589  0230  158A  25BA  118A   	fcall	_getMain_All_Error_Status
  5590  0233  1283               	bcf	3,5	;RP0=0, select bank0
  5591  0234  1303               	bcf	3,6	;RP1=0, select bank0
  5592  0235  00D4               	movwf	??_Load_Main
  5593  0236  0854               	movf	??_Load_Main,w
  5594  0237  00D6               	movwf	Load_Main@error
  5595                           
  5596                           ;OverLoad_B1.c: 41: char Load_RunStatus = 0, ErrorCountValue = 0, LightsCount=0;
  5597  0238  01DA               	clrf	Load_Main@Load_RunStatus
  5598  0239  01D9               	clrf	Load_Main@ErrorCountValue
  5599  023A  01DB               	clrf	Load_Main@LightsCount
  5600                           
  5601                           ;OverLoad_B1.c: 42: if (Load.Enable == 1) {
  5602  023B  1683               	bsf	3,5	;RP0=1, select bank1
  5603  023C  1303               	bcf	3,6	;RP1=0, select bank1
  5604  023D  1C4A               	btfss	_Load^(0+128),0
  5605  023E  2C11               	goto	l700
  5606                           
  5607                           ;OverLoad_B1.c: 44: if (getMain_All_LightsStatus() == 0) {
  5608  023F  118A  27F7  118A   	fcall	_getMain_All_LightsStatus
  5609  0242  3800               	iorlw	0
  5610  0243  1D03               	skipz
  5611  0244  2A48               	goto	l4957
  5612                           
  5613                           ;OverLoad_B1.c: 45: Load.GO = 0;
  5614  0245  1683               	bsf	3,5	;RP0=1, select bank1
  5615  0246  1303               	bcf	3,6	;RP1=0, select bank1
  5616  0247  2A67               	goto	l4973
  5617  0248                     l4957:	
  5618                           ;OverLoad_B1.c: 46: } else {
  5619                           
  5620                           
  5621                           ;OverLoad_B1.c: 69: if (error == 0) {
  5622  0248  1283               	bcf	3,5	;RP0=0, select bank0
  5623  0249  1303               	bcf	3,6	;RP1=0, select bank0
  5624  024A  08D6               	movf	Load_Main@error,f
  5625  024B  1D03               	skipz
  5626  024C  2A64               	goto	l703
  5627                           
  5628                           ;OverLoad_B1.c: 70: Load.GO = 1;
  5629  024D  1683               	bsf	3,5	;RP0=1, select bank1
  5630  024E  1303               	bcf	3,6	;RP1=0, select bank1
  5631  024F  14CA               	bsf	_Load^(0+128),1
  5632                           
  5633                           ;OverLoad_B1.c: 72: if (getLight_LoadGO() == 1) {
  5634  0250  158A  22B8  118A   	fcall	_getLight_LoadGO
  5635  0253  3A01               	xorlw	1
  5636  0254  1D03               	skipz
  5637  0255  2A5E               	goto	l704
  5638                           
  5639                           ;OverLoad_B1.c: 73: if (Load.Run == 0 && Load.OK == 0) {
  5640  0256  1683               	bsf	3,5	;RP0=1, select bank1
  5641  0257  1303               	bcf	3,6	;RP1=0, select bank1
  5642  0258  1DCA               	btfss	_Load^(0+128),3
  5643  0259  1BCA               	btfsc	_Load^(0+128),7
  5644  025A  2A68               	goto	l702
  5645                           
  5646                           ;OverLoad_B1.c: 74: Load.Run = 1;
  5647  025B  15CA               	bsf	_Load^(0+128),3
  5648                           
  5649                           ;OverLoad_B1.c: 75: Load.Count = 0;
  5650  025C  01E3               	clrf	(_Load^(0+128)+25)
  5651                           
  5652                           ;OverLoad_B1.c: 76: }
  5653                           ;OverLoad_B1.c: 77: } else {
  5654  025D  2A68               	goto	l702
  5655  025E                     l704:	
  5656                           
  5657                           ;OverLoad_B1.c: 78: if (Load.OK == 1) {
  5658  025E  1683               	bsf	3,5	;RP0=1, select bank1
  5659  025F  1303               	bcf	3,6	;RP1=0, select bank1
  5660  0260  1FCA               	btfss	_Load^(0+128),7
  5661  0261  2A68               	goto	l702
  5662                           
  5663                           ;OverLoad_B1.c: 79: Load.OK = 0;
  5664  0262  13CA               	bcf	_Load^(0+128),7
  5665                           
  5666                           ;OverLoad_B1.c: 80: }
  5667                           ;OverLoad_B1.c: 81: }
  5668                           ;OverLoad_B1.c: 82: } else {
  5669  0263  2A68               	goto	l702
  5670  0264                     l703:	
  5671                           
  5672                           ;OverLoad_B1.c: 83: if (Load.GO == 1) {
  5673  0264  1683               	bsf	3,5	;RP0=1, select bank1
  5674  0265  1303               	bcf	3,6	;RP1=0, select bank1
  5675  0266  18CA               	btfsc	_Load^(0+128),1
  5676  0267                     l4973:	
  5677                           
  5678                           ;OverLoad_B1.c: 84: Load.GO = 0;
  5679  0267  10CA               	bcf	_Load^(0+128),1
  5680  0268                     l702:	
  5681                           
  5682                           ;OverLoad_B1.c: 85: }
  5683                           ;OverLoad_B1.c: 86: }
  5684                           ;OverLoad_B1.c: 88: }
  5685                           ;OverLoad_B1.c: 91: if (Load.GO == 1) {
  5686  0268  1CCA               	btfss	_Load^(0+128),1
  5687  0269  2BEA               	goto	l710
  5688                           
  5689                           ;OverLoad_B1.c: 92: Load.LightsON = 1;
  5690  026A  154A               	bsf	_Load^(0+128),2
  5691                           
  5692                           ;OverLoad_B1.c: 94: if (Load.ADtoGO == 1) {
  5693  026B  1E4A               	btfss	_Load^(0+128),4
  5694  026C  2BE8               	goto	l711
  5695                           
  5696                           ;OverLoad_B1.c: 95: Load.Time++;
  5697  026D  3001               	movlw	1
  5698  026E  07CB               	addwf	(_Load^(0+128)+1),f
  5699  026F  1803               	skipnc
  5700  0270  0ACC               	incf	((_Load+1)^(0+128)+1),f
  5701  0271  3000               	movlw	0
  5702  0272  07CC               	addwf	((_Load+1)^(0+128)+1),f
  5703                           
  5704                           ;OverLoad_B1.c: 96: if (Load.Time >= (40 / 20)) {
  5705  0273  3000               	movlw	0
  5706  0274  024C               	subwf	((_Load+1)^(0+128)+1),w
  5707  0275  3002               	movlw	2
  5708  0276  1903               	skipnz
  5709  0277  024B               	subwf	(_Load^(0+128)+1),w
  5710  0278  1C03               	skipc
  5711  0279  0008               	return
  5712                           
  5713                           ;OverLoad_B1.c: 97: Load.Time = 0;
  5714  027A  01CB               	clrf	(_Load^(0+128)+1)
  5715  027B  01CC               	clrf	((_Load+1)^(0+128)+1)
  5716                           
  5717                           ;OverLoad_B1.c: 98: Load.ADtoGO = 0;
  5718  027C  124A               	bcf	_Load^(0+128),4
  5719                           
  5720                           ;OverLoad_B1.c: 100: for (int i = 1; i < 4; i++) {
  5721  027D  3001               	movlw	1
  5722  027E  1283               	bcf	3,5	;RP0=0, select bank0
  5723  027F  1303               	bcf	3,6	;RP1=0, select bank0
  5724  0280  00DC               	movwf	Load_Main@i
  5725  0281  3000               	movlw	0
  5726  0282  00DD               	movwf	Load_Main@i+1
  5727  0283  085D               	movf	Load_Main@i+1,w
  5728  0284  3A80               	xorlw	128
  5729  0285  00FF               	movwf	127
  5730  0286  3080               	movlw	128
  5731  0287  027F               	subwf	127,w
  5732  0288  1D03               	skipz
  5733  0289  2A8C               	goto	u6215
  5734  028A  3004               	movlw	4
  5735  028B  025C               	subwf	Load_Main@i,w
  5736  028C                     u6215:	
  5737  028C  1803               	btfsc	3,0
  5738  028D  2ACA               	goto	l4995
  5739  028E                     l4989:	
  5740                           
  5741                           ;OverLoad_B1.c: 101: Load.ADH += Load.AH[i];
  5742  028E  1283               	bcf	3,5	;RP0=0, select bank0
  5743  028F  1303               	bcf	3,6	;RP1=0, select bank0
  5744  0290  085C               	movf	Load_Main@i,w
  5745  0291  3ED4               	addlw	(_Load+10)& (0+255)
  5746  0292  0084               	movwf	4
  5747  0293  1383               	bcf	3,7	;select IRP bank1
  5748  0294  0800               	movf	0,w
  5749  0295  00D4               	movwf	??_Load_Main
  5750  0296  01D5               	clrf	??_Load_Main+1
  5751  0297  0854               	movf	??_Load_Main,w
  5752  0298  1683               	bsf	3,5	;RP0=1, select bank1
  5753  0299  1303               	bcf	3,6	;RP1=0, select bank1
  5754  029A  07CF               	addwf	(_Load^(0+128)+5),f
  5755  029B  1803               	skipnc
  5756  029C  0AD0               	incf	((_Load+1)^(0+128)+5),f
  5757  029D  1283               	bcf	3,5	;RP0=0, select bank0
  5758  029E  1303               	bcf	3,6	;RP1=0, select bank0
  5759  029F  0855               	movf	??_Load_Main+1,w
  5760  02A0  1683               	bsf	3,5	;RP0=1, select bank1
  5761  02A1  1303               	bcf	3,6	;RP1=0, select bank1
  5762  02A2  07D0               	addwf	((_Load+1)^(0+128)+5),f
  5763                           
  5764                           ;OverLoad_B1.c: 102: Load.ADL += Load.AL[i];
  5765  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  5766  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  5767  02A5  085C               	movf	Load_Main@i,w
  5768  02A6  3ED9               	addlw	(_Load+15)& (0+255)
  5769  02A7  0084               	movwf	4
  5770  02A8  0800               	movf	0,w
  5771  02A9  00D4               	movwf	??_Load_Main
  5772  02AA  01D5               	clrf	??_Load_Main+1
  5773  02AB  0854               	movf	??_Load_Main,w
  5774  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  5775  02AD  1303               	bcf	3,6	;RP1=0, select bank1
  5776  02AE  07D1               	addwf	(_Load^(0+128)+7),f
  5777  02AF  1803               	skipnc
  5778  02B0  0AD2               	incf	((_Load+1)^(0+128)+7),f
  5779  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  5780  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  5781  02B3  0855               	movf	??_Load_Main+1,w
  5782  02B4  1683               	bsf	3,5	;RP0=1, select bank1
  5783  02B5  1303               	bcf	3,6	;RP1=0, select bank1
  5784  02B6  07D2               	addwf	((_Load+1)^(0+128)+7),f
  5785  02B7  3001               	movlw	1
  5786  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  5787  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  5788  02BA  07DC               	addwf	Load_Main@i,f
  5789  02BB  1803               	skipnc
  5790  02BC  0ADD               	incf	Load_Main@i+1,f
  5791  02BD  3000               	movlw	0
  5792  02BE  07DD               	addwf	Load_Main@i+1,f
  5793  02BF  085D               	movf	Load_Main@i+1,w
  5794  02C0  3A80               	xorlw	128
  5795  02C1  00FF               	movwf	127
  5796  02C2  3080               	movlw	128
  5797  02C3  027F               	subwf	127,w
  5798  02C4  1D03               	skipz
  5799  02C5  2AC8               	goto	u6225
  5800  02C6  3004               	movlw	4
  5801  02C7  025C               	subwf	Load_Main@i,w
  5802  02C8                     u6225:	
  5803  02C8  1C03               	skipc
  5804  02C9  2A8E               	goto	l4989
  5805  02CA                     l4995:	
  5806                           
  5807                           ;OverLoad_B1.c: 103: }
  5808                           ;OverLoad_B1.c: 104: Load.ADH /= 3;
  5809  02CA  3003               	movlw	3
  5810  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  5811  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  5812  02CD  00CD               	movwf	___lwdiv@divisor
  5813  02CE  3000               	movlw	0
  5814  02CF  00CE               	movwf	___lwdiv@divisor+1
  5815  02D0  1683               	bsf	3,5	;RP0=1, select bank1
  5816  02D1  1303               	bcf	3,6	;RP1=0, select bank1
  5817  02D2  0850               	movf	((_Load+1)^(0+128)+5),w
  5818  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  5819  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  5820  02D5  01D0               	clrf	___lwdiv@dividend+1
  5821  02D6  07D0               	addwf	___lwdiv@dividend+1,f
  5822  02D7  1683               	bsf	3,5	;RP0=1, select bank1
  5823  02D8  1303               	bcf	3,6	;RP1=0, select bank1
  5824  02D9  084F               	movf	(_Load^(0+128)+5),w
  5825  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  5826  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  5827  02DC  01CF               	clrf	___lwdiv@dividend
  5828  02DD  07CF               	addwf	___lwdiv@dividend,f
  5829  02DE  158A  25F8  118A   	fcall	___lwdiv
  5830  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  5831  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  5832  02E3  084E               	movf	?___lwdiv+1,w
  5833  02E4  1683               	bsf	3,5	;RP0=1, select bank1
  5834  02E5  1303               	bcf	3,6	;RP1=0, select bank1
  5835  02E6  01D0               	clrf	((_Load+1)^(0+128)+5)
  5836  02E7  07D0               	addwf	((_Load+1)^(0+128)+5),f
  5837  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  5838  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  5839  02EA  084D               	movf	?___lwdiv,w
  5840  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  5841  02EC  1303               	bcf	3,6	;RP1=0, select bank1
  5842  02ED  01CF               	clrf	(_Load^(0+128)+5)
  5843  02EE  07CF               	addwf	(_Load^(0+128)+5),f
  5844                           
  5845                           ;OverLoad_B1.c: 105: Load.ADL /= 3;
  5846  02EF  3003               	movlw	3
  5847  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  5848  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  5849  02F2  00CD               	movwf	___lwdiv@divisor
  5850  02F3  3000               	movlw	0
  5851  02F4  00CE               	movwf	___lwdiv@divisor+1
  5852  02F5  1683               	bsf	3,5	;RP0=1, select bank1
  5853  02F6  1303               	bcf	3,6	;RP1=0, select bank1
  5854  02F7  0852               	movf	((_Load+1)^(0+128)+7),w
  5855  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  5856  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  5857  02FA  01D0               	clrf	___lwdiv@dividend+1
  5858  02FB  07D0               	addwf	___lwdiv@dividend+1,f
  5859  02FC  1683               	bsf	3,5	;RP0=1, select bank1
  5860  02FD  1303               	bcf	3,6	;RP1=0, select bank1
  5861  02FE  0851               	movf	(_Load^(0+128)+7),w
  5862  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  5863  0300  1303               	bcf	3,6	;RP1=0, select bank0
  5864  0301  01CF               	clrf	___lwdiv@dividend
  5865  0302  07CF               	addwf	___lwdiv@dividend,f
  5866  0303  158A  25F8  118A   	fcall	___lwdiv
  5867  0306  1283               	bcf	3,5	;RP0=0, select bank0
  5868  0307  1303               	bcf	3,6	;RP1=0, select bank0
  5869  0308  084E               	movf	?___lwdiv+1,w
  5870  0309  1683               	bsf	3,5	;RP0=1, select bank1
  5871  030A  1303               	bcf	3,6	;RP1=0, select bank1
  5872  030B  01D2               	clrf	((_Load+1)^(0+128)+7)
  5873  030C  07D2               	addwf	((_Load+1)^(0+128)+7),f
  5874  030D  1283               	bcf	3,5	;RP0=0, select bank0
  5875  030E  1303               	bcf	3,6	;RP1=0, select bank0
  5876  030F  084D               	movf	?___lwdiv,w
  5877  0310  1683               	bsf	3,5	;RP0=1, select bank1
  5878  0311  1303               	bcf	3,6	;RP1=0, select bank1
  5879  0312  01D1               	clrf	(_Load^(0+128)+7)
  5880  0313  07D1               	addwf	(_Load^(0+128)+7),f
  5881                           
  5882                           ;OverLoad_B1.c: 106: setLoad_AH_AL_Restore();
  5883  0314  158A  23D7  118A   	fcall	_setLoad_AH_AL_Restore
  5884                           
  5885                           ;OverLoad_B1.c: 108: if (Load.ADH >= Load.ADL) {
  5886  0317  1683               	bsf	3,5	;RP0=1, select bank1
  5887  0318  1303               	bcf	3,6	;RP1=0, select bank1
  5888  0319  0852               	movf	((_Load+1)^(0+128)+7),w
  5889  031A  0250               	subwf	((_Load+1)^(0+128)+5),w
  5890  031B  1D03               	skipz
  5891  031C  2B1F               	goto	u6235
  5892  031D  0851               	movf	(_Load^(0+128)+7),w
  5893  031E  024F               	subwf	(_Load^(0+128)+5),w
  5894  031F                     u6235:	
  5895  031F  1C03               	skipc
  5896  0320  0008               	return
  5897                           
  5898                           ;OverLoad_B1.c: 109: Load.AD = Load.ADH - Load.ADL;
  5899  0321  0351               	decf	(_Load^(0+128)+7),w
  5900  0322  3AFF               	xorlw	255
  5901  0323  074F               	addwf	(_Load^(0+128)+5),w
  5902  0324  1283               	bcf	3,5	;RP0=0, select bank0
  5903  0325  1303               	bcf	3,6	;RP1=0, select bank0
  5904  0326  00D4               	movwf	??_Load_Main
  5905  0327  0854               	movf	??_Load_Main,w
  5906  0328  1683               	bsf	3,5	;RP0=1, select bank1
  5907  0329  1303               	bcf	3,6	;RP1=0, select bank1
  5908  032A  00DE               	movwf	(_Load^(0+128)+20)
  5909                           
  5910                           ;OverLoad_B1.c: 110: Load.ADH = 0;
  5911  032B  01CF               	clrf	(_Load^(0+128)+5)
  5912  032C  01D0               	clrf	((_Load+1)^(0+128)+5)
  5913                           
  5914                           ;OverLoad_B1.c: 111: Load.ADL = 0;
  5915  032D  01D1               	clrf	(_Load^(0+128)+7)
  5916  032E  01D2               	clrf	((_Load+1)^(0+128)+7)
  5917                           
  5918                           ;OverLoad_B1.c: 113: if (Load.Run == 1) {
  5919  032F  1DCA               	btfss	_Load^(0+128),3
  5920  0330  2B94               	goto	l716
  5921                           
  5922                           ;OverLoad_B1.c: 114: if (Load.Count < 2) {
  5923  0331  3002               	movlw	2
  5924  0332  0263               	subwf	(_Load^(0+128)+25),w
  5925  0333  1803               	skipnc
  5926  0334  2B94               	goto	l716
  5927                           
  5928                           ;OverLoad_B1.c: 115: Load.Count++;
  5929  0335  3001               	movlw	1
  5930  0336  1283               	bcf	3,5	;RP0=0, select bank0
  5931  0337  1303               	bcf	3,6	;RP1=0, select bank0
  5932  0338  00D4               	movwf	??_Load_Main
  5933  0339  0854               	movf	??_Load_Main,w
  5934  033A  1683               	bsf	3,5	;RP0=1, select bank1
  5935  033B  1303               	bcf	3,6	;RP1=0, select bank1
  5936  033C  07E3               	addwf	(_Load^(0+128)+25),f
  5937                           
  5938                           ;OverLoad_B1.c: 120: Load_RunStatus = getLight_Load_Status();
  5939  033D  158A  22BE  118A   	fcall	_getLight_Load_Status
  5940  0340  1283               	bcf	3,5	;RP0=0, select bank0
  5941  0341  1303               	bcf	3,6	;RP1=0, select bank0
  5942  0342  00D4               	movwf	??_Load_Main
  5943  0343  0854               	movf	??_Load_Main,w
  5944  0344  00DA               	movwf	Load_Main@Load_RunStatus
  5945                           
  5946                           ;OverLoad_B1.c: 122: LightsCount = getMain_Lights_Count();
  5947  0345  158A  230B  118A   	fcall	_getMain_Lights_Count
  5948  0348  1283               	bcf	3,5	;RP0=0, select bank0
  5949  0349  1303               	bcf	3,6	;RP1=0, select bank0
  5950  034A  00D4               	movwf	??_Load_Main
  5951  034B  0854               	movf	??_Load_Main,w
  5952  034C  00DB               	movwf	Load_Main@LightsCount
  5953                           
  5954                           ;OverLoad_B1.c: 124: if (Load.Count == 1) {
  5955  034D  1683               	bsf	3,5	;RP0=1, select bank1
  5956  034E  1303               	bcf	3,6	;RP1=0, select bank1
  5957  034F  0863               	movf	(_Load^(0+128)+25),w
  5958  0350  3A01               	xorlw	1
  5959  0351  1D03               	skipz
  5960  0352  2B55               	goto	l5021
  5961                           
  5962                           ;OverLoad_B1.c: 126: Load.JudgeValue = (int)(20*1.7);
  5963  0353  3022               	movlw	34
  5964  0354  2B62               	goto	L14
  5965  0355                     l5021:	
  5966                           ;OverLoad_B1.c: 127: } else if (Load.Count == 2) {
  5967                           
  5968  0355  0863               	movf	(_Load^(0+128)+25),w
  5969  0356  3A02               	xorlw	2
  5970  0357  1D03               	skipz
  5971  0358  2B94               	goto	l716
  5972                           
  5973                           ;OverLoad_B1.c: 128: if (LightsCount == 1) {
  5974  0359  1283               	bcf	3,5	;RP0=0, select bank0
  5975  035A  1303               	bcf	3,6	;RP1=0, select bank0
  5976  035B  085B               	movf	Load_Main@LightsCount,w
  5977  035C  3A01               	xorlw	1
  5978  035D  1D03               	skipz
  5979  035E  2B65               	goto	l5027
  5980                           
  5981                           ;OverLoad_B1.c: 129: Load.JudgeValue = (int)(8*1.7);
  5982  035F  300D               	movlw	13
  5983  0360  1683               	bsf	3,5	;RP0=1, select bank1
  5984  0361  1303               	bcf	3,6	;RP1=0, select bank1
  5985  0362                     L14:	
  5986  0362  00E1               	movwf	(_Load^(0+128)+23)
  5987  0363  3000               	movlw	0
  5988  0364  2B93               	goto	L15
  5989  0365                     l5027:	
  5990                           ;OverLoad_B1.c: 130: } else {
  5991                           
  5992                           
  5993                           ;OverLoad_B1.c: 131: if (Load_RunStatus == 0) {
  5994  0365  1283               	bcf	3,5	;RP0=0, select bank0
  5995  0366  08DA               	movf	Load_Main@Load_RunStatus,f
  5996  0367  1D03               	skipz
  5997  0368  2B86               	goto	l5031
  5998                           
  5999                           ;OverLoad_B1.c: 132: Load.JudgeValue = (int)(8*1.7) * LightsCount;
  6000  0369  085B               	movf	Load_Main@LightsCount,w
  6001  036A  00D4               	movwf	??_Load_Main
  6002  036B  01D5               	clrf	??_Load_Main+1
  6003  036C  0854               	movf	??_Load_Main,w
  6004  036D  00CD               	movwf	___wmul@multiplier
  6005  036E  0855               	movf	??_Load_Main+1,w
  6006  036F  00CE               	movwf	___wmul@multiplier+1
  6007  0370  300D               	movlw	13
  6008  0371  00CF               	movwf	___wmul@multiplicand
  6009  0372  3000               	movlw	0
  6010  0373  00D0               	movwf	___wmul@multiplicand+1
  6011  0374  158A  2506  118A   	fcall	___wmul
  6012  0377  1283               	bcf	3,5	;RP0=0, select bank0
  6013  0378  1303               	bcf	3,6	;RP1=0, select bank0
  6014  0379  084E               	movf	?___wmul+1,w
  6015  037A  1683               	bsf	3,5	;RP0=1, select bank1
  6016  037B  1303               	bcf	3,6	;RP1=0, select bank1
  6017  037C  01E2               	clrf	((_Load+1)^(0+128)+23)
  6018  037D  07E2               	addwf	((_Load+1)^(0+128)+23),f
  6019  037E  1283               	bcf	3,5	;RP0=0, select bank0
  6020  037F  1303               	bcf	3,6	;RP1=0, select bank0
  6021  0380  084D               	movf	?___wmul,w
  6022  0381  1683               	bsf	3,5	;RP0=1, select bank1
  6023  0382  1303               	bcf	3,6	;RP1=0, select bank1
  6024  0383  01E1               	clrf	(_Load^(0+128)+23)
  6025  0384  07E1               	addwf	(_Load^(0+128)+23),f
  6026                           
  6027                           ;OverLoad_B1.c: 133: } else if (Load_RunStatus == 1) {
  6028  0385  2B94               	goto	l716
  6029  0386                     l5031:	
  6030  0386  1283               	bcf	3,5	;RP0=0, select bank0
  6031  0387  085A               	movf	Load_Main@Load_RunStatus,w
  6032  0388  3A01               	xorlw	1
  6033  0389  1D03               	skipz
  6034  038A  2B94               	goto	l716
  6035                           
  6036                           ;OverLoad_B1.c: 134: Load.JudgeValue = (int)(8*1.7) + Load.TotalLoad;
  6037  038B  1683               	bsf	3,5	;RP0=1, select bank1
  6038  038C  1303               	bcf	3,6	;RP1=0, select bank1
  6039  038D  0853               	movf	(_Load^(0+128)+9),w
  6040  038E  3E0D               	addlw	13
  6041  038F  00E1               	movwf	(_Load^(0+128)+23)
  6042  0390  3000               	movlw	0
  6043  0391  1803               	skipnc
  6044  0392  3001               	movlw	1
  6045  0393                     L15:	
  6046  0393  00E2               	movwf	(_Load^(0+128)+24)
  6047  0394                     l716:	
  6048                           
  6049                           ;OverLoad_B1.c: 135: }
  6050                           ;OverLoad_B1.c: 136: }
  6051                           ;OverLoad_B1.c: 137: }
  6052                           ;OverLoad_B1.c: 138: }
  6053                           ;OverLoad_B1.c: 139: }
  6054                           ;OverLoad_B1.c: 141: if (Load.AD >= Load.JudgeValue) {
  6055  0394  1683               	bsf	3,5	;RP0=1, select bank1
  6056  0395  1303               	bcf	3,6	;RP1=0, select bank1
  6057  0396  085E               	movf	(_Load^(0+128)+20),w
  6058  0397  1283               	bcf	3,5	;RP0=0, select bank0
  6059  0398  1303               	bcf	3,6	;RP1=0, select bank0
  6060  0399  00D4               	movwf	??_Load_Main
  6061  039A  01D5               	clrf	??_Load_Main+1
  6062  039B  1683               	bsf	3,5	;RP0=1, select bank1
  6063  039C  1303               	bcf	3,6	;RP1=0, select bank1
  6064  039D  0862               	movf	((_Load+1)^(0+128)+23),w
  6065  039E  1283               	bcf	3,5	;RP0=0, select bank0
  6066  039F  1303               	bcf	3,6	;RP1=0, select bank0
  6067  03A0  0255               	subwf	??_Load_Main+1,w
  6068  03A1  1D03               	skipz
  6069  03A2  2BA9               	goto	u6315
  6070  03A3  1683               	bsf	3,5	;RP0=1, select bank1
  6071  03A4  1303               	bcf	3,6	;RP1=0, select bank1
  6072  03A5  0861               	movf	(_Load^(0+128)+23),w
  6073  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  6074  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  6075  03A8  0254               	subwf	??_Load_Main,w
  6076  03A9                     u6315:	
  6077  03A9  1C03               	skipc
  6078  03AA  2BCA               	goto	l5049
  6079                           
  6080                           ;OverLoad_B1.c: 142: ErrorCountValue = LightsCount == 1 ? 2 : 3;
  6081  03AB  085B               	movf	Load_Main@LightsCount,w
  6082  03AC  3A01               	xorlw	1
  6083  03AD  1903               	skipnz
  6084  03AE  2BB1               	goto	l5039
  6085  03AF  3003               	movlw	3
  6086  03B0  2BB2               	goto	L16
  6087  03B1                     l5039:	
  6088  03B1  3002               	movlw	2
  6089  03B2                     L16:	
  6090  03B2  00D7               	movwf	_Load_Main$2389
  6091  03B3  3000               	movlw	0
  6092  03B4  00D8               	movwf	_Load_Main$2389+1
  6093  03B5  0857               	movf	_Load_Main$2389,w
  6094  03B6  00D4               	movwf	??_Load_Main
  6095  03B7  0854               	movf	??_Load_Main,w
  6096  03B8  00D9               	movwf	Load_Main@ErrorCountValue
  6097                           
  6098                           ;OverLoad_B1.c: 143: Load.ErrorCount++;
  6099  03B9  3001               	movlw	1
  6100  03BA  00D4               	movwf	??_Load_Main
  6101  03BB  0854               	movf	??_Load_Main,w
  6102  03BC  1683               	bsf	3,5	;RP0=1, select bank1
  6103  03BD  1303               	bcf	3,6	;RP1=0, select bank1
  6104  03BE  07E4               	addwf	(_Load^(0+128)+26),f
  6105                           
  6106                           ;OverLoad_B1.c: 144: if (Load.ErrorCount > ErrorCountValue) {
  6107  03BF  0864               	movf	(_Load^(0+128)+26),w
  6108  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  6109  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  6110  03C2  0259               	subwf	Load_Main@ErrorCountValue,w
  6111  03C3  1803               	skipnc
  6112  03C4  0008               	return
  6113                           
  6114                           ;OverLoad_B1.c: 145: Load.ErrorCount = 0;
  6115  03C5  1683               	bsf	3,5	;RP0=1, select bank1
  6116  03C6  1303               	bcf	3,6	;RP1=0, select bank1
  6117  03C7  01E4               	clrf	(_Load^(0+128)+26)
  6118                           
  6119                           ;OverLoad_B1.c: 146: Load.ERROR = 1;
  6120  03C8  16CA               	bsf	_Load^(0+128),5
  6121                           
  6122                           ;OverLoad_B1.c: 168: }
  6123                           ;OverLoad_B1.c: 169: } else {
  6124  03C9  0008               	return
  6125  03CA                     l5049:	
  6126                           
  6127                           ;OverLoad_B1.c: 170: Load.ErrorCount = 0;
  6128  03CA  1683               	bsf	3,5	;RP0=1, select bank1
  6129  03CB  1303               	bcf	3,6	;RP1=0, select bank1
  6130  03CC  01E4               	clrf	(_Load^(0+128)+26)
  6131                           
  6132                           ;OverLoad_B1.c: 171: if (Load.Run == 1) {
  6133  03CD  1DCA               	btfss	_Load^(0+128),3
  6134  03CE  0008               	return
  6135                           
  6136                           ;OverLoad_B1.c: 172: Load.SafeCount++;
  6137  03CF  3001               	movlw	1
  6138  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  6139  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  6140  03D2  00D4               	movwf	??_Load_Main
  6141  03D3  0854               	movf	??_Load_Main,w
  6142  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  6143  03D5  1303               	bcf	3,6	;RP1=0, select bank1
  6144  03D6  07E5               	addwf	(_Load^(0+128)+27),f
  6145                           
  6146                           ;OverLoad_B1.c: 173: if (Load.SafeCount >= 3) {
  6147  03D7  3003               	movlw	3
  6148  03D8  0265               	subwf	(_Load^(0+128)+27),w
  6149  03D9  1C03               	skipc
  6150  03DA  0008               	return
  6151                           
  6152                           ;OverLoad_B1.c: 174: Load.SafeCount = 0;
  6153  03DB  01E5               	clrf	(_Load^(0+128)+27)
  6154                           
  6155                           ;OverLoad_B1.c: 175: Load.OK = 1;
  6156  03DC  17CA               	bsf	_Load^(0+128),7
  6157                           
  6158                           ;OverLoad_B1.c: 176: Load.Run = 0;
  6159  03DD  11CA               	bcf	_Load^(0+128),3
  6160                           
  6161                           ;OverLoad_B1.c: 177: Load.Count = 0;
  6162  03DE  01E3               	clrf	(_Load^(0+128)+25)
  6163                           
  6164                           ;OverLoad_B1.c: 178: Load.TotalLoad = Load.AD;
  6165  03DF  085E               	movf	(_Load^(0+128)+20),w
  6166  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  6167  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  6168  03E2  00D4               	movwf	??_Load_Main
  6169  03E3  0854               	movf	??_Load_Main,w
  6170  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  6171  03E5  1303               	bcf	3,6	;RP1=0, select bank1
  6172  03E6  00D3               	movwf	(_Load^(0+128)+9)
  6173                           
  6174                           ;OverLoad_B1.c: 182: }
  6175                           ;OverLoad_B1.c: 183: }
  6176                           ;OverLoad_B1.c: 206: }
  6177                           ;OverLoad_B1.c: 207: }
  6178                           ;OverLoad_B1.c: 208: }
  6179                           ;OverLoad_B1.c: 209: } else {
  6180  03E7  0008               	return
  6181  03E8                     l711:	
  6182                           
  6183                           ;OverLoad_B1.c: 210: Load.ADtoGO = 1;
  6184  03E8  164A               	bsf	_Load^(0+128),4
  6185                           
  6186                           ;OverLoad_B1.c: 211: }
  6187                           ;OverLoad_B1.c: 212: } else {
  6188  03E9  0008               	return
  6189  03EA                     l710:	
  6190                           
  6191                           ;OverLoad_B1.c: 214: if (Load.LightsON == 1) {
  6192  03EA  1D4A               	btfss	_Load^(0+128),2
  6193  03EB  2BFE               	goto	l5085
  6194                           
  6195                           ;OverLoad_B1.c: 215: Load.LightsON = 0;
  6196  03EC  114A               	bcf	_Load^(0+128),2
  6197                           
  6198                           ;OverLoad_B1.c: 217: Load.ADtoGO = 0;
  6199  03ED  124A               	bcf	_Load^(0+128),4
  6200                           
  6201                           ;OverLoad_B1.c: 218: Load.Time = 0;
  6202  03EE  01CB               	clrf	(_Load^(0+128)+1)
  6203  03EF  01CC               	clrf	((_Load+1)^(0+128)+1)
  6204                           
  6205                           ;OverLoad_B1.c: 219: setLoad_AH_AL_Restore();
  6206  03F0  158A  23D7  118A   	fcall	_setLoad_AH_AL_Restore
  6207                           
  6208                           ;OverLoad_B1.c: 221: Load.ErrorCount = 0;
  6209  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  6210  03F4  1303               	bcf	3,6	;RP1=0, select bank1
  6211  03F5  01E4               	clrf	(_Load^(0+128)+26)
  6212                           
  6213                           ;OverLoad_B1.c: 222: Load.SafeCount = 0;
  6214  03F6  01E5               	clrf	(_Load^(0+128)+27)
  6215                           
  6216                           ;OverLoad_B1.c: 224: Load.ADH = 0;
  6217  03F7  01CF               	clrf	(_Load^(0+128)+5)
  6218  03F8  01D0               	clrf	((_Load+1)^(0+128)+5)
  6219                           
  6220                           ;OverLoad_B1.c: 225: Load.ADL = 0;
  6221  03F9  01D1               	clrf	(_Load^(0+128)+7)
  6222  03FA  01D2               	clrf	((_Load+1)^(0+128)+7)
  6223                           
  6224                           ;OverLoad_B1.c: 231: Load.Run = 0;
  6225  03FB  11CA               	bcf	_Load^(0+128),3
  6226                           
  6227                           ;OverLoad_B1.c: 232: Load.Count = 0;
  6228  03FC  01E3               	clrf	(_Load^(0+128)+25)
  6229                           
  6230                           ;OverLoad_B1.c: 233: Load.OK = 0;
  6231  03FD  13CA               	bcf	_Load^(0+128),7
  6232  03FE                     l5085:	
  6233                           
  6234                           ;OverLoad_B1.c: 255: }
  6235                           ;OverLoad_B1.c: 256: if (Load.ERROR == 1) {
  6236  03FE  1ECA               	btfss	_Load^(0+128),5
  6237  03FF  0008               	return
  6238                           
  6239                           ;OverLoad_B1.c: 257: Load.ErrorTime++;
  6240  0400  3001               	movlw	1
  6241  0401  07CD               	addwf	(_Load^(0+128)+3),f
  6242  0402  1803               	skipnc
  6243  0403  0ACE               	incf	((_Load+1)^(0+128)+3),f
  6244  0404  3000               	movlw	0
  6245  0405  07CE               	addwf	((_Load+1)^(0+128)+3),f
  6246                           
  6247                           ;OverLoad_B1.c: 258: if (Load.ErrorTime >= (10000 / 20)) {
  6248  0406  3001               	movlw	1
  6249  0407  024E               	subwf	((_Load+1)^(0+128)+3),w
  6250  0408  30F4               	movlw	244
  6251  0409  1903               	skipnz
  6252  040A  024D               	subwf	(_Load^(0+128)+3),w
  6253  040B  1C03               	skipc
  6254  040C  0008               	return
  6255                           
  6256                           ;OverLoad_B1.c: 259: Load.ErrorTime = 0;
  6257  040D  01CD               	clrf	(_Load^(0+128)+3)
  6258  040E  01CE               	clrf	((_Load+1)^(0+128)+3)
  6259                           
  6260                           ;OverLoad_B1.c: 260: Load.ERROR = 0;
  6261  040F  12CA               	bcf	_Load^(0+128),5
  6262                           
  6263                           ;OverLoad_B1.c: 261: }
  6264                           ;OverLoad_B1.c: 262: }
  6265                           ;OverLoad_B1.c: 263: }
  6266                           ;OverLoad_B1.c: 264: } else {
  6267  0410  0008               	return
  6268  0411                     l700:	
  6269                           
  6270                           ;OverLoad_B1.c: 265: if (myMain.PowerON == 1) {
  6271  0411  1283               	bcf	3,5	;RP0=0, select bank0
  6272  0412  1303               	bcf	3,6	;RP1=0, select bank0
  6273  0413  1C25               	btfss	_myMain,0
  6274  0414  0008               	return
  6275                           
  6276                           ;OverLoad_B1.c: 266: Load.Enable = 1;
  6277  0415  1683               	bsf	3,5	;RP0=1, select bank1
  6278  0416  1303               	bcf	3,6	;RP1=0, select bank1
  6279  0417  144A               	bsf	_Load^(0+128),0
  6280  0418  0008               	return
  6281  0419                     __end_of_Load_Main:	
  6282                           
  6283                           	psect	text30
  6284  0B0B                     __ptext30:	
  6285 ;; *************** function _getMain_Lights_Count *****************
  6286 ;; Defined at:
  6287 ;;		line 459 in file "../src/Main_B1.c"
  6288 ;; Parameters:    Size  Location     Type
  6289 ;;		None
  6290 ;; Auto vars:     Size  Location     Type
  6291 ;;  status1         1    5[COMMON] unsigned char 
  6292 ;;  count           1    4[COMMON] unsigned char 
  6293 ;; Return value:  Size  Location     Type
  6294 ;;                  1    wreg      unsigned char 
  6295 ;; Registers used:
  6296 ;;		wreg, status,2
  6297 ;; Tracked objects:
  6298 ;;		On entry : 0/0
  6299 ;;		On exit  : 0/0
  6300 ;;		Unchanged: 0/0
  6301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6302 ;;      Params:         0       0       0       0
  6303 ;;      Locals:         2       0       0       0
  6304 ;;      Temps:          0       0       0       0
  6305 ;;      Totals:         2       0       0       0
  6306 ;;Total ram usage:        2 bytes
  6307 ;; Hardware stack levels used:    1
  6308 ;; Hardware stack levels required when called:    2
  6309 ;; This function calls:
  6310 ;;		Nothing
  6311 ;; This function is called by:
  6312 ;;		_Load_Main
  6313 ;; This function uses a non-reentrant model
  6314 ;;
  6315                           
  6316                           
  6317                           ;psect for function _getMain_Lights_Count
  6318  0B0B                     _getMain_Lights_Count:	
  6319                           
  6320                           ;Main_B1.c: 460: char count = 0;
  6321                           
  6322                           ;incstack = 0
  6323                           ; Regs used in _getMain_Lights_Count: [wreg+status,2]
  6324  0B0B  01F4               	clrf	getMain_Lights_Count@count
  6325                           
  6326                           ;Main_B1.c: 476: char status1 = Lights1.Status == 1 ? 1 : 0;
  6327  0B0C  3000               	movlw	0
  6328  0B0D  1283               	bcf	3,5	;RP0=0, select bank0
  6329  0B0E  1303               	bcf	3,6	;RP1=0, select bank0
  6330  0B0F  1940               	btfsc	_Lights1,2
  6331  0B10  3001               	movlw	1
  6332  0B11  00F5               	movwf	getMain_Lights_Count@status1
  6333                           
  6334                           ;Main_B1.c: 487: return count = status1;
  6335  0B12  0875               	movf	getMain_Lights_Count@status1,w
  6336  0B13  00F4               	movwf	getMain_Lights_Count@count
  6337  0B14  0008               	return
  6338  0B15                     __end_of_getMain_Lights_Count:	
  6339                           
  6340                           	psect	text31
  6341  0ABE                     __ptext31:	
  6342 ;; *************** function _getLight_Load_Status *****************
  6343 ;; Defined at:
  6344 ;;		line 405 in file "../src/TriacRelay_B1.c"
  6345 ;; Parameters:    Size  Location     Type
  6346 ;;		None
  6347 ;; Auto vars:     Size  Location     Type
  6348 ;;  loadstatus      1    4[COMMON] unsigned char 
  6349 ;; Return value:  Size  Location     Type
  6350 ;;                  1    wreg      unsigned char 
  6351 ;; Registers used:
  6352 ;;		wreg, status,2
  6353 ;; Tracked objects:
  6354 ;;		On entry : 0/0
  6355 ;;		On exit  : 0/0
  6356 ;;		Unchanged: 0/0
  6357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6358 ;;      Params:         0       0       0       0
  6359 ;;      Locals:         1       0       0       0
  6360 ;;      Temps:          0       0       0       0
  6361 ;;      Totals:         1       0       0       0
  6362 ;;Total ram usage:        1 bytes
  6363 ;; Hardware stack levels used:    1
  6364 ;; Hardware stack levels required when called:    2
  6365 ;; This function calls:
  6366 ;;		Nothing
  6367 ;; This function is called by:
  6368 ;;		_Load_Main
  6369 ;; This function uses a non-reentrant model
  6370 ;;
  6371                           
  6372                           
  6373                           ;psect for function _getLight_Load_Status
  6374  0ABE                     _getLight_Load_Status:	
  6375                           
  6376                           ;TriacRelay_B1.c: 406: char loadstatus = Light.Load_Status == 1 ? 1 : 0;
  6377                           
  6378                           ;incstack = 0
  6379                           ; Regs used in _getLight_Load_Status: [wreg+status,2]
  6380  0ABE  3000               	movlw	0
  6381  0ABF  18F7               	btfsc	_Light,1
  6382  0AC0  3001               	movlw	1
  6383  0AC1  00F4               	movwf	getLight_Load_Status@loadstatus
  6384                           
  6385                           ;TriacRelay_B1.c: 407: return loadstatus;
  6386  0AC2  0874               	movf	getLight_Load_Status@loadstatus,w
  6387  0AC3  0008               	return
  6388  0AC4                     __end_of_getLight_Load_Status:	
  6389                           
  6390                           	psect	text32
  6391  0AB8                     __ptext32:	
  6392 ;; *************** function _getLight_LoadGO *****************
  6393 ;; Defined at:
  6394 ;;		line 400 in file "../src/TriacRelay_B1.c"
  6395 ;; Parameters:    Size  Location     Type
  6396 ;;		None
  6397 ;; Auto vars:     Size  Location     Type
  6398 ;;  loadgo          1    4[COMMON] unsigned char 
  6399 ;; Return value:  Size  Location     Type
  6400 ;;                  1    wreg      unsigned char 
  6401 ;; Registers used:
  6402 ;;		wreg, status,2
  6403 ;; Tracked objects:
  6404 ;;		On entry : 0/0
  6405 ;;		On exit  : 0/0
  6406 ;;		Unchanged: 0/0
  6407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6408 ;;      Params:         0       0       0       0
  6409 ;;      Locals:         1       0       0       0
  6410 ;;      Temps:          0       0       0       0
  6411 ;;      Totals:         1       0       0       0
  6412 ;;Total ram usage:        1 bytes
  6413 ;; Hardware stack levels used:    1
  6414 ;; Hardware stack levels required when called:    2
  6415 ;; This function calls:
  6416 ;;		Nothing
  6417 ;; This function is called by:
  6418 ;;		_Load_Main
  6419 ;; This function uses a non-reentrant model
  6420 ;;
  6421                           
  6422                           
  6423                           ;psect for function _getLight_LoadGO
  6424  0AB8                     _getLight_LoadGO:	
  6425                           
  6426                           ;TriacRelay_B1.c: 401: char loadgo = Light.LoadGO == 1 ? 1 : 0;
  6427                           
  6428                           ;incstack = 0
  6429                           ; Regs used in _getLight_LoadGO: [wreg+status,2]
  6430  0AB8  3000               	movlw	0
  6431  0AB9  1877               	btfsc	_Light,0
  6432  0ABA  3001               	movlw	1
  6433  0ABB  00F4               	movwf	getLight_LoadGO@loadgo
  6434                           
  6435                           ;TriacRelay_B1.c: 402: return loadgo;
  6436  0ABC  0874               	movf	getLight_LoadGO@loadgo,w
  6437  0ABD  0008               	return
  6438  0ABE                     __end_of_getLight_LoadGO:	
  6439                           
  6440                           	psect	text33
  6441  0D06                     __ptext33:	
  6442 ;; *************** function ___wmul *****************
  6443 ;; Defined at:
  6444 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul16.c"
  6445 ;; Parameters:    Size  Location     Type
  6446 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6447 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6448 ;; Auto vars:     Size  Location     Type
  6449 ;;  product         2    4[COMMON] unsigned int 
  6450 ;; Return value:  Size  Location     Type
  6451 ;;                  2    0[BANK0 ] unsigned int 
  6452 ;; Registers used:
  6453 ;;		wreg, status,2, status,0
  6454 ;; Tracked objects:
  6455 ;;		On entry : 0/0
  6456 ;;		On exit  : 0/0
  6457 ;;		Unchanged: 0/0
  6458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6459 ;;      Params:         0       4       0       0
  6460 ;;      Locals:         2       0       0       0
  6461 ;;      Temps:          0       0       0       0
  6462 ;;      Totals:         2       4       0       0
  6463 ;;Total ram usage:        6 bytes
  6464 ;; Hardware stack levels used:    1
  6465 ;; Hardware stack levels required when called:    2
  6466 ;; This function calls:
  6467 ;;		Nothing
  6468 ;; This function is called by:
  6469 ;;		_Load_Main
  6470 ;; This function uses a non-reentrant model
  6471 ;;
  6472                           
  6473                           
  6474                           ;psect for function ___wmul
  6475  0D06                     ___wmul:	
  6476                           
  6477                           ;incstack = 0
  6478                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6479  0D06  01F4               	clrf	___wmul@product
  6480  0D07  01F5               	clrf	___wmul@product+1
  6481  0D08                     l4733:	
  6482  0D08  1283               	bcf	3,5	;RP0=0, select bank0
  6483  0D09  1303               	bcf	3,6	;RP1=0, select bank0
  6484  0D0A  1C4D               	btfss	___wmul@multiplier,0
  6485  0D0B  2D12               	goto	l1384
  6486  0D0C  084F               	movf	___wmul@multiplicand,w
  6487  0D0D  07F4               	addwf	___wmul@product,f
  6488  0D0E  1803               	skipnc
  6489  0D0F  0AF5               	incf	___wmul@product+1,f
  6490  0D10  0850               	movf	___wmul@multiplicand+1,w
  6491  0D11  07F5               	addwf	___wmul@product+1,f
  6492  0D12                     l1384:	
  6493  0D12  3001               	movlw	1
  6494  0D13                     u5655:	
  6495  0D13  1003               	clrc
  6496  0D14  0DCF               	rlf	___wmul@multiplicand,f
  6497  0D15  0DD0               	rlf	___wmul@multiplicand+1,f
  6498  0D16  3EFF               	addlw	-1
  6499  0D17  1D03               	skipz
  6500  0D18  2D13               	goto	u5655
  6501  0D19  3001               	movlw	1
  6502  0D1A                     u5665:	
  6503  0D1A  1003               	clrc
  6504  0D1B  0CCE               	rrf	___wmul@multiplier+1,f
  6505  0D1C  0CCD               	rrf	___wmul@multiplier,f
  6506  0D1D  3EFF               	addlw	-1
  6507  0D1E  1D03               	skipz
  6508  0D1F  2D1A               	goto	u5665
  6509  0D20  084E               	movf	___wmul@multiplier+1,w
  6510  0D21  044D               	iorwf	___wmul@multiplier,w
  6511  0D22  1D03               	skipz
  6512  0D23  2D08               	goto	l4733
  6513  0D24  0875               	movf	___wmul@product+1,w
  6514  0D25  01CE               	clrf	?___wmul+1
  6515  0D26  07CE               	addwf	?___wmul+1,f
  6516  0D27  0874               	movf	___wmul@product,w
  6517  0D28  01CD               	clrf	?___wmul
  6518  0D29  07CD               	addwf	?___wmul,f
  6519  0D2A  0008               	return
  6520  0D2B                     __end_of___wmul:	
  6521                           
  6522                           	psect	text34
  6523  0DF8                     __ptext34:	
  6524 ;; *************** function ___lwdiv *****************
  6525 ;; Defined at:
  6526 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;  divisor         2    0[BANK0 ] unsigned int 
  6529 ;;  dividend        2    2[BANK0 ] unsigned int 
  6530 ;; Auto vars:     Size  Location     Type
  6531 ;;  quotient        2    5[BANK0 ] unsigned int 
  6532 ;;  counter         1    4[BANK0 ] unsigned char 
  6533 ;; Return value:  Size  Location     Type
  6534 ;;                  2    0[BANK0 ] unsigned int 
  6535 ;; Registers used:
  6536 ;;		wreg, status,2, status,0
  6537 ;; Tracked objects:
  6538 ;;		On entry : 0/0
  6539 ;;		On exit  : 0/0
  6540 ;;		Unchanged: 0/0
  6541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6542 ;;      Params:         0       4       0       0
  6543 ;;      Locals:         0       3       0       0
  6544 ;;      Temps:          1       0       0       0
  6545 ;;      Totals:         1       7       0       0
  6546 ;;Total ram usage:        8 bytes
  6547 ;; Hardware stack levels used:    1
  6548 ;; Hardware stack levels required when called:    2
  6549 ;; This function calls:
  6550 ;;		Nothing
  6551 ;; This function is called by:
  6552 ;;		_Load_Main
  6553 ;;		_getPIR_AD
  6554 ;; This function uses a non-reentrant model
  6555 ;;
  6556                           
  6557                           
  6558                           ;psect for function ___lwdiv
  6559  0DF8                     ___lwdiv:	
  6560                           
  6561                           ;incstack = 0
  6562                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6563  0DF8  1283               	bcf	3,5	;RP0=0, select bank0
  6564  0DF9  1303               	bcf	3,6	;RP1=0, select bank0
  6565  0DFA  01D2               	clrf	___lwdiv@quotient
  6566  0DFB  01D3               	clrf	___lwdiv@quotient+1
  6567  0DFC  084E               	movf	___lwdiv@divisor+1,w
  6568  0DFD  044D               	iorwf	___lwdiv@divisor,w
  6569  0DFE  1903               	skipnz
  6570  0DFF  2E31               	goto	l4765
  6571  0E00  01D1               	clrf	___lwdiv@counter
  6572  0E01  0AD1               	incf	___lwdiv@counter,f
  6573  0E02                     l4753:	
  6574  0E02  1BCE               	btfsc	___lwdiv@divisor+1,7
  6575  0E03  2E10               	goto	l4755
  6576  0E04  3001               	movlw	1
  6577  0E05                     u5695:	
  6578  0E05  1003               	clrc
  6579  0E06  0DCD               	rlf	___lwdiv@divisor,f
  6580  0E07  0DCE               	rlf	___lwdiv@divisor+1,f
  6581  0E08  3EFF               	addlw	-1
  6582  0E09  1D03               	skipz
  6583  0E0A  2E05               	goto	u5695
  6584  0E0B  3001               	movlw	1
  6585  0E0C  00F4               	movwf	??___lwdiv
  6586  0E0D  0874               	movf	??___lwdiv,w
  6587  0E0E  07D1               	addwf	___lwdiv@counter,f
  6588  0E0F  2E02               	goto	l4753
  6589  0E10                     l4755:	
  6590  0E10  3001               	movlw	1
  6591  0E11                     u5715:	
  6592  0E11  1003               	clrc
  6593  0E12  0DD2               	rlf	___lwdiv@quotient,f
  6594  0E13  0DD3               	rlf	___lwdiv@quotient+1,f
  6595  0E14  3EFF               	addlw	-1
  6596  0E15  1D03               	skipz
  6597  0E16  2E11               	goto	u5715
  6598  0E17  084E               	movf	___lwdiv@divisor+1,w
  6599  0E18  0250               	subwf	___lwdiv@dividend+1,w
  6600  0E19  1D03               	skipz
  6601  0E1A  2E1D               	goto	u5725
  6602  0E1B  084D               	movf	___lwdiv@divisor,w
  6603  0E1C  024F               	subwf	___lwdiv@dividend,w
  6604  0E1D                     u5725:	
  6605  0E1D  1C03               	skipc
  6606  0E1E  2E26               	goto	l4761
  6607  0E1F  084D               	movf	___lwdiv@divisor,w
  6608  0E20  02CF               	subwf	___lwdiv@dividend,f
  6609  0E21  084E               	movf	___lwdiv@divisor+1,w
  6610  0E22  1C03               	skipc
  6611  0E23  03D0               	decf	___lwdiv@dividend+1,f
  6612  0E24  02D0               	subwf	___lwdiv@dividend+1,f
  6613  0E25  1452               	bsf	___lwdiv@quotient,0
  6614  0E26                     l4761:	
  6615  0E26  3001               	movlw	1
  6616  0E27                     u5735:	
  6617  0E27  1003               	clrc
  6618  0E28  0CCE               	rrf	___lwdiv@divisor+1,f
  6619  0E29  0CCD               	rrf	___lwdiv@divisor,f
  6620  0E2A  3EFF               	addlw	-1
  6621  0E2B  1D03               	skipz
  6622  0E2C  2E27               	goto	u5735
  6623  0E2D  3001               	movlw	1
  6624  0E2E  02D1               	subwf	___lwdiv@counter,f
  6625  0E2F  1D03               	btfss	3,2
  6626  0E30  2E10               	goto	l4755
  6627  0E31                     l4765:	
  6628  0E31  0853               	movf	___lwdiv@quotient+1,w
  6629  0E32  01CE               	clrf	?___lwdiv+1
  6630  0E33  07CE               	addwf	?___lwdiv+1,f
  6631  0E34  0852               	movf	___lwdiv@quotient,w
  6632  0E35  01CD               	clrf	?___lwdiv
  6633  0E36  07CD               	addwf	?___lwdiv,f
  6634  0E37  0008               	return
  6635  0E38                     __end_of___lwdiv:	
  6636                           
  6637                           	psect	text35
  6638  0A98                     __ptext35:	
  6639 ;; *************** function _Load_Initialization *****************
  6640 ;; Defined at:
  6641 ;;		line 9 in file "../src/OverLoad_B1.c"
  6642 ;; Parameters:    Size  Location     Type
  6643 ;;		None
  6644 ;; Auto vars:     Size  Location     Type
  6645 ;;		None
  6646 ;; Return value:  Size  Location     Type
  6647 ;;		None               void
  6648 ;; Registers used:
  6649 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6650 ;; Tracked objects:
  6651 ;;		On entry : 0/0
  6652 ;;		On exit  : 0/0
  6653 ;;		Unchanged: 0/0
  6654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6655 ;;      Params:         0       0       0       0
  6656 ;;      Locals:         0       0       0       0
  6657 ;;      Temps:          0       0       0       0
  6658 ;;      Totals:         0       0       0       0
  6659 ;;Total ram usage:        0 bytes
  6660 ;; Hardware stack levels used:    1
  6661 ;; Hardware stack levels required when called:    3
  6662 ;; This function calls:
  6663 ;;		_setLoad_AH_AL_Restore
  6664 ;; This function is called by:
  6665 ;;		_main
  6666 ;; This function uses a non-reentrant model
  6667 ;;
  6668                           
  6669                           
  6670                           ;psect for function _Load_Initialization
  6671  0A98                     _Load_Initialization:	
  6672                           
  6673                           ;OverLoad_B1.c: 11: setLoad_AH_AL_Restore();
  6674                           
  6675                           ;incstack = 0
  6676                           ; Regs used in _Load_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6677  0A98  158A  23D7         	fcall	_setLoad_AH_AL_Restore
  6678  0A9A  0008               	return
  6679  0A9B                     __end_of_Load_Initialization:	
  6680                           
  6681                           	psect	text36
  6682  0BD7                     __ptext36:	
  6683 ;; *************** function _setLoad_AH_AL_Restore *****************
  6684 ;; Defined at:
  6685 ;;		line 292 in file "../src/OverLoad_B1.c"
  6686 ;; Parameters:    Size  Location     Type
  6687 ;;		None
  6688 ;; Auto vars:     Size  Location     Type
  6689 ;;  i               1    5[COMMON] unsigned char 
  6690 ;; Return value:  Size  Location     Type
  6691 ;;		None               void
  6692 ;; Registers used:
  6693 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6694 ;; Tracked objects:
  6695 ;;		On entry : 0/0
  6696 ;;		On exit  : 0/0
  6697 ;;		Unchanged: 0/0
  6698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6699 ;;      Params:         0       0       0       0
  6700 ;;      Locals:         1       0       0       0
  6701 ;;      Temps:          1       0       0       0
  6702 ;;      Totals:         2       0       0       0
  6703 ;;Total ram usage:        2 bytes
  6704 ;; Hardware stack levels used:    1
  6705 ;; Hardware stack levels required when called:    2
  6706 ;; This function calls:
  6707 ;;		Nothing
  6708 ;; This function is called by:
  6709 ;;		_Load_Initialization
  6710 ;;		_Load_Main
  6711 ;; This function uses a non-reentrant model
  6712 ;;
  6713                           
  6714                           
  6715                           ;psect for function _setLoad_AH_AL_Restore
  6716  0BD7                     _setLoad_AH_AL_Restore:	
  6717                           
  6718                           ;OverLoad_B1.c: 293: char i;
  6719                           ;OverLoad_B1.c: 294: for (i = 0; i < 5; i++) {
  6720                           
  6721                           ;incstack = 0
  6722                           ; Regs used in _setLoad_AH_AL_Restore: [wreg-fsr0h+status,2+status,0]
  6723  0BD7  01F5               	clrf	setLoad_AH_AL_Restore@i
  6724  0BD8                     L17:	
  6725  0BD8  3005               	movlw	5
  6726  0BD9  0275               	subwf	setLoad_AH_AL_Restore@i,w
  6727  0BDA  1803               	btfsc	3,0
  6728  0BDB  0008               	return
  6729                           
  6730                           ;OverLoad_B1.c: 295: Load.AH[i] = 0;
  6731  0BDC  0875               	movf	setLoad_AH_AL_Restore@i,w
  6732  0BDD  3ED4               	addlw	(_Load+10)& (0+255)
  6733  0BDE  0084               	movwf	4
  6734  0BDF  1383               	bcf	3,7	;select IRP bank1
  6735  0BE0  0180               	clrf	0
  6736                           
  6737                           ;OverLoad_B1.c: 296: Load.AL[i] = 0xff;
  6738  0BE1  30FF               	movlw	255
  6739  0BE2  00F4               	movwf	??_setLoad_AH_AL_Restore
  6740  0BE3  0875               	movf	setLoad_AH_AL_Restore@i,w
  6741  0BE4  3ED9               	addlw	(_Load+15)& (0+255)
  6742  0BE5  0084               	movwf	4
  6743  0BE6  0874               	movf	??_setLoad_AH_AL_Restore,w
  6744  0BE7  0080               	movwf	0
  6745  0BE8  3001               	movlw	1
  6746  0BE9  00F4               	movwf	??_setLoad_AH_AL_Restore
  6747  0BEA  0874               	movf	??_setLoad_AH_AL_Restore,w
  6748  0BEB  07F5               	addwf	setLoad_AH_AL_Restore@i,f
  6749  0BEC  2BD8               	goto	L17
  6750  0BED                     __end_of_setLoad_AH_AL_Restore:	
  6751                           
  6752                           	psect	text37
  6753  0CA1                     __ptext37:	
  6754 ;; *************** function _Lights_Main *****************
  6755 ;; Defined at:
  6756 ;;		line 52 in file "../src/TriacRelay_B1.c"
  6757 ;; Parameters:    Size  Location     Type
  6758 ;;		None
  6759 ;; Auto vars:     Size  Location     Type
  6760 ;;		None
  6761 ;; Return value:  Size  Location     Type
  6762 ;;		None               void
  6763 ;; Registers used:
  6764 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6765 ;; Tracked objects:
  6766 ;;		On entry : 0/0
  6767 ;;		On exit  : 0/0
  6768 ;;		Unchanged: 0/0
  6769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6770 ;;      Params:         0       0       0       0
  6771 ;;      Locals:         0       0       0       0
  6772 ;;      Temps:          0       0       0       0
  6773 ;;      Totals:         0       0       0       0
  6774 ;;Total ram usage:        0 bytes
  6775 ;; Hardware stack levels used:    1
  6776 ;; Hardware stack levels required when called:    6
  6777 ;; This function calls:
  6778 ;;		_Lights_Control
  6779 ;;		_getLoad_OK
  6780 ;;		_getMain_All_Error_Status
  6781 ;;		_getMain_All_LightsStatus
  6782 ;;		_setLights_Main
  6783 ;; This function is called by:
  6784 ;;		_main
  6785 ;; This function uses a non-reentrant model
  6786 ;;
  6787                           
  6788                           
  6789                           ;psect for function _Lights_Main
  6790  0CA1                     _Lights_Main:	
  6791                           
  6792                           ;TriacRelay_B1.c: 65: if (Light.LoadGO == 1) {
  6793                           
  6794                           ;incstack = 0
  6795                           ; Regs used in _Lights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6796  0CA1  1C77               	btfss	_Light,0
  6797  0CA2  2CB7               	goto	l5103
  6798                           
  6799                           ;TriacRelay_B1.c: 66: if (getLoad_OK() == 1 || getMain_All_Error_Status(0) != 0 || getMa
      +                          in_All_LightsStatus() == 0) {
  6800  0CA3  158A  22E0  158A   	fcall	_getLoad_OK
  6801  0CA6  3A01               	xorlw	1
  6802  0CA7  1903               	skipnz
  6803  0CA8  2CB6               	goto	l1263
  6804  0CA9  3000               	movlw	0
  6805  0CAA  158A  25BA  158A   	fcall	_getMain_All_Error_Status
  6806  0CAD  3800               	iorlw	0
  6807  0CAE  1D03               	skipz
  6808  0CAF  2CB6               	goto	l1263
  6809  0CB0  118A  27F7  158A   	fcall	_getMain_All_LightsStatus
  6810  0CB3  3800               	iorlw	0
  6811  0CB4  1D03               	skipz
  6812  0CB5  2CB7               	goto	l5103
  6813  0CB6                     l1263:	
  6814                           
  6815                           ;TriacRelay_B1.c: 67: Light.LoadGO = 0;
  6816  0CB6  1077               	bcf	_Light,0
  6817  0CB7                     l5103:	
  6818                           
  6819                           ;TriacRelay_B1.c: 68: }
  6820                           ;TriacRelay_B1.c: 69: }
  6821                           ;TriacRelay_B1.c: 73: setLights_Main(1);
  6822  0CB7  3001               	movlw	1
  6823  0CB8  158A  2556  158A   	fcall	_setLights_Main
  6824                           
  6825                           ;TriacRelay_B1.c: 74: Lights_Control(1);
  6826  0CBB  3001               	movlw	1
  6827  0CBC  118A  2609         	fcall	_Lights_Control
  6828  0CBE  0008               	return
  6829  0CBF                     __end_of_Lights_Main:	
  6830                           
  6831                           	psect	text38
  6832  0D56                     __ptext38:	
  6833 ;; *************** function _setLights_Main *****************
  6834 ;; Defined at:
  6835 ;;		line 91 in file "../src/TriacRelay_B1.c"
  6836 ;; Parameters:    Size  Location     Type
  6837 ;;  lights          1    wreg     unsigned char 
  6838 ;; Auto vars:     Size  Location     Type
  6839 ;;  lights          1    5[BANK0 ] unsigned char 
  6840 ;; Return value:  Size  Location     Type
  6841 ;;		None               void
  6842 ;; Registers used:
  6843 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6844 ;; Tracked objects:
  6845 ;;		On entry : 0/0
  6846 ;;		On exit  : 0/0
  6847 ;;		Unchanged: 0/0
  6848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6849 ;;      Params:         0       0       0       0
  6850 ;;      Locals:         0       1       0       0
  6851 ;;      Temps:          0       0       0       0
  6852 ;;      Totals:         0       1       0       0
  6853 ;;Total ram usage:        1 bytes
  6854 ;; Hardware stack levels used:    1
  6855 ;; Hardware stack levels required when called:    5
  6856 ;; This function calls:
  6857 ;;		_LightsPointSelect
  6858 ;;		_getLights_Allow_Condition
  6859 ;;		_setLights
  6860 ;; This function is called by:
  6861 ;;		_Lights_Main
  6862 ;; This function uses a non-reentrant model
  6863 ;;
  6864                           
  6865                           
  6866                           ;psect for function _setLights_Main
  6867  0D56                     _setLights_Main:	
  6868                           
  6869                           ;incstack = 0
  6870                           ; Regs used in _setLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6871                           ;setLights_Main@lights stored from wreg
  6872  0D56  1283               	bcf	3,5	;RP0=0, select bank0
  6873  0D57  1303               	bcf	3,6	;RP1=0, select bank0
  6874  0D58  00D2               	movwf	setLights_Main@lights
  6875                           
  6876                           ;TriacRelay_B1.c: 92: LightsPointSelect(lights);
  6877  0D59  0852               	movf	setLights_Main@lights,w
  6878  0D5A  158A  2301  158A   	fcall	_LightsPointSelect
  6879                           
  6880                           ;TriacRelay_B1.c: 93: if (Lights->GO == 0) {
  6881  0D5D  0878               	movf	_Lights,w
  6882  0D5E  0084               	movwf	4
  6883  0D5F  1383               	bcf	3,7	;select IRP bank0
  6884  0D60  1880               	btfsc	0,1
  6885  0D61  0008               	return
  6886                           
  6887                           ;TriacRelay_B1.c: 94: if (Lights->Trigger == 1) {
  6888  0D62  0878               	movf	_Lights,w
  6889  0D63  0084               	movwf	4
  6890  0D64  1D80               	btfss	0,3
  6891  0D65  0008               	return
  6892                           
  6893                           ;TriacRelay_B1.c: 95: if (getLights_Allow_Condition(lights) == 0) {
  6894  0D66  1283               	bcf	3,5	;RP0=0, select bank0
  6895  0D67  1303               	bcf	3,6	;RP1=0, select bank0
  6896  0D68  0852               	movf	setLights_Main@lights,w
  6897  0D69  158A  23ED  158A   	fcall	_getLights_Allow_Condition
  6898  0D6C  3800               	iorlw	0
  6899  0D6D  1D03               	skipz
  6900  0D6E  0008               	return
  6901                           
  6902                           ;TriacRelay_B1.c: 96: Lights->Trigger = 0;
  6903  0D6F  0878               	movf	_Lights,w
  6904  0D70  0084               	movwf	4
  6905  0D71  1383               	bcf	3,7	;select IRP bank0
  6906  0D72  1180               	bcf	0,3
  6907                           
  6908                           ;TriacRelay_B1.c: 97: if (Lights->Switch == 1) {
  6909  0D73  0878               	movf	_Lights,w
  6910  0D74  0084               	movwf	4
  6911  0D75  1E00               	btfss	0,4
  6912  0D76  2D7F               	goto	l4701
  6913                           
  6914                           ;TriacRelay_B1.c: 98: setLights(lights, 1);
  6915  0D77  1283               	bcf	3,5	;RP0=0, select bank0
  6916  0D78  1303               	bcf	3,6	;RP1=0, select bank0
  6917  0D79  01CF               	clrf	setLights@status
  6918  0D7A  0ACF               	incf	setLights@status,f
  6919  0D7B  0852               	movf	setLights_Main@lights,w
  6920  0D7C  118A  268C         	fcall	_setLights
  6921                           
  6922                           ;TriacRelay_B1.c: 99: } else {
  6923  0D7E  0008               	return
  6924  0D7F                     l4701:	
  6925                           
  6926                           ;TriacRelay_B1.c: 100: setLights(lights, 0);
  6927  0D7F  1283               	bcf	3,5	;RP0=0, select bank0
  6928  0D80  1303               	bcf	3,6	;RP1=0, select bank0
  6929  0D81  01CF               	clrf	setLights@status
  6930  0D82  0852               	movf	setLights_Main@lights,w
  6931  0D83  118A  268C         	fcall	_setLights
  6932  0D85  0008               	return
  6933  0D86                     __end_of_setLights_Main:	
  6934                           
  6935                           	psect	text39
  6936  068C                     __ptext39:	
  6937 ;; *************** function _setLights *****************
  6938 ;; Defined at:
  6939 ;;		line 108 in file "../src/TriacRelay_B1.c"
  6940 ;; Parameters:    Size  Location     Type
  6941 ;;  lights          1    wreg     unsigned char 
  6942 ;;  status          1    2[BANK0 ] unsigned char 
  6943 ;; Auto vars:     Size  Location     Type
  6944 ;;  lights          1    4[BANK0 ] unsigned char 
  6945 ;; Return value:  Size  Location     Type
  6946 ;;		None               void
  6947 ;; Registers used:
  6948 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6949 ;; Tracked objects:
  6950 ;;		On entry : 0/0
  6951 ;;		On exit  : 0/0
  6952 ;;		Unchanged: 0/0
  6953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6954 ;;      Params:         0       1       0       0
  6955 ;;      Locals:         0       1       0       0
  6956 ;;      Temps:          0       1       0       0
  6957 ;;      Totals:         0       3       0       0
  6958 ;;Total ram usage:        3 bytes
  6959 ;; Hardware stack levels used:    1
  6960 ;; Hardware stack levels required when called:    4
  6961 ;; This function calls:
  6962 ;;		_setLED
  6963 ;;		_setLights_Line
  6964 ;; This function is called by:
  6965 ;;		_setLights_Main
  6966 ;; This function uses a non-reentrant model
  6967 ;;
  6968                           
  6969                           
  6970                           ;psect for function _setLights
  6971  068C                     _setLights:	
  6972                           
  6973                           ;incstack = 0
  6974                           ; Regs used in _setLights: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6975                           ;setLights@lights stored from wreg
  6976  068C  1283               	bcf	3,5	;RP0=0, select bank0
  6977  068D  1303               	bcf	3,6	;RP1=0, select bank0
  6978  068E  00D1               	movwf	setLights@lights
  6979                           
  6980                           ;TriacRelay_B1.c: 116: if (status == 1) {
  6981  068F  084F               	movf	setLights@status,w
  6982  0690  3A01               	xorlw	1
  6983  0691  1D03               	skipz
  6984  0692  2ECF               	goto	l4533
  6985                           
  6986                           ;TriacRelay_B1.c: 118: if (lights == 2) {
  6987  0693  0851               	movf	setLights@lights,w
  6988  0694  3A02               	xorlw	2
  6989  0695  1D03               	skipz
  6990  0696  2EA4               	goto	l4515
  6991                           
  6992                           ;TriacRelay_B1.c: 119: setLED(1, 0);
  6993  0697  01CD               	clrf	setLED@command
  6994  0698  3001               	movlw	1
  6995  0699  158A  2735  118A   	fcall	_setLED
  6996                           
  6997                           ;TriacRelay_B1.c: 120: setLED(2, 1);
  6998  069C  1283               	bcf	3,5	;RP0=0, select bank0
  6999  069D  1303               	bcf	3,6	;RP1=0, select bank0
  7000  069E  01CD               	clrf	setLED@command
  7001  069F  0ACD               	incf	setLED@command,f
  7002  06A0  3002               	movlw	2
  7003  06A1  158A  2735  118A   	fcall	_setLED
  7004  06A4                     l4515:	
  7005                           
  7006                           ;TriacRelay_B1.c: 121: }
  7007                           ;TriacRelay_B1.c: 127: if (Lights->Status == 0) {
  7008  06A4  0878               	movf	_Lights,w
  7009  06A5  0084               	movwf	4
  7010  06A6  1383               	bcf	3,7	;select IRP bank0
  7011  06A7  1900               	btfsc	0,2
  7012  06A8  2EC8               	goto	l4529
  7013                           
  7014                           ;TriacRelay_B1.c: 128: Lights->Status = 1;
  7015  06A9  0878               	movf	_Lights,w
  7016  06AA  0084               	movwf	4
  7017  06AB  1500               	bsf	0,2
  7018                           
  7019                           ;TriacRelay_B1.c: 130: if (lights == 1) {
  7020  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  7021  06AD  1303               	bcf	3,6	;RP1=0, select bank0
  7022  06AE  0851               	movf	setLights@lights,w
  7023  06AF  3A01               	xorlw	1
  7024  06B0  1D03               	skipz
  7025  06B1  2EC8               	goto	l4529
  7026                           
  7027                           ;TriacRelay_B1.c: 131: RB2 = 1;
  7028  06B2  1506               	bsf	6,2	;volatile
  7029                           
  7030                           ;TriacRelay_B1.c: 132: Lights->RelayValue = 100;
  7031  06B3  3064               	movlw	100
  7032  06B4  00D0               	movwf	??_setLights
  7033  06B5  0878               	movf	_Lights,w
  7034  06B6  3E04               	addlw	4
  7035  06B7  0084               	movwf	4
  7036  06B8  0850               	movf	??_setLights,w
  7037  06B9  0080               	movwf	0
  7038                           
  7039                           ;TriacRelay_B1.c: 133: Lights->TriacValue = 140;
  7040  06BA  308C               	movlw	140
  7041  06BB  00D0               	movwf	??_setLights
  7042  06BC  0878               	movf	_Lights,w
  7043  06BD  3E03               	addlw	3
  7044  06BE  0084               	movwf	4
  7045  06BF  0850               	movf	??_setLights,w
  7046  06C0  0080               	movwf	0
  7047                           
  7048                           ;TriacRelay_B1.c: 134: Lights->Time = 0;
  7049  06C1  0878               	movf	_Lights,w
  7050  06C2  3E02               	addlw	2
  7051  06C3  0084               	movwf	4
  7052  06C4  0180               	clrf	0
  7053                           
  7054                           ;TriacRelay_B1.c: 135: Lights->GO = 1;
  7055  06C5  0878               	movf	_Lights,w
  7056  06C6  0084               	movwf	4
  7057  06C7  1480               	bsf	0,1
  7058  06C8                     l4529:	
  7059                           
  7060                           ;TriacRelay_B1.c: 136: }
  7061                           ;TriacRelay_B1.c: 162: }
  7062                           ;TriacRelay_B1.c: 164: Light.Load_Status = 1;
  7063  06C8  14F7               	bsf	_Light,1
  7064                           
  7065                           ;TriacRelay_B1.c: 165: setLights_Line(lights);
  7066  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  7067  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  7068  06CB  0851               	movf	setLights@lights,w
  7069  06CC  158A  232E         	fcall	_setLights_Line
  7070                           
  7071                           ;TriacRelay_B1.c: 167: } else {
  7072  06CE  0008               	return
  7073  06CF                     l4533:	
  7074                           
  7075                           ;TriacRelay_B1.c: 170: if (lights == 2) {
  7076  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  7077  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  7078  06D1  0851               	movf	setLights@lights,w
  7079  06D2  3A02               	xorlw	2
  7080  06D3  1D03               	skipz
  7081  06D4  2EE2               	goto	l4537
  7082                           
  7083                           ;TriacRelay_B1.c: 171: setLED(1, 1);
  7084  06D5  01CD               	clrf	setLED@command
  7085  06D6  0ACD               	incf	setLED@command,f
  7086  06D7  3001               	movlw	1
  7087  06D8  158A  2735  118A   	fcall	_setLED
  7088                           
  7089                           ;TriacRelay_B1.c: 172: setLED(2, 0);
  7090  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  7091  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  7092  06DD  01CD               	clrf	setLED@command
  7093  06DE  3002               	movlw	2
  7094  06DF  158A  2735  118A   	fcall	_setLED
  7095  06E2                     l4537:	
  7096                           
  7097                           ;TriacRelay_B1.c: 173: }
  7098                           ;TriacRelay_B1.c: 175: if (Lights->Status == 1) {
  7099  06E2  0878               	movf	_Lights,w
  7100  06E3  0084               	movwf	4
  7101  06E4  1383               	bcf	3,7	;select IRP bank0
  7102  06E5  1D00               	btfss	0,2
  7103  06E6  2F06               	goto	l4551
  7104                           
  7105                           ;TriacRelay_B1.c: 176: Lights->Status = 0;
  7106  06E7  0878               	movf	_Lights,w
  7107  06E8  0084               	movwf	4
  7108  06E9  1100               	bcf	0,2
  7109                           
  7110                           ;TriacRelay_B1.c: 178: if (lights == 1) {
  7111  06EA  1283               	bcf	3,5	;RP0=0, select bank0
  7112  06EB  1303               	bcf	3,6	;RP1=0, select bank0
  7113  06EC  0851               	movf	setLights@lights,w
  7114  06ED  3A01               	xorlw	1
  7115  06EE  1D03               	skipz
  7116  06EF  2F06               	goto	l4551
  7117                           
  7118                           ;TriacRelay_B1.c: 179: RB2 = 1;
  7119  06F0  1506               	bsf	6,2	;volatile
  7120                           
  7121                           ;TriacRelay_B1.c: 180: Lights->RelayValue = 40;
  7122  06F1  3028               	movlw	40
  7123  06F2  00D0               	movwf	??_setLights
  7124  06F3  0878               	movf	_Lights,w
  7125  06F4  3E04               	addlw	4
  7126  06F5  0084               	movwf	4
  7127  06F6  0850               	movf	??_setLights,w
  7128  06F7  0080               	movwf	0
  7129                           
  7130                           ;TriacRelay_B1.c: 181: Lights->TriacValue = 80;
  7131  06F8  3050               	movlw	80
  7132  06F9  00D0               	movwf	??_setLights
  7133  06FA  0878               	movf	_Lights,w
  7134  06FB  3E03               	addlw	3
  7135  06FC  0084               	movwf	4
  7136  06FD  0850               	movf	??_setLights,w
  7137  06FE  0080               	movwf	0
  7138                           
  7139                           ;TriacRelay_B1.c: 182: Lights->Time = 0;
  7140  06FF  0878               	movf	_Lights,w
  7141  0700  3E02               	addlw	2
  7142  0701  0084               	movwf	4
  7143  0702  0180               	clrf	0
  7144                           
  7145                           ;TriacRelay_B1.c: 183: Lights->GO = 1;
  7146  0703  0878               	movf	_Lights,w
  7147  0704  0084               	movwf	4
  7148  0705  1480               	bsf	0,1
  7149  0706                     l4551:	
  7150                           
  7151                           ;TriacRelay_B1.c: 184: }
  7152                           ;TriacRelay_B1.c: 211: }
  7153                           ;TriacRelay_B1.c: 213: Light.Load_Status = 0;
  7154  0706  10F7               	bcf	_Light,1
  7155                           
  7156                           ;TriacRelay_B1.c: 214: setLights_Line(0);
  7157  0707  3000               	movlw	0
  7158  0708  158A  232E         	fcall	_setLights_Line
  7159  070A  0008               	return
  7160  070B                     __end_of_setLights:	
  7161                           
  7162                           	psect	text40
  7163  0B2E                     __ptext40:	
  7164 ;; *************** function _setLights_Line *****************
  7165 ;; Defined at:
  7166 ;;		line 285 in file "../src/TriacRelay_B1.c"
  7167 ;; Parameters:    Size  Location     Type
  7168 ;;  lights          1    wreg     unsigned char 
  7169 ;; Auto vars:     Size  Location     Type
  7170 ;;  lights          1    4[COMMON] unsigned char 
  7171 ;; Return value:  Size  Location     Type
  7172 ;;		None               void
  7173 ;; Registers used:
  7174 ;;		wreg
  7175 ;; Tracked objects:
  7176 ;;		On entry : 0/0
  7177 ;;		On exit  : 0/0
  7178 ;;		Unchanged: 0/0
  7179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7180 ;;      Params:         0       0       0       0
  7181 ;;      Locals:         1       0       0       0
  7182 ;;      Temps:          0       0       0       0
  7183 ;;      Totals:         1       0       0       0
  7184 ;;Total ram usage:        1 bytes
  7185 ;; Hardware stack levels used:    1
  7186 ;; Hardware stack levels required when called:    2
  7187 ;; This function calls:
  7188 ;;		Nothing
  7189 ;; This function is called by:
  7190 ;;		_setLights
  7191 ;; This function uses a non-reentrant model
  7192 ;;
  7193                           
  7194                           
  7195                           ;psect for function _setLights_Line
  7196  0B2E                     _setLights_Line:	
  7197                           
  7198                           ;incstack = 0
  7199                           ; Regs used in _setLights_Line: [wreg]
  7200                           ;setLights_Line@lights stored from wreg
  7201  0B2E  00F4               	movwf	setLights_Line@lights
  7202                           
  7203                           ;TriacRelay_B1.c: 286: Light.LoadGO = 1;
  7204  0B2F  1477               	bsf	_Light,0
  7205                           
  7206                           ;TriacRelay_B1.c: 288: Lights1.Line = 0;
  7207  0B30  1283               	bcf	3,5	;RP0=0, select bank0
  7208  0B31  1303               	bcf	3,6	;RP1=0, select bank0
  7209  0B32  1041               	bcf	_Lights1+1,0
  7210                           
  7211                           ;TriacRelay_B1.c: 289: if (lights == 1 && lights != 0) {
  7212  0B33  0874               	movf	setLights_Line@lights,w
  7213  0B34  3A01               	xorlw	1
  7214  0B35  1D03               	skipz
  7215  0B36  0008               	return
  7216  0B37  0874               	movf	setLights_Line@lights,w
  7217  0B38  1903               	btfsc	3,2
  7218  0B39  0008               	return
  7219                           
  7220                           ;TriacRelay_B1.c: 290: Lights1.Line = 1;
  7221  0B3A  1441               	bsf	_Lights1+1,0
  7222  0B3B  0008               	return
  7223  0B3C                     __end_of_setLights_Line:	
  7224                           
  7225                           	psect	text41
  7226  0BED                     __ptext41:	
  7227 ;; *************** function _getLights_Allow_Condition *****************
  7228 ;; Defined at:
  7229 ;;		line 367 in file "../src/TriacRelay_B1.c"
  7230 ;; Parameters:    Size  Location     Type
  7231 ;;  lights          1    wreg     unsigned char 
  7232 ;; Auto vars:     Size  Location     Type
  7233 ;;  lights          1    0[COMMON] unsigned char 
  7234 ;;  allow           1    0[BANK0 ] unsigned char 
  7235 ;; Return value:  Size  Location     Type
  7236 ;;                  1    wreg      unsigned char 
  7237 ;; Registers used:
  7238 ;;		wreg, status,2, pclath, cstack
  7239 ;; Tracked objects:
  7240 ;;		On entry : 0/0
  7241 ;;		On exit  : 0/0
  7242 ;;		Unchanged: 0/0
  7243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7244 ;;      Params:         0       0       0       0
  7245 ;;      Locals:         0       2       0       0
  7246 ;;      Temps:          1       0       0       0
  7247 ;;      Totals:         1       2       0       0
  7248 ;;Total ram usage:        3 bytes
  7249 ;; Hardware stack levels used:    1
  7250 ;; Hardware stack levels required when called:    3
  7251 ;; This function calls:
  7252 ;;		_getLoad_OK
  7253 ;; This function is called by:
  7254 ;;		_setLights_Main
  7255 ;; This function uses a non-reentrant model
  7256 ;;
  7257                           
  7258                           
  7259                           ;psect for function _getLights_Allow_Condition
  7260  0BED                     _getLights_Allow_Condition:	
  7261                           
  7262                           ;TriacRelay_B1.c: 368: char allow = 0;
  7263                           
  7264                           ;incstack = 0
  7265                           ; Regs used in _getLights_Allow_Condition: [wreg+status,2+pclath+cstack]
  7266  0BED  1283               	bcf	3,5	;RP0=0, select bank0
  7267  0BEE  1303               	bcf	3,6	;RP1=0, select bank0
  7268  0BEF  01CD               	clrf	getLights_Allow_Condition@allow
  7269                           
  7270                           ;TriacRelay_B1.c: 371: allow = getLoad_OK() == 0 && Light.LoadGO == 0 ? 0 : 1;
  7271  0BF0  01CE               	clrf	_getLights_Allow_Condition$4224
  7272  0BF1  0ACE               	incf	_getLights_Allow_Condition$4224,f
  7273  0BF2  158A  22E0  158A   	fcall	_getLoad_OK
  7274  0BF5  3800               	iorlw	0
  7275  0BF6  1903               	btfsc	3,2
  7276  0BF7  1877               	btfsc	_Light,0
  7277  0BF8  2BFC               	goto	l4503
  7278  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  7279  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  7280  0BFB  01CE               	clrf	_getLights_Allow_Condition$4224
  7281  0BFC                     l4503:	
  7282  0BFC  1283               	bcf	3,5	;RP0=0, select bank0
  7283  0BFD  1303               	bcf	3,6	;RP1=0, select bank0
  7284  0BFE  084E               	movf	_getLights_Allow_Condition$4224,w
  7285  0BFF  00F5               	movwf	??_getLights_Allow_Condition
  7286  0C00  0875               	movf	??_getLights_Allow_Condition,w
  7287  0C01  00CD               	movwf	getLights_Allow_Condition@allow
  7288                           
  7289                           ;TriacRelay_B1.c: 396: return allow;
  7290  0C02  084D               	movf	getLights_Allow_Condition@allow,w
  7291  0C03  0008               	return
  7292  0C04                     __end_of_getLights_Allow_Condition:	
  7293                           
  7294                           	psect	text42
  7295  0AE0                     __ptext42:	
  7296 ;; *************** function _getLoad_OK *****************
  7297 ;; Defined at:
  7298 ;;		line 272 in file "../src/OverLoad_B1.c"
  7299 ;; Parameters:    Size  Location     Type
  7300 ;;		None
  7301 ;; Auto vars:     Size  Location     Type
  7302 ;;  ok              1    4[COMMON] unsigned char 
  7303 ;; Return value:  Size  Location     Type
  7304 ;;                  1    wreg      unsigned char 
  7305 ;; Registers used:
  7306 ;;		wreg, status,2
  7307 ;; Tracked objects:
  7308 ;;		On entry : 0/0
  7309 ;;		On exit  : 0/0
  7310 ;;		Unchanged: 0/0
  7311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7312 ;;      Params:         0       0       0       0
  7313 ;;      Locals:         1       0       0       0
  7314 ;;      Temps:          0       0       0       0
  7315 ;;      Totals:         1       0       0       0
  7316 ;;Total ram usage:        1 bytes
  7317 ;; Hardware stack levels used:    1
  7318 ;; Hardware stack levels required when called:    2
  7319 ;; This function calls:
  7320 ;;		Nothing
  7321 ;; This function is called by:
  7322 ;;		_Lights_Main
  7323 ;;		_getLights_Allow_Condition
  7324 ;; This function uses a non-reentrant model
  7325 ;;
  7326                           
  7327                           
  7328                           ;psect for function _getLoad_OK
  7329  0AE0                     _getLoad_OK:	
  7330                           
  7331                           ;OverLoad_B1.c: 273: char ok = Load.OK == 1 ? 1 : 0;
  7332                           
  7333                           ;incstack = 0
  7334                           ; Regs used in _getLoad_OK: [wreg+status,2]
  7335  0AE0  3000               	movlw	0
  7336  0AE1  1683               	bsf	3,5	;RP0=1, select bank1
  7337  0AE2  1303               	bcf	3,6	;RP1=0, select bank1
  7338  0AE3  1BCA               	btfsc	_Load^(0+128),7
  7339  0AE4  3001               	movlw	1
  7340  0AE5  00F4               	movwf	getLoad_OK@ok
  7341                           
  7342                           ;OverLoad_B1.c: 274: return ok;
  7343  0AE6  0874               	movf	getLoad_OK@ok,w
  7344  0AE7  0008               	return
  7345  0AE8                     __end_of_getLoad_OK:	
  7346                           
  7347                           	psect	text43
  7348  0609                     __ptext43:	
  7349 ;; *************** function _Lights_Control *****************
  7350 ;; Defined at:
  7351 ;;		line 220 in file "../src/TriacRelay_B1.c"
  7352 ;; Parameters:    Size  Location     Type
  7353 ;;  lights          1    wreg     unsigned char 
  7354 ;; Auto vars:     Size  Location     Type
  7355 ;;  lights          1   10[BANK0 ] unsigned char 
  7356 ;; Return value:  Size  Location     Type
  7357 ;;		None               void
  7358 ;; Registers used:
  7359 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7360 ;; Tracked objects:
  7361 ;;		On entry : 0/0
  7362 ;;		On exit  : 0/0
  7363 ;;		Unchanged: 0/0
  7364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7365 ;;      Params:         0       0       0       0
  7366 ;;      Locals:         0       1       0       0
  7367 ;;      Temps:          0       2       0       0
  7368 ;;      Totals:         0       3       0       0
  7369 ;;Total ram usage:        3 bytes
  7370 ;; Hardware stack levels used:    1
  7371 ;; Hardware stack levels required when called:    3
  7372 ;; This function calls:
  7373 ;;		_LightsPointSelect
  7374 ;;		___awdiv
  7375 ;; This function is called by:
  7376 ;;		_Lights_Main
  7377 ;; This function uses a non-reentrant model
  7378 ;;
  7379                           
  7380                           
  7381                           ;psect for function _Lights_Control
  7382  0609                     _Lights_Control:	
  7383                           
  7384                           ;incstack = 0
  7385                           ; Regs used in _Lights_Control: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7386                           ;Lights_Control@lights stored from wreg
  7387  0609  1283               	bcf	3,5	;RP0=0, select bank0
  7388  060A  1303               	bcf	3,6	;RP1=0, select bank0
  7389  060B  00D7               	movwf	Lights_Control@lights
  7390                           
  7391                           ;TriacRelay_B1.c: 221: LightsPointSelect(lights);
  7392  060C  0857               	movf	Lights_Control@lights,w
  7393  060D  158A  2301  118A   	fcall	_LightsPointSelect
  7394                           
  7395                           ;TriacRelay_B1.c: 222: if (Lights->GO == 1) {
  7396  0610  0878               	movf	_Lights,w
  7397  0611  0084               	movwf	4
  7398  0612  1383               	bcf	3,7	;select IRP bank0
  7399  0613  1C80               	btfss	0,1
  7400  0614  0008               	return
  7401                           
  7402                           ;TriacRelay_B1.c: 223: Lights->Time++;
  7403  0615  3001               	movlw	1
  7404  0616  1283               	bcf	3,5	;RP0=0, select bank0
  7405  0617  1303               	bcf	3,6	;RP1=0, select bank0
  7406  0618  00D5               	movwf	??_Lights_Control
  7407  0619  0878               	movf	_Lights,w
  7408  061A  3E02               	addlw	2
  7409  061B  0084               	movwf	4
  7410  061C  0855               	movf	??_Lights_Control,w
  7411  061D  0780               	addwf	0,f
  7412                           
  7413                           ;TriacRelay_B1.c: 224: if (Lights->RelaySet == 0) {
  7414  061E  0878               	movf	_Lights,w
  7415  061F  0084               	movwf	4
  7416  0620  1B80               	btfsc	0,7
  7417  0621  2E58               	goto	l4719
  7418                           
  7419                           ;TriacRelay_B1.c: 225: if (Lights->Time >= (Lights->RelayValue / 20)) {
  7420  0622  3014               	movlw	20
  7421  0623  00CD               	movwf	___awdiv@divisor
  7422  0624  3000               	movlw	0
  7423  0625  00CE               	movwf	___awdiv@divisor+1
  7424  0626  0878               	movf	_Lights,w
  7425  0627  3E04               	addlw	4
  7426  0628  0084               	movwf	4
  7427  0629  0800               	movf	0,w
  7428  062A  00D5               	movwf	??_Lights_Control
  7429  062B  01D6               	clrf	??_Lights_Control+1
  7430  062C  0855               	movf	??_Lights_Control,w
  7431  062D  00CF               	movwf	___awdiv@dividend
  7432  062E  0856               	movf	??_Lights_Control+1,w
  7433  062F  00D0               	movwf	___awdiv@dividend+1
  7434  0630  158A  26D8  118A   	fcall	___awdiv
  7435  0633  0878               	movf	_Lights,w
  7436  0634  3E02               	addlw	2
  7437  0635  0084               	movwf	4
  7438  0636  1283               	bcf	3,5	;RP0=0, select bank0
  7439  0637  1303               	bcf	3,6	;RP1=0, select bank0
  7440  0638  084E               	movf	?___awdiv+1,w
  7441  0639  3A80               	xorlw	128
  7442  063A  3C80               	sublw	128
  7443  063B  1D03               	skipz
  7444  063C  2E40               	goto	u5585
  7445  063D  084D               	movf	?___awdiv,w
  7446  063E  1383               	bcf	3,7	;select IRP bank0
  7447  063F  0200               	subwf	0,w
  7448  0640                     u5585:	
  7449  0640  1C03               	skipc
  7450  0641  0008               	return
  7451                           
  7452                           ;TriacRelay_B1.c: 226: Lights->RelaySet = 1;
  7453  0642  0878               	movf	_Lights,w
  7454  0643  0084               	movwf	4
  7455  0644  1383               	bcf	3,7	;select IRP bank0
  7456  0645  1780               	bsf	0,7
  7457                           
  7458                           ;TriacRelay_B1.c: 228: if (lights == 1) {
  7459  0646  1283               	bcf	3,5	;RP0=0, select bank0
  7460  0647  1303               	bcf	3,6	;RP1=0, select bank0
  7461  0648  0857               	movf	Lights_Control@lights,w
  7462  0649  3A01               	xorlw	1
  7463  064A  1D03               	skipz
  7464  064B  0008               	return
  7465                           
  7466                           ;TriacRelay_B1.c: 229: RB3 = Lights->Status == 1 ? 1 : 0;
  7467  064C  0878               	movf	_Lights,w
  7468  064D  0084               	movwf	4
  7469  064E  1D00               	btfss	0,2
  7470  064F  2E54               	goto	u5600
  7471  0650  1283               	bcf	3,5	;RP0=0, select bank0
  7472  0651  1303               	bcf	3,6	;RP1=0, select bank0
  7473  0652  1586               	bsf	6,3	;volatile
  7474  0653  0008               	return
  7475  0654                     u5600:	
  7476  0654  1283               	bcf	3,5	;RP0=0, select bank0
  7477  0655  1303               	bcf	3,6	;RP1=0, select bank0
  7478  0656  1186               	bcf	6,3	;volatile
  7479                           
  7480                           ;TriacRelay_B1.c: 230: }
  7481                           ;TriacRelay_B1.c: 242: }
  7482                           ;TriacRelay_B1.c: 243: } else {
  7483  0657  0008               	return
  7484  0658                     l4719:	
  7485                           
  7486                           ;TriacRelay_B1.c: 244: if (Lights->Time >= (Lights->TriacValue / 20)) {
  7487  0658  3014               	movlw	20
  7488  0659  00CD               	movwf	___awdiv@divisor
  7489  065A  3000               	movlw	0
  7490  065B  00CE               	movwf	___awdiv@divisor+1
  7491  065C  0878               	movf	_Lights,w
  7492  065D  3E03               	addlw	3
  7493  065E  0084               	movwf	4
  7494  065F  1383               	bcf	3,7	;select IRP bank0
  7495  0660  0800               	movf	0,w
  7496  0661  00D5               	movwf	??_Lights_Control
  7497  0662  01D6               	clrf	??_Lights_Control+1
  7498  0663  0855               	movf	??_Lights_Control,w
  7499  0664  00CF               	movwf	___awdiv@dividend
  7500  0665  0856               	movf	??_Lights_Control+1,w
  7501  0666  00D0               	movwf	___awdiv@dividend+1
  7502  0667  158A  26D8  118A   	fcall	___awdiv
  7503  066A  0878               	movf	_Lights,w
  7504  066B  3E02               	addlw	2
  7505  066C  0084               	movwf	4
  7506  066D  1283               	bcf	3,5	;RP0=0, select bank0
  7507  066E  1303               	bcf	3,6	;RP1=0, select bank0
  7508  066F  084E               	movf	?___awdiv+1,w
  7509  0670  3A80               	xorlw	128
  7510  0671  3C80               	sublw	128
  7511  0672  1D03               	skipz
  7512  0673  2E77               	goto	u5625
  7513  0674  084D               	movf	?___awdiv,w
  7514  0675  1383               	bcf	3,7	;select IRP bank0
  7515  0676  0200               	subwf	0,w
  7516  0677                     u5625:	
  7517  0677  1C03               	skipc
  7518  0678  0008               	return
  7519                           
  7520                           ;TriacRelay_B1.c: 245: Lights->Time = 0;
  7521  0679  0878               	movf	_Lights,w
  7522  067A  3E02               	addlw	2
  7523  067B  0084               	movwf	4
  7524  067C  1383               	bcf	3,7	;select IRP bank0
  7525  067D  0180               	clrf	0
  7526                           
  7527                           ;TriacRelay_B1.c: 246: Lights->GO = 0;
  7528  067E  0878               	movf	_Lights,w
  7529  067F  0084               	movwf	4
  7530  0680  1080               	bcf	0,1
  7531                           
  7532                           ;TriacRelay_B1.c: 247: Lights->RelaySet = 0;
  7533  0681  0878               	movf	_Lights,w
  7534  0682  0084               	movwf	4
  7535  0683  1380               	bcf	0,7
  7536                           
  7537                           ;TriacRelay_B1.c: 250: if (lights == 1) {
  7538  0684  1283               	bcf	3,5	;RP0=0, select bank0
  7539  0685  1303               	bcf	3,6	;RP1=0, select bank0
  7540  0686  0857               	movf	Lights_Control@lights,w
  7541  0687  3A01               	xorlw	1
  7542  0688  1D03               	skipz
  7543  0689  0008               	return
  7544                           
  7545                           ;TriacRelay_B1.c: 251: RB2 = 0;
  7546  068A  1106               	bcf	6,2	;volatile
  7547  068B  0008               	return
  7548  068C                     __end_of_Lights_Control:	
  7549                           
  7550                           	psect	text44
  7551  0ED8                     __ptext44:	
  7552 ;; *************** function ___awdiv *****************
  7553 ;; Defined at:
  7554 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  7555 ;; Parameters:    Size  Location     Type
  7556 ;;  divisor         2    0[BANK0 ] int 
  7557 ;;  dividend        2    2[BANK0 ] int 
  7558 ;; Auto vars:     Size  Location     Type
  7559 ;;  quotient        2    6[BANK0 ] int 
  7560 ;;  sign            1    5[BANK0 ] unsigned char 
  7561 ;;  counter         1    4[BANK0 ] unsigned char 
  7562 ;; Return value:  Size  Location     Type
  7563 ;;                  2    0[BANK0 ] int 
  7564 ;; Registers used:
  7565 ;;		wreg, status,2, status,0
  7566 ;; Tracked objects:
  7567 ;;		On entry : 0/0
  7568 ;;		On exit  : 0/0
  7569 ;;		Unchanged: 0/0
  7570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7571 ;;      Params:         0       4       0       0
  7572 ;;      Locals:         0       4       0       0
  7573 ;;      Temps:          1       0       0       0
  7574 ;;      Totals:         1       8       0       0
  7575 ;;Total ram usage:        9 bytes
  7576 ;; Hardware stack levels used:    1
  7577 ;; Hardware stack levels required when called:    2
  7578 ;; This function calls:
  7579 ;;		Nothing
  7580 ;; This function is called by:
  7581 ;;		_getPIR_AD
  7582 ;;		_Lights_Control
  7583 ;; This function uses a non-reentrant model
  7584 ;;
  7585                           
  7586                           
  7587                           ;psect for function ___awdiv
  7588  0ED8                     ___awdiv:	
  7589                           
  7590                           ;incstack = 0
  7591                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7592  0ED8  1283               	bcf	3,5	;RP0=0, select bank0
  7593  0ED9  1303               	bcf	3,6	;RP1=0, select bank0
  7594  0EDA  01D2               	clrf	___awdiv@sign
  7595  0EDB  1FCE               	btfss	___awdiv@divisor+1,7
  7596  0EDC  2EE4               	goto	l4569
  7597  0EDD  09CD               	comf	___awdiv@divisor,f
  7598  0EDE  09CE               	comf	___awdiv@divisor+1,f
  7599  0EDF  0ACD               	incf	___awdiv@divisor,f
  7600  0EE0  1903               	skipnz
  7601  0EE1  0ACE               	incf	___awdiv@divisor+1,f
  7602  0EE2  01D2               	clrf	___awdiv@sign
  7603  0EE3  0AD2               	incf	___awdiv@sign,f
  7604  0EE4                     l4569:	
  7605  0EE4  1FD0               	btfss	___awdiv@dividend+1,7
  7606  0EE5  2EEF               	goto	l4575
  7607  0EE6  09CF               	comf	___awdiv@dividend,f
  7608  0EE7  09D0               	comf	___awdiv@dividend+1,f
  7609  0EE8  0ACF               	incf	___awdiv@dividend,f
  7610  0EE9  1903               	skipnz
  7611  0EEA  0AD0               	incf	___awdiv@dividend+1,f
  7612  0EEB  3001               	movlw	1
  7613  0EEC  00F4               	movwf	??___awdiv
  7614  0EED  0874               	movf	??___awdiv,w
  7615  0EEE  06D2               	xorwf	___awdiv@sign,f
  7616  0EEF                     l4575:	
  7617  0EEF  01D3               	clrf	___awdiv@quotient
  7618  0EF0  01D4               	clrf	___awdiv@quotient+1
  7619  0EF1  084E               	movf	___awdiv@divisor+1,w
  7620  0EF2  044D               	iorwf	___awdiv@divisor,w
  7621  0EF3  1903               	skipnz
  7622  0EF4  2F26               	goto	l4597
  7623  0EF5  01D1               	clrf	___awdiv@counter
  7624  0EF6  0AD1               	incf	___awdiv@counter,f
  7625  0EF7                     l4585:	
  7626  0EF7  1BCE               	btfsc	___awdiv@divisor+1,7
  7627  0EF8  2F05               	goto	l4587
  7628  0EF9  3001               	movlw	1
  7629  0EFA                     u5285:	
  7630  0EFA  1003               	clrc
  7631  0EFB  0DCD               	rlf	___awdiv@divisor,f
  7632  0EFC  0DCE               	rlf	___awdiv@divisor+1,f
  7633  0EFD  3EFF               	addlw	-1
  7634  0EFE  1D03               	skipz
  7635  0EFF  2EFA               	goto	u5285
  7636  0F00  3001               	movlw	1
  7637  0F01  00F4               	movwf	??___awdiv
  7638  0F02  0874               	movf	??___awdiv,w
  7639  0F03  07D1               	addwf	___awdiv@counter,f
  7640  0F04  2EF7               	goto	l4585
  7641  0F05                     l4587:	
  7642  0F05  3001               	movlw	1
  7643  0F06                     u5305:	
  7644  0F06  1003               	clrc
  7645  0F07  0DD3               	rlf	___awdiv@quotient,f
  7646  0F08  0DD4               	rlf	___awdiv@quotient+1,f
  7647  0F09  3EFF               	addlw	-1
  7648  0F0A  1D03               	skipz
  7649  0F0B  2F06               	goto	u5305
  7650  0F0C  084E               	movf	___awdiv@divisor+1,w
  7651  0F0D  0250               	subwf	___awdiv@dividend+1,w
  7652  0F0E  1D03               	skipz
  7653  0F0F  2F12               	goto	u5315
  7654  0F10  084D               	movf	___awdiv@divisor,w
  7655  0F11  024F               	subwf	___awdiv@dividend,w
  7656  0F12                     u5315:	
  7657  0F12  1C03               	skipc
  7658  0F13  2F1B               	goto	l4593
  7659  0F14  084D               	movf	___awdiv@divisor,w
  7660  0F15  02CF               	subwf	___awdiv@dividend,f
  7661  0F16  084E               	movf	___awdiv@divisor+1,w
  7662  0F17  1C03               	skipc
  7663  0F18  03D0               	decf	___awdiv@dividend+1,f
  7664  0F19  02D0               	subwf	___awdiv@dividend+1,f
  7665  0F1A  1453               	bsf	___awdiv@quotient,0
  7666  0F1B                     l4593:	
  7667  0F1B  3001               	movlw	1
  7668  0F1C                     u5325:	
  7669  0F1C  1003               	clrc
  7670  0F1D  0CCE               	rrf	___awdiv@divisor+1,f
  7671  0F1E  0CCD               	rrf	___awdiv@divisor,f
  7672  0F1F  3EFF               	addlw	-1
  7673  0F20  1D03               	skipz
  7674  0F21  2F1C               	goto	u5325
  7675  0F22  3001               	movlw	1
  7676  0F23  02D1               	subwf	___awdiv@counter,f
  7677  0F24  1D03               	btfss	3,2
  7678  0F25  2F05               	goto	l4587
  7679  0F26                     l4597:	
  7680  0F26  0852               	movf	___awdiv@sign,w
  7681  0F27  1903               	btfsc	3,2
  7682  0F28  2F2E               	goto	l4601
  7683  0F29  09D3               	comf	___awdiv@quotient,f
  7684  0F2A  09D4               	comf	___awdiv@quotient+1,f
  7685  0F2B  0AD3               	incf	___awdiv@quotient,f
  7686  0F2C  1903               	skipnz
  7687  0F2D  0AD4               	incf	___awdiv@quotient+1,f
  7688  0F2E                     l4601:	
  7689  0F2E  0854               	movf	___awdiv@quotient+1,w
  7690  0F2F  01CE               	clrf	?___awdiv+1
  7691  0F30  07CE               	addwf	?___awdiv+1,f
  7692  0F31  0853               	movf	___awdiv@quotient,w
  7693  0F32  01CD               	clrf	?___awdiv
  7694  0F33  07CD               	addwf	?___awdiv,f
  7695  0F34  0008               	return
  7696  0F35                     __end_of___awdiv:	
  7697                           
  7698                           	psect	text45
  7699  0AAB                     __ptext45:	
  7700 ;; *************** function _Lights_Initialization *****************
  7701 ;; Defined at:
  7702 ;;		line 32 in file "../src/TriacRelay_B1.c"
  7703 ;; Parameters:    Size  Location     Type
  7704 ;;		None
  7705 ;; Auto vars:     Size  Location     Type
  7706 ;;		None
  7707 ;; Return value:  Size  Location     Type
  7708 ;;		None               void
  7709 ;; Registers used:
  7710 ;;		wreg, status,2, status,0, pclath, cstack
  7711 ;; Tracked objects:
  7712 ;;		On entry : 0/0
  7713 ;;		On exit  : 0/0
  7714 ;;		Unchanged: 0/0
  7715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7716 ;;      Params:         0       0       0       0
  7717 ;;      Locals:         0       0       0       0
  7718 ;;      Temps:          0       0       0       0
  7719 ;;      Totals:         0       0       0       0
  7720 ;;Total ram usage:        0 bytes
  7721 ;; Hardware stack levels used:    1
  7722 ;; Hardware stack levels required when called:    4
  7723 ;; This function calls:
  7724 ;;		_setLights_Initialization
  7725 ;; This function is called by:
  7726 ;;		_main
  7727 ;; This function uses a non-reentrant model
  7728 ;;
  7729                           
  7730                           
  7731                           ;psect for function _Lights_Initialization
  7732  0AAB                     _Lights_Initialization:	
  7733                           
  7734                           ;TriacRelay_B1.c: 34: setLights_Initialization(1);
  7735                           
  7736                           ;incstack = 0
  7737                           ; Regs used in _Lights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  7738  0AAB  3001               	movlw	1
  7739  0AAC  158A  22CA         	fcall	_setLights_Initialization
  7740  0AAE  0008               	return
  7741  0AAF                     __end_of_Lights_Initialization:	
  7742                           
  7743                           	psect	text46
  7744  0ACA                     __ptext46:	
  7745 ;; *************** function _setLights_Initialization *****************
  7746 ;; Defined at:
  7747 ;;		line 47 in file "../src/TriacRelay_B1.c"
  7748 ;; Parameters:    Size  Location     Type
  7749 ;;  lights          1    wreg     unsigned char 
  7750 ;; Auto vars:     Size  Location     Type
  7751 ;;  lights          1    0[BANK0 ] unsigned char 
  7752 ;; Return value:  Size  Location     Type
  7753 ;;		None               void
  7754 ;; Registers used:
  7755 ;;		wreg, status,2, status,0, pclath, cstack
  7756 ;; Tracked objects:
  7757 ;;		On entry : 0/0
  7758 ;;		On exit  : 0/0
  7759 ;;		Unchanged: 0/0
  7760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7761 ;;      Params:         0       0       0       0
  7762 ;;      Locals:         0       1       0       0
  7763 ;;      Temps:          0       0       0       0
  7764 ;;      Totals:         0       1       0       0
  7765 ;;Total ram usage:        1 bytes
  7766 ;; Hardware stack levels used:    1
  7767 ;; Hardware stack levels required when called:    3
  7768 ;; This function calls:
  7769 ;;		_LightsPointSelect
  7770 ;; This function is called by:
  7771 ;;		_Lights_Initialization
  7772 ;; This function uses a non-reentrant model
  7773 ;;
  7774                           
  7775                           
  7776                           ;psect for function _setLights_Initialization
  7777  0ACA                     _setLights_Initialization:	
  7778                           
  7779                           ;incstack = 0
  7780                           ; Regs used in _setLights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  7781                           ;setLights_Initialization@lights stored from wreg
  7782  0ACA  1283               	bcf	3,5	;RP0=0, select bank0
  7783  0ACB  1303               	bcf	3,6	;RP1=0, select bank0
  7784  0ACC  00CD               	movwf	setLights_Initialization@lights
  7785                           
  7786                           ;TriacRelay_B1.c: 48: LightsPointSelect(lights);
  7787  0ACD  084D               	movf	setLights_Initialization@lights,w
  7788  0ACE  158A  2301         	fcall	_LightsPointSelect
  7789  0AD0  0008               	return
  7790  0AD1                     __end_of_setLights_Initialization:	
  7791                           
  7792                           	psect	text47
  7793  0A95                     __ptext47:	
  7794 ;; *************** function _LED_Main *****************
  7795 ;; Defined at:
  7796 ;;		line 47 in file "../src/LED_B1.c"
  7797 ;; Parameters:    Size  Location     Type
  7798 ;;		None
  7799 ;; Auto vars:     Size  Location     Type
  7800 ;;		None
  7801 ;; Return value:  Size  Location     Type
  7802 ;;		None               void
  7803 ;; Registers used:
  7804 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7805 ;; Tracked objects:
  7806 ;;		On entry : 0/0
  7807 ;;		On exit  : 0/0
  7808 ;;		Unchanged: 0/0
  7809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7810 ;;      Params:         0       0       0       0
  7811 ;;      Locals:         0       0       0       0
  7812 ;;      Temps:          0       0       0       0
  7813 ;;      Totals:         0       0       0       0
  7814 ;;Total ram usage:        0 bytes
  7815 ;; Hardware stack levels used:    1
  7816 ;; Hardware stack levels required when called:    5
  7817 ;; This function calls:
  7818 ;;		_setPIRLED_Main
  7819 ;; This function is called by:
  7820 ;;		_main
  7821 ;; This function uses a non-reentrant model
  7822 ;;
  7823                           
  7824                           
  7825                           ;psect for function _LED_Main
  7826  0A95                     _LED_Main:	
  7827                           
  7828                           ;LED_B1.c: 55: setPIRLED_Main();
  7829                           
  7830                           ;incstack = 0
  7831                           ; Regs used in _LED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7832  0A95  118A  2786         	fcall	_setPIRLED_Main
  7833  0A97  0008               	return
  7834  0A98                     __end_of_LED_Main:	
  7835                           
  7836                           	psect	text48
  7837  0786                     __ptext48:	
  7838 ;; *************** function _setPIRLED_Main *****************
  7839 ;; Defined at:
  7840 ;;		line 265 in file "../src/LED_B1.c"
  7841 ;; Parameters:    Size  Location     Type
  7842 ;;		None
  7843 ;; Auto vars:     Size  Location     Type
  7844 ;;  count           1    3[BANK0 ] unsigned char 
  7845 ;; Return value:  Size  Location     Type
  7846 ;;		None               void
  7847 ;; Registers used:
  7848 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7849 ;; Tracked objects:
  7850 ;;		On entry : 0/0
  7851 ;;		On exit  : 0/0
  7852 ;;		Unchanged: 0/0
  7853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7854 ;;      Params:         0       0       0       0
  7855 ;;      Locals:         0       1       0       0
  7856 ;;      Temps:          0       1       0       0
  7857 ;;      Totals:         0       2       0       0
  7858 ;;Total ram usage:        2 bytes
  7859 ;; Hardware stack levels used:    1
  7860 ;; Hardware stack levels required when called:    4
  7861 ;; This function calls:
  7862 ;;		_setLED
  7863 ;; This function is called by:
  7864 ;;		_LED_Main
  7865 ;; This function uses a non-reentrant model
  7866 ;;
  7867                           
  7868                           
  7869                           ;psect for function _setPIRLED_Main
  7870  0786                     _setPIRLED_Main:	
  7871                           
  7872                           ;LED_B1.c: 267: char count;
  7873                           ;LED_B1.c: 268: if (PIRLED.GO == 1) {
  7874                           
  7875                           ;incstack = 0
  7876                           ; Regs used in _setPIRLED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7877  0786  1283               	bcf	3,5	;RP0=0, select bank0
  7878  0787  1303               	bcf	3,6	;RP1=0, select bank0
  7879  0788  1C2A               	btfss	_PIRLED,0
  7880  0789  0008               	return
  7881                           
  7882                           ;LED_B1.c: 269: PIRLED.Time++;
  7883  078A  3001               	movlw	1
  7884  078B  07AC               	addwf	_PIRLED+2,f
  7885  078C  1803               	skipnc
  7886  078D  0AAD               	incf	_PIRLED+3,f
  7887  078E  3000               	movlw	0
  7888  078F  07AD               	addwf	_PIRLED+3,f
  7889                           
  7890                           ;LED_B1.c: 270: if (PIRLED.Time >= 500 / 20) {
  7891  0790  3000               	movlw	0
  7892  0791  022D               	subwf	_PIRLED+3,w
  7893  0792  3019               	movlw	25
  7894  0793  1903               	skipnz
  7895  0794  022C               	subwf	_PIRLED+2,w
  7896  0795  1C03               	skipc
  7897  0796  0008               	return
  7898                           
  7899                           ;LED_B1.c: 271: PIRLED.Time = 0;
  7900  0797  01AC               	clrf	_PIRLED+2
  7901  0798  01AD               	clrf	_PIRLED+3
  7902                           
  7903                           ;LED_B1.c: 272: setLED(1, 0);
  7904  0799  01CD               	clrf	setLED@command
  7905  079A  3001               	movlw	1
  7906  079B  158A  2735  118A   	fcall	_setLED
  7907                           
  7908                           ;LED_B1.c: 273: setLED(2, 0);
  7909  079E  1283               	bcf	3,5	;RP0=0, select bank0
  7910  079F  1303               	bcf	3,6	;RP1=0, select bank0
  7911  07A0  01CD               	clrf	setLED@command
  7912  07A1  3002               	movlw	2
  7913  07A2  158A  2735  118A   	fcall	_setLED
  7914                           
  7915                           ;LED_B1.c: 274: if (PIRLED.GO1 == 1) {
  7916  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  7917  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  7918  07A7  1CAA               	btfss	_PIRLED,1
  7919  07A8  2FAD               	goto	l4641
  7920                           
  7921                           ;LED_B1.c: 275: count = 4;
  7922  07A9  3004               	movlw	4
  7923  07AA  00CF               	movwf	??_setPIRLED_Main
  7924  07AB  084F               	movf	??_setPIRLED_Main,w
  7925  07AC  00D0               	movwf	setPIRLED_Main@count
  7926  07AD                     l4641:	
  7927                           
  7928                           ;LED_B1.c: 276: }
  7929                           ;LED_B1.c: 277: if (PIRLED.GO2 == 1) {
  7930  07AD  1D2A               	btfss	_PIRLED,2
  7931  07AE  2FB3               	goto	l4645
  7932                           
  7933                           ;LED_B1.c: 278: count = 6;
  7934  07AF  3006               	movlw	6
  7935  07B0  00CF               	movwf	??_setPIRLED_Main
  7936  07B1  084F               	movf	??_setPIRLED_Main,w
  7937  07B2  00D0               	movwf	setPIRLED_Main@count
  7938  07B3                     l4645:	
  7939                           
  7940                           ;LED_B1.c: 279: }
  7941                           ;LED_B1.c: 280: if (PIRLED.GO3 == 1) {
  7942  07B3  1DAA               	btfss	_PIRLED,3
  7943  07B4  2FB9               	goto	l4649
  7944                           
  7945                           ;LED_B1.c: 281: count = 8;
  7946  07B5  3008               	movlw	8
  7947  07B6  00CF               	movwf	??_setPIRLED_Main
  7948  07B7  084F               	movf	??_setPIRLED_Main,w
  7949  07B8  00D0               	movwf	setPIRLED_Main@count
  7950  07B9                     l4649:	
  7951                           
  7952                           ;LED_B1.c: 282: }
  7953                           ;LED_B1.c: 283: PIRLED.Count++;
  7954  07B9  3001               	movlw	1
  7955  07BA  00CF               	movwf	??_setPIRLED_Main
  7956  07BB  084F               	movf	??_setPIRLED_Main,w
  7957  07BC  07AB               	addwf	_PIRLED+1,f
  7958                           
  7959                           ;LED_B1.c: 284: if (PIRLED.Count == 1 || PIRLED.Count == 2) {
  7960  07BD  082B               	movf	_PIRLED+1,w
  7961  07BE  3A01               	xorlw	1
  7962  07BF  1903               	skipnz
  7963  07C0  2FC5               	goto	l4655
  7964  07C1  082B               	movf	_PIRLED+1,w
  7965  07C2  3A02               	xorlw	2
  7966  07C3  1D03               	skipz
  7967  07C4  2FD9               	goto	l4659
  7968  07C5                     l4655:	
  7969                           
  7970                           ;LED_B1.c: 285: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  7971  07C5  1003               	clrc
  7972  07C6  1E2A               	btfss	_PIRLED,4
  7973  07C7  1403               	setc
  7974  07C8  1C03               	btfss	3,0
  7975  07C9  2FCE               	goto	u5440
  7976  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  7977  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  7978  07CC  162A               	bsf	_PIRLED,4
  7979  07CD  2FD1               	goto	l4657
  7980  07CE                     u5440:	
  7981  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  7982  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  7983  07D0  122A               	bcf	_PIRLED,4
  7984  07D1                     l4657:	
  7985                           
  7986                           ;LED_B1.c: 286: setLED(2, PIRLED.status);
  7987  07D1  3000               	movlw	0
  7988  07D2  1A2A               	btfsc	_PIRLED,4
  7989  07D3  3001               	movlw	1
  7990  07D4  00CD               	movwf	setLED@command
  7991  07D5  3002               	movlw	2
  7992  07D6  158A  2735         	fcall	_setLED
  7993                           
  7994                           ;LED_B1.c: 287: } else {
  7995  07D8  0008               	return
  7996  07D9                     l4659:	
  7997                           
  7998                           ;LED_B1.c: 288: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  7999  07D9  1003               	clrc
  8000  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  8001  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  8002  07DC  1E2A               	btfss	_PIRLED,4
  8003  07DD  1403               	setc
  8004  07DE  1C03               	btfss	3,0
  8005  07DF  2FE4               	goto	u5460
  8006  07E0  1283               	bcf	3,5	;RP0=0, select bank0
  8007  07E1  1303               	bcf	3,6	;RP1=0, select bank0
  8008  07E2  162A               	bsf	_PIRLED,4
  8009  07E3  2FE7               	goto	l4661
  8010  07E4                     u5460:	
  8011  07E4  1283               	bcf	3,5	;RP0=0, select bank0
  8012  07E5  1303               	bcf	3,6	;RP1=0, select bank0
  8013  07E6  122A               	bcf	_PIRLED,4
  8014  07E7                     l4661:	
  8015                           
  8016                           ;LED_B1.c: 289: setLED(1, PIRLED.status);
  8017  07E7  3000               	movlw	0
  8018  07E8  1A2A               	btfsc	_PIRLED,4
  8019  07E9  3001               	movlw	1
  8020  07EA  00CD               	movwf	setLED@command
  8021  07EB  3001               	movlw	1
  8022  07EC  158A  2735  118A   	fcall	_setLED
  8023                           
  8024                           ;LED_B1.c: 290: if (PIRLED.Count == count) {
  8025  07EF  1283               	bcf	3,5	;RP0=0, select bank0
  8026  07F0  1303               	bcf	3,6	;RP1=0, select bank0
  8027  07F1  082B               	movf	_PIRLED+1,w
  8028  07F2  0650               	xorwf	setPIRLED_Main@count,w
  8029  07F3  1D03               	skipz
  8030  07F4  0008               	return
  8031                           
  8032                           ;LED_B1.c: 291: PIRLED.Count = 0;
  8033  07F5  01AB               	clrf	_PIRLED+1
  8034  07F6  0008               	return
  8035  07F7                     __end_of_setPIRLED_Main:	
  8036                           
  8037                           	psect	text49
  8038  0AD8                     __ptext49:	
  8039 ;; *************** function _LED_Initialization *****************
  8040 ;; Defined at:
  8041 ;;		line 31 in file "../src/LED_B1.c"
  8042 ;; Parameters:    Size  Location     Type
  8043 ;;		None
  8044 ;; Auto vars:     Size  Location     Type
  8045 ;;		None
  8046 ;; Return value:  Size  Location     Type
  8047 ;;		None               void
  8048 ;; Registers used:
  8049 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8050 ;; Tracked objects:
  8051 ;;		On entry : 0/0
  8052 ;;		On exit  : 0/0
  8053 ;;		Unchanged: 0/0
  8054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8055 ;;      Params:         0       0       0       0
  8056 ;;      Locals:         0       0       0       0
  8057 ;;      Temps:          0       0       0       0
  8058 ;;      Totals:         0       0       0       0
  8059 ;;Total ram usage:        0 bytes
  8060 ;; Hardware stack levels used:    1
  8061 ;; Hardware stack levels required when called:    5
  8062 ;; This function calls:
  8063 ;;		_setLED_Initialization
  8064 ;; This function is called by:
  8065 ;;		_main
  8066 ;; This function uses a non-reentrant model
  8067 ;;
  8068                           
  8069                           
  8070                           ;psect for function _LED_Initialization
  8071  0AD8                     _LED_Initialization:	
  8072                           
  8073                           ;LED_B1.c: 33: setLED_Initialization(1);
  8074                           
  8075                           ;incstack = 0
  8076                           ; Regs used in _LED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8077  0AD8  3001               	movlw	1
  8078  0AD9  158A  239B  158A   	fcall	_setLED_Initialization
  8079                           
  8080                           ;LED_B1.c: 36: setLED_Initialization(2);
  8081  0ADC  3002               	movlw	2
  8082  0ADD  158A  239B         	fcall	_setLED_Initialization
  8083  0ADF  0008               	return
  8084  0AE0                     __end_of_LED_Initialization:	
  8085                           
  8086                           	psect	text50
  8087  0B9B                     __ptext50:	
  8088 ;; *************** function _setLED_Initialization *****************
  8089 ;; Defined at:
  8090 ;;		line 74 in file "../src/LED_B1.c"
  8091 ;; Parameters:    Size  Location     Type
  8092 ;;  led             1    wreg     unsigned char 
  8093 ;; Auto vars:     Size  Location     Type
  8094 ;;  led             1    2[BANK0 ] unsigned char 
  8095 ;; Return value:  Size  Location     Type
  8096 ;;		None               void
  8097 ;; Registers used:
  8098 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8099 ;; Tracked objects:
  8100 ;;		On entry : 0/0
  8101 ;;		On exit  : 0/0
  8102 ;;		Unchanged: 0/0
  8103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8104 ;;      Params:         0       0       0       0
  8105 ;;      Locals:         0       1       0       0
  8106 ;;      Temps:          0       0       0       0
  8107 ;;      Totals:         0       1       0       0
  8108 ;;Total ram usage:        1 bytes
  8109 ;; Hardware stack levels used:    1
  8110 ;; Hardware stack levels required when called:    4
  8111 ;; This function calls:
  8112 ;;		_LedPointSelect
  8113 ;;		_setLED
  8114 ;; This function is called by:
  8115 ;;		_LED_Initialization
  8116 ;; This function uses a non-reentrant model
  8117 ;;
  8118                           
  8119                           
  8120                           ;psect for function _setLED_Initialization
  8121  0B9B                     _setLED_Initialization:	
  8122                           
  8123                           ;incstack = 0
  8124                           ; Regs used in _setLED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8125                           ;setLED_Initialization@led stored from wreg
  8126  0B9B  1283               	bcf	3,5	;RP0=0, select bank0
  8127  0B9C  1303               	bcf	3,6	;RP1=0, select bank0
  8128  0B9D  00CF               	movwf	setLED_Initialization@led
  8129                           
  8130                           ;LED_B1.c: 75: LedPointSelect(led);
  8131  0B9E  084F               	movf	setLED_Initialization@led,w
  8132  0B9F  158A  2389  158A   	fcall	_LedPointSelect
  8133                           
  8134                           ;LED_B1.c: 76: LED->Enable = 1;
  8135  0BA2  0876               	movf	_LED,w
  8136  0BA3  0084               	movwf	4
  8137  0BA4  1383               	bcf	3,7	;select IRP bank0
  8138  0BA5  1400               	bsf	0,0
  8139                           
  8140                           ;LED_B1.c: 77: setLED(led, 0);
  8141  0BA6  1283               	bcf	3,5	;RP0=0, select bank0
  8142  0BA7  1303               	bcf	3,6	;RP1=0, select bank0
  8143  0BA8  01CD               	clrf	setLED@command
  8144  0BA9  084F               	movf	setLED_Initialization@led,w
  8145  0BAA  158A  2735         	fcall	_setLED
  8146  0BAC  0008               	return
  8147  0BAD                     __end_of_setLED_Initialization:	
  8148                           
  8149                           	psect	text51
  8150  0547                     __ptext51:	
  8151 ;; *************** function _Exception_Main *****************
  8152 ;; Defined at:
  8153 ;;		line 499 in file "../src/Main_B1.c"
  8154 ;; Parameters:    Size  Location     Type
  8155 ;;		None
  8156 ;; Auto vars:     Size  Location     Type
  8157 ;;  i               2   12[BANK0 ] int 
  8158 ;;  i               2   10[BANK0 ] int 
  8159 ;;  error           1   14[BANK0 ] unsigned char 
  8160 ;;  status          1    9[BANK0 ] unsigned char 
  8161 ;;  count           1    8[BANK0 ] unsigned char 
  8162 ;;  lights          1    7[BANK0 ] unsigned char 
  8163 ;; Return value:  Size  Location     Type
  8164 ;;		None               void
  8165 ;; Registers used:
  8166 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8167 ;; Tracked objects:
  8168 ;;		On entry : 0/0
  8169 ;;		On exit  : 0/0
  8170 ;;		Unchanged: 0/0
  8171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8172 ;;      Params:         0       0       0       0
  8173 ;;      Locals:         0       8       0       0
  8174 ;;      Temps:          0       1       0       0
  8175 ;;      Totals:         0       9       0       0
  8176 ;;Total ram usage:        9 bytes
  8177 ;; Hardware stack levels used:    1
  8178 ;; Hardware stack levels required when called:    5
  8179 ;; This function calls:
  8180 ;;		_getAll_Lights_Line
  8181 ;;		_getLights_Status
  8182 ;;		_getMain_All_Error_Status
  8183 ;;		_getMain_All_LightsStatus
  8184 ;;		_setLED
  8185 ;;		_setLights_SwOff
  8186 ;;		_setLights_SwOn
  8187 ;; This function is called by:
  8188 ;;		_main
  8189 ;; This function uses a non-reentrant model
  8190 ;;
  8191                           
  8192                           
  8193                           ;psect for function _Exception_Main
  8194  0547                     _Exception_Main:	
  8195                           
  8196                           ;Main_B1.c: 500: char error = getMain_All_Error_Status(0);
  8197                           
  8198                           ;incstack = 0
  8199                           ; Regs used in _Exception_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8200  0547  3000               	movlw	0
  8201  0548  158A  25BA  118A   	fcall	_getMain_All_Error_Status
  8202  054B  1283               	bcf	3,5	;RP0=0, select bank0
  8203  054C  1303               	bcf	3,6	;RP1=0, select bank0
  8204  054D  00D3               	movwf	??_Exception_Main
  8205  054E  0853               	movf	??_Exception_Main,w
  8206  054F  00DB               	movwf	Exception_Main@error
  8207                           
  8208                           ;Main_B1.c: 501: char lights = 0, count = 1;
  8209  0550  01D4               	clrf	Exception_Main@lights
  8210  0551  01D5               	clrf	Exception_Main@count
  8211  0552  0AD5               	incf	Exception_Main@count,f
  8212                           
  8213                           ;Main_B1.c: 502: char status = 0;
  8214  0553  01D6               	clrf	Exception_Main@status
  8215                           
  8216                           ;Main_B1.c: 504: if (myMain.Error_Run == 1) {
  8217  0554  1DA7               	btfss	_myMain+2,3
  8218  0555  2D62               	goto	l5275
  8219                           
  8220                           ;Main_B1.c: 505: if (error == 0) {
  8221  0556  08DB               	movf	Exception_Main@error,f
  8222  0557  1D03               	skipz
  8223  0558  0008               	return
  8224                           
  8225                           ;Main_B1.c: 506: myMain.Error_Run = 0;
  8226  0559  11A7               	bcf	_myMain+2,3
  8227                           
  8228                           ;Main_B1.c: 511: setLED(error, 110);
  8229  055A  306E               	movlw	110
  8230  055B  00D3               	movwf	??_Exception_Main
  8231  055C  0853               	movf	??_Exception_Main,w
  8232  055D  00CD               	movwf	setLED@command
  8233  055E  085B               	movf	Exception_Main@error,w
  8234  055F  158A  2735         	fcall	_setLED
  8235                           
  8236                           ;Main_B1.c: 522: }
  8237                           ;Main_B1.c: 523: } else {
  8238  0561  0008               	return
  8239  0562                     l5275:	
  8240                           
  8241                           ;Main_B1.c: 524: if (error != 0) {
  8242  0562  1283               	bcf	3,5	;RP0=0, select bank0
  8243  0563  1303               	bcf	3,6	;RP1=0, select bank0
  8244  0564  085B               	movf	Exception_Main@error,w
  8245  0565  1903               	btfsc	3,2
  8246  0566  0008               	return
  8247                           
  8248                           ;Main_B1.c: 525: myMain.Error_Run = 1;
  8249  0567  15A7               	bsf	_myMain+2,3
  8250                           
  8251                           ;Main_B1.c: 529: setLED(error, 111);
  8252  0568  306F               	movlw	111
  8253  0569  00D3               	movwf	??_Exception_Main
  8254  056A  0853               	movf	??_Exception_Main,w
  8255  056B  00CD               	movwf	setLED@command
  8256  056C  085B               	movf	Exception_Main@error,w
  8257  056D  158A  2735  118A   	fcall	_setLED
  8258                           
  8259                           ;Main_B1.c: 591: switch (error) {
  8260  0570  2DFA               	goto	l5311
  8261  0571                     l5281:	
  8262                           ;Main_B1.c: 592: case 1:
  8263                           
  8264                           
  8265                           ;Main_B1.c: 593: for (int i = 0; i < count; i++) {
  8266  0571  1283               	bcf	3,5	;RP0=0, select bank0
  8267  0572  1303               	bcf	3,6	;RP1=0, select bank0
  8268  0573  01D7               	clrf	Exception_Main@i
  8269  0574  01D8               	clrf	Exception_Main@i+1
  8270  0575                     l5289:	
  8271  0575  0858               	movf	Exception_Main@i+1,w
  8272  0576  3A80               	xorlw	128
  8273  0577  00D3               	movwf	??_Exception_Main
  8274  0578  3080               	movlw	128
  8275  0579  0253               	subwf	??_Exception_Main,w
  8276  057A  1D03               	skipz
  8277  057B  2D7E               	goto	u6865
  8278  057C  0855               	movf	Exception_Main@count,w
  8279  057D  0257               	subwf	Exception_Main@i,w
  8280  057E                     u6865:	
  8281  057E  1803               	btfsc	3,0
  8282  057F  2DA1               	goto	u6860
  8283                           
  8284                           ;Main_B1.c: 594: if (getLights_Status(i + 1) == 1) {
  8285  0580  1283               	bcf	3,5	;RP0=0, select bank0
  8286  0581  1303               	bcf	3,6	;RP1=0, select bank0
  8287  0582  0857               	movf	Exception_Main@i,w
  8288  0583  3E01               	addlw	1
  8289  0584  158A  2367  118A   	fcall	_getLights_Status
  8290  0587  3A01               	xorlw	1
  8291  0588  1D03               	skipz
  8292  0589  2D98               	goto	l5287
  8293                           
  8294                           ;Main_B1.c: 596: setLights_SwOn(i + 1);
  8295  058A  1283               	bcf	3,5	;RP0=0, select bank0
  8296  058B  1303               	bcf	3,6	;RP1=0, select bank0
  8297  058C  0857               	movf	Exception_Main@i,w
  8298  058D  3E01               	addlw	1
  8299  058E  158A  24E1  118A   	fcall	_setLights_SwOn
  8300                           
  8301                           ;Main_B1.c: 597: setLights_SwOff(i + 1);
  8302  0591  1283               	bcf	3,5	;RP0=0, select bank0
  8303  0592  1303               	bcf	3,6	;RP1=0, select bank0
  8304  0593  0857               	movf	Exception_Main@i,w
  8305  0594  3E01               	addlw	1
  8306  0595  158A  241C  118A   	fcall	_setLights_SwOff
  8307  0598                     l5287:	
  8308  0598  3001               	movlw	1
  8309  0599  1283               	bcf	3,5	;RP0=0, select bank0
  8310  059A  1303               	bcf	3,6	;RP1=0, select bank0
  8311  059B  07D7               	addwf	Exception_Main@i,f
  8312  059C  1803               	skipnc
  8313  059D  0AD8               	incf	Exception_Main@i+1,f
  8314  059E  3000               	movlw	0
  8315  059F  07D8               	addwf	Exception_Main@i+1,f
  8316  05A0  2D75               	goto	l5289
  8317  05A1                     u6860:	
  8318  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  8319  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  8320  05A3  0008               	return
  8321  05A4                     l5291:	
  8322                           ;Main_B1.c: 601: case 2:
  8323                           
  8324                           ;Main_B1.c: 598: }
  8325                           ;Main_B1.c: 599: }
  8326                           ;Main_B1.c: 600: break;
  8327                           
  8328                           
  8329                           ;Main_B1.c: 602: if (getMain_All_LightsStatus() == 1) {
  8330  05A4  118A  27F7  118A   	fcall	_getMain_All_LightsStatus
  8331                           
  8332                           ;Main_B1.c: 604: }
  8333                           ;Main_B1.c: 606: for (int i = 0; i < count; i++) {
  8334                           
  8335                           ;Main_B1.c: 603: ;;
  8336  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  8337  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  8338  05A9  01D9               	clrf	Exception_Main@i_2140
  8339  05AA  01DA               	clrf	Exception_Main@i_2140+1
  8340  05AB                     l5301:	
  8341  05AB  085A               	movf	Exception_Main@i_2140+1,w
  8342  05AC  3A80               	xorlw	128
  8343  05AD  00D3               	movwf	??_Exception_Main
  8344  05AE  3080               	movlw	128
  8345  05AF  0253               	subwf	??_Exception_Main,w
  8346  05B0  1D03               	skipz
  8347  05B1  2DB4               	goto	u6885
  8348  05B2  0855               	movf	Exception_Main@count,w
  8349  05B3  0259               	subwf	Exception_Main@i_2140,w
  8350  05B4                     u6885:	
  8351  05B4  1803               	btfsc	3,0
  8352  05B5  2DD7               	goto	u6880
  8353                           
  8354                           ;Main_B1.c: 607: if (getLights_Status(i + 1) == 1) {
  8355  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  8356  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  8357  05B8  0859               	movf	Exception_Main@i_2140,w
  8358  05B9  3E01               	addlw	1
  8359  05BA  158A  2367  118A   	fcall	_getLights_Status
  8360  05BD  3A01               	xorlw	1
  8361  05BE  1D03               	skipz
  8362  05BF  2DCE               	goto	l5299
  8363                           
  8364                           ;Main_B1.c: 608: setLights_SwOn(i + 1);
  8365  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  8366  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  8367  05C2  0859               	movf	Exception_Main@i_2140,w
  8368  05C3  3E01               	addlw	1
  8369  05C4  158A  24E1  118A   	fcall	_setLights_SwOn
  8370                           
  8371                           ;Main_B1.c: 609: setLights_SwOff(i + 1);
  8372  05C7  1283               	bcf	3,5	;RP0=0, select bank0
  8373  05C8  1303               	bcf	3,6	;RP1=0, select bank0
  8374  05C9  0859               	movf	Exception_Main@i_2140,w
  8375  05CA  3E01               	addlw	1
  8376  05CB  158A  241C  118A   	fcall	_setLights_SwOff
  8377  05CE                     l5299:	
  8378  05CE  3001               	movlw	1
  8379  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  8380  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  8381  05D1  07D9               	addwf	Exception_Main@i_2140,f
  8382  05D2  1803               	skipnc
  8383  05D3  0ADA               	incf	Exception_Main@i_2140+1,f
  8384  05D4  3000               	movlw	0
  8385  05D5  07DA               	addwf	Exception_Main@i_2140+1,f
  8386  05D6  2DAB               	goto	l5301
  8387  05D7                     u6880:	
  8388  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  8389  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  8390  05D9  0008               	return
  8391  05DA                     l5303:	
  8392                           ;Main_B1.c: 613: case 3:
  8393                           
  8394                           ;Main_B1.c: 610: }
  8395                           ;Main_B1.c: 611: }
  8396                           ;Main_B1.c: 612: break;
  8397                           
  8398                           
  8399                           ;Main_B1.c: 614: status = getAll_Lights_Line();
  8400  05DA  158A  22F8  118A   	fcall	_getAll_Lights_Line
  8401  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  8402  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  8403  05DF  00D3               	movwf	??_Exception_Main
  8404  05E0  0853               	movf	??_Exception_Main,w
  8405  05E1  00D6               	movwf	Exception_Main@status
  8406                           
  8407                           ;Main_B1.c: 616: if (getLights_Status(status) == 1) {
  8408  05E2  0856               	movf	Exception_Main@status,w
  8409  05E3  158A  2367  118A   	fcall	_getLights_Status
  8410  05E6  3A01               	xorlw	1
  8411  05E7  1903               	btfsc	3,2
  8412  05E8  2DEC               	goto	l5307
  8413  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  8414  05EA  1303               	bcf	3,6	;RP1=0, select bank0
  8415  05EB  0008               	return
  8416  05EC                     l5307:	
  8417                           
  8418                           ;Main_B1.c: 617: setLights_SwOn(status);
  8419  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  8420  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  8421  05EE  0856               	movf	Exception_Main@status,w
  8422  05EF  158A  24E1  118A   	fcall	_setLights_SwOn
  8423                           
  8424                           ;Main_B1.c: 618: setLights_SwOff(status);
  8425  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  8426  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  8427  05F4  0856               	movf	Exception_Main@status,w
  8428  05F5  158A  241C         	fcall	_setLights_SwOff
  8429  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  8430  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  8431  05F9  0008               	return
  8432  05FA                     l5311:	
  8433                           ;Main_B1.c: 623: }
  8434                           
  8435                           ;Main_B1.c: 620: }
  8436                           ;Main_B1.c: 621: ;;
  8437                           ;Main_B1.c: 622: break;
  8438                           
  8439  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  8440  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  8441  05FC  085B               	movf	Exception_Main@error,w
  8442                           
  8443                           ; Switch size 1, requested type "space"
  8444                           ; Number of cases is 3, Range of values is 1 to 3
  8445                           ; switch strategies available:
  8446                           ; Name         Instructions Cycles
  8447                           ; simple_byte           10     6 (average)
  8448                           ; direct_byte           16    10 (fixed)
  8449                           ; jumptable            263     9 (fixed)
  8450                           ;	Chosen strategy is simple_byte
  8451  05FD  3A01               	xorlw	1	; case 1
  8452  05FE  1903               	skipnz
  8453  05FF  2D71               	goto	l5281
  8454  0600  3A03               	xorlw	3	; case 2
  8455  0601  1903               	skipnz
  8456  0602  2DA4               	goto	l5291
  8457  0603  3A01               	xorlw	1	; case 3
  8458  0604  1903               	skipnz
  8459  0605  2DDA               	goto	l5303
  8460  0606  2E08               	goto	l621
  8461  0607  0008               	return
  8462  0608                     l621:	
  8463  0608  0008               	return
  8464  0609                     __end_of_Exception_Main:	
  8465                           
  8466                           	psect	text52
  8467  0CE1                     __ptext52:	
  8468 ;; *************** function _setLights_SwOn *****************
  8469 ;; Defined at:
  8470 ;;		line 410 in file "../src/TriacRelay_B1.c"
  8471 ;; Parameters:    Size  Location     Type
  8472 ;;  sw              1    wreg     unsigned char 
  8473 ;; Auto vars:     Size  Location     Type
  8474 ;;  sw              1    3[BANK0 ] unsigned char 
  8475 ;; Return value:  Size  Location     Type
  8476 ;;		None               void
  8477 ;; Registers used:
  8478 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8479 ;; Tracked objects:
  8480 ;;		On entry : 0/0
  8481 ;;		On exit  : 0/0
  8482 ;;		Unchanged: 0/0
  8483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8484 ;;      Params:         0       0       0       0
  8485 ;;      Locals:         0       1       0       0
  8486 ;;      Temps:          0       0       0       0
  8487 ;;      Totals:         0       1       0       0
  8488 ;;Total ram usage:        1 bytes
  8489 ;; Hardware stack levels used:    1
  8490 ;; Hardware stack levels required when called:    4
  8491 ;; This function calls:
  8492 ;;		_LightsPointSelect
  8493 ;;		_getLights_Status
  8494 ;;		_setLights_Trigger
  8495 ;; This function is called by:
  8496 ;;		_Exception_Main
  8497 ;;		_PIR_Main
  8498 ;; This function uses a non-reentrant model
  8499 ;;
  8500                           
  8501                           
  8502                           ;psect for function _setLights_SwOn
  8503  0CE1                     _setLights_SwOn:	
  8504                           
  8505                           ;incstack = 0
  8506                           ; Regs used in _setLights_SwOn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8507                           ;setLights_SwOn@sw stored from wreg
  8508  0CE1  1283               	bcf	3,5	;RP0=0, select bank0
  8509  0CE2  1303               	bcf	3,6	;RP1=0, select bank0
  8510  0CE3  00D0               	movwf	setLights_SwOn@sw
  8511                           
  8512                           ;TriacRelay_B1.c: 411: LightsPointSelect(sw);
  8513  0CE4  0850               	movf	setLights_SwOn@sw,w
  8514  0CE5  158A  2301  158A   	fcall	_LightsPointSelect
  8515                           
  8516                           ;TriacRelay_B1.c: 414: Lights->SwFlag = 1;
  8517  0CE8  0A78               	incf	_Lights,w
  8518  0CE9  0084               	movwf	4
  8519  0CEA  1383               	bcf	3,7	;select IRP bank0
  8520  0CEB  1500               	bsf	0,2
  8521                           
  8522                           ;TriacRelay_B1.c: 415: if (getLights_Status(sw) == 0) {
  8523  0CEC  1283               	bcf	3,5	;RP0=0, select bank0
  8524  0CED  1303               	bcf	3,6	;RP1=0, select bank0
  8525  0CEE  0850               	movf	setLights_SwOn@sw,w
  8526  0CEF  158A  2367  158A   	fcall	_getLights_Status
  8527  0CF2  3800               	iorlw	0
  8528  0CF3  1D03               	skipz
  8529  0CF4  2D01               	goto	l4677
  8530                           
  8531                           ;TriacRelay_B1.c: 416: Lights->SwStatus = 1;
  8532  0CF5  0A78               	incf	_Lights,w
  8533  0CF6  0084               	movwf	4
  8534  0CF7  1383               	bcf	3,7	;select IRP bank0
  8535  0CF8  1580               	bsf	0,3
  8536                           
  8537                           ;TriacRelay_B1.c: 417: setLights_Trigger(sw, 1);
  8538  0CF9  1283               	bcf	3,5	;RP0=0, select bank0
  8539  0CFA  1303               	bcf	3,6	;RP1=0, select bank0
  8540  0CFB  01CD               	clrf	setLights_Trigger@command
  8541  0CFC  0ACD               	incf	setLights_Trigger@command,f
  8542  0CFD  0850               	movf	setLights_SwOn@sw,w
  8543  0CFE  158A  246A         	fcall	_setLights_Trigger
  8544                           
  8545                           ;TriacRelay_B1.c: 418: } else {
  8546  0D00  0008               	return
  8547  0D01                     l4677:	
  8548                           
  8549                           ;TriacRelay_B1.c: 419: Lights->SwStatus = 0;
  8550  0D01  0A78               	incf	_Lights,w
  8551  0D02  0084               	movwf	4
  8552  0D03  1383               	bcf	3,7	;select IRP bank0
  8553  0D04  1180               	bcf	0,3
  8554  0D05  0008               	return
  8555  0D06                     __end_of_setLights_SwOn:	
  8556                           
  8557                           	psect	text53
  8558  0B67                     __ptext53:	
  8559 ;; *************** function _getLights_Status *****************
  8560 ;; Defined at:
  8561 ;;		line 271 in file "../src/TriacRelay_B1.c"
  8562 ;; Parameters:    Size  Location     Type
  8563 ;;  lights          1    wreg     unsigned char 
  8564 ;; Auto vars:     Size  Location     Type
  8565 ;;  lights          1    0[BANK0 ] unsigned char 
  8566 ;;  status          1    1[BANK0 ] unsigned char 
  8567 ;; Return value:  Size  Location     Type
  8568 ;;                  1    wreg      unsigned char 
  8569 ;; Registers used:
  8570 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8571 ;; Tracked objects:
  8572 ;;		On entry : 0/0
  8573 ;;		On exit  : 0/0
  8574 ;;		Unchanged: 0/0
  8575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8576 ;;      Params:         0       0       0       0
  8577 ;;      Locals:         0       2       0       0
  8578 ;;      Temps:          0       0       0       0
  8579 ;;      Totals:         0       2       0       0
  8580 ;;Total ram usage:        2 bytes
  8581 ;; Hardware stack levels used:    1
  8582 ;; Hardware stack levels required when called:    3
  8583 ;; This function calls:
  8584 ;;		_LightsPointSelect
  8585 ;; This function is called by:
  8586 ;;		_Exception_Main
  8587 ;;		_PIR_Main
  8588 ;;		_setLights_SwOn
  8589 ;;		_setLights_ErrorClose
  8590 ;; This function uses a non-reentrant model
  8591 ;;
  8592                           
  8593                           
  8594                           ;psect for function _getLights_Status
  8595  0B67                     _getLights_Status:	
  8596                           
  8597                           ;incstack = 0
  8598                           ; Regs used in _getLights_Status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8599                           ;getLights_Status@lights stored from wreg
  8600  0B67  1283               	bcf	3,5	;RP0=0, select bank0
  8601  0B68  1303               	bcf	3,6	;RP1=0, select bank0
  8602  0B69  00CD               	movwf	getLights_Status@lights
  8603                           
  8604                           ;TriacRelay_B1.c: 272: LightsPointSelect(lights);
  8605  0B6A  084D               	movf	getLights_Status@lights,w
  8606  0B6B  158A  2301         	fcall	_LightsPointSelect
  8607                           
  8608                           ;TriacRelay_B1.c: 273: char status = Lights->Status == 1 ? 1 : 0;
  8609  0B6D  0878               	movf	_Lights,w
  8610  0B6E  0084               	movwf	4
  8611  0B6F  3000               	movlw	0
  8612  0B70  1383               	bcf	3,7	;select IRP bank0
  8613  0B71  1900               	btfsc	0,2
  8614  0B72  3001               	movlw	1
  8615  0B73  1283               	bcf	3,5	;RP0=0, select bank0
  8616  0B74  1303               	bcf	3,6	;RP1=0, select bank0
  8617  0B75  00CE               	movwf	getLights_Status@status
  8618                           
  8619                           ;TriacRelay_B1.c: 274: return status;
  8620  0B76  084E               	movf	getLights_Status@status,w
  8621  0B77  0008               	return
  8622  0B78                     __end_of_getLights_Status:	
  8623                           
  8624                           	psect	text54
  8625  0C1C                     __ptext54:	
  8626 ;; *************** function _setLights_SwOff *****************
  8627 ;; Defined at:
  8628 ;;		line 438 in file "../src/TriacRelay_B1.c"
  8629 ;; Parameters:    Size  Location     Type
  8630 ;;  sw              1    wreg     unsigned char 
  8631 ;; Auto vars:     Size  Location     Type
  8632 ;;  sw              1    3[BANK0 ] unsigned char 
  8633 ;; Return value:  Size  Location     Type
  8634 ;;		None               void
  8635 ;; Registers used:
  8636 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8637 ;; Tracked objects:
  8638 ;;		On entry : 0/0
  8639 ;;		On exit  : 0/0
  8640 ;;		Unchanged: 0/0
  8641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8642 ;;      Params:         0       0       0       0
  8643 ;;      Locals:         0       1       0       0
  8644 ;;      Temps:          0       0       0       0
  8645 ;;      Totals:         0       1       0       0
  8646 ;;Total ram usage:        1 bytes
  8647 ;; Hardware stack levels used:    1
  8648 ;; Hardware stack levels required when called:    4
  8649 ;; This function calls:
  8650 ;;		_LightsPointSelect
  8651 ;;		_setLights_Trigger
  8652 ;; This function is called by:
  8653 ;;		_Exception_Main
  8654 ;;		_PIR_Main
  8655 ;; This function uses a non-reentrant model
  8656 ;;
  8657                           
  8658                           
  8659                           ;psect for function _setLights_SwOff
  8660  0C1C                     _setLights_SwOff:	
  8661                           
  8662                           ;incstack = 0
  8663                           ; Regs used in _setLights_SwOff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8664                           ;setLights_SwOff@sw stored from wreg
  8665  0C1C  1283               	bcf	3,5	;RP0=0, select bank0
  8666  0C1D  1303               	bcf	3,6	;RP1=0, select bank0
  8667  0C1E  00D0               	movwf	setLights_SwOff@sw
  8668                           
  8669                           ;TriacRelay_B1.c: 440: LightsPointSelect(sw);
  8670  0C1F  0850               	movf	setLights_SwOff@sw,w
  8671  0C20  158A  2301  158A   	fcall	_LightsPointSelect
  8672                           
  8673                           ;TriacRelay_B1.c: 442: if (Lights->SwFlag == 1) {
  8674  0C23  0A78               	incf	_Lights,w
  8675  0C24  0084               	movwf	4
  8676  0C25  1383               	bcf	3,7	;select IRP bank0
  8677  0C26  1D00               	btfss	0,2
  8678  0C27  0008               	return
  8679                           
  8680                           ;TriacRelay_B1.c: 443: Lights->SwFlag = 0;
  8681  0C28  0A78               	incf	_Lights,w
  8682  0C29  0084               	movwf	4
  8683  0C2A  1100               	bcf	0,2
  8684                           
  8685                           ;TriacRelay_B1.c: 444: if (Lights->SwStatus == 0) {
  8686  0C2B  0A78               	incf	_Lights,w
  8687  0C2C  0084               	movwf	4
  8688  0C2D  1980               	btfsc	0,3
  8689  0C2E  0008               	return
  8690                           
  8691                           ;TriacRelay_B1.c: 445: setLights_Trigger(sw, 0);
  8692  0C2F  1283               	bcf	3,5	;RP0=0, select bank0
  8693  0C30  1303               	bcf	3,6	;RP1=0, select bank0
  8694  0C31  01CD               	clrf	setLights_Trigger@command
  8695  0C32  0850               	movf	setLights_SwOff@sw,w
  8696  0C33  158A  246A         	fcall	_setLights_Trigger
  8697  0C35  0008               	return
  8698  0C36                     __end_of_setLights_SwOff:	
  8699                           
  8700                           	psect	text55
  8701  0C6A                     __ptext55:	
  8702 ;; *************** function _setLights_Trigger *****************
  8703 ;; Defined at:
  8704 ;;		line 278 in file "../src/TriacRelay_B1.c"
  8705 ;; Parameters:    Size  Location     Type
  8706 ;;  lights          1    wreg     unsigned char 
  8707 ;;  command         1    0[BANK0 ] unsigned char 
  8708 ;; Auto vars:     Size  Location     Type
  8709 ;;  lights          1    2[BANK0 ] unsigned char 
  8710 ;; Return value:  Size  Location     Type
  8711 ;;		None               void
  8712 ;; Registers used:
  8713 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8714 ;; Tracked objects:
  8715 ;;		On entry : 0/0
  8716 ;;		On exit  : 0/0
  8717 ;;		Unchanged: 0/0
  8718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8719 ;;      Params:         0       1       0       0
  8720 ;;      Locals:         0       1       0       0
  8721 ;;      Temps:          0       1       0       0
  8722 ;;      Totals:         0       3       0       0
  8723 ;;Total ram usage:        3 bytes
  8724 ;; Hardware stack levels used:    1
  8725 ;; Hardware stack levels required when called:    3
  8726 ;; This function calls:
  8727 ;;		_LightsPointSelect
  8728 ;; This function is called by:
  8729 ;;		_setLights_SwOn
  8730 ;;		_setLights_SwOff
  8731 ;;		_setLights_ErrorClose
  8732 ;; This function uses a non-reentrant model
  8733 ;;
  8734                           
  8735                           
  8736                           ;psect for function _setLights_Trigger
  8737  0C6A                     _setLights_Trigger:	
  8738                           
  8739                           ;incstack = 0
  8740                           ; Regs used in _setLights_Trigger: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8741                           ;setLights_Trigger@lights stored from wreg
  8742  0C6A  1283               	bcf	3,5	;RP0=0, select bank0
  8743  0C6B  1303               	bcf	3,6	;RP1=0, select bank0
  8744  0C6C  00CF               	movwf	setLights_Trigger@lights
  8745                           
  8746                           ;TriacRelay_B1.c: 279: LightsPointSelect(lights);
  8747  0C6D  084F               	movf	setLights_Trigger@lights,w
  8748  0C6E  158A  2301         	fcall	_LightsPointSelect
  8749                           
  8750                           ;TriacRelay_B1.c: 280: Lights->Trigger = 1;
  8751  0C70  0878               	movf	_Lights,w
  8752  0C71  0084               	movwf	4
  8753  0C72  1383               	bcf	3,7	;select IRP bank0
  8754  0C73  1580               	bsf	0,3
  8755                           
  8756                           ;TriacRelay_B1.c: 281: Lights->Switch = command == 1 ? 1 : 0;
  8757  0C74  1283               	bcf	3,5	;RP0=0, select bank0
  8758  0C75  1303               	bcf	3,6	;RP1=0, select bank0
  8759  0C76  084D               	movf	setLights_Trigger@command,w
  8760  0C77  3A01               	xorlw	1
  8761  0C78  3000               	movlw	0
  8762  0C79  1903               	skipnz
  8763  0C7A  3001               	movlw	1
  8764  0C7B  00CE               	movwf	??_setLights_Trigger
  8765  0C7C  0878               	movf	_Lights,w
  8766  0C7D  0084               	movwf	4
  8767  0C7E  0ECE               	swapf	??_setLights_Trigger,f
  8768  0C7F  0800               	movf	0,w
  8769  0C80  064E               	xorwf	??_setLights_Trigger,w
  8770  0C81  39EF               	andlw	-17
  8771  0C82  064E               	xorwf	??_setLights_Trigger,w
  8772  0C83  0080               	movwf	0
  8773  0C84  0008               	return
  8774  0C85                     __end_of_setLights_Trigger:	
  8775                           
  8776                           	psect	text56
  8777  0B01                     __ptext56:	
  8778 ;; *************** function _LightsPointSelect *****************
  8779 ;; Defined at:
  8780 ;;		line 10 in file "../src/TriacRelay_B1.c"
  8781 ;; Parameters:    Size  Location     Type
  8782 ;;  lights          1    wreg     unsigned char 
  8783 ;; Auto vars:     Size  Location     Type
  8784 ;;  lights          1    5[COMMON] unsigned char 
  8785 ;; Return value:  Size  Location     Type
  8786 ;;		None               void
  8787 ;; Registers used:
  8788 ;;		wreg
  8789 ;; Tracked objects:
  8790 ;;		On entry : 0/0
  8791 ;;		On exit  : 0/0
  8792 ;;		Unchanged: 0/0
  8793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8794 ;;      Params:         0       0       0       0
  8795 ;;      Locals:         1       0       0       0
  8796 ;;      Temps:          1       0       0       0
  8797 ;;      Totals:         2       0       0       0
  8798 ;;Total ram usage:        2 bytes
  8799 ;; Hardware stack levels used:    1
  8800 ;; Hardware stack levels required when called:    2
  8801 ;; This function calls:
  8802 ;;		Nothing
  8803 ;; This function is called by:
  8804 ;;		_setLights_Initialization
  8805 ;;		_setLights_Main
  8806 ;;		_Lights_Control
  8807 ;;		_getLights_Status
  8808 ;;		_setLights_Trigger
  8809 ;;		_setLights_SwOn
  8810 ;;		_setLights_SwOff
  8811 ;; This function uses a non-reentrant model
  8812 ;;
  8813                           
  8814                           
  8815                           ;psect for function _LightsPointSelect
  8816  0B01                     _LightsPointSelect:	
  8817                           
  8818                           ;incstack = 0
  8819                           ; Regs used in _LightsPointSelect: [wreg]
  8820                           ;LightsPointSelect@lights stored from wreg
  8821  0B01  00F5               	movwf	LightsPointSelect@lights
  8822                           
  8823                           ;TriacRelay_B1.c: 13: if (lights == 1) {
  8824  0B02  0875               	movf	LightsPointSelect@lights,w
  8825  0B03  3A01               	xorlw	1
  8826  0B04  1D03               	skipz
  8827  0B05  0008               	return
  8828                           
  8829                           ;TriacRelay_B1.c: 14: Lights = &Lights1;
  8830  0B06  3040               	movlw	_Lights1& (0+255)
  8831  0B07  00F4               	movwf	??_LightsPointSelect
  8832  0B08  0874               	movf	??_LightsPointSelect,w
  8833  0B09  00F8               	movwf	_Lights
  8834  0B0A  0008               	return
  8835  0B0B                     __end_of_LightsPointSelect:	
  8836                           
  8837                           	psect	text57
  8838  0F35                     __ptext57:	
  8839 ;; *************** function _setLED *****************
  8840 ;; Defined at:
  8841 ;;		line 81 in file "../src/LED_B1.c"
  8842 ;; Parameters:    Size  Location     Type
  8843 ;;  led             1    wreg     unsigned char 
  8844 ;;  command         1    0[BANK0 ] unsigned char 
  8845 ;; Auto vars:     Size  Location     Type
  8846 ;;  led             1    1[BANK0 ] unsigned char 
  8847 ;; Return value:  Size  Location     Type
  8848 ;;		None               void
  8849 ;; Registers used:
  8850 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8851 ;; Tracked objects:
  8852 ;;		On entry : 0/0
  8853 ;;		On exit  : 0/0
  8854 ;;		Unchanged: 0/0
  8855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8856 ;;      Params:         0       1       0       0
  8857 ;;      Locals:         0       1       0       0
  8858 ;;      Temps:          0       0       0       0
  8859 ;;      Totals:         0       2       0       0
  8860 ;;Total ram usage:        2 bytes
  8861 ;; Hardware stack levels used:    1
  8862 ;; Hardware stack levels required when called:    3
  8863 ;; This function calls:
  8864 ;;		_LedPointSelect
  8865 ;; This function is called by:
  8866 ;;		_setLED_Initialization
  8867 ;;		_setPIRLED_Main
  8868 ;;		_Exception_Main
  8869 ;;		_PIR_Main
  8870 ;;		_setLights
  8871 ;; This function uses a non-reentrant model
  8872 ;;
  8873                           
  8874                           
  8875                           ;psect for function _setLED
  8876  0F35                     _setLED:	
  8877                           
  8878                           ;incstack = 0
  8879                           ; Regs used in _setLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8880                           ;setLED@led stored from wreg
  8881  0F35  1283               	bcf	3,5	;RP0=0, select bank0
  8882  0F36  1303               	bcf	3,6	;RP1=0, select bank0
  8883  0F37  00CE               	movwf	setLED@led
  8884                           
  8885                           ;LED_B1.c: 82: LedPointSelect(led);
  8886  0F38  084E               	movf	setLED@led,w
  8887  0F39  158A  2389  158A   	fcall	_LedPointSelect
  8888                           
  8889                           ;LED_B1.c: 83: if (command == 0) {
  8890  0F3C  1283               	bcf	3,5	;RP0=0, select bank0
  8891  0F3D  1303               	bcf	3,6	;RP1=0, select bank0
  8892  0F3E  08CD               	movf	setLED@command,f
  8893  0F3F  1D03               	skipz
  8894  0F40  2F4A               	goto	l4407
  8895                           
  8896                           ;LED_B1.c: 85: if (led == 1) {
  8897  0F41  084E               	movf	setLED@led,w
  8898  0F42  3A01               	xorlw	1
  8899  0F43  1D03               	skipz
  8900  0F44  2F46               	goto	l4403
  8901                           
  8902                           ;LED_B1.c: 89: RA6 = 1;
  8903  0F45  1705               	bsf	5,6	;volatile
  8904  0F46                     l4403:	
  8905                           
  8906                           ;LED_B1.c: 91: }
  8907                           ;LED_B1.c: 94: if (led == 2) {
  8908  0F46  084E               	movf	setLED@led,w
  8909  0F47  3A02               	xorlw	2
  8910  0F48  1903               	btfsc	3,2
  8911                           
  8912                           ;LED_B1.c: 98: RA7 = 1;
  8913  0F49  1785               	bsf	5,7	;volatile
  8914  0F4A                     l4407:	
  8915                           
  8916                           ;LED_B1.c: 100: }
  8917                           ;LED_B1.c: 120: }
  8918                           ;LED_B1.c: 121: if (command == 1) {
  8919  0F4A  084D               	movf	setLED@command,w
  8920  0F4B  3A01               	xorlw	1
  8921  0F4C  1D03               	skipz
  8922  0F4D  2F57               	goto	l4417
  8923                           
  8924                           ;LED_B1.c: 123: if (led == 1) {
  8925  0F4E  084E               	movf	setLED@led,w
  8926  0F4F  3A01               	xorlw	1
  8927  0F50  1D03               	skipz
  8928  0F51  2F53               	goto	l4413
  8929                           
  8930                           ;LED_B1.c: 127: RA6 = 0;
  8931  0F52  1305               	bcf	5,6	;volatile
  8932  0F53                     l4413:	
  8933                           
  8934                           ;LED_B1.c: 129: }
  8935                           ;LED_B1.c: 132: if (led == 2) {
  8936  0F53  084E               	movf	setLED@led,w
  8937  0F54  3A02               	xorlw	2
  8938  0F55  1903               	btfsc	3,2
  8939                           
  8940                           ;LED_B1.c: 136: RA7 = 0;
  8941  0F56  1385               	bcf	5,7	;volatile
  8942  0F57                     l4417:	
  8943                           
  8944                           ;LED_B1.c: 138: }
  8945                           ;LED_B1.c: 158: }
  8946                           ;LED_B1.c: 159: if (command == 10) {
  8947  0F57  084D               	movf	setLED@command,w
  8948  0F58  3A0A               	xorlw	10
  8949  0F59  1D03               	skipz
  8950  0F5A  2F6E               	goto	l4431
  8951                           
  8952                           ;LED_B1.c: 160: LED->GO = 0;
  8953  0F5B  0876               	movf	_LED,w
  8954  0F5C  0084               	movwf	4
  8955  0F5D  1383               	bcf	3,7	;select IRP bank0
  8956  0F5E  1080               	bcf	0,1
  8957                           
  8958                           ;LED_B1.c: 161: LED->Time = 0;
  8959  0F5F  0A76               	incf	_LED,w
  8960  0F60  0084               	movwf	4
  8961  0F61  0180               	clrf	0
  8962  0F62  0A84               	incf	4,f
  8963  0F63  0180               	clrf	0
  8964                           
  8965                           ;LED_B1.c: 163: if (led == 1) {
  8966  0F64  084E               	movf	setLED@led,w
  8967  0F65  3A01               	xorlw	1
  8968  0F66  1D03               	skipz
  8969  0F67  2F6A               	goto	l4427
  8970                           
  8971                           ;LED_B1.c: 167: RA6 = 1;
  8972  0F68  1705               	bsf	5,6	;volatile
  8973                           
  8974                           ;LED_B1.c: 169: }
  8975  0F69  2F6E               	goto	l4431
  8976  0F6A                     l4427:	
  8977                           
  8978                           ;LED_B1.c: 172: else if (led == 2) {
  8979  0F6A  084E               	movf	setLED@led,w
  8980  0F6B  3A02               	xorlw	2
  8981  0F6C  1903               	btfsc	3,2
  8982                           
  8983                           ;LED_B1.c: 176: RA7 = 1;
  8984  0F6D  1785               	bsf	5,7	;volatile
  8985  0F6E                     l4431:	
  8986                           
  8987                           ;LED_B1.c: 178: }
  8988                           ;LED_B1.c: 198: }
  8989                           ;LED_B1.c: 199: if (command == 11) {
  8990  0F6E  084D               	movf	setLED@command,w
  8991  0F6F  3A0B               	xorlw	11
  8992  0F70  1D03               	skipz
  8993  0F71  2F76               	goto	l4435
  8994                           
  8995                           ;LED_B1.c: 200: LED->GO = 1;
  8996  0F72  0876               	movf	_LED,w
  8997  0F73  0084               	movwf	4
  8998  0F74  1383               	bcf	3,7	;select IRP bank0
  8999  0F75  1480               	bsf	0,1
  9000  0F76                     l4435:	
  9001                           
  9002                           ;LED_B1.c: 201: }
  9003                           ;LED_B1.c: 205: if (command == 111) {
  9004  0F76  084D               	movf	setLED@command,w
  9005  0F77  3A6F               	xorlw	111
  9006  0F78  1D03               	skipz
  9007  0F79  2F94               	goto	l4461
  9008                           
  9009                           ;LED_B1.c: 206: PIRLED.Count = 0;
  9010  0F7A  01AB               	clrf	_PIRLED+1
  9011                           
  9012                           ;LED_B1.c: 207: PIRLED.Time = 0;
  9013  0F7B  01AC               	clrf	_PIRLED+2
  9014  0F7C  01AD               	clrf	_PIRLED+3
  9015                           
  9016                           ;LED_B1.c: 208: PIRLED.status = 0;
  9017  0F7D  122A               	bcf	_PIRLED,4
  9018                           
  9019                           ;LED_B1.c: 209: PIRLED.GO = 1;
  9020  0F7E  142A               	bsf	_PIRLED,0
  9021                           
  9022                           ;LED_B1.c: 210: PIRLED.GO1 = 0;
  9023  0F7F  10AA               	bcf	_PIRLED,1
  9024                           
  9025                           ;LED_B1.c: 211: PIRLED.GO2 = 0;
  9026  0F80  112A               	bcf	_PIRLED,2
  9027                           
  9028                           ;LED_B1.c: 212: PIRLED.GO3 = 0;
  9029  0F81  11AA               	bcf	_PIRLED,3
  9030                           
  9031                           ;LED_B1.c: 213: if (led == 1) {
  9032  0F82  084E               	movf	setLED@led,w
  9033  0F83  3A01               	xorlw	1
  9034  0F84  1D03               	skipz
  9035  0F85  2F88               	goto	l4453
  9036                           
  9037                           ;LED_B1.c: 214: PIRLED.GO1 = 1;
  9038  0F86  14AA               	bsf	_PIRLED,1
  9039                           
  9040                           ;LED_B1.c: 215: } else if (led == 2) {
  9041  0F87  0008               	return
  9042  0F88                     l4453:	
  9043  0F88  084E               	movf	setLED@led,w
  9044  0F89  3A02               	xorlw	2
  9045  0F8A  1D03               	skipz
  9046  0F8B  2F8E               	goto	l4457
  9047                           
  9048                           ;LED_B1.c: 216: PIRLED.GO2 = 1;
  9049  0F8C  152A               	bsf	_PIRLED,2
  9050                           
  9051                           ;LED_B1.c: 217: } else if (led == 3) {
  9052  0F8D  0008               	return
  9053  0F8E                     l4457:	
  9054  0F8E  084E               	movf	setLED@led,w
  9055  0F8F  3A03               	xorlw	3
  9056  0F90  1D03               	skipz
  9057  0F91  0008               	return
  9058                           
  9059                           ;LED_B1.c: 218: PIRLED.GO3 = 1;
  9060  0F92  15AA               	bsf	_PIRLED,3
  9061                           
  9062                           ;LED_B1.c: 219: }
  9063                           ;LED_B1.c: 220: } else if (command == 110) {
  9064  0F93  0008               	return
  9065  0F94                     l4461:	
  9066  0F94  084D               	movf	setLED@command,w
  9067  0F95  3A6E               	xorlw	110
  9068  0F96  1D03               	skipz
  9069  0F97  0008               	return
  9070                           
  9071                           ;LED_B1.c: 221: PIRLED.GO = 0;
  9072  0F98  102A               	bcf	_PIRLED,0
  9073  0F99  0008               	return
  9074  0F9A                     __end_of_setLED:	
  9075                           
  9076                           	psect	text58
  9077  0B89                     __ptext58:	
  9078 ;; *************** function _LedPointSelect *****************
  9079 ;; Defined at:
  9080 ;;		line 7 in file "../src/LED_B1.c"
  9081 ;; Parameters:    Size  Location     Type
  9082 ;;  led             1    wreg     unsigned char 
  9083 ;; Auto vars:     Size  Location     Type
  9084 ;;  led             1    5[COMMON] unsigned char 
  9085 ;; Return value:  Size  Location     Type
  9086 ;;		None               void
  9087 ;; Registers used:
  9088 ;;		wreg
  9089 ;; Tracked objects:
  9090 ;;		On entry : 0/0
  9091 ;;		On exit  : 0/0
  9092 ;;		Unchanged: 0/0
  9093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9094 ;;      Params:         0       0       0       0
  9095 ;;      Locals:         1       0       0       0
  9096 ;;      Temps:          1       0       0       0
  9097 ;;      Totals:         2       0       0       0
  9098 ;;Total ram usage:        2 bytes
  9099 ;; Hardware stack levels used:    1
  9100 ;; Hardware stack levels required when called:    2
  9101 ;; This function calls:
  9102 ;;		Nothing
  9103 ;; This function is called by:
  9104 ;;		_setLED_Initialization
  9105 ;;		_setLED
  9106 ;;		_setLED_Main
  9107 ;; This function uses a non-reentrant model
  9108 ;;
  9109                           
  9110                           
  9111                           ;psect for function _LedPointSelect
  9112  0B89                     _LedPointSelect:	
  9113                           
  9114                           ;incstack = 0
  9115                           ; Regs used in _LedPointSelect: [wreg]
  9116                           ;LedPointSelect@led stored from wreg
  9117  0B89  00F5               	movwf	LedPointSelect@led
  9118                           
  9119                           ;LED_B1.c: 9: if (led == 1) {
  9120  0B8A  0875               	movf	LedPointSelect@led,w
  9121  0B8B  3A01               	xorlw	1
  9122  0B8C  1D03               	skipz
  9123  0B8D  2B92               	goto	l254
  9124                           
  9125                           ;LED_B1.c: 10: LED = &VarLED1;
  9126  0B8E  3045               	movlw	_VarLED1& (0+255)
  9127  0B8F  00F4               	movwf	??_LedPointSelect
  9128  0B90  0874               	movf	??_LedPointSelect,w
  9129  0B91  00F6               	movwf	_LED
  9130  0B92                     l254:	
  9131                           
  9132                           ;LED_B1.c: 11: }
  9133                           ;LED_B1.c: 14: if (led == 2) {
  9134  0B92  0875               	movf	LedPointSelect@led,w
  9135  0B93  3A02               	xorlw	2
  9136  0B94  1D03               	skipz
  9137  0B95  0008               	return
  9138                           
  9139                           ;LED_B1.c: 15: LED = &VarLED2;
  9140  0B96  3049               	movlw	_VarLED2& (0+255)
  9141  0B97  00F4               	movwf	??_LedPointSelect
  9142  0B98  0874               	movf	??_LedPointSelect,w
  9143  0B99  00F6               	movwf	_LED
  9144  0B9A  0008               	return
  9145  0B9B                     __end_of_LedPointSelect:	
  9146                           
  9147                           	psect	text59
  9148  07F7                     __ptext59:	
  9149 ;; *************** function _getMain_All_LightsStatus *****************
  9150 ;; Defined at:
  9151 ;;		line 373 in file "../src/Main_B1.c"
  9152 ;; Parameters:    Size  Location     Type
  9153 ;;		None
  9154 ;; Auto vars:     Size  Location     Type
  9155 ;;  status          1    4[COMMON] unsigned char 
  9156 ;; Return value:  Size  Location     Type
  9157 ;;                  1    wreg      unsigned char 
  9158 ;; Registers used:
  9159 ;;		wreg, status,2
  9160 ;; Tracked objects:
  9161 ;;		On entry : 0/0
  9162 ;;		On exit  : 0/0
  9163 ;;		Unchanged: 0/0
  9164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9165 ;;      Params:         0       0       0       0
  9166 ;;      Locals:         1       0       0       0
  9167 ;;      Temps:          0       0       0       0
  9168 ;;      Totals:         1       0       0       0
  9169 ;;Total ram usage:        1 bytes
  9170 ;; Hardware stack levels used:    1
  9171 ;; Hardware stack levels required when called:    2
  9172 ;; This function calls:
  9173 ;;		Nothing
  9174 ;; This function is called by:
  9175 ;;		_Exception_Main
  9176 ;;		_Load_Main
  9177 ;;		_setTemp_Main
  9178 ;;		_Lights_Main
  9179 ;; This function uses a non-reentrant model
  9180 ;;
  9181                           
  9182                           
  9183                           ;psect for function _getMain_All_LightsStatus
  9184  07F7                     _getMain_All_LightsStatus:	
  9185                           
  9186                           ;Main_B1.c: 374: char status = 0;
  9187                           
  9188                           ;incstack = 0
  9189                           ; Regs used in _getMain_All_LightsStatus: [wreg+status,2]
  9190  07F7  01F4               	clrf	getMain_All_LightsStatus@status
  9191                           
  9192                           ;Main_B1.c: 378: status = Lights1.Status == 1 ? 1 : 0;
  9193  07F8  3000               	movlw	0
  9194  07F9  1283               	bcf	3,5	;RP0=0, select bank0
  9195  07FA  1303               	bcf	3,6	;RP1=0, select bank0
  9196  07FB  1940               	btfsc	_Lights1,2
  9197  07FC  3001               	movlw	1
  9198  07FD  00F4               	movwf	getMain_All_LightsStatus@status
  9199                           
  9200                           ;Main_B1.c: 420: return status;
  9201  07FE  0874               	movf	getMain_All_LightsStatus@status,w
  9202  07FF  0008               	return
  9203  0800                     __end_of_getMain_All_LightsStatus:	
  9204                           
  9205                           	psect	text60
  9206  0DBA                     __ptext60:	
  9207 ;; *************** function _getMain_All_Error_Status *****************
  9208 ;; Defined at:
  9209 ;;		line 424 in file "../src/Main_B1.c"
  9210 ;; Parameters:    Size  Location     Type
  9211 ;;  command         1    wreg     unsigned char 
  9212 ;; Auto vars:     Size  Location     Type
  9213 ;;  command         1    4[BANK0 ] unsigned char 
  9214 ;;  status          1    5[BANK0 ] unsigned char 
  9215 ;; Return value:  Size  Location     Type
  9216 ;;                  1    wreg      unsigned char 
  9217 ;; Registers used:
  9218 ;;		wreg, status,2, status,0
  9219 ;; Tracked objects:
  9220 ;;		On entry : 0/0
  9221 ;;		On exit  : 0/0
  9222 ;;		Unchanged: 0/0
  9223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9224 ;;      Params:         0       0       0       0
  9225 ;;      Locals:         0       6       0       0
  9226 ;;      Temps:          1       0       0       0
  9227 ;;      Totals:         1       6       0       0
  9228 ;;Total ram usage:        7 bytes
  9229 ;; Hardware stack levels used:    1
  9230 ;; Hardware stack levels required when called:    2
  9231 ;; This function calls:
  9232 ;;		Nothing
  9233 ;; This function is called by:
  9234 ;;		_Exception_Main
  9235 ;;		_Load_Main
  9236 ;;		_setTemp_Main
  9237 ;;		_PIR_Main
  9238 ;;		_setSYSC_Main
  9239 ;;		_Lights_Main
  9240 ;; This function uses a non-reentrant model
  9241 ;;
  9242                           
  9243                           
  9244                           ;psect for function _getMain_All_Error_Status
  9245  0DBA                     _getMain_All_Error_Status:	
  9246                           
  9247                           ;incstack = 0
  9248                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2+status,0]
  9249                           ;getMain_All_Error_Status@command stored from wreg
  9250  0DBA  1283               	bcf	3,5	;RP0=0, select bank0
  9251  0DBB  1303               	bcf	3,6	;RP1=0, select bank0
  9252  0DBC  00D1               	movwf	getMain_All_Error_Status@command
  9253                           
  9254                           ;Main_B1.c: 425: char status = 0;
  9255  0DBD  01D2               	clrf	getMain_All_Error_Status@status
  9256                           
  9257                           ;Main_B1.c: 428: if (status == 0 && command != 1) {
  9258  0DBE  08D2               	movf	getMain_All_Error_Status@status,f
  9259  0DBF  1D03               	skipz
  9260  0DC0  2DC9               	goto	l3199
  9261  0DC1  0851               	movf	getMain_All_Error_Status@command,w
  9262  0DC2  3A01               	xorlw	1
  9263  0DC3  1903               	skipnz
  9264  0DC4  2DC9               	goto	l3199
  9265                           
  9266                           ;Main_B1.c: 429: status = SYSC.ERROR == 1 ? 1 : 0;
  9267  0DC5  3000               	movlw	0
  9268  0DC6  18A0               	btfsc	_SYSC,1
  9269  0DC7  3001               	movlw	1
  9270  0DC8  00D2               	movwf	getMain_All_Error_Status@status
  9271  0DC9                     l3199:	
  9272                           
  9273                           ;Main_B1.c: 430: }
  9274                           ;Main_B1.c: 436: if (status == 0 && command != 2) {
  9275  0DC9  08D2               	movf	getMain_All_Error_Status@status,f
  9276  0DCA  1D03               	skipz
  9277  0DCB  2DDD               	goto	l3209
  9278  0DCC  0851               	movf	getMain_All_Error_Status@command,w
  9279  0DCD  3A02               	xorlw	2
  9280  0DCE  1903               	skipnz
  9281  0DCF  2DDD               	goto	l3209
  9282                           
  9283                           ;Main_B1.c: 437: status = Temp.ERROR == 1 ? 2 : 0;
  9284  0DD0  18B9               	btfsc	_Temp,1
  9285  0DD1  2DD5               	goto	l3207
  9286  0DD2  01CD               	clrf	_getMain_All_Error_Status$2127
  9287  0DD3  01CE               	clrf	_getMain_All_Error_Status$2127+1
  9288  0DD4  2DD9               	goto	l590
  9289  0DD5                     l3207:	
  9290  0DD5  3002               	movlw	2
  9291  0DD6  00CD               	movwf	_getMain_All_Error_Status$2127
  9292  0DD7  3000               	movlw	0
  9293  0DD8  00CE               	movwf	_getMain_All_Error_Status$2127+1
  9294  0DD9                     l590:	
  9295  0DD9  084D               	movf	_getMain_All_Error_Status$2127,w
  9296  0DDA  00F4               	movwf	??_getMain_All_Error_Status
  9297  0DDB  0874               	movf	??_getMain_All_Error_Status,w
  9298  0DDC  00D2               	movwf	getMain_All_Error_Status@status
  9299  0DDD                     l3209:	
  9300                           
  9301                           ;Main_B1.c: 438: }
  9302                           ;Main_B1.c: 443: if (status == 0 && command != 3) {
  9303  0DDD  08D2               	movf	getMain_All_Error_Status@status,f
  9304  0DDE  1D03               	skipz
  9305  0DDF  2DF6               	goto	l591
  9306  0DE0  0851               	movf	getMain_All_Error_Status@command,w
  9307  0DE1  3A03               	xorlw	3
  9308  0DE2  1903               	skipnz
  9309  0DE3  2DF6               	goto	l591
  9310                           
  9311                           ;Main_B1.c: 444: status = Load.ERROR == 1 ? 3 : 0;
  9312  0DE4  1683               	bsf	3,5	;RP0=1, select bank1
  9313  0DE5  1303               	bcf	3,6	;RP1=0, select bank1
  9314  0DE6  1ACA               	btfsc	_Load^(0+128),5
  9315  0DE7  2DED               	goto	l3217
  9316  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  9317  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  9318  0DEA  01CF               	clrf	_getMain_All_Error_Status$2128
  9319  0DEB  01D0               	clrf	_getMain_All_Error_Status$2128+1
  9320  0DEC  2DF2               	goto	l595
  9321  0DED                     l3217:	
  9322  0DED  3003               	movlw	3
  9323  0DEE  1283               	bcf	3,5	;RP0=0, select bank0
  9324  0DEF  00CF               	movwf	_getMain_All_Error_Status$2128
  9325  0DF0  3000               	movlw	0
  9326  0DF1  00D0               	movwf	_getMain_All_Error_Status$2128+1
  9327  0DF2                     l595:	
  9328  0DF2  084F               	movf	_getMain_All_Error_Status$2128,w
  9329  0DF3  00F4               	movwf	??_getMain_All_Error_Status
  9330  0DF4  0874               	movf	??_getMain_All_Error_Status,w
  9331  0DF5  00D2               	movwf	getMain_All_Error_Status@status
  9332  0DF6                     l591:	
  9333                           
  9334                           ;Main_B1.c: 445: }
  9335                           ;Main_B1.c: 455: return status;
  9336  0DF6  0852               	movf	getMain_All_Error_Status@status,w
  9337  0DF7  0008               	return
  9338  0DF8                     __end_of_getMain_All_Error_Status:	
  9339                           
  9340                           	psect	text61
  9341  0AF8                     __ptext61:	
  9342 ;; *************** function _getAll_Lights_Line *****************
  9343 ;; Defined at:
  9344 ;;		line 310 in file "../src/TriacRelay_B1.c"
  9345 ;; Parameters:    Size  Location     Type
  9346 ;;		None
  9347 ;; Auto vars:     Size  Location     Type
  9348 ;;  line            1    4[COMMON] unsigned char 
  9349 ;; Return value:  Size  Location     Type
  9350 ;;                  1    wreg      unsigned char 
  9351 ;; Registers used:
  9352 ;;		wreg, status,2
  9353 ;; Tracked objects:
  9354 ;;		On entry : 0/0
  9355 ;;		On exit  : 0/0
  9356 ;;		Unchanged: 0/0
  9357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9358 ;;      Params:         0       0       0       0
  9359 ;;      Locals:         1       0       0       0
  9360 ;;      Temps:          0       0       0       0
  9361 ;;      Totals:         1       0       0       0
  9362 ;;Total ram usage:        1 bytes
  9363 ;; Hardware stack levels used:    1
  9364 ;; Hardware stack levels required when called:    2
  9365 ;; This function calls:
  9366 ;;		Nothing
  9367 ;; This function is called by:
  9368 ;;		_Exception_Main
  9369 ;; This function uses a non-reentrant model
  9370 ;;
  9371                           
  9372                           
  9373                           ;psect for function _getAll_Lights_Line
  9374  0AF8                     _getAll_Lights_Line:	
  9375                           
  9376                           ;TriacRelay_B1.c: 311: char line = 0;
  9377                           
  9378                           ;incstack = 0
  9379                           ; Regs used in _getAll_Lights_Line: [wreg+status,2]
  9380  0AF8  01F4               	clrf	getAll_Lights_Line@line
  9381                           
  9382                           ;TriacRelay_B1.c: 313: if (Lights1.Line == 1) {
  9383  0AF9  1283               	bcf	3,5	;RP0=0, select bank0
  9384  0AFA  1303               	bcf	3,6	;RP1=0, select bank0
  9385  0AFB  1C41               	btfss	_Lights1+1,0
  9386  0AFC  2AFF               	goto	l3463
  9387                           
  9388                           ;TriacRelay_B1.c: 314: line = 1;
  9389  0AFD  01F4               	clrf	getAll_Lights_Line@line
  9390  0AFE  0AF4               	incf	getAll_Lights_Line@line,f
  9391  0AFF                     l3463:	
  9392                           
  9393                           ;TriacRelay_B1.c: 315: }
  9394                           ;TriacRelay_B1.c: 327: return line;
  9395  0AFF  0874               	movf	getAll_Lights_Line@line,w
  9396  0B00  0008               	return
  9397  0B01                     __end_of_getAll_Lights_Line:	
  9398                           
  9399                           	psect	text62
  9400  0B20                     __ptext62:	
  9401 ;; *************** function _DetectSYSC_Signal *****************
  9402 ;; Defined at:
  9403 ;;		line 50 in file "../src/SYSC_B1.c"
  9404 ;; Parameters:    Size  Location     Type
  9405 ;;		None
  9406 ;; Auto vars:     Size  Location     Type
  9407 ;;		None
  9408 ;; Return value:  Size  Location     Type
  9409 ;;		None               void
  9410 ;; Registers used:
  9411 ;;		status,2
  9412 ;; Tracked objects:
  9413 ;;		On entry : 0/0
  9414 ;;		On exit  : 0/0
  9415 ;;		Unchanged: 0/0
  9416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9417 ;;      Params:         0       0       0       0
  9418 ;;      Locals:         0       0       0       0
  9419 ;;      Temps:          0       0       0       0
  9420 ;;      Totals:         0       0       0       0
  9421 ;;Total ram usage:        0 bytes
  9422 ;; Hardware stack levels used:    1
  9423 ;; Hardware stack levels required when called:    2
  9424 ;; This function calls:
  9425 ;;		Nothing
  9426 ;; This function is called by:
  9427 ;;		_main
  9428 ;; This function uses a non-reentrant model
  9429 ;;
  9430                           
  9431                           
  9432                           ;psect for function _DetectSYSC_Signal
  9433  0B20                     _DetectSYSC_Signal:	
  9434                           
  9435                           ;SYSC_B1.c: 51: if (SYSC.Signal == 0) {
  9436                           
  9437                           ;incstack = 0
  9438                           ; Regs used in _DetectSYSC_Signal: [status,2]
  9439  0B20  1283               	bcf	3,5	;RP0=0, select bank0
  9440  0B21  1303               	bcf	3,6	;RP1=0, select bank0
  9441  0B22  19A0               	btfsc	_SYSC,3
  9442  0B23  2B2A               	goto	l1111
  9443                           
  9444                           ;SYSC_B1.c: 52: if (RA5 == 1) {
  9445  0B24  1E85               	btfss	5,5	;volatile
  9446  0B25  0008               	return
  9447                           
  9448                           ;SYSC_B1.c: 53: SYSC.Signal = 1;
  9449  0B26  15A0               	bsf	_SYSC,3
  9450                           
  9451                           ;SYSC_B1.c: 54: SYSC.Time = 0;
  9452  0B27  01A1               	clrf	_SYSC+1
  9453  0B28  01A2               	clrf	_SYSC+2
  9454                           
  9455                           ;SYSC_B1.c: 55: }
  9456                           ;SYSC_B1.c: 56: } else {
  9457  0B29  0008               	return
  9458  0B2A                     l1111:	
  9459                           
  9460                           ;SYSC_B1.c: 57: if (RA5 == 0) {
  9461  0B2A  1A85               	btfsc	5,5	;volatile
  9462  0B2B  0008               	return
  9463                           
  9464                           ;SYSC_B1.c: 58: SYSC.Signal = 0;
  9465  0B2C  11A0               	bcf	_SYSC,3
  9466  0B2D  0008               	return
  9467  0B2E                     __end_of_DetectSYSC_Signal:	
  9468                           
  9469                           	psect	text63
  9470  0D86                     __ptext63:	
  9471 ;; *************** function _CDS_Main *****************
  9472 ;; Defined at:
  9473 ;;		line 11 in file "../src/CDS_B1.c"
  9474 ;; Parameters:    Size  Location     Type
  9475 ;;		None
  9476 ;; Auto vars:     Size  Location     Type
  9477 ;;		None
  9478 ;; Return value:  Size  Location     Type
  9479 ;;		None               void
  9480 ;; Registers used:
  9481 ;;		wreg, status,2, status,0
  9482 ;; Tracked objects:
  9483 ;;		On entry : 0/0
  9484 ;;		On exit  : 0/0
  9485 ;;		Unchanged: 0/0
  9486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9487 ;;      Params:         0       0       0       0
  9488 ;;      Locals:         0       0       0       0
  9489 ;;      Temps:          0       3       0       0
  9490 ;;      Totals:         0       3       0       0
  9491 ;;Total ram usage:        3 bytes
  9492 ;; Hardware stack levels used:    1
  9493 ;; Hardware stack levels required when called:    2
  9494 ;; This function calls:
  9495 ;;		Nothing
  9496 ;; This function is called by:
  9497 ;;		_main
  9498 ;; This function uses a non-reentrant model
  9499 ;;
  9500                           
  9501                           
  9502                           ;psect for function _CDS_Main
  9503  0D86                     _CDS_Main:	
  9504                           
  9505                           ;CDS_B1.c: 13: if (_CDS.Enable == 1) {
  9506                           
  9507                           ;incstack = 0
  9508                           ; Regs used in _CDS_Main: [wreg+status,2+status,0]
  9509  0D86  1283               	bcf	3,5	;RP0=0, select bank0
  9510  0D87  1303               	bcf	3,6	;RP1=0, select bank0
  9511  0D88  1C2E               	btfss	__CDS,0
  9512  0D89  0008               	return
  9513                           
  9514                           ;CDS_B1.c: 14: if (_CDS.GO == 0) {
  9515  0D8A  18AE               	btfsc	__CDS,1
  9516  0D8B  2D99               	goto	l117
  9517                           
  9518                           ;CDS_B1.c: 15: if (_CDS.ADtoGO == 0) {
  9519  0D8C  19AE               	btfsc	__CDS,3
  9520  0D8D  0008               	return
  9521                           
  9522                           ;CDS_B1.c: 16: _CDS.Time++;
  9523  0D8E  3001               	movlw	1
  9524  0D8F  00CD               	movwf	??_CDS_Main
  9525  0D90  084D               	movf	??_CDS_Main,w
  9526  0D91  07AF               	addwf	__CDS+1,f
  9527                           
  9528                           ;CDS_B1.c: 17: if (_CDS.Time >= (100 / 20))
  9529  0D92  3005               	movlw	5
  9530  0D93  022F               	subwf	__CDS+1,w
  9531  0D94  1C03               	skipc
  9532  0D95  0008               	return
  9533                           
  9534                           ;CDS_B1.c: 18: {
  9535                           ;CDS_B1.c: 19: _CDS.Time = 0;
  9536  0D96  01AF               	clrf	__CDS+1
  9537                           
  9538                           ;CDS_B1.c: 20: _CDS.ADtoGO = 1;
  9539  0D97  15AE               	bsf	__CDS,3
  9540                           
  9541                           ;CDS_B1.c: 21: }
  9542                           ;CDS_B1.c: 22: }
  9543                           ;CDS_B1.c: 23: } else {
  9544  0D98  0008               	return
  9545  0D99                     l117:	
  9546                           
  9547                           ;CDS_B1.c: 24: if (_CDS.GO == 1) {
  9548  0D99  1CAE               	btfss	__CDS,1
  9549  0D9A  0008               	return
  9550                           
  9551                           ;CDS_B1.c: 25: _CDS.GO = 0;
  9552  0D9B  10AE               	bcf	__CDS,1
  9553                           
  9554                           ;CDS_B1.c: 26: if (_CDS.Status == 0) {
  9555  0D9C  1A2E               	btfsc	__CDS,4
  9556  0D9D  2DA4               	goto	l4789
  9557                           
  9558                           ;CDS_B1.c: 27: if (_CDS.SignalAD >= _CDS.VRAD) {
  9559  0D9E  0830               	movf	__CDS+2,w
  9560  0D9F  0231               	subwf	__CDS+3,w
  9561  0DA0  1C03               	skipc
  9562  0DA1  0008               	return
  9563                           
  9564                           ;CDS_B1.c: 28: _CDS.Status = 1;
  9565  0DA2  162E               	bsf	__CDS,4
  9566                           
  9567                           ;CDS_B1.c: 29: }
  9568                           ;CDS_B1.c: 30: } else {
  9569  0DA3  0008               	return
  9570  0DA4                     l4789:	
  9571                           
  9572                           ;CDS_B1.c: 31: if (_CDS.SignalAD <= (_CDS.VRAD - 100)) {
  9573  0DA4  0830               	movf	__CDS+2,w
  9574  0DA5  3E9C               	addlw	156
  9575  0DA6  00CD               	movwf	??_CDS_Main
  9576  0DA7  30FF               	movlw	255
  9577  0DA8  1803               	skipnc
  9578  0DA9  3000               	movlw	0
  9579  0DAA  00CE               	movwf	??_CDS_Main+1
  9580  0DAB  084E               	movf	??_CDS_Main+1,w
  9581  0DAC  3A80               	xorlw	128
  9582  0DAD  00CF               	movwf	??_CDS_Main+2
  9583  0DAE  3080               	movlw	128
  9584  0DAF  024F               	subwf	??_CDS_Main+2,w
  9585  0DB0  1D03               	skipz
  9586  0DB1  2DB4               	goto	u5825
  9587  0DB2  0831               	movf	__CDS+3,w
  9588  0DB3  024D               	subwf	??_CDS_Main,w
  9589  0DB4                     u5825:	
  9590  0DB4  1C03               	skipc
  9591  0DB5  0008               	return
  9592                           
  9593                           ;CDS_B1.c: 32: _CDS.Status = 0;
  9594  0DB6  1283               	bcf	3,5	;RP0=0, select bank0
  9595  0DB7  1303               	bcf	3,6	;RP1=0, select bank0
  9596  0DB8  122E               	bcf	__CDS,4
  9597  0DB9  0008               	return
  9598  0DBA                     __end_of_CDS_Main:	
  9599                           
  9600                           	psect	text64
  9601  0AA7                     __ptext64:	
  9602 ;; *************** function _CDS_Initialization *****************
  9603 ;; Defined at:
  9604 ;;		line 7 in file "../src/CDS_B1.c"
  9605 ;; Parameters:    Size  Location     Type
  9606 ;;		None
  9607 ;; Auto vars:     Size  Location     Type
  9608 ;;		None
  9609 ;; Return value:  Size  Location     Type
  9610 ;;		None               void
  9611 ;; Registers used:
  9612 ;;		None
  9613 ;; Tracked objects:
  9614 ;;		On entry : 0/0
  9615 ;;		On exit  : 0/0
  9616 ;;		Unchanged: 0/0
  9617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9618 ;;      Params:         0       0       0       0
  9619 ;;      Locals:         0       0       0       0
  9620 ;;      Temps:          0       0       0       0
  9621 ;;      Totals:         0       0       0       0
  9622 ;;Total ram usage:        0 bytes
  9623 ;; Hardware stack levels used:    1
  9624 ;; Hardware stack levels required when called:    2
  9625 ;; This function calls:
  9626 ;;		Nothing
  9627 ;; This function is called by:
  9628 ;;		_main
  9629 ;; This function uses a non-reentrant model
  9630 ;;
  9631                           
  9632                           
  9633                           ;psect for function _CDS_Initialization
  9634  0AA7                     _CDS_Initialization:	
  9635                           
  9636                           ;CDS_B1.c: 8: _CDS.Enable = 1;
  9637                           
  9638                           ;incstack = 0
  9639                           ; Regs used in _CDS_Initialization: []
  9640  0AA7  1283               	bcf	3,5	;RP0=0, select bank0
  9641  0AA8  1303               	bcf	3,6	;RP1=0, select bank0
  9642  0AA9  142E               	bsf	__CDS,0
  9643  0AAA  0008               	return
  9644  0AAB                     __end_of_CDS_Initialization:	
  9645                           
  9646                           	psect	text65
  9647  0C04                     __ptext65:	
  9648 ;; *************** function _ISR *****************
  9649 ;; Defined at:
  9650 ;;		line 116 in file "../src/MCU_B1.c"
  9651 ;; Parameters:    Size  Location     Type
  9652 ;;		None
  9653 ;; Auto vars:     Size  Location     Type
  9654 ;;		None
  9655 ;; Return value:  Size  Location     Type
  9656 ;;		None               void
  9657 ;; Registers used:
  9658 ;;		wreg, status,2, status,0, pclath, cstack
  9659 ;; Tracked objects:
  9660 ;;		On entry : 0/0
  9661 ;;		On exit  : 0/0
  9662 ;;		Unchanged: 0/0
  9663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9664 ;;      Params:         0       0       0       0
  9665 ;;      Locals:         0       0       0       0
  9666 ;;      Temps:          4       0       0       0
  9667 ;;      Totals:         4       0       0       0
  9668 ;;Total ram usage:        4 bytes
  9669 ;; Hardware stack levels used:    1
  9670 ;; Hardware stack levels required when called:    1
  9671 ;; This function calls:
  9672 ;;		_TMR1_ISR
  9673 ;; This function is called by:
  9674 ;;		Interrupt level 1
  9675 ;; This function uses a non-reentrant model
  9676 ;;
  9677                           
  9678                           
  9679                           ;psect for function _ISR
  9680  0C04                     _ISR:	
  9681                           
  9682                           ;MCU_B1.c: 125: if (TMR1IE == 1 && TMR1IF == 1) {
  9683  0C04  1683               	bsf	3,5	;RP0=1, select bank1
  9684  0C05  1303               	bcf	3,6	;RP1=0, select bank1
  9685  0C06  1C0C               	btfss	12,0	;volatile
  9686  0C07  2C0F               	goto	i1l426
  9687  0C08  1283               	bcf	3,5	;RP0=0, select bank0
  9688  0C09  1303               	bcf	3,6	;RP1=0, select bank0
  9689  0C0A  1C0C               	btfss	12,0	;volatile
  9690  0C0B  2C0F               	goto	i1l426
  9691                           
  9692                           ;MCU_B1.c: 126: TMR1_ISR();
  9693  0C0C  158A  23C1  158A   	fcall	_TMR1_ISR
  9694  0C0F                     i1l426:	
  9695                           ;MCU_B1.c: 127: }
  9696                           ;MCU_B1.c: 148: return;
  9697                           
  9698  0C0F  0873               	movf	??_ISR+3,w
  9699  0C10  1283               	bcf	3,5	;RP0=0, select bank0
  9700  0C11  1303               	bcf	3,6	;RP1=0, select bank0
  9701  0C12  00FF               	movwf	127
  9702  0C13  0872               	movf	??_ISR+2,w
  9703  0C14  008A               	movwf	10
  9704  0C15  0871               	movf	??_ISR+1,w
  9705  0C16  0084               	movwf	4
  9706  0C17  0E70               	swapf	??_ISR^(0+-128),w
  9707  0C18  0083               	movwf	3
  9708  0C19  0EFE               	swapf	126,f
  9709  0C1A  0E7E               	swapf	126,w
  9710  0C1B  0009               	retfie
  9711  0C1C                     __end_of_ISR:	
  9712                           
  9713                           	psect	intentry
  9714  0004                     __pintentry:	
  9715                           ;incstack = 0
  9716                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  9717                           
  9718  0004                     interrupt_function:	
  9719  007E                     saved_w	set	btemp
  9720  0004  00FE               	movwf	btemp
  9721  0005  0E03               	swapf	3,w
  9722  0006  00F0               	movwf	??_ISR
  9723  0007  0804               	movf	4,w
  9724  0008  00F1               	movwf	??_ISR+1
  9725  0009  080A               	movf	10,w
  9726  000A  00F2               	movwf	??_ISR+2
  9727  000B  1283               	bcf	3,5	;RP0=0, select bank0
  9728  000C  1303               	bcf	3,6	;RP1=0, select bank0
  9729  000D  087F               	movf	btemp+1,w
  9730  000E  00F3               	movwf	??_ISR+3
  9731  000F  158A  2C04         	ljmp	_ISR
  9732                           
  9733                           	psect	text66
  9734  0BC1                     __ptext66:	
  9735 ;; *************** function _TMR1_ISR *****************
  9736 ;; Defined at:
  9737 ;;		line 236 in file "../src/MCU_B1.c"
  9738 ;; Parameters:    Size  Location     Type
  9739 ;;		None
  9740 ;; Auto vars:     Size  Location     Type
  9741 ;;		None
  9742 ;; Return value:  Size  Location     Type
  9743 ;;		None               void
  9744 ;; Registers used:
  9745 ;;		wreg, status,2
  9746 ;; Tracked objects:
  9747 ;;		On entry : 0/0
  9748 ;;		On exit  : 0/0
  9749 ;;		Unchanged: 0/0
  9750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9751 ;;      Params:         0       0       0       0
  9752 ;;      Locals:         0       0       0       0
  9753 ;;      Temps:          0       0       0       0
  9754 ;;      Totals:         0       0       0       0
  9755 ;;Total ram usage:        0 bytes
  9756 ;; Hardware stack levels used:    1
  9757 ;; This function calls:
  9758 ;;		Nothing
  9759 ;; This function is called by:
  9760 ;;		_ISR
  9761 ;; This function uses a non-reentrant model
  9762 ;;
  9763                           
  9764                           
  9765                           ;psect for function _TMR1_ISR
  9766  0BC1                     _TMR1_ISR:	
  9767                           
  9768                           ;MCU_B1.c: 268: Timer1.Count++;
  9769                           
  9770                           ;incstack = 0
  9771                           ; Regs used in _TMR1_ISR: [wreg+status,2]
  9772  0BC1  3001               	movlw	1
  9773  0BC2  1283               	bcf	3,5	;RP0=0, select bank0
  9774  0BC3  1303               	bcf	3,6	;RP1=0, select bank0
  9775  0BC4  07B3               	addwf	_Timer1+1,f
  9776  0BC5  1803               	skipnc
  9777  0BC6  0AB4               	incf	_Timer1+2,f
  9778  0BC7  3000               	movlw	0
  9779  0BC8  07B4               	addwf	_Timer1+2,f
  9780                           
  9781                           ;MCU_B1.c: 269: if (Timer1.Count == (int)(20*10)) {
  9782  0BC9  30C8               	movlw	200
  9783  0BCA  0633               	xorwf	_Timer1+1,w
  9784  0BCB  0434               	iorwf	_Timer1+2,w
  9785  0BCC  1D03               	skipz
  9786  0BCD  2BD1               	goto	i1l3705
  9787                           
  9788                           ;MCU_B1.c: 270: Timer1.Count = 0;
  9789  0BCE  01B3               	clrf	_Timer1+1
  9790  0BCF  01B4               	clrf	_Timer1+2
  9791                           
  9792                           ;MCU_B1.c: 271: Timer1.Timeout = 1;
  9793  0BD0  1432               	bsf	_Timer1,0
  9794  0BD1                     i1l3705:	
  9795                           
  9796                           ;MCU_B1.c: 272: }
  9797                           ;MCU_B1.c: 274: TMR1H = (int)((65536-1480)/256);
  9798  0BD1  30FA               	movlw	250
  9799  0BD2  008F               	movwf	15	;volatile
  9800                           
  9801                           ;MCU_B1.c: 275: TMR1L = (int)((65536-1480)%256);
  9802  0BD3  3038               	movlw	56
  9803  0BD4  008E               	movwf	14	;volatile
  9804                           
  9805                           ;MCU_B1.c: 276: TMR1IF = 0;
  9806  0BD5  100C               	bcf	12,0	;volatile
  9807  0BD6  0008               	return
  9808  0BD7                     __end_of_TMR1_ISR:	
  9809  007E                     btemp	set	126	;btemp
  9810  007E                     wtemp	set	126
  9811  007E                     wtemp0	set	126
  9812  0080                     wtemp1	set	128
  9813  0082                     wtemp2	set	130
  9814  0084                     wtemp3	set	132
  9815  0086                     wtemp4	set	134
  9816  0088                     wtemp5	set	136
  9817  007F                     wtemp6	set	127
  9818  007E                     ttemp	set	126
  9819  007E                     ttemp0	set	126
  9820  0081                     ttemp1	set	129
  9821  0084                     ttemp2	set	132
  9822  0087                     ttemp3	set	135
  9823  007F                     ttemp4	set	127
  9824  007E                     ltemp	set	126
  9825  007E                     ltemp0	set	126
  9826  0082                     ltemp1	set	130
  9827  0086                     ltemp2	set	134
  9828  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         119
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     23      68
    BANK1            80      0      70
    BANK2            16      0       0

Pointer List with Targets:

    Lights	PTR struct Lights size(1) Largest target is 5
		 -> NULL(NULL[0]), Lights1(BANK0[5]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarLED2(BANK0[4]), VarLED1(BANK0[4]), 


Critical Paths under _main in COMMON

    _getTemp_AD->_getAD
    _getPIR_AD->_getAD
    _getLoad_AD->_getAD
    _getCDS_AD->_getAD
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_getMain_All_Error_Status
    _setTemp_Main->_getMain_All_LightsStatus
    _setSYSC_Main->_getMain_All_Error_Status
    _Mcu_Initialization->_WDT_Set
    _Load_Main->___wmul
    _Load_Main->_getMain_Lights_Count
    _Load_Main->_setLoad_AH_AL_Restore
    _Load_Initialization->_setLoad_AH_AL_Restore
    _setLights_Main->_LightsPointSelect
    _setLights_Main->_getLights_Allow_Condition
    _getLights_Allow_Condition->_getLoad_OK
    _Lights_Control->_LightsPointSelect
    _setLights_Initialization->_LightsPointSelect
    _setLED_Initialization->_LedPointSelect
    _setLights_SwOn->_LightsPointSelect
    _getLights_Status->_LightsPointSelect
    _setLights_SwOff->_LightsPointSelect
    _setLights_Trigger->_LightsPointSelect
    _setLED->_LedPointSelect

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_PIR_Main
    _getPIR_AD->___awdiv
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_getMain_All_Error_Status
    _setSYSC_Main->_getMain_All_Error_Status
    _PIR_Main->_getMain_All_Error_Status
    _Load_Main->___lwdiv
    _Lights_Main->_Lights_Control
    _setLights_Main->_setLights
    _setLights->_setLED
    _Lights_Control->___awdiv
    _Lights_Initialization->_setLights_Initialization
    _LED_Main->_setPIRLED_Main
    _setPIRLED_Main->_setLED
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Exception_Main->_getMain_All_Error_Status
    _setLights_SwOn->_setLights_Trigger
    _setLights_SwOff->_setLights_Trigger

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4   25326
                                             18 BANK0      5     1      4
                 _CDS_Initialization
                           _CDS_Main
                  _DetectSYSC_Signal
                     _Exception_Main
                 _LED_Initialization
                           _LED_Main
              _Lights_Initialization
                        _Lights_Main
                _Load_Initialization
                          _Load_Main
                 _Mcu_Initialization
                 _PIR_Initialization
                           _PIR_Main
                _SYSC_Initialization
                          _SYSC_Main
                _Temp_Initialization
                          _Temp_Main
                           _WDT_Main
                          _getCDS_AD
                         _getLoad_AD
                          _getPIR_AD
                         _getTemp_AD
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           4     4      0     765
                                              0 BANK0      4     4      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getPIR_AD                                            9     8      1    2906
                                              8 BANK0      9     8      1
                            ___awdiv
                            ___lwdiv
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getLoad_AD                                           7     7      0    1130
                                              0 BANK0      7     7      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getCDS_AD                                            6     5      1     746
                                              0 BANK0      6     5      1
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                2     1      1     601
                                              4 COMMON     2     1      1
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              4 COMMON     1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0     347
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         6     6      0     347
                                              5 COMMON     1     1      0
                                              6 BANK0      5     5      0
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSC_Main                                            0     0      0     206
                       _setSYSC_Main
 ---------------------------------------------------------------------------------
 (2) _setSYSC_Main                                         0     0      0     206
           _getMain_All_Error_Status
 ---------------------------------------------------------------------------------
 (1) _SYSC_Initialization                                  0     0      0       0
             _setSYSC_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSYSC_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIR_Main                                            12    12      0    3967
                                              6 BANK0     12    12      0
                      _getCDS_Status
                   _getLights_Status
           _getMain_All_Error_Status
                             _setLED
                    _setLights_SwOff
                     _setLights_SwOn
 ---------------------------------------------------------------------------------
 (2) _getCDS_Status                                        1     1      0      23
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PIR_Initialization                                   1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Load_Main                                           10    10      0    1943
                                              7 BANK0     10    10      0
                            ___lwdiv
                             ___wmul
                    _getLight_LoadGO
               _getLight_Load_Status
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
               _getMain_Lights_Count
              _setLoad_AH_AL_Restore
 ---------------------------------------------------------------------------------
 (2) _getMain_Lights_Count                                 2     2      0      25
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _getLight_Load_Status                                 1     1      0      23
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getLight_LoadGO                                      1     1      0      23
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     290
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     857
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _Load_Initialization                                  0     0      0      90
              _setLoad_AH_AL_Restore
 ---------------------------------------------------------------------------------
 (2) _setLoad_AH_AL_Restore                                2     2      0      90
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lights_Main                                          0     0      0    4194
                     _Lights_Control
                         _getLoad_OK
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
                     _setLights_Main
 ---------------------------------------------------------------------------------
 (2) _setLights_Main                                       1     1      0    2899
                                              5 BANK0      1     1      0
                  _LightsPointSelect
          _getLights_Allow_Condition
                          _setLights
 ---------------------------------------------------------------------------------
 (3) _setLights                                            3     2      1    2636
                                              2 BANK0      3     2      1
                             _setLED
                     _setLights_Line
 ---------------------------------------------------------------------------------
 (4) _setLights_Line                                       1     1      0      44
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _getLights_Allow_Condition                            4     4      0     108
                                              5 COMMON     1     1      0
                                              0 BANK0      2     2      0
                         _getLoad_OK
 ---------------------------------------------------------------------------------
 (4) _getLoad_OK                                           1     1      0      34
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Lights_Control                                       3     3      0    1031
                                              8 BANK0      3     3      0
                  _LightsPointSelect
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     907
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lights_Initialization                                0     0      0      62
           _setLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLights_Initialization                             1     1      0      62
                                              0 BANK0      1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0    2292
                     _setPIRLED_Main
 ---------------------------------------------------------------------------------
 (2) _setPIRLED_Main                                       2     2      0    2292
                                              2 BANK0      2     2      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    2376
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    2376
                                              2 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Exception_Main                                       9     9      0    4302
                                              6 BANK0      9     9      0
                 _getAll_Lights_Line
                   _getLights_Status
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
                             _setLED
                    _setLights_SwOff
                     _setLights_SwOn
 ---------------------------------------------------------------------------------
 (2) _setLights_SwOn                                       1     1      0     621
                                              3 BANK0      1     1      0
                  _LightsPointSelect
                   _getLights_Status
                  _setLights_Trigger
 ---------------------------------------------------------------------------------
 (3) _getLights_Status                                     2     2      0      96
                                              0 BANK0      2     2      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _setLights_SwOff                                      1     1      0     494
                                              3 BANK0      1     1      0
                  _LightsPointSelect
                  _setLights_Trigger
 ---------------------------------------------------------------------------------
 (3) _setLights_Trigger                                    3     2      1     401
                                              0 BANK0      3     2      1
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _LightsPointSelect                                    2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _setLED                                               2     1      1    2252
                                              0 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (3) _LedPointSelect                                       2     2      0      62
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _getMain_All_LightsStatus                             1     1      0      24
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _getMain_All_Error_Status                             7     7      0     206
                                              4 COMMON     1     1      0
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _getAll_Lights_Line                                   1     1      0      24
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DetectSYSC_Signal                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CDS_Main                                             3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDS_Initialization
   _CDS_Main
   _DetectSYSC_Signal
   _Exception_Main
     _getAll_Lights_Line
     _getLights_Status
       _LightsPointSelect
     _getMain_All_Error_Status
     _getMain_All_LightsStatus
     _setLED
       _LedPointSelect
     _setLights_SwOff
       _LightsPointSelect
       _setLights_Trigger
         _LightsPointSelect
     _setLights_SwOn
       _LightsPointSelect
       _getLights_Status
         _LightsPointSelect
       _setLights_Trigger
         _LightsPointSelect
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setPIRLED_Main
       _setLED
         _LedPointSelect
   _Lights_Initialization
     _setLights_Initialization
       _LightsPointSelect
   _Lights_Main
     _Lights_Control
       _LightsPointSelect
       ___awdiv
     _getLoad_OK
     _getMain_All_Error_Status
     _getMain_All_LightsStatus
     _setLights_Main
       _LightsPointSelect
       _getLights_Allow_Condition
         _getLoad_OK
       _setLights
         _setLED
           _LedPointSelect
         _setLights_Line
   _Load_Initialization
     _setLoad_AH_AL_Restore
   _Load_Main
     ___lwdiv
     ___wmul
     _getLight_LoadGO
     _getLight_Load_Status
     _getMain_All_Error_Status
     _getMain_All_LightsStatus
     _getMain_Lights_Count
     _setLoad_AH_AL_Restore
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _PIR_Initialization
   _PIR_Main
     _getCDS_Status
     _getLights_Status
       _LightsPointSelect
     _getMain_All_Error_Status
     _setLED
       _LedPointSelect
     _setLights_SwOff
       _LightsPointSelect
       _setLights_Trigger
         _LightsPointSelect
     _setLights_SwOn
       _LightsPointSelect
       _getLights_Status
         _LightsPointSelect
       _setLights_Trigger
         _LightsPointSelect
   _SYSC_Initialization
     _setSYSC_Initialization
   _SYSC_Main
     _setSYSC_Main
       _getMain_All_Error_Status
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       _getMain_All_Error_Status
       _getMain_All_LightsStatus
   _WDT_Main
     _WDT_Clearing
   _getCDS_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getLoad_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getPIR_AD
     ___awdiv
     ___lwdiv
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getTemp_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_MainTimer

 _ISR (ROOT)
   _TMR1_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      94       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      44       5       85.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      46       7       87.5%
BITBANK2            10      0       0       8        0.0%
BANK2               10      0       0       9        0.0%
DATA                 0      0      94      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Fri Feb 13 16:09:49 2015

                      _WDT_Clearing 0002           getMain_Lights_Count@count 0074  
                      ___awdiv@sign 0052                      setTemp_Main@AD 0057  
                                fsr 0004                 ___wmul@multiplicand 004F  
                               l117 0D99                                 l254 0B92  
                               l700 0411                                 l621 0608  
                               l710 03EA                                 l702 0268  
                               l711 03E8                                 l703 0264  
                               l704 025E                                 l716 0394  
                               l900 0059                                 l820 0782  
                               l590 0DD9                                 l591 0DF6  
                               l831 077E                                 l906 0091  
                               l826 0728                                 l595 0DF2  
                               l908 00A4                                 l898 0211  
                               l899 008B                                 _GIE 005F  
                               _RB2 0032                                 _LED 0076  
                               _RB3 0033                                 _RA5 002D  
                               _RA6 002E                                 _RA7 002F  
                               _PS0 0408                                 _PS1 0409  
                               _PS2 040A                                 _ISR 0C04  
                               _PSA 040B                                 _WDT 0035  
                 ??_setLights_SwOff 0076                                 _Cmd 0037  
            getAll_Lights_Line@line 0074                                 fsr0 0004  
                               indf 0000                     __end_of_ADC_Set 0AD8  
         __end_of_LightsPointSelect 0B0B                    _getLights_Status 0B67  
           __size_of_Lights_Control 0083                                ?_ISR 0070  
                        Load_Main@i 005C                                l1111 0B2A  
                              l1263 0CB6                                l3207 0DD5  
                              l1384 0D12                                l3217 0DED  
                              l3209 0DDD                      _Load_Main$2389 0057  
                              l5021 0355                                l5103 0CB7  
                              l5031 0386                                l3513 073B  
                              l4403 0F46                                l5027 0365  
                              l5131 007B                                l3507 072A  
                              l3515 073E                                l4413 0F53  
                              l5301 05AB                                l5213 0170  
                              l5205 013F                                l3463 0AFF  
                              l3199 0DC9                                l4431 0F6E  
                              l4407 0F4A                                l5303 05DA  
                              l5311 05FA                                l4503 0BFC  
                              l5039 03B1                                l4417 0F57  
                              l4601 0F2E                                l5049 03CA  
                              l5217 01A2                                l4435 0F76  
                              l4427 0F6A                                l5307 05EC  
                              l4515 06A4                                l5235 01E1  
                              l5219 01B1                                l3571 0E6A  
                              l3539 076E                                l4611 0C95  
                              l4453 0F88                                l4461 0F94  
                              l4533 06CF                                l4701 0D7F  
                              l5085 03FE                                l5181 00DE  
                              l3565 0E4F                                l3549 077D  
                              l4551 0706                                l4615 0C9B  
                              l4457 0F8E                                l5281 0571  
                              l4641 07AD                                l4537 06E2  
                              l4529 06C8                                l5185 00EA  
                              l5169 00C7                                l4609 0C92  
                              l5345 0FB5                                l5291 05A4  
                              l5275 0562                                l5187 00EB  
                              l4661 07E7                                l4645 07B3  
                              l4733 0D08                                l5197 012B  
                              l5357 0FD8                                l5287 0598  
                              l4655 07C5                                l4575 0EEF  
                              l4719 0658                                l4831 0EB7  
                              l4911 04C1                                l5289 0575  
                              l4657 07D1                                l4649 07B9  
                              l4593 0F1B                                l4585 0EF7  
                              l4569 0EE4                                l4761 0E26  
                              l4753 0E02                                l4921 04EF  
                              l4905 04A5                                l5299 05CE  
                              l4659 07D9                                l4587 0F05  
                              l4755 0E10                                l4827 0EAF  
                              l4819 0E9B                                l4677 0D01  
                              l4597 0F26                                l4765 0E31  
                              l4941 0545                                l4847 0ED3  
                              l4935 0537                                l4927 050B  
                              l4863 0D49                                l3887 0C60  
                              l4891 0481                                l4883 046B  
                              l4789 0DA4                                l4973 0267  
                              l4957 0248                                l4895 048C  
                              l4887 0476                                l4879 0460  
                              l4995 02CA                                l4989 028E  
             _myMain_Initialization 0A94                        __CFG_WDTE$ON 0000  
                              u3365 0E76                                u5305 0F06  
                              u5315 0F12                                u5155 0BBB  
                              _PEIE 005E                                u5325 0F1C  
                              u6215 028C                                u5440 07CE  
                              u5600 0654                                u6225 02C8  
                              u6315 03A9                                u6235 031F  
                              u5460 07E4                                u5285 0EFA  
                              u5625 0677                                u5715 0E11  
                              u5725 0E1D                                u5735 0E27  
                              u5655 0D13                                u5825 0DB4  
                              u5585 0640                                u5665 0D1A  
                              u6715 0194                                u5695 0E05  
                              u6735 01C1                                u6665 0109  
                              u6675 0121                                u6860 05A1  
                              u6695 0158                                u6880 05D7  
                              u6865 057E                                u6785 01FE  
                              u6885 05B4                                __CDS 002E  
           ?_setSYSC_Initialization 0070                                _WPUB 0095  
                              _SYSC 0020                                __PIR 00A0  
                              _Load 00CA                                _Temp 0039  
                              _main 0F9A                                btemp 007E  
                   __end_of_WDT_Set 0B58                                ltemp 007E  
                              start 0011                                ttemp 007E  
                              wtemp 007E                    __end_of_CDS_Main 0DBA  
      __size_of_Temp_Initialization 0003                               ??_ISR 0070  
                 _setLights_Trigger 0C6A                       ??_Lights_Main 0076  
                     __CFG_PLLEN$ON 0000                    __end_of_LED_Main 0A98  
                ?_setLights_Trigger 004D                    ??_setPIRLED_Main 004F  
                             ?_main 005F                     __end_of___awdiv 0F35  
                             _ADRES 001E                     ___awdiv@divisor 004D  
                             _T1CON 0010                     __end_of___lwdiv 0E38  
                             i1l426 0C0F                     ___awdiv@counter 0051  
                             _TMR1H 000F                               _TMR1L 000E  
                             _PORTA 0005                               _PORTB 0006  
                             _PORTC 0007                               _TRISA 0085  
                             _TRISB 0086                               _TRISC 0087  
           __end_of_Timeout_Counter 0BC1                               _Light 0077  
               ??_setLights_Trigger 004E                    __end_of_PIR_Main 022F  
                  __end_of_TMR1_ISR 0BD7                    __end_of_TMR1_Set 0B4A  
                             _getAD 0C85      __end_of_setSYSC_Initialization 0AB3  
    getLights_Allow_Condition@allow 004D             __end_of_getLight_LoadGO 0ABE  
                  __end_of_WDT_Main 0B89                       _LightsControl 0079  
                    __CFG_BOREN$OFF 0000        __end_of_getMain_Lights_Count 0B15  
                             pclath 000A                               ltemp0 007E  
                             ltemp1 0082                               ltemp2 0086  
                             ltemp3 0080      __size_of_setLED_Initialization 0012  
     __end_of_setLED_Initialization 0BAD                               ttemp0 007E  
                             ttemp1 0081                               ttemp2 0084  
                             ttemp3 0087                               ttemp4 007F  
                             status 0003                               wtemp0 007E  
                             wtemp1 0080                               wtemp2 0082  
                             wtemp3 0084                               wtemp4 0086  
                             wtemp5 0088                               wtemp6 007F  
                 getPIR_AD@channel1 005A                   getPIR_AD@channel2 0055  
            ?_setLoad_AH_AL_Restore 0070                   setTemp_Main@error 0053  
                    _setLights_Main 0D56                      _setLights_Line 0B2E  
                   __initialization 0013                      _setLights_SwOn 0CE1  
                __size_of_SYSC_Main 0003           __end_of_setLights_Trigger 0C85  
                      __end_of_main 1000                    __end_of_Fosc_Set 0AB8  
    getMain_All_LightsStatus@status 0074                      _Exception_Main 0547  
                         ??_ADC_Set 0074                              ??_main 0063  
             PIR_Main@Enable_Switch 0059                 __end_of_Lights_Main 0CBF  
        __size_of_LightsPointSelect 000A            _getMain_All_LightsStatus 07F7  
                            ?_getAD 0074              ?_myMain_Initialization 0070  
                            _ADCON0 001F                              _ADCON1 009F  
                  ___awdiv@dividend 004F                           ??_WDT_Set 0074  
                            _ANSELA 0185                              _ANSELB 0186  
          _getMain_All_Error_Status 0DBA                              i1l3705 0BD1  
                            _FVRCON 009D              getLights_Status@lights 004D  
                            _PIRLED 002A                              _OSCCON 0090  
                __size_of_Load_Main 01EA                              _TMR1IE 0460  
                            _TMR1IF 0060                              _IO_Set 0C36  
              Exception_Main@i_2140 0059              getLights_Status@status 004E  
            __end_of_setLights_Main 0D86              __end_of_setLights_Line 0B3C  
            __end_of_setLights_SwOn 0D06        __size_of_SYSC_Initialization 0003  
        __end_of_Mcu_Initialization 0B67                              _Lights 0078  
                            _Timer1 0032         __size_of_CDS_Initialization 0004  
           ??_Lights_Initialization 0076              __end_of_Exception_Main 0609  
              Exception_Main@lights 0054                              ___wmul 0D06  
                         ??___awdiv 0074                           ??___lwdiv 0074  
              Exception_Main@status 0056                              _setLED 0F35  
                            _myMain 0025                    ___awdiv@quotient 0053  
                __size_of_Temp_Main 0003                Load_Main@LightsCount 005B  
       __end_of_Load_Initialization 0A9B     getLights_Allow_Condition@lights 0070  
                            saved_w 007E                    setLights_SwOn@sw 0050  
                  ?_Timeout_Counter 0070         getMain_Lights_Count@status1 0075  
                 __end_of_SYSC_Main 0AA1                      _Lights_Control 0609  
           __size_of_LedPointSelect 0012                           ?_CDS_Main 0070  
                setTemp_Main@TempGO 0054                    ?_getLight_LoadGO 0070  
       __size_of_PIR_Initialization 000B             __end_of__initialization 0023  
                         ?_LED_Main 0070                       ?_my_MainTimer 0070  
                   ?_setLights_Main 0070                     ?_setLights_Line 0070  
                   ?_setLights_SwOn 0070                       ?_setSYSC_Main 0070  
                   _setLights_SwOff 0C1C          __size_of_setLights_Trigger 001B  
                    __pcstackCOMMON 0070                  __size_of_getCDS_AD 0022  
                   ?_Exception_Main 0070            __end_of_getLights_Status 0B78  
                     __end_of_getAD 0CA1                           ?_PIR_Main 0070  
                         ?_TMR1_ISR 0070       __size_of_getLight_Load_Status 0006  
                         ?_TMR1_Set 0070              setLoad_AH_AL_Restore@i 0075  
                _LED_Initialization 0AD8                  __size_of_getPIR_AD 012E  
                       _Lights_Main 0CA1            _setLights_Initialization 0ACA  
              _getMain_Lights_Count 0B0B                           ?_WDT_Main 0070  
                 __end_of_Load_Main 0419          __end_of_set_TimeoutCleared 0ACA  
               ?_LED_Initialization 0070              __end_of_Lights_Control 068C  
                           ??_getAD 0075                 _Temp_Initialization 0AA1  
                        ??_CDS_Main 004D                          __pbssBANK0 0020  
                        __pbssBANK1 00A0                           ?_Fosc_Set 0070  
       __size_of_getAll_Lights_Line 0009                   __end_of_Temp_Main 0AA7  
                           ?_IO_Set 0070                     __CFG_VCAPEN$DIS 0000  
                    ??_my_MainTimer 0074                          ??_LED_Main 0076  
                    ??_setSYSC_Main 0075                ??_LED_Initialization 0076  
                 LedPointSelect@led 0075                          __pmaintext 0F9A  
        ?_getLights_Allow_Condition 0070                ?_Temp_Initialization 0070  
              PIR_Main@LightsStatus 005E                             ?___wmul 004D  
                        ??_PIR_Main 0053                          ??_TMR1_ISR 0070  
                     ?_setTemp_Main 0070                  __size_of_setLights 007F  
                        _getLoad_AD 0E7C                          ??_TMR1_Set 0074  
                        __pintentry 0004                          _getLoad_OK 0AE0  
                           ?_setLED 004D             setLights_Trigger@lights 004F  
             ?_getMain_Lights_Count 0070                             _ADC_Set 0AD1  
                        _getTemp_AD 0D2B                          ??_WDT_Main 0074  
            __size_of_getCDS_Status 0008                     ?_Lights_Control 0070  
                 __end_of_getCDS_AD 0CE1                             _WDT_Set 0B4A  
                     getPIR_AD@VRAD 005C                          ??_Fosc_Set 0074  
                 __end_of_getPIR_AD 0547             ??_setLoad_AH_AL_Restore 0074  
           __end_of_setLights_SwOff 0C36      _getLights_Allow_Condition$4224 004E  
                   __size_of_IO_Set 001A                          getCDS_AD@i 0050  
                        getCDS_AD@j 0051                             _Lights1 0040  
                           _VarLED1 0045                             _VarLED2 0049  
             ??_Temp_Initialization 0074                      ??_setTemp_Main 0075  
                           ___awdiv 0ED8                     __size_of___wmul 0025  
                           ___lwdiv 0DF8          ??_getMain_All_LightsStatus 0074  
                       PIR_Main@cds 005D                     __size_of_setLED 0065  
                           __ptext0 0000                             __ptext1 0C50  
                           __ptext2 0A94                             __ptext3 0D2B  
                           __ptext4 0419                             __ptext5 0E7C  
                           __ptext6 0CBF                             __ptext7 0C85  
                           __ptext8 0AC4                             __ptext9 0BAD  
                        getPIR_AD@i 005D                          getPIR_AD@j 0059  
                      __size_of_ISR 0018          ??_getMain_All_Error_Status 0074  
               _SYSC_Initialization 0A9B             ??_myMain_Initialization 0074  
          ??_setTemp_Initialization 0074                      _LedPointSelect 0B89  
                   getTemp_AD@ADRES 0050                             clrloop0 0AF1  
                 __end_of_setLights 070B                end_of_initialization 0023  
                     _getCDS_Status 0AE8                ?_SYSC_Initialization 0070  
             _setLED_Initialization 0B9B                   setLights_SwOff@sw 0050  
                       ?_getLoad_AD 0070      __size_of_Lights_Initialization 0004  
                       ?_getLoad_OK 0070              ??_getMain_Lights_Count 0074  
     __end_of_Lights_Initialization 0AAF                         ?_getTemp_AD 0070  
          setLED_Initialization@led 004F             setTemp_Main@DangerValue 0056  
                _Mcu_Initialization 0B58                __end_of_my_MainTimer 0C6A  
              __end_of_setSYSC_Main 0E7C              __end_of_LedPointSelect 0B9B  
          Load_Main@ErrorCountValue 0059                 setPIRLED_Main@count 0050  
               ?_Mcu_Initialization 0070             __size_of_setPIRLED_Main 0071  
                  ??_setLights_Main 0076                    ??_setLights_Line 0074  
              setLights_Main@lights 0052                    ??_setLights_SwOn 0076  
                         _SYSC_Main 0A9E     getMain_All_Error_Status@command 0051  
                 __size_of_CDS_Main 0034                      ?_getCDS_Status 0070  
                  ?_setLights_SwOff 0070               ??_SYSC_Initialization 0074  
                  ??_Exception_Main 0053                      __end_of_IO_Set 0C50  
        __end_of_CDS_Initialization 0AAB          ??_setLights_Initialization 0076  
                 __size_of_LED_Main 0003                ??_Mcu_Initialization 0075  
                     ?_WDT_Clearing 0070                   ?_getLights_Status 0070  
                      ?_Lights_Main 0070                      __end_of___wmul 0D2B  
                 __size_of_PIR_Main 0209                   __size_of_TMR1_ISR 0016  
                ??_getLights_Status 0076                   __size_of_TMR1_Set 000E  
                    __end_of_setLED 0F9A            ??_setSYSC_Initialization 0074  
                 __size_of_WDT_Main 0011                 start_initialization 0013  
                   ?_LedPointSelect 0070                setLights_Line@lights 0074  
                         _Load_Main 022F                         __end_of_ISR 0C1C  
        __end_of_PIR_Initialization 0B20        __size_of_Load_Initialization 0003  
      __end_of_getLight_Load_Status 0AC4     __size_of_setTemp_Initialization 0001  
               getCDS_Status@status 0074                __end_of_setTemp_Main 0786  
               __size_of_getLoad_AD 005C                 __size_of_getLoad_OK 0008  
                        ?_SYSC_Main 0070                  _set_TimeoutCleared 0AC4  
                          ??_IO_Set 0074            __size_of_Timeout_Counter 0014  
               __size_of_getTemp_AD 002B              ?_setLED_Initialization 0070  
                 __size_of_Fosc_Set 0005            __size_of_getLight_LoadGO 0006  
                         _Temp_Main 0AA4                     setLights@lights 0051  
               ?_set_TimeoutCleared 0070                      ??_WDT_Clearing 0074  
       ??_getLights_Allow_Condition 0075                 Exception_Main@count 0055  
                   setLights@status 004F                 Exception_Main@error 005B  
                          ??___wmul 0074    __end_of_getMain_All_LightsStatus 0800  
                          ??_setLED 0076                            ?_ADC_Set 0070  
                  ??_Lights_Control 0055    __end_of_getMain_All_Error_Status 0DF8  
                       __pbssCOMMON 0076             Load_Main@Load_RunStatus 005A  
                         ___latbits 0001                          ?_Load_Main 0070  
                     __pcstackBANK0 004D                ??_set_TimeoutCleared 0074  
        __end_of_getAll_Lights_Line 0B01                            ?_WDT_Set 0070  
                   ??_getCDS_Status 0074                       PIR_Main@error 0058  
                         _getCDS_AD 0CBF      __size_of_setLoad_AH_AL_Restore 0016  
     __end_of_setLoad_AH_AL_Restore 0BED                           _getPIR_AD 0419  
       __size_of_LED_Initialization 0008                     Exception_Main@i 0057  
                        ?_Temp_Main 0070                    ___lwdiv@dividend 004F  
                    Load_Main@error 0056              _setTemp_Initialization 0A93  
                     _PIR_Main$2856 005A                            ?___awdiv 004D  
             __size_of_my_MainTimer 001A                            ?___lwdiv 004D  
             __size_of_setSYSC_Main 0044            setLights_Trigger@command 004D  
   __size_of_setSYSC_Initialization 0004           _getLights_Allow_Condition 0BED  
    __size_of_myMain_Initialization 0001       __end_of_myMain_Initialization 0A95  
                    __size_of_getAD 001C                    ___lwdiv@quotient 0052  
                    _setPIRLED_Main 0786                            _CDS_Main 0D86  
                       ??_SYSC_Main 0075         __end_of_Temp_Initialization 0AA4  
                 interrupt_function 0004                          ?_getCDS_AD 004D  
                    ___wmul@product 0074                            _LED_Main 0A95  
                         _setLights 068C                           clear_ram0 0AF0  
  __end_of_setLights_Initialization 0AD1                        _my_MainTimer 0C50  
                        ?_getPIR_AD 0055                        _setSYSC_Main 0E38  
                          _GO_nDONE 00F9                   ??_Timeout_Counter 0074  
              PIR_Main@TriggerValue 005C                            _PIR_Main 0026  
                      ??_getLoad_AD 004D                            _TMR1_ISR 0BC1  
                      ??_getLoad_OK 0074                _getLight_Load_Status 0ABE  
                          _TMR1_Set 0B3C                   ??_getLight_LoadGO 0074  
                      ??_getTemp_AD 004D                            _WDT_Main 0B78  
                  __size_of_ADC_Set 0007                   ___wmul@multiplier 004D  
                    getPIR_AD@VRAD1 005B                __size_of_Lights_Main 001E  
             __size_of_setTemp_Main 007B                         ??_Load_Main 0054  
            __end_of_setPIRLED_Main 07F7      getMain_All_Error_Status@status 0052  
                       getAD@adcon0 0075                         getAD@adcon1 0074  
              __end_of_WDT_Clearing 0004   __size_of_getMain_All_LightsStatus 0009  
         ?_getMain_All_LightsStatus 0070                            _Fosc_Set 0AB3  
                  __size_of_WDT_Set 000E                  __end_of_getLoad_AD 0ED8  
                __end_of_getLoad_OK 0AE8   __size_of_getMain_All_Error_Status 003E  
         ?_getMain_All_Error_Status 0070                          ?_setLights 004F  
                __end_of_getTemp_AD 0D56              _setSYSC_Initialization 0AAF  
                 getLoad_AD@channel 004F                   _DetectSYSC_Signal 0B20  
                          _SwDetect 0038                         ??_Temp_Main 0076  
     _getMain_All_Error_Status$2127 004D       _getMain_All_Error_Status$2128 004F  
               _Load_Initialization 0A98                  ?_DetectSYSC_Signal 0070  
                         setLED@led 004E               ?_getLight_Load_Status 0070  
                      _setTemp_Main 070B                    __size_of___awdiv 005D  
    getLight_Load_Status@loadstatus 0074                    __size_of___lwdiv 0040  
                  ??_LedPointSelect 0074       __size_of_getMain_Lights_Count 000A  
               ??_DetectSYSC_Signal 0074                  _CDS_Initialization 0AA7  
             _Lights_Initialization 0AAB                   getTemp_AD@channel 004F  
                   ?_setPIRLED_Main 0070                     ___lwdiv@divisor 004D  
              ?_Load_Initialization 0070                 ?_CDS_Initialization 0070  
                   ___lwdiv@counter 0051                            __ptext10 0B78  
                          __ptext11 0002                            __ptext20 0026  
                          __ptext12 0AA4                            __ptext21 0AE8  
                          __ptext13 070B                            __ptext30 0B0B  
                          __ptext22 0B15                            __ptext14 0AA1  
                          __ptext31 0ABE                            __ptext23 0B58  
                          __ptext15 0A93                            __ptext40 0B2E  
                          __ptext32 0AB8                            __ptext24 0B4A  
                          __ptext16 0A9E                            __ptext41 0BED  
                          __ptext33 0D06                            __ptext25 0B3C  
                          __ptext17 0E38                            __ptext50 0B9B  
                          __ptext42 0AE0                            __ptext34 0DF8  
                          __ptext26 0C36                            __ptext18 0A9B  
                          __ptext51 0547                            __ptext43 0609  
                          __ptext35 0A98                            __ptext27 0AB3  
                          __ptext19 0AAF                            __ptext60 0DBA  
                          __ptext52 0CE1                            __ptext44 0ED8  
                          __ptext36 0BD7                            __ptext28 0AD1  
                          __ptext61 0AF8                            __ptext53 0B67  
                          __ptext45 0AAB                            __ptext37 0CA1  
                          __ptext29 022F                            __ptext62 0B20  
                          __ptext54 0C1C                            __ptext46 0ACA  
                          __ptext38 0D56                            __ptext63 0D86  
                          __ptext55 0C6A                            __ptext47 0A95  
                          __ptext39 068C                            __ptext64 0AA7  
                          __ptext56 0B01                            __ptext48 0786  
                          __ptext65 0C04                            __ptext57 0F35  
                          __ptext49 0AD8                            __ptext66 0BC1  
                          __ptext58 0B89                            __ptext59 07F7  
         __size_of_getLights_Status 0011         __end_of_SYSC_Initialization 0A9E  
           ??_setLED_Initialization 0076                         ??_getCDS_AD 004E  
                     setLED@command 004D           __end_of_DetectSYSC_Signal 0B2E  
                     __size_of_main 0066                         ??_getPIR_AD 0056  
                _PIR_Initialization 0B15                ??_CDS_Initialization 0074  
       __size_of_Mcu_Initialization 000F            __size_of_setLights_SwOff 001A  
                      getLoad_OK@ok 0074                 ?_PIR_Initialization 0070  
                          main@argc 005F                            main@argv 0061  
 __size_of_setLights_Initialization 0007           ?_setLights_Initialization 0070  
             ??_Load_Initialization 0076                Lights_Control@lights 0057  
              ??_PIR_Initialization 0074                            intlevel1 0000  
__size_of_getLights_Allow_Condition 0017               setTemp_Main@SafeValue 0055  
                       ??_setLights 0050             ?_setTemp_Initialization 0070  
           LightsPointSelect@lights 0075                  _getAll_Lights_Line 0AF8  
                   getLoad_AD@ADRES 0052              ??_getLight_Load_Status 0074  
                       getLoad_AD@i 0053                         getLoad_AD@j 0051  
                       getLoad_AD@k 0050             __size_of_setLights_Main 0030  
           __size_of_setLights_Line 000E             __size_of_setLights_SwOn 0025  
               ?_getAll_Lights_Line 0070               getLight_LoadGO@loadgo 0074  
            ?_Lights_Initialization 0070             __size_of_Exception_Main 00C2  
             __size_of_WDT_Clearing 0002      setLights_Initialization@lights 004D  
       __size_of_set_TimeoutCleared 0006                   _LightsPointSelect 0B01  
              ??_getAll_Lights_Line 0074                  __CFG_FOSC$INTOSCIO 0000  
                ?_LightsPointSelect 0070                     _Timeout_Counter 0BAD  
        __end_of_LED_Initialization 0AE0               __end_of_getCDS_Status 0AF0  
    __end_of_setTemp_Initialization 0A94          __size_of_DetectSYSC_Signal 000E  
                   _getLight_LoadGO 0AB8                   getCDS_AD@channel1 0052  
                 getCDS_AD@channel2 004D   __end_of_getLights_Allow_Condition 0C04  
               ??_LightsPointSelect 0074               _setLoad_AH_AL_Restore 0BD7  
