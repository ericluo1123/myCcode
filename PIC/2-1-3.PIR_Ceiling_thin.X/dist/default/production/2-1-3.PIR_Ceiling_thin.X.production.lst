

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Tue Mar 03 09:46:15 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F723A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,inline,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,inline,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,inline,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,inline,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,inline,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,inline,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,delta=2
    61                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text50,local,class=CODE,merge=1,delta=2
    63                           	psect	text51,local,class=CODE,merge=1,delta=2
    64                           	psect	text52,local,class=CODE,merge=1,delta=2
    65                           	psect	text53,local,class=CODE,merge=1,delta=2
    66                           	psect	text54,local,class=CODE,merge=1,delta=2
    67                           	psect	text55,local,class=CODE,merge=1,delta=2
    68                           	psect	text56,local,class=CODE,merge=1,delta=2
    69                           	psect	text57,local,class=CODE,merge=1,delta=2
    70                           	psect	text58,local,class=CODE,merge=1,delta=2
    71                           	psect	text59,local,class=CODE,merge=1,delta=2
    72                           	psect	text60,local,class=CODE,merge=1,delta=2
    73                           	psect	text61,local,class=CODE,merge=1,delta=2
    74                           	psect	text62,local,class=CODE,merge=1,inline,delta=2
    75                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
    76                           	psect	text64,local,class=CODE,merge=1,inline,delta=2
    77                           	psect	text65,local,class=CODE,merge=1,delta=2
    78                           	psect	intentry,global,class=CODE,delta=2
    79                           	psect	text66,local,class=CODE,merge=1,inline,delta=2
    80                           	dabs	1,0x7E,2
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0089                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  008F                     	;# 
   124  0090                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0095                     	;# 
   131  0095                     	;# 
   132  0096                     	;# 
   133  0096                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009F                     	;# 
   139  0108                     	;# 
   140  0109                     	;# 
   141  010C                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  0185                     	;# 
   148  0186                     	;# 
   149  018C                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0089                     	;# 
   189  008C                     	;# 
   190  008D                     	;# 
   191  008E                     	;# 
   192  008F                     	;# 
   193  0090                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0096                     	;# 
   203  0098                     	;# 
   204  0099                     	;# 
   205  009C                     	;# 
   206  009D                     	;# 
   207  009F                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0186                     	;# 
   218  018C                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000D                     	;# 
   232  000E                     	;# 
   233  000E                     	;# 
   234  000F                     	;# 
   235  0010                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0014                     	;# 
   240  0015                     	;# 
   241  0015                     	;# 
   242  0016                     	;# 
   243  0017                     	;# 
   244  0018                     	;# 
   245  0019                     	;# 
   246  001A                     	;# 
   247  001B                     	;# 
   248  001B                     	;# 
   249  001C                     	;# 
   250  001D                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  0081                     	;# 
   254  0085                     	;# 
   255  0086                     	;# 
   256  0087                     	;# 
   257  0089                     	;# 
   258  008C                     	;# 
   259  008D                     	;# 
   260  008E                     	;# 
   261  008F                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0096                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009F                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0186                     	;# 
   287  018C                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0089                     	;# 
   327  008C                     	;# 
   328  008D                     	;# 
   329  008E                     	;# 
   330  008F                     	;# 
   331  0090                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0094                     	;# 
   337  0095                     	;# 
   338  0095                     	;# 
   339  0096                     	;# 
   340  0096                     	;# 
   341  0098                     	;# 
   342  0099                     	;# 
   343  009C                     	;# 
   344  009D                     	;# 
   345  009F                     	;# 
   346  0108                     	;# 
   347  0109                     	;# 
   348  010C                     	;# 
   349  010C                     	;# 
   350  010D                     	;# 
   351  010D                     	;# 
   352  010E                     	;# 
   353  010F                     	;# 
   354  0185                     	;# 
   355  0186                     	;# 
   356  018C                     	;# 
   357  0000                     	;# 
   358  0001                     	;# 
   359  0002                     	;# 
   360  0003                     	;# 
   361  0004                     	;# 
   362  0005                     	;# 
   363  0006                     	;# 
   364  0007                     	;# 
   365  0009                     	;# 
   366  000A                     	;# 
   367  000B                     	;# 
   368  000C                     	;# 
   369  000D                     	;# 
   370  000E                     	;# 
   371  000E                     	;# 
   372  000F                     	;# 
   373  0010                     	;# 
   374  0011                     	;# 
   375  0012                     	;# 
   376  0013                     	;# 
   377  0014                     	;# 
   378  0015                     	;# 
   379  0015                     	;# 
   380  0016                     	;# 
   381  0017                     	;# 
   382  0018                     	;# 
   383  0019                     	;# 
   384  001A                     	;# 
   385  001B                     	;# 
   386  001B                     	;# 
   387  001C                     	;# 
   388  001D                     	;# 
   389  001E                     	;# 
   390  001F                     	;# 
   391  0081                     	;# 
   392  0085                     	;# 
   393  0086                     	;# 
   394  0087                     	;# 
   395  0089                     	;# 
   396  008C                     	;# 
   397  008D                     	;# 
   398  008E                     	;# 
   399  008F                     	;# 
   400  0090                     	;# 
   401  0091                     	;# 
   402  0092                     	;# 
   403  0093                     	;# 
   404  0093                     	;# 
   405  0094                     	;# 
   406  0095                     	;# 
   407  0095                     	;# 
   408  0096                     	;# 
   409  0096                     	;# 
   410  0098                     	;# 
   411  0099                     	;# 
   412  009C                     	;# 
   413  009D                     	;# 
   414  009F                     	;# 
   415  0108                     	;# 
   416  0109                     	;# 
   417  010C                     	;# 
   418  010C                     	;# 
   419  010D                     	;# 
   420  010D                     	;# 
   421  010E                     	;# 
   422  010F                     	;# 
   423  0185                     	;# 
   424  0186                     	;# 
   425  018C                     	;# 
   426  0000                     	;# 
   427  0001                     	;# 
   428  0002                     	;# 
   429  0003                     	;# 
   430  0004                     	;# 
   431  0005                     	;# 
   432  0006                     	;# 
   433  0007                     	;# 
   434  0009                     	;# 
   435  000A                     	;# 
   436  000B                     	;# 
   437  000C                     	;# 
   438  000D                     	;# 
   439  000E                     	;# 
   440  000E                     	;# 
   441  000F                     	;# 
   442  0010                     	;# 
   443  0011                     	;# 
   444  0012                     	;# 
   445  0013                     	;# 
   446  0014                     	;# 
   447  0015                     	;# 
   448  0015                     	;# 
   449  0016                     	;# 
   450  0017                     	;# 
   451  0018                     	;# 
   452  0019                     	;# 
   453  001A                     	;# 
   454  001B                     	;# 
   455  001B                     	;# 
   456  001C                     	;# 
   457  001D                     	;# 
   458  001E                     	;# 
   459  001F                     	;# 
   460  0081                     	;# 
   461  0085                     	;# 
   462  0086                     	;# 
   463  0087                     	;# 
   464  0089                     	;# 
   465  008C                     	;# 
   466  008D                     	;# 
   467  008E                     	;# 
   468  008F                     	;# 
   469  0090                     	;# 
   470  0091                     	;# 
   471  0092                     	;# 
   472  0093                     	;# 
   473  0093                     	;# 
   474  0094                     	;# 
   475  0095                     	;# 
   476  0095                     	;# 
   477  0096                     	;# 
   478  0096                     	;# 
   479  0098                     	;# 
   480  0099                     	;# 
   481  009C                     	;# 
   482  009D                     	;# 
   483  009F                     	;# 
   484  0108                     	;# 
   485  0109                     	;# 
   486  010C                     	;# 
   487  010C                     	;# 
   488  010D                     	;# 
   489  010D                     	;# 
   490  010E                     	;# 
   491  010F                     	;# 
   492  0185                     	;# 
   493  0186                     	;# 
   494  018C                     	;# 
   495  0000                     	;# 
   496  0001                     	;# 
   497  0002                     	;# 
   498  0003                     	;# 
   499  0004                     	;# 
   500  0005                     	;# 
   501  0006                     	;# 
   502  0007                     	;# 
   503  0009                     	;# 
   504  000A                     	;# 
   505  000B                     	;# 
   506  000C                     	;# 
   507  000D                     	;# 
   508  000E                     	;# 
   509  000E                     	;# 
   510  000F                     	;# 
   511  0010                     	;# 
   512  0011                     	;# 
   513  0012                     	;# 
   514  0013                     	;# 
   515  0014                     	;# 
   516  0015                     	;# 
   517  0015                     	;# 
   518  0016                     	;# 
   519  0017                     	;# 
   520  0018                     	;# 
   521  0019                     	;# 
   522  001A                     	;# 
   523  001B                     	;# 
   524  001B                     	;# 
   525  001C                     	;# 
   526  001D                     	;# 
   527  001E                     	;# 
   528  001F                     	;# 
   529  0081                     	;# 
   530  0085                     	;# 
   531  0086                     	;# 
   532  0087                     	;# 
   533  0089                     	;# 
   534  008C                     	;# 
   535  008D                     	;# 
   536  008E                     	;# 
   537  008F                     	;# 
   538  0090                     	;# 
   539  0091                     	;# 
   540  0092                     	;# 
   541  0093                     	;# 
   542  0093                     	;# 
   543  0094                     	;# 
   544  0095                     	;# 
   545  0095                     	;# 
   546  0096                     	;# 
   547  0096                     	;# 
   548  0098                     	;# 
   549  0099                     	;# 
   550  009C                     	;# 
   551  009D                     	;# 
   552  009F                     	;# 
   553  0108                     	;# 
   554  0109                     	;# 
   555  010C                     	;# 
   556  010C                     	;# 
   557  010D                     	;# 
   558  010D                     	;# 
   559  010E                     	;# 
   560  010F                     	;# 
   561  0185                     	;# 
   562  0186                     	;# 
   563  018C                     	;# 
   564  0000                     	;# 
   565  0001                     	;# 
   566  0002                     	;# 
   567  0003                     	;# 
   568  0004                     	;# 
   569  0005                     	;# 
   570  0006                     	;# 
   571  0007                     	;# 
   572  0009                     	;# 
   573  000A                     	;# 
   574  000B                     	;# 
   575  000C                     	;# 
   576  000D                     	;# 
   577  000E                     	;# 
   578  000E                     	;# 
   579  000F                     	;# 
   580  0010                     	;# 
   581  0011                     	;# 
   582  0012                     	;# 
   583  0013                     	;# 
   584  0014                     	;# 
   585  0015                     	;# 
   586  0015                     	;# 
   587  0016                     	;# 
   588  0017                     	;# 
   589  0018                     	;# 
   590  0019                     	;# 
   591  001A                     	;# 
   592  001B                     	;# 
   593  001B                     	;# 
   594  001C                     	;# 
   595  001D                     	;# 
   596  001E                     	;# 
   597  001F                     	;# 
   598  0081                     	;# 
   599  0085                     	;# 
   600  0086                     	;# 
   601  0087                     	;# 
   602  0089                     	;# 
   603  008C                     	;# 
   604  008D                     	;# 
   605  008E                     	;# 
   606  008F                     	;# 
   607  0090                     	;# 
   608  0091                     	;# 
   609  0092                     	;# 
   610  0093                     	;# 
   611  0093                     	;# 
   612  0094                     	;# 
   613  0095                     	;# 
   614  0095                     	;# 
   615  0096                     	;# 
   616  0096                     	;# 
   617  0098                     	;# 
   618  0099                     	;# 
   619  009C                     	;# 
   620  009D                     	;# 
   621  009F                     	;# 
   622  0108                     	;# 
   623  0109                     	;# 
   624  010C                     	;# 
   625  010C                     	;# 
   626  010D                     	;# 
   627  010D                     	;# 
   628  010E                     	;# 
   629  010F                     	;# 
   630  0185                     	;# 
   631  0186                     	;# 
   632  018C                     	;# 
   633  0000                     	;# 
   634  0001                     	;# 
   635  0002                     	;# 
   636  0003                     	;# 
   637  0004                     	;# 
   638  0005                     	;# 
   639  0006                     	;# 
   640  0007                     	;# 
   641  0009                     	;# 
   642  000A                     	;# 
   643  000B                     	;# 
   644  000C                     	;# 
   645  000D                     	;# 
   646  000E                     	;# 
   647  000E                     	;# 
   648  000F                     	;# 
   649  0010                     	;# 
   650  0011                     	;# 
   651  0012                     	;# 
   652  0013                     	;# 
   653  0014                     	;# 
   654  0015                     	;# 
   655  0015                     	;# 
   656  0016                     	;# 
   657  0017                     	;# 
   658  0018                     	;# 
   659  0019                     	;# 
   660  001A                     	;# 
   661  001B                     	;# 
   662  001B                     	;# 
   663  001C                     	;# 
   664  001D                     	;# 
   665  001E                     	;# 
   666  001F                     	;# 
   667  0081                     	;# 
   668  0085                     	;# 
   669  0086                     	;# 
   670  0087                     	;# 
   671  0089                     	;# 
   672  008C                     	;# 
   673  008D                     	;# 
   674  008E                     	;# 
   675  008F                     	;# 
   676  0090                     	;# 
   677  0091                     	;# 
   678  0092                     	;# 
   679  0093                     	;# 
   680  0093                     	;# 
   681  0094                     	;# 
   682  0095                     	;# 
   683  0095                     	;# 
   684  0096                     	;# 
   685  0096                     	;# 
   686  0098                     	;# 
   687  0099                     	;# 
   688  009C                     	;# 
   689  009D                     	;# 
   690  009F                     	;# 
   691  0108                     	;# 
   692  0109                     	;# 
   693  010C                     	;# 
   694  010C                     	;# 
   695  010D                     	;# 
   696  010D                     	;# 
   697  010E                     	;# 
   698  010F                     	;# 
   699  0185                     	;# 
   700  0186                     	;# 
   701  018C                     	;# 
   702  0000                     	;# 
   703  0001                     	;# 
   704  0002                     	;# 
   705  0003                     	;# 
   706  0004                     	;# 
   707  0005                     	;# 
   708  0006                     	;# 
   709  0007                     	;# 
   710  0009                     	;# 
   711  000A                     	;# 
   712  000B                     	;# 
   713  000C                     	;# 
   714  000D                     	;# 
   715  000E                     	;# 
   716  000E                     	;# 
   717  000F                     	;# 
   718  0010                     	;# 
   719  0011                     	;# 
   720  0012                     	;# 
   721  0013                     	;# 
   722  0014                     	;# 
   723  0015                     	;# 
   724  0015                     	;# 
   725  0016                     	;# 
   726  0017                     	;# 
   727  0018                     	;# 
   728  0019                     	;# 
   729  001A                     	;# 
   730  001B                     	;# 
   731  001B                     	;# 
   732  001C                     	;# 
   733  001D                     	;# 
   734  001E                     	;# 
   735  001F                     	;# 
   736  0081                     	;# 
   737  0085                     	;# 
   738  0086                     	;# 
   739  0087                     	;# 
   740  0089                     	;# 
   741  008C                     	;# 
   742  008D                     	;# 
   743  008E                     	;# 
   744  008F                     	;# 
   745  0090                     	;# 
   746  0091                     	;# 
   747  0092                     	;# 
   748  0093                     	;# 
   749  0093                     	;# 
   750  0094                     	;# 
   751  0095                     	;# 
   752  0095                     	;# 
   753  0096                     	;# 
   754  0096                     	;# 
   755  0098                     	;# 
   756  0099                     	;# 
   757  009C                     	;# 
   758  009D                     	;# 
   759  009F                     	;# 
   760  0108                     	;# 
   761  0109                     	;# 
   762  010C                     	;# 
   763  010C                     	;# 
   764  010D                     	;# 
   765  010D                     	;# 
   766  010E                     	;# 
   767  010F                     	;# 
   768  0185                     	;# 
   769  0186                     	;# 
   770  018C                     	;# 
   771  0000                     	;# 
   772  0001                     	;# 
   773  0002                     	;# 
   774  0003                     	;# 
   775  0004                     	;# 
   776  0005                     	;# 
   777  0006                     	;# 
   778  0007                     	;# 
   779  0009                     	;# 
   780  000A                     	;# 
   781  000B                     	;# 
   782  000C                     	;# 
   783  000D                     	;# 
   784  000E                     	;# 
   785  000E                     	;# 
   786  000F                     	;# 
   787  0010                     	;# 
   788  0011                     	;# 
   789  0012                     	;# 
   790  0013                     	;# 
   791  0014                     	;# 
   792  0015                     	;# 
   793  0015                     	;# 
   794  0016                     	;# 
   795  0017                     	;# 
   796  0018                     	;# 
   797  0019                     	;# 
   798  001A                     	;# 
   799  001B                     	;# 
   800  001B                     	;# 
   801  001C                     	;# 
   802  001D                     	;# 
   803  001E                     	;# 
   804  001F                     	;# 
   805  0081                     	;# 
   806  0085                     	;# 
   807  0086                     	;# 
   808  0087                     	;# 
   809  0089                     	;# 
   810  008C                     	;# 
   811  008D                     	;# 
   812  008E                     	;# 
   813  008F                     	;# 
   814  0090                     	;# 
   815  0091                     	;# 
   816  0092                     	;# 
   817  0093                     	;# 
   818  0093                     	;# 
   819  0094                     	;# 
   820  0095                     	;# 
   821  0095                     	;# 
   822  0096                     	;# 
   823  0096                     	;# 
   824  0098                     	;# 
   825  0099                     	;# 
   826  009C                     	;# 
   827  009D                     	;# 
   828  009F                     	;# 
   829  0108                     	;# 
   830  0109                     	;# 
   831  010C                     	;# 
   832  010C                     	;# 
   833  010D                     	;# 
   834  010D                     	;# 
   835  010E                     	;# 
   836  010F                     	;# 
   837  0185                     	;# 
   838  0186                     	;# 
   839  018C                     	;# 
   840  0000                     	;# 
   841  0001                     	;# 
   842  0002                     	;# 
   843  0003                     	;# 
   844  0004                     	;# 
   845  0005                     	;# 
   846  0006                     	;# 
   847  0007                     	;# 
   848  0009                     	;# 
   849  000A                     	;# 
   850  000B                     	;# 
   851  000C                     	;# 
   852  000D                     	;# 
   853  000E                     	;# 
   854  000E                     	;# 
   855  000F                     	;# 
   856  0010                     	;# 
   857  0011                     	;# 
   858  0012                     	;# 
   859  0013                     	;# 
   860  0014                     	;# 
   861  0015                     	;# 
   862  0015                     	;# 
   863  0016                     	;# 
   864  0017                     	;# 
   865  0018                     	;# 
   866  0019                     	;# 
   867  001A                     	;# 
   868  001B                     	;# 
   869  001B                     	;# 
   870  001C                     	;# 
   871  001D                     	;# 
   872  001E                     	;# 
   873  001F                     	;# 
   874  0081                     	;# 
   875  0085                     	;# 
   876  0086                     	;# 
   877  0087                     	;# 
   878  0089                     	;# 
   879  008C                     	;# 
   880  008D                     	;# 
   881  008E                     	;# 
   882  008F                     	;# 
   883  0090                     	;# 
   884  0091                     	;# 
   885  0092                     	;# 
   886  0093                     	;# 
   887  0093                     	;# 
   888  0094                     	;# 
   889  0095                     	;# 
   890  0095                     	;# 
   891  0096                     	;# 
   892  0096                     	;# 
   893  0098                     	;# 
   894  0099                     	;# 
   895  009C                     	;# 
   896  009D                     	;# 
   897  009F                     	;# 
   898  0108                     	;# 
   899  0109                     	;# 
   900  010C                     	;# 
   901  010C                     	;# 
   902  010D                     	;# 
   903  010D                     	;# 
   904  010E                     	;# 
   905  010F                     	;# 
   906  0185                     	;# 
   907  0186                     	;# 
   908  018C                     	;# 
   909  0000                     	;# 
   910  0001                     	;# 
   911  0002                     	;# 
   912  0003                     	;# 
   913  0004                     	;# 
   914  0005                     	;# 
   915  0006                     	;# 
   916  0007                     	;# 
   917  0009                     	;# 
   918  000A                     	;# 
   919  000B                     	;# 
   920  000C                     	;# 
   921  000D                     	;# 
   922  000E                     	;# 
   923  000E                     	;# 
   924  000F                     	;# 
   925  0010                     	;# 
   926  0011                     	;# 
   927  0012                     	;# 
   928  0013                     	;# 
   929  0014                     	;# 
   930  0015                     	;# 
   931  0015                     	;# 
   932  0016                     	;# 
   933  0017                     	;# 
   934  0018                     	;# 
   935  0019                     	;# 
   936  001A                     	;# 
   937  001B                     	;# 
   938  001B                     	;# 
   939  001C                     	;# 
   940  001D                     	;# 
   941  001E                     	;# 
   942  001F                     	;# 
   943  0081                     	;# 
   944  0085                     	;# 
   945  0086                     	;# 
   946  0087                     	;# 
   947  0089                     	;# 
   948  008C                     	;# 
   949  008D                     	;# 
   950  008E                     	;# 
   951  008F                     	;# 
   952  0090                     	;# 
   953  0091                     	;# 
   954  0092                     	;# 
   955  0093                     	;# 
   956  0093                     	;# 
   957  0094                     	;# 
   958  0095                     	;# 
   959  0095                     	;# 
   960  0096                     	;# 
   961  0096                     	;# 
   962  0098                     	;# 
   963  0099                     	;# 
   964  009C                     	;# 
   965  009D                     	;# 
   966  009F                     	;# 
   967  0108                     	;# 
   968  0109                     	;# 
   969  010C                     	;# 
   970  010C                     	;# 
   971  010D                     	;# 
   972  010D                     	;# 
   973  010E                     	;# 
   974  010F                     	;# 
   975  0185                     	;# 
   976  0186                     	;# 
   977  018C                     	;# 
   978  0000                     	;# 
   979  0001                     	;# 
   980  0002                     	;# 
   981  0003                     	;# 
   982  0004                     	;# 
   983  0005                     	;# 
   984  0006                     	;# 
   985  0007                     	;# 
   986  0009                     	;# 
   987  000A                     	;# 
   988  000B                     	;# 
   989  000C                     	;# 
   990  000D                     	;# 
   991  000E                     	;# 
   992  000E                     	;# 
   993  000F                     	;# 
   994  0010                     	;# 
   995  0011                     	;# 
   996  0012                     	;# 
   997  0013                     	;# 
   998  0014                     	;# 
   999  0015                     	;# 
  1000  0015                     	;# 
  1001  0016                     	;# 
  1002  0017                     	;# 
  1003  0018                     	;# 
  1004  0019                     	;# 
  1005  001A                     	;# 
  1006  001B                     	;# 
  1007  001B                     	;# 
  1008  001C                     	;# 
  1009  001D                     	;# 
  1010  001E                     	;# 
  1011  001F                     	;# 
  1012  0081                     	;# 
  1013  0085                     	;# 
  1014  0086                     	;# 
  1015  0087                     	;# 
  1016  0089                     	;# 
  1017  008C                     	;# 
  1018  008D                     	;# 
  1019  008E                     	;# 
  1020  008F                     	;# 
  1021  0090                     	;# 
  1022  0091                     	;# 
  1023  0092                     	;# 
  1024  0093                     	;# 
  1025  0093                     	;# 
  1026  0094                     	;# 
  1027  0095                     	;# 
  1028  0095                     	;# 
  1029  0096                     	;# 
  1030  0096                     	;# 
  1031  0098                     	;# 
  1032  0099                     	;# 
  1033  009C                     	;# 
  1034  009D                     	;# 
  1035  009F                     	;# 
  1036  0108                     	;# 
  1037  0109                     	;# 
  1038  010C                     	;# 
  1039  010C                     	;# 
  1040  010D                     	;# 
  1041  010D                     	;# 
  1042  010E                     	;# 
  1043  010F                     	;# 
  1044  0185                     	;# 
  1045  0186                     	;# 
  1046  018C                     	;# 
  1047  0000                     	;# 
  1048  0001                     	;# 
  1049  0002                     	;# 
  1050  0003                     	;# 
  1051  0004                     	;# 
  1052  0005                     	;# 
  1053  0006                     	;# 
  1054  0007                     	;# 
  1055  0009                     	;# 
  1056  000A                     	;# 
  1057  000B                     	;# 
  1058  000C                     	;# 
  1059  000D                     	;# 
  1060  000E                     	;# 
  1061  000E                     	;# 
  1062  000F                     	;# 
  1063  0010                     	;# 
  1064  0011                     	;# 
  1065  0012                     	;# 
  1066  0013                     	;# 
  1067  0014                     	;# 
  1068  0015                     	;# 
  1069  0015                     	;# 
  1070  0016                     	;# 
  1071  0017                     	;# 
  1072  0018                     	;# 
  1073  0019                     	;# 
  1074  001A                     	;# 
  1075  001B                     	;# 
  1076  001B                     	;# 
  1077  001C                     	;# 
  1078  001D                     	;# 
  1079  001E                     	;# 
  1080  001F                     	;# 
  1081  0081                     	;# 
  1082  0085                     	;# 
  1083  0086                     	;# 
  1084  0087                     	;# 
  1085  0089                     	;# 
  1086  008C                     	;# 
  1087  008D                     	;# 
  1088  008E                     	;# 
  1089  008F                     	;# 
  1090  0090                     	;# 
  1091  0091                     	;# 
  1092  0092                     	;# 
  1093  0093                     	;# 
  1094  0093                     	;# 
  1095  0094                     	;# 
  1096  0095                     	;# 
  1097  0095                     	;# 
  1098  0096                     	;# 
  1099  0096                     	;# 
  1100  0098                     	;# 
  1101  0099                     	;# 
  1102  009C                     	;# 
  1103  009D                     	;# 
  1104  009F                     	;# 
  1105  0108                     	;# 
  1106  0109                     	;# 
  1107  010C                     	;# 
  1108  010C                     	;# 
  1109  010D                     	;# 
  1110  010D                     	;# 
  1111  010E                     	;# 
  1112  010F                     	;# 
  1113  0185                     	;# 
  1114  0186                     	;# 
  1115  018C                     	;# 
  1116  0000                     	;# 
  1117  0001                     	;# 
  1118  0002                     	;# 
  1119  0003                     	;# 
  1120  0004                     	;# 
  1121  0005                     	;# 
  1122  0006                     	;# 
  1123  0007                     	;# 
  1124  0009                     	;# 
  1125  000A                     	;# 
  1126  000B                     	;# 
  1127  000C                     	;# 
  1128  000D                     	;# 
  1129  000E                     	;# 
  1130  000E                     	;# 
  1131  000F                     	;# 
  1132  0010                     	;# 
  1133  0011                     	;# 
  1134  0012                     	;# 
  1135  0013                     	;# 
  1136  0014                     	;# 
  1137  0015                     	;# 
  1138  0015                     	;# 
  1139  0016                     	;# 
  1140  0017                     	;# 
  1141  0018                     	;# 
  1142  0019                     	;# 
  1143  001A                     	;# 
  1144  001B                     	;# 
  1145  001B                     	;# 
  1146  001C                     	;# 
  1147  001D                     	;# 
  1148  001E                     	;# 
  1149  001F                     	;# 
  1150  0081                     	;# 
  1151  0085                     	;# 
  1152  0086                     	;# 
  1153  0087                     	;# 
  1154  0089                     	;# 
  1155  008C                     	;# 
  1156  008D                     	;# 
  1157  008E                     	;# 
  1158  008F                     	;# 
  1159  0090                     	;# 
  1160  0091                     	;# 
  1161  0092                     	;# 
  1162  0093                     	;# 
  1163  0093                     	;# 
  1164  0094                     	;# 
  1165  0095                     	;# 
  1166  0095                     	;# 
  1167  0096                     	;# 
  1168  0096                     	;# 
  1169  0098                     	;# 
  1170  0099                     	;# 
  1171  009C                     	;# 
  1172  009D                     	;# 
  1173  009F                     	;# 
  1174  0108                     	;# 
  1175  0109                     	;# 
  1176  010C                     	;# 
  1177  010C                     	;# 
  1178  010D                     	;# 
  1179  010D                     	;# 
  1180  010E                     	;# 
  1181  010F                     	;# 
  1182  0185                     	;# 
  1183  0186                     	;# 
  1184  018C                     	;# 
  1185  0000                     	;# 
  1186  0001                     	;# 
  1187  0002                     	;# 
  1188  0003                     	;# 
  1189  0004                     	;# 
  1190  0005                     	;# 
  1191  0006                     	;# 
  1192  0007                     	;# 
  1193  0009                     	;# 
  1194  000A                     	;# 
  1195  000B                     	;# 
  1196  000C                     	;# 
  1197  000D                     	;# 
  1198  000E                     	;# 
  1199  000E                     	;# 
  1200  000F                     	;# 
  1201  0010                     	;# 
  1202  0011                     	;# 
  1203  0012                     	;# 
  1204  0013                     	;# 
  1205  0014                     	;# 
  1206  0015                     	;# 
  1207  0015                     	;# 
  1208  0016                     	;# 
  1209  0017                     	;# 
  1210  0018                     	;# 
  1211  0019                     	;# 
  1212  001A                     	;# 
  1213  001B                     	;# 
  1214  001B                     	;# 
  1215  001C                     	;# 
  1216  001D                     	;# 
  1217  001E                     	;# 
  1218  001F                     	;# 
  1219  0081                     	;# 
  1220  0085                     	;# 
  1221  0086                     	;# 
  1222  0087                     	;# 
  1223  0089                     	;# 
  1224  008C                     	;# 
  1225  008D                     	;# 
  1226  008E                     	;# 
  1227  008F                     	;# 
  1228  0090                     	;# 
  1229  0091                     	;# 
  1230  0092                     	;# 
  1231  0093                     	;# 
  1232  0093                     	;# 
  1233  0094                     	;# 
  1234  0095                     	;# 
  1235  0095                     	;# 
  1236  0096                     	;# 
  1237  0096                     	;# 
  1238  0098                     	;# 
  1239  0099                     	;# 
  1240  009C                     	;# 
  1241  009D                     	;# 
  1242  009F                     	;# 
  1243  0108                     	;# 
  1244  0109                     	;# 
  1245  010C                     	;# 
  1246  010C                     	;# 
  1247  010D                     	;# 
  1248  010D                     	;# 
  1249  010E                     	;# 
  1250  010F                     	;# 
  1251  0185                     	;# 
  1252  0186                     	;# 
  1253  018C                     	;# 
  1254  0000                     	;# 
  1255  0001                     	;# 
  1256  0002                     	;# 
  1257  0003                     	;# 
  1258  0004                     	;# 
  1259  0005                     	;# 
  1260  0006                     	;# 
  1261  0007                     	;# 
  1262  0009                     	;# 
  1263  000A                     	;# 
  1264  000B                     	;# 
  1265  000C                     	;# 
  1266  000D                     	;# 
  1267  000E                     	;# 
  1268  000E                     	;# 
  1269  000F                     	;# 
  1270  0010                     	;# 
  1271  0011                     	;# 
  1272  0012                     	;# 
  1273  0013                     	;# 
  1274  0014                     	;# 
  1275  0015                     	;# 
  1276  0015                     	;# 
  1277  0016                     	;# 
  1278  0017                     	;# 
  1279  0018                     	;# 
  1280  0019                     	;# 
  1281  001A                     	;# 
  1282  001B                     	;# 
  1283  001B                     	;# 
  1284  001C                     	;# 
  1285  001D                     	;# 
  1286  001E                     	;# 
  1287  001F                     	;# 
  1288  0081                     	;# 
  1289  0085                     	;# 
  1290  0086                     	;# 
  1291  0087                     	;# 
  1292  0089                     	;# 
  1293  008C                     	;# 
  1294  008D                     	;# 
  1295  008E                     	;# 
  1296  008F                     	;# 
  1297  0090                     	;# 
  1298  0091                     	;# 
  1299  0092                     	;# 
  1300  0093                     	;# 
  1301  0093                     	;# 
  1302  0094                     	;# 
  1303  0095                     	;# 
  1304  0095                     	;# 
  1305  0096                     	;# 
  1306  0096                     	;# 
  1307  0098                     	;# 
  1308  0099                     	;# 
  1309  009C                     	;# 
  1310  009D                     	;# 
  1311  009F                     	;# 
  1312  0108                     	;# 
  1313  0109                     	;# 
  1314  010C                     	;# 
  1315  010C                     	;# 
  1316  010D                     	;# 
  1317  010D                     	;# 
  1318  010E                     	;# 
  1319  010F                     	;# 
  1320  0185                     	;# 
  1321  0186                     	;# 
  1322  018C                     	;# 
  1323  001F                     _ADCON0	set	31
  1324  001E                     _ADRES	set	30
  1325  0005                     _PORTA	set	5
  1326  0006                     _PORTB	set	6
  1327  0007                     _PORTC	set	7
  1328  0010                     _T1CON	set	16
  1329  000F                     _TMR1H	set	15
  1330  000E                     _TMR1L	set	14
  1331  005F                     _GIE	set	95
  1332  00F9                     _GO_nDONE	set	249
  1333  005E                     _PEIE	set	94
  1334  002D                     _RA5	set	45
  1335  002E                     _RA6	set	46
  1336  002F                     _RA7	set	47
  1337  0032                     _RB2	set	50
  1338  0033                     _RB3	set	51
  1339  0060                     _TMR1IF	set	96
  1340  009F                     _ADCON1	set	159
  1341  009D                     _FVRCON	set	157
  1342  0090                     _OSCCON	set	144
  1343  0085                     _TRISA	set	133
  1344  0086                     _TRISB	set	134
  1345  0087                     _TRISC	set	135
  1346  0095                     _WPUB	set	149
  1347  0408                     _PS0	set	1032
  1348  0409                     _PS1	set	1033
  1349  040A                     _PS2	set	1034
  1350  040B                     _PSA	set	1035
  1351  0460                     _TMR1IE	set	1120
  1352  0185                     _ANSELA	set	389
  1353  0186                     _ANSELB	set	390
  1354                           
  1355                           	psect	text0
  1356  0000                     __ptext0:	
  1357                           ; #config settings
  1358                           
  1359                           
  1360                           ;psect for function _TMR1_ISR
  1361  0000                     
  1362                           	psect	cinit
  1363  0013                     start_initialization:	
  1364  0013                     __initialization:	
  1365                           
  1366                           ; Clear objects allocated to COMMON
  1367  0013  01F6               	clrf	__pbssCOMMON& (0+127)
  1368  0014  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1369  0015  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1370  0016  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  1371                           
  1372                           ; Clear objects allocated to BANK0
  1373  0017  1383               	bcf	3,7	;select IRP bank0
  1374  0018  3020               	movlw	low __pbssBANK0
  1375  0019  0084               	movwf	4
  1376  001A  304D               	movlw	low (__pbssBANK0+45)
  1377  001B  158A  2333  118A   	fcall	clear_ram0
  1378                           
  1379                           ; Clear objects allocated to BANK1
  1380  001E  30A0               	movlw	low __pbssBANK1
  1381  001F  0084               	movwf	4
  1382  0020  30E6               	movlw	low (__pbssBANK1+70)
  1383  0021  158A  2333         	fcall	clear_ram0
  1384  0023                     end_of_initialization:	
  1385                           ;End of C runtime variable initialization code
  1386                           
  1387  0023                     __end_of__initialization:	
  1388  0023  0183               	clrf	3
  1389  0024  158A  2F9A         	ljmp	_main	;jump to C main() function
  1390                           
  1391                           	psect	bssCOMMON
  1392  0076                     __pbssCOMMON:	
  1393  0076                     _LED:	
  1394  0076                     	ds	1
  1395  0077                     _Light:	
  1396  0077                     	ds	1
  1397  0078                     _Lights:	
  1398  0078                     	ds	1
  1399  0079                     _LightsControl:	
  1400  0079                     	ds	1
  1401                           
  1402                           	psect	bssBANK0
  1403  0020                     __pbssBANK0:	
  1404  0020                     _SYSC:	
  1405  0020                     	ds	5
  1406  0025                     _myMain:	
  1407  0025                     	ds	5
  1408  002A                     _PIRLED:	
  1409  002A                     	ds	4
  1410  002E                     __CDS:	
  1411  002E                     	ds	4
  1412  0032                     _Timer1:	
  1413  0032                     	ds	3
  1414  0035                     _WDT:	
  1415  0035                     	ds	2
  1416  0037                     _Cmd:	
  1417  0037                     	ds	1
  1418  0038                     _SwDetect:	
  1419  0038                     	ds	1
  1420  0039                     _Temp:	
  1421  0039                     	ds	7
  1422  0040                     _Lights1:	
  1423  0040                     	ds	5
  1424  0045                     _VarLED1:	
  1425  0045                     	ds	4
  1426  0049                     _VarLED2:	
  1427  0049                     	ds	4
  1428                           
  1429                           	psect	bssBANK1
  1430  00A0                     __pbssBANK1:	
  1431  00A0                     __PIR:	
  1432  00A0                     	ds	42
  1433  00CA                     _Load:	
  1434  00CA                     	ds	28
  1435                           
  1436                           	psect	clrtext
  1437  0B33                     clear_ram0:	
  1438                           ;	Called with FSR containing the base address, and
  1439                           ;	W with the last address+1
  1440                           
  1441  0B33  0064               	clrwdt	;clear the watchdog before getting into this loop
  1442  0B34                     clrloop0:	
  1443  0B34  0180               	clrf	0	;clear RAM location pointed to by FSR
  1444  0B35  0A84               	incf	4,f	;increment pointer
  1445  0B36  0604               	xorwf	4,w	;XOR with final address
  1446  0B37  1903               	btfsc	3,2	;have we reached the end yet?
  1447  0B38  3400               	retlw	0	;all done for this memory range, return
  1448  0B39  0604               	xorwf	4,w	;XOR again to restore value
  1449  0B3A  2B34               	goto	clrloop0	;do the next byte
  1450                           
  1451                           	psect	cstackCOMMON
  1452  0070                     __pcstackCOMMON:	
  1453  0070                     ?_setLED_Initialization:	
  1454  0070                     ?_setPIRLED_Main:	
  1455                           ; 0 bytes @ 0x0
  1456                           
  1457  0070                     ?_Fosc_Set:	
  1458                           ; 0 bytes @ 0x0
  1459                           
  1460  0070                     ?_IO_Set:	
  1461                           ; 0 bytes @ 0x0
  1462                           
  1463  0070                     ?_TMR1_Set:	
  1464                           ; 0 bytes @ 0x0
  1465                           
  1466  0070                     ?_ADC_Set:	
  1467                           ; 0 bytes @ 0x0
  1468                           
  1469  0070                     ?_WDT_Set:	
  1470                           ; 0 bytes @ 0x0
  1471                           
  1472  0070                     ?_TMR1_ISR:	
  1473                           ; 0 bytes @ 0x0
  1474                           
  1475  0070                     ??_TMR1_ISR:	
  1476                           ; 0 bytes @ 0x0
  1477                           
  1478  0070                     ?_Timeout_Counter:	
  1479                           ; 0 bytes @ 0x0
  1480                           
  1481  0070                     ?_set_TimeoutCleared:	
  1482                           ; 0 bytes @ 0x0
  1483                           
  1484  0070                     ?_WDT_Clearing:	
  1485                           ; 0 bytes @ 0x0
  1486                           
  1487  0070                     ?_myMain_Initialization:	
  1488                           ; 0 bytes @ 0x0
  1489                           
  1490  0070                     ?_SYSC_Initialization:	
  1491                           ; 0 bytes @ 0x0
  1492                           
  1493  0070                     ?_Temp_Initialization:	
  1494                           ; 0 bytes @ 0x0
  1495                           
  1496  0070                     ?_Load_Initialization:	
  1497                           ; 0 bytes @ 0x0
  1498                           
  1499  0070                     ?_Lights_Initialization:	
  1500                           ; 0 bytes @ 0x0
  1501                           
  1502  0070                     ?_PIR_Initialization:	
  1503                           ; 0 bytes @ 0x0
  1504                           
  1505  0070                     ?_DetectSYSC_Signal:	
  1506                           ; 0 bytes @ 0x0
  1507                           
  1508  0070                     ?_getLoad_AD:	
  1509                           ; 0 bytes @ 0x0
  1510                           
  1511  0070                     ?_getTemp_AD:	
  1512                           ; 0 bytes @ 0x0
  1513                           
  1514  0070                     ?_my_MainTimer:	
  1515                           ; 0 bytes @ 0x0
  1516                           
  1517  0070                     ?_SYSC_Main:	
  1518                           ; 0 bytes @ 0x0
  1519                           
  1520  0070                     ?_Temp_Main:	
  1521                           ; 0 bytes @ 0x0
  1522                           
  1523  0070                     ?_Load_Main:	
  1524                           ; 0 bytes @ 0x0
  1525                           
  1526  0070                     ?_Lights_Main:	
  1527                           ; 0 bytes @ 0x0
  1528                           
  1529  0070                     ?_PIR_Main:	
  1530                           ; 0 bytes @ 0x0
  1531                           
  1532  0070                     ?_Exception_Main:	
  1533                           ; 0 bytes @ 0x0
  1534                           
  1535  0070                     ?_setLights_SwOn:	
  1536                           ; 0 bytes @ 0x0
  1537                           
  1538  0070                     ?_setLights_SwOff:	
  1539                           ; 0 bytes @ 0x0
  1540                           
  1541  0070                     ?_setLoad_AH_AL_Restore:	
  1542                           ; 0 bytes @ 0x0
  1543                           
  1544  0070                     ?_setTemp_Initialization:	
  1545                           ; 0 bytes @ 0x0
  1546                           
  1547  0070                     ?_setTemp_Main:	
  1548                           ; 0 bytes @ 0x0
  1549                           
  1550  0070                     ?_setSYSC_Initialization:	
  1551                           ; 0 bytes @ 0x0
  1552                           
  1553  0070                     ?_setSYSC_Main:	
  1554                           ; 0 bytes @ 0x0
  1555                           
  1556  0070                     ?_setLights_Initialization:	
  1557                           ; 0 bytes @ 0x0
  1558                           
  1559  0070                     ?_setLights_Main:	
  1560                           ; 0 bytes @ 0x0
  1561                           
  1562  0070                     ?_Lights_Control:	
  1563                           ; 0 bytes @ 0x0
  1564                           
  1565  0070                     ?_setLights_Line:	
  1566                           ; 0 bytes @ 0x0
  1567                           
  1568  0070                     ?_CDS_Initialization:	
  1569                           ; 0 bytes @ 0x0
  1570                           
  1571  0070                     ?_CDS_Main:	
  1572                           ; 0 bytes @ 0x0
  1573                           
  1574  0070                     ?_LedPointSelect:	
  1575                           ; 0 bytes @ 0x0
  1576                           
  1577  0070                     ?_LED_Initialization:	
  1578                           ; 0 bytes @ 0x0
  1579                           
  1580  0070                     ?_LED_Main:	
  1581                           ; 0 bytes @ 0x0
  1582                           
  1583  0070                     ?_Mcu_Initialization:	
  1584                           ; 0 bytes @ 0x0
  1585                           
  1586  0070                     ?_ISR:	
  1587                           ; 0 bytes @ 0x0
  1588                           
  1589  0070                     ??_ISR:	
  1590                           ; 0 bytes @ 0x0
  1591                           
  1592  0070                     ?_WDT_Main:	
  1593                           ; 0 bytes @ 0x0
  1594                           
  1595  0070                     ?_LightsPointSelect:	
  1596                           ; 0 bytes @ 0x0
  1597                           
  1598  0070                     ?_getLights_Status:	
  1599                           ; 0 bytes @ 0x0
  1600                           
  1601  0070                     ?_getAll_Lights_Line:	
  1602                           ; 1 bytes @ 0x0
  1603                           
  1604  0070                     ?_getLight_LoadGO:	
  1605                           ; 1 bytes @ 0x0
  1606                           
  1607  0070                     ?_getLight_Load_Status:	
  1608                           ; 1 bytes @ 0x0
  1609                           
  1610  0070                     ?_getLights_Allow_Condition:	
  1611                           ; 1 bytes @ 0x0
  1612                           
  1613  0070                     ?_getCDS_Status:	
  1614                           ; 1 bytes @ 0x0
  1615                           
  1616  0070                     ?_getMain_All_LightsStatus:	
  1617                           ; 1 bytes @ 0x0
  1618                           
  1619  0070                     ?_getMain_All_Error_Status:	
  1620                           ; 1 bytes @ 0x0
  1621                           
  1622  0070                     ?_getMain_Lights_Count:	
  1623                           ; 1 bytes @ 0x0
  1624                           
  1625  0070                     ?_getLoad_OK:	
  1626                           ; 1 bytes @ 0x0
  1627                           
  1628  0070                     getLights_Allow_Condition@lights:	
  1629                           ; 1 bytes @ 0x0
  1630                           
  1631                           
  1632                           ; 1 bytes @ 0x0
  1633  0070                     	ds	4
  1634  0074                     ??_Fosc_Set:	
  1635  0074                     ??_IO_Set:	
  1636                           ; 0 bytes @ 0x4
  1637                           
  1638  0074                     ??_TMR1_Set:	
  1639                           ; 0 bytes @ 0x4
  1640                           
  1641  0074                     ??_ADC_Set:	
  1642                           ; 0 bytes @ 0x4
  1643                           
  1644  0074                     ??_WDT_Set:	
  1645                           ; 0 bytes @ 0x4
  1646                           
  1647  0074                     ??_Timeout_Counter:	
  1648                           ; 0 bytes @ 0x4
  1649                           
  1650  0074                     ??_set_TimeoutCleared:	
  1651                           ; 0 bytes @ 0x4
  1652                           
  1653  0074                     ??_WDT_Clearing:	
  1654                           ; 0 bytes @ 0x4
  1655                           
  1656  0074                     ??_myMain_Initialization:	
  1657                           ; 0 bytes @ 0x4
  1658                           
  1659  0074                     ??_SYSC_Initialization:	
  1660                           ; 0 bytes @ 0x4
  1661                           
  1662  0074                     ??_Temp_Initialization:	
  1663                           ; 0 bytes @ 0x4
  1664                           
  1665  0074                     ??_PIR_Initialization:	
  1666                           ; 0 bytes @ 0x4
  1667                           
  1668  0074                     ??_DetectSYSC_Signal:	
  1669                           ; 0 bytes @ 0x4
  1670                           
  1671  0074                     ??_my_MainTimer:	
  1672                           ; 0 bytes @ 0x4
  1673                           
  1674  0074                     ??_getAll_Lights_Line:	
  1675                           ; 0 bytes @ 0x4
  1676                           
  1677  0074                     ??_setLoad_AH_AL_Restore:	
  1678                           ; 0 bytes @ 0x4
  1679                           
  1680  0074                     ??_getLight_LoadGO:	
  1681                           ; 0 bytes @ 0x4
  1682                           
  1683  0074                     ??_getLight_Load_Status:	
  1684                           ; 0 bytes @ 0x4
  1685                           
  1686  0074                     ??_setTemp_Initialization:	
  1687                           ; 0 bytes @ 0x4
  1688                           
  1689  0074                     ??_setSYSC_Initialization:	
  1690                           ; 0 bytes @ 0x4
  1691                           
  1692  0074                     ??_setLights_Line:	
  1693                           ; 0 bytes @ 0x4
  1694                           
  1695  0074                     ??_CDS_Initialization:	
  1696                           ; 0 bytes @ 0x4
  1697                           
  1698  0074                     ??_getCDS_Status:	
  1699                           ; 0 bytes @ 0x4
  1700                           
  1701  0074                     ??_LedPointSelect:	
  1702                           ; 0 bytes @ 0x4
  1703                           
  1704  0074                     ??_WDT_Main:	
  1705                           ; 0 bytes @ 0x4
  1706                           
  1707  0074                     ??_getMain_All_LightsStatus:	
  1708                           ; 0 bytes @ 0x4
  1709                           
  1710  0074                     ??_getMain_All_Error_Status:	
  1711                           ; 0 bytes @ 0x4
  1712                           
  1713  0074                     ??_getMain_Lights_Count:	
  1714                           ; 0 bytes @ 0x4
  1715                           
  1716  0074                     ??_getLoad_OK:	
  1717                           ; 0 bytes @ 0x4
  1718                           
  1719  0074                     ??_LightsPointSelect:	
  1720                           ; 0 bytes @ 0x4
  1721                           
  1722  0074                     ??___wmul:	
  1723                           ; 0 bytes @ 0x4
  1724                           
  1725  0074                     ??___awdiv:	
  1726                           ; 0 bytes @ 0x4
  1727                           
  1728  0074                     ??___lwdiv:	
  1729                           ; 0 bytes @ 0x4
  1730                           
  1731  0074                     ?_getAD:	
  1732                           ; 0 bytes @ 0x4
  1733                           
  1734  0074                     getCDS_Status@status:	
  1735                           ; 1 bytes @ 0x4
  1736                           
  1737  0074                     getAD@adcon1:	
  1738                           ; 1 bytes @ 0x4
  1739                           
  1740  0074                     getMain_All_LightsStatus@status:	
  1741                           ; 1 bytes @ 0x4
  1742                           
  1743  0074                     getMain_Lights_Count@count:	
  1744                           ; 1 bytes @ 0x4
  1745                           
  1746  0074                     getLoad_OK@ok:	
  1747                           ; 1 bytes @ 0x4
  1748                           
  1749  0074                     setLights_Line@lights:	
  1750                           ; 1 bytes @ 0x4
  1751                           
  1752  0074                     getAll_Lights_Line@line:	
  1753                           ; 1 bytes @ 0x4
  1754                           
  1755  0074                     getLight_LoadGO@loadgo:	
  1756                           ; 1 bytes @ 0x4
  1757                           
  1758  0074                     getLight_Load_Status@loadstatus:	
  1759                           ; 1 bytes @ 0x4
  1760                           
  1761  0074                     ___wmul@product:	
  1762                           ; 1 bytes @ 0x4
  1763                           
  1764                           
  1765                           ; 2 bytes @ 0x4
  1766  0074                     	ds	1
  1767  0075                     ??_getAD:	
  1768  0075                     ??_SYSC_Main:	
  1769                           ; 0 bytes @ 0x5
  1770                           
  1771  0075                     ??_setTemp_Main:	
  1772                           ; 0 bytes @ 0x5
  1773                           
  1774  0075                     ??_setSYSC_Main:	
  1775                           ; 0 bytes @ 0x5
  1776                           
  1777  0075                     ??_getLights_Allow_Condition:	
  1778                           ; 0 bytes @ 0x5
  1779                           
  1780  0075                     ??_Mcu_Initialization:	
  1781                           ; 0 bytes @ 0x5
  1782                           
  1783  0075                     LedPointSelect@led:	
  1784                           ; 0 bytes @ 0x5
  1785                           
  1786  0075                     getAD@adcon0:	
  1787                           ; 1 bytes @ 0x5
  1788                           
  1789  0075                     getMain_Lights_Count@status1:	
  1790                           ; 1 bytes @ 0x5
  1791                           
  1792  0075                     setLoad_AH_AL_Restore@i:	
  1793                           ; 1 bytes @ 0x5
  1794                           
  1795  0075                     LightsPointSelect@lights:	
  1796                           ; 1 bytes @ 0x5
  1797                           
  1798                           
  1799                           ; 1 bytes @ 0x5
  1800  0075                     	ds	1
  1801  0076                     ??_setLED_Initialization:	
  1802  0076                     ??_setLED:	
  1803                           ; 0 bytes @ 0x6
  1804                           
  1805  0076                     ??_Load_Initialization:	
  1806                           ; 0 bytes @ 0x6
  1807                           
  1808  0076                     ??_Lights_Initialization:	
  1809                           ; 0 bytes @ 0x6
  1810                           
  1811  0076                     ??_Temp_Main:	
  1812                           ; 0 bytes @ 0x6
  1813                           
  1814  0076                     ??_Lights_Main:	
  1815                           ; 0 bytes @ 0x6
  1816                           
  1817  0076                     ??_getLights_Status:	
  1818                           ; 0 bytes @ 0x6
  1819                           
  1820  0076                     ??_setLights_SwOn:	
  1821                           ; 0 bytes @ 0x6
  1822                           
  1823  0076                     ??_setLights_SwOff:	
  1824                           ; 0 bytes @ 0x6
  1825                           
  1826  0076                     ??_setLights_Initialization:	
  1827                           ; 0 bytes @ 0x6
  1828                           
  1829  0076                     ??_setLights_Main:	
  1830                           ; 0 bytes @ 0x6
  1831                           
  1832  0076                     ??_LED_Initialization:	
  1833                           ; 0 bytes @ 0x6
  1834                           
  1835  0076                     ??_LED_Main:	
  1836                           ; 0 bytes @ 0x6
  1837                           
  1838                           
  1839                           	psect	cstackBANK0
  1840  004D                     __pcstackBANK0:	
  1841                           ; 0 bytes @ 0x6
  1842                           
  1843  004D                     ?_setLED:	
  1844  004D                     ??_getLoad_AD:	
  1845                           ; 0 bytes @ 0x0
  1846                           
  1847  004D                     ??_getTemp_AD:	
  1848                           ; 0 bytes @ 0x0
  1849                           
  1850  004D                     ??_CDS_Main:	
  1851                           ; 0 bytes @ 0x0
  1852                           
  1853  004D                     ?_getCDS_AD:	
  1854                           ; 0 bytes @ 0x0
  1855                           
  1856  004D                     ?_setLights_Trigger:	
  1857                           ; 0 bytes @ 0x0
  1858                           
  1859  004D                     ?___wmul:	
  1860                           ; 0 bytes @ 0x0
  1861                           
  1862  004D                     ?___awdiv:	
  1863                           ; 2 bytes @ 0x0
  1864                           
  1865  004D                     ?___lwdiv:	
  1866                           ; 2 bytes @ 0x0
  1867                           
  1868  004D                     getCDS_AD@channel2:	
  1869                           ; 2 bytes @ 0x0
  1870                           
  1871  004D                     setLED@command:	
  1872                           ; 1 bytes @ 0x0
  1873                           
  1874  004D                     setLights_Initialization@lights:	
  1875                           ; 1 bytes @ 0x0
  1876                           
  1877  004D                     getLights_Status@lights:	
  1878                           ; 1 bytes @ 0x0
  1879                           
  1880  004D                     setLights_Trigger@command:	
  1881                           ; 1 bytes @ 0x0
  1882                           
  1883  004D                     getLights_Allow_Condition@allow:	
  1884                           ; 1 bytes @ 0x0
  1885                           
  1886  004D                     _getMain_All_Error_Status$2127:	
  1887                           ; 1 bytes @ 0x0
  1888                           
  1889  004D                     ___wmul@multiplier:	
  1890                           ; 2 bytes @ 0x0
  1891                           
  1892  004D                     ___awdiv@divisor:	
  1893                           ; 2 bytes @ 0x0
  1894                           
  1895  004D                     ___lwdiv@divisor:	
  1896                           ; 2 bytes @ 0x0
  1897                           
  1898                           
  1899                           ; 2 bytes @ 0x0
  1900  004D                     	ds	1
  1901  004E                     ??_getCDS_AD:	
  1902  004E                     ??_setLights_Trigger:	
  1903                           ; 0 bytes @ 0x1
  1904                           
  1905  004E                     setLED@led:	
  1906                           ; 0 bytes @ 0x1
  1907                           
  1908  004E                     getLights_Status@status:	
  1909                           ; 1 bytes @ 0x1
  1910                           
  1911  004E                     _getLights_Allow_Condition$4224:	
  1912                           ; 1 bytes @ 0x1
  1913                           
  1914                           
  1915                           ; 1 bytes @ 0x1
  1916  004E                     	ds	1
  1917  004F                     ??_setPIRLED_Main:	
  1918  004F                     ?_setLights:	
  1919                           ; 0 bytes @ 0x2
  1920                           
  1921  004F                     setLED_Initialization@led:	
  1922                           ; 0 bytes @ 0x2
  1923                           
  1924  004F                     getLoad_AD@channel:	
  1925                           ; 1 bytes @ 0x2
  1926                           
  1927  004F                     getTemp_AD@channel:	
  1928                           ; 1 bytes @ 0x2
  1929                           
  1930  004F                     setLights@status:	
  1931                           ; 1 bytes @ 0x2
  1932                           
  1933  004F                     setLights_Trigger@lights:	
  1934                           ; 1 bytes @ 0x2
  1935                           
  1936  004F                     _getMain_All_Error_Status$2128:	
  1937                           ; 1 bytes @ 0x2
  1938                           
  1939  004F                     ___wmul@multiplicand:	
  1940                           ; 2 bytes @ 0x2
  1941                           
  1942  004F                     ___awdiv@dividend:	
  1943                           ; 2 bytes @ 0x2
  1944                           
  1945  004F                     ___lwdiv@dividend:	
  1946                           ; 2 bytes @ 0x2
  1947                           
  1948                           
  1949                           ; 2 bytes @ 0x2
  1950  004F                     	ds	1
  1951  0050                     ??_setLights:	
  1952  0050                     getCDS_AD@i:	
  1953                           ; 0 bytes @ 0x3
  1954                           
  1955  0050                     setPIRLED_Main@count:	
  1956                           ; 1 bytes @ 0x3
  1957                           
  1958  0050                     getLoad_AD@k:	
  1959                           ; 1 bytes @ 0x3
  1960                           
  1961  0050                     getTemp_AD@ADRES:	
  1962                           ; 1 bytes @ 0x3
  1963                           
  1964  0050                     setLights_SwOn@sw:	
  1965                           ; 1 bytes @ 0x3
  1966                           
  1967  0050                     setLights_SwOff@sw:	
  1968                           ; 1 bytes @ 0x3
  1969                           
  1970                           
  1971                           ; 1 bytes @ 0x3
  1972  0050                     	ds	1
  1973  0051                     getCDS_AD@j:	
  1974  0051                     getMain_All_Error_Status@command:	
  1975                           ; 1 bytes @ 0x4
  1976                           
  1977  0051                     getLoad_AD@j:	
  1978                           ; 1 bytes @ 0x4
  1979                           
  1980  0051                     setLights@lights:	
  1981                           ; 1 bytes @ 0x4
  1982                           
  1983  0051                     ___awdiv@counter:	
  1984                           ; 1 bytes @ 0x4
  1985                           
  1986  0051                     ___lwdiv@counter:	
  1987                           ; 1 bytes @ 0x4
  1988                           
  1989                           
  1990                           ; 1 bytes @ 0x4
  1991  0051                     	ds	1
  1992  0052                     getCDS_AD@channel1:	
  1993  0052                     getMain_All_Error_Status@status:	
  1994                           ; 1 bytes @ 0x5
  1995                           
  1996  0052                     getLoad_AD@ADRES:	
  1997                           ; 1 bytes @ 0x5
  1998                           
  1999  0052                     setLights_Main@lights:	
  2000                           ; 1 bytes @ 0x5
  2001                           
  2002  0052                     ___awdiv@sign:	
  2003                           ; 1 bytes @ 0x5
  2004                           
  2005  0052                     ___lwdiv@quotient:	
  2006                           ; 1 bytes @ 0x5
  2007                           
  2008                           
  2009                           ; 2 bytes @ 0x5
  2010  0052                     	ds	1
  2011  0053                     ??_PIR_Main:	
  2012  0053                     ??_Exception_Main:	
  2013                           ; 0 bytes @ 0x6
  2014                           
  2015  0053                     getLoad_AD@i:	
  2016                           ; 0 bytes @ 0x6
  2017                           
  2018  0053                     setTemp_Main@error:	
  2019                           ; 1 bytes @ 0x6
  2020                           
  2021  0053                     ___awdiv@quotient:	
  2022                           ; 1 bytes @ 0x6
  2023                           
  2024                           
  2025                           ; 2 bytes @ 0x6
  2026  0053                     	ds	1
  2027  0054                     ??_Load_Main:	
  2028  0054                     Exception_Main@lights:	
  2029                           ; 0 bytes @ 0x7
  2030                           
  2031  0054                     setTemp_Main@TempGO:	
  2032                           ; 1 bytes @ 0x7
  2033                           
  2034                           
  2035                           ; 1 bytes @ 0x7
  2036  0054                     	ds	1
  2037  0055                     ?_getPIR_AD:	
  2038  0055                     ??_Lights_Control:	
  2039                           ; 0 bytes @ 0x8
  2040                           
  2041  0055                     Exception_Main@count:	
  2042                           ; 0 bytes @ 0x8
  2043                           
  2044  0055                     setTemp_Main@SafeValue:	
  2045                           ; 1 bytes @ 0x8
  2046                           
  2047  0055                     getPIR_AD@channel2:	
  2048                           ; 1 bytes @ 0x8
  2049                           
  2050                           
  2051                           ; 1 bytes @ 0x8
  2052  0055                     	ds	1
  2053  0056                     ??_getPIR_AD:	
  2054  0056                     Exception_Main@status:	
  2055                           ; 0 bytes @ 0x9
  2056                           
  2057  0056                     Load_Main@error:	
  2058                           ; 1 bytes @ 0x9
  2059                           
  2060  0056                     setTemp_Main@DangerValue:	
  2061                           ; 1 bytes @ 0x9
  2062                           
  2063                           
  2064                           ; 1 bytes @ 0x9
  2065  0056                     	ds	1
  2066  0057                     setTemp_Main@AD:	
  2067  0057                     Lights_Control@lights:	
  2068                           ; 1 bytes @ 0xA
  2069                           
  2070  0057                     Exception_Main@i:	
  2071                           ; 1 bytes @ 0xA
  2072                           
  2073  0057                     _Load_Main$2389:	
  2074                           ; 2 bytes @ 0xA
  2075                           
  2076                           
  2077                           ; 2 bytes @ 0xA
  2078  0057                     	ds	1
  2079  0058                     PIR_Main@error:	
  2080                           
  2081                           ; 1 bytes @ 0xB
  2082  0058                     	ds	1
  2083  0059                     Load_Main@ErrorCountValue:	
  2084  0059                     PIR_Main@cds:	
  2085                           ; 1 bytes @ 0xC
  2086                           
  2087  0059                     getPIR_AD@j:	
  2088                           ; 1 bytes @ 0xC
  2089                           
  2090  0059                     Exception_Main@i_2140:	
  2091                           ; 1 bytes @ 0xC
  2092                           
  2093                           
  2094                           ; 2 bytes @ 0xC
  2095  0059                     	ds	1
  2096  005A                     Load_Main@Load_RunStatus:	
  2097  005A                     PIR_Main@Enable_Switch:	
  2098                           ; 1 bytes @ 0xD
  2099                           
  2100  005A                     getPIR_AD@channel1:	
  2101                           ; 1 bytes @ 0xD
  2102                           
  2103                           
  2104                           ; 1 bytes @ 0xD
  2105  005A                     	ds	1
  2106  005B                     Exception_Main@error:	
  2107  005B                     Load_Main@LightsCount:	
  2108                           ; 1 bytes @ 0xE
  2109                           
  2110  005B                     getPIR_AD@VRAD1:	
  2111                           ; 1 bytes @ 0xE
  2112                           
  2113  005B                     _PIR_Main$2856:	
  2114                           ; 1 bytes @ 0xE
  2115                           
  2116                           
  2117                           ; 2 bytes @ 0xE
  2118  005B                     	ds	1
  2119  005C                     getPIR_AD@VRAD:	
  2120  005C                     Load_Main@i:	
  2121                           ; 1 bytes @ 0xF
  2122                           
  2123                           
  2124                           ; 2 bytes @ 0xF
  2125  005C                     	ds	1
  2126  005D                     PIR_Main@LightsStatus:	
  2127  005D                     getPIR_AD@i:	
  2128                           ; 1 bytes @ 0x10
  2129                           
  2130                           
  2131                           ; 1 bytes @ 0x10
  2132  005D                     	ds	1
  2133  005E                     PIR_Main@TriggerValue:	
  2134                           
  2135                           ; 1 bytes @ 0x11
  2136  005E                     	ds	1
  2137  005F                     ?_main:	
  2138  005F                     main@argc:	
  2139                           ; 2 bytes @ 0x12
  2140                           
  2141                           
  2142                           ; 2 bytes @ 0x12
  2143  005F                     	ds	2
  2144  0061                     main@argv:	
  2145                           
  2146                           ; 2 bytes @ 0x14
  2147  0061                     	ds	2
  2148  0063                     ??_main:	
  2149                           
  2150                           ; 0 bytes @ 0x16
  2151  0063                     	ds	1
  2152                           
  2153                           	psect	maintext
  2154  0F9A                     __pmaintext:	
  2155 ;;
  2156 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2157 ;;
  2158 ;; *************** function _main *****************
  2159 ;; Defined at:
  2160 ;;		line 7 in file "../src/Main_B1.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;  argc            2   18[BANK0 ] int 
  2163 ;;  argv            2   20[BANK0 ] PTR PTR unsigned char 
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;		None
  2166 ;; Return value:  Size  Location     Type
  2167 ;;                  2   18[BANK0 ] int 
  2168 ;; Registers used:
  2169 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2170 ;; Tracked objects:
  2171 ;;		On entry : 17F/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2175 ;;      Params:         0       4       0       0
  2176 ;;      Locals:         0       0       0       0
  2177 ;;      Temps:          0       1       0       0
  2178 ;;      Totals:         0       5       0       0
  2179 ;;Total ram usage:        5 bytes
  2180 ;; Hardware stack levels required when called:    7
  2181 ;; This function calls:
  2182 ;;		_CDS_Initialization
  2183 ;;		_CDS_Main
  2184 ;;		_DetectSYSC_Signal
  2185 ;;		_Exception_Main
  2186 ;;		_LED_Initialization
  2187 ;;		_LED_Main
  2188 ;;		_Lights_Initialization
  2189 ;;		_Lights_Main
  2190 ;;		_Load_Initialization
  2191 ;;		_Load_Main
  2192 ;;		_Mcu_Initialization
  2193 ;;		_PIR_Initialization
  2194 ;;		_PIR_Main
  2195 ;;		_SYSC_Initialization
  2196 ;;		_SYSC_Main
  2197 ;;		_Temp_Initialization
  2198 ;;		_Temp_Main
  2199 ;;		_WDT_Main
  2200 ;;		_getCDS_AD
  2201 ;;		_getLoad_AD
  2202 ;;		_getPIR_AD
  2203 ;;		_getTemp_AD
  2204 ;;		_myMain_Initialization
  2205 ;;		_my_MainTimer
  2206 ;; This function is called by:
  2207 ;;		Startup code after reset
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           
  2212                           ;psect for function _main
  2213  0F9A                     _main:	
  2214                           
  2215                           ;Main_B1.c: 8: myMain_Initialization();
  2216                           
  2217                           ;incstack = 0
  2218                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2219  0F9A  118A  27FF  158A   	fcall	_myMain_Initialization
  2220                           
  2221                           ;Main_B1.c: 9: Mcu_Initialization();
  2222  0F9D  158A  23A4  158A   	fcall	_Mcu_Initialization
  2223                           
  2224                           ;Main_B1.c: 10: ;;
  2225                           ;Main_B1.c: 11: LED_Initialization();
  2226  0FA0  158A  231B  158A   	fcall	_LED_Initialization
  2227                           
  2228                           ;Main_B1.c: 12: ;;
  2229                           ;Main_B1.c: 14: SYSC_Initialization();
  2230  0FA3  158A  22DE  158A   	fcall	_SYSC_Initialization
  2231                           
  2232                           ;Main_B1.c: 15: Temp_Initialization();
  2233  0FA6  158A  22E4  158A   	fcall	_Temp_Initialization
  2234                           
  2235                           ;Main_B1.c: 16: Load_Initialization();
  2236  0FA9  158A  22DB  158A   	fcall	_Load_Initialization
  2237                           
  2238                           ;Main_B1.c: 17: ;;
  2239                           ;Main_B1.c: 18: ;;
  2240                           ;Main_B1.c: 20: ;;
  2241                           ;Main_B1.c: 21: Lights_Initialization();
  2242  0FAC  158A  22EE  158A   	fcall	_Lights_Initialization
  2243                           
  2244                           ;Main_B1.c: 22: CDS_Initialization();
  2245  0FAF  158A  22EA  158A   	fcall	_CDS_Initialization
  2246                           
  2247                           ;Main_B1.c: 23: PIR_Initialization();
  2248  0FB2  158A  2361  158A   	fcall	_PIR_Initialization
  2249  0FB5                     l5274:	
  2250                           ;Main_B1.c: 24: ;;
  2251                           ;Main_B1.c: 25: ;;
  2252                           ;Main_B1.c: 26: ;;
  2253                           ;Main_B1.c: 27: ;;
  2254                           ;Main_B1.c: 28: ;;
  2255                           ;Main_B1.c: 30: while (1) {
  2256                           
  2257                           
  2258                           ;Main_B1.c: 32: if (myMain.PowerON == 1) {
  2259  0FB5  1283               	bcf	3,5	;RP0=0, select bank0
  2260  0FB6  1303               	bcf	3,6	;RP1=0, select bank0
  2261  0FB7  1C25               	btfss	_myMain,0
  2262  0FB8  2FD8               	goto	l5286
  2263                           
  2264                           ;Main_B1.c: 34: DetectSYSC_Signal();
  2265  0FB9  158A  236C  158A   	fcall	_DetectSYSC_Signal
  2266                           
  2267                           ;Main_B1.c: 38: getLoad_AD(0x01);
  2268  0FBC  3001               	movlw	1
  2269  0FBD  158A  267C  158A   	fcall	_getLoad_AD
  2270                           
  2271                           ;Main_B1.c: 42: getTemp_AD(0x11);
  2272  0FC0  3011               	movlw	17
  2273  0FC1  158A  250B  158A   	fcall	_getTemp_AD
  2274                           
  2275                           ;Main_B1.c: 50: getCDS_AD(0x29, 0x05);
  2276  0FC4  3005               	movlw	5
  2277  0FC5  1283               	bcf	3,5	;RP0=0, select bank0
  2278  0FC6  1303               	bcf	3,6	;RP1=0, select bank0
  2279  0FC7  00E3               	movwf	??_main
  2280  0FC8  0863               	movf	??_main,w
  2281  0FC9  00CD               	movwf	getCDS_AD@channel2
  2282  0FCA  3029               	movlw	41
  2283  0FCB  158A  252A  158A   	fcall	_getCDS_AD
  2284                           
  2285                           ;Main_B1.c: 54: getPIR_AD(0x2d, 0x09);
  2286  0FCE  3009               	movlw	9
  2287  0FCF  1283               	bcf	3,5	;RP0=0, select bank0
  2288  0FD0  1303               	bcf	3,6	;RP1=0, select bank0
  2289  0FD1  00E3               	movwf	??_main
  2290  0FD2  0863               	movf	??_main,w
  2291  0FD3  00D5               	movwf	getPIR_AD@channel2
  2292  0FD4  302D               	movlw	45
  2293  0FD5  118A  23E1  158A   	fcall	_getPIR_AD
  2294  0FD8                     l5286:	
  2295                           
  2296                           ;Main_B1.c: 57: }
  2297                           ;Main_B1.c: 93: if (Timer1.Timeout == 1) {
  2298  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  2299  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  2300  0FDA  1C32               	btfss	_Timer1,0
  2301  0FDB  2FB5               	goto	l5274
  2302                           
  2303                           ;Main_B1.c: 94: Timer1.Timeout = 0;
  2304  0FDC  1032               	bcf	_Timer1,0
  2305                           
  2306                           ;Main_B1.c: 96: my_MainTimer();
  2307  0FDD  158A  249C  158A   	fcall	_my_MainTimer
  2308                           
  2309                           ;Main_B1.c: 97: WDT_Main();
  2310  0FE0  158A  23C4  158A   	fcall	_WDT_Main
  2311                           
  2312                           ;Main_B1.c: 98: ;;
  2313                           ;Main_B1.c: 99: ;;
  2314                           ;Main_B1.c: 100: if (myMain.PowerON == 1) {
  2315  0FE3  1283               	bcf	3,5	;RP0=0, select bank0
  2316  0FE4  1303               	bcf	3,6	;RP1=0, select bank0
  2317  0FE5  1C25               	btfss	_myMain,0
  2318  0FE6  2FB5               	goto	l5274
  2319                           
  2320                           ;Main_B1.c: 101: ;;
  2321                           ;Main_B1.c: 103: LED_Main();
  2322  0FE7  158A  22D8  158A   	fcall	_LED_Main
  2323                           
  2324                           ;Main_B1.c: 104: ;;
  2325                           ;Main_B1.c: 106: SYSC_Main();
  2326  0FEA  158A  22E1  158A   	fcall	_SYSC_Main
  2327                           
  2328                           ;Main_B1.c: 107: Temp_Main();
  2329  0FED  158A  22E7  158A   	fcall	_Temp_Main
  2330                           
  2331                           ;Main_B1.c: 108: Load_Main();
  2332  0FF0  118A  2026  158A   	fcall	_Load_Main
  2333                           
  2334                           ;Main_B1.c: 109: ;;
  2335                           ;Main_B1.c: 111: Lights_Main();
  2336  0FF3  158A  24ED  158A   	fcall	_Lights_Main
  2337                           
  2338                           ;Main_B1.c: 112: ;;
  2339                           ;Main_B1.c: 113: ;;
  2340                           ;Main_B1.c: 114: CDS_Main();
  2341  0FF6  158A  25C6  158A   	fcall	_CDS_Main
  2342                           
  2343                           ;Main_B1.c: 115: PIR_Main();
  2344  0FF9  118A  2210  158A   	fcall	_PIR_Main
  2345                           
  2346                           ;Main_B1.c: 117: ;;
  2347                           ;Main_B1.c: 118: ;;
  2348                           ;Main_B1.c: 119: ;;
  2349                           ;Main_B1.c: 120: ;;
  2350                           ;Main_B1.c: 121: Exception_Main();
  2351  0FFC  118A  250F  158A   	fcall	_Exception_Main
  2352  0FFF  2FB5               	goto	l5274
  2353  1000                     __end_of_main:	
  2354                           ;Main_B1.c: 128: }
  2355                           ;Main_B1.c: 129: }
  2356                           ;Main_B1.c: 163: }
  2357                           ;Main_B1.c: 164: return (0);
  2358                           ;	Return value of _main is never used
  2359                           
  2360                           
  2361                           	psect	text1
  2362  0C9C                     __ptext1:	
  2363 ;; *************** function _my_MainTimer *****************
  2364 ;; Defined at:
  2365 ;;		line 185 in file "../src/Main_B1.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;		None
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;		None
  2370 ;; Return value:  Size  Location     Type
  2371 ;;		None               void
  2372 ;; Registers used:
  2373 ;;		wreg, status,2, status,0
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2379 ;;      Params:         0       0       0       0
  2380 ;;      Locals:         0       0       0       0
  2381 ;;      Temps:          1       0       0       0
  2382 ;;      Totals:         1       0       0       0
  2383 ;;Total ram usage:        1 bytes
  2384 ;; Hardware stack levels used:    1
  2385 ;; Hardware stack levels required when called:    2
  2386 ;; This function calls:
  2387 ;;		Nothing
  2388 ;; This function is called by:
  2389 ;;		_main
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392                           
  2393                           
  2394                           ;psect for function _my_MainTimer
  2395  0C9C                     _my_MainTimer:	
  2396                           
  2397                           ;Main_B1.c: 187: if (myMain.PowerON == 0) {
  2398                           
  2399                           ;incstack = 0
  2400                           ; Regs used in _my_MainTimer: [wreg+status,2+status,0]
  2401  0C9C  1283               	bcf	3,5	;RP0=0, select bank0
  2402  0C9D  1303               	bcf	3,6	;RP1=0, select bank0
  2403  0C9E  1825               	btfsc	_myMain,0
  2404  0C9F  2CAC               	goto	l3858
  2405                           
  2406                           ;Main_B1.c: 188: myMain.PowerCount++;
  2407  0CA0  3001               	movlw	1
  2408  0CA1  00F4               	movwf	??_my_MainTimer
  2409  0CA2  0874               	movf	??_my_MainTimer,w
  2410  0CA3  07A6               	addwf	_myMain+1,f
  2411                           
  2412                           ;Main_B1.c: 189: if (myMain.PowerCount == (1500 / 20)) {
  2413  0CA4  0826               	movf	_myMain+1,w
  2414  0CA5  3A4B               	xorlw	75
  2415  0CA6  1D03               	skipz
  2416  0CA7  0008               	return
  2417                           
  2418                           ;Main_B1.c: 190: myMain.PowerCount = 0;
  2419  0CA8  01A6               	clrf	_myMain+1
  2420                           
  2421                           ;Main_B1.c: 191: myMain.PowerON = 1;
  2422  0CA9  1425               	bsf	_myMain,0
  2423                           
  2424                           ;Main_B1.c: 196: ;;
  2425                           ;Main_B1.c: 197: myMain.SelfTest = 1;
  2426  0CAA  1625               	bsf	_myMain,4
  2427                           
  2428                           ;Main_B1.c: 206: }
  2429                           ;Main_B1.c: 207: } else {
  2430  0CAB  0008               	return
  2431  0CAC                     l3858:	
  2432                           
  2433                           ;Main_B1.c: 208: myMain.PowerCount++;
  2434  0CAC  3001               	movlw	1
  2435  0CAD  00F4               	movwf	??_my_MainTimer
  2436  0CAE  0874               	movf	??_my_MainTimer,w
  2437  0CAF  07A6               	addwf	_myMain+1,f
  2438                           
  2439                           ;Main_B1.c: 209: if (myMain.PowerCount == (1000 / 20)) {
  2440  0CB0  0826               	movf	_myMain+1,w
  2441  0CB1  3A32               	xorlw	50
  2442  0CB2  1D03               	skipz
  2443  0CB3  0008               	return
  2444                           
  2445                           ;Main_B1.c: 210: myMain.PowerCount = 0;
  2446  0CB4  01A6               	clrf	_myMain+1
  2447  0CB5  0008               	return
  2448  0CB6                     __end_of_my_MainTimer:	
  2449                           
  2450                           	psect	text2
  2451  07FF                     __ptext2:	
  2452 ;; *************** function _myMain_Initialization *****************
  2453 ;; Defined at:
  2454 ;;		line 170 in file "../src/Main_B1.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;		None
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;		None
  2459 ;; Return value:  Size  Location     Type
  2460 ;;		None               void
  2461 ;; Registers used:
  2462 ;;		None
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2468 ;;      Params:         0       0       0       0
  2469 ;;      Locals:         0       0       0       0
  2470 ;;      Temps:          0       0       0       0
  2471 ;;      Totals:         0       0       0       0
  2472 ;;Total ram usage:        0 bytes
  2473 ;; Hardware stack levels used:    1
  2474 ;; Hardware stack levels required when called:    2
  2475 ;; This function calls:
  2476 ;;		Nothing
  2477 ;; This function is called by:
  2478 ;;		_main
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482                           
  2483                           ;psect for function _myMain_Initialization
  2484  07FF                     _myMain_Initialization:	
  2485                           
  2486                           ;incstack = 0
  2487                           ; Regs used in _myMain_Initialization: []
  2488  07FF  0008               	return
  2489  0800                     __end_of_myMain_Initialization:	
  2490                           
  2491                           	psect	text3
  2492  0D0B                     __ptext3:	
  2493 ;; *************** function _getTemp_AD *****************
  2494 ;; Defined at:
  2495 ;;		line 15 in file "../src/OverTemperature_B1.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;  channel         1    wreg     unsigned char 
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;  channel         1    2[BANK0 ] unsigned char 
  2500 ;;  ADRES           1    3[BANK0 ] unsigned char 
  2501 ;; Return value:  Size  Location     Type
  2502 ;;		None               void
  2503 ;; Registers used:
  2504 ;;		wreg, status,2, status,0, pclath, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2510 ;;      Params:         0       0       0       0
  2511 ;;      Locals:         0       2       0       0
  2512 ;;      Temps:          0       2       0       0
  2513 ;;      Totals:         0       4       0       0
  2514 ;;Total ram usage:        4 bytes
  2515 ;; Hardware stack levels used:    1
  2516 ;; Hardware stack levels required when called:    4
  2517 ;; This function calls:
  2518 ;;		_getAD
  2519 ;; This function is called by:
  2520 ;;		_main
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           
  2525                           ;psect for function _getTemp_AD
  2526  0D0B                     _getTemp_AD:	
  2527                           
  2528                           ;incstack = 0
  2529                           ; Regs used in _getTemp_AD: [wreg+status,2+status,0+pclath+cstack]
  2530                           ;getTemp_AD@channel stored from wreg
  2531  0D0B  1283               	bcf	3,5	;RP0=0, select bank0
  2532  0D0C  1303               	bcf	3,6	;RP1=0, select bank0
  2533  0D0D  00CF               	movwf	getTemp_AD@channel
  2534                           
  2535                           ;OverTemperature_B1.c: 16: ADtype ADRES = 0;
  2536  0D0E  01D0               	clrf	getTemp_AD@ADRES
  2537                           
  2538                           ;OverTemperature_B1.c: 19: if (Temp.ADtoGO == 1) {
  2539  0D0F  1D39               	btfss	_Temp,2
  2540  0D10  0008               	return
  2541                           
  2542                           ;OverTemperature_B1.c: 21: ADRES = getAD(channel, 0x70);
  2543  0D11  3070               	movlw	112
  2544  0D12  00CD               	movwf	??_getTemp_AD
  2545  0D13  084D               	movf	??_getTemp_AD,w
  2546  0D14  00F4               	movwf	getAD@adcon1
  2547  0D15  084F               	movf	getTemp_AD@channel,w
  2548  0D16  158A  24D1  158A   	fcall	_getAD
  2549  0D19  1283               	bcf	3,5	;RP0=0, select bank0
  2550  0D1A  1303               	bcf	3,6	;RP1=0, select bank0
  2551  0D1B  00CE               	movwf	??_getTemp_AD+1
  2552  0D1C  084E               	movf	??_getTemp_AD+1,w
  2553  0D1D  00D0               	movwf	getTemp_AD@ADRES
  2554                           
  2555                           ;OverTemperature_B1.c: 29: if (ADRES > 0) {
  2556  0D1E  0850               	movf	getTemp_AD@ADRES,w
  2557  0D1F  1903               	btfsc	3,2
  2558  0D20  0008               	return
  2559                           
  2560                           ;OverTemperature_B1.c: 30: if (Temp.ADV < ADRES) {
  2561  0D21  0850               	movf	getTemp_AD@ADRES,w
  2562  0D22  023F               	subwf	_Temp+6,w
  2563  0D23  1803               	skipnc
  2564  0D24  0008               	return
  2565                           
  2566                           ;OverTemperature_B1.c: 31: Temp.ADV = ADRES;
  2567  0D25  0850               	movf	getTemp_AD@ADRES,w
  2568  0D26  00CD               	movwf	??_getTemp_AD
  2569  0D27  084D               	movf	??_getTemp_AD,w
  2570  0D28  00BF               	movwf	_Temp+6
  2571  0D29  0008               	return
  2572  0D2A                     __end_of_getTemp_AD:	
  2573                           
  2574                           	psect	text4
  2575  03E1                     __ptext4:	
  2576 ;; *************** function _getPIR_AD *****************
  2577 ;; Defined at:
  2578 ;;		line 344 in file "../src/PIR_B1.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;  channel1        1    wreg     unsigned char 
  2581 ;;  channel2        1    8[BANK0 ] unsigned char 
  2582 ;; Auto vars:     Size  Location     Type
  2583 ;;  channel1        1   13[BANK0 ] unsigned char 
  2584 ;;  i               1   16[BANK0 ] unsigned char 
  2585 ;;  VRAD            1   15[BANK0 ] unsigned char 
  2586 ;;  VRAD1           1   14[BANK0 ] unsigned char 
  2587 ;;  j               1   12[BANK0 ] unsigned char 
  2588 ;; Return value:  Size  Location     Type
  2589 ;;		None               void
  2590 ;; Registers used:
  2591 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2592 ;; Tracked objects:
  2593 ;;		On entry : 0/0
  2594 ;;		On exit  : 0/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2597 ;;      Params:         0       1       0       0
  2598 ;;      Locals:         0       5       0       0
  2599 ;;      Temps:          0       3       0       0
  2600 ;;      Totals:         0       9       0       0
  2601 ;;Total ram usage:        9 bytes
  2602 ;; Hardware stack levels used:    1
  2603 ;; Hardware stack levels required when called:    4
  2604 ;; This function calls:
  2605 ;;		___awdiv
  2606 ;;		___lwdiv
  2607 ;;		_getAD
  2608 ;; This function is called by:
  2609 ;;		_main
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613                           
  2614                           ;psect for function _getPIR_AD
  2615  03E1                     _getPIR_AD:	
  2616                           
  2617                           ;incstack = 0
  2618                           ; Regs used in _getPIR_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2619                           ;getPIR_AD@channel1 stored from wreg
  2620  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  2621  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  2622  03E3  00DA               	movwf	getPIR_AD@channel1
  2623                           
  2624                           ;PIR_B1.c: 345: char i = 0, j = 0;
  2625  03E4  01DD               	clrf	getPIR_AD@i
  2626  03E5  01D9               	clrf	getPIR_AD@j
  2627                           
  2628                           ;PIR_B1.c: 346: char VRAD = 0, VRAD1 = 0;
  2629  03E6  01DC               	clrf	getPIR_AD@VRAD
  2630  03E7  01DB               	clrf	getPIR_AD@VRAD1
  2631                           
  2632                           ;PIR_B1.c: 347: if (_PIR.ADtoGO == 1 && _PIR.GO == 0) {
  2633  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  2634  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  2635  03EA  1CA0               	btfss	__PIR^(0+128),1
  2636  03EB  0008               	return
  2637  03EC  1920               	btfsc	__PIR^(0+128),2
  2638  03ED  0008               	return
  2639                           
  2640                           ;PIR_B1.c: 348: _PIR.GO = 1;
  2641  03EE  1520               	bsf	__PIR^(0+128),2
  2642                           
  2643                           ;PIR_B1.c: 355: VRAD1 = getAD(channel1, 0x70);
  2644  03EF  3070               	movlw	112
  2645  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2646  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  2647  03F2  00D6               	movwf	??_getPIR_AD
  2648  03F3  0856               	movf	??_getPIR_AD,w
  2649  03F4  00F4               	movwf	getAD@adcon1
  2650  03F5  085A               	movf	getPIR_AD@channel1,w
  2651  03F6  158A  24D1  118A   	fcall	_getAD
  2652  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  2653  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  2654  03FB  00D7               	movwf	??_getPIR_AD+1
  2655  03FC  0857               	movf	??_getPIR_AD+1,w
  2656  03FD  00DB               	movwf	getPIR_AD@VRAD1
  2657                           
  2658                           ;PIR_B1.c: 356: VRAD = VRAD1 / 25;
  2659  03FE  3019               	movlw	25
  2660  03FF  00CD               	movwf	___awdiv@divisor
  2661  0400  3000               	movlw	0
  2662  0401  00CE               	movwf	___awdiv@divisor+1
  2663  0402  085B               	movf	getPIR_AD@VRAD1,w
  2664  0403  00D6               	movwf	??_getPIR_AD
  2665  0404  01D7               	clrf	??_getPIR_AD+1
  2666  0405  0856               	movf	??_getPIR_AD,w
  2667  0406  00CF               	movwf	___awdiv@dividend
  2668  0407  0857               	movf	??_getPIR_AD+1,w
  2669  0408  00D0               	movwf	___awdiv@dividend+1
  2670  0409  158A  26D8  118A   	fcall	___awdiv
  2671  040C  1283               	bcf	3,5	;RP0=0, select bank0
  2672  040D  1303               	bcf	3,6	;RP1=0, select bank0
  2673  040E  084D               	movf	?___awdiv,w
  2674  040F  00D8               	movwf	??_getPIR_AD+2
  2675  0410  0858               	movf	??_getPIR_AD+2,w
  2676  0411  00DC               	movwf	getPIR_AD@VRAD
  2677                           
  2678                           ;PIR_B1.c: 357: _PIR.SignalAD = getAD(channel2, 0x70);
  2679  0412  3070               	movlw	112
  2680  0413  00D6               	movwf	??_getPIR_AD
  2681  0414  0856               	movf	??_getPIR_AD,w
  2682  0415  00F4               	movwf	getAD@adcon1
  2683  0416  0855               	movf	getPIR_AD@channel2,w
  2684  0417  158A  24D1  118A   	fcall	_getAD
  2685  041A  1283               	bcf	3,5	;RP0=0, select bank0
  2686  041B  1303               	bcf	3,6	;RP1=0, select bank0
  2687  041C  00D7               	movwf	??_getPIR_AD+1
  2688  041D  0857               	movf	??_getPIR_AD+1,w
  2689  041E  1683               	bsf	3,5	;RP0=1, select bank1
  2690  041F  1303               	bcf	3,6	;RP1=0, select bank1
  2691  0420  00A1               	movwf	(__PIR^(0+128)+1)
  2692                           
  2693                           ;PIR_B1.c: 371: if (VRAD < 1) {
  2694  0421  1283               	bcf	3,5	;RP0=0, select bank0
  2695  0422  1303               	bcf	3,6	;RP1=0, select bank0
  2696  0423  08DC               	movf	getPIR_AD@VRAD,f
  2697  0424  1D03               	skipz
  2698  0425  2C28               	goto	l4828
  2699                           
  2700                           ;PIR_B1.c: 372: _PIR.CloseTimeValue = 5;
  2701  0426  3005               	movlw	5
  2702  0427  2C2E               	goto	L1
  2703  0428                     l4828:	
  2704                           ;PIR_B1.c: 373: } else if (VRAD < 3) {
  2705                           
  2706  0428  3003               	movlw	3
  2707  0429  1283               	bcf	3,5	;RP0=0, select bank0
  2708  042A  025C               	subwf	getPIR_AD@VRAD,w
  2709  042B  1803               	skipnc
  2710  042C  2C33               	goto	l4832
  2711                           
  2712                           ;PIR_B1.c: 374: _PIR.CloseTimeValue = 60;
  2713  042D  303C               	movlw	60
  2714  042E                     L1:	
  2715  042E  1683               	bsf	3,5	;RP0=1, select bank1
  2716  042F  1303               	bcf	3,6	;RP1=0, select bank1
  2717  0430  00C3               	movwf	(__PIR^(0+128)+35)
  2718  0431  3000               	movlw	0
  2719  0432  2C59               	goto	L5
  2720  0433                     l4832:	
  2721                           ;PIR_B1.c: 375: } else if (VRAD < 5) {
  2722                           
  2723  0433  3005               	movlw	5
  2724  0434  1283               	bcf	3,5	;RP0=0, select bank0
  2725  0435  025C               	subwf	getPIR_AD@VRAD,w
  2726  0436  1803               	skipnc
  2727  0437  2C3E               	goto	l4836
  2728                           
  2729                           ;PIR_B1.c: 376: _PIR.CloseTimeValue = 300;
  2730  0438  302C               	movlw	44
  2731  0439  1683               	bsf	3,5	;RP0=1, select bank1
  2732  043A  1303               	bcf	3,6	;RP1=0, select bank1
  2733  043B  00C3               	movwf	(__PIR^(0+128)+35)
  2734  043C  3001               	movlw	1
  2735  043D  2C59               	goto	L5
  2736  043E                     l4836:	
  2737                           ;PIR_B1.c: 377: } else if (VRAD < 7) {
  2738                           
  2739  043E  3007               	movlw	7
  2740  043F  1283               	bcf	3,5	;RP0=0, select bank0
  2741  0440  025C               	subwf	getPIR_AD@VRAD,w
  2742  0441  1803               	skipnc
  2743  0442  2C49               	goto	l4840
  2744                           
  2745                           ;PIR_B1.c: 378: _PIR.CloseTimeValue = 600;
  2746  0443  3058               	movlw	88
  2747  0444  1683               	bsf	3,5	;RP0=1, select bank1
  2748  0445  1303               	bcf	3,6	;RP1=0, select bank1
  2749  0446  00C3               	movwf	(__PIR^(0+128)+35)
  2750  0447  3002               	movlw	2
  2751  0448  2C59               	goto	L5
  2752  0449                     l4840:	
  2753                           ;PIR_B1.c: 379: } else if (VRAD < 9) {
  2754                           
  2755  0449  3009               	movlw	9
  2756  044A  1283               	bcf	3,5	;RP0=0, select bank0
  2757  044B  025C               	subwf	getPIR_AD@VRAD,w
  2758  044C  1803               	skipnc
  2759  044D  2C54               	goto	l4844
  2760                           
  2761                           ;PIR_B1.c: 380: _PIR.CloseTimeValue = 900;
  2762  044E  3084               	movlw	132
  2763  044F  1683               	bsf	3,5	;RP0=1, select bank1
  2764  0450  1303               	bcf	3,6	;RP1=0, select bank1
  2765  0451  00C3               	movwf	(__PIR^(0+128)+35)
  2766  0452  3003               	movlw	3
  2767  0453  2C59               	goto	L5
  2768  0454                     l4844:	
  2769                           ;PIR_B1.c: 381: } else {
  2770                           
  2771                           
  2772                           ;PIR_B1.c: 382: _PIR.CloseTimeValue = 1200;
  2773  0454  30B0               	movlw	176
  2774  0455  1683               	bsf	3,5	;RP0=1, select bank1
  2775  0456  1303               	bcf	3,6	;RP1=0, select bank1
  2776  0457  00C3               	movwf	(__PIR^(0+128)+35)
  2777  0458  3004               	movlw	4
  2778  0459                     L5:	
  2779  0459  00C4               	movwf	(__PIR^(0+128)+36)
  2780                           
  2781                           ;PIR_B1.c: 383: }
  2782                           ;PIR_B1.c: 392: _PIR.TenAverage[_PIR.TenCount] = _PIR.SignalAD;
  2783  045A  0821               	movf	(__PIR^(0+128)+1),w
  2784  045B  1283               	bcf	3,5	;RP0=0, select bank0
  2785  045C  1303               	bcf	3,6	;RP1=0, select bank0
  2786  045D  00D6               	movwf	??_getPIR_AD
  2787  045E  1683               	bsf	3,5	;RP0=1, select bank1
  2788  045F  1303               	bcf	3,6	;RP1=0, select bank1
  2789  0460  0824               	movf	(__PIR^(0+128)+4),w
  2790  0461  3EA5               	addlw	(__PIR+5)& (0+255)
  2791  0462  0084               	movwf	4
  2792  0463  1283               	bcf	3,5	;RP0=0, select bank0
  2793  0464  1303               	bcf	3,6	;RP1=0, select bank0
  2794  0465  0856               	movf	??_getPIR_AD,w
  2795  0466  1383               	bcf	3,7	;select IRP bank1
  2796  0467  0080               	movwf	0
  2797                           
  2798                           ;PIR_B1.c: 393: for (i = 0; i < 10; i++) {
  2799  0468  01DD               	clrf	getPIR_AD@i
  2800  0469  300A               	movlw	10
  2801  046A  025D               	subwf	getPIR_AD@i,w
  2802  046B  1803               	btfsc	3,0
  2803  046C  2C89               	goto	l4860
  2804  046D                     l4854:	
  2805                           
  2806                           ;PIR_B1.c: 394: _PIR.TenAverageValue += _PIR.TenAverage[i];
  2807  046D  085D               	movf	getPIR_AD@i,w
  2808  046E  3EA5               	addlw	(__PIR+5)& (0+255)
  2809  046F  0084               	movwf	4
  2810  0470  0800               	movf	0,w
  2811  0471  00D6               	movwf	??_getPIR_AD
  2812  0472  01D7               	clrf	??_getPIR_AD+1
  2813  0473  0856               	movf	??_getPIR_AD,w
  2814  0474  1683               	bsf	3,5	;RP0=1, select bank1
  2815  0475  1303               	bcf	3,6	;RP1=0, select bank1
  2816  0476  07AF               	addwf	(__PIR^(0+128)+15),f
  2817  0477  1803               	skipnc
  2818  0478  0AB0               	incf	((__PIR+1)^(0+128)+15),f
  2819  0479  1283               	bcf	3,5	;RP0=0, select bank0
  2820  047A  1303               	bcf	3,6	;RP1=0, select bank0
  2821  047B  0857               	movf	??_getPIR_AD+1,w
  2822  047C  1683               	bsf	3,5	;RP0=1, select bank1
  2823  047D  1303               	bcf	3,6	;RP1=0, select bank1
  2824  047E  07B0               	addwf	((__PIR+1)^(0+128)+15),f
  2825  047F  3001               	movlw	1
  2826  0480  1283               	bcf	3,5	;RP0=0, select bank0
  2827  0481  1303               	bcf	3,6	;RP1=0, select bank0
  2828  0482  00D6               	movwf	??_getPIR_AD
  2829  0483  0856               	movf	??_getPIR_AD,w
  2830  0484  07DD               	addwf	getPIR_AD@i,f
  2831  0485  300A               	movlw	10
  2832  0486  025D               	subwf	getPIR_AD@i,w
  2833  0487  1C03               	skipc
  2834  0488  2C6D               	goto	l4854
  2835  0489                     l4860:	
  2836                           
  2837                           ;PIR_B1.c: 395: }
  2838                           ;PIR_B1.c: 396: _PIR.HundredAverage[_PIR.HundreCount] = (_PIR.TenAverageValue / 10);
  2839  0489  300A               	movlw	10
  2840  048A  00CD               	movwf	___lwdiv@divisor
  2841  048B  3000               	movlw	0
  2842  048C  00CE               	movwf	___lwdiv@divisor+1
  2843  048D  1683               	bsf	3,5	;RP0=1, select bank1
  2844  048E  1303               	bcf	3,6	;RP1=0, select bank1
  2845  048F  0830               	movf	((__PIR+1)^(0+128)+15),w
  2846  0490  1283               	bcf	3,5	;RP0=0, select bank0
  2847  0491  1303               	bcf	3,6	;RP1=0, select bank0
  2848  0492  01D0               	clrf	___lwdiv@dividend+1
  2849  0493  07D0               	addwf	___lwdiv@dividend+1,f
  2850  0494  1683               	bsf	3,5	;RP0=1, select bank1
  2851  0495  1303               	bcf	3,6	;RP1=0, select bank1
  2852  0496  082F               	movf	(__PIR^(0+128)+15),w
  2853  0497  1283               	bcf	3,5	;RP0=0, select bank0
  2854  0498  1303               	bcf	3,6	;RP1=0, select bank0
  2855  0499  01CF               	clrf	___lwdiv@dividend
  2856  049A  07CF               	addwf	___lwdiv@dividend,f
  2857  049B  118A  27BF  118A   	fcall	___lwdiv
  2858  049E  1283               	bcf	3,5	;RP0=0, select bank0
  2859  049F  1303               	bcf	3,6	;RP1=0, select bank0
  2860  04A0  084D               	movf	?___lwdiv,w
  2861  04A1  00D6               	movwf	??_getPIR_AD
  2862  04A2  1683               	bsf	3,5	;RP0=1, select bank1
  2863  04A3  1303               	bcf	3,6	;RP1=0, select bank1
  2864  04A4  0831               	movf	(__PIR^(0+128)+17),w
  2865  04A5  3EB2               	addlw	(__PIR+18)& (0+255)
  2866  04A6  0084               	movwf	4
  2867  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  2868  04A8  1303               	bcf	3,6	;RP1=0, select bank0
  2869  04A9  0856               	movf	??_getPIR_AD,w
  2870  04AA  1383               	bcf	3,7	;select IRP bank1
  2871  04AB  0080               	movwf	0
  2872                           
  2873                           ;PIR_B1.c: 397: _PIR.TenAverageValue = 0;
  2874  04AC  1683               	bsf	3,5	;RP0=1, select bank1
  2875  04AD  1303               	bcf	3,6	;RP1=0, select bank1
  2876  04AE  01AF               	clrf	(__PIR^(0+128)+15)
  2877  04AF  01B0               	clrf	((__PIR+1)^(0+128)+15)
  2878                           
  2879                           ;PIR_B1.c: 399: for (i = 0; i <= 9; i++) {
  2880  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  2881  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  2882  04B2  01DD               	clrf	getPIR_AD@i
  2883  04B3  300A               	movlw	10
  2884  04B4  025D               	subwf	getPIR_AD@i,w
  2885  04B5  1803               	btfsc	3,0
  2886  04B6  2CD3               	goto	l4876
  2887  04B7                     l4870:	
  2888                           
  2889                           ;PIR_B1.c: 400: _PIR.HundredAverageValue += _PIR.HundredAverage[i];
  2890  04B7  085D               	movf	getPIR_AD@i,w
  2891  04B8  3EB2               	addlw	(__PIR+18)& (0+255)
  2892  04B9  0084               	movwf	4
  2893  04BA  0800               	movf	0,w
  2894  04BB  00D6               	movwf	??_getPIR_AD
  2895  04BC  01D7               	clrf	??_getPIR_AD+1
  2896  04BD  0856               	movf	??_getPIR_AD,w
  2897  04BE  1683               	bsf	3,5	;RP0=1, select bank1
  2898  04BF  1303               	bcf	3,6	;RP1=0, select bank1
  2899  04C0  07BC               	addwf	(__PIR^(0+128)+28),f
  2900  04C1  1803               	skipnc
  2901  04C2  0ABD               	incf	((__PIR+1)^(0+128)+28),f
  2902  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  2903  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  2904  04C5  0857               	movf	??_getPIR_AD+1,w
  2905  04C6  1683               	bsf	3,5	;RP0=1, select bank1
  2906  04C7  1303               	bcf	3,6	;RP1=0, select bank1
  2907  04C8  07BD               	addwf	((__PIR+1)^(0+128)+28),f
  2908  04C9  3001               	movlw	1
  2909  04CA  1283               	bcf	3,5	;RP0=0, select bank0
  2910  04CB  1303               	bcf	3,6	;RP1=0, select bank0
  2911  04CC  00D6               	movwf	??_getPIR_AD
  2912  04CD  0856               	movf	??_getPIR_AD,w
  2913  04CE  07DD               	addwf	getPIR_AD@i,f
  2914  04CF  300A               	movlw	10
  2915  04D0  025D               	subwf	getPIR_AD@i,w
  2916  04D1  1C03               	skipc
  2917  04D2  2CB7               	goto	l4870
  2918  04D3                     l4876:	
  2919                           
  2920                           ;PIR_B1.c: 401: }
  2921                           ;PIR_B1.c: 402: _PIR.ReferenceVoltage = (_PIR.HundredAverageValue / 10);
  2922  04D3  300A               	movlw	10
  2923  04D4  00CD               	movwf	___lwdiv@divisor
  2924  04D5  3000               	movlw	0
  2925  04D6  00CE               	movwf	___lwdiv@divisor+1
  2926  04D7  1683               	bsf	3,5	;RP0=1, select bank1
  2927  04D8  1303               	bcf	3,6	;RP1=0, select bank1
  2928  04D9  083D               	movf	((__PIR+1)^(0+128)+28),w
  2929  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  2930  04DB  1303               	bcf	3,6	;RP1=0, select bank0
  2931  04DC  01D0               	clrf	___lwdiv@dividend+1
  2932  04DD  07D0               	addwf	___lwdiv@dividend+1,f
  2933  04DE  1683               	bsf	3,5	;RP0=1, select bank1
  2934  04DF  1303               	bcf	3,6	;RP1=0, select bank1
  2935  04E0  083C               	movf	(__PIR^(0+128)+28),w
  2936  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  2937  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  2938  04E3  01CF               	clrf	___lwdiv@dividend
  2939  04E4  07CF               	addwf	___lwdiv@dividend,f
  2940  04E5  118A  27BF  118A   	fcall	___lwdiv
  2941  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  2942  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  2943  04EA  084D               	movf	?___lwdiv,w
  2944  04EB  00D6               	movwf	??_getPIR_AD
  2945  04EC  0856               	movf	??_getPIR_AD,w
  2946  04ED  1683               	bsf	3,5	;RP0=1, select bank1
  2947  04EE  1303               	bcf	3,6	;RP1=0, select bank1
  2948  04EF  00A3               	movwf	(__PIR^(0+128)+3)
  2949                           
  2950                           ;PIR_B1.c: 403: _PIR.HundredAverageValue = 0;
  2951  04F0  01BC               	clrf	(__PIR^(0+128)+28)
  2952  04F1  01BD               	clrf	((__PIR+1)^(0+128)+28)
  2953                           
  2954                           ;PIR_B1.c: 405: if (_PIR.TenCount < 10) {
  2955  04F2  300A               	movlw	10
  2956  04F3  0224               	subwf	(__PIR^(0+128)+4),w
  2957  04F4  1803               	skipnc
  2958  04F5  2CFF               	goto	l4884
  2959                           
  2960                           ;PIR_B1.c: 406: _PIR.TenCount++;
  2961  04F6  3001               	movlw	1
  2962  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  2963  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  2964  04F9  00D6               	movwf	??_getPIR_AD
  2965  04FA  0856               	movf	??_getPIR_AD,w
  2966  04FB  1683               	bsf	3,5	;RP0=1, select bank1
  2967  04FC  1303               	bcf	3,6	;RP1=0, select bank1
  2968  04FD  07A4               	addwf	(__PIR^(0+128)+4),f
  2969                           
  2970                           ;PIR_B1.c: 407: } else {
  2971  04FE  0008               	return
  2972  04FF                     l4884:	
  2973                           
  2974                           ;PIR_B1.c: 408: _PIR.TenCount = 0;
  2975  04FF  01A4               	clrf	(__PIR^(0+128)+4)
  2976                           
  2977                           ;PIR_B1.c: 409: if (_PIR.HundreCount < 10)
  2978  0500  300A               	movlw	10
  2979  0501  0231               	subwf	(__PIR^(0+128)+17),w
  2980  0502  1803               	skipnc
  2981  0503  2D0D               	goto	l4890
  2982                           
  2983                           ;PIR_B1.c: 410: _PIR.HundreCount++;
  2984  0504  3001               	movlw	1
  2985  0505  1283               	bcf	3,5	;RP0=0, select bank0
  2986  0506  1303               	bcf	3,6	;RP1=0, select bank0
  2987  0507  00D6               	movwf	??_getPIR_AD
  2988  0508  0856               	movf	??_getPIR_AD,w
  2989  0509  1683               	bsf	3,5	;RP0=1, select bank1
  2990  050A  1303               	bcf	3,6	;RP1=0, select bank1
  2991  050B  07B1               	addwf	(__PIR^(0+128)+17),f
  2992  050C  0008               	return
  2993  050D                     l4890:	
  2994                           
  2995                           ;PIR_B1.c: 411: else
  2996                           ;PIR_B1.c: 412: _PIR.HundreCount = 0;
  2997  050D  01B1               	clrf	(__PIR^(0+128)+17)
  2998  050E  0008               	return
  2999  050F                     __end_of_getPIR_AD:	
  3000                           
  3001                           	psect	text5
  3002  0E7C                     __ptext5:	
  3003 ;; *************** function _getLoad_AD *****************
  3004 ;; Defined at:
  3005 ;;		line 15 in file "../src/OverLoad_B1.c"
  3006 ;; Parameters:    Size  Location     Type
  3007 ;;  channel         1    wreg     unsigned char 
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;  channel         1    2[BANK0 ] unsigned char 
  3010 ;;  i               1    6[BANK0 ] unsigned char 
  3011 ;;  ADRES           1    5[BANK0 ] unsigned char 
  3012 ;;  j               1    4[BANK0 ] unsigned char 
  3013 ;;  k               1    3[BANK0 ] unsigned char 
  3014 ;; Return value:  Size  Location     Type
  3015 ;;		None               void
  3016 ;; Registers used:
  3017 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3023 ;;      Params:         0       0       0       0
  3024 ;;      Locals:         0       5       0       0
  3025 ;;      Temps:          0       2       0       0
  3026 ;;      Totals:         0       7       0       0
  3027 ;;Total ram usage:        7 bytes
  3028 ;; Hardware stack levels used:    1
  3029 ;; Hardware stack levels required when called:    4
  3030 ;; This function calls:
  3031 ;;		_getAD
  3032 ;; This function is called by:
  3033 ;;		_main
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           
  3038                           ;psect for function _getLoad_AD
  3039  0E7C                     _getLoad_AD:	
  3040                           
  3041                           ;incstack = 0
  3042                           ; Regs used in _getLoad_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3043                           ;getLoad_AD@channel stored from wreg
  3044  0E7C  1283               	bcf	3,5	;RP0=0, select bank0
  3045  0E7D  1303               	bcf	3,6	;RP1=0, select bank0
  3046  0E7E  00CF               	movwf	getLoad_AD@channel
  3047                           
  3048                           ;OverLoad_B1.c: 16: char i = 0, j = 0, k = 0;
  3049  0E7F  01D3               	clrf	getLoad_AD@i
  3050  0E80  01D1               	clrf	getLoad_AD@j
  3051  0E81  01D0               	clrf	getLoad_AD@k
  3052                           
  3053                           ;OverLoad_B1.c: 17: ADtype ADRES = 0;
  3054  0E82  01D2               	clrf	getLoad_AD@ADRES
  3055                           
  3056                           ;OverLoad_B1.c: 18: if (Load.ADtoGO == 1) {
  3057  0E83  1683               	bsf	3,5	;RP0=1, select bank1
  3058  0E84  1303               	bcf	3,6	;RP1=0, select bank1
  3059  0E85  1E4A               	btfss	_Load^(0+128),4
  3060  0E86  0008               	return
  3061                           
  3062                           ;OverLoad_B1.c: 20: ADRES = getAD(channel, 0x73);
  3063  0E87  3073               	movlw	115
  3064  0E88  1283               	bcf	3,5	;RP0=0, select bank0
  3065  0E89  1303               	bcf	3,6	;RP1=0, select bank0
  3066  0E8A  00CD               	movwf	??_getLoad_AD
  3067  0E8B  084D               	movf	??_getLoad_AD,w
  3068  0E8C  00F4               	movwf	getAD@adcon1
  3069  0E8D  084F               	movf	getLoad_AD@channel,w
  3070  0E8E  158A  24D1  158A   	fcall	_getAD
  3071  0E91  1283               	bcf	3,5	;RP0=0, select bank0
  3072  0E92  1303               	bcf	3,6	;RP1=0, select bank0
  3073  0E93  00CE               	movwf	??_getLoad_AD+1
  3074  0E94  084E               	movf	??_getLoad_AD+1,w
  3075  0E95  00D2               	movwf	getLoad_AD@ADRES
  3076                           
  3077                           ;OverLoad_B1.c: 21: for (i = 0; i < 4; i++) {
  3078  0E96  01D3               	clrf	getLoad_AD@i
  3079  0E97  3004               	movlw	4
  3080  0E98  0253               	subwf	getLoad_AD@i,w
  3081  0E99  1803               	btfsc	3,0
  3082  0E9A  2EB7               	goto	l4782
  3083  0E9B                     l4770:	
  3084                           
  3085                           ;OverLoad_B1.c: 22: if (Load.AH[i] < ADRES && j == 0) {
  3086  0E9B  0853               	movf	getLoad_AD@i,w
  3087  0E9C  3ED4               	addlw	(_Load+10)& (0+255)
  3088  0E9D  0084               	movwf	4
  3089  0E9E  0852               	movf	getLoad_AD@ADRES,w
  3090  0E9F  1383               	bcf	3,7	;select IRP bank1
  3091  0EA0  0200               	subwf	0,w
  3092  0EA1  1803               	skipnc
  3093  0EA2  2EAF               	goto	l4778
  3094  0EA3  08D1               	movf	getLoad_AD@j,f
  3095  0EA4  1D03               	skipz
  3096  0EA5  2EAF               	goto	l4778
  3097                           
  3098                           ;OverLoad_B1.c: 23: Load.AH[i] = ADRES;
  3099  0EA6  0852               	movf	getLoad_AD@ADRES,w
  3100  0EA7  00CD               	movwf	??_getLoad_AD
  3101  0EA8  0853               	movf	getLoad_AD@i,w
  3102  0EA9  3ED4               	addlw	(_Load+10)& (0+255)
  3103  0EAA  0084               	movwf	4
  3104  0EAB  084D               	movf	??_getLoad_AD,w
  3105  0EAC  0080               	movwf	0
  3106                           
  3107                           ;OverLoad_B1.c: 24: j = 1;
  3108  0EAD  01D1               	clrf	getLoad_AD@j
  3109  0EAE  0AD1               	incf	getLoad_AD@j,f
  3110  0EAF                     l4778:	
  3111  0EAF  3001               	movlw	1
  3112  0EB0  00CD               	movwf	??_getLoad_AD
  3113  0EB1  084D               	movf	??_getLoad_AD,w
  3114  0EB2  07D3               	addwf	getLoad_AD@i,f
  3115  0EB3  3004               	movlw	4
  3116  0EB4  0253               	subwf	getLoad_AD@i,w
  3117  0EB5  1C03               	skipc
  3118  0EB6  2E9B               	goto	l4770
  3119  0EB7                     l4782:	
  3120                           
  3121                           ;OverLoad_B1.c: 25: }
  3122                           ;OverLoad_B1.c: 26: }
  3123                           ;OverLoad_B1.c: 27: if (j == 0) {
  3124  0EB7  08D1               	movf	getLoad_AD@j,f
  3125  0EB8  1D03               	skipz
  3126  0EB9  0008               	return
  3127                           
  3128                           ;OverLoad_B1.c: 28: for (i = 0; i < 4; i++) {
  3129  0EBA  01D3               	clrf	getLoad_AD@i
  3130  0EBB                     L6:	
  3131  0EBB  3004               	movlw	4
  3132  0EBC  0253               	subwf	getLoad_AD@i,w
  3133  0EBD  1803               	btfsc	3,0
  3134  0EBE  0008               	return
  3135                           
  3136                           ;OverLoad_B1.c: 29: if (Load.AL[i] > ADRES && k == 0) {
  3137  0EBF  0853               	movf	getLoad_AD@i,w
  3138  0EC0  3ED9               	addlw	(_Load+15)& (0+255)
  3139  0EC1  0084               	movwf	4
  3140  0EC2  1383               	bcf	3,7	;select IRP bank1
  3141  0EC3  0800               	movf	0,w
  3142  0EC4  0252               	subwf	getLoad_AD@ADRES,w
  3143  0EC5  1803               	skipnc
  3144  0EC6  2ED3               	goto	l4798
  3145  0EC7  08D0               	movf	getLoad_AD@k,f
  3146  0EC8  1D03               	skipz
  3147  0EC9  2ED3               	goto	l4798
  3148                           
  3149                           ;OverLoad_B1.c: 30: Load.AL[i] = ADRES;
  3150  0ECA  0852               	movf	getLoad_AD@ADRES,w
  3151  0ECB  00CD               	movwf	??_getLoad_AD
  3152  0ECC  0853               	movf	getLoad_AD@i,w
  3153  0ECD  3ED9               	addlw	(_Load+15)& (0+255)
  3154  0ECE  0084               	movwf	4
  3155  0ECF  084D               	movf	??_getLoad_AD,w
  3156  0ED0  0080               	movwf	0
  3157                           
  3158                           ;OverLoad_B1.c: 31: k = 1;
  3159  0ED1  01D0               	clrf	getLoad_AD@k
  3160  0ED2  0AD0               	incf	getLoad_AD@k,f
  3161  0ED3                     l4798:	
  3162  0ED3  3001               	movlw	1
  3163  0ED4  00CD               	movwf	??_getLoad_AD
  3164  0ED5  084D               	movf	??_getLoad_AD,w
  3165  0ED6  07D3               	addwf	getLoad_AD@i,f
  3166  0ED7  2EBB               	goto	L6
  3167  0ED8                     __end_of_getLoad_AD:	
  3168                           
  3169                           	psect	text6
  3170  0D2A                     __ptext6:	
  3171 ;; *************** function _getCDS_AD *****************
  3172 ;; Defined at:
  3173 ;;		line 48 in file "../src/CDS_B1.c"
  3174 ;; Parameters:    Size  Location     Type
  3175 ;;  channel1        1    wreg     unsigned char 
  3176 ;;  channel2        1    0[BANK0 ] unsigned char 
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;  channel1        1    5[BANK0 ] unsigned char 
  3179 ;;  j               1    4[BANK0 ] unsigned char 
  3180 ;;  i               1    3[BANK0 ] unsigned char 
  3181 ;; Return value:  Size  Location     Type
  3182 ;;		None               void
  3183 ;; Registers used:
  3184 ;;		wreg, status,2, status,0, pclath, cstack
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3190 ;;      Params:         0       1       0       0
  3191 ;;      Locals:         0       3       0       0
  3192 ;;      Temps:          0       2       0       0
  3193 ;;      Totals:         0       6       0       0
  3194 ;;Total ram usage:        6 bytes
  3195 ;; Hardware stack levels used:    1
  3196 ;; Hardware stack levels required when called:    4
  3197 ;; This function calls:
  3198 ;;		_getAD
  3199 ;; This function is called by:
  3200 ;;		_main
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203                           
  3204                           
  3205                           ;psect for function _getCDS_AD
  3206  0D2A                     _getCDS_AD:	
  3207                           
  3208                           ;incstack = 0
  3209                           ; Regs used in _getCDS_AD: [wreg+status,2+status,0+pclath+cstack]
  3210                           ;getCDS_AD@channel1 stored from wreg
  3211  0D2A  1283               	bcf	3,5	;RP0=0, select bank0
  3212  0D2B  1303               	bcf	3,6	;RP1=0, select bank0
  3213  0D2C  00D2               	movwf	getCDS_AD@channel1
  3214                           
  3215                           ;CDS_B1.c: 49: char i = 0, j = 0;
  3216  0D2D  01D0               	clrf	getCDS_AD@i
  3217  0D2E  01D1               	clrf	getCDS_AD@j
  3218                           
  3219                           ;CDS_B1.c: 50: if (_CDS.ADtoGO == 1) {
  3220  0D2F  1DAE               	btfss	__CDS,3
  3221  0D30  0008               	return
  3222                           
  3223                           ;CDS_B1.c: 51: _CDS.GO = 1;
  3224  0D31  14AE               	bsf	__CDS,1
  3225                           
  3226                           ;CDS_B1.c: 52: _CDS.VRAD = getAD(channel1, 0x70);
  3227  0D32  3070               	movlw	112
  3228  0D33  00CE               	movwf	??_getCDS_AD
  3229  0D34  084E               	movf	??_getCDS_AD,w
  3230  0D35  00F4               	movwf	getAD@adcon1
  3231  0D36  0852               	movf	getCDS_AD@channel1,w
  3232  0D37  158A  24D1  158A   	fcall	_getAD
  3233  0D3A  1283               	bcf	3,5	;RP0=0, select bank0
  3234  0D3B  1303               	bcf	3,6	;RP1=0, select bank0
  3235  0D3C  00CF               	movwf	??_getCDS_AD+1
  3236  0D3D  084F               	movf	??_getCDS_AD+1,w
  3237  0D3E  00B0               	movwf	__CDS+2
  3238                           
  3239                           ;CDS_B1.c: 53: _CDS.SignalAD = getAD(channel2, 0x70);
  3240  0D3F  3070               	movlw	112
  3241  0D40  00CE               	movwf	??_getCDS_AD
  3242  0D41  084E               	movf	??_getCDS_AD,w
  3243  0D42  00F4               	movwf	getAD@adcon1
  3244  0D43  084D               	movf	getCDS_AD@channel2,w
  3245  0D44  158A  24D1         	fcall	_getAD
  3246  0D46  1283               	bcf	3,5	;RP0=0, select bank0
  3247  0D47  1303               	bcf	3,6	;RP1=0, select bank0
  3248  0D48  00CF               	movwf	??_getCDS_AD+1
  3249  0D49  084F               	movf	??_getCDS_AD+1,w
  3250  0D4A  00B1               	movwf	__CDS+3
  3251  0D4B  0008               	return
  3252  0D4C                     __end_of_getCDS_AD:	
  3253                           
  3254                           	psect	text7
  3255  0CD1                     __ptext7:	
  3256 ;; *************** function _getAD *****************
  3257 ;; Defined at:
  3258 ;;		line 434 in file "../src/MCU_B1.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;  adcon0          1    wreg     unsigned char 
  3261 ;;  adcon1          1    4[COMMON] unsigned char 
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;  adcon0          1    5[COMMON] unsigned char 
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  1    wreg      unsigned char 
  3266 ;; Registers used:
  3267 ;;		wreg, status,2, status,0, pclath, cstack
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3273 ;;      Params:         1       0       0       0
  3274 ;;      Locals:         1       0       0       0
  3275 ;;      Temps:          0       0       0       0
  3276 ;;      Totals:         2       0       0       0
  3277 ;;Total ram usage:        2 bytes
  3278 ;; Hardware stack levels used:    1
  3279 ;; Hardware stack levels required when called:    3
  3280 ;; This function calls:
  3281 ;;		_Timeout_Counter
  3282 ;;		_set_TimeoutCleared
  3283 ;; This function is called by:
  3284 ;;		_getCDS_AD
  3285 ;;		_getLoad_AD
  3286 ;;		_getTemp_AD
  3287 ;;		_getPIR_AD
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           
  3292                           ;psect for function _getAD
  3293  0CD1                     _getAD:	
  3294                           
  3295                           ;incstack = 0
  3296                           ; Regs used in _getAD: [wreg+status,2+status,0+pclath+cstack]
  3297                           ;getAD@adcon0 stored from wreg
  3298  0CD1  00F5               	movwf	getAD@adcon0
  3299                           
  3300                           ;MCU_B1.c: 435: ADCON0 = adcon0;
  3301  0CD2  0875               	movf	getAD@adcon0,w
  3302  0CD3  1283               	bcf	3,5	;RP0=0, select bank0
  3303  0CD4  1303               	bcf	3,6	;RP1=0, select bank0
  3304  0CD5  009F               	movwf	31	;volatile
  3305                           
  3306                           ;MCU_B1.c: 436: ADCON1 = adcon1;
  3307  0CD6  0874               	movf	getAD@adcon1,w
  3308  0CD7  1683               	bsf	3,5	;RP0=1, select bank1
  3309  0CD8  1303               	bcf	3,6	;RP1=0, select bank1
  3310  0CD9  009F               	movwf	31	;volatile
  3311                           
  3312                           ;MCU_B1.c: 437: GO_nDONE = 1;
  3313  0CDA  1283               	bcf	3,5	;RP0=0, select bank0
  3314  0CDB  1303               	bcf	3,6	;RP1=0, select bank0
  3315  0CDC  149F               	bsf	31,1	;volatile
  3316                           
  3317                           ;MCU_B1.c: 438: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  3318  0CDD  2CE1               	goto	l4562
  3319  0CDE                     l4560:	
  3320                           
  3321                           ;MCU_B1.c: 439: Timeout_Counter();
  3322  0CDE  158A  23F9  158A   	fcall	_Timeout_Counter
  3323  0CE1                     l4562:	
  3324  0CE1  1283               	bcf	3,5	;RP0=0, select bank0
  3325  0CE2  1303               	bcf	3,6	;RP1=0, select bank0
  3326  0CE3  1C9F               	btfss	31,1	;volatile
  3327  0CE4  2CE7               	goto	l4566
  3328  0CE5  1D27               	btfss	_myMain+2,2
  3329  0CE6  2CDE               	goto	l4560
  3330  0CE7                     l4566:	
  3331                           
  3332                           ;MCU_B1.c: 440: };
  3333                           ;MCU_B1.c: 441: set_TimeoutCleared();
  3334  0CE7  158A  2307         	fcall	_set_TimeoutCleared
  3335                           
  3336                           ;MCU_B1.c: 442: return ADRES;
  3337  0CE9  1283               	bcf	3,5	;RP0=0, select bank0
  3338  0CEA  1303               	bcf	3,6	;RP1=0, select bank0
  3339  0CEB  081E               	movf	30,w	;volatile
  3340  0CEC  0008               	return
  3341  0CED                     __end_of_getAD:	
  3342                           
  3343                           	psect	text8
  3344  0B07                     __ptext8:	
  3345 ;; *************** function _set_TimeoutCleared *****************
  3346 ;; Defined at:
  3347 ;;		line 281 in file "../src/Main_B1.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;		None
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;		None
  3352 ;; Return value:  Size  Location     Type
  3353 ;;		None               void
  3354 ;; Registers used:
  3355 ;;		status,2
  3356 ;; Tracked objects:
  3357 ;;		On entry : 0/0
  3358 ;;		On exit  : 0/0
  3359 ;;		Unchanged: 0/0
  3360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3361 ;;      Params:         0       0       0       0
  3362 ;;      Locals:         0       0       0       0
  3363 ;;      Temps:          0       0       0       0
  3364 ;;      Totals:         0       0       0       0
  3365 ;;Total ram usage:        0 bytes
  3366 ;; Hardware stack levels used:    1
  3367 ;; Hardware stack levels required when called:    2
  3368 ;; This function calls:
  3369 ;;		Nothing
  3370 ;; This function is called by:
  3371 ;;		_getAD
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           
  3376                           ;psect for function _set_TimeoutCleared
  3377  0B07                     _set_TimeoutCleared:	
  3378                           
  3379                           ;Main_B1.c: 282: myMain.Timeout = 0;
  3380                           
  3381                           ;incstack = 0
  3382                           ; Regs used in _set_TimeoutCleared: [status,2]
  3383  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  3384  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  3385  0B09  1127               	bcf	_myMain+2,2
  3386                           
  3387                           ;Main_B1.c: 283: myMain.Timeout_Counter = 0;
  3388  0B0A  01A8               	clrf	_myMain+3
  3389  0B0B  01A9               	clrf	_myMain+4
  3390  0B0C  0008               	return
  3391  0B0D                     __end_of_set_TimeoutCleared:	
  3392                           
  3393                           	psect	text9
  3394  0BF9                     __ptext9:	
  3395 ;; *************** function _Timeout_Counter *****************
  3396 ;; Defined at:
  3397 ;;		line 272 in file "../src/Main_B1.c"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;		None
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;		None
  3402 ;; Return value:  Size  Location     Type
  3403 ;;		None               void
  3404 ;; Registers used:
  3405 ;;		wreg, status,2
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3411 ;;      Params:         0       0       0       0
  3412 ;;      Locals:         0       0       0       0
  3413 ;;      Temps:          0       0       0       0
  3414 ;;      Totals:         0       0       0       0
  3415 ;;Total ram usage:        0 bytes
  3416 ;; Hardware stack levels used:    1
  3417 ;; Hardware stack levels required when called:    2
  3418 ;; This function calls:
  3419 ;;		Nothing
  3420 ;; This function is called by:
  3421 ;;		_getAD
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425                           
  3426                           ;psect for function _Timeout_Counter
  3427  0BF9                     _Timeout_Counter:	
  3428                           
  3429                           ;Main_B1.c: 273: myMain.Timeout_Counter++;
  3430                           
  3431                           ;incstack = 0
  3432                           ; Regs used in _Timeout_Counter: [wreg+status,2]
  3433  0BF9  3001               	movlw	1
  3434  0BFA  1283               	bcf	3,5	;RP0=0, select bank0
  3435  0BFB  1303               	bcf	3,6	;RP1=0, select bank0
  3436  0BFC  07A8               	addwf	_myMain+3,f
  3437  0BFD  1803               	skipnc
  3438  0BFE  0AA9               	incf	_myMain+4,f
  3439  0BFF  3000               	movlw	0
  3440  0C00  07A9               	addwf	_myMain+4,f
  3441                           
  3442                           ;Main_B1.c: 274: if (myMain.Timeout_Counter == 25000) {
  3443  0C01  3061               	movlw	97
  3444  0C02  0629               	xorwf	_myMain+4,w
  3445  0C03  1D03               	skipz
  3446  0C04  2C07               	goto	u5055
  3447  0C05  30A8               	movlw	168
  3448  0C06  0628               	xorwf	_myMain+3,w
  3449  0C07                     u5055:	
  3450  0C07  1D03               	skipz
  3451  0C08  0008               	return
  3452                           
  3453                           ;Main_B1.c: 275: myMain.Timeout_Counter = 0;
  3454  0C09  01A8               	clrf	_myMain+3
  3455  0C0A  01A9               	clrf	_myMain+4
  3456                           
  3457                           ;Main_B1.c: 276: myMain.Timeout = 1;
  3458  0C0B  1527               	bsf	_myMain+2,2
  3459  0C0C  0008               	return
  3460  0C0D                     __end_of_Timeout_Counter:	
  3461                           
  3462                           	psect	text10
  3463  0BC4                     __ptext10:	
  3464 ;; *************** function _WDT_Main *****************
  3465 ;; Defined at:
  3466 ;;		line 1116 in file "../src/MCU_B1.c"
  3467 ;; Parameters:    Size  Location     Type
  3468 ;;		None
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;		None
  3471 ;; Return value:  Size  Location     Type
  3472 ;;		None               void
  3473 ;; Registers used:
  3474 ;;		wreg, status,2, status,0, pclath, cstack
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3480 ;;      Params:         0       0       0       0
  3481 ;;      Locals:         0       0       0       0
  3482 ;;      Temps:          1       0       0       0
  3483 ;;      Totals:         1       0       0       0
  3484 ;;Total ram usage:        1 bytes
  3485 ;; Hardware stack levels used:    1
  3486 ;; Hardware stack levels required when called:    3
  3487 ;; This function calls:
  3488 ;;		_WDT_Clearing
  3489 ;; This function is called by:
  3490 ;;		_main
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493                           
  3494                           
  3495                           ;psect for function _WDT_Main
  3496  0BC4                     _WDT_Main:	
  3497                           
  3498                           ;MCU_B1.c: 1117: if (WDT.Enable == 1) {
  3499                           
  3500                           ;incstack = 0
  3501                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  3502  0BC4  1283               	bcf	3,5	;RP0=0, select bank0
  3503  0BC5  1303               	bcf	3,6	;RP1=0, select bank0
  3504  0BC6  1C35               	btfss	_WDT,0
  3505  0BC7  0008               	return
  3506                           
  3507                           ;MCU_B1.c: 1118: if (WDT.Timer-- > 0) {
  3508  0BC8  3001               	movlw	1
  3509  0BC9  02B6               	subwf	_WDT+1,f
  3510  0BCA  0836               	movf	_WDT+1,w
  3511  0BCB  3AFF               	xorlw	255
  3512  0BCC  1903               	skipnz
  3513  0BCD  0008               	return
  3514                           
  3515                           ;MCU_B1.c: 1119: WDT.Timer = 100;
  3516  0BCE  3064               	movlw	100
  3517  0BCF  00F4               	movwf	??_WDT_Main
  3518  0BD0  0874               	movf	??_WDT_Main,w
  3519  0BD1  00B6               	movwf	_WDT+1
  3520                           
  3521                           ;MCU_B1.c: 1120: WDT_Clearing();
  3522  0BD2  118A  2002         	fcall	_WDT_Clearing
  3523  0BD4  0008               	return
  3524  0BD5                     __end_of_WDT_Main:	
  3525                           
  3526                           	psect	text11
  3527  0002                     __ptext11:	
  3528 ;; *************** function _WDT_Clearing *****************
  3529 ;; Defined at:
  3530 ;;		line 1126 in file "../src/MCU_B1.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;		None
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;		None
  3535 ;; Return value:  Size  Location     Type
  3536 ;;		None               void
  3537 ;; Registers used:
  3538 ;;		None
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3544 ;;      Params:         0       0       0       0
  3545 ;;      Locals:         0       0       0       0
  3546 ;;      Temps:          0       0       0       0
  3547 ;;      Totals:         0       0       0       0
  3548 ;;Total ram usage:        0 bytes
  3549 ;; Hardware stack levels used:    1
  3550 ;; Hardware stack levels required when called:    2
  3551 ;; This function calls:
  3552 ;;		Nothing
  3553 ;; This function is called by:
  3554 ;;		_WDT_Main
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           
  3559                           ;psect for function _WDT_Clearing
  3560  0002                     _WDT_Clearing:	
  3561                           
  3562                           ;incstack = 0
  3563                           ; Regs used in _WDT_Clearing: []
  3564  0002  0064               	clrwdt	;# 
  3565  0003  0008               	return
  3566  0004                     __end_of_WDT_Clearing:	
  3567                           
  3568                           	psect	text12
  3569  0AE7                     __ptext12:	
  3570 ;; *************** function _Temp_Main *****************
  3571 ;; Defined at:
  3572 ;;		line 57 in file "../src/OverTemperature_B1.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;		None
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;		None
  3577 ;; Return value:  Size  Location     Type
  3578 ;;		None               void
  3579 ;; Registers used:
  3580 ;;		wreg, status,2, status,0, pclath, cstack
  3581 ;; Tracked objects:
  3582 ;;		On entry : 0/0
  3583 ;;		On exit  : 0/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3586 ;;      Params:         0       0       0       0
  3587 ;;      Locals:         0       0       0       0
  3588 ;;      Temps:          0       0       0       0
  3589 ;;      Totals:         0       0       0       0
  3590 ;;Total ram usage:        0 bytes
  3591 ;; Hardware stack levels used:    1
  3592 ;; Hardware stack levels required when called:    4
  3593 ;; This function calls:
  3594 ;;		_setTemp_Main
  3595 ;; This function is called by:
  3596 ;;		_main
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           
  3601                           ;psect for function _Temp_Main
  3602  0AE7                     _Temp_Main:	
  3603                           
  3604                           ;OverTemperature_B1.c: 59: setTemp_Main();
  3605                           
  3606                           ;incstack = 0
  3607                           ; Regs used in _Temp_Main: [wreg+status,2+status,0+pclath+cstack]
  3608  0AE7  118A  26D3         	fcall	_setTemp_Main
  3609  0AE9  0008               	return
  3610  0AEA                     __end_of_Temp_Main:	
  3611                           
  3612                           	psect	text13
  3613  06D3                     __ptext13:	
  3614 ;; *************** function _setTemp_Main *****************
  3615 ;; Defined at:
  3616 ;;		line 64 in file "../src/OverTemperature_B1.c"
  3617 ;; Parameters:    Size  Location     Type
  3618 ;;		None
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;  AD              1   10[BANK0 ] unsigned char 
  3621 ;;  DangerValue     1    9[BANK0 ] unsigned char 
  3622 ;;  SafeValue       1    8[BANK0 ] unsigned char 
  3623 ;;  TempGO          1    7[BANK0 ] unsigned char 
  3624 ;;  error           1    6[BANK0 ] unsigned char 
  3625 ;; Return value:  Size  Location     Type
  3626 ;;		None               void
  3627 ;; Registers used:
  3628 ;;		wreg, status,2, status,0, pclath, cstack
  3629 ;; Tracked objects:
  3630 ;;		On entry : 0/0
  3631 ;;		On exit  : 0/0
  3632 ;;		Unchanged: 0/0
  3633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3634 ;;      Params:         0       0       0       0
  3635 ;;      Locals:         0       5       0       0
  3636 ;;      Temps:          1       0       0       0
  3637 ;;      Totals:         1       5       0       0
  3638 ;;Total ram usage:        6 bytes
  3639 ;; Hardware stack levels used:    1
  3640 ;; Hardware stack levels required when called:    3
  3641 ;; This function calls:
  3642 ;;		_getMain_All_Error_Status
  3643 ;;		_getMain_All_LightsStatus
  3644 ;; This function is called by:
  3645 ;;		_Temp_Main
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           
  3650                           ;psect for function _setTemp_Main
  3651  06D3                     _setTemp_Main:	
  3652                           
  3653                           ;OverTemperature_B1.c: 65: char error = getMain_All_Error_Status(0);
  3654                           
  3655                           ;incstack = 0
  3656                           ; Regs used in _setTemp_Main: [wreg+status,2+status,0+pclath+cstack]
  3657  06D3  3000               	movlw	0
  3658  06D4  158A  25FA  118A   	fcall	_getMain_All_Error_Status
  3659  06D7  00F5               	movwf	??_setTemp_Main
  3660  06D8  0875               	movf	??_setTemp_Main,w
  3661  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  3662  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  3663  06DB  00D3               	movwf	setTemp_Main@error
  3664                           
  3665                           ;OverTemperature_B1.c: 66: ADtype SafeValue = 0, DangerValue = 0, AD;
  3666  06DC  01D5               	clrf	setTemp_Main@SafeValue
  3667  06DD  01D6               	clrf	setTemp_Main@DangerValue
  3668                           
  3669                           ;OverTemperature_B1.c: 67: char TempGO = getMain_All_LightsStatus();
  3670  06DE  158A  2344  118A   	fcall	_getMain_All_LightsStatus
  3671  06E1  00F5               	movwf	??_setTemp_Main
  3672  06E2  0875               	movf	??_setTemp_Main,w
  3673  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  3674  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  3675  06E5  00D4               	movwf	setTemp_Main@TempGO
  3676                           
  3677                           ;OverTemperature_B1.c: 69: if (Temp.Enable == 1) {
  3678  06E6  1C39               	btfss	_Temp,0
  3679  06E7  2F4A               	goto	l820
  3680                           
  3681                           ;OverTemperature_B1.c: 77: if (Temp.ADtoGO == 0) {
  3682  06E8  1939               	btfsc	_Temp,2
  3683  06E9  2F06               	goto	l3488
  3684                           
  3685                           ;OverTemperature_B1.c: 78: if ((TempGO == 1 && Temp.ERROR == 0) || Temp.ERROR == 1) {
  3686  06EA  0854               	movf	setTemp_Main@TempGO,w
  3687  06EB  3A01               	xorlw	1
  3688  06EC  1D03               	skipz
  3689  06ED  2EF0               	goto	l826
  3690  06EE  1CB9               	btfss	_Temp,1
  3691  06EF  2EF2               	goto	l3480
  3692  06F0                     l826:	
  3693  06F0  1CB9               	btfss	_Temp,1
  3694  06F1  2F03               	goto	l3486
  3695  06F2                     l3480:	
  3696                           
  3697                           ;OverTemperature_B1.c: 79: Temp.Time++;
  3698  06F2  3001               	movlw	1
  3699  06F3  07BA               	addwf	_Temp+1,f
  3700  06F4  1803               	skipnc
  3701  06F5  0ABB               	incf	_Temp+2,f
  3702  06F6  3000               	movlw	0
  3703  06F7  07BB               	addwf	_Temp+2,f
  3704                           
  3705                           ;OverTemperature_B1.c: 80: if (Temp.Time >= (5000 / 20)) {
  3706  06F8  3000               	movlw	0
  3707  06F9  023B               	subwf	_Temp+2,w
  3708  06FA  30FA               	movlw	250
  3709  06FB  1903               	skipnz
  3710  06FC  023A               	subwf	_Temp+1,w
  3711  06FD  1C03               	skipc
  3712  06FE  0008               	return
  3713                           
  3714                           ;OverTemperature_B1.c: 81: Temp.Time = 0;
  3715  06FF  01BA               	clrf	_Temp+1
  3716  0700  01BB               	clrf	_Temp+2
  3717                           
  3718                           ;OverTemperature_B1.c: 82: Temp.ADtoGO = 1;
  3719  0701  1539               	bsf	_Temp,2
  3720                           
  3721                           ;OverTemperature_B1.c: 83: }
  3722                           ;OverTemperature_B1.c: 84: } else {
  3723  0702  0008               	return
  3724  0703                     l3486:	
  3725                           
  3726                           ;OverTemperature_B1.c: 85: Temp.Time = 0;
  3727  0703  01BA               	clrf	_Temp+1
  3728  0704  01BB               	clrf	_Temp+2
  3729                           
  3730                           ;OverTemperature_B1.c: 86: }
  3731                           ;OverTemperature_B1.c: 87: } else {
  3732  0705  0008               	return
  3733  0706                     l3488:	
  3734                           
  3735                           ;OverTemperature_B1.c: 88: Temp.Time++;
  3736  0706  3001               	movlw	1
  3737  0707  07BA               	addwf	_Temp+1,f
  3738  0708  1803               	skipnc
  3739  0709  0ABB               	incf	_Temp+2,f
  3740  070A  3000               	movlw	0
  3741  070B  07BB               	addwf	_Temp+2,f
  3742                           
  3743                           ;OverTemperature_B1.c: 89: if (Temp.Time >= (100 / 20)) {
  3744  070C  3000               	movlw	0
  3745  070D  023B               	subwf	_Temp+2,w
  3746  070E  3005               	movlw	5
  3747  070F  1903               	skipnz
  3748  0710  023A               	subwf	_Temp+1,w
  3749  0711  1C03               	skipc
  3750  0712  0008               	return
  3751                           
  3752                           ;OverTemperature_B1.c: 90: Temp.Time = 0;
  3753  0713  01BA               	clrf	_Temp+1
  3754  0714  01BB               	clrf	_Temp+2
  3755                           
  3756                           ;OverTemperature_B1.c: 95: if (Temp.ADV > 0) {
  3757  0715  083F               	movf	_Temp+6,w
  3758  0716  1903               	btfsc	3,2
  3759  0717  2F46               	goto	l831
  3760                           
  3761                           ;OverTemperature_B1.c: 96: Temp.ADtoGO = 0;
  3762  0718  1139               	bcf	_Temp,2
  3763                           
  3764                           ;OverTemperature_B1.c: 97: AD = Temp.ADV;
  3765  0719  083F               	movf	_Temp+6,w
  3766  071A  00F5               	movwf	??_setTemp_Main
  3767  071B  0875               	movf	??_setTemp_Main,w
  3768  071C  00D7               	movwf	setTemp_Main@AD
  3769                           
  3770                           ;OverTemperature_B1.c: 106: SafeValue = 0x39;
  3771  071D  3039               	movlw	57
  3772  071E  00F5               	movwf	??_setTemp_Main
  3773  071F  0875               	movf	??_setTemp_Main,w
  3774  0720  00D5               	movwf	setTemp_Main@SafeValue
  3775                           
  3776                           ;OverTemperature_B1.c: 107: DangerValue = 0x6a;
  3777  0721  306A               	movlw	106
  3778  0722  00F5               	movwf	??_setTemp_Main
  3779  0723  0875               	movf	??_setTemp_Main,w
  3780  0724  00D6               	movwf	setTemp_Main@DangerValue
  3781                           
  3782                           ;OverTemperature_B1.c: 119: if (Temp.ERROR == 1) {
  3783  0725  1CB9               	btfss	_Temp,1
  3784  0726  2F36               	goto	l3512
  3785                           
  3786                           ;OverTemperature_B1.c: 120: if (AD >= SafeValue) {
  3787  0727  0855               	movf	setTemp_Main@SafeValue,w
  3788  0728  0257               	subwf	setTemp_Main@AD,w
  3789  0729  1C03               	skipc
  3790  072A  2F45               	goto	l3522
  3791                           
  3792                           ;OverTemperature_B1.c: 121: Temp.Count++;
  3793  072B  3001               	movlw	1
  3794  072C  00F5               	movwf	??_setTemp_Main
  3795  072D  0875               	movf	??_setTemp_Main,w
  3796  072E  07BC               	addwf	_Temp+3,f
  3797                           
  3798                           ;OverTemperature_B1.c: 122: if (Temp.Count >= 3) {
  3799  072F  3003               	movlw	3
  3800  0730  023C               	subwf	_Temp+3,w
  3801  0731  1C03               	skipc
  3802  0732  2F46               	goto	l831
  3803                           
  3804                           ;OverTemperature_B1.c: 123: Temp.Count = 0;
  3805  0733  01BC               	clrf	_Temp+3
  3806                           
  3807                           ;OverTemperature_B1.c: 124: Temp.ERROR = 0;
  3808  0734  10B9               	bcf	_Temp,1
  3809                           
  3810                           ;OverTemperature_B1.c: 126: }
  3811                           ;OverTemperature_B1.c: 127: } else {
  3812                           
  3813                           ;OverTemperature_B1.c: 125: ;;
  3814  0735  2F46               	goto	l831
  3815  0736                     l3512:	
  3816                           ;OverTemperature_B1.c: 129: }
  3817                           ;OverTemperature_B1.c: 130: } else {
  3818                           
  3819                           ;OverTemperature_B1.c: 128: Temp.Count = 0;
  3820                           
  3821                           
  3822                           ;OverTemperature_B1.c: 131: if (AD <= DangerValue) {
  3823  0736  0857               	movf	setTemp_Main@AD,w
  3824  0737  0256               	subwf	setTemp_Main@DangerValue,w
  3825  0738  1C03               	skipc
  3826  0739  2F45               	goto	l3522
  3827                           
  3828                           ;OverTemperature_B1.c: 132: Temp.Count++;
  3829  073A  3001               	movlw	1
  3830  073B  00F5               	movwf	??_setTemp_Main
  3831  073C  0875               	movf	??_setTemp_Main,w
  3832  073D  07BC               	addwf	_Temp+3,f
  3833                           
  3834                           ;OverTemperature_B1.c: 133: if (Temp.Count >= 3) {
  3835  073E  3003               	movlw	3
  3836  073F  023C               	subwf	_Temp+3,w
  3837  0740  1C03               	skipc
  3838  0741  2F46               	goto	l831
  3839                           
  3840                           ;OverTemperature_B1.c: 134: Temp.Count = 0;
  3841  0742  01BC               	clrf	_Temp+3
  3842                           
  3843                           ;OverTemperature_B1.c: 135: Temp.ERROR = 1;
  3844  0743  14B9               	bsf	_Temp,1
  3845                           
  3846                           ;OverTemperature_B1.c: 136: }
  3847                           ;OverTemperature_B1.c: 137: } else {
  3848  0744  2F46               	goto	l831
  3849  0745                     l3522:	
  3850                           
  3851                           ;OverTemperature_B1.c: 138: Temp.Count = 0;
  3852  0745  01BC               	clrf	_Temp+3
  3853  0746                     l831:	
  3854                           ;OverTemperature_B1.c: 139: }
  3855                           ;OverTemperature_B1.c: 140: }
  3856                           ;OverTemperature_B1.c: 141: ;;
  3857                           ;OverTemperature_B1.c: 142: ;;
  3858                           
  3859                           
  3860                           ;OverTemperature_B1.c: 158: }
  3861                           ;OverTemperature_B1.c: 159: Temp.ADH[0] = 0;
  3862  0746  01BD               	clrf	_Temp+4
  3863                           
  3864                           ;OverTemperature_B1.c: 160: Temp.ADH[1] = 0;
  3865  0747  01BE               	clrf	_Temp+5
  3866                           
  3867                           ;OverTemperature_B1.c: 161: Temp.ADV = 0;
  3868  0748  01BF               	clrf	_Temp+6
  3869                           
  3870                           ;OverTemperature_B1.c: 162: }
  3871                           ;OverTemperature_B1.c: 163: }
  3872                           ;OverTemperature_B1.c: 166: } else {
  3873  0749  0008               	return
  3874  074A                     l820:	
  3875                           
  3876                           ;OverTemperature_B1.c: 167: if (myMain.PowerON == 1) {
  3877  074A  1C25               	btfss	_myMain,0
  3878  074B  0008               	return
  3879                           
  3880                           ;OverTemperature_B1.c: 168: Temp.Enable = 1;
  3881  074C  1439               	bsf	_Temp,0
  3882  074D  0008               	return
  3883  074E                     __end_of_setTemp_Main:	
  3884                           
  3885                           	psect	text14
  3886  0AE4                     __ptext14:	
  3887 ;; *************** function _Temp_Initialization *****************
  3888 ;; Defined at:
  3889 ;;		line 8 in file "../src/OverTemperature_B1.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;		None
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;		None
  3894 ;; Return value:  Size  Location     Type
  3895 ;;		None               void
  3896 ;; Registers used:
  3897 ;;		status,2, status,0, pclath, cstack
  3898 ;; Tracked objects:
  3899 ;;		On entry : 0/0
  3900 ;;		On exit  : 0/0
  3901 ;;		Unchanged: 0/0
  3902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3903 ;;      Params:         0       0       0       0
  3904 ;;      Locals:         0       0       0       0
  3905 ;;      Temps:          0       0       0       0
  3906 ;;      Totals:         0       0       0       0
  3907 ;;Total ram usage:        0 bytes
  3908 ;; Hardware stack levels used:    1
  3909 ;; Hardware stack levels required when called:    3
  3910 ;; This function calls:
  3911 ;;		_setTemp_Initialization
  3912 ;; This function is called by:
  3913 ;;		_main
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917                           
  3918                           ;psect for function _Temp_Initialization
  3919  0AE4                     _Temp_Initialization:	
  3920                           
  3921                           ;OverTemperature_B1.c: 10: setTemp_Initialization();
  3922                           
  3923                           ;incstack = 0
  3924                           ; Regs used in _Temp_Initialization: [status,2+status,0+pclath+cstack]
  3925  0AE4  158A  22D7         	fcall	_setTemp_Initialization
  3926  0AE6  0008               	return
  3927  0AE7                     __end_of_Temp_Initialization:	
  3928                           
  3929                           	psect	text15
  3930  0AD7                     __ptext15:	
  3931 ;; *************** function _setTemp_Initialization *****************
  3932 ;; Defined at:
  3933 ;;		line 52 in file "../src/OverTemperature_B1.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;		None
  3936 ;; Auto vars:     Size  Location     Type
  3937 ;;		None
  3938 ;; Return value:  Size  Location     Type
  3939 ;;		None               void
  3940 ;; Registers used:
  3941 ;;		None
  3942 ;; Tracked objects:
  3943 ;;		On entry : 0/0
  3944 ;;		On exit  : 0/0
  3945 ;;		Unchanged: 0/0
  3946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3947 ;;      Params:         0       0       0       0
  3948 ;;      Locals:         0       0       0       0
  3949 ;;      Temps:          0       0       0       0
  3950 ;;      Totals:         0       0       0       0
  3951 ;;Total ram usage:        0 bytes
  3952 ;; Hardware stack levels used:    1
  3953 ;; Hardware stack levels required when called:    2
  3954 ;; This function calls:
  3955 ;;		Nothing
  3956 ;; This function is called by:
  3957 ;;		_Temp_Initialization
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           
  3962                           ;psect for function _setTemp_Initialization
  3963  0AD7                     _setTemp_Initialization:	
  3964                           
  3965                           ;incstack = 0
  3966                           ; Regs used in _setTemp_Initialization: []
  3967  0AD7  0008               	return
  3968  0AD8                     __end_of_setTemp_Initialization:	
  3969                           
  3970                           	psect	text16
  3971  0AE1                     __ptext16:	
  3972 ;; *************** function _SYSC_Main *****************
  3973 ;; Defined at:
  3974 ;;		line 17 in file "../src/SYSC_B1.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;		None
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;		None
  3979 ;; Return value:  Size  Location     Type
  3980 ;;		None               void
  3981 ;; Registers used:
  3982 ;;		wreg, status,2, status,0, pclath, cstack
  3983 ;; Tracked objects:
  3984 ;;		On entry : 0/0
  3985 ;;		On exit  : 0/0
  3986 ;;		Unchanged: 0/0
  3987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3988 ;;      Params:         0       0       0       0
  3989 ;;      Locals:         0       0       0       0
  3990 ;;      Temps:          0       0       0       0
  3991 ;;      Totals:         0       0       0       0
  3992 ;;Total ram usage:        0 bytes
  3993 ;; Hardware stack levels used:    1
  3994 ;; Hardware stack levels required when called:    4
  3995 ;; This function calls:
  3996 ;;		_setSYSC_Main
  3997 ;; This function is called by:
  3998 ;;		_main
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002                           
  4003                           ;psect for function _SYSC_Main
  4004  0AE1                     _SYSC_Main:	
  4005                           
  4006                           ;SYSC_B1.c: 19: setSYSC_Main();
  4007                           
  4008                           ;incstack = 0
  4009                           ; Regs used in _SYSC_Main: [wreg+status,2+status,0+pclath+cstack]
  4010  0AE1  158A  2638         	fcall	_setSYSC_Main
  4011  0AE3  0008               	return
  4012  0AE4                     __end_of_SYSC_Main:	
  4013                           
  4014                           	psect	text17
  4015  0E38                     __ptext17:	
  4016 ;; *************** function _setSYSC_Main *****************
  4017 ;; Defined at:
  4018 ;;		line 23 in file "../src/SYSC_B1.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;		None
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;		None
  4023 ;; Return value:  Size  Location     Type
  4024 ;;		None               void
  4025 ;; Registers used:
  4026 ;;		wreg, status,2, status,0, pclath, cstack
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4032 ;;      Params:         0       0       0       0
  4033 ;;      Locals:         0       0       0       0
  4034 ;;      Temps:          0       0       0       0
  4035 ;;      Totals:         0       0       0       0
  4036 ;;Total ram usage:        0 bytes
  4037 ;; Hardware stack levels used:    1
  4038 ;; Hardware stack levels required when called:    3
  4039 ;; This function calls:
  4040 ;;		_getMain_All_Error_Status
  4041 ;; This function is called by:
  4042 ;;		_SYSC_Main
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           
  4047                           ;psect for function _setSYSC_Main
  4048  0E38                     _setSYSC_Main:	
  4049                           
  4050                           ;SYSC_B1.c: 25: if (SYSC.Enable == 1) {
  4051                           
  4052                           ;incstack = 0
  4053                           ; Regs used in _setSYSC_Main: [wreg+status,2+status,0+pclath+cstack]
  4054  0E38  1283               	bcf	3,5	;RP0=0, select bank0
  4055  0E39  1303               	bcf	3,6	;RP1=0, select bank0
  4056  0E3A  1C20               	btfss	_SYSC,0
  4057  0E3B  0008               	return
  4058                           
  4059                           ;SYSC_B1.c: 26: if (SYSC.ERROR == 0) {
  4060  0E3C  18A0               	btfsc	_SYSC,1
  4061  0E3D  2E4F               	goto	l3538
  4062                           
  4063                           ;SYSC_B1.c: 27: SYSC.Time++;
  4064  0E3E  3001               	movlw	1
  4065  0E3F  07A1               	addwf	_SYSC+1,f
  4066  0E40  1803               	skipnc
  4067  0E41  0AA2               	incf	_SYSC+2,f
  4068  0E42  3000               	movlw	0
  4069  0E43  07A2               	addwf	_SYSC+2,f
  4070                           
  4071                           ;SYSC_B1.c: 28: if (SYSC.Time >= (500 / 20)) {
  4072  0E44  3000               	movlw	0
  4073  0E45  0222               	subwf	_SYSC+2,w
  4074  0E46  3019               	movlw	25
  4075  0E47  1903               	skipnz
  4076  0E48  0221               	subwf	_SYSC+1,w
  4077  0E49  1C03               	skipc
  4078  0E4A  0008               	return
  4079                           
  4080                           ;SYSC_B1.c: 29: SYSC.Time = 0;
  4081  0E4B  01A1               	clrf	_SYSC+1
  4082  0E4C  01A2               	clrf	_SYSC+2
  4083                           
  4084                           ;SYSC_B1.c: 30: SYSC.ERROR = 1;
  4085  0E4D  14A0               	bsf	_SYSC,1
  4086                           
  4087                           ;SYSC_B1.c: 31: }
  4088                           ;SYSC_B1.c: 32: } else {
  4089  0E4E  0008               	return
  4090  0E4F                     l3538:	
  4091                           
  4092                           ;SYSC_B1.c: 33: if (getMain_All_Error_Status(1) == 0) {
  4093  0E4F  3001               	movlw	1
  4094  0E50  158A  25FA  158A   	fcall	_getMain_All_Error_Status
  4095  0E53  3800               	iorlw	0
  4096  0E54  1D03               	skipz
  4097  0E55  0008               	return
  4098                           
  4099                           ;SYSC_B1.c: 34: SYSC.Time++;
  4100  0E56  3001               	movlw	1
  4101  0E57  1283               	bcf	3,5	;RP0=0, select bank0
  4102  0E58  1303               	bcf	3,6	;RP1=0, select bank0
  4103  0E59  07A1               	addwf	_SYSC+1,f
  4104  0E5A  1803               	skipnc
  4105  0E5B  0AA2               	incf	_SYSC+2,f
  4106  0E5C  3000               	movlw	0
  4107  0E5D  07A2               	addwf	_SYSC+2,f
  4108                           
  4109                           ;SYSC_B1.c: 35: if (SYSC.Time >= (500 / 20)) {
  4110  0E5E  3000               	movlw	0
  4111  0E5F  0222               	subwf	_SYSC+2,w
  4112  0E60  3019               	movlw	25
  4113  0E61  1903               	skipnz
  4114  0E62  0221               	subwf	_SYSC+1,w
  4115  0E63  1C03               	skipc
  4116  0E64  2E6A               	goto	l3544
  4117                           
  4118                           ;SYSC_B1.c: 36: SYSC.Time = 0;
  4119  0E65  01A1               	clrf	_SYSC+1
  4120  0E66  01A2               	clrf	_SYSC+2
  4121                           
  4122                           ;SYSC_B1.c: 37: SYSC.Counter = 0;
  4123  0E67  01A3               	clrf	_SYSC+3
  4124  0E68  01A4               	clrf	_SYSC+4
  4125                           
  4126                           ;SYSC_B1.c: 38: } else {
  4127  0E69  0008               	return
  4128  0E6A                     l3544:	
  4129                           
  4130                           ;SYSC_B1.c: 39: SYSC.Counter++;
  4131  0E6A  3001               	movlw	1
  4132  0E6B  07A3               	addwf	_SYSC+3,f
  4133  0E6C  1803               	skipnc
  4134  0E6D  0AA4               	incf	_SYSC+4,f
  4135  0E6E  3000               	movlw	0
  4136  0E6F  07A4               	addwf	_SYSC+4,f
  4137                           
  4138                           ;SYSC_B1.c: 40: if (SYSC.Counter == (10000 / 20)) {
  4139  0E70  3001               	movlw	1
  4140  0E71  0624               	xorwf	_SYSC+4,w
  4141  0E72  1D03               	skipz
  4142  0E73  2E76               	goto	u3315
  4143  0E74  30F4               	movlw	244
  4144  0E75  0623               	xorwf	_SYSC+3,w
  4145  0E76                     u3315:	
  4146  0E76  1D03               	skipz
  4147  0E77  0008               	return
  4148                           
  4149                           ;SYSC_B1.c: 41: SYSC.Counter = 0;
  4150  0E78  01A3               	clrf	_SYSC+3
  4151  0E79  01A4               	clrf	_SYSC+4
  4152                           
  4153                           ;SYSC_B1.c: 42: SYSC.ERROR = 0;
  4154  0E7A  10A0               	bcf	_SYSC,1
  4155  0E7B  0008               	return
  4156  0E7C                     __end_of_setSYSC_Main:	
  4157                           
  4158                           	psect	text18
  4159  0ADE                     __ptext18:	
  4160 ;; *************** function _SYSC_Initialization *****************
  4161 ;; Defined at:
  4162 ;;		line 7 in file "../src/SYSC_B1.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;		None
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;		None
  4167 ;; Return value:  Size  Location     Type
  4168 ;;		None               void
  4169 ;; Registers used:
  4170 ;;		status,2, status,0, pclath, cstack
  4171 ;; Tracked objects:
  4172 ;;		On entry : 0/0
  4173 ;;		On exit  : 0/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4176 ;;      Params:         0       0       0       0
  4177 ;;      Locals:         0       0       0       0
  4178 ;;      Temps:          0       0       0       0
  4179 ;;      Totals:         0       0       0       0
  4180 ;;Total ram usage:        0 bytes
  4181 ;; Hardware stack levels used:    1
  4182 ;; Hardware stack levels required when called:    3
  4183 ;; This function calls:
  4184 ;;		_setSYSC_Initialization
  4185 ;; This function is called by:
  4186 ;;		_main
  4187 ;; This function uses a non-reentrant model
  4188 ;;
  4189                           
  4190                           
  4191                           ;psect for function _SYSC_Initialization
  4192  0ADE                     _SYSC_Initialization:	
  4193                           
  4194                           ;SYSC_B1.c: 9: setSYSC_Initialization();
  4195                           
  4196                           ;incstack = 0
  4197                           ; Regs used in _SYSC_Initialization: [status,2+status,0+pclath+cstack]
  4198  0ADE  158A  22F2         	fcall	_setSYSC_Initialization
  4199  0AE0  0008               	return
  4200  0AE1                     __end_of_SYSC_Initialization:	
  4201                           
  4202                           	psect	text19
  4203  0AF2                     __ptext19:	
  4204 ;; *************** function _setSYSC_Initialization *****************
  4205 ;; Defined at:
  4206 ;;		line 13 in file "../src/SYSC_B1.c"
  4207 ;; Parameters:    Size  Location     Type
  4208 ;;		None
  4209 ;; Auto vars:     Size  Location     Type
  4210 ;;		None
  4211 ;; Return value:  Size  Location     Type
  4212 ;;		None               void
  4213 ;; Registers used:
  4214 ;;		None
  4215 ;; Tracked objects:
  4216 ;;		On entry : 0/0
  4217 ;;		On exit  : 0/0
  4218 ;;		Unchanged: 0/0
  4219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4220 ;;      Params:         0       0       0       0
  4221 ;;      Locals:         0       0       0       0
  4222 ;;      Temps:          0       0       0       0
  4223 ;;      Totals:         0       0       0       0
  4224 ;;Total ram usage:        0 bytes
  4225 ;; Hardware stack levels used:    1
  4226 ;; Hardware stack levels required when called:    2
  4227 ;; This function calls:
  4228 ;;		Nothing
  4229 ;; This function is called by:
  4230 ;;		_SYSC_Initialization
  4231 ;; This function uses a non-reentrant model
  4232 ;;
  4233                           
  4234                           
  4235                           ;psect for function _setSYSC_Initialization
  4236  0AF2                     _setSYSC_Initialization:	
  4237                           
  4238                           ;SYSC_B1.c: 14: SYSC.Enable = 1;
  4239                           
  4240                           ;incstack = 0
  4241                           ; Regs used in _setSYSC_Initialization: []
  4242  0AF2  1283               	bcf	3,5	;RP0=0, select bank0
  4243  0AF3  1303               	bcf	3,6	;RP1=0, select bank0
  4244  0AF4  1420               	bsf	_SYSC,0
  4245  0AF5  0008               	return
  4246  0AF6                     __end_of_setSYSC_Initialization:	
  4247                           
  4248                           	psect	text20
  4249  0210                     __ptext20:	
  4250 ;; *************** function _PIR_Main *****************
  4251 ;; Defined at:
  4252 ;;		line 13 in file "../src/PIR_B1.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;		None
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;  TriggerValue    1   17[BANK0 ] unsigned char 
  4257 ;;  LightsStatus    1   16[BANK0 ] unsigned char 
  4258 ;;  Enable_Switc    1   13[BANK0 ] unsigned char 
  4259 ;;  cds             1   12[BANK0 ] unsigned char 
  4260 ;;  error           1   11[BANK0 ] unsigned char 
  4261 ;; Return value:  Size  Location     Type
  4262 ;;		None               void
  4263 ;; Registers used:
  4264 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4265 ;; Tracked objects:
  4266 ;;		On entry : 0/0
  4267 ;;		On exit  : 0/0
  4268 ;;		Unchanged: 0/0
  4269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4270 ;;      Params:         0       0       0       0
  4271 ;;      Locals:         0       7       0       0
  4272 ;;      Temps:          0       5       0       0
  4273 ;;      Totals:         0      12       0       0
  4274 ;;Total ram usage:       12 bytes
  4275 ;; Hardware stack levels used:    1
  4276 ;; Hardware stack levels required when called:    5
  4277 ;; This function calls:
  4278 ;;		_getCDS_Status
  4279 ;;		_getLights_Status
  4280 ;;		_getMain_All_Error_Status
  4281 ;;		_setLED
  4282 ;;		_setLights_SwOff
  4283 ;;		_setLights_SwOn
  4284 ;; This function is called by:
  4285 ;;		_main
  4286 ;; This function uses a non-reentrant model
  4287 ;;
  4288                           
  4289                           
  4290                           ;psect for function _PIR_Main
  4291  0210                     _PIR_Main:	
  4292                           
  4293                           ;PIR_B1.c: 14: char error = getMain_All_Error_Status(0);
  4294                           
  4295                           ;incstack = 0
  4296                           ; Regs used in _PIR_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4297  0210  3000               	movlw	0
  4298  0211  158A  25FA  118A   	fcall	_getMain_All_Error_Status
  4299  0214  1283               	bcf	3,5	;RP0=0, select bank0
  4300  0215  1303               	bcf	3,6	;RP1=0, select bank0
  4301  0216  00D3               	movwf	??_PIR_Main
  4302  0217  0853               	movf	??_PIR_Main,w
  4303  0218  00D8               	movwf	PIR_Main@error
  4304                           
  4305                           ;PIR_B1.c: 15: char cds = getCDS_Status();
  4306  0219  158A  232B  118A   	fcall	_getCDS_Status
  4307  021C  1283               	bcf	3,5	;RP0=0, select bank0
  4308  021D  1303               	bcf	3,6	;RP1=0, select bank0
  4309  021E  00D3               	movwf	??_PIR_Main
  4310  021F  0853               	movf	??_PIR_Main,w
  4311  0220  00D9               	movwf	PIR_Main@cds
  4312                           
  4313                           ;PIR_B1.c: 16: char LightsStatus = 0;
  4314  0221  01DD               	clrf	PIR_Main@LightsStatus
  4315                           
  4316                           ;PIR_B1.c: 17: char Enable_Switch = 1;
  4317  0222  01DA               	clrf	PIR_Main@Enable_Switch
  4318  0223  0ADA               	incf	PIR_Main@Enable_Switch,f
  4319                           
  4320                           ;PIR_B1.c: 18: char TriggerValue = 0;
  4321  0224  01DE               	clrf	PIR_Main@TriggerValue
  4322                           
  4323                           ;PIR_B1.c: 25: LightsStatus = getLights_Status(1);
  4324  0225  3001               	movlw	1
  4325  0226  158A  23B3  118A   	fcall	_getLights_Status
  4326  0229  1283               	bcf	3,5	;RP0=0, select bank0
  4327  022A  1303               	bcf	3,6	;RP1=0, select bank0
  4328  022B  00D3               	movwf	??_PIR_Main
  4329  022C  0853               	movf	??_PIR_Main,w
  4330  022D  00DD               	movwf	PIR_Main@LightsStatus
  4331                           
  4332                           ;PIR_B1.c: 35: if (_PIR.Enable == 1) {
  4333  022E  1683               	bsf	3,5	;RP0=1, select bank1
  4334  022F  1303               	bcf	3,6	;RP1=0, select bank1
  4335  0230  1C20               	btfss	__PIR^(0+128),0
  4336  0231  2BC3               	goto	l898
  4337                           
  4338                           ;PIR_B1.c: 36: if (error == 0) {
  4339  0232  1283               	bcf	3,5	;RP0=0, select bank0
  4340  0233  1303               	bcf	3,6	;RP1=0, select bank0
  4341  0234  08D8               	movf	PIR_Main@error,f
  4342  0235  1D03               	skipz
  4343  0236  2A75               	goto	l899
  4344                           
  4345                           ;PIR_B1.c: 38: if (cds == 1 && Enable_Switch == 1) {
  4346  0237  0859               	movf	PIR_Main@cds,w
  4347  0238  3A01               	xorlw	1
  4348  0239  1D03               	skipz
  4349  023A  2A43               	goto	l900
  4350  023B  085A               	movf	PIR_Main@Enable_Switch,w
  4351  023C  3A01               	xorlw	1
  4352  023D  1D03               	skipz
  4353  023E  2A43               	goto	l900
  4354                           
  4355                           ;PIR_B1.c: 39: _PIR.Available = 1;
  4356  023F  1683               	bsf	3,5	;RP0=1, select bank1
  4357  0240  1303               	bcf	3,6	;RP1=0, select bank1
  4358  0241  17A0               	bsf	__PIR^(0+128),7
  4359                           
  4360                           ;PIR_B1.c: 40: } else {
  4361  0242  2A65               	goto	l5080
  4362  0243                     l900:	
  4363                           
  4364                           ;PIR_B1.c: 41: _PIR.Available = 0;
  4365  0243  1683               	bsf	3,5	;RP0=1, select bank1
  4366  0244  1303               	bcf	3,6	;RP1=0, select bank1
  4367  0245  13A0               	bcf	__PIR^(0+128),7
  4368                           
  4369                           ;PIR_B1.c: 43: if (_PIR.OK == 1) {
  4370  0246  1DA0               	btfss	__PIR^(0+128),3
  4371  0247  2A65               	goto	l5080
  4372                           
  4373                           ;PIR_B1.c: 45: setLED(1, 0);
  4374  0248  1283               	bcf	3,5	;RP0=0, select bank0
  4375  0249  1303               	bcf	3,6	;RP1=0, select bank0
  4376  024A  01CD               	clrf	setLED@command
  4377  024B  3001               	movlw	1
  4378  024C  158A  2735  118A   	fcall	_setLED
  4379                           
  4380                           ;PIR_B1.c: 46: setLED(2, 0);
  4381  024F  1283               	bcf	3,5	;RP0=0, select bank0
  4382  0250  1303               	bcf	3,6	;RP1=0, select bank0
  4383  0251  01CD               	clrf	setLED@command
  4384  0252  3002               	movlw	2
  4385  0253  158A  2735  118A   	fcall	_setLED
  4386                           
  4387                           ;PIR_B1.c: 51: if (getLights_Status(1) == 1) {
  4388  0256  3001               	movlw	1
  4389  0257  158A  23B3  118A   	fcall	_getLights_Status
  4390  025A  3A01               	xorlw	1
  4391  025B  1D03               	skipz
  4392  025C  2A65               	goto	l5080
  4393                           
  4394                           ;PIR_B1.c: 52: setLights_SwOn(1);
  4395  025D  3001               	movlw	1
  4396  025E  158A  254C  118A   	fcall	_setLights_SwOn
  4397                           
  4398                           ;PIR_B1.c: 53: setLights_SwOff(1);
  4399  0261  3001               	movlw	1
  4400  0262  158A  2468  118A   	fcall	_setLights_SwOff
  4401  0265                     l5080:	
  4402                           
  4403                           ;PIR_B1.c: 55: }
  4404                           ;PIR_B1.c: 67: }
  4405                           ;PIR_B1.c: 68: }
  4406                           ;PIR_B1.c: 72: if (_PIR.Detect == 0) {
  4407  0265  1683               	bsf	3,5	;RP0=1, select bank1
  4408  0266  1303               	bcf	3,6	;RP1=0, select bank1
  4409  0267  1A20               	btfsc	__PIR^(0+128),4
  4410  0268  2A7B               	goto	l906
  4411                           
  4412                           ;PIR_B1.c: 73: _PIR.Detect = 1;
  4413  0269  1620               	bsf	__PIR^(0+128),4
  4414                           
  4415                           ;PIR_B1.c: 75: if (_PIR.OK == 0) {
  4416  026A  19A0               	btfsc	__PIR^(0+128),3
  4417  026B  2A7B               	goto	l906
  4418                           
  4419                           ;PIR_B1.c: 76: setLED(1, 1);
  4420  026C  1283               	bcf	3,5	;RP0=0, select bank0
  4421  026D  1303               	bcf	3,6	;RP1=0, select bank0
  4422  026E  01CD               	clrf	setLED@command
  4423  026F  0ACD               	incf	setLED@command,f
  4424  0270  3001               	movlw	1
  4425  0271  158A  2735  118A   	fcall	_setLED
  4426                           
  4427                           ;PIR_B1.c: 77: }
  4428                           ;PIR_B1.c: 80: }
  4429                           ;PIR_B1.c: 81: } else {
  4430  0274  2A7B               	goto	l906
  4431  0275                     l899:	
  4432                           
  4433                           ;PIR_B1.c: 82: if (_PIR.Detect == 1) {
  4434  0275  1683               	bsf	3,5	;RP0=1, select bank1
  4435  0276  1303               	bcf	3,6	;RP1=0, select bank1
  4436  0277  1E20               	btfss	__PIR^(0+128),4
  4437  0278  2A7B               	goto	l906
  4438                           
  4439                           ;PIR_B1.c: 83: _PIR.Detect = 0;
  4440  0279  1220               	bcf	__PIR^(0+128),4
  4441                           
  4442                           ;PIR_B1.c: 84: _PIR.Available = 0;
  4443  027A  13A0               	bcf	__PIR^(0+128),7
  4444  027B                     l906:	
  4445                           
  4446                           ;PIR_B1.c: 102: }
  4447                           ;PIR_B1.c: 103: }
  4448                           ;PIR_B1.c: 105: if (_PIR.ADtoGO == 0) {
  4449  027B  1683               	bsf	3,5	;RP0=1, select bank1
  4450  027C  1303               	bcf	3,6	;RP1=0, select bank1
  4451  027D  18A0               	btfsc	__PIR^(0+128),1
  4452  027E  2A8E               	goto	l908
  4453                           
  4454                           ;PIR_B1.c: 106: _PIR.Time++;
  4455  027F  3001               	movlw	1
  4456  0280  1283               	bcf	3,5	;RP0=0, select bank0
  4457  0281  1303               	bcf	3,6	;RP1=0, select bank0
  4458  0282  00D3               	movwf	??_PIR_Main
  4459  0283  0853               	movf	??_PIR_Main,w
  4460  0284  1683               	bsf	3,5	;RP0=1, select bank1
  4461  0285  1303               	bcf	3,6	;RP1=0, select bank1
  4462  0286  07A2               	addwf	(__PIR^(0+128)+2),f
  4463                           
  4464                           ;PIR_B1.c: 107: if (_PIR.Time == (100 / 20)) {
  4465  0287  0822               	movf	(__PIR^(0+128)+2),w
  4466  0288  3A05               	xorlw	5
  4467  0289  1D03               	skipz
  4468  028A  2B98               	goto	l5168
  4469                           
  4470                           ;PIR_B1.c: 108: _PIR.Time = 0;
  4471  028B  01A2               	clrf	(__PIR^(0+128)+2)
  4472                           
  4473                           ;PIR_B1.c: 109: _PIR.ADtoGO = 1;
  4474  028C  14A0               	bsf	__PIR^(0+128),1
  4475                           
  4476                           ;PIR_B1.c: 110: }
  4477                           ;PIR_B1.c: 111: } else {
  4478  028D  2B98               	goto	l5168
  4479  028E                     l908:	
  4480                           
  4481                           ;PIR_B1.c: 112: if (_PIR.GO == 1) {
  4482  028E  1D20               	btfss	__PIR^(0+128),2
  4483  028F  2B98               	goto	l5168
  4484                           
  4485                           ;PIR_B1.c: 113: _PIR.GO = 0;
  4486  0290  1120               	bcf	__PIR^(0+128),2
  4487                           
  4488                           ;PIR_B1.c: 114: _PIR.ADtoGO = 0;
  4489  0291  10A0               	bcf	__PIR^(0+128),1
  4490                           
  4491                           ;PIR_B1.c: 115: if (_PIR.Available == 1) {
  4492  0292  1BA0               	btfsc	__PIR^(0+128),7
  4493                           
  4494                           ;PIR_B1.c: 116: if (_PIR.OK == 1) {
  4495  0293  1DA0               	btfss	__PIR^(0+128),3
  4496  0294  2B98               	goto	l5168
  4497                           
  4498                           ;PIR_B1.c: 118: _PIR.Time++;
  4499  0295  3001               	movlw	1
  4500  0296  1283               	bcf	3,5	;RP0=0, select bank0
  4501  0297  1303               	bcf	3,6	;RP1=0, select bank0
  4502  0298  00D3               	movwf	??_PIR_Main
  4503  0299  0853               	movf	??_PIR_Main,w
  4504  029A  1683               	bsf	3,5	;RP0=1, select bank1
  4505  029B  1303               	bcf	3,6	;RP1=0, select bank1
  4506  029C  07A2               	addwf	(__PIR^(0+128)+2),f
  4507                           
  4508                           ;PIR_B1.c: 119: if (_PIR.Time == 60) {
  4509  029D  0822               	movf	(__PIR^(0+128)+2),w
  4510  029E  3A3C               	xorlw	60
  4511  029F  1D03               	skipz
  4512  02A0  2AD5               	goto	l5136
  4513                           
  4514                           ;PIR_B1.c: 120: _PIR.Time = 0;
  4515  02A1  01A2               	clrf	(__PIR^(0+128)+2)
  4516                           
  4517                           ;PIR_B1.c: 121: if (_PIR.RangeCount >= 90) {
  4518  02A2  305A               	movlw	90
  4519  02A3  0247               	subwf	(__PIR^(0+128)+39),w
  4520  02A4  1C03               	skipc
  4521  02A5  2AB1               	goto	l5118
  4522                           
  4523                           ;PIR_B1.c: 122: _PIR.RangeTime1 = 0;
  4524  02A6  01C6               	clrf	(__PIR^(0+128)+38)
  4525                           
  4526                           ;PIR_B1.c: 124: if (_PIR.RangeValue == 25) {
  4527  02A7  0848               	movf	(__PIR^(0+128)+40),w
  4528  02A8  3A19               	xorlw	25
  4529  02A9  1903               	btfsc	3,2
  4530  02AA  2AC6               	goto	L12
  4531                           
  4532                           ;PIR_B1.c: 126: } else if (_PIR.RangeValue == (25+10)) {
  4533                           
  4534                           ;PIR_B1.c: 125: _PIR.RangeValue = (25+10);
  4535  02AB  0848               	movf	(__PIR^(0+128)+40),w
  4536  02AC  3A23               	xorlw	35
  4537  02AD  1D03               	skipz
  4538  02AE  2AD4               	goto	l5134
  4539                           
  4540                           ;PIR_B1.c: 127: _PIR.RangeValue = (25+20);
  4541  02AF  302D               	movlw	45
  4542  02B0  2ACD               	goto	L9
  4543  02B1                     l5118:	
  4544                           ;PIR_B1.c: 128: }
  4545                           ;PIR_B1.c: 129: } else if (_PIR.RangeCount <= 10) {
  4546                           
  4547  02B1  300B               	movlw	11
  4548  02B2  0247               	subwf	(__PIR^(0+128)+39),w
  4549  02B3  1803               	skipnc
  4550  02B4  2AD4               	goto	l5134
  4551                           
  4552                           ;PIR_B1.c: 130: _PIR.RangeTime1++;
  4553  02B5  3001               	movlw	1
  4554  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  4555  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  4556  02B8  00D3               	movwf	??_PIR_Main
  4557  02B9  0853               	movf	??_PIR_Main,w
  4558  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  4559  02BB  1303               	bcf	3,6	;RP1=0, select bank1
  4560  02BC  07C6               	addwf	(__PIR^(0+128)+38),f
  4561                           
  4562                           ;PIR_B1.c: 131: if (_PIR.RangeTime1 == 2) {
  4563  02BD  0846               	movf	(__PIR^(0+128)+38),w
  4564  02BE  3A02               	xorlw	2
  4565  02BF  1D03               	skipz
  4566  02C0  2AD4               	goto	l5134
  4567                           
  4568                           ;PIR_B1.c: 132: _PIR.RangeTime1 = 0;
  4569  02C1  01C6               	clrf	(__PIR^(0+128)+38)
  4570                           
  4571                           ;PIR_B1.c: 134: if (_PIR.RangeValue == (25+20)) {
  4572  02C2  0848               	movf	(__PIR^(0+128)+40),w
  4573  02C3  3A2D               	xorlw	45
  4574  02C4  1D03               	skipz
  4575  02C5  2AC8               	goto	l5130
  4576  02C6                     L12:	
  4577                           
  4578                           ;PIR_B1.c: 135: _PIR.RangeValue = (25+10);
  4579  02C6  3023               	movlw	35
  4580  02C7  2ACD               	goto	L9
  4581  02C8                     l5130:	
  4582                           ;PIR_B1.c: 136: } else if (_PIR.RangeValue == (25+10)) {
  4583                           
  4584  02C8  0848               	movf	(__PIR^(0+128)+40),w
  4585  02C9  3A23               	xorlw	35
  4586  02CA  1D03               	skipz
  4587  02CB  2AD4               	goto	l5134
  4588                           
  4589                           ;PIR_B1.c: 137: _PIR.RangeValue = 25;
  4590  02CC  3019               	movlw	25
  4591  02CD                     L9:	
  4592  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  4593  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  4594  02CF  00D3               	movwf	??_PIR_Main
  4595  02D0  0853               	movf	??_PIR_Main,w
  4596  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  4597  02D2  1303               	bcf	3,6	;RP1=0, select bank1
  4598  02D3  00C8               	movwf	(__PIR^(0+128)+40)
  4599  02D4                     l5134:	
  4600                           
  4601                           ;PIR_B1.c: 138: }
  4602                           ;PIR_B1.c: 139: }
  4603                           ;PIR_B1.c: 140: }
  4604                           ;PIR_B1.c: 141: _PIR.RangeCount = 0;
  4605  02D4  01C7               	clrf	(__PIR^(0+128)+39)
  4606  02D5                     l5136:	
  4607                           
  4608                           ;PIR_B1.c: 142: }
  4609                           ;PIR_B1.c: 145: if ((_PIR.SignalAD >= (_PIR.ReferenceVoltage - _PIR.RangeValue))
  4610                           ;PIR_B1.c: 146: && (_PIR.SignalAD <= (_PIR.ReferenceVoltage + _PIR.RangeValue))) {
  4611  02D5  0848               	movf	(__PIR^(0+128)+40),w
  4612  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  4613  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  4614  02D8  00D3               	movwf	??_PIR_Main
  4615  02D9  01D4               	clrf	??_PIR_Main+1
  4616  02DA  09D3               	comf	??_PIR_Main,f
  4617  02DB  09D4               	comf	??_PIR_Main+1,f
  4618  02DC  0AD3               	incf	??_PIR_Main,f
  4619  02DD  1903               	skipnz
  4620  02DE  0AD4               	incf	??_PIR_Main+1,f
  4621  02DF  1683               	bsf	3,5	;RP0=1, select bank1
  4622  02E0  1303               	bcf	3,6	;RP1=0, select bank1
  4623  02E1  0823               	movf	(__PIR^(0+128)+3),w
  4624  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  4625  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  4626  02E4  0753               	addwf	??_PIR_Main,w
  4627  02E5  00D5               	movwf	??_PIR_Main+2
  4628  02E6  0854               	movf	??_PIR_Main+1,w
  4629  02E7  1803               	skipnc
  4630  02E8  0A54               	incf	??_PIR_Main+1,w
  4631  02E9  00D6               	movwf	??_PIR_Main+3
  4632  02EA  0856               	movf	??_PIR_Main+3,w
  4633  02EB  3A80               	xorlw	128
  4634  02EC  3C80               	sublw	128
  4635  02ED  1D03               	skipz
  4636  02EE  2AF3               	goto	u6565
  4637  02EF  0855               	movf	??_PIR_Main+2,w
  4638  02F0  1683               	bsf	3,5	;RP0=1, select bank1
  4639  02F1  1303               	bcf	3,6	;RP1=0, select bank1
  4640  02F2  0221               	subwf	(__PIR^(0+128)+1),w
  4641  02F3                     u6565:	
  4642  02F3  1C03               	skipc
  4643  02F4  2B15               	goto	l5146
  4644  02F5  1683               	bsf	3,5	;RP0=1, select bank1
  4645  02F6  1303               	bcf	3,6	;RP1=0, select bank1
  4646  02F7  0823               	movf	(__PIR^(0+128)+3),w
  4647  02F8  0748               	addwf	(__PIR^(0+128)+40),w
  4648  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  4649  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  4650  02FB  00D3               	movwf	??_PIR_Main
  4651  02FC  01D4               	clrf	??_PIR_Main+1
  4652  02FD  0DD4               	rlf	??_PIR_Main+1,f
  4653  02FE  0854               	movf	??_PIR_Main+1,w
  4654  02FF  3A80               	xorlw	128
  4655  0300  00D5               	movwf	??_PIR_Main+2
  4656  0301  3080               	movlw	128
  4657  0302  0255               	subwf	??_PIR_Main+2,w
  4658  0303  1D03               	skipz
  4659  0304  2B0B               	goto	u6575
  4660  0305  1683               	bsf	3,5	;RP0=1, select bank1
  4661  0306  1303               	bcf	3,6	;RP1=0, select bank1
  4662  0307  0821               	movf	(__PIR^(0+128)+1),w
  4663  0308  1283               	bcf	3,5	;RP0=0, select bank0
  4664  0309  1303               	bcf	3,6	;RP1=0, select bank0
  4665  030A  0253               	subwf	??_PIR_Main,w
  4666  030B                     u6575:	
  4667  030B  1C03               	skipc
  4668  030C  2B15               	goto	l5146
  4669                           
  4670                           ;PIR_B1.c: 148: _PIR.Count = 0;
  4671  030D  1683               	bsf	3,5	;RP0=1, select bank1
  4672  030E  1303               	bcf	3,6	;RP1=0, select bank1
  4673  030F  01BE               	clrf	(__PIR^(0+128)+30)
  4674  0310  01BF               	clrf	((__PIR+1)^(0+128)+30)
  4675                           
  4676                           ;PIR_B1.c: 155: setLED(1, 0);
  4677  0311  1283               	bcf	3,5	;RP0=0, select bank0
  4678  0312  1303               	bcf	3,6	;RP1=0, select bank0
  4679  0313  01CD               	clrf	setLED@command
  4680  0314  2B81               	goto	L13
  4681  0315                     l5146:	
  4682                           ;PIR_B1.c: 159: } else {
  4683                           
  4684                           ;PIR_B1.c: 156: setLED(2, 0);
  4685                           
  4686                           
  4687                           ;PIR_B1.c: 162: _PIR.RangeCount++;
  4688  0315  3001               	movlw	1
  4689  0316  1283               	bcf	3,5	;RP0=0, select bank0
  4690  0317  1303               	bcf	3,6	;RP1=0, select bank0
  4691  0318  00D3               	movwf	??_PIR_Main
  4692  0319  0853               	movf	??_PIR_Main,w
  4693  031A  1683               	bsf	3,5	;RP0=1, select bank1
  4694  031B  1303               	bcf	3,6	;RP1=0, select bank1
  4695  031C  07C7               	addwf	(__PIR^(0+128)+39),f
  4696                           
  4697                           ;PIR_B1.c: 163: _PIR.Count++;
  4698  031D  3001               	movlw	1
  4699  031E  07BE               	addwf	(__PIR^(0+128)+30),f
  4700  031F  1803               	skipnc
  4701  0320  0ABF               	incf	((__PIR+1)^(0+128)+30),f
  4702  0321  3000               	movlw	0
  4703  0322  07BF               	addwf	((__PIR+1)^(0+128)+30),f
  4704                           
  4705                           ;PIR_B1.c: 165: TriggerValue = LightsStatus == 1 ? 3 : 3;
  4706  0323  1283               	bcf	3,5	;RP0=0, select bank0
  4707  0324  1303               	bcf	3,6	;RP1=0, select bank0
  4708  0325  085D               	movf	PIR_Main@LightsStatus,w
  4709  0326  3A01               	xorlw	1
  4710  0327  1903               	skipnz
  4711  0328  2B29               	goto	l5154
  4712  0329                     l5154:	
  4713  0329  3003               	movlw	3
  4714  032A  00DB               	movwf	_PIR_Main$2856
  4715  032B  3000               	movlw	0
  4716  032C  00DC               	movwf	_PIR_Main$2856+1
  4717  032D  085B               	movf	_PIR_Main$2856,w
  4718  032E  00D3               	movwf	??_PIR_Main
  4719  032F  0853               	movf	??_PIR_Main,w
  4720  0330  00DE               	movwf	PIR_Main@TriggerValue
  4721                           
  4722                           ;PIR_B1.c: 167: if (_PIR.Count == TriggerValue) {
  4723  0331  085E               	movf	PIR_Main@TriggerValue,w
  4724  0332  00D3               	movwf	??_PIR_Main
  4725  0333  01D4               	clrf	??_PIR_Main+1
  4726  0334  1683               	bsf	3,5	;RP0=1, select bank1
  4727  0335  1303               	bcf	3,6	;RP1=0, select bank1
  4728  0336  083F               	movf	((__PIR+1)^(0+128)+30),w
  4729  0337  1283               	bcf	3,5	;RP0=0, select bank0
  4730  0338  1303               	bcf	3,6	;RP1=0, select bank0
  4731  0339  0654               	xorwf	??_PIR_Main+1,w
  4732  033A  1D03               	skipz
  4733  033B  2B42               	goto	u6595
  4734  033C  1683               	bsf	3,5	;RP0=1, select bank1
  4735  033D  1303               	bcf	3,6	;RP1=0, select bank1
  4736  033E  083E               	movf	(__PIR^(0+128)+30),w
  4737  033F  1283               	bcf	3,5	;RP0=0, select bank0
  4738  0340  1303               	bcf	3,6	;RP1=0, select bank0
  4739  0341  0653               	xorwf	??_PIR_Main,w
  4740  0342                     u6595:	
  4741  0342  1D03               	skipz
  4742  0343  2B98               	goto	l5168
  4743                           
  4744                           ;PIR_B1.c: 168: _PIR.Count = 0;
  4745  0344  1683               	bsf	3,5	;RP0=1, select bank1
  4746  0345  1303               	bcf	3,6	;RP1=0, select bank1
  4747  0346  01BE               	clrf	(__PIR^(0+128)+30)
  4748  0347  01BF               	clrf	((__PIR+1)^(0+128)+30)
  4749                           
  4750                           ;PIR_B1.c: 175: if (getLights_Status(1) == 0) {
  4751  0348  3001               	movlw	1
  4752  0349  158A  23B3  118A   	fcall	_getLights_Status
  4753  034C  3800               	iorlw	0
  4754  034D  1D03               	skipz
  4755  034E  2B57               	goto	l5162
  4756                           
  4757                           ;PIR_B1.c: 176: setLights_SwOn(1);
  4758  034F  3001               	movlw	1
  4759  0350  158A  254C  118A   	fcall	_setLights_SwOn
  4760                           
  4761                           ;PIR_B1.c: 177: setLights_SwOff(1);
  4762  0353  3001               	movlw	1
  4763  0354  158A  2468  118A   	fcall	_setLights_SwOff
  4764  0357                     l5162:	
  4765                           
  4766                           ;PIR_B1.c: 179: }
  4767                           ;PIR_B1.c: 193: if ((_PIR.SignalAD <= (_PIR.ReferenceVoltage - _PIR.RangeValue))) {
  4768  0357  1683               	bsf	3,5	;RP0=1, select bank1
  4769  0358  1303               	bcf	3,6	;RP1=0, select bank1
  4770  0359  0848               	movf	(__PIR^(0+128)+40),w
  4771  035A  1283               	bcf	3,5	;RP0=0, select bank0
  4772  035B  1303               	bcf	3,6	;RP1=0, select bank0
  4773  035C  00D3               	movwf	??_PIR_Main
  4774  035D  01D4               	clrf	??_PIR_Main+1
  4775  035E  09D3               	comf	??_PIR_Main,f
  4776  035F  09D4               	comf	??_PIR_Main+1,f
  4777  0360  0AD3               	incf	??_PIR_Main,f
  4778  0361  1903               	skipnz
  4779  0362  0AD4               	incf	??_PIR_Main+1,f
  4780  0363  1683               	bsf	3,5	;RP0=1, select bank1
  4781  0364  1303               	bcf	3,6	;RP1=0, select bank1
  4782  0365  0823               	movf	(__PIR^(0+128)+3),w
  4783  0366  1283               	bcf	3,5	;RP0=0, select bank0
  4784  0367  1303               	bcf	3,6	;RP1=0, select bank0
  4785  0368  0753               	addwf	??_PIR_Main,w
  4786  0369  00D5               	movwf	??_PIR_Main+2
  4787  036A  0854               	movf	??_PIR_Main+1,w
  4788  036B  1803               	skipnc
  4789  036C  0A54               	incf	??_PIR_Main+1,w
  4790  036D  00D6               	movwf	??_PIR_Main+3
  4791  036E  0856               	movf	??_PIR_Main+3,w
  4792  036F  3A80               	xorlw	128
  4793  0370  00D7               	movwf	??_PIR_Main+4
  4794  0371  3080               	movlw	128
  4795  0372  0257               	subwf	??_PIR_Main+4,w
  4796  0373  1D03               	skipz
  4797  0374  2B7B               	goto	u6615
  4798  0375  1683               	bsf	3,5	;RP0=1, select bank1
  4799  0376  1303               	bcf	3,6	;RP1=0, select bank1
  4800  0377  0821               	movf	(__PIR^(0+128)+1),w
  4801  0378  1283               	bcf	3,5	;RP0=0, select bank0
  4802  0379  1303               	bcf	3,6	;RP1=0, select bank0
  4803  037A  0255               	subwf	??_PIR_Main+2,w
  4804  037B                     u6615:	
  4805  037B  1C03               	skipc
  4806  037C  2B89               	goto	l5166
  4807                           
  4808                           ;PIR_B1.c: 194: setLED(1, 1);
  4809  037D  1283               	bcf	3,5	;RP0=0, select bank0
  4810  037E  1303               	bcf	3,6	;RP1=0, select bank0
  4811  037F  01CD               	clrf	setLED@command
  4812  0380  0ACD               	incf	setLED@command,f
  4813  0381                     L13:	
  4814  0381  3001               	movlw	1
  4815  0382  158A  2735  118A   	fcall	_setLED
  4816                           
  4817                           ;PIR_B1.c: 195: setLED(2, 0);
  4818  0385  1283               	bcf	3,5	;RP0=0, select bank0
  4819  0386  1303               	bcf	3,6	;RP1=0, select bank0
  4820  0387  01CD               	clrf	setLED@command
  4821  0388  2B94               	goto	L10
  4822  0389                     l5166:	
  4823                           ;PIR_B1.c: 196: } else {
  4824                           
  4825                           
  4826                           ;PIR_B1.c: 197: setLED(1, 0);
  4827  0389  1283               	bcf	3,5	;RP0=0, select bank0
  4828  038A  1303               	bcf	3,6	;RP1=0, select bank0
  4829  038B  01CD               	clrf	setLED@command
  4830  038C  3001               	movlw	1
  4831  038D  158A  2735  118A   	fcall	_setLED
  4832                           
  4833                           ;PIR_B1.c: 198: setLED(2, 1);
  4834  0390  1283               	bcf	3,5	;RP0=0, select bank0
  4835  0391  1303               	bcf	3,6	;RP1=0, select bank0
  4836  0392  01CD               	clrf	setLED@command
  4837  0393  0ACD               	incf	setLED@command,f
  4838  0394                     L10:	
  4839  0394  3002               	movlw	2
  4840  0395  158A  2735  118A   	fcall	_setLED
  4841  0398                     l5168:	
  4842                           
  4843                           ;PIR_B1.c: 199: }
  4844                           ;PIR_B1.c: 241: }
  4845                           ;PIR_B1.c: 242: }
  4846                           ;PIR_B1.c: 243: }
  4847                           ;PIR_B1.c: 244: }
  4848                           ;PIR_B1.c: 245: }
  4849                           ;PIR_B1.c: 246: }
  4850                           ;PIR_B1.c: 247: if (_PIR.OK == 0) {
  4851  0398  1683               	bsf	3,5	;RP0=1, select bank1
  4852  0399  1303               	bcf	3,6	;RP1=0, select bank1
  4853  039A  19A0               	btfsc	__PIR^(0+128),3
  4854  039B  0008               	return
  4855                           
  4856                           ;PIR_B1.c: 248: _PIR.Count++;
  4857  039C  3001               	movlw	1
  4858  039D  07BE               	addwf	(__PIR^(0+128)+30),f
  4859  039E  1803               	skipnc
  4860  039F  0ABF               	incf	((__PIR+1)^(0+128)+30),f
  4861  03A0  3000               	movlw	0
  4862  03A1  07BF               	addwf	((__PIR+1)^(0+128)+30),f
  4863                           
  4864                           ;PIR_B1.c: 249: if (_PIR.Count == (30000 / 20)) {
  4865  03A2  3005               	movlw	5
  4866  03A3  063F               	xorwf	((__PIR+1)^(0+128)+30),w
  4867  03A4  1D03               	skipz
  4868  03A5  2BA8               	goto	u6635
  4869  03A6  30DC               	movlw	220
  4870  03A7  063E               	xorwf	(__PIR^(0+128)+30),w
  4871  03A8                     u6635:	
  4872  03A8  1D03               	skipz
  4873  03A9  0008               	return
  4874                           
  4875                           ;PIR_B1.c: 250: _PIR.Count = 0;
  4876  03AA  01BE               	clrf	(__PIR^(0+128)+30)
  4877  03AB  01BF               	clrf	((__PIR+1)^(0+128)+30)
  4878                           
  4879                           ;PIR_B1.c: 251: _PIR.OK = 1;
  4880  03AC  15A0               	bsf	__PIR^(0+128),3
  4881                           
  4882                           ;PIR_B1.c: 253: setLED(1, 0);
  4883  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  4884  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  4885  03AF  01CD               	clrf	setLED@command
  4886  03B0  3001               	movlw	1
  4887  03B1  158A  2735  118A   	fcall	_setLED
  4888                           
  4889                           ;PIR_B1.c: 259: if (getLights_Status(1) == 1) {
  4890  03B4  3001               	movlw	1
  4891  03B5  158A  23B3  118A   	fcall	_getLights_Status
  4892  03B8  3A01               	xorlw	1
  4893  03B9  1D03               	skipz
  4894  03BA  0008               	return
  4895                           
  4896                           ;PIR_B1.c: 260: setLights_SwOn(1);
  4897  03BB  3001               	movlw	1
  4898  03BC  158A  254C  118A   	fcall	_setLights_SwOn
  4899                           
  4900                           ;PIR_B1.c: 261: setLights_SwOff(1);
  4901  03BF  3001               	movlw	1
  4902  03C0  158A  2468         	fcall	_setLights_SwOff
  4903                           
  4904                           ;PIR_B1.c: 314: }
  4905                           ;PIR_B1.c: 315: } else {
  4906                           
  4907                           ;PIR_B1.c: 263: }
  4908                           ;PIR_B1.c: 276: }
  4909                           ;PIR_B1.c: 277: } else {
  4910  03C2  0008               	return
  4911  03C3                     l898:	
  4912                           
  4913                           ;PIR_B1.c: 316: if (myMain.PowerON == 1) {
  4914  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  4915  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  4916  03C5  1C25               	btfss	_myMain,0
  4917  03C6  0008               	return
  4918                           
  4919                           ;PIR_B1.c: 317: _PIR.Enable = 1;
  4920  03C7  1683               	bsf	3,5	;RP0=1, select bank1
  4921  03C8  1303               	bcf	3,6	;RP1=0, select bank1
  4922  03C9  1420               	bsf	__PIR^(0+128),0
  4923                           
  4924                           ;PIR_B1.c: 319: setLED(1, 1);
  4925  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  4926  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  4927  03CC  01CD               	clrf	setLED@command
  4928  03CD  0ACD               	incf	setLED@command,f
  4929  03CE  3001               	movlw	1
  4930  03CF  158A  2735  118A   	fcall	_setLED
  4931                           
  4932                           ;PIR_B1.c: 324: if (getLights_Status(1) == 0) {
  4933  03D2  3001               	movlw	1
  4934  03D3  158A  23B3  118A   	fcall	_getLights_Status
  4935  03D6  3800               	iorlw	0
  4936  03D7  1D03               	skipz
  4937  03D8  0008               	return
  4938                           
  4939                           ;PIR_B1.c: 325: setLights_SwOn(1);
  4940  03D9  3001               	movlw	1
  4941  03DA  158A  254C  118A   	fcall	_setLights_SwOn
  4942                           
  4943                           ;PIR_B1.c: 326: setLights_SwOff(1);
  4944  03DD  3001               	movlw	1
  4945  03DE  158A  2468         	fcall	_setLights_SwOff
  4946  03E0  0008               	return
  4947  03E1                     __end_of_PIR_Main:	
  4948                           
  4949                           	psect	text21
  4950  0B2B                     __ptext21:	
  4951 ;; *************** function _getCDS_Status *****************
  4952 ;; Defined at:
  4953 ;;		line 42 in file "../src/CDS_B1.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;		None
  4956 ;; Auto vars:     Size  Location     Type
  4957 ;;  status          1    4[COMMON] unsigned char 
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  1    wreg      unsigned char 
  4960 ;; Registers used:
  4961 ;;		wreg, status,2
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4967 ;;      Params:         0       0       0       0
  4968 ;;      Locals:         1       0       0       0
  4969 ;;      Temps:          0       0       0       0
  4970 ;;      Totals:         1       0       0       0
  4971 ;;Total ram usage:        1 bytes
  4972 ;; Hardware stack levels used:    1
  4973 ;; Hardware stack levels required when called:    2
  4974 ;; This function calls:
  4975 ;;		Nothing
  4976 ;; This function is called by:
  4977 ;;		_PIR_Main
  4978 ;; This function uses a non-reentrant model
  4979 ;;
  4980                           
  4981                           
  4982                           ;psect for function _getCDS_Status
  4983  0B2B                     _getCDS_Status:	
  4984                           
  4985                           ;CDS_B1.c: 43: char status = _CDS.Status == 1 ? 1 : 0;
  4986                           
  4987                           ;incstack = 0
  4988                           ; Regs used in _getCDS_Status: [wreg+status,2]
  4989  0B2B  3000               	movlw	0
  4990  0B2C  1283               	bcf	3,5	;RP0=0, select bank0
  4991  0B2D  1303               	bcf	3,6	;RP1=0, select bank0
  4992  0B2E  1A2E               	btfsc	__CDS,4
  4993  0B2F  3001               	movlw	1
  4994  0B30  00F4               	movwf	getCDS_Status@status
  4995                           
  4996                           ;CDS_B1.c: 44: return status;
  4997  0B31  0874               	movf	getCDS_Status@status,w
  4998  0B32  0008               	return
  4999  0B33                     __end_of_getCDS_Status:	
  5000                           
  5001                           	psect	text22
  5002  0B61                     __ptext22:	
  5003 ;; *************** function _PIR_Initialization *****************
  5004 ;; Defined at:
  5005 ;;		line 7 in file "../src/PIR_B1.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;		None
  5008 ;; Auto vars:     Size  Location     Type
  5009 ;;		None
  5010 ;; Return value:  Size  Location     Type
  5011 ;;		None               void
  5012 ;; Registers used:
  5013 ;;		wreg
  5014 ;; Tracked objects:
  5015 ;;		On entry : 0/0
  5016 ;;		On exit  : 0/0
  5017 ;;		Unchanged: 0/0
  5018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5019 ;;      Params:         0       0       0       0
  5020 ;;      Locals:         0       0       0       0
  5021 ;;      Temps:          1       0       0       0
  5022 ;;      Totals:         1       0       0       0
  5023 ;;Total ram usage:        1 bytes
  5024 ;; Hardware stack levels used:    1
  5025 ;; Hardware stack levels required when called:    2
  5026 ;; This function calls:
  5027 ;;		Nothing
  5028 ;; This function is called by:
  5029 ;;		_main
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           
  5033                           
  5034                           ;psect for function _PIR_Initialization
  5035  0B61                     _PIR_Initialization:	
  5036                           
  5037                           ;PIR_B1.c: 8: _PIR.RangeValue = 25;
  5038                           
  5039                           ;incstack = 0
  5040                           ; Regs used in _PIR_Initialization: [wreg]
  5041  0B61  3019               	movlw	25
  5042  0B62  00F4               	movwf	??_PIR_Initialization
  5043  0B63  0874               	movf	??_PIR_Initialization,w
  5044  0B64  1683               	bsf	3,5	;RP0=1, select bank1
  5045  0B65  1303               	bcf	3,6	;RP1=0, select bank1
  5046  0B66  00C8               	movwf	(__PIR^(0+128)+40)
  5047                           
  5048                           ;PIR_B1.c: 9: _PIR.CloseTimeValue = 5;
  5049  0B67  3005               	movlw	5
  5050  0B68  00C3               	movwf	(__PIR^(0+128)+35)
  5051  0B69  3000               	movlw	0
  5052  0B6A  00C4               	movwf	(__PIR^(0+128)+36)
  5053  0B6B  0008               	return
  5054  0B6C                     __end_of_PIR_Initialization:	
  5055                           
  5056                           	psect	text23
  5057  0BA4                     __ptext23:	
  5058 ;; *************** function _Mcu_Initialization *****************
  5059 ;; Defined at:
  5060 ;;		line 30 in file "../src/MCU_B1.c"
  5061 ;; Parameters:    Size  Location     Type
  5062 ;;		None
  5063 ;; Auto vars:     Size  Location     Type
  5064 ;;		None
  5065 ;; Return value:  Size  Location     Type
  5066 ;;		None               void
  5067 ;; Registers used:
  5068 ;;		wreg, status,2, status,0, pclath, cstack
  5069 ;; Tracked objects:
  5070 ;;		On entry : 0/0
  5071 ;;		On exit  : 0/0
  5072 ;;		Unchanged: 0/0
  5073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5074 ;;      Params:         0       0       0       0
  5075 ;;      Locals:         0       0       0       0
  5076 ;;      Temps:          0       0       0       0
  5077 ;;      Totals:         0       0       0       0
  5078 ;;Total ram usage:        0 bytes
  5079 ;; Hardware stack levels used:    1
  5080 ;; Hardware stack levels required when called:    3
  5081 ;; This function calls:
  5082 ;;		_ADC_Set
  5083 ;;		_Fosc_Set
  5084 ;;		_IO_Set
  5085 ;;		_TMR1_Set
  5086 ;;		_WDT_Set
  5087 ;; This function is called by:
  5088 ;;		_main
  5089 ;; This function uses a non-reentrant model
  5090 ;;
  5091                           
  5092                           
  5093                           ;psect for function _Mcu_Initialization
  5094  0BA4                     _Mcu_Initialization:	
  5095                           
  5096                           ;MCU_B1.c: 32: Fosc_Set();
  5097                           
  5098                           ;incstack = 0
  5099                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  5100  0BA4  158A  22F6  158A   	fcall	_Fosc_Set
  5101                           
  5102                           ;MCU_B1.c: 34: IO_Set();
  5103  0BA7  158A  2482  158A   	fcall	_IO_Set
  5104                           
  5105                           ;MCU_B1.c: 36: ;;
  5106                           ;MCU_B1.c: 38: TMR1_Set();
  5107  0BAA  158A  2388  158A   	fcall	_TMR1_Set
  5108                           
  5109                           ;MCU_B1.c: 40: ADC_Set();
  5110  0BAD  158A  2314  158A   	fcall	_ADC_Set
  5111                           
  5112                           ;MCU_B1.c: 42: ;;
  5113                           ;MCU_B1.c: 44: ;;
  5114                           ;MCU_B1.c: 46: ;;
  5115                           ;MCU_B1.c: 48: ;;
  5116                           ;MCU_B1.c: 50: ;;
  5117                           ;MCU_B1.c: 52: WDT_Set();
  5118  0BB0  158A  2396         	fcall	_WDT_Set
  5119  0BB2  0008               	return
  5120  0BB3                     __end_of_Mcu_Initialization:	
  5121                           
  5122                           	psect	text24
  5123  0B96                     __ptext24:	
  5124 ;; *************** function _WDT_Set *****************
  5125 ;; Defined at:
  5126 ;;		line 1102 in file "../src/MCU_B1.c"
  5127 ;; Parameters:    Size  Location     Type
  5128 ;;		None
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;		None
  5131 ;; Return value:  Size  Location     Type
  5132 ;;		None               void
  5133 ;; Registers used:
  5134 ;;		wreg
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5140 ;;      Params:         0       0       0       0
  5141 ;;      Locals:         0       0       0       0
  5142 ;;      Temps:          1       0       0       0
  5143 ;;      Totals:         1       0       0       0
  5144 ;;Total ram usage:        1 bytes
  5145 ;; Hardware stack levels used:    1
  5146 ;; Hardware stack levels required when called:    2
  5147 ;; This function calls:
  5148 ;;		Nothing
  5149 ;; This function is called by:
  5150 ;;		_Mcu_Initialization
  5151 ;; This function uses a non-reentrant model
  5152 ;;
  5153                           
  5154                           
  5155                           ;psect for function _WDT_Set
  5156  0B96                     _WDT_Set:	
  5157                           
  5158                           ;MCU_B1.c: 1104: PSA = 1;
  5159                           
  5160                           ;incstack = 0
  5161                           ; Regs used in _WDT_Set: [wreg]
  5162  0B96  1683               	bsf	3,5	;RP0=1, select bank1
  5163  0B97  1303               	bcf	3,6	;RP1=0, select bank1
  5164  0B98  1581               	bsf	1,3	;volatile
  5165                           
  5166                           ;MCU_B1.c: 1105: PS0 = 1;
  5167  0B99  1401               	bsf	1,0	;volatile
  5168                           
  5169                           ;MCU_B1.c: 1106: PS1 = 1;
  5170  0B9A  1481               	bsf	1,1	;volatile
  5171                           
  5172                           ;MCU_B1.c: 1107: PS2 = 1;
  5173  0B9B  1501               	bsf	1,2	;volatile
  5174                           
  5175                           ;MCU_B1.c: 1111: WDT.Enable = 1;
  5176  0B9C  1283               	bcf	3,5	;RP0=0, select bank0
  5177  0B9D  1303               	bcf	3,6	;RP1=0, select bank0
  5178  0B9E  1435               	bsf	_WDT,0
  5179                           
  5180                           ;MCU_B1.c: 1112: WDT.Timer = 10;
  5181  0B9F  300A               	movlw	10
  5182  0BA0  00F4               	movwf	??_WDT_Set
  5183  0BA1  0874               	movf	??_WDT_Set,w
  5184  0BA2  00B6               	movwf	_WDT+1
  5185  0BA3  0008               	return
  5186  0BA4                     __end_of_WDT_Set:	
  5187                           
  5188                           	psect	text25
  5189  0B88                     __ptext25:	
  5190 ;; *************** function _TMR1_Set *****************
  5191 ;; Defined at:
  5192 ;;		line 226 in file "../src/MCU_B1.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;		None
  5195 ;; Auto vars:     Size  Location     Type
  5196 ;;		None
  5197 ;; Return value:  Size  Location     Type
  5198 ;;		None               void
  5199 ;; Registers used:
  5200 ;;		wreg
  5201 ;; Tracked objects:
  5202 ;;		On entry : 0/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5206 ;;      Params:         0       0       0       0
  5207 ;;      Locals:         0       0       0       0
  5208 ;;      Temps:          0       0       0       0
  5209 ;;      Totals:         0       0       0       0
  5210 ;;Total ram usage:        0 bytes
  5211 ;; Hardware stack levels used:    1
  5212 ;; Hardware stack levels required when called:    2
  5213 ;; This function calls:
  5214 ;;		Nothing
  5215 ;; This function is called by:
  5216 ;;		_Mcu_Initialization
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           
  5220                           
  5221                           ;psect for function _TMR1_Set
  5222  0B88                     _TMR1_Set:	
  5223                           
  5224                           ;MCU_B1.c: 227: T1CON = (0x40 | 0x00 | 0x01);
  5225                           
  5226                           ;incstack = 0
  5227                           ; Regs used in _TMR1_Set: [wreg]
  5228  0B88  3041               	movlw	65
  5229  0B89  1283               	bcf	3,5	;RP0=0, select bank0
  5230  0B8A  1303               	bcf	3,6	;RP1=0, select bank0
  5231  0B8B  0090               	movwf	16	;volatile
  5232                           
  5233                           ;MCU_B1.c: 228: TMR1H = (int)((65536-1480)/256);
  5234  0B8C  30FA               	movlw	250
  5235  0B8D  008F               	movwf	15	;volatile
  5236                           
  5237                           ;MCU_B1.c: 229: TMR1L = (int)((65536-1480)%256);
  5238  0B8E  3038               	movlw	56
  5239  0B8F  008E               	movwf	14	;volatile
  5240                           
  5241                           ;MCU_B1.c: 230: TMR1IE = 1;
  5242  0B90  1683               	bsf	3,5	;RP0=1, select bank1
  5243  0B91  1303               	bcf	3,6	;RP1=0, select bank1
  5244  0B92  140C               	bsf	12,0	;volatile
  5245                           
  5246                           ;MCU_B1.c: 231: PEIE = 1;
  5247  0B93  170B               	bsf	11,6	;volatile
  5248                           
  5249                           ;MCU_B1.c: 232: GIE = 1;
  5250  0B94  178B               	bsf	11,7	;volatile
  5251  0B95  0008               	return
  5252  0B96                     __end_of_TMR1_Set:	
  5253                           
  5254                           	psect	text26
  5255  0C82                     __ptext26:	
  5256 ;; *************** function _IO_Set *****************
  5257 ;; Defined at:
  5258 ;;		line 60 in file "../src/MCU_B1.c"
  5259 ;; Parameters:    Size  Location     Type
  5260 ;;		None
  5261 ;; Auto vars:     Size  Location     Type
  5262 ;;		None
  5263 ;; Return value:  Size  Location     Type
  5264 ;;		None               void
  5265 ;; Registers used:
  5266 ;;		wreg, status,2
  5267 ;; Tracked objects:
  5268 ;;		On entry : 0/0
  5269 ;;		On exit  : 0/0
  5270 ;;		Unchanged: 0/0
  5271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5272 ;;      Params:         0       0       0       0
  5273 ;;      Locals:         0       0       0       0
  5274 ;;      Temps:          0       0       0       0
  5275 ;;      Totals:         0       0       0       0
  5276 ;;Total ram usage:        0 bytes
  5277 ;; Hardware stack levels used:    1
  5278 ;; Hardware stack levels required when called:    2
  5279 ;; This function calls:
  5280 ;;		Nothing
  5281 ;; This function is called by:
  5282 ;;		_Mcu_Initialization
  5283 ;; This function uses a non-reentrant model
  5284 ;;
  5285                           
  5286                           
  5287                           ;psect for function _IO_Set
  5288  0C82                     _IO_Set:	
  5289                           
  5290                           ;MCU_B1.c: 62: TRISA = 0b00101111;;
  5291                           
  5292                           ;incstack = 0
  5293                           ; Regs used in _IO_Set: [wreg+status,2]
  5294  0C82  302F               	movlw	47
  5295  0C83  1683               	bsf	3,5	;RP0=1, select bank1
  5296  0C84  1303               	bcf	3,6	;RP1=0, select bank1
  5297  0C85  0085               	movwf	5	;volatile
  5298                           
  5299                           ;MCU_B1.c: 63: TRISB = 0b00010011;;
  5300  0C86  3013               	movlw	19
  5301  0C87  0086               	movwf	6	;volatile
  5302                           
  5303                           ;MCU_B1.c: 64: TRISC = 0b00001100;;
  5304  0C88  300C               	movlw	12
  5305  0C89  0087               	movwf	7	;volatile
  5306                           
  5307                           ;MCU_B1.c: 65: ANSELA = 0b00001111;;
  5308  0C8A  300F               	movlw	15
  5309  0C8B  1683               	bsf	3,5	;RP0=1, select bank3
  5310  0C8C  1703               	bsf	3,6	;RP1=1, select bank3
  5311  0C8D  0085               	movwf	5	;volatile
  5312                           
  5313                           ;MCU_B1.c: 66: ANSELB = 0b00010010;;
  5314  0C8E  3012               	movlw	18
  5315  0C8F  0086               	movwf	6	;volatile
  5316                           
  5317                           ;MCU_B1.c: 67: PORTA = 0b10101111;;
  5318  0C90  30AF               	movlw	175
  5319  0C91  1283               	bcf	3,5	;RP0=0, select bank0
  5320  0C92  1303               	bcf	3,6	;RP1=0, select bank0
  5321  0C93  0085               	movwf	5	;volatile
  5322                           
  5323                           ;MCU_B1.c: 68: PORTB = 0b00010011;;
  5324  0C94  3013               	movlw	19
  5325  0C95  0086               	movwf	6	;volatile
  5326                           
  5327                           ;MCU_B1.c: 69: PORTC = 0b00001100;;
  5328  0C96  300C               	movlw	12
  5329  0C97  0087               	movwf	7	;volatile
  5330                           
  5331                           ;MCU_B1.c: 71: WPUB = 0b00000000;;
  5332  0C98  1683               	bsf	3,5	;RP0=1, select bank1
  5333  0C99  1303               	bcf	3,6	;RP1=0, select bank1
  5334  0C9A  0195               	clrf	21	;volatile
  5335  0C9B  0008               	return
  5336  0C9C                     __end_of_IO_Set:	
  5337                           
  5338                           	psect	text27
  5339  0AF6                     __ptext27:	
  5340 ;; *************** function _Fosc_Set *****************
  5341 ;; Defined at:
  5342 ;;		line 56 in file "../src/MCU_B1.c"
  5343 ;; Parameters:    Size  Location     Type
  5344 ;;		None
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;		None
  5347 ;; Return value:  Size  Location     Type
  5348 ;;		None               void
  5349 ;; Registers used:
  5350 ;;		wreg
  5351 ;; Tracked objects:
  5352 ;;		On entry : 0/0
  5353 ;;		On exit  : 0/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5356 ;;      Params:         0       0       0       0
  5357 ;;      Locals:         0       0       0       0
  5358 ;;      Temps:          0       0       0       0
  5359 ;;      Totals:         0       0       0       0
  5360 ;;Total ram usage:        0 bytes
  5361 ;; Hardware stack levels used:    1
  5362 ;; Hardware stack levels required when called:    2
  5363 ;; This function calls:
  5364 ;;		Nothing
  5365 ;; This function is called by:
  5366 ;;		_Mcu_Initialization
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370                           
  5371                           ;psect for function _Fosc_Set
  5372  0AF6                     _Fosc_Set:	
  5373                           
  5374                           ;MCU_B1.c: 57: OSCCON = 0x3c;
  5375                           
  5376                           ;incstack = 0
  5377                           ; Regs used in _Fosc_Set: [wreg]
  5378  0AF6  303C               	movlw	60
  5379  0AF7  1683               	bsf	3,5	;RP0=1, select bank1
  5380  0AF8  1303               	bcf	3,6	;RP1=0, select bank1
  5381  0AF9  0090               	movwf	16	;volatile
  5382  0AFA  0008               	return
  5383  0AFB                     __end_of_Fosc_Set:	
  5384                           
  5385                           	psect	text28
  5386  0B14                     __ptext28:	
  5387 ;; *************** function _ADC_Set *****************
  5388 ;; Defined at:
  5389 ;;		line 427 in file "../src/MCU_B1.c"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;		None
  5392 ;; Auto vars:     Size  Location     Type
  5393 ;;		None
  5394 ;; Return value:  Size  Location     Type
  5395 ;;		None               void
  5396 ;; Registers used:
  5397 ;;		wreg
  5398 ;; Tracked objects:
  5399 ;;		On entry : 0/0
  5400 ;;		On exit  : 0/0
  5401 ;;		Unchanged: 0/0
  5402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5403 ;;      Params:         0       0       0       0
  5404 ;;      Locals:         0       0       0       0
  5405 ;;      Temps:          0       0       0       0
  5406 ;;      Totals:         0       0       0       0
  5407 ;;Total ram usage:        0 bytes
  5408 ;; Hardware stack levels used:    1
  5409 ;; Hardware stack levels required when called:    2
  5410 ;; This function calls:
  5411 ;;		Nothing
  5412 ;; This function is called by:
  5413 ;;		_Mcu_Initialization
  5414 ;; This function uses a non-reentrant model
  5415 ;;
  5416                           
  5417                           
  5418                           ;psect for function _ADC_Set
  5419  0B14                     _ADC_Set:	
  5420                           
  5421                           ;MCU_B1.c: 428: ADCON1 = 0x73;
  5422                           
  5423                           ;incstack = 0
  5424                           ; Regs used in _ADC_Set: [wreg]
  5425  0B14  3073               	movlw	115
  5426  0B15  1683               	bsf	3,5	;RP0=1, select bank1
  5427  0B16  1303               	bcf	3,6	;RP1=0, select bank1
  5428  0B17  009F               	movwf	31	;volatile
  5429                           
  5430                           ;MCU_B1.c: 429: FVRCON = 0xc1;
  5431  0B18  30C1               	movlw	193
  5432  0B19  009D               	movwf	29	;volatile
  5433  0B1A  0008               	return
  5434  0B1B                     __end_of_ADC_Set:	
  5435                           
  5436                           	psect	text29
  5437  0026                     __ptext29:	
  5438 ;; *************** function _Load_Main *****************
  5439 ;; Defined at:
  5440 ;;		line 39 in file "../src/OverLoad_B1.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;		None
  5443 ;; Auto vars:     Size  Location     Type
  5444 ;;  i               2   15[BANK0 ] int 
  5445 ;;  LightsCount     1   14[BANK0 ] unsigned char 
  5446 ;;  Load_RunStat    1   13[BANK0 ] unsigned char 
  5447 ;;  ErrorCountVa    1   12[BANK0 ] unsigned char 
  5448 ;;  error           1    9[BANK0 ] unsigned char 
  5449 ;; Return value:  Size  Location     Type
  5450 ;;		None               void
  5451 ;; Registers used:
  5452 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5453 ;; Tracked objects:
  5454 ;;		On entry : 0/0
  5455 ;;		On exit  : 0/0
  5456 ;;		Unchanged: 0/0
  5457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5458 ;;      Params:         0       0       0       0
  5459 ;;      Locals:         0       8       0       0
  5460 ;;      Temps:          0       2       0       0
  5461 ;;      Totals:         0      10       0       0
  5462 ;;Total ram usage:       10 bytes
  5463 ;; Hardware stack levels used:    1
  5464 ;; Hardware stack levels required when called:    3
  5465 ;; This function calls:
  5466 ;;		___lwdiv
  5467 ;;		___wmul
  5468 ;;		_getLight_LoadGO
  5469 ;;		_getLight_Load_Status
  5470 ;;		_getMain_All_Error_Status
  5471 ;;		_getMain_All_LightsStatus
  5472 ;;		_getMain_Lights_Count
  5473 ;;		_setLoad_AH_AL_Restore
  5474 ;; This function is called by:
  5475 ;;		_main
  5476 ;; This function uses a non-reentrant model
  5477 ;;
  5478                           
  5479                           
  5480                           ;psect for function _Load_Main
  5481  0026                     _Load_Main:	
  5482                           
  5483                           ;OverLoad_B1.c: 40: char error = getMain_All_Error_Status(0);
  5484                           
  5485                           ;incstack = 0
  5486                           ; Regs used in _Load_Main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5487  0026  3000               	movlw	0
  5488  0027  158A  25FA  118A   	fcall	_getMain_All_Error_Status
  5489  002A  1283               	bcf	3,5	;RP0=0, select bank0
  5490  002B  1303               	bcf	3,6	;RP1=0, select bank0
  5491  002C  00D4               	movwf	??_Load_Main
  5492  002D  0854               	movf	??_Load_Main,w
  5493  002E  00D6               	movwf	Load_Main@error
  5494                           
  5495                           ;OverLoad_B1.c: 41: char Load_RunStatus = 0, ErrorCountValue = 0, LightsCount=0;
  5496  002F  01DA               	clrf	Load_Main@Load_RunStatus
  5497  0030  01D9               	clrf	Load_Main@ErrorCountValue
  5498  0031  01DB               	clrf	Load_Main@LightsCount
  5499                           
  5500                           ;OverLoad_B1.c: 42: if (Load.Enable == 1) {
  5501  0032  1683               	bsf	3,5	;RP0=1, select bank1
  5502  0033  1303               	bcf	3,6	;RP1=0, select bank1
  5503  0034  1C4A               	btfss	_Load^(0+128),0
  5504  0035  2A08               	goto	l700
  5505                           
  5506                           ;OverLoad_B1.c: 44: if (getMain_All_LightsStatus() == 0) {
  5507  0036  158A  2344  118A   	fcall	_getMain_All_LightsStatus
  5508  0039  3800               	iorlw	0
  5509  003A  1D03               	skipz
  5510  003B  283F               	goto	l4906
  5511                           
  5512                           ;OverLoad_B1.c: 45: Load.GO = 0;
  5513  003C  1683               	bsf	3,5	;RP0=1, select bank1
  5514  003D  1303               	bcf	3,6	;RP1=0, select bank1
  5515  003E  285E               	goto	l4922
  5516  003F                     l4906:	
  5517                           ;OverLoad_B1.c: 46: } else {
  5518                           
  5519                           
  5520                           ;OverLoad_B1.c: 69: if (error == 0) {
  5521  003F  1283               	bcf	3,5	;RP0=0, select bank0
  5522  0040  1303               	bcf	3,6	;RP1=0, select bank0
  5523  0041  08D6               	movf	Load_Main@error,f
  5524  0042  1D03               	skipz
  5525  0043  285B               	goto	l703
  5526                           
  5527                           ;OverLoad_B1.c: 70: Load.GO = 1;
  5528  0044  1683               	bsf	3,5	;RP0=1, select bank1
  5529  0045  1303               	bcf	3,6	;RP1=0, select bank1
  5530  0046  14CA               	bsf	_Load^(0+128),1
  5531                           
  5532                           ;OverLoad_B1.c: 72: if (getLight_LoadGO() == 1) {
  5533  0047  158A  22FB  118A   	fcall	_getLight_LoadGO
  5534  004A  3A01               	xorlw	1
  5535  004B  1D03               	skipz
  5536  004C  2855               	goto	l704
  5537                           
  5538                           ;OverLoad_B1.c: 73: if (Load.Run == 0 && Load.OK == 0) {
  5539  004D  1683               	bsf	3,5	;RP0=1, select bank1
  5540  004E  1303               	bcf	3,6	;RP1=0, select bank1
  5541  004F  1DCA               	btfss	_Load^(0+128),3
  5542  0050  1BCA               	btfsc	_Load^(0+128),7
  5543  0051  285F               	goto	l702
  5544                           
  5545                           ;OverLoad_B1.c: 74: Load.Run = 1;
  5546  0052  15CA               	bsf	_Load^(0+128),3
  5547                           
  5548                           ;OverLoad_B1.c: 75: Load.Count = 0;
  5549  0053  01E3               	clrf	(_Load^(0+128)+25)
  5550                           
  5551                           ;OverLoad_B1.c: 76: }
  5552                           ;OverLoad_B1.c: 77: } else {
  5553  0054  285F               	goto	l702
  5554  0055                     l704:	
  5555                           
  5556                           ;OverLoad_B1.c: 78: if (Load.OK == 1) {
  5557  0055  1683               	bsf	3,5	;RP0=1, select bank1
  5558  0056  1303               	bcf	3,6	;RP1=0, select bank1
  5559  0057  1FCA               	btfss	_Load^(0+128),7
  5560  0058  285F               	goto	l702
  5561                           
  5562                           ;OverLoad_B1.c: 79: Load.OK = 0;
  5563  0059  13CA               	bcf	_Load^(0+128),7
  5564                           
  5565                           ;OverLoad_B1.c: 80: }
  5566                           ;OverLoad_B1.c: 81: }
  5567                           ;OverLoad_B1.c: 82: } else {
  5568  005A  285F               	goto	l702
  5569  005B                     l703:	
  5570                           
  5571                           ;OverLoad_B1.c: 83: if (Load.GO == 1) {
  5572  005B  1683               	bsf	3,5	;RP0=1, select bank1
  5573  005C  1303               	bcf	3,6	;RP1=0, select bank1
  5574  005D  18CA               	btfsc	_Load^(0+128),1
  5575  005E                     l4922:	
  5576                           
  5577                           ;OverLoad_B1.c: 84: Load.GO = 0;
  5578  005E  10CA               	bcf	_Load^(0+128),1
  5579  005F                     l702:	
  5580                           
  5581                           ;OverLoad_B1.c: 85: }
  5582                           ;OverLoad_B1.c: 86: }
  5583                           ;OverLoad_B1.c: 88: }
  5584                           ;OverLoad_B1.c: 91: if (Load.GO == 1) {
  5585  005F  1CCA               	btfss	_Load^(0+128),1
  5586  0060  29E1               	goto	l710
  5587                           
  5588                           ;OverLoad_B1.c: 92: Load.LightsON = 1;
  5589  0061  154A               	bsf	_Load^(0+128),2
  5590                           
  5591                           ;OverLoad_B1.c: 94: if (Load.ADtoGO == 1) {
  5592  0062  1E4A               	btfss	_Load^(0+128),4
  5593  0063  29DF               	goto	l711
  5594                           
  5595                           ;OverLoad_B1.c: 95: Load.Time++;
  5596  0064  3001               	movlw	1
  5597  0065  07CB               	addwf	(_Load^(0+128)+1),f
  5598  0066  1803               	skipnc
  5599  0067  0ACC               	incf	((_Load+1)^(0+128)+1),f
  5600  0068  3000               	movlw	0
  5601  0069  07CC               	addwf	((_Load+1)^(0+128)+1),f
  5602                           
  5603                           ;OverLoad_B1.c: 96: if (Load.Time >= (40 / 20)) {
  5604  006A  3000               	movlw	0
  5605  006B  024C               	subwf	((_Load+1)^(0+128)+1),w
  5606  006C  3002               	movlw	2
  5607  006D  1903               	skipnz
  5608  006E  024B               	subwf	(_Load^(0+128)+1),w
  5609  006F  1C03               	skipc
  5610  0070  0008               	return
  5611                           
  5612                           ;OverLoad_B1.c: 97: Load.Time = 0;
  5613  0071  01CB               	clrf	(_Load^(0+128)+1)
  5614  0072  01CC               	clrf	((_Load+1)^(0+128)+1)
  5615                           
  5616                           ;OverLoad_B1.c: 98: Load.ADtoGO = 0;
  5617  0073  124A               	bcf	_Load^(0+128),4
  5618                           
  5619                           ;OverLoad_B1.c: 100: for (int i = 1; i < 4; i++) {
  5620  0074  3001               	movlw	1
  5621  0075  1283               	bcf	3,5	;RP0=0, select bank0
  5622  0076  1303               	bcf	3,6	;RP1=0, select bank0
  5623  0077  00DC               	movwf	Load_Main@i
  5624  0078  3000               	movlw	0
  5625  0079  00DD               	movwf	Load_Main@i+1
  5626  007A  085D               	movf	Load_Main@i+1,w
  5627  007B  3A80               	xorlw	128
  5628  007C  00FF               	movwf	127
  5629  007D  3080               	movlw	128
  5630  007E  027F               	subwf	127,w
  5631  007F  1D03               	skipz
  5632  0080  2883               	goto	u6115
  5633  0081  3004               	movlw	4
  5634  0082  025C               	subwf	Load_Main@i,w
  5635  0083                     u6115:	
  5636  0083  1803               	btfsc	3,0
  5637  0084  28C1               	goto	l4944
  5638  0085                     l4938:	
  5639                           
  5640                           ;OverLoad_B1.c: 101: Load.ADH += Load.AH[i];
  5641  0085  1283               	bcf	3,5	;RP0=0, select bank0
  5642  0086  1303               	bcf	3,6	;RP1=0, select bank0
  5643  0087  085C               	movf	Load_Main@i,w
  5644  0088  3ED4               	addlw	(_Load+10)& (0+255)
  5645  0089  0084               	movwf	4
  5646  008A  1383               	bcf	3,7	;select IRP bank1
  5647  008B  0800               	movf	0,w
  5648  008C  00D4               	movwf	??_Load_Main
  5649  008D  01D5               	clrf	??_Load_Main+1
  5650  008E  0854               	movf	??_Load_Main,w
  5651  008F  1683               	bsf	3,5	;RP0=1, select bank1
  5652  0090  1303               	bcf	3,6	;RP1=0, select bank1
  5653  0091  07CF               	addwf	(_Load^(0+128)+5),f
  5654  0092  1803               	skipnc
  5655  0093  0AD0               	incf	((_Load+1)^(0+128)+5),f
  5656  0094  1283               	bcf	3,5	;RP0=0, select bank0
  5657  0095  1303               	bcf	3,6	;RP1=0, select bank0
  5658  0096  0855               	movf	??_Load_Main+1,w
  5659  0097  1683               	bsf	3,5	;RP0=1, select bank1
  5660  0098  1303               	bcf	3,6	;RP1=0, select bank1
  5661  0099  07D0               	addwf	((_Load+1)^(0+128)+5),f
  5662                           
  5663                           ;OverLoad_B1.c: 102: Load.ADL += Load.AL[i];
  5664  009A  1283               	bcf	3,5	;RP0=0, select bank0
  5665  009B  1303               	bcf	3,6	;RP1=0, select bank0
  5666  009C  085C               	movf	Load_Main@i,w
  5667  009D  3ED9               	addlw	(_Load+15)& (0+255)
  5668  009E  0084               	movwf	4
  5669  009F  0800               	movf	0,w
  5670  00A0  00D4               	movwf	??_Load_Main
  5671  00A1  01D5               	clrf	??_Load_Main+1
  5672  00A2  0854               	movf	??_Load_Main,w
  5673  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  5674  00A4  1303               	bcf	3,6	;RP1=0, select bank1
  5675  00A5  07D1               	addwf	(_Load^(0+128)+7),f
  5676  00A6  1803               	skipnc
  5677  00A7  0AD2               	incf	((_Load+1)^(0+128)+7),f
  5678  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  5679  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  5680  00AA  0855               	movf	??_Load_Main+1,w
  5681  00AB  1683               	bsf	3,5	;RP0=1, select bank1
  5682  00AC  1303               	bcf	3,6	;RP1=0, select bank1
  5683  00AD  07D2               	addwf	((_Load+1)^(0+128)+7),f
  5684  00AE  3001               	movlw	1
  5685  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  5686  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  5687  00B1  07DC               	addwf	Load_Main@i,f
  5688  00B2  1803               	skipnc
  5689  00B3  0ADD               	incf	Load_Main@i+1,f
  5690  00B4  3000               	movlw	0
  5691  00B5  07DD               	addwf	Load_Main@i+1,f
  5692  00B6  085D               	movf	Load_Main@i+1,w
  5693  00B7  3A80               	xorlw	128
  5694  00B8  00FF               	movwf	127
  5695  00B9  3080               	movlw	128
  5696  00BA  027F               	subwf	127,w
  5697  00BB  1D03               	skipz
  5698  00BC  28BF               	goto	u6125
  5699  00BD  3004               	movlw	4
  5700  00BE  025C               	subwf	Load_Main@i,w
  5701  00BF                     u6125:	
  5702  00BF  1C03               	skipc
  5703  00C0  2885               	goto	l4938
  5704  00C1                     l4944:	
  5705                           
  5706                           ;OverLoad_B1.c: 103: }
  5707                           ;OverLoad_B1.c: 104: Load.ADH /= 3;
  5708  00C1  3003               	movlw	3
  5709  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  5710  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  5711  00C4  00CD               	movwf	___lwdiv@divisor
  5712  00C5  3000               	movlw	0
  5713  00C6  00CE               	movwf	___lwdiv@divisor+1
  5714  00C7  1683               	bsf	3,5	;RP0=1, select bank1
  5715  00C8  1303               	bcf	3,6	;RP1=0, select bank1
  5716  00C9  0850               	movf	((_Load+1)^(0+128)+5),w
  5717  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  5718  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  5719  00CC  01D0               	clrf	___lwdiv@dividend+1
  5720  00CD  07D0               	addwf	___lwdiv@dividend+1,f
  5721  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  5722  00CF  1303               	bcf	3,6	;RP1=0, select bank1
  5723  00D0  084F               	movf	(_Load^(0+128)+5),w
  5724  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  5725  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  5726  00D3  01CF               	clrf	___lwdiv@dividend
  5727  00D4  07CF               	addwf	___lwdiv@dividend,f
  5728  00D5  118A  27BF  118A   	fcall	___lwdiv
  5729  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  5730  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  5731  00DA  084E               	movf	?___lwdiv+1,w
  5732  00DB  1683               	bsf	3,5	;RP0=1, select bank1
  5733  00DC  1303               	bcf	3,6	;RP1=0, select bank1
  5734  00DD  01D0               	clrf	((_Load+1)^(0+128)+5)
  5735  00DE  07D0               	addwf	((_Load+1)^(0+128)+5),f
  5736  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  5737  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  5738  00E1  084D               	movf	?___lwdiv,w
  5739  00E2  1683               	bsf	3,5	;RP0=1, select bank1
  5740  00E3  1303               	bcf	3,6	;RP1=0, select bank1
  5741  00E4  01CF               	clrf	(_Load^(0+128)+5)
  5742  00E5  07CF               	addwf	(_Load^(0+128)+5),f
  5743                           
  5744                           ;OverLoad_B1.c: 105: Load.ADL /= 3;
  5745  00E6  3003               	movlw	3
  5746  00E7  1283               	bcf	3,5	;RP0=0, select bank0
  5747  00E8  1303               	bcf	3,6	;RP1=0, select bank0
  5748  00E9  00CD               	movwf	___lwdiv@divisor
  5749  00EA  3000               	movlw	0
  5750  00EB  00CE               	movwf	___lwdiv@divisor+1
  5751  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  5752  00ED  1303               	bcf	3,6	;RP1=0, select bank1
  5753  00EE  0852               	movf	((_Load+1)^(0+128)+7),w
  5754  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  5755  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  5756  00F1  01D0               	clrf	___lwdiv@dividend+1
  5757  00F2  07D0               	addwf	___lwdiv@dividend+1,f
  5758  00F3  1683               	bsf	3,5	;RP0=1, select bank1
  5759  00F4  1303               	bcf	3,6	;RP1=0, select bank1
  5760  00F5  0851               	movf	(_Load^(0+128)+7),w
  5761  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  5762  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  5763  00F8  01CF               	clrf	___lwdiv@dividend
  5764  00F9  07CF               	addwf	___lwdiv@dividend,f
  5765  00FA  118A  27BF  118A   	fcall	___lwdiv
  5766  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  5767  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  5768  00FF  084E               	movf	?___lwdiv+1,w
  5769  0100  1683               	bsf	3,5	;RP0=1, select bank1
  5770  0101  1303               	bcf	3,6	;RP1=0, select bank1
  5771  0102  01D2               	clrf	((_Load+1)^(0+128)+7)
  5772  0103  07D2               	addwf	((_Load+1)^(0+128)+7),f
  5773  0104  1283               	bcf	3,5	;RP0=0, select bank0
  5774  0105  1303               	bcf	3,6	;RP1=0, select bank0
  5775  0106  084D               	movf	?___lwdiv,w
  5776  0107  1683               	bsf	3,5	;RP0=1, select bank1
  5777  0108  1303               	bcf	3,6	;RP1=0, select bank1
  5778  0109  01D1               	clrf	(_Load^(0+128)+7)
  5779  010A  07D1               	addwf	(_Load^(0+128)+7),f
  5780                           
  5781                           ;OverLoad_B1.c: 106: setLoad_AH_AL_Restore();
  5782  010B  158A  2423  118A   	fcall	_setLoad_AH_AL_Restore
  5783                           
  5784                           ;OverLoad_B1.c: 108: if (Load.ADH >= Load.ADL) {
  5785  010E  1683               	bsf	3,5	;RP0=1, select bank1
  5786  010F  1303               	bcf	3,6	;RP1=0, select bank1
  5787  0110  0852               	movf	((_Load+1)^(0+128)+7),w
  5788  0111  0250               	subwf	((_Load+1)^(0+128)+5),w
  5789  0112  1D03               	skipz
  5790  0113  2916               	goto	u6135
  5791  0114  0851               	movf	(_Load^(0+128)+7),w
  5792  0115  024F               	subwf	(_Load^(0+128)+5),w
  5793  0116                     u6135:	
  5794  0116  1C03               	skipc
  5795  0117  0008               	return
  5796                           
  5797                           ;OverLoad_B1.c: 109: Load.AD = Load.ADH - Load.ADL;
  5798  0118  0351               	decf	(_Load^(0+128)+7),w
  5799  0119  3AFF               	xorlw	255
  5800  011A  074F               	addwf	(_Load^(0+128)+5),w
  5801  011B  1283               	bcf	3,5	;RP0=0, select bank0
  5802  011C  1303               	bcf	3,6	;RP1=0, select bank0
  5803  011D  00D4               	movwf	??_Load_Main
  5804  011E  0854               	movf	??_Load_Main,w
  5805  011F  1683               	bsf	3,5	;RP0=1, select bank1
  5806  0120  1303               	bcf	3,6	;RP1=0, select bank1
  5807  0121  00DE               	movwf	(_Load^(0+128)+20)
  5808                           
  5809                           ;OverLoad_B1.c: 110: Load.ADH = 0;
  5810  0122  01CF               	clrf	(_Load^(0+128)+5)
  5811  0123  01D0               	clrf	((_Load+1)^(0+128)+5)
  5812                           
  5813                           ;OverLoad_B1.c: 111: Load.ADL = 0;
  5814  0124  01D1               	clrf	(_Load^(0+128)+7)
  5815  0125  01D2               	clrf	((_Load+1)^(0+128)+7)
  5816                           
  5817                           ;OverLoad_B1.c: 113: if (Load.Run == 1) {
  5818  0126  1DCA               	btfss	_Load^(0+128),3
  5819  0127  298B               	goto	l716
  5820                           
  5821                           ;OverLoad_B1.c: 114: if (Load.Count < 2) {
  5822  0128  3002               	movlw	2
  5823  0129  0263               	subwf	(_Load^(0+128)+25),w
  5824  012A  1803               	skipnc
  5825  012B  298B               	goto	l716
  5826                           
  5827                           ;OverLoad_B1.c: 115: Load.Count++;
  5828  012C  3001               	movlw	1
  5829  012D  1283               	bcf	3,5	;RP0=0, select bank0
  5830  012E  1303               	bcf	3,6	;RP1=0, select bank0
  5831  012F  00D4               	movwf	??_Load_Main
  5832  0130  0854               	movf	??_Load_Main,w
  5833  0131  1683               	bsf	3,5	;RP0=1, select bank1
  5834  0132  1303               	bcf	3,6	;RP1=0, select bank1
  5835  0133  07E3               	addwf	(_Load^(0+128)+25),f
  5836                           
  5837                           ;OverLoad_B1.c: 120: Load_RunStatus = getLight_Load_Status();
  5838  0134  158A  2301  118A   	fcall	_getLight_Load_Status
  5839  0137  1283               	bcf	3,5	;RP0=0, select bank0
  5840  0138  1303               	bcf	3,6	;RP1=0, select bank0
  5841  0139  00D4               	movwf	??_Load_Main
  5842  013A  0854               	movf	??_Load_Main,w
  5843  013B  00DA               	movwf	Load_Main@Load_RunStatus
  5844                           
  5845                           ;OverLoad_B1.c: 122: LightsCount = getMain_Lights_Count();
  5846  013C  158A  2357  118A   	fcall	_getMain_Lights_Count
  5847  013F  1283               	bcf	3,5	;RP0=0, select bank0
  5848  0140  1303               	bcf	3,6	;RP1=0, select bank0
  5849  0141  00D4               	movwf	??_Load_Main
  5850  0142  0854               	movf	??_Load_Main,w
  5851  0143  00DB               	movwf	Load_Main@LightsCount
  5852                           
  5853                           ;OverLoad_B1.c: 124: if (Load.Count == 1) {
  5854  0144  1683               	bsf	3,5	;RP0=1, select bank1
  5855  0145  1303               	bcf	3,6	;RP1=0, select bank1
  5856  0146  0863               	movf	(_Load^(0+128)+25),w
  5857  0147  3A01               	xorlw	1
  5858  0148  1D03               	skipz
  5859  0149  294C               	goto	l4970
  5860                           
  5861                           ;OverLoad_B1.c: 126: Load.JudgeValue = (int)(20*1.7);
  5862  014A  3022               	movlw	34
  5863  014B  2959               	goto	L14
  5864  014C                     l4970:	
  5865                           ;OverLoad_B1.c: 127: } else if (Load.Count == 2) {
  5866                           
  5867  014C  0863               	movf	(_Load^(0+128)+25),w
  5868  014D  3A02               	xorlw	2
  5869  014E  1D03               	skipz
  5870  014F  298B               	goto	l716
  5871                           
  5872                           ;OverLoad_B1.c: 128: if (LightsCount == 1) {
  5873  0150  1283               	bcf	3,5	;RP0=0, select bank0
  5874  0151  1303               	bcf	3,6	;RP1=0, select bank0
  5875  0152  085B               	movf	Load_Main@LightsCount,w
  5876  0153  3A01               	xorlw	1
  5877  0154  1D03               	skipz
  5878  0155  295C               	goto	l4976
  5879                           
  5880                           ;OverLoad_B1.c: 129: Load.JudgeValue = (int)(8*1.7);
  5881  0156  300D               	movlw	13
  5882  0157  1683               	bsf	3,5	;RP0=1, select bank1
  5883  0158  1303               	bcf	3,6	;RP1=0, select bank1
  5884  0159                     L14:	
  5885  0159  00E1               	movwf	(_Load^(0+128)+23)
  5886  015A  3000               	movlw	0
  5887  015B  298A               	goto	L15
  5888  015C                     l4976:	
  5889                           ;OverLoad_B1.c: 130: } else {
  5890                           
  5891                           
  5892                           ;OverLoad_B1.c: 131: if (Load_RunStatus == 0) {
  5893  015C  1283               	bcf	3,5	;RP0=0, select bank0
  5894  015D  08DA               	movf	Load_Main@Load_RunStatus,f
  5895  015E  1D03               	skipz
  5896  015F  297D               	goto	l4980
  5897                           
  5898                           ;OverLoad_B1.c: 132: Load.JudgeValue = (int)(8*1.7) * LightsCount;
  5899  0160  085B               	movf	Load_Main@LightsCount,w
  5900  0161  00D4               	movwf	??_Load_Main
  5901  0162  01D5               	clrf	??_Load_Main+1
  5902  0163  0854               	movf	??_Load_Main,w
  5903  0164  00CD               	movwf	___wmul@multiplier
  5904  0165  0855               	movf	??_Load_Main+1,w
  5905  0166  00CE               	movwf	___wmul@multiplier+1
  5906  0167  300D               	movlw	13
  5907  0168  00CF               	movwf	___wmul@multiplicand
  5908  0169  3000               	movlw	0
  5909  016A  00D0               	movwf	___wmul@multiplicand+1
  5910  016B  158A  2571  118A   	fcall	___wmul
  5911  016E  1283               	bcf	3,5	;RP0=0, select bank0
  5912  016F  1303               	bcf	3,6	;RP1=0, select bank0
  5913  0170  084E               	movf	?___wmul+1,w
  5914  0171  1683               	bsf	3,5	;RP0=1, select bank1
  5915  0172  1303               	bcf	3,6	;RP1=0, select bank1
  5916  0173  01E2               	clrf	((_Load+1)^(0+128)+23)
  5917  0174  07E2               	addwf	((_Load+1)^(0+128)+23),f
  5918  0175  1283               	bcf	3,5	;RP0=0, select bank0
  5919  0176  1303               	bcf	3,6	;RP1=0, select bank0
  5920  0177  084D               	movf	?___wmul,w
  5921  0178  1683               	bsf	3,5	;RP0=1, select bank1
  5922  0179  1303               	bcf	3,6	;RP1=0, select bank1
  5923  017A  01E1               	clrf	(_Load^(0+128)+23)
  5924  017B  07E1               	addwf	(_Load^(0+128)+23),f
  5925                           
  5926                           ;OverLoad_B1.c: 133: } else if (Load_RunStatus == 1) {
  5927  017C  298B               	goto	l716
  5928  017D                     l4980:	
  5929  017D  1283               	bcf	3,5	;RP0=0, select bank0
  5930  017E  085A               	movf	Load_Main@Load_RunStatus,w
  5931  017F  3A01               	xorlw	1
  5932  0180  1D03               	skipz
  5933  0181  298B               	goto	l716
  5934                           
  5935                           ;OverLoad_B1.c: 134: Load.JudgeValue = (int)(8*1.7) + Load.TotalLoad;
  5936  0182  1683               	bsf	3,5	;RP0=1, select bank1
  5937  0183  1303               	bcf	3,6	;RP1=0, select bank1
  5938  0184  0853               	movf	(_Load^(0+128)+9),w
  5939  0185  3E0D               	addlw	13
  5940  0186  00E1               	movwf	(_Load^(0+128)+23)
  5941  0187  3000               	movlw	0
  5942  0188  1803               	skipnc
  5943  0189  3001               	movlw	1
  5944  018A                     L15:	
  5945  018A  00E2               	movwf	(_Load^(0+128)+24)
  5946  018B                     l716:	
  5947                           
  5948                           ;OverLoad_B1.c: 135: }
  5949                           ;OverLoad_B1.c: 136: }
  5950                           ;OverLoad_B1.c: 137: }
  5951                           ;OverLoad_B1.c: 138: }
  5952                           ;OverLoad_B1.c: 139: }
  5953                           ;OverLoad_B1.c: 141: if (Load.AD >= Load.JudgeValue) {
  5954  018B  1683               	bsf	3,5	;RP0=1, select bank1
  5955  018C  1303               	bcf	3,6	;RP1=0, select bank1
  5956  018D  085E               	movf	(_Load^(0+128)+20),w
  5957  018E  1283               	bcf	3,5	;RP0=0, select bank0
  5958  018F  1303               	bcf	3,6	;RP1=0, select bank0
  5959  0190  00D4               	movwf	??_Load_Main
  5960  0191  01D5               	clrf	??_Load_Main+1
  5961  0192  1683               	bsf	3,5	;RP0=1, select bank1
  5962  0193  1303               	bcf	3,6	;RP1=0, select bank1
  5963  0194  0862               	movf	((_Load+1)^(0+128)+23),w
  5964  0195  1283               	bcf	3,5	;RP0=0, select bank0
  5965  0196  1303               	bcf	3,6	;RP1=0, select bank0
  5966  0197  0255               	subwf	??_Load_Main+1,w
  5967  0198  1D03               	skipz
  5968  0199  29A0               	goto	u6215
  5969  019A  1683               	bsf	3,5	;RP0=1, select bank1
  5970  019B  1303               	bcf	3,6	;RP1=0, select bank1
  5971  019C  0861               	movf	(_Load^(0+128)+23),w
  5972  019D  1283               	bcf	3,5	;RP0=0, select bank0
  5973  019E  1303               	bcf	3,6	;RP1=0, select bank0
  5974  019F  0254               	subwf	??_Load_Main,w
  5975  01A0                     u6215:	
  5976  01A0  1C03               	skipc
  5977  01A1  29C1               	goto	l4998
  5978                           
  5979                           ;OverLoad_B1.c: 142: ErrorCountValue = LightsCount == 1 ? 2 : 3;
  5980  01A2  085B               	movf	Load_Main@LightsCount,w
  5981  01A3  3A01               	xorlw	1
  5982  01A4  1903               	skipnz
  5983  01A5  29A8               	goto	l4988
  5984  01A6  3003               	movlw	3
  5985  01A7  29A9               	goto	L16
  5986  01A8                     l4988:	
  5987  01A8  3002               	movlw	2
  5988  01A9                     L16:	
  5989  01A9  00D7               	movwf	_Load_Main$2389
  5990  01AA  3000               	movlw	0
  5991  01AB  00D8               	movwf	_Load_Main$2389+1
  5992  01AC  0857               	movf	_Load_Main$2389,w
  5993  01AD  00D4               	movwf	??_Load_Main
  5994  01AE  0854               	movf	??_Load_Main,w
  5995  01AF  00D9               	movwf	Load_Main@ErrorCountValue
  5996                           
  5997                           ;OverLoad_B1.c: 143: Load.ErrorCount++;
  5998  01B0  3001               	movlw	1
  5999  01B1  00D4               	movwf	??_Load_Main
  6000  01B2  0854               	movf	??_Load_Main,w
  6001  01B3  1683               	bsf	3,5	;RP0=1, select bank1
  6002  01B4  1303               	bcf	3,6	;RP1=0, select bank1
  6003  01B5  07E4               	addwf	(_Load^(0+128)+26),f
  6004                           
  6005                           ;OverLoad_B1.c: 144: if (Load.ErrorCount > ErrorCountValue) {
  6006  01B6  0864               	movf	(_Load^(0+128)+26),w
  6007  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  6008  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  6009  01B9  0259               	subwf	Load_Main@ErrorCountValue,w
  6010  01BA  1803               	skipnc
  6011  01BB  0008               	return
  6012                           
  6013                           ;OverLoad_B1.c: 145: Load.ErrorCount = 0;
  6014  01BC  1683               	bsf	3,5	;RP0=1, select bank1
  6015  01BD  1303               	bcf	3,6	;RP1=0, select bank1
  6016  01BE  01E4               	clrf	(_Load^(0+128)+26)
  6017                           
  6018                           ;OverLoad_B1.c: 146: Load.ERROR = 1;
  6019  01BF  16CA               	bsf	_Load^(0+128),5
  6020                           
  6021                           ;OverLoad_B1.c: 168: }
  6022                           ;OverLoad_B1.c: 169: } else {
  6023  01C0  0008               	return
  6024  01C1                     l4998:	
  6025                           
  6026                           ;OverLoad_B1.c: 170: Load.ErrorCount = 0;
  6027  01C1  1683               	bsf	3,5	;RP0=1, select bank1
  6028  01C2  1303               	bcf	3,6	;RP1=0, select bank1
  6029  01C3  01E4               	clrf	(_Load^(0+128)+26)
  6030                           
  6031                           ;OverLoad_B1.c: 171: if (Load.Run == 1) {
  6032  01C4  1DCA               	btfss	_Load^(0+128),3
  6033  01C5  0008               	return
  6034                           
  6035                           ;OverLoad_B1.c: 172: Load.SafeCount++;
  6036  01C6  3001               	movlw	1
  6037  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  6038  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  6039  01C9  00D4               	movwf	??_Load_Main
  6040  01CA  0854               	movf	??_Load_Main,w
  6041  01CB  1683               	bsf	3,5	;RP0=1, select bank1
  6042  01CC  1303               	bcf	3,6	;RP1=0, select bank1
  6043  01CD  07E5               	addwf	(_Load^(0+128)+27),f
  6044                           
  6045                           ;OverLoad_B1.c: 173: if (Load.SafeCount >= 3) {
  6046  01CE  3003               	movlw	3
  6047  01CF  0265               	subwf	(_Load^(0+128)+27),w
  6048  01D0  1C03               	skipc
  6049  01D1  0008               	return
  6050                           
  6051                           ;OverLoad_B1.c: 174: Load.SafeCount = 0;
  6052  01D2  01E5               	clrf	(_Load^(0+128)+27)
  6053                           
  6054                           ;OverLoad_B1.c: 175: Load.OK = 1;
  6055  01D3  17CA               	bsf	_Load^(0+128),7
  6056                           
  6057                           ;OverLoad_B1.c: 176: Load.Run = 0;
  6058  01D4  11CA               	bcf	_Load^(0+128),3
  6059                           
  6060                           ;OverLoad_B1.c: 177: Load.Count = 0;
  6061  01D5  01E3               	clrf	(_Load^(0+128)+25)
  6062                           
  6063                           ;OverLoad_B1.c: 178: Load.TotalLoad = Load.AD;
  6064  01D6  085E               	movf	(_Load^(0+128)+20),w
  6065  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  6066  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  6067  01D9  00D4               	movwf	??_Load_Main
  6068  01DA  0854               	movf	??_Load_Main,w
  6069  01DB  1683               	bsf	3,5	;RP0=1, select bank1
  6070  01DC  1303               	bcf	3,6	;RP1=0, select bank1
  6071  01DD  00D3               	movwf	(_Load^(0+128)+9)
  6072                           
  6073                           ;OverLoad_B1.c: 182: }
  6074                           ;OverLoad_B1.c: 183: }
  6075                           ;OverLoad_B1.c: 206: }
  6076                           ;OverLoad_B1.c: 207: }
  6077                           ;OverLoad_B1.c: 208: }
  6078                           ;OverLoad_B1.c: 209: } else {
  6079  01DE  0008               	return
  6080  01DF                     l711:	
  6081                           
  6082                           ;OverLoad_B1.c: 210: Load.ADtoGO = 1;
  6083  01DF  164A               	bsf	_Load^(0+128),4
  6084                           
  6085                           ;OverLoad_B1.c: 211: }
  6086                           ;OverLoad_B1.c: 212: } else {
  6087  01E0  0008               	return
  6088  01E1                     l710:	
  6089                           
  6090                           ;OverLoad_B1.c: 214: if (Load.LightsON == 1) {
  6091  01E1  1D4A               	btfss	_Load^(0+128),2
  6092  01E2  29F5               	goto	l5034
  6093                           
  6094                           ;OverLoad_B1.c: 215: Load.LightsON = 0;
  6095  01E3  114A               	bcf	_Load^(0+128),2
  6096                           
  6097                           ;OverLoad_B1.c: 217: Load.ADtoGO = 0;
  6098  01E4  124A               	bcf	_Load^(0+128),4
  6099                           
  6100                           ;OverLoad_B1.c: 218: Load.Time = 0;
  6101  01E5  01CB               	clrf	(_Load^(0+128)+1)
  6102  01E6  01CC               	clrf	((_Load+1)^(0+128)+1)
  6103                           
  6104                           ;OverLoad_B1.c: 219: setLoad_AH_AL_Restore();
  6105  01E7  158A  2423  118A   	fcall	_setLoad_AH_AL_Restore
  6106                           
  6107                           ;OverLoad_B1.c: 221: Load.ErrorCount = 0;
  6108  01EA  1683               	bsf	3,5	;RP0=1, select bank1
  6109  01EB  1303               	bcf	3,6	;RP1=0, select bank1
  6110  01EC  01E4               	clrf	(_Load^(0+128)+26)
  6111                           
  6112                           ;OverLoad_B1.c: 222: Load.SafeCount = 0;
  6113  01ED  01E5               	clrf	(_Load^(0+128)+27)
  6114                           
  6115                           ;OverLoad_B1.c: 224: Load.ADH = 0;
  6116  01EE  01CF               	clrf	(_Load^(0+128)+5)
  6117  01EF  01D0               	clrf	((_Load+1)^(0+128)+5)
  6118                           
  6119                           ;OverLoad_B1.c: 225: Load.ADL = 0;
  6120  01F0  01D1               	clrf	(_Load^(0+128)+7)
  6121  01F1  01D2               	clrf	((_Load+1)^(0+128)+7)
  6122                           
  6123                           ;OverLoad_B1.c: 231: Load.Run = 0;
  6124  01F2  11CA               	bcf	_Load^(0+128),3
  6125                           
  6126                           ;OverLoad_B1.c: 232: Load.Count = 0;
  6127  01F3  01E3               	clrf	(_Load^(0+128)+25)
  6128                           
  6129                           ;OverLoad_B1.c: 233: Load.OK = 0;
  6130  01F4  13CA               	bcf	_Load^(0+128),7
  6131  01F5                     l5034:	
  6132                           
  6133                           ;OverLoad_B1.c: 255: }
  6134                           ;OverLoad_B1.c: 256: if (Load.ERROR == 1) {
  6135  01F5  1ECA               	btfss	_Load^(0+128),5
  6136  01F6  0008               	return
  6137                           
  6138                           ;OverLoad_B1.c: 257: Load.ErrorTime++;
  6139  01F7  3001               	movlw	1
  6140  01F8  07CD               	addwf	(_Load^(0+128)+3),f
  6141  01F9  1803               	skipnc
  6142  01FA  0ACE               	incf	((_Load+1)^(0+128)+3),f
  6143  01FB  3000               	movlw	0
  6144  01FC  07CE               	addwf	((_Load+1)^(0+128)+3),f
  6145                           
  6146                           ;OverLoad_B1.c: 258: if (Load.ErrorTime >= (10000 / 20)) {
  6147  01FD  3001               	movlw	1
  6148  01FE  024E               	subwf	((_Load+1)^(0+128)+3),w
  6149  01FF  30F4               	movlw	244
  6150  0200  1903               	skipnz
  6151  0201  024D               	subwf	(_Load^(0+128)+3),w
  6152  0202  1C03               	skipc
  6153  0203  0008               	return
  6154                           
  6155                           ;OverLoad_B1.c: 259: Load.ErrorTime = 0;
  6156  0204  01CD               	clrf	(_Load^(0+128)+3)
  6157  0205  01CE               	clrf	((_Load+1)^(0+128)+3)
  6158                           
  6159                           ;OverLoad_B1.c: 260: Load.ERROR = 0;
  6160  0206  12CA               	bcf	_Load^(0+128),5
  6161                           
  6162                           ;OverLoad_B1.c: 261: }
  6163                           ;OverLoad_B1.c: 262: }
  6164                           ;OverLoad_B1.c: 263: }
  6165                           ;OverLoad_B1.c: 264: } else {
  6166  0207  0008               	return
  6167  0208                     l700:	
  6168                           
  6169                           ;OverLoad_B1.c: 265: if (myMain.PowerON == 1) {
  6170  0208  1283               	bcf	3,5	;RP0=0, select bank0
  6171  0209  1303               	bcf	3,6	;RP1=0, select bank0
  6172  020A  1C25               	btfss	_myMain,0
  6173  020B  0008               	return
  6174                           
  6175                           ;OverLoad_B1.c: 266: Load.Enable = 1;
  6176  020C  1683               	bsf	3,5	;RP0=1, select bank1
  6177  020D  1303               	bcf	3,6	;RP1=0, select bank1
  6178  020E  144A               	bsf	_Load^(0+128),0
  6179  020F  0008               	return
  6180  0210                     __end_of_Load_Main:	
  6181                           
  6182                           	psect	text30
  6183  0B57                     __ptext30:	
  6184 ;; *************** function _getMain_Lights_Count *****************
  6185 ;; Defined at:
  6186 ;;		line 459 in file "../src/Main_B1.c"
  6187 ;; Parameters:    Size  Location     Type
  6188 ;;		None
  6189 ;; Auto vars:     Size  Location     Type
  6190 ;;  status1         1    5[COMMON] unsigned char 
  6191 ;;  count           1    4[COMMON] unsigned char 
  6192 ;; Return value:  Size  Location     Type
  6193 ;;                  1    wreg      unsigned char 
  6194 ;; Registers used:
  6195 ;;		wreg, status,2
  6196 ;; Tracked objects:
  6197 ;;		On entry : 0/0
  6198 ;;		On exit  : 0/0
  6199 ;;		Unchanged: 0/0
  6200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6201 ;;      Params:         0       0       0       0
  6202 ;;      Locals:         2       0       0       0
  6203 ;;      Temps:          0       0       0       0
  6204 ;;      Totals:         2       0       0       0
  6205 ;;Total ram usage:        2 bytes
  6206 ;; Hardware stack levels used:    1
  6207 ;; Hardware stack levels required when called:    2
  6208 ;; This function calls:
  6209 ;;		Nothing
  6210 ;; This function is called by:
  6211 ;;		_Load_Main
  6212 ;; This function uses a non-reentrant model
  6213 ;;
  6214                           
  6215                           
  6216                           ;psect for function _getMain_Lights_Count
  6217  0B57                     _getMain_Lights_Count:	
  6218                           
  6219                           ;Main_B1.c: 460: char count = 0;
  6220                           
  6221                           ;incstack = 0
  6222                           ; Regs used in _getMain_Lights_Count: [wreg+status,2]
  6223  0B57  01F4               	clrf	getMain_Lights_Count@count
  6224                           
  6225                           ;Main_B1.c: 476: char status1 = Lights1.Status == 1 ? 1 : 0;
  6226  0B58  3000               	movlw	0
  6227  0B59  1283               	bcf	3,5	;RP0=0, select bank0
  6228  0B5A  1303               	bcf	3,6	;RP1=0, select bank0
  6229  0B5B  1940               	btfsc	_Lights1,2
  6230  0B5C  3001               	movlw	1
  6231  0B5D  00F5               	movwf	getMain_Lights_Count@status1
  6232                           
  6233                           ;Main_B1.c: 487: return count = status1;
  6234  0B5E  0875               	movf	getMain_Lights_Count@status1,w
  6235  0B5F  00F4               	movwf	getMain_Lights_Count@count
  6236  0B60  0008               	return
  6237  0B61                     __end_of_getMain_Lights_Count:	
  6238                           
  6239                           	psect	text31
  6240  0B01                     __ptext31:	
  6241 ;; *************** function _getLight_Load_Status *****************
  6242 ;; Defined at:
  6243 ;;		line 405 in file "../src/TriacRelay_B1.c"
  6244 ;; Parameters:    Size  Location     Type
  6245 ;;		None
  6246 ;; Auto vars:     Size  Location     Type
  6247 ;;  loadstatus      1    4[COMMON] unsigned char 
  6248 ;; Return value:  Size  Location     Type
  6249 ;;                  1    wreg      unsigned char 
  6250 ;; Registers used:
  6251 ;;		wreg, status,2
  6252 ;; Tracked objects:
  6253 ;;		On entry : 0/0
  6254 ;;		On exit  : 0/0
  6255 ;;		Unchanged: 0/0
  6256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6257 ;;      Params:         0       0       0       0
  6258 ;;      Locals:         1       0       0       0
  6259 ;;      Temps:          0       0       0       0
  6260 ;;      Totals:         1       0       0       0
  6261 ;;Total ram usage:        1 bytes
  6262 ;; Hardware stack levels used:    1
  6263 ;; Hardware stack levels required when called:    2
  6264 ;; This function calls:
  6265 ;;		Nothing
  6266 ;; This function is called by:
  6267 ;;		_Load_Main
  6268 ;; This function uses a non-reentrant model
  6269 ;;
  6270                           
  6271                           
  6272                           ;psect for function _getLight_Load_Status
  6273  0B01                     _getLight_Load_Status:	
  6274                           
  6275                           ;TriacRelay_B1.c: 406: char loadstatus = Light.Load_Status == 1 ? 1 : 0;
  6276                           
  6277                           ;incstack = 0
  6278                           ; Regs used in _getLight_Load_Status: [wreg+status,2]
  6279  0B01  3000               	movlw	0
  6280  0B02  18F7               	btfsc	_Light,1
  6281  0B03  3001               	movlw	1
  6282  0B04  00F4               	movwf	getLight_Load_Status@loadstatus
  6283                           
  6284                           ;TriacRelay_B1.c: 407: return loadstatus;
  6285  0B05  0874               	movf	getLight_Load_Status@loadstatus,w
  6286  0B06  0008               	return
  6287  0B07                     __end_of_getLight_Load_Status:	
  6288                           
  6289                           	psect	text32
  6290  0AFB                     __ptext32:	
  6291 ;; *************** function _getLight_LoadGO *****************
  6292 ;; Defined at:
  6293 ;;		line 400 in file "../src/TriacRelay_B1.c"
  6294 ;; Parameters:    Size  Location     Type
  6295 ;;		None
  6296 ;; Auto vars:     Size  Location     Type
  6297 ;;  loadgo          1    4[COMMON] unsigned char 
  6298 ;; Return value:  Size  Location     Type
  6299 ;;                  1    wreg      unsigned char 
  6300 ;; Registers used:
  6301 ;;		wreg, status,2
  6302 ;; Tracked objects:
  6303 ;;		On entry : 0/0
  6304 ;;		On exit  : 0/0
  6305 ;;		Unchanged: 0/0
  6306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6307 ;;      Params:         0       0       0       0
  6308 ;;      Locals:         1       0       0       0
  6309 ;;      Temps:          0       0       0       0
  6310 ;;      Totals:         1       0       0       0
  6311 ;;Total ram usage:        1 bytes
  6312 ;; Hardware stack levels used:    1
  6313 ;; Hardware stack levels required when called:    2
  6314 ;; This function calls:
  6315 ;;		Nothing
  6316 ;; This function is called by:
  6317 ;;		_Load_Main
  6318 ;; This function uses a non-reentrant model
  6319 ;;
  6320                           
  6321                           
  6322                           ;psect for function _getLight_LoadGO
  6323  0AFB                     _getLight_LoadGO:	
  6324                           
  6325                           ;TriacRelay_B1.c: 401: char loadgo = Light.LoadGO == 1 ? 1 : 0;
  6326                           
  6327                           ;incstack = 0
  6328                           ; Regs used in _getLight_LoadGO: [wreg+status,2]
  6329  0AFB  3000               	movlw	0
  6330  0AFC  1877               	btfsc	_Light,0
  6331  0AFD  3001               	movlw	1
  6332  0AFE  00F4               	movwf	getLight_LoadGO@loadgo
  6333                           
  6334                           ;TriacRelay_B1.c: 402: return loadgo;
  6335  0AFF  0874               	movf	getLight_LoadGO@loadgo,w
  6336  0B00  0008               	return
  6337  0B01                     __end_of_getLight_LoadGO:	
  6338                           
  6339                           	psect	text33
  6340  0D71                     __ptext33:	
  6341 ;; *************** function ___wmul *****************
  6342 ;; Defined at:
  6343 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul16.c"
  6344 ;; Parameters:    Size  Location     Type
  6345 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6346 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6347 ;; Auto vars:     Size  Location     Type
  6348 ;;  product         2    4[COMMON] unsigned int 
  6349 ;; Return value:  Size  Location     Type
  6350 ;;                  2    0[BANK0 ] unsigned int 
  6351 ;; Registers used:
  6352 ;;		wreg, status,2, status,0
  6353 ;; Tracked objects:
  6354 ;;		On entry : 0/0
  6355 ;;		On exit  : 0/0
  6356 ;;		Unchanged: 0/0
  6357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6358 ;;      Params:         0       4       0       0
  6359 ;;      Locals:         2       0       0       0
  6360 ;;      Temps:          0       0       0       0
  6361 ;;      Totals:         2       4       0       0
  6362 ;;Total ram usage:        6 bytes
  6363 ;; Hardware stack levels used:    1
  6364 ;; Hardware stack levels required when called:    2
  6365 ;; This function calls:
  6366 ;;		Nothing
  6367 ;; This function is called by:
  6368 ;;		_Load_Main
  6369 ;; This function uses a non-reentrant model
  6370 ;;
  6371                           
  6372                           
  6373                           ;psect for function ___wmul
  6374  0D71                     ___wmul:	
  6375                           
  6376                           ;incstack = 0
  6377                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6378  0D71  01F4               	clrf	___wmul@product
  6379  0D72  01F5               	clrf	___wmul@product+1
  6380  0D73                     l4684:	
  6381  0D73  1283               	bcf	3,5	;RP0=0, select bank0
  6382  0D74  1303               	bcf	3,6	;RP1=0, select bank0
  6383  0D75  1C4D               	btfss	___wmul@multiplier,0
  6384  0D76  2D7D               	goto	l1379
  6385  0D77  084F               	movf	___wmul@multiplicand,w
  6386  0D78  07F4               	addwf	___wmul@product,f
  6387  0D79  1803               	skipnc
  6388  0D7A  0AF5               	incf	___wmul@product+1,f
  6389  0D7B  0850               	movf	___wmul@multiplicand+1,w
  6390  0D7C  07F5               	addwf	___wmul@product+1,f
  6391  0D7D                     l1379:	
  6392  0D7D  3001               	movlw	1
  6393  0D7E                     u5555:	
  6394  0D7E  1003               	clrc
  6395  0D7F  0DCF               	rlf	___wmul@multiplicand,f
  6396  0D80  0DD0               	rlf	___wmul@multiplicand+1,f
  6397  0D81  3EFF               	addlw	-1
  6398  0D82  1D03               	skipz
  6399  0D83  2D7E               	goto	u5555
  6400  0D84  3001               	movlw	1
  6401  0D85                     u5565:	
  6402  0D85  1003               	clrc
  6403  0D86  0CCE               	rrf	___wmul@multiplier+1,f
  6404  0D87  0CCD               	rrf	___wmul@multiplier,f
  6405  0D88  3EFF               	addlw	-1
  6406  0D89  1D03               	skipz
  6407  0D8A  2D85               	goto	u5565
  6408  0D8B  084E               	movf	___wmul@multiplier+1,w
  6409  0D8C  044D               	iorwf	___wmul@multiplier,w
  6410  0D8D  1D03               	skipz
  6411  0D8E  2D73               	goto	l4684
  6412  0D8F  0875               	movf	___wmul@product+1,w
  6413  0D90  01CE               	clrf	?___wmul+1
  6414  0D91  07CE               	addwf	?___wmul+1,f
  6415  0D92  0874               	movf	___wmul@product,w
  6416  0D93  01CD               	clrf	?___wmul
  6417  0D94  07CD               	addwf	?___wmul,f
  6418  0D95  0008               	return
  6419  0D96                     __end_of___wmul:	
  6420                           
  6421                           	psect	text34
  6422  07BF                     __ptext34:	
  6423 ;; *************** function ___lwdiv *****************
  6424 ;; Defined at:
  6425 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  6426 ;; Parameters:    Size  Location     Type
  6427 ;;  divisor         2    0[BANK0 ] unsigned int 
  6428 ;;  dividend        2    2[BANK0 ] unsigned int 
  6429 ;; Auto vars:     Size  Location     Type
  6430 ;;  quotient        2    5[BANK0 ] unsigned int 
  6431 ;;  counter         1    4[BANK0 ] unsigned char 
  6432 ;; Return value:  Size  Location     Type
  6433 ;;                  2    0[BANK0 ] unsigned int 
  6434 ;; Registers used:
  6435 ;;		wreg, status,2, status,0
  6436 ;; Tracked objects:
  6437 ;;		On entry : 0/0
  6438 ;;		On exit  : 0/0
  6439 ;;		Unchanged: 0/0
  6440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6441 ;;      Params:         0       4       0       0
  6442 ;;      Locals:         0       3       0       0
  6443 ;;      Temps:          1       0       0       0
  6444 ;;      Totals:         1       7       0       0
  6445 ;;Total ram usage:        8 bytes
  6446 ;; Hardware stack levels used:    1
  6447 ;; Hardware stack levels required when called:    2
  6448 ;; This function calls:
  6449 ;;		Nothing
  6450 ;; This function is called by:
  6451 ;;		_Load_Main
  6452 ;;		_getPIR_AD
  6453 ;; This function uses a non-reentrant model
  6454 ;;
  6455                           
  6456                           
  6457                           ;psect for function ___lwdiv
  6458  07BF                     ___lwdiv:	
  6459                           
  6460                           ;incstack = 0
  6461                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6462  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  6463  07C0  1303               	bcf	3,6	;RP1=0, select bank0
  6464  07C1  01D2               	clrf	___lwdiv@quotient
  6465  07C2  01D3               	clrf	___lwdiv@quotient+1
  6466  07C3  084E               	movf	___lwdiv@divisor+1,w
  6467  07C4  044D               	iorwf	___lwdiv@divisor,w
  6468  07C5  1903               	skipnz
  6469  07C6  2FF8               	goto	l4716
  6470  07C7  01D1               	clrf	___lwdiv@counter
  6471  07C8  0AD1               	incf	___lwdiv@counter,f
  6472  07C9                     l4704:	
  6473  07C9  1BCE               	btfsc	___lwdiv@divisor+1,7
  6474  07CA  2FD7               	goto	l4706
  6475  07CB  3001               	movlw	1
  6476  07CC                     u5595:	
  6477  07CC  1003               	clrc
  6478  07CD  0DCD               	rlf	___lwdiv@divisor,f
  6479  07CE  0DCE               	rlf	___lwdiv@divisor+1,f
  6480  07CF  3EFF               	addlw	-1
  6481  07D0  1D03               	skipz
  6482  07D1  2FCC               	goto	u5595
  6483  07D2  3001               	movlw	1
  6484  07D3  00F4               	movwf	??___lwdiv
  6485  07D4  0874               	movf	??___lwdiv,w
  6486  07D5  07D1               	addwf	___lwdiv@counter,f
  6487  07D6  2FC9               	goto	l4704
  6488  07D7                     l4706:	
  6489  07D7  3001               	movlw	1
  6490  07D8                     u5615:	
  6491  07D8  1003               	clrc
  6492  07D9  0DD2               	rlf	___lwdiv@quotient,f
  6493  07DA  0DD3               	rlf	___lwdiv@quotient+1,f
  6494  07DB  3EFF               	addlw	-1
  6495  07DC  1D03               	skipz
  6496  07DD  2FD8               	goto	u5615
  6497  07DE  084E               	movf	___lwdiv@divisor+1,w
  6498  07DF  0250               	subwf	___lwdiv@dividend+1,w
  6499  07E0  1D03               	skipz
  6500  07E1  2FE4               	goto	u5625
  6501  07E2  084D               	movf	___lwdiv@divisor,w
  6502  07E3  024F               	subwf	___lwdiv@dividend,w
  6503  07E4                     u5625:	
  6504  07E4  1C03               	skipc
  6505  07E5  2FED               	goto	l4712
  6506  07E6  084D               	movf	___lwdiv@divisor,w
  6507  07E7  02CF               	subwf	___lwdiv@dividend,f
  6508  07E8  084E               	movf	___lwdiv@divisor+1,w
  6509  07E9  1C03               	skipc
  6510  07EA  03D0               	decf	___lwdiv@dividend+1,f
  6511  07EB  02D0               	subwf	___lwdiv@dividend+1,f
  6512  07EC  1452               	bsf	___lwdiv@quotient,0
  6513  07ED                     l4712:	
  6514  07ED  3001               	movlw	1
  6515  07EE                     u5635:	
  6516  07EE  1003               	clrc
  6517  07EF  0CCE               	rrf	___lwdiv@divisor+1,f
  6518  07F0  0CCD               	rrf	___lwdiv@divisor,f
  6519  07F1  3EFF               	addlw	-1
  6520  07F2  1D03               	skipz
  6521  07F3  2FEE               	goto	u5635
  6522  07F4  3001               	movlw	1
  6523  07F5  02D1               	subwf	___lwdiv@counter,f
  6524  07F6  1D03               	btfss	3,2
  6525  07F7  2FD7               	goto	l4706
  6526  07F8                     l4716:	
  6527  07F8  0853               	movf	___lwdiv@quotient+1,w
  6528  07F9  01CE               	clrf	?___lwdiv+1
  6529  07FA  07CE               	addwf	?___lwdiv+1,f
  6530  07FB  0852               	movf	___lwdiv@quotient,w
  6531  07FC  01CD               	clrf	?___lwdiv
  6532  07FD  07CD               	addwf	?___lwdiv,f
  6533  07FE  0008               	return
  6534  07FF                     __end_of___lwdiv:	
  6535                           
  6536                           	psect	text35
  6537  0ADB                     __ptext35:	
  6538 ;; *************** function _Load_Initialization *****************
  6539 ;; Defined at:
  6540 ;;		line 9 in file "../src/OverLoad_B1.c"
  6541 ;; Parameters:    Size  Location     Type
  6542 ;;		None
  6543 ;; Auto vars:     Size  Location     Type
  6544 ;;		None
  6545 ;; Return value:  Size  Location     Type
  6546 ;;		None               void
  6547 ;; Registers used:
  6548 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6549 ;; Tracked objects:
  6550 ;;		On entry : 0/0
  6551 ;;		On exit  : 0/0
  6552 ;;		Unchanged: 0/0
  6553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6554 ;;      Params:         0       0       0       0
  6555 ;;      Locals:         0       0       0       0
  6556 ;;      Temps:          0       0       0       0
  6557 ;;      Totals:         0       0       0       0
  6558 ;;Total ram usage:        0 bytes
  6559 ;; Hardware stack levels used:    1
  6560 ;; Hardware stack levels required when called:    3
  6561 ;; This function calls:
  6562 ;;		_setLoad_AH_AL_Restore
  6563 ;; This function is called by:
  6564 ;;		_main
  6565 ;; This function uses a non-reentrant model
  6566 ;;
  6567                           
  6568                           
  6569                           ;psect for function _Load_Initialization
  6570  0ADB                     _Load_Initialization:	
  6571                           
  6572                           ;OverLoad_B1.c: 11: setLoad_AH_AL_Restore();
  6573                           
  6574                           ;incstack = 0
  6575                           ; Regs used in _Load_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6576  0ADB  158A  2423         	fcall	_setLoad_AH_AL_Restore
  6577  0ADD  0008               	return
  6578  0ADE                     __end_of_Load_Initialization:	
  6579                           
  6580                           	psect	text36
  6581  0C23                     __ptext36:	
  6582 ;; *************** function _setLoad_AH_AL_Restore *****************
  6583 ;; Defined at:
  6584 ;;		line 292 in file "../src/OverLoad_B1.c"
  6585 ;; Parameters:    Size  Location     Type
  6586 ;;		None
  6587 ;; Auto vars:     Size  Location     Type
  6588 ;;  i               1    5[COMMON] unsigned char 
  6589 ;; Return value:  Size  Location     Type
  6590 ;;		None               void
  6591 ;; Registers used:
  6592 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6593 ;; Tracked objects:
  6594 ;;		On entry : 0/0
  6595 ;;		On exit  : 0/0
  6596 ;;		Unchanged: 0/0
  6597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6598 ;;      Params:         0       0       0       0
  6599 ;;      Locals:         1       0       0       0
  6600 ;;      Temps:          1       0       0       0
  6601 ;;      Totals:         2       0       0       0
  6602 ;;Total ram usage:        2 bytes
  6603 ;; Hardware stack levels used:    1
  6604 ;; Hardware stack levels required when called:    2
  6605 ;; This function calls:
  6606 ;;		Nothing
  6607 ;; This function is called by:
  6608 ;;		_Load_Initialization
  6609 ;;		_Load_Main
  6610 ;; This function uses a non-reentrant model
  6611 ;;
  6612                           
  6613                           
  6614                           ;psect for function _setLoad_AH_AL_Restore
  6615  0C23                     _setLoad_AH_AL_Restore:	
  6616                           
  6617                           ;OverLoad_B1.c: 293: char i;
  6618                           ;OverLoad_B1.c: 294: for (i = 0; i < 5; i++) {
  6619                           
  6620                           ;incstack = 0
  6621                           ; Regs used in _setLoad_AH_AL_Restore: [wreg-fsr0h+status,2+status,0]
  6622  0C23  01F5               	clrf	setLoad_AH_AL_Restore@i
  6623  0C24                     L17:	
  6624  0C24  3005               	movlw	5
  6625  0C25  0275               	subwf	setLoad_AH_AL_Restore@i,w
  6626  0C26  1803               	btfsc	3,0
  6627  0C27  0008               	return
  6628                           
  6629                           ;OverLoad_B1.c: 295: Load.AH[i] = 0;
  6630  0C28  0875               	movf	setLoad_AH_AL_Restore@i,w
  6631  0C29  3ED4               	addlw	(_Load+10)& (0+255)
  6632  0C2A  0084               	movwf	4
  6633  0C2B  1383               	bcf	3,7	;select IRP bank1
  6634  0C2C  0180               	clrf	0
  6635                           
  6636                           ;OverLoad_B1.c: 296: Load.AL[i] = 0xff;
  6637  0C2D  30FF               	movlw	255
  6638  0C2E  00F4               	movwf	??_setLoad_AH_AL_Restore
  6639  0C2F  0875               	movf	setLoad_AH_AL_Restore@i,w
  6640  0C30  3ED9               	addlw	(_Load+15)& (0+255)
  6641  0C31  0084               	movwf	4
  6642  0C32  0874               	movf	??_setLoad_AH_AL_Restore,w
  6643  0C33  0080               	movwf	0
  6644  0C34  3001               	movlw	1
  6645  0C35  00F4               	movwf	??_setLoad_AH_AL_Restore
  6646  0C36  0874               	movf	??_setLoad_AH_AL_Restore,w
  6647  0C37  07F5               	addwf	setLoad_AH_AL_Restore@i,f
  6648  0C38  2C24               	goto	L17
  6649  0C39                     __end_of_setLoad_AH_AL_Restore:	
  6650                           
  6651                           	psect	text37
  6652  0CED                     __ptext37:	
  6653 ;; *************** function _Lights_Main *****************
  6654 ;; Defined at:
  6655 ;;		line 52 in file "../src/TriacRelay_B1.c"
  6656 ;; Parameters:    Size  Location     Type
  6657 ;;		None
  6658 ;; Auto vars:     Size  Location     Type
  6659 ;;		None
  6660 ;; Return value:  Size  Location     Type
  6661 ;;		None               void
  6662 ;; Registers used:
  6663 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6664 ;; Tracked objects:
  6665 ;;		On entry : 0/0
  6666 ;;		On exit  : 0/0
  6667 ;;		Unchanged: 0/0
  6668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6669 ;;      Params:         0       0       0       0
  6670 ;;      Locals:         0       0       0       0
  6671 ;;      Temps:          0       0       0       0
  6672 ;;      Totals:         0       0       0       0
  6673 ;;Total ram usage:        0 bytes
  6674 ;; Hardware stack levels used:    1
  6675 ;; Hardware stack levels required when called:    6
  6676 ;; This function calls:
  6677 ;;		_Lights_Control
  6678 ;;		_getLoad_OK
  6679 ;;		_getMain_All_Error_Status
  6680 ;;		_getMain_All_LightsStatus
  6681 ;;		_setLights_Main
  6682 ;; This function is called by:
  6683 ;;		_main
  6684 ;; This function uses a non-reentrant model
  6685 ;;
  6686                           
  6687                           
  6688                           ;psect for function _Lights_Main
  6689  0CED                     _Lights_Main:	
  6690                           
  6691                           ;TriacRelay_B1.c: 65: if (Light.LoadGO == 1) {
  6692                           
  6693                           ;incstack = 0
  6694                           ; Regs used in _Lights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6695  0CED  1C77               	btfss	_Light,0
  6696  0CEE  2D03               	goto	l5052
  6697                           
  6698                           ;TriacRelay_B1.c: 66: if (getLoad_OK() == 1 || getMain_All_Error_Status(0) != 0 || getMa
      +                          in_All_LightsStatus() == 0) {
  6699  0CEF  158A  2323  158A   	fcall	_getLoad_OK
  6700  0CF2  3A01               	xorlw	1
  6701  0CF3  1903               	skipnz
  6702  0CF4  2D02               	goto	l1258
  6703  0CF5  3000               	movlw	0
  6704  0CF6  158A  25FA  158A   	fcall	_getMain_All_Error_Status
  6705  0CF9  3800               	iorlw	0
  6706  0CFA  1D03               	skipz
  6707  0CFB  2D02               	goto	l1258
  6708  0CFC  158A  2344  158A   	fcall	_getMain_All_LightsStatus
  6709  0CFF  3800               	iorlw	0
  6710  0D00  1D03               	skipz
  6711  0D01  2D03               	goto	l5052
  6712  0D02                     l1258:	
  6713                           
  6714                           ;TriacRelay_B1.c: 67: Light.LoadGO = 0;
  6715  0D02  1077               	bcf	_Light,0
  6716  0D03                     l5052:	
  6717                           
  6718                           ;TriacRelay_B1.c: 68: }
  6719                           ;TriacRelay_B1.c: 69: }
  6720                           ;TriacRelay_B1.c: 73: setLights_Main(1);
  6721  0D03  3001               	movlw	1
  6722  0D04  158A  2596  158A   	fcall	_setLights_Main
  6723                           
  6724                           ;TriacRelay_B1.c: 74: Lights_Control(1);
  6725  0D07  3001               	movlw	1
  6726  0D08  118A  25D1         	fcall	_Lights_Control
  6727  0D0A  0008               	return
  6728  0D0B                     __end_of_Lights_Main:	
  6729                           
  6730                           	psect	text38
  6731  0D96                     __ptext38:	
  6732 ;; *************** function _setLights_Main *****************
  6733 ;; Defined at:
  6734 ;;		line 91 in file "../src/TriacRelay_B1.c"
  6735 ;; Parameters:    Size  Location     Type
  6736 ;;  lights          1    wreg     unsigned char 
  6737 ;; Auto vars:     Size  Location     Type
  6738 ;;  lights          1    5[BANK0 ] unsigned char 
  6739 ;; Return value:  Size  Location     Type
  6740 ;;		None               void
  6741 ;; Registers used:
  6742 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6743 ;; Tracked objects:
  6744 ;;		On entry : 0/0
  6745 ;;		On exit  : 0/0
  6746 ;;		Unchanged: 0/0
  6747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6748 ;;      Params:         0       0       0       0
  6749 ;;      Locals:         0       1       0       0
  6750 ;;      Temps:          0       0       0       0
  6751 ;;      Totals:         0       1       0       0
  6752 ;;Total ram usage:        1 bytes
  6753 ;; Hardware stack levels used:    1
  6754 ;; Hardware stack levels required when called:    5
  6755 ;; This function calls:
  6756 ;;		_LightsPointSelect
  6757 ;;		_getLights_Allow_Condition
  6758 ;;		_setLights
  6759 ;; This function is called by:
  6760 ;;		_Lights_Main
  6761 ;; This function uses a non-reentrant model
  6762 ;;
  6763                           
  6764                           
  6765                           ;psect for function _setLights_Main
  6766  0D96                     _setLights_Main:	
  6767                           
  6768                           ;incstack = 0
  6769                           ; Regs used in _setLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6770                           ;setLights_Main@lights stored from wreg
  6771  0D96  1283               	bcf	3,5	;RP0=0, select bank0
  6772  0D97  1303               	bcf	3,6	;RP1=0, select bank0
  6773  0D98  00D2               	movwf	setLights_Main@lights
  6774                           
  6775                           ;TriacRelay_B1.c: 92: LightsPointSelect(lights);
  6776  0D99  0852               	movf	setLights_Main@lights,w
  6777  0D9A  158A  234D  158A   	fcall	_LightsPointSelect
  6778                           
  6779                           ;TriacRelay_B1.c: 93: if (Lights->GO == 0) {
  6780  0D9D  0878               	movf	_Lights,w
  6781  0D9E  0084               	movwf	4
  6782  0D9F  1383               	bcf	3,7	;select IRP bank0
  6783  0DA0  1880               	btfsc	0,1
  6784  0DA1  0008               	return
  6785                           
  6786                           ;TriacRelay_B1.c: 94: if (Lights->Trigger == 1) {
  6787  0DA2  0878               	movf	_Lights,w
  6788  0DA3  0084               	movwf	4
  6789  0DA4  1D80               	btfss	0,3
  6790  0DA5  0008               	return
  6791                           
  6792                           ;TriacRelay_B1.c: 95: if (getLights_Allow_Condition(lights) == 0) {
  6793  0DA6  1283               	bcf	3,5	;RP0=0, select bank0
  6794  0DA7  1303               	bcf	3,6	;RP1=0, select bank0
  6795  0DA8  0852               	movf	setLights_Main@lights,w
  6796  0DA9  158A  2439  158A   	fcall	_getLights_Allow_Condition
  6797  0DAC  3800               	iorlw	0
  6798  0DAD  1D03               	skipz
  6799  0DAE  0008               	return
  6800                           
  6801                           ;TriacRelay_B1.c: 96: Lights->Trigger = 0;
  6802  0DAF  0878               	movf	_Lights,w
  6803  0DB0  0084               	movwf	4
  6804  0DB1  1383               	bcf	3,7	;select IRP bank0
  6805  0DB2  1180               	bcf	0,3
  6806                           
  6807                           ;TriacRelay_B1.c: 97: if (Lights->Switch == 1) {
  6808  0DB3  0878               	movf	_Lights,w
  6809  0DB4  0084               	movwf	4
  6810  0DB5  1E00               	btfss	0,4
  6811  0DB6  2DBF               	goto	l4652
  6812                           
  6813                           ;TriacRelay_B1.c: 98: setLights(lights, 1);
  6814  0DB7  1283               	bcf	3,5	;RP0=0, select bank0
  6815  0DB8  1303               	bcf	3,6	;RP1=0, select bank0
  6816  0DB9  01CF               	clrf	setLights@status
  6817  0DBA  0ACF               	incf	setLights@status,f
  6818  0DBB  0852               	movf	setLights_Main@lights,w
  6819  0DBC  118A  2654         	fcall	_setLights
  6820                           
  6821                           ;TriacRelay_B1.c: 99: } else {
  6822  0DBE  0008               	return
  6823  0DBF                     l4652:	
  6824                           
  6825                           ;TriacRelay_B1.c: 100: setLights(lights, 0);
  6826  0DBF  1283               	bcf	3,5	;RP0=0, select bank0
  6827  0DC0  1303               	bcf	3,6	;RP1=0, select bank0
  6828  0DC1  01CF               	clrf	setLights@status
  6829  0DC2  0852               	movf	setLights_Main@lights,w
  6830  0DC3  118A  2654         	fcall	_setLights
  6831  0DC5  0008               	return
  6832  0DC6                     __end_of_setLights_Main:	
  6833                           
  6834                           	psect	text39
  6835  0654                     __ptext39:	
  6836 ;; *************** function _setLights *****************
  6837 ;; Defined at:
  6838 ;;		line 108 in file "../src/TriacRelay_B1.c"
  6839 ;; Parameters:    Size  Location     Type
  6840 ;;  lights          1    wreg     unsigned char 
  6841 ;;  status          1    2[BANK0 ] unsigned char 
  6842 ;; Auto vars:     Size  Location     Type
  6843 ;;  lights          1    4[BANK0 ] unsigned char 
  6844 ;; Return value:  Size  Location     Type
  6845 ;;		None               void
  6846 ;; Registers used:
  6847 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6848 ;; Tracked objects:
  6849 ;;		On entry : 0/0
  6850 ;;		On exit  : 0/0
  6851 ;;		Unchanged: 0/0
  6852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6853 ;;      Params:         0       1       0       0
  6854 ;;      Locals:         0       1       0       0
  6855 ;;      Temps:          0       1       0       0
  6856 ;;      Totals:         0       3       0       0
  6857 ;;Total ram usage:        3 bytes
  6858 ;; Hardware stack levels used:    1
  6859 ;; Hardware stack levels required when called:    4
  6860 ;; This function calls:
  6861 ;;		_setLED
  6862 ;;		_setLights_Line
  6863 ;; This function is called by:
  6864 ;;		_setLights_Main
  6865 ;; This function uses a non-reentrant model
  6866 ;;
  6867                           
  6868                           
  6869                           ;psect for function _setLights
  6870  0654                     _setLights:	
  6871                           
  6872                           ;incstack = 0
  6873                           ; Regs used in _setLights: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6874                           ;setLights@lights stored from wreg
  6875  0654  1283               	bcf	3,5	;RP0=0, select bank0
  6876  0655  1303               	bcf	3,6	;RP1=0, select bank0
  6877  0656  00D1               	movwf	setLights@lights
  6878                           
  6879                           ;TriacRelay_B1.c: 116: if (status == 1) {
  6880  0657  084F               	movf	setLights@status,w
  6881  0658  3A01               	xorlw	1
  6882  0659  1D03               	skipz
  6883  065A  2E97               	goto	l4484
  6884                           
  6885                           ;TriacRelay_B1.c: 118: if (lights == 2) {
  6886  065B  0851               	movf	setLights@lights,w
  6887  065C  3A02               	xorlw	2
  6888  065D  1D03               	skipz
  6889  065E  2E6C               	goto	l4466
  6890                           
  6891                           ;TriacRelay_B1.c: 119: setLED(1, 0);
  6892  065F  01CD               	clrf	setLED@command
  6893  0660  3001               	movlw	1
  6894  0661  158A  2735  118A   	fcall	_setLED
  6895                           
  6896                           ;TriacRelay_B1.c: 120: setLED(2, 1);
  6897  0664  1283               	bcf	3,5	;RP0=0, select bank0
  6898  0665  1303               	bcf	3,6	;RP1=0, select bank0
  6899  0666  01CD               	clrf	setLED@command
  6900  0667  0ACD               	incf	setLED@command,f
  6901  0668  3002               	movlw	2
  6902  0669  158A  2735  118A   	fcall	_setLED
  6903  066C                     l4466:	
  6904                           
  6905                           ;TriacRelay_B1.c: 121: }
  6906                           ;TriacRelay_B1.c: 127: if (Lights->Status == 0) {
  6907  066C  0878               	movf	_Lights,w
  6908  066D  0084               	movwf	4
  6909  066E  1383               	bcf	3,7	;select IRP bank0
  6910  066F  1900               	btfsc	0,2
  6911  0670  2E90               	goto	l4480
  6912                           
  6913                           ;TriacRelay_B1.c: 128: Lights->Status = 1;
  6914  0671  0878               	movf	_Lights,w
  6915  0672  0084               	movwf	4
  6916  0673  1500               	bsf	0,2
  6917                           
  6918                           ;TriacRelay_B1.c: 130: if (lights == 1) {
  6919  0674  1283               	bcf	3,5	;RP0=0, select bank0
  6920  0675  1303               	bcf	3,6	;RP1=0, select bank0
  6921  0676  0851               	movf	setLights@lights,w
  6922  0677  3A01               	xorlw	1
  6923  0678  1D03               	skipz
  6924  0679  2E90               	goto	l4480
  6925                           
  6926                           ;TriacRelay_B1.c: 131: RB2 = 1;
  6927  067A  1506               	bsf	6,2	;volatile
  6928                           
  6929                           ;TriacRelay_B1.c: 132: Lights->RelayValue = 100;
  6930  067B  3064               	movlw	100
  6931  067C  00D0               	movwf	??_setLights
  6932  067D  0878               	movf	_Lights,w
  6933  067E  3E04               	addlw	4
  6934  067F  0084               	movwf	4
  6935  0680  0850               	movf	??_setLights,w
  6936  0681  0080               	movwf	0
  6937                           
  6938                           ;TriacRelay_B1.c: 133: Lights->TriacValue = 140;
  6939  0682  308C               	movlw	140
  6940  0683  00D0               	movwf	??_setLights
  6941  0684  0878               	movf	_Lights,w
  6942  0685  3E03               	addlw	3
  6943  0686  0084               	movwf	4
  6944  0687  0850               	movf	??_setLights,w
  6945  0688  0080               	movwf	0
  6946                           
  6947                           ;TriacRelay_B1.c: 134: Lights->Time = 0;
  6948  0689  0878               	movf	_Lights,w
  6949  068A  3E02               	addlw	2
  6950  068B  0084               	movwf	4
  6951  068C  0180               	clrf	0
  6952                           
  6953                           ;TriacRelay_B1.c: 135: Lights->GO = 1;
  6954  068D  0878               	movf	_Lights,w
  6955  068E  0084               	movwf	4
  6956  068F  1480               	bsf	0,1
  6957  0690                     l4480:	
  6958                           
  6959                           ;TriacRelay_B1.c: 136: }
  6960                           ;TriacRelay_B1.c: 162: }
  6961                           ;TriacRelay_B1.c: 164: Light.Load_Status = 1;
  6962  0690  14F7               	bsf	_Light,1
  6963                           
  6964                           ;TriacRelay_B1.c: 165: setLights_Line(lights);
  6965  0691  1283               	bcf	3,5	;RP0=0, select bank0
  6966  0692  1303               	bcf	3,6	;RP1=0, select bank0
  6967  0693  0851               	movf	setLights@lights,w
  6968  0694  158A  237A         	fcall	_setLights_Line
  6969                           
  6970                           ;TriacRelay_B1.c: 167: } else {
  6971  0696  0008               	return
  6972  0697                     l4484:	
  6973                           
  6974                           ;TriacRelay_B1.c: 170: if (lights == 2) {
  6975  0697  1283               	bcf	3,5	;RP0=0, select bank0
  6976  0698  1303               	bcf	3,6	;RP1=0, select bank0
  6977  0699  0851               	movf	setLights@lights,w
  6978  069A  3A02               	xorlw	2
  6979  069B  1D03               	skipz
  6980  069C  2EAA               	goto	l4488
  6981                           
  6982                           ;TriacRelay_B1.c: 171: setLED(1, 1);
  6983  069D  01CD               	clrf	setLED@command
  6984  069E  0ACD               	incf	setLED@command,f
  6985  069F  3001               	movlw	1
  6986  06A0  158A  2735  118A   	fcall	_setLED
  6987                           
  6988                           ;TriacRelay_B1.c: 172: setLED(2, 0);
  6989  06A3  1283               	bcf	3,5	;RP0=0, select bank0
  6990  06A4  1303               	bcf	3,6	;RP1=0, select bank0
  6991  06A5  01CD               	clrf	setLED@command
  6992  06A6  3002               	movlw	2
  6993  06A7  158A  2735  118A   	fcall	_setLED
  6994  06AA                     l4488:	
  6995                           
  6996                           ;TriacRelay_B1.c: 173: }
  6997                           ;TriacRelay_B1.c: 175: if (Lights->Status == 1) {
  6998  06AA  0878               	movf	_Lights,w
  6999  06AB  0084               	movwf	4
  7000  06AC  1383               	bcf	3,7	;select IRP bank0
  7001  06AD  1D00               	btfss	0,2
  7002  06AE  2ECE               	goto	l4502
  7003                           
  7004                           ;TriacRelay_B1.c: 176: Lights->Status = 0;
  7005  06AF  0878               	movf	_Lights,w
  7006  06B0  0084               	movwf	4
  7007  06B1  1100               	bcf	0,2
  7008                           
  7009                           ;TriacRelay_B1.c: 178: if (lights == 1) {
  7010  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  7011  06B3  1303               	bcf	3,6	;RP1=0, select bank0
  7012  06B4  0851               	movf	setLights@lights,w
  7013  06B5  3A01               	xorlw	1
  7014  06B6  1D03               	skipz
  7015  06B7  2ECE               	goto	l4502
  7016                           
  7017                           ;TriacRelay_B1.c: 179: RB2 = 1;
  7018  06B8  1506               	bsf	6,2	;volatile
  7019                           
  7020                           ;TriacRelay_B1.c: 180: Lights->RelayValue = 40;
  7021  06B9  3028               	movlw	40
  7022  06BA  00D0               	movwf	??_setLights
  7023  06BB  0878               	movf	_Lights,w
  7024  06BC  3E04               	addlw	4
  7025  06BD  0084               	movwf	4
  7026  06BE  0850               	movf	??_setLights,w
  7027  06BF  0080               	movwf	0
  7028                           
  7029                           ;TriacRelay_B1.c: 181: Lights->TriacValue = 80;
  7030  06C0  3050               	movlw	80
  7031  06C1  00D0               	movwf	??_setLights
  7032  06C2  0878               	movf	_Lights,w
  7033  06C3  3E03               	addlw	3
  7034  06C4  0084               	movwf	4
  7035  06C5  0850               	movf	??_setLights,w
  7036  06C6  0080               	movwf	0
  7037                           
  7038                           ;TriacRelay_B1.c: 182: Lights->Time = 0;
  7039  06C7  0878               	movf	_Lights,w
  7040  06C8  3E02               	addlw	2
  7041  06C9  0084               	movwf	4
  7042  06CA  0180               	clrf	0
  7043                           
  7044                           ;TriacRelay_B1.c: 183: Lights->GO = 1;
  7045  06CB  0878               	movf	_Lights,w
  7046  06CC  0084               	movwf	4
  7047  06CD  1480               	bsf	0,1
  7048  06CE                     l4502:	
  7049                           
  7050                           ;TriacRelay_B1.c: 184: }
  7051                           ;TriacRelay_B1.c: 211: }
  7052                           ;TriacRelay_B1.c: 213: Light.Load_Status = 0;
  7053  06CE  10F7               	bcf	_Light,1
  7054                           
  7055                           ;TriacRelay_B1.c: 214: setLights_Line(0);
  7056  06CF  3000               	movlw	0
  7057  06D0  158A  237A         	fcall	_setLights_Line
  7058  06D2  0008               	return
  7059  06D3                     __end_of_setLights:	
  7060                           
  7061                           	psect	text40
  7062  0B7A                     __ptext40:	
  7063 ;; *************** function _setLights_Line *****************
  7064 ;; Defined at:
  7065 ;;		line 285 in file "../src/TriacRelay_B1.c"
  7066 ;; Parameters:    Size  Location     Type
  7067 ;;  lights          1    wreg     unsigned char 
  7068 ;; Auto vars:     Size  Location     Type
  7069 ;;  lights          1    4[COMMON] unsigned char 
  7070 ;; Return value:  Size  Location     Type
  7071 ;;		None               void
  7072 ;; Registers used:
  7073 ;;		wreg
  7074 ;; Tracked objects:
  7075 ;;		On entry : 0/0
  7076 ;;		On exit  : 0/0
  7077 ;;		Unchanged: 0/0
  7078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7079 ;;      Params:         0       0       0       0
  7080 ;;      Locals:         1       0       0       0
  7081 ;;      Temps:          0       0       0       0
  7082 ;;      Totals:         1       0       0       0
  7083 ;;Total ram usage:        1 bytes
  7084 ;; Hardware stack levels used:    1
  7085 ;; Hardware stack levels required when called:    2
  7086 ;; This function calls:
  7087 ;;		Nothing
  7088 ;; This function is called by:
  7089 ;;		_setLights
  7090 ;; This function uses a non-reentrant model
  7091 ;;
  7092                           
  7093                           
  7094                           ;psect for function _setLights_Line
  7095  0B7A                     _setLights_Line:	
  7096                           
  7097                           ;incstack = 0
  7098                           ; Regs used in _setLights_Line: [wreg]
  7099                           ;setLights_Line@lights stored from wreg
  7100  0B7A  00F4               	movwf	setLights_Line@lights
  7101                           
  7102                           ;TriacRelay_B1.c: 286: Light.LoadGO = 1;
  7103  0B7B  1477               	bsf	_Light,0
  7104                           
  7105                           ;TriacRelay_B1.c: 288: Lights1.Line = 0;
  7106  0B7C  1283               	bcf	3,5	;RP0=0, select bank0
  7107  0B7D  1303               	bcf	3,6	;RP1=0, select bank0
  7108  0B7E  1041               	bcf	_Lights1+1,0
  7109                           
  7110                           ;TriacRelay_B1.c: 289: if (lights == 1 && lights != 0) {
  7111  0B7F  0874               	movf	setLights_Line@lights,w
  7112  0B80  3A01               	xorlw	1
  7113  0B81  1D03               	skipz
  7114  0B82  0008               	return
  7115  0B83  0874               	movf	setLights_Line@lights,w
  7116  0B84  1903               	btfsc	3,2
  7117  0B85  0008               	return
  7118                           
  7119                           ;TriacRelay_B1.c: 290: Lights1.Line = 1;
  7120  0B86  1441               	bsf	_Lights1+1,0
  7121  0B87  0008               	return
  7122  0B88                     __end_of_setLights_Line:	
  7123                           
  7124                           	psect	text41
  7125  0C39                     __ptext41:	
  7126 ;; *************** function _getLights_Allow_Condition *****************
  7127 ;; Defined at:
  7128 ;;		line 367 in file "../src/TriacRelay_B1.c"
  7129 ;; Parameters:    Size  Location     Type
  7130 ;;  lights          1    wreg     unsigned char 
  7131 ;; Auto vars:     Size  Location     Type
  7132 ;;  lights          1    0[COMMON] unsigned char 
  7133 ;;  allow           1    0[BANK0 ] unsigned char 
  7134 ;; Return value:  Size  Location     Type
  7135 ;;                  1    wreg      unsigned char 
  7136 ;; Registers used:
  7137 ;;		wreg, status,2, pclath, cstack
  7138 ;; Tracked objects:
  7139 ;;		On entry : 0/0
  7140 ;;		On exit  : 0/0
  7141 ;;		Unchanged: 0/0
  7142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7143 ;;      Params:         0       0       0       0
  7144 ;;      Locals:         0       2       0       0
  7145 ;;      Temps:          1       0       0       0
  7146 ;;      Totals:         1       2       0       0
  7147 ;;Total ram usage:        3 bytes
  7148 ;; Hardware stack levels used:    1
  7149 ;; Hardware stack levels required when called:    3
  7150 ;; This function calls:
  7151 ;;		_getLoad_OK
  7152 ;; This function is called by:
  7153 ;;		_setLights_Main
  7154 ;; This function uses a non-reentrant model
  7155 ;;
  7156                           
  7157                           
  7158                           ;psect for function _getLights_Allow_Condition
  7159  0C39                     _getLights_Allow_Condition:	
  7160                           
  7161                           ;TriacRelay_B1.c: 368: char allow = 0;
  7162                           
  7163                           ;incstack = 0
  7164                           ; Regs used in _getLights_Allow_Condition: [wreg+status,2+pclath+cstack]
  7165  0C39  1283               	bcf	3,5	;RP0=0, select bank0
  7166  0C3A  1303               	bcf	3,6	;RP1=0, select bank0
  7167  0C3B  01CD               	clrf	getLights_Allow_Condition@allow
  7168                           
  7169                           ;TriacRelay_B1.c: 371: allow = getLoad_OK() == 0 && Light.LoadGO == 0 ? 0 : 1;
  7170  0C3C  01CE               	clrf	_getLights_Allow_Condition$4224
  7171  0C3D  0ACE               	incf	_getLights_Allow_Condition$4224,f
  7172  0C3E  158A  2323  158A   	fcall	_getLoad_OK
  7173  0C41  3800               	iorlw	0
  7174  0C42  1903               	btfsc	3,2
  7175  0C43  1877               	btfsc	_Light,0
  7176  0C44  2C48               	goto	l4454
  7177  0C45  1283               	bcf	3,5	;RP0=0, select bank0
  7178  0C46  1303               	bcf	3,6	;RP1=0, select bank0
  7179  0C47  01CE               	clrf	_getLights_Allow_Condition$4224
  7180  0C48                     l4454:	
  7181  0C48  1283               	bcf	3,5	;RP0=0, select bank0
  7182  0C49  1303               	bcf	3,6	;RP1=0, select bank0
  7183  0C4A  084E               	movf	_getLights_Allow_Condition$4224,w
  7184  0C4B  00F5               	movwf	??_getLights_Allow_Condition
  7185  0C4C  0875               	movf	??_getLights_Allow_Condition,w
  7186  0C4D  00CD               	movwf	getLights_Allow_Condition@allow
  7187                           
  7188                           ;TriacRelay_B1.c: 396: return allow;
  7189  0C4E  084D               	movf	getLights_Allow_Condition@allow,w
  7190  0C4F  0008               	return
  7191  0C50                     __end_of_getLights_Allow_Condition:	
  7192                           
  7193                           	psect	text42
  7194  0B23                     __ptext42:	
  7195 ;; *************** function _getLoad_OK *****************
  7196 ;; Defined at:
  7197 ;;		line 272 in file "../src/OverLoad_B1.c"
  7198 ;; Parameters:    Size  Location     Type
  7199 ;;		None
  7200 ;; Auto vars:     Size  Location     Type
  7201 ;;  ok              1    4[COMMON] unsigned char 
  7202 ;; Return value:  Size  Location     Type
  7203 ;;                  1    wreg      unsigned char 
  7204 ;; Registers used:
  7205 ;;		wreg, status,2
  7206 ;; Tracked objects:
  7207 ;;		On entry : 0/0
  7208 ;;		On exit  : 0/0
  7209 ;;		Unchanged: 0/0
  7210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7211 ;;      Params:         0       0       0       0
  7212 ;;      Locals:         1       0       0       0
  7213 ;;      Temps:          0       0       0       0
  7214 ;;      Totals:         1       0       0       0
  7215 ;;Total ram usage:        1 bytes
  7216 ;; Hardware stack levels used:    1
  7217 ;; Hardware stack levels required when called:    2
  7218 ;; This function calls:
  7219 ;;		Nothing
  7220 ;; This function is called by:
  7221 ;;		_Lights_Main
  7222 ;;		_getLights_Allow_Condition
  7223 ;; This function uses a non-reentrant model
  7224 ;;
  7225                           
  7226                           
  7227                           ;psect for function _getLoad_OK
  7228  0B23                     _getLoad_OK:	
  7229                           
  7230                           ;OverLoad_B1.c: 273: char ok = Load.OK == 1 ? 1 : 0;
  7231                           
  7232                           ;incstack = 0
  7233                           ; Regs used in _getLoad_OK: [wreg+status,2]
  7234  0B23  3000               	movlw	0
  7235  0B24  1683               	bsf	3,5	;RP0=1, select bank1
  7236  0B25  1303               	bcf	3,6	;RP1=0, select bank1
  7237  0B26  1BCA               	btfsc	_Load^(0+128),7
  7238  0B27  3001               	movlw	1
  7239  0B28  00F4               	movwf	getLoad_OK@ok
  7240                           
  7241                           ;OverLoad_B1.c: 274: return ok;
  7242  0B29  0874               	movf	getLoad_OK@ok,w
  7243  0B2A  0008               	return
  7244  0B2B                     __end_of_getLoad_OK:	
  7245                           
  7246                           	psect	text43
  7247  05D1                     __ptext43:	
  7248 ;; *************** function _Lights_Control *****************
  7249 ;; Defined at:
  7250 ;;		line 220 in file "../src/TriacRelay_B1.c"
  7251 ;; Parameters:    Size  Location     Type
  7252 ;;  lights          1    wreg     unsigned char 
  7253 ;; Auto vars:     Size  Location     Type
  7254 ;;  lights          1   10[BANK0 ] unsigned char 
  7255 ;; Return value:  Size  Location     Type
  7256 ;;		None               void
  7257 ;; Registers used:
  7258 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7259 ;; Tracked objects:
  7260 ;;		On entry : 0/0
  7261 ;;		On exit  : 0/0
  7262 ;;		Unchanged: 0/0
  7263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7264 ;;      Params:         0       0       0       0
  7265 ;;      Locals:         0       1       0       0
  7266 ;;      Temps:          0       2       0       0
  7267 ;;      Totals:         0       3       0       0
  7268 ;;Total ram usage:        3 bytes
  7269 ;; Hardware stack levels used:    1
  7270 ;; Hardware stack levels required when called:    3
  7271 ;; This function calls:
  7272 ;;		_LightsPointSelect
  7273 ;;		___awdiv
  7274 ;; This function is called by:
  7275 ;;		_Lights_Main
  7276 ;; This function uses a non-reentrant model
  7277 ;;
  7278                           
  7279                           
  7280                           ;psect for function _Lights_Control
  7281  05D1                     _Lights_Control:	
  7282                           
  7283                           ;incstack = 0
  7284                           ; Regs used in _Lights_Control: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7285                           ;Lights_Control@lights stored from wreg
  7286  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  7287  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  7288  05D3  00D7               	movwf	Lights_Control@lights
  7289                           
  7290                           ;TriacRelay_B1.c: 221: LightsPointSelect(lights);
  7291  05D4  0857               	movf	Lights_Control@lights,w
  7292  05D5  158A  234D  118A   	fcall	_LightsPointSelect
  7293                           
  7294                           ;TriacRelay_B1.c: 222: if (Lights->GO == 1) {
  7295  05D8  0878               	movf	_Lights,w
  7296  05D9  0084               	movwf	4
  7297  05DA  1383               	bcf	3,7	;select IRP bank0
  7298  05DB  1C80               	btfss	0,1
  7299  05DC  0008               	return
  7300                           
  7301                           ;TriacRelay_B1.c: 223: Lights->Time++;
  7302  05DD  3001               	movlw	1
  7303  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  7304  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  7305  05E0  00D5               	movwf	??_Lights_Control
  7306  05E1  0878               	movf	_Lights,w
  7307  05E2  3E02               	addlw	2
  7308  05E3  0084               	movwf	4
  7309  05E4  0855               	movf	??_Lights_Control,w
  7310  05E5  0780               	addwf	0,f
  7311                           
  7312                           ;TriacRelay_B1.c: 224: if (Lights->RelaySet == 0) {
  7313  05E6  0878               	movf	_Lights,w
  7314  05E7  0084               	movwf	4
  7315  05E8  1B80               	btfsc	0,7
  7316  05E9  2E20               	goto	l4670
  7317                           
  7318                           ;TriacRelay_B1.c: 225: if (Lights->Time >= (Lights->RelayValue / 20)) {
  7319  05EA  3014               	movlw	20
  7320  05EB  00CD               	movwf	___awdiv@divisor
  7321  05EC  3000               	movlw	0
  7322  05ED  00CE               	movwf	___awdiv@divisor+1
  7323  05EE  0878               	movf	_Lights,w
  7324  05EF  3E04               	addlw	4
  7325  05F0  0084               	movwf	4
  7326  05F1  0800               	movf	0,w
  7327  05F2  00D5               	movwf	??_Lights_Control
  7328  05F3  01D6               	clrf	??_Lights_Control+1
  7329  05F4  0855               	movf	??_Lights_Control,w
  7330  05F5  00CF               	movwf	___awdiv@dividend
  7331  05F6  0856               	movf	??_Lights_Control+1,w
  7332  05F7  00D0               	movwf	___awdiv@dividend+1
  7333  05F8  158A  26D8  118A   	fcall	___awdiv
  7334  05FB  0878               	movf	_Lights,w
  7335  05FC  3E02               	addlw	2
  7336  05FD  0084               	movwf	4
  7337  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  7338  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  7339  0600  084E               	movf	?___awdiv+1,w
  7340  0601  3A80               	xorlw	128
  7341  0602  3C80               	sublw	128
  7342  0603  1D03               	skipz
  7343  0604  2E08               	goto	u5485
  7344  0605  084D               	movf	?___awdiv,w
  7345  0606  1383               	bcf	3,7	;select IRP bank0
  7346  0607  0200               	subwf	0,w
  7347  0608                     u5485:	
  7348  0608  1C03               	skipc
  7349  0609  0008               	return
  7350                           
  7351                           ;TriacRelay_B1.c: 226: Lights->RelaySet = 1;
  7352  060A  0878               	movf	_Lights,w
  7353  060B  0084               	movwf	4
  7354  060C  1383               	bcf	3,7	;select IRP bank0
  7355  060D  1780               	bsf	0,7
  7356                           
  7357                           ;TriacRelay_B1.c: 228: if (lights == 1) {
  7358  060E  1283               	bcf	3,5	;RP0=0, select bank0
  7359  060F  1303               	bcf	3,6	;RP1=0, select bank0
  7360  0610  0857               	movf	Lights_Control@lights,w
  7361  0611  3A01               	xorlw	1
  7362  0612  1D03               	skipz
  7363  0613  0008               	return
  7364                           
  7365                           ;TriacRelay_B1.c: 229: RB3 = Lights->Status == 1 ? 1 : 0;
  7366  0614  0878               	movf	_Lights,w
  7367  0615  0084               	movwf	4
  7368  0616  1D00               	btfss	0,2
  7369  0617  2E1C               	goto	u5500
  7370  0618  1283               	bcf	3,5	;RP0=0, select bank0
  7371  0619  1303               	bcf	3,6	;RP1=0, select bank0
  7372  061A  1586               	bsf	6,3	;volatile
  7373  061B  0008               	return
  7374  061C                     u5500:	
  7375  061C  1283               	bcf	3,5	;RP0=0, select bank0
  7376  061D  1303               	bcf	3,6	;RP1=0, select bank0
  7377  061E  1186               	bcf	6,3	;volatile
  7378                           
  7379                           ;TriacRelay_B1.c: 230: }
  7380                           ;TriacRelay_B1.c: 242: }
  7381                           ;TriacRelay_B1.c: 243: } else {
  7382  061F  0008               	return
  7383  0620                     l4670:	
  7384                           
  7385                           ;TriacRelay_B1.c: 244: if (Lights->Time >= (Lights->TriacValue / 20)) {
  7386  0620  3014               	movlw	20
  7387  0621  00CD               	movwf	___awdiv@divisor
  7388  0622  3000               	movlw	0
  7389  0623  00CE               	movwf	___awdiv@divisor+1
  7390  0624  0878               	movf	_Lights,w
  7391  0625  3E03               	addlw	3
  7392  0626  0084               	movwf	4
  7393  0627  1383               	bcf	3,7	;select IRP bank0
  7394  0628  0800               	movf	0,w
  7395  0629  00D5               	movwf	??_Lights_Control
  7396  062A  01D6               	clrf	??_Lights_Control+1
  7397  062B  0855               	movf	??_Lights_Control,w
  7398  062C  00CF               	movwf	___awdiv@dividend
  7399  062D  0856               	movf	??_Lights_Control+1,w
  7400  062E  00D0               	movwf	___awdiv@dividend+1
  7401  062F  158A  26D8  118A   	fcall	___awdiv
  7402  0632  0878               	movf	_Lights,w
  7403  0633  3E02               	addlw	2
  7404  0634  0084               	movwf	4
  7405  0635  1283               	bcf	3,5	;RP0=0, select bank0
  7406  0636  1303               	bcf	3,6	;RP1=0, select bank0
  7407  0637  084E               	movf	?___awdiv+1,w
  7408  0638  3A80               	xorlw	128
  7409  0639  3C80               	sublw	128
  7410  063A  1D03               	skipz
  7411  063B  2E3F               	goto	u5525
  7412  063C  084D               	movf	?___awdiv,w
  7413  063D  1383               	bcf	3,7	;select IRP bank0
  7414  063E  0200               	subwf	0,w
  7415  063F                     u5525:	
  7416  063F  1C03               	skipc
  7417  0640  0008               	return
  7418                           
  7419                           ;TriacRelay_B1.c: 245: Lights->Time = 0;
  7420  0641  0878               	movf	_Lights,w
  7421  0642  3E02               	addlw	2
  7422  0643  0084               	movwf	4
  7423  0644  1383               	bcf	3,7	;select IRP bank0
  7424  0645  0180               	clrf	0
  7425                           
  7426                           ;TriacRelay_B1.c: 246: Lights->GO = 0;
  7427  0646  0878               	movf	_Lights,w
  7428  0647  0084               	movwf	4
  7429  0648  1080               	bcf	0,1
  7430                           
  7431                           ;TriacRelay_B1.c: 247: Lights->RelaySet = 0;
  7432  0649  0878               	movf	_Lights,w
  7433  064A  0084               	movwf	4
  7434  064B  1380               	bcf	0,7
  7435                           
  7436                           ;TriacRelay_B1.c: 250: if (lights == 1) {
  7437  064C  1283               	bcf	3,5	;RP0=0, select bank0
  7438  064D  1303               	bcf	3,6	;RP1=0, select bank0
  7439  064E  0857               	movf	Lights_Control@lights,w
  7440  064F  3A01               	xorlw	1
  7441  0650  1D03               	skipz
  7442  0651  0008               	return
  7443                           
  7444                           ;TriacRelay_B1.c: 251: RB2 = 0;
  7445  0652  1106               	bcf	6,2	;volatile
  7446  0653  0008               	return
  7447  0654                     __end_of_Lights_Control:	
  7448                           
  7449                           	psect	text44
  7450  0ED8                     __ptext44:	
  7451 ;; *************** function ___awdiv *****************
  7452 ;; Defined at:
  7453 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  7454 ;; Parameters:    Size  Location     Type
  7455 ;;  divisor         2    0[BANK0 ] int 
  7456 ;;  dividend        2    2[BANK0 ] int 
  7457 ;; Auto vars:     Size  Location     Type
  7458 ;;  quotient        2    6[BANK0 ] int 
  7459 ;;  sign            1    5[BANK0 ] unsigned char 
  7460 ;;  counter         1    4[BANK0 ] unsigned char 
  7461 ;; Return value:  Size  Location     Type
  7462 ;;                  2    0[BANK0 ] int 
  7463 ;; Registers used:
  7464 ;;		wreg, status,2, status,0
  7465 ;; Tracked objects:
  7466 ;;		On entry : 0/0
  7467 ;;		On exit  : 0/0
  7468 ;;		Unchanged: 0/0
  7469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7470 ;;      Params:         0       4       0       0
  7471 ;;      Locals:         0       4       0       0
  7472 ;;      Temps:          1       0       0       0
  7473 ;;      Totals:         1       8       0       0
  7474 ;;Total ram usage:        9 bytes
  7475 ;; Hardware stack levels used:    1
  7476 ;; Hardware stack levels required when called:    2
  7477 ;; This function calls:
  7478 ;;		Nothing
  7479 ;; This function is called by:
  7480 ;;		_getPIR_AD
  7481 ;;		_Lights_Control
  7482 ;; This function uses a non-reentrant model
  7483 ;;
  7484                           
  7485                           
  7486                           ;psect for function ___awdiv
  7487  0ED8                     ___awdiv:	
  7488                           
  7489                           ;incstack = 0
  7490                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7491  0ED8  1283               	bcf	3,5	;RP0=0, select bank0
  7492  0ED9  1303               	bcf	3,6	;RP1=0, select bank0
  7493  0EDA  01D2               	clrf	___awdiv@sign
  7494  0EDB  1FCE               	btfss	___awdiv@divisor+1,7
  7495  0EDC  2EE4               	goto	l4520
  7496  0EDD  09CD               	comf	___awdiv@divisor,f
  7497  0EDE  09CE               	comf	___awdiv@divisor+1,f
  7498  0EDF  0ACD               	incf	___awdiv@divisor,f
  7499  0EE0  1903               	skipnz
  7500  0EE1  0ACE               	incf	___awdiv@divisor+1,f
  7501  0EE2  01D2               	clrf	___awdiv@sign
  7502  0EE3  0AD2               	incf	___awdiv@sign,f
  7503  0EE4                     l4520:	
  7504  0EE4  1FD0               	btfss	___awdiv@dividend+1,7
  7505  0EE5  2EEF               	goto	l4526
  7506  0EE6  09CF               	comf	___awdiv@dividend,f
  7507  0EE7  09D0               	comf	___awdiv@dividend+1,f
  7508  0EE8  0ACF               	incf	___awdiv@dividend,f
  7509  0EE9  1903               	skipnz
  7510  0EEA  0AD0               	incf	___awdiv@dividend+1,f
  7511  0EEB  3001               	movlw	1
  7512  0EEC  00F4               	movwf	??___awdiv
  7513  0EED  0874               	movf	??___awdiv,w
  7514  0EEE  06D2               	xorwf	___awdiv@sign,f
  7515  0EEF                     l4526:	
  7516  0EEF  01D3               	clrf	___awdiv@quotient
  7517  0EF0  01D4               	clrf	___awdiv@quotient+1
  7518  0EF1  084E               	movf	___awdiv@divisor+1,w
  7519  0EF2  044D               	iorwf	___awdiv@divisor,w
  7520  0EF3  1903               	skipnz
  7521  0EF4  2F26               	goto	l4548
  7522  0EF5  01D1               	clrf	___awdiv@counter
  7523  0EF6  0AD1               	incf	___awdiv@counter,f
  7524  0EF7                     l4536:	
  7525  0EF7  1BCE               	btfsc	___awdiv@divisor+1,7
  7526  0EF8  2F05               	goto	l4538
  7527  0EF9  3001               	movlw	1
  7528  0EFA                     u5185:	
  7529  0EFA  1003               	clrc
  7530  0EFB  0DCD               	rlf	___awdiv@divisor,f
  7531  0EFC  0DCE               	rlf	___awdiv@divisor+1,f
  7532  0EFD  3EFF               	addlw	-1
  7533  0EFE  1D03               	skipz
  7534  0EFF  2EFA               	goto	u5185
  7535  0F00  3001               	movlw	1
  7536  0F01  00F4               	movwf	??___awdiv
  7537  0F02  0874               	movf	??___awdiv,w
  7538  0F03  07D1               	addwf	___awdiv@counter,f
  7539  0F04  2EF7               	goto	l4536
  7540  0F05                     l4538:	
  7541  0F05  3001               	movlw	1
  7542  0F06                     u5205:	
  7543  0F06  1003               	clrc
  7544  0F07  0DD3               	rlf	___awdiv@quotient,f
  7545  0F08  0DD4               	rlf	___awdiv@quotient+1,f
  7546  0F09  3EFF               	addlw	-1
  7547  0F0A  1D03               	skipz
  7548  0F0B  2F06               	goto	u5205
  7549  0F0C  084E               	movf	___awdiv@divisor+1,w
  7550  0F0D  0250               	subwf	___awdiv@dividend+1,w
  7551  0F0E  1D03               	skipz
  7552  0F0F  2F12               	goto	u5215
  7553  0F10  084D               	movf	___awdiv@divisor,w
  7554  0F11  024F               	subwf	___awdiv@dividend,w
  7555  0F12                     u5215:	
  7556  0F12  1C03               	skipc
  7557  0F13  2F1B               	goto	l4544
  7558  0F14  084D               	movf	___awdiv@divisor,w
  7559  0F15  02CF               	subwf	___awdiv@dividend,f
  7560  0F16  084E               	movf	___awdiv@divisor+1,w
  7561  0F17  1C03               	skipc
  7562  0F18  03D0               	decf	___awdiv@dividend+1,f
  7563  0F19  02D0               	subwf	___awdiv@dividend+1,f
  7564  0F1A  1453               	bsf	___awdiv@quotient,0
  7565  0F1B                     l4544:	
  7566  0F1B  3001               	movlw	1
  7567  0F1C                     u5225:	
  7568  0F1C  1003               	clrc
  7569  0F1D  0CCE               	rrf	___awdiv@divisor+1,f
  7570  0F1E  0CCD               	rrf	___awdiv@divisor,f
  7571  0F1F  3EFF               	addlw	-1
  7572  0F20  1D03               	skipz
  7573  0F21  2F1C               	goto	u5225
  7574  0F22  3001               	movlw	1
  7575  0F23  02D1               	subwf	___awdiv@counter,f
  7576  0F24  1D03               	btfss	3,2
  7577  0F25  2F05               	goto	l4538
  7578  0F26                     l4548:	
  7579  0F26  0852               	movf	___awdiv@sign,w
  7580  0F27  1903               	btfsc	3,2
  7581  0F28  2F2E               	goto	l4552
  7582  0F29  09D3               	comf	___awdiv@quotient,f
  7583  0F2A  09D4               	comf	___awdiv@quotient+1,f
  7584  0F2B  0AD3               	incf	___awdiv@quotient,f
  7585  0F2C  1903               	skipnz
  7586  0F2D  0AD4               	incf	___awdiv@quotient+1,f
  7587  0F2E                     l4552:	
  7588  0F2E  0854               	movf	___awdiv@quotient+1,w
  7589  0F2F  01CE               	clrf	?___awdiv+1
  7590  0F30  07CE               	addwf	?___awdiv+1,f
  7591  0F31  0853               	movf	___awdiv@quotient,w
  7592  0F32  01CD               	clrf	?___awdiv
  7593  0F33  07CD               	addwf	?___awdiv,f
  7594  0F34  0008               	return
  7595  0F35                     __end_of___awdiv:	
  7596                           
  7597                           	psect	text45
  7598  0AEE                     __ptext45:	
  7599 ;; *************** function _Lights_Initialization *****************
  7600 ;; Defined at:
  7601 ;;		line 32 in file "../src/TriacRelay_B1.c"
  7602 ;; Parameters:    Size  Location     Type
  7603 ;;		None
  7604 ;; Auto vars:     Size  Location     Type
  7605 ;;		None
  7606 ;; Return value:  Size  Location     Type
  7607 ;;		None               void
  7608 ;; Registers used:
  7609 ;;		wreg, status,2, status,0, pclath, cstack
  7610 ;; Tracked objects:
  7611 ;;		On entry : 0/0
  7612 ;;		On exit  : 0/0
  7613 ;;		Unchanged: 0/0
  7614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7615 ;;      Params:         0       0       0       0
  7616 ;;      Locals:         0       0       0       0
  7617 ;;      Temps:          0       0       0       0
  7618 ;;      Totals:         0       0       0       0
  7619 ;;Total ram usage:        0 bytes
  7620 ;; Hardware stack levels used:    1
  7621 ;; Hardware stack levels required when called:    4
  7622 ;; This function calls:
  7623 ;;		_setLights_Initialization
  7624 ;; This function is called by:
  7625 ;;		_main
  7626 ;; This function uses a non-reentrant model
  7627 ;;
  7628                           
  7629                           
  7630                           ;psect for function _Lights_Initialization
  7631  0AEE                     _Lights_Initialization:	
  7632                           
  7633                           ;TriacRelay_B1.c: 34: setLights_Initialization(1);
  7634                           
  7635                           ;incstack = 0
  7636                           ; Regs used in _Lights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  7637  0AEE  3001               	movlw	1
  7638  0AEF  158A  230D         	fcall	_setLights_Initialization
  7639  0AF1  0008               	return
  7640  0AF2                     __end_of_Lights_Initialization:	
  7641                           
  7642                           	psect	text46
  7643  0B0D                     __ptext46:	
  7644 ;; *************** function _setLights_Initialization *****************
  7645 ;; Defined at:
  7646 ;;		line 47 in file "../src/TriacRelay_B1.c"
  7647 ;; Parameters:    Size  Location     Type
  7648 ;;  lights          1    wreg     unsigned char 
  7649 ;; Auto vars:     Size  Location     Type
  7650 ;;  lights          1    0[BANK0 ] unsigned char 
  7651 ;; Return value:  Size  Location     Type
  7652 ;;		None               void
  7653 ;; Registers used:
  7654 ;;		wreg, status,2, status,0, pclath, cstack
  7655 ;; Tracked objects:
  7656 ;;		On entry : 0/0
  7657 ;;		On exit  : 0/0
  7658 ;;		Unchanged: 0/0
  7659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7660 ;;      Params:         0       0       0       0
  7661 ;;      Locals:         0       1       0       0
  7662 ;;      Temps:          0       0       0       0
  7663 ;;      Totals:         0       1       0       0
  7664 ;;Total ram usage:        1 bytes
  7665 ;; Hardware stack levels used:    1
  7666 ;; Hardware stack levels required when called:    3
  7667 ;; This function calls:
  7668 ;;		_LightsPointSelect
  7669 ;; This function is called by:
  7670 ;;		_Lights_Initialization
  7671 ;; This function uses a non-reentrant model
  7672 ;;
  7673                           
  7674                           
  7675                           ;psect for function _setLights_Initialization
  7676  0B0D                     _setLights_Initialization:	
  7677                           
  7678                           ;incstack = 0
  7679                           ; Regs used in _setLights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  7680                           ;setLights_Initialization@lights stored from wreg
  7681  0B0D  1283               	bcf	3,5	;RP0=0, select bank0
  7682  0B0E  1303               	bcf	3,6	;RP1=0, select bank0
  7683  0B0F  00CD               	movwf	setLights_Initialization@lights
  7684                           
  7685                           ;TriacRelay_B1.c: 48: LightsPointSelect(lights);
  7686  0B10  084D               	movf	setLights_Initialization@lights,w
  7687  0B11  158A  234D         	fcall	_LightsPointSelect
  7688  0B13  0008               	return
  7689  0B14                     __end_of_setLights_Initialization:	
  7690                           
  7691                           	psect	text47
  7692  0AD8                     __ptext47:	
  7693 ;; *************** function _LED_Main *****************
  7694 ;; Defined at:
  7695 ;;		line 47 in file "../src/LED_B1.c"
  7696 ;; Parameters:    Size  Location     Type
  7697 ;;		None
  7698 ;; Auto vars:     Size  Location     Type
  7699 ;;		None
  7700 ;; Return value:  Size  Location     Type
  7701 ;;		None               void
  7702 ;; Registers used:
  7703 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7704 ;; Tracked objects:
  7705 ;;		On entry : 0/0
  7706 ;;		On exit  : 0/0
  7707 ;;		Unchanged: 0/0
  7708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7709 ;;      Params:         0       0       0       0
  7710 ;;      Locals:         0       0       0       0
  7711 ;;      Temps:          0       0       0       0
  7712 ;;      Totals:         0       0       0       0
  7713 ;;Total ram usage:        0 bytes
  7714 ;; Hardware stack levels used:    1
  7715 ;; Hardware stack levels required when called:    5
  7716 ;; This function calls:
  7717 ;;		_setPIRLED_Main
  7718 ;; This function is called by:
  7719 ;;		_main
  7720 ;; This function uses a non-reentrant model
  7721 ;;
  7722                           
  7723                           
  7724                           ;psect for function _LED_Main
  7725  0AD8                     _LED_Main:	
  7726                           
  7727                           ;LED_B1.c: 55: setPIRLED_Main();
  7728                           
  7729                           ;incstack = 0
  7730                           ; Regs used in _LED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7731  0AD8  118A  274E         	fcall	_setPIRLED_Main
  7732  0ADA  0008               	return
  7733  0ADB                     __end_of_LED_Main:	
  7734                           
  7735                           	psect	text48
  7736  074E                     __ptext48:	
  7737 ;; *************** function _setPIRLED_Main *****************
  7738 ;; Defined at:
  7739 ;;		line 265 in file "../src/LED_B1.c"
  7740 ;; Parameters:    Size  Location     Type
  7741 ;;		None
  7742 ;; Auto vars:     Size  Location     Type
  7743 ;;  count           1    3[BANK0 ] unsigned char 
  7744 ;; Return value:  Size  Location     Type
  7745 ;;		None               void
  7746 ;; Registers used:
  7747 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7748 ;; Tracked objects:
  7749 ;;		On entry : 0/0
  7750 ;;		On exit  : 0/0
  7751 ;;		Unchanged: 0/0
  7752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7753 ;;      Params:         0       0       0       0
  7754 ;;      Locals:         0       1       0       0
  7755 ;;      Temps:          0       1       0       0
  7756 ;;      Totals:         0       2       0       0
  7757 ;;Total ram usage:        2 bytes
  7758 ;; Hardware stack levels used:    1
  7759 ;; Hardware stack levels required when called:    4
  7760 ;; This function calls:
  7761 ;;		_setLED
  7762 ;; This function is called by:
  7763 ;;		_LED_Main
  7764 ;; This function uses a non-reentrant model
  7765 ;;
  7766                           
  7767                           
  7768                           ;psect for function _setPIRLED_Main
  7769  074E                     _setPIRLED_Main:	
  7770                           
  7771                           ;LED_B1.c: 267: char count;
  7772                           ;LED_B1.c: 268: if (PIRLED.GO == 1) {
  7773                           
  7774                           ;incstack = 0
  7775                           ; Regs used in _setPIRLED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7776  074E  1283               	bcf	3,5	;RP0=0, select bank0
  7777  074F  1303               	bcf	3,6	;RP1=0, select bank0
  7778  0750  1C2A               	btfss	_PIRLED,0
  7779  0751  0008               	return
  7780                           
  7781                           ;LED_B1.c: 269: PIRLED.Time++;
  7782  0752  3001               	movlw	1
  7783  0753  07AC               	addwf	_PIRLED+2,f
  7784  0754  1803               	skipnc
  7785  0755  0AAD               	incf	_PIRLED+3,f
  7786  0756  3000               	movlw	0
  7787  0757  07AD               	addwf	_PIRLED+3,f
  7788                           
  7789                           ;LED_B1.c: 270: if (PIRLED.Time >= 500 / 20) {
  7790  0758  3000               	movlw	0
  7791  0759  022D               	subwf	_PIRLED+3,w
  7792  075A  3019               	movlw	25
  7793  075B  1903               	skipnz
  7794  075C  022C               	subwf	_PIRLED+2,w
  7795  075D  1C03               	skipc
  7796  075E  0008               	return
  7797                           
  7798                           ;LED_B1.c: 271: PIRLED.Time = 0;
  7799  075F  01AC               	clrf	_PIRLED+2
  7800  0760  01AD               	clrf	_PIRLED+3
  7801                           
  7802                           ;LED_B1.c: 272: setLED(1, 0);
  7803  0761  01CD               	clrf	setLED@command
  7804  0762  3001               	movlw	1
  7805  0763  158A  2735  118A   	fcall	_setLED
  7806                           
  7807                           ;LED_B1.c: 273: setLED(2, 0);
  7808  0766  1283               	bcf	3,5	;RP0=0, select bank0
  7809  0767  1303               	bcf	3,6	;RP1=0, select bank0
  7810  0768  01CD               	clrf	setLED@command
  7811  0769  3002               	movlw	2
  7812  076A  158A  2735  118A   	fcall	_setLED
  7813                           
  7814                           ;LED_B1.c: 274: if (PIRLED.GO1 == 1) {
  7815  076D  1283               	bcf	3,5	;RP0=0, select bank0
  7816  076E  1303               	bcf	3,6	;RP1=0, select bank0
  7817  076F  1CAA               	btfss	_PIRLED,1
  7818  0770  2F75               	goto	l4592
  7819                           
  7820                           ;LED_B1.c: 275: count = 4;
  7821  0771  3004               	movlw	4
  7822  0772  00CF               	movwf	??_setPIRLED_Main
  7823  0773  084F               	movf	??_setPIRLED_Main,w
  7824  0774  00D0               	movwf	setPIRLED_Main@count
  7825  0775                     l4592:	
  7826                           
  7827                           ;LED_B1.c: 276: }
  7828                           ;LED_B1.c: 277: if (PIRLED.GO2 == 1) {
  7829  0775  1D2A               	btfss	_PIRLED,2
  7830  0776  2F7B               	goto	l4596
  7831                           
  7832                           ;LED_B1.c: 278: count = 6;
  7833  0777  3006               	movlw	6
  7834  0778  00CF               	movwf	??_setPIRLED_Main
  7835  0779  084F               	movf	??_setPIRLED_Main,w
  7836  077A  00D0               	movwf	setPIRLED_Main@count
  7837  077B                     l4596:	
  7838                           
  7839                           ;LED_B1.c: 279: }
  7840                           ;LED_B1.c: 280: if (PIRLED.GO3 == 1) {
  7841  077B  1DAA               	btfss	_PIRLED,3
  7842  077C  2F81               	goto	l4600
  7843                           
  7844                           ;LED_B1.c: 281: count = 8;
  7845  077D  3008               	movlw	8
  7846  077E  00CF               	movwf	??_setPIRLED_Main
  7847  077F  084F               	movf	??_setPIRLED_Main,w
  7848  0780  00D0               	movwf	setPIRLED_Main@count
  7849  0781                     l4600:	
  7850                           
  7851                           ;LED_B1.c: 282: }
  7852                           ;LED_B1.c: 283: PIRLED.Count++;
  7853  0781  3001               	movlw	1
  7854  0782  00CF               	movwf	??_setPIRLED_Main
  7855  0783  084F               	movf	??_setPIRLED_Main,w
  7856  0784  07AB               	addwf	_PIRLED+1,f
  7857                           
  7858                           ;LED_B1.c: 284: if (PIRLED.Count == 1 || PIRLED.Count == 2) {
  7859  0785  082B               	movf	_PIRLED+1,w
  7860  0786  3A01               	xorlw	1
  7861  0787  1903               	skipnz
  7862  0788  2F8D               	goto	l4606
  7863  0789  082B               	movf	_PIRLED+1,w
  7864  078A  3A02               	xorlw	2
  7865  078B  1D03               	skipz
  7866  078C  2FA1               	goto	l4610
  7867  078D                     l4606:	
  7868                           
  7869                           ;LED_B1.c: 285: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  7870  078D  1003               	clrc
  7871  078E  1E2A               	btfss	_PIRLED,4
  7872  078F  1403               	setc
  7873  0790  1C03               	btfss	3,0
  7874  0791  2F96               	goto	u5340
  7875  0792  1283               	bcf	3,5	;RP0=0, select bank0
  7876  0793  1303               	bcf	3,6	;RP1=0, select bank0
  7877  0794  162A               	bsf	_PIRLED,4
  7878  0795  2F99               	goto	l4608
  7879  0796                     u5340:	
  7880  0796  1283               	bcf	3,5	;RP0=0, select bank0
  7881  0797  1303               	bcf	3,6	;RP1=0, select bank0
  7882  0798  122A               	bcf	_PIRLED,4
  7883  0799                     l4608:	
  7884                           
  7885                           ;LED_B1.c: 286: setLED(2, PIRLED.status);
  7886  0799  3000               	movlw	0
  7887  079A  1A2A               	btfsc	_PIRLED,4
  7888  079B  3001               	movlw	1
  7889  079C  00CD               	movwf	setLED@command
  7890  079D  3002               	movlw	2
  7891  079E  158A  2735         	fcall	_setLED
  7892                           
  7893                           ;LED_B1.c: 287: } else {
  7894  07A0  0008               	return
  7895  07A1                     l4610:	
  7896                           
  7897                           ;LED_B1.c: 288: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  7898  07A1  1003               	clrc
  7899  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  7900  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  7901  07A4  1E2A               	btfss	_PIRLED,4
  7902  07A5  1403               	setc
  7903  07A6  1C03               	btfss	3,0
  7904  07A7  2FAC               	goto	u5360
  7905  07A8  1283               	bcf	3,5	;RP0=0, select bank0
  7906  07A9  1303               	bcf	3,6	;RP1=0, select bank0
  7907  07AA  162A               	bsf	_PIRLED,4
  7908  07AB  2FAF               	goto	l4612
  7909  07AC                     u5360:	
  7910  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  7911  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  7912  07AE  122A               	bcf	_PIRLED,4
  7913  07AF                     l4612:	
  7914                           
  7915                           ;LED_B1.c: 289: setLED(1, PIRLED.status);
  7916  07AF  3000               	movlw	0
  7917  07B0  1A2A               	btfsc	_PIRLED,4
  7918  07B1  3001               	movlw	1
  7919  07B2  00CD               	movwf	setLED@command
  7920  07B3  3001               	movlw	1
  7921  07B4  158A  2735  118A   	fcall	_setLED
  7922                           
  7923                           ;LED_B1.c: 290: if (PIRLED.Count == count) {
  7924  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  7925  07B8  1303               	bcf	3,6	;RP1=0, select bank0
  7926  07B9  082B               	movf	_PIRLED+1,w
  7927  07BA  0650               	xorwf	setPIRLED_Main@count,w
  7928  07BB  1D03               	skipz
  7929  07BC  0008               	return
  7930                           
  7931                           ;LED_B1.c: 291: PIRLED.Count = 0;
  7932  07BD  01AB               	clrf	_PIRLED+1
  7933  07BE  0008               	return
  7934  07BF                     __end_of_setPIRLED_Main:	
  7935                           
  7936                           	psect	text49
  7937  0B1B                     __ptext49:	
  7938 ;; *************** function _LED_Initialization *****************
  7939 ;; Defined at:
  7940 ;;		line 31 in file "../src/LED_B1.c"
  7941 ;; Parameters:    Size  Location     Type
  7942 ;;		None
  7943 ;; Auto vars:     Size  Location     Type
  7944 ;;		None
  7945 ;; Return value:  Size  Location     Type
  7946 ;;		None               void
  7947 ;; Registers used:
  7948 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7949 ;; Tracked objects:
  7950 ;;		On entry : 0/0
  7951 ;;		On exit  : 0/0
  7952 ;;		Unchanged: 0/0
  7953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7954 ;;      Params:         0       0       0       0
  7955 ;;      Locals:         0       0       0       0
  7956 ;;      Temps:          0       0       0       0
  7957 ;;      Totals:         0       0       0       0
  7958 ;;Total ram usage:        0 bytes
  7959 ;; Hardware stack levels used:    1
  7960 ;; Hardware stack levels required when called:    5
  7961 ;; This function calls:
  7962 ;;		_setLED_Initialization
  7963 ;; This function is called by:
  7964 ;;		_main
  7965 ;; This function uses a non-reentrant model
  7966 ;;
  7967                           
  7968                           
  7969                           ;psect for function _LED_Initialization
  7970  0B1B                     _LED_Initialization:	
  7971                           
  7972                           ;LED_B1.c: 33: setLED_Initialization(1);
  7973                           
  7974                           ;incstack = 0
  7975                           ; Regs used in _LED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7976  0B1B  3001               	movlw	1
  7977  0B1C  158A  23E7  158A   	fcall	_setLED_Initialization
  7978                           
  7979                           ;LED_B1.c: 36: setLED_Initialization(2);
  7980  0B1F  3002               	movlw	2
  7981  0B20  158A  23E7         	fcall	_setLED_Initialization
  7982  0B22  0008               	return
  7983  0B23                     __end_of_LED_Initialization:	
  7984                           
  7985                           	psect	text50
  7986  0BE7                     __ptext50:	
  7987 ;; *************** function _setLED_Initialization *****************
  7988 ;; Defined at:
  7989 ;;		line 74 in file "../src/LED_B1.c"
  7990 ;; Parameters:    Size  Location     Type
  7991 ;;  led             1    wreg     unsigned char 
  7992 ;; Auto vars:     Size  Location     Type
  7993 ;;  led             1    2[BANK0 ] unsigned char 
  7994 ;; Return value:  Size  Location     Type
  7995 ;;		None               void
  7996 ;; Registers used:
  7997 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7998 ;; Tracked objects:
  7999 ;;		On entry : 0/0
  8000 ;;		On exit  : 0/0
  8001 ;;		Unchanged: 0/0
  8002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8003 ;;      Params:         0       0       0       0
  8004 ;;      Locals:         0       1       0       0
  8005 ;;      Temps:          0       0       0       0
  8006 ;;      Totals:         0       1       0       0
  8007 ;;Total ram usage:        1 bytes
  8008 ;; Hardware stack levels used:    1
  8009 ;; Hardware stack levels required when called:    4
  8010 ;; This function calls:
  8011 ;;		_LedPointSelect
  8012 ;;		_setLED
  8013 ;; This function is called by:
  8014 ;;		_LED_Initialization
  8015 ;; This function uses a non-reentrant model
  8016 ;;
  8017                           
  8018                           
  8019                           ;psect for function _setLED_Initialization
  8020  0BE7                     _setLED_Initialization:	
  8021                           
  8022                           ;incstack = 0
  8023                           ; Regs used in _setLED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8024                           ;setLED_Initialization@led stored from wreg
  8025  0BE7  1283               	bcf	3,5	;RP0=0, select bank0
  8026  0BE8  1303               	bcf	3,6	;RP1=0, select bank0
  8027  0BE9  00CF               	movwf	setLED_Initialization@led
  8028                           
  8029                           ;LED_B1.c: 75: LedPointSelect(led);
  8030  0BEA  084F               	movf	setLED_Initialization@led,w
  8031  0BEB  158A  23D5  158A   	fcall	_LedPointSelect
  8032                           
  8033                           ;LED_B1.c: 76: LED->Enable = 1;
  8034  0BEE  0876               	movf	_LED,w
  8035  0BEF  0084               	movwf	4
  8036  0BF0  1383               	bcf	3,7	;select IRP bank0
  8037  0BF1  1400               	bsf	0,0
  8038                           
  8039                           ;LED_B1.c: 77: setLED(led, 0);
  8040  0BF2  1283               	bcf	3,5	;RP0=0, select bank0
  8041  0BF3  1303               	bcf	3,6	;RP1=0, select bank0
  8042  0BF4  01CD               	clrf	setLED@command
  8043  0BF5  084F               	movf	setLED_Initialization@led,w
  8044  0BF6  158A  2735         	fcall	_setLED
  8045  0BF8  0008               	return
  8046  0BF9                     __end_of_setLED_Initialization:	
  8047                           
  8048                           	psect	text51
  8049  050F                     __ptext51:	
  8050 ;; *************** function _Exception_Main *****************
  8051 ;; Defined at:
  8052 ;;		line 499 in file "../src/Main_B1.c"
  8053 ;; Parameters:    Size  Location     Type
  8054 ;;		None
  8055 ;; Auto vars:     Size  Location     Type
  8056 ;;  i               2   12[BANK0 ] int 
  8057 ;;  i               2   10[BANK0 ] int 
  8058 ;;  error           1   14[BANK0 ] unsigned char 
  8059 ;;  status          1    9[BANK0 ] unsigned char 
  8060 ;;  count           1    8[BANK0 ] unsigned char 
  8061 ;;  lights          1    7[BANK0 ] unsigned char 
  8062 ;; Return value:  Size  Location     Type
  8063 ;;		None               void
  8064 ;; Registers used:
  8065 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8066 ;; Tracked objects:
  8067 ;;		On entry : 0/0
  8068 ;;		On exit  : 0/0
  8069 ;;		Unchanged: 0/0
  8070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8071 ;;      Params:         0       0       0       0
  8072 ;;      Locals:         0       8       0       0
  8073 ;;      Temps:          0       1       0       0
  8074 ;;      Totals:         0       9       0       0
  8075 ;;Total ram usage:        9 bytes
  8076 ;; Hardware stack levels used:    1
  8077 ;; Hardware stack levels required when called:    5
  8078 ;; This function calls:
  8079 ;;		_getAll_Lights_Line
  8080 ;;		_getLights_Status
  8081 ;;		_getMain_All_Error_Status
  8082 ;;		_getMain_All_LightsStatus
  8083 ;;		_setLED
  8084 ;;		_setLights_SwOff
  8085 ;;		_setLights_SwOn
  8086 ;; This function is called by:
  8087 ;;		_main
  8088 ;; This function uses a non-reentrant model
  8089 ;;
  8090                           
  8091                           
  8092                           ;psect for function _Exception_Main
  8093  050F                     _Exception_Main:	
  8094                           
  8095                           ;Main_B1.c: 500: char error = getMain_All_Error_Status(0);
  8096                           
  8097                           ;incstack = 0
  8098                           ; Regs used in _Exception_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8099  050F  3000               	movlw	0
  8100  0510  158A  25FA  118A   	fcall	_getMain_All_Error_Status
  8101  0513  1283               	bcf	3,5	;RP0=0, select bank0
  8102  0514  1303               	bcf	3,6	;RP1=0, select bank0
  8103  0515  00D3               	movwf	??_Exception_Main
  8104  0516  0853               	movf	??_Exception_Main,w
  8105  0517  00DB               	movwf	Exception_Main@error
  8106                           
  8107                           ;Main_B1.c: 501: char lights = 0, count = 1;
  8108  0518  01D4               	clrf	Exception_Main@lights
  8109  0519  01D5               	clrf	Exception_Main@count
  8110  051A  0AD5               	incf	Exception_Main@count,f
  8111                           
  8112                           ;Main_B1.c: 502: char status = 0;
  8113  051B  01D6               	clrf	Exception_Main@status
  8114                           
  8115                           ;Main_B1.c: 504: if (myMain.Error_Run == 1) {
  8116  051C  1DA7               	btfss	_myMain+2,3
  8117  051D  2D2A               	goto	l5204
  8118                           
  8119                           ;Main_B1.c: 505: if (error == 0) {
  8120  051E  08DB               	movf	Exception_Main@error,f
  8121  051F  1D03               	skipz
  8122  0520  0008               	return
  8123                           
  8124                           ;Main_B1.c: 506: myMain.Error_Run = 0;
  8125  0521  11A7               	bcf	_myMain+2,3
  8126                           
  8127                           ;Main_B1.c: 511: setLED(error, 110);
  8128  0522  306E               	movlw	110
  8129  0523  00D3               	movwf	??_Exception_Main
  8130  0524  0853               	movf	??_Exception_Main,w
  8131  0525  00CD               	movwf	setLED@command
  8132  0526  085B               	movf	Exception_Main@error,w
  8133  0527  158A  2735         	fcall	_setLED
  8134                           
  8135                           ;Main_B1.c: 522: }
  8136                           ;Main_B1.c: 523: } else {
  8137  0529  0008               	return
  8138  052A                     l5204:	
  8139                           
  8140                           ;Main_B1.c: 524: if (error != 0) {
  8141  052A  1283               	bcf	3,5	;RP0=0, select bank0
  8142  052B  1303               	bcf	3,6	;RP1=0, select bank0
  8143  052C  085B               	movf	Exception_Main@error,w
  8144  052D  1903               	btfsc	3,2
  8145  052E  0008               	return
  8146                           
  8147                           ;Main_B1.c: 525: myMain.Error_Run = 1;
  8148  052F  15A7               	bsf	_myMain+2,3
  8149                           
  8150                           ;Main_B1.c: 529: setLED(error, 111);
  8151  0530  306F               	movlw	111
  8152  0531  00D3               	movwf	??_Exception_Main
  8153  0532  0853               	movf	??_Exception_Main,w
  8154  0533  00CD               	movwf	setLED@command
  8155  0534  085B               	movf	Exception_Main@error,w
  8156  0535  158A  2735  118A   	fcall	_setLED
  8157                           
  8158                           ;Main_B1.c: 591: switch (error) {
  8159  0538  2DC2               	goto	l5240
  8160  0539                     l5210:	
  8161                           ;Main_B1.c: 592: case 1:
  8162                           
  8163                           
  8164                           ;Main_B1.c: 593: for (int i = 0; i < count; i++) {
  8165  0539  1283               	bcf	3,5	;RP0=0, select bank0
  8166  053A  1303               	bcf	3,6	;RP1=0, select bank0
  8167  053B  01D7               	clrf	Exception_Main@i
  8168  053C  01D8               	clrf	Exception_Main@i+1
  8169  053D                     l5218:	
  8170  053D  0858               	movf	Exception_Main@i+1,w
  8171  053E  3A80               	xorlw	128
  8172  053F  00D3               	movwf	??_Exception_Main
  8173  0540  3080               	movlw	128
  8174  0541  0253               	subwf	??_Exception_Main,w
  8175  0542  1D03               	skipz
  8176  0543  2D46               	goto	u6715
  8177  0544  0855               	movf	Exception_Main@count,w
  8178  0545  0257               	subwf	Exception_Main@i,w
  8179  0546                     u6715:	
  8180  0546  1803               	btfsc	3,0
  8181  0547  2D69               	goto	u6710
  8182                           
  8183                           ;Main_B1.c: 594: if (getLights_Status(i + 1) == 1) {
  8184  0548  1283               	bcf	3,5	;RP0=0, select bank0
  8185  0549  1303               	bcf	3,6	;RP1=0, select bank0
  8186  054A  0857               	movf	Exception_Main@i,w
  8187  054B  3E01               	addlw	1
  8188  054C  158A  23B3  118A   	fcall	_getLights_Status
  8189  054F  3A01               	xorlw	1
  8190  0550  1D03               	skipz
  8191  0551  2D60               	goto	l5216
  8192                           
  8193                           ;Main_B1.c: 596: setLights_SwOn(i + 1);
  8194  0552  1283               	bcf	3,5	;RP0=0, select bank0
  8195  0553  1303               	bcf	3,6	;RP1=0, select bank0
  8196  0554  0857               	movf	Exception_Main@i,w
  8197  0555  3E01               	addlw	1
  8198  0556  158A  254C  118A   	fcall	_setLights_SwOn
  8199                           
  8200                           ;Main_B1.c: 597: setLights_SwOff(i + 1);
  8201  0559  1283               	bcf	3,5	;RP0=0, select bank0
  8202  055A  1303               	bcf	3,6	;RP1=0, select bank0
  8203  055B  0857               	movf	Exception_Main@i,w
  8204  055C  3E01               	addlw	1
  8205  055D  158A  2468  118A   	fcall	_setLights_SwOff
  8206  0560                     l5216:	
  8207  0560  3001               	movlw	1
  8208  0561  1283               	bcf	3,5	;RP0=0, select bank0
  8209  0562  1303               	bcf	3,6	;RP1=0, select bank0
  8210  0563  07D7               	addwf	Exception_Main@i,f
  8211  0564  1803               	skipnc
  8212  0565  0AD8               	incf	Exception_Main@i+1,f
  8213  0566  3000               	movlw	0
  8214  0567  07D8               	addwf	Exception_Main@i+1,f
  8215  0568  2D3D               	goto	l5218
  8216  0569                     u6710:	
  8217  0569  1283               	bcf	3,5	;RP0=0, select bank0
  8218  056A  1303               	bcf	3,6	;RP1=0, select bank0
  8219  056B  0008               	return
  8220  056C                     l5220:	
  8221                           ;Main_B1.c: 601: case 2:
  8222                           
  8223                           ;Main_B1.c: 598: }
  8224                           ;Main_B1.c: 599: }
  8225                           ;Main_B1.c: 600: break;
  8226                           
  8227                           
  8228                           ;Main_B1.c: 602: if (getMain_All_LightsStatus() == 1) {
  8229  056C  158A  2344  118A   	fcall	_getMain_All_LightsStatus
  8230                           
  8231                           ;Main_B1.c: 604: }
  8232                           ;Main_B1.c: 606: for (int i = 0; i < count; i++) {
  8233                           
  8234                           ;Main_B1.c: 603: ;;
  8235  056F  1283               	bcf	3,5	;RP0=0, select bank0
  8236  0570  1303               	bcf	3,6	;RP1=0, select bank0
  8237  0571  01D9               	clrf	Exception_Main@i_2140
  8238  0572  01DA               	clrf	Exception_Main@i_2140+1
  8239  0573                     l5230:	
  8240  0573  085A               	movf	Exception_Main@i_2140+1,w
  8241  0574  3A80               	xorlw	128
  8242  0575  00D3               	movwf	??_Exception_Main
  8243  0576  3080               	movlw	128
  8244  0577  0253               	subwf	??_Exception_Main,w
  8245  0578  1D03               	skipz
  8246  0579  2D7C               	goto	u6735
  8247  057A  0855               	movf	Exception_Main@count,w
  8248  057B  0259               	subwf	Exception_Main@i_2140,w
  8249  057C                     u6735:	
  8250  057C  1803               	btfsc	3,0
  8251  057D  2D9F               	goto	u6730
  8252                           
  8253                           ;Main_B1.c: 607: if (getLights_Status(i + 1) == 1) {
  8254  057E  1283               	bcf	3,5	;RP0=0, select bank0
  8255  057F  1303               	bcf	3,6	;RP1=0, select bank0
  8256  0580  0859               	movf	Exception_Main@i_2140,w
  8257  0581  3E01               	addlw	1
  8258  0582  158A  23B3  118A   	fcall	_getLights_Status
  8259  0585  3A01               	xorlw	1
  8260  0586  1D03               	skipz
  8261  0587  2D96               	goto	l5228
  8262                           
  8263                           ;Main_B1.c: 608: setLights_SwOn(i + 1);
  8264  0588  1283               	bcf	3,5	;RP0=0, select bank0
  8265  0589  1303               	bcf	3,6	;RP1=0, select bank0
  8266  058A  0859               	movf	Exception_Main@i_2140,w
  8267  058B  3E01               	addlw	1
  8268  058C  158A  254C  118A   	fcall	_setLights_SwOn
  8269                           
  8270                           ;Main_B1.c: 609: setLights_SwOff(i + 1);
  8271  058F  1283               	bcf	3,5	;RP0=0, select bank0
  8272  0590  1303               	bcf	3,6	;RP1=0, select bank0
  8273  0591  0859               	movf	Exception_Main@i_2140,w
  8274  0592  3E01               	addlw	1
  8275  0593  158A  2468  118A   	fcall	_setLights_SwOff
  8276  0596                     l5228:	
  8277  0596  3001               	movlw	1
  8278  0597  1283               	bcf	3,5	;RP0=0, select bank0
  8279  0598  1303               	bcf	3,6	;RP1=0, select bank0
  8280  0599  07D9               	addwf	Exception_Main@i_2140,f
  8281  059A  1803               	skipnc
  8282  059B  0ADA               	incf	Exception_Main@i_2140+1,f
  8283  059C  3000               	movlw	0
  8284  059D  07DA               	addwf	Exception_Main@i_2140+1,f
  8285  059E  2D73               	goto	l5230
  8286  059F                     u6730:	
  8287  059F  1283               	bcf	3,5	;RP0=0, select bank0
  8288  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  8289  05A1  0008               	return
  8290  05A2                     l5232:	
  8291                           ;Main_B1.c: 613: case 3:
  8292                           
  8293                           ;Main_B1.c: 610: }
  8294                           ;Main_B1.c: 611: }
  8295                           ;Main_B1.c: 612: break;
  8296                           
  8297                           
  8298                           ;Main_B1.c: 614: status = getAll_Lights_Line();
  8299  05A2  158A  233B  118A   	fcall	_getAll_Lights_Line
  8300  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  8301  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  8302  05A7  00D3               	movwf	??_Exception_Main
  8303  05A8  0853               	movf	??_Exception_Main,w
  8304  05A9  00D6               	movwf	Exception_Main@status
  8305                           
  8306                           ;Main_B1.c: 616: if (getLights_Status(status) == 1) {
  8307  05AA  0856               	movf	Exception_Main@status,w
  8308  05AB  158A  23B3  118A   	fcall	_getLights_Status
  8309  05AE  3A01               	xorlw	1
  8310  05AF  1903               	btfsc	3,2
  8311  05B0  2DB4               	goto	l5236
  8312  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  8313  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  8314  05B3  0008               	return
  8315  05B4                     l5236:	
  8316                           
  8317                           ;Main_B1.c: 617: setLights_SwOn(status);
  8318  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  8319  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  8320  05B6  0856               	movf	Exception_Main@status,w
  8321  05B7  158A  254C  118A   	fcall	_setLights_SwOn
  8322                           
  8323                           ;Main_B1.c: 618: setLights_SwOff(status);
  8324  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  8325  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  8326  05BC  0856               	movf	Exception_Main@status,w
  8327  05BD  158A  2468         	fcall	_setLights_SwOff
  8328  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  8329  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  8330  05C1  0008               	return
  8331  05C2                     l5240:	
  8332                           ;Main_B1.c: 623: }
  8333                           
  8334                           ;Main_B1.c: 620: }
  8335                           ;Main_B1.c: 621: ;;
  8336                           ;Main_B1.c: 622: break;
  8337                           
  8338  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  8339  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  8340  05C4  085B               	movf	Exception_Main@error,w
  8341                           
  8342                           ; Switch size 1, requested type "space"
  8343                           ; Number of cases is 3, Range of values is 1 to 3
  8344                           ; switch strategies available:
  8345                           ; Name         Instructions Cycles
  8346                           ; simple_byte           10     6 (average)
  8347                           ; direct_byte           16    10 (fixed)
  8348                           ; jumptable            263     9 (fixed)
  8349                           ;	Chosen strategy is simple_byte
  8350  05C5  3A01               	xorlw	1	; case 1
  8351  05C6  1903               	skipnz
  8352  05C7  2D39               	goto	l5210
  8353  05C8  3A03               	xorlw	3	; case 2
  8354  05C9  1903               	skipnz
  8355  05CA  2D6C               	goto	l5220
  8356  05CB  3A01               	xorlw	1	; case 3
  8357  05CC  1903               	skipnz
  8358  05CD  2DA2               	goto	l5232
  8359  05CE  2DD0               	goto	l621
  8360  05CF  0008               	return
  8361  05D0                     l621:	
  8362  05D0  0008               	return
  8363  05D1                     __end_of_Exception_Main:	
  8364                           
  8365                           	psect	text52
  8366  0D4C                     __ptext52:	
  8367 ;; *************** function _setLights_SwOn *****************
  8368 ;; Defined at:
  8369 ;;		line 410 in file "../src/TriacRelay_B1.c"
  8370 ;; Parameters:    Size  Location     Type
  8371 ;;  sw              1    wreg     unsigned char 
  8372 ;; Auto vars:     Size  Location     Type
  8373 ;;  sw              1    3[BANK0 ] unsigned char 
  8374 ;; Return value:  Size  Location     Type
  8375 ;;		None               void
  8376 ;; Registers used:
  8377 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8378 ;; Tracked objects:
  8379 ;;		On entry : 0/0
  8380 ;;		On exit  : 0/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8383 ;;      Params:         0       0       0       0
  8384 ;;      Locals:         0       1       0       0
  8385 ;;      Temps:          0       0       0       0
  8386 ;;      Totals:         0       1       0       0
  8387 ;;Total ram usage:        1 bytes
  8388 ;; Hardware stack levels used:    1
  8389 ;; Hardware stack levels required when called:    4
  8390 ;; This function calls:
  8391 ;;		_LightsPointSelect
  8392 ;;		_getLights_Status
  8393 ;;		_setLights_Trigger
  8394 ;; This function is called by:
  8395 ;;		_Exception_Main
  8396 ;;		_PIR_Main
  8397 ;; This function uses a non-reentrant model
  8398 ;;
  8399                           
  8400                           
  8401                           ;psect for function _setLights_SwOn
  8402  0D4C                     _setLights_SwOn:	
  8403                           
  8404                           ;incstack = 0
  8405                           ; Regs used in _setLights_SwOn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8406                           ;setLights_SwOn@sw stored from wreg
  8407  0D4C  1283               	bcf	3,5	;RP0=0, select bank0
  8408  0D4D  1303               	bcf	3,6	;RP1=0, select bank0
  8409  0D4E  00D0               	movwf	setLights_SwOn@sw
  8410                           
  8411                           ;TriacRelay_B1.c: 411: LightsPointSelect(sw);
  8412  0D4F  0850               	movf	setLights_SwOn@sw,w
  8413  0D50  158A  234D  158A   	fcall	_LightsPointSelect
  8414                           
  8415                           ;TriacRelay_B1.c: 414: Lights->SwFlag = 1;
  8416  0D53  0A78               	incf	_Lights,w
  8417  0D54  0084               	movwf	4
  8418  0D55  1383               	bcf	3,7	;select IRP bank0
  8419  0D56  1500               	bsf	0,2
  8420                           
  8421                           ;TriacRelay_B1.c: 415: if (getLights_Status(sw) == 0) {
  8422  0D57  1283               	bcf	3,5	;RP0=0, select bank0
  8423  0D58  1303               	bcf	3,6	;RP1=0, select bank0
  8424  0D59  0850               	movf	setLights_SwOn@sw,w
  8425  0D5A  158A  23B3  158A   	fcall	_getLights_Status
  8426  0D5D  3800               	iorlw	0
  8427  0D5E  1D03               	skipz
  8428  0D5F  2D6C               	goto	l4628
  8429                           
  8430                           ;TriacRelay_B1.c: 416: Lights->SwStatus = 1;
  8431  0D60  0A78               	incf	_Lights,w
  8432  0D61  0084               	movwf	4
  8433  0D62  1383               	bcf	3,7	;select IRP bank0
  8434  0D63  1580               	bsf	0,3
  8435                           
  8436                           ;TriacRelay_B1.c: 417: setLights_Trigger(sw, 1);
  8437  0D64  1283               	bcf	3,5	;RP0=0, select bank0
  8438  0D65  1303               	bcf	3,6	;RP1=0, select bank0
  8439  0D66  01CD               	clrf	setLights_Trigger@command
  8440  0D67  0ACD               	incf	setLights_Trigger@command,f
  8441  0D68  0850               	movf	setLights_SwOn@sw,w
  8442  0D69  158A  24B6         	fcall	_setLights_Trigger
  8443                           
  8444                           ;TriacRelay_B1.c: 418: } else {
  8445  0D6B  0008               	return
  8446  0D6C                     l4628:	
  8447                           
  8448                           ;TriacRelay_B1.c: 419: Lights->SwStatus = 0;
  8449  0D6C  0A78               	incf	_Lights,w
  8450  0D6D  0084               	movwf	4
  8451  0D6E  1383               	bcf	3,7	;select IRP bank0
  8452  0D6F  1180               	bcf	0,3
  8453  0D70  0008               	return
  8454  0D71                     __end_of_setLights_SwOn:	
  8455                           
  8456                           	psect	text53
  8457  0BB3                     __ptext53:	
  8458 ;; *************** function _getLights_Status *****************
  8459 ;; Defined at:
  8460 ;;		line 271 in file "../src/TriacRelay_B1.c"
  8461 ;; Parameters:    Size  Location     Type
  8462 ;;  lights          1    wreg     unsigned char 
  8463 ;; Auto vars:     Size  Location     Type
  8464 ;;  lights          1    0[BANK0 ] unsigned char 
  8465 ;;  status          1    1[BANK0 ] unsigned char 
  8466 ;; Return value:  Size  Location     Type
  8467 ;;                  1    wreg      unsigned char 
  8468 ;; Registers used:
  8469 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8470 ;; Tracked objects:
  8471 ;;		On entry : 0/0
  8472 ;;		On exit  : 0/0
  8473 ;;		Unchanged: 0/0
  8474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8475 ;;      Params:         0       0       0       0
  8476 ;;      Locals:         0       2       0       0
  8477 ;;      Temps:          0       0       0       0
  8478 ;;      Totals:         0       2       0       0
  8479 ;;Total ram usage:        2 bytes
  8480 ;; Hardware stack levels used:    1
  8481 ;; Hardware stack levels required when called:    3
  8482 ;; This function calls:
  8483 ;;		_LightsPointSelect
  8484 ;; This function is called by:
  8485 ;;		_Exception_Main
  8486 ;;		_PIR_Main
  8487 ;;		_setLights_SwOn
  8488 ;;		_setLights_ErrorClose
  8489 ;; This function uses a non-reentrant model
  8490 ;;
  8491                           
  8492                           
  8493                           ;psect for function _getLights_Status
  8494  0BB3                     _getLights_Status:	
  8495                           
  8496                           ;incstack = 0
  8497                           ; Regs used in _getLights_Status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8498                           ;getLights_Status@lights stored from wreg
  8499  0BB3  1283               	bcf	3,5	;RP0=0, select bank0
  8500  0BB4  1303               	bcf	3,6	;RP1=0, select bank0
  8501  0BB5  00CD               	movwf	getLights_Status@lights
  8502                           
  8503                           ;TriacRelay_B1.c: 272: LightsPointSelect(lights);
  8504  0BB6  084D               	movf	getLights_Status@lights,w
  8505  0BB7  158A  234D         	fcall	_LightsPointSelect
  8506                           
  8507                           ;TriacRelay_B1.c: 273: char status = Lights->Status == 1 ? 1 : 0;
  8508  0BB9  0878               	movf	_Lights,w
  8509  0BBA  0084               	movwf	4
  8510  0BBB  3000               	movlw	0
  8511  0BBC  1383               	bcf	3,7	;select IRP bank0
  8512  0BBD  1900               	btfsc	0,2
  8513  0BBE  3001               	movlw	1
  8514  0BBF  1283               	bcf	3,5	;RP0=0, select bank0
  8515  0BC0  1303               	bcf	3,6	;RP1=0, select bank0
  8516  0BC1  00CE               	movwf	getLights_Status@status
  8517                           
  8518                           ;TriacRelay_B1.c: 274: return status;
  8519  0BC2  084E               	movf	getLights_Status@status,w
  8520  0BC3  0008               	return
  8521  0BC4                     __end_of_getLights_Status:	
  8522                           
  8523                           	psect	text54
  8524  0C68                     __ptext54:	
  8525 ;; *************** function _setLights_SwOff *****************
  8526 ;; Defined at:
  8527 ;;		line 438 in file "../src/TriacRelay_B1.c"
  8528 ;; Parameters:    Size  Location     Type
  8529 ;;  sw              1    wreg     unsigned char 
  8530 ;; Auto vars:     Size  Location     Type
  8531 ;;  sw              1    3[BANK0 ] unsigned char 
  8532 ;; Return value:  Size  Location     Type
  8533 ;;		None               void
  8534 ;; Registers used:
  8535 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8536 ;; Tracked objects:
  8537 ;;		On entry : 0/0
  8538 ;;		On exit  : 0/0
  8539 ;;		Unchanged: 0/0
  8540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8541 ;;      Params:         0       0       0       0
  8542 ;;      Locals:         0       1       0       0
  8543 ;;      Temps:          0       0       0       0
  8544 ;;      Totals:         0       1       0       0
  8545 ;;Total ram usage:        1 bytes
  8546 ;; Hardware stack levels used:    1
  8547 ;; Hardware stack levels required when called:    4
  8548 ;; This function calls:
  8549 ;;		_LightsPointSelect
  8550 ;;		_setLights_Trigger
  8551 ;; This function is called by:
  8552 ;;		_Exception_Main
  8553 ;;		_PIR_Main
  8554 ;; This function uses a non-reentrant model
  8555 ;;
  8556                           
  8557                           
  8558                           ;psect for function _setLights_SwOff
  8559  0C68                     _setLights_SwOff:	
  8560                           
  8561                           ;incstack = 0
  8562                           ; Regs used in _setLights_SwOff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8563                           ;setLights_SwOff@sw stored from wreg
  8564  0C68  1283               	bcf	3,5	;RP0=0, select bank0
  8565  0C69  1303               	bcf	3,6	;RP1=0, select bank0
  8566  0C6A  00D0               	movwf	setLights_SwOff@sw
  8567                           
  8568                           ;TriacRelay_B1.c: 440: LightsPointSelect(sw);
  8569  0C6B  0850               	movf	setLights_SwOff@sw,w
  8570  0C6C  158A  234D  158A   	fcall	_LightsPointSelect
  8571                           
  8572                           ;TriacRelay_B1.c: 442: if (Lights->SwFlag == 1) {
  8573  0C6F  0A78               	incf	_Lights,w
  8574  0C70  0084               	movwf	4
  8575  0C71  1383               	bcf	3,7	;select IRP bank0
  8576  0C72  1D00               	btfss	0,2
  8577  0C73  0008               	return
  8578                           
  8579                           ;TriacRelay_B1.c: 443: Lights->SwFlag = 0;
  8580  0C74  0A78               	incf	_Lights,w
  8581  0C75  0084               	movwf	4
  8582  0C76  1100               	bcf	0,2
  8583                           
  8584                           ;TriacRelay_B1.c: 444: if (Lights->SwStatus == 0) {
  8585  0C77  0A78               	incf	_Lights,w
  8586  0C78  0084               	movwf	4
  8587  0C79  1980               	btfsc	0,3
  8588  0C7A  0008               	return
  8589                           
  8590                           ;TriacRelay_B1.c: 445: setLights_Trigger(sw, 0);
  8591  0C7B  1283               	bcf	3,5	;RP0=0, select bank0
  8592  0C7C  1303               	bcf	3,6	;RP1=0, select bank0
  8593  0C7D  01CD               	clrf	setLights_Trigger@command
  8594  0C7E  0850               	movf	setLights_SwOff@sw,w
  8595  0C7F  158A  24B6         	fcall	_setLights_Trigger
  8596  0C81  0008               	return
  8597  0C82                     __end_of_setLights_SwOff:	
  8598                           
  8599                           	psect	text55
  8600  0CB6                     __ptext55:	
  8601 ;; *************** function _setLights_Trigger *****************
  8602 ;; Defined at:
  8603 ;;		line 278 in file "../src/TriacRelay_B1.c"
  8604 ;; Parameters:    Size  Location     Type
  8605 ;;  lights          1    wreg     unsigned char 
  8606 ;;  command         1    0[BANK0 ] unsigned char 
  8607 ;; Auto vars:     Size  Location     Type
  8608 ;;  lights          1    2[BANK0 ] unsigned char 
  8609 ;; Return value:  Size  Location     Type
  8610 ;;		None               void
  8611 ;; Registers used:
  8612 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8613 ;; Tracked objects:
  8614 ;;		On entry : 0/0
  8615 ;;		On exit  : 0/0
  8616 ;;		Unchanged: 0/0
  8617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8618 ;;      Params:         0       1       0       0
  8619 ;;      Locals:         0       1       0       0
  8620 ;;      Temps:          0       1       0       0
  8621 ;;      Totals:         0       3       0       0
  8622 ;;Total ram usage:        3 bytes
  8623 ;; Hardware stack levels used:    1
  8624 ;; Hardware stack levels required when called:    3
  8625 ;; This function calls:
  8626 ;;		_LightsPointSelect
  8627 ;; This function is called by:
  8628 ;;		_setLights_SwOn
  8629 ;;		_setLights_SwOff
  8630 ;;		_setLights_ErrorClose
  8631 ;; This function uses a non-reentrant model
  8632 ;;
  8633                           
  8634                           
  8635                           ;psect for function _setLights_Trigger
  8636  0CB6                     _setLights_Trigger:	
  8637                           
  8638                           ;incstack = 0
  8639                           ; Regs used in _setLights_Trigger: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8640                           ;setLights_Trigger@lights stored from wreg
  8641  0CB6  1283               	bcf	3,5	;RP0=0, select bank0
  8642  0CB7  1303               	bcf	3,6	;RP1=0, select bank0
  8643  0CB8  00CF               	movwf	setLights_Trigger@lights
  8644                           
  8645                           ;TriacRelay_B1.c: 279: LightsPointSelect(lights);
  8646  0CB9  084F               	movf	setLights_Trigger@lights,w
  8647  0CBA  158A  234D         	fcall	_LightsPointSelect
  8648                           
  8649                           ;TriacRelay_B1.c: 280: Lights->Trigger = 1;
  8650  0CBC  0878               	movf	_Lights,w
  8651  0CBD  0084               	movwf	4
  8652  0CBE  1383               	bcf	3,7	;select IRP bank0
  8653  0CBF  1580               	bsf	0,3
  8654                           
  8655                           ;TriacRelay_B1.c: 281: Lights->Switch = command == 1 ? 1 : 0;
  8656  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  8657  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  8658  0CC2  084D               	movf	setLights_Trigger@command,w
  8659  0CC3  3A01               	xorlw	1
  8660  0CC4  3000               	movlw	0
  8661  0CC5  1903               	skipnz
  8662  0CC6  3001               	movlw	1
  8663  0CC7  00CE               	movwf	??_setLights_Trigger
  8664  0CC8  0878               	movf	_Lights,w
  8665  0CC9  0084               	movwf	4
  8666  0CCA  0ECE               	swapf	??_setLights_Trigger,f
  8667  0CCB  0800               	movf	0,w
  8668  0CCC  064E               	xorwf	??_setLights_Trigger,w
  8669  0CCD  39EF               	andlw	-17
  8670  0CCE  064E               	xorwf	??_setLights_Trigger,w
  8671  0CCF  0080               	movwf	0
  8672  0CD0  0008               	return
  8673  0CD1                     __end_of_setLights_Trigger:	
  8674                           
  8675                           	psect	text56
  8676  0B4D                     __ptext56:	
  8677 ;; *************** function _LightsPointSelect *****************
  8678 ;; Defined at:
  8679 ;;		line 10 in file "../src/TriacRelay_B1.c"
  8680 ;; Parameters:    Size  Location     Type
  8681 ;;  lights          1    wreg     unsigned char 
  8682 ;; Auto vars:     Size  Location     Type
  8683 ;;  lights          1    5[COMMON] unsigned char 
  8684 ;; Return value:  Size  Location     Type
  8685 ;;		None               void
  8686 ;; Registers used:
  8687 ;;		wreg
  8688 ;; Tracked objects:
  8689 ;;		On entry : 0/0
  8690 ;;		On exit  : 0/0
  8691 ;;		Unchanged: 0/0
  8692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8693 ;;      Params:         0       0       0       0
  8694 ;;      Locals:         1       0       0       0
  8695 ;;      Temps:          1       0       0       0
  8696 ;;      Totals:         2       0       0       0
  8697 ;;Total ram usage:        2 bytes
  8698 ;; Hardware stack levels used:    1
  8699 ;; Hardware stack levels required when called:    2
  8700 ;; This function calls:
  8701 ;;		Nothing
  8702 ;; This function is called by:
  8703 ;;		_setLights_Initialization
  8704 ;;		_setLights_Main
  8705 ;;		_Lights_Control
  8706 ;;		_getLights_Status
  8707 ;;		_setLights_Trigger
  8708 ;;		_setLights_SwOn
  8709 ;;		_setLights_SwOff
  8710 ;; This function uses a non-reentrant model
  8711 ;;
  8712                           
  8713                           
  8714                           ;psect for function _LightsPointSelect
  8715  0B4D                     _LightsPointSelect:	
  8716                           
  8717                           ;incstack = 0
  8718                           ; Regs used in _LightsPointSelect: [wreg]
  8719                           ;LightsPointSelect@lights stored from wreg
  8720  0B4D  00F5               	movwf	LightsPointSelect@lights
  8721                           
  8722                           ;TriacRelay_B1.c: 13: if (lights == 1) {
  8723  0B4E  0875               	movf	LightsPointSelect@lights,w
  8724  0B4F  3A01               	xorlw	1
  8725  0B50  1D03               	skipz
  8726  0B51  0008               	return
  8727                           
  8728                           ;TriacRelay_B1.c: 14: Lights = &Lights1;
  8729  0B52  3040               	movlw	_Lights1& (0+255)
  8730  0B53  00F4               	movwf	??_LightsPointSelect
  8731  0B54  0874               	movf	??_LightsPointSelect,w
  8732  0B55  00F8               	movwf	_Lights
  8733  0B56  0008               	return
  8734  0B57                     __end_of_LightsPointSelect:	
  8735                           
  8736                           	psect	text57
  8737  0F35                     __ptext57:	
  8738 ;; *************** function _setLED *****************
  8739 ;; Defined at:
  8740 ;;		line 81 in file "../src/LED_B1.c"
  8741 ;; Parameters:    Size  Location     Type
  8742 ;;  led             1    wreg     unsigned char 
  8743 ;;  command         1    0[BANK0 ] unsigned char 
  8744 ;; Auto vars:     Size  Location     Type
  8745 ;;  led             1    1[BANK0 ] unsigned char 
  8746 ;; Return value:  Size  Location     Type
  8747 ;;		None               void
  8748 ;; Registers used:
  8749 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8750 ;; Tracked objects:
  8751 ;;		On entry : 0/0
  8752 ;;		On exit  : 0/0
  8753 ;;		Unchanged: 0/0
  8754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8755 ;;      Params:         0       1       0       0
  8756 ;;      Locals:         0       1       0       0
  8757 ;;      Temps:          0       0       0       0
  8758 ;;      Totals:         0       2       0       0
  8759 ;;Total ram usage:        2 bytes
  8760 ;; Hardware stack levels used:    1
  8761 ;; Hardware stack levels required when called:    3
  8762 ;; This function calls:
  8763 ;;		_LedPointSelect
  8764 ;; This function is called by:
  8765 ;;		_setLED_Initialization
  8766 ;;		_setPIRLED_Main
  8767 ;;		_Exception_Main
  8768 ;;		_PIR_Main
  8769 ;;		_setLights
  8770 ;; This function uses a non-reentrant model
  8771 ;;
  8772                           
  8773                           
  8774                           ;psect for function _setLED
  8775  0F35                     _setLED:	
  8776                           
  8777                           ;incstack = 0
  8778                           ; Regs used in _setLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8779                           ;setLED@led stored from wreg
  8780  0F35  1283               	bcf	3,5	;RP0=0, select bank0
  8781  0F36  1303               	bcf	3,6	;RP1=0, select bank0
  8782  0F37  00CE               	movwf	setLED@led
  8783                           
  8784                           ;LED_B1.c: 82: LedPointSelect(led);
  8785  0F38  084E               	movf	setLED@led,w
  8786  0F39  158A  23D5  158A   	fcall	_LedPointSelect
  8787                           
  8788                           ;LED_B1.c: 83: if (command == 0) {
  8789  0F3C  1283               	bcf	3,5	;RP0=0, select bank0
  8790  0F3D  1303               	bcf	3,6	;RP1=0, select bank0
  8791  0F3E  08CD               	movf	setLED@command,f
  8792  0F3F  1D03               	skipz
  8793  0F40  2F4A               	goto	l4358
  8794                           
  8795                           ;LED_B1.c: 85: if (led == 1) {
  8796  0F41  084E               	movf	setLED@led,w
  8797  0F42  3A01               	xorlw	1
  8798  0F43  1D03               	skipz
  8799  0F44  2F46               	goto	l4354
  8800                           
  8801                           ;LED_B1.c: 89: RA6 = 1;
  8802  0F45  1705               	bsf	5,6	;volatile
  8803  0F46                     l4354:	
  8804                           
  8805                           ;LED_B1.c: 91: }
  8806                           ;LED_B1.c: 94: if (led == 2) {
  8807  0F46  084E               	movf	setLED@led,w
  8808  0F47  3A02               	xorlw	2
  8809  0F48  1903               	btfsc	3,2
  8810                           
  8811                           ;LED_B1.c: 98: RA7 = 1;
  8812  0F49  1785               	bsf	5,7	;volatile
  8813  0F4A                     l4358:	
  8814                           
  8815                           ;LED_B1.c: 100: }
  8816                           ;LED_B1.c: 120: }
  8817                           ;LED_B1.c: 121: if (command == 1) {
  8818  0F4A  084D               	movf	setLED@command,w
  8819  0F4B  3A01               	xorlw	1
  8820  0F4C  1D03               	skipz
  8821  0F4D  2F57               	goto	l4368
  8822                           
  8823                           ;LED_B1.c: 123: if (led == 1) {
  8824  0F4E  084E               	movf	setLED@led,w
  8825  0F4F  3A01               	xorlw	1
  8826  0F50  1D03               	skipz
  8827  0F51  2F53               	goto	l4364
  8828                           
  8829                           ;LED_B1.c: 127: RA6 = 0;
  8830  0F52  1305               	bcf	5,6	;volatile
  8831  0F53                     l4364:	
  8832                           
  8833                           ;LED_B1.c: 129: }
  8834                           ;LED_B1.c: 132: if (led == 2) {
  8835  0F53  084E               	movf	setLED@led,w
  8836  0F54  3A02               	xorlw	2
  8837  0F55  1903               	btfsc	3,2
  8838                           
  8839                           ;LED_B1.c: 136: RA7 = 0;
  8840  0F56  1385               	bcf	5,7	;volatile
  8841  0F57                     l4368:	
  8842                           
  8843                           ;LED_B1.c: 138: }
  8844                           ;LED_B1.c: 158: }
  8845                           ;LED_B1.c: 159: if (command == 10) {
  8846  0F57  084D               	movf	setLED@command,w
  8847  0F58  3A0A               	xorlw	10
  8848  0F59  1D03               	skipz
  8849  0F5A  2F6E               	goto	l4382
  8850                           
  8851                           ;LED_B1.c: 160: LED->GO = 0;
  8852  0F5B  0876               	movf	_LED,w
  8853  0F5C  0084               	movwf	4
  8854  0F5D  1383               	bcf	3,7	;select IRP bank0
  8855  0F5E  1080               	bcf	0,1
  8856                           
  8857                           ;LED_B1.c: 161: LED->Time = 0;
  8858  0F5F  0A76               	incf	_LED,w
  8859  0F60  0084               	movwf	4
  8860  0F61  0180               	clrf	0
  8861  0F62  0A84               	incf	4,f
  8862  0F63  0180               	clrf	0
  8863                           
  8864                           ;LED_B1.c: 163: if (led == 1) {
  8865  0F64  084E               	movf	setLED@led,w
  8866  0F65  3A01               	xorlw	1
  8867  0F66  1D03               	skipz
  8868  0F67  2F6A               	goto	l4378
  8869                           
  8870                           ;LED_B1.c: 167: RA6 = 1;
  8871  0F68  1705               	bsf	5,6	;volatile
  8872                           
  8873                           ;LED_B1.c: 169: }
  8874  0F69  2F6E               	goto	l4382
  8875  0F6A                     l4378:	
  8876                           
  8877                           ;LED_B1.c: 172: else if (led == 2) {
  8878  0F6A  084E               	movf	setLED@led,w
  8879  0F6B  3A02               	xorlw	2
  8880  0F6C  1903               	btfsc	3,2
  8881                           
  8882                           ;LED_B1.c: 176: RA7 = 1;
  8883  0F6D  1785               	bsf	5,7	;volatile
  8884  0F6E                     l4382:	
  8885                           
  8886                           ;LED_B1.c: 178: }
  8887                           ;LED_B1.c: 198: }
  8888                           ;LED_B1.c: 199: if (command == 11) {
  8889  0F6E  084D               	movf	setLED@command,w
  8890  0F6F  3A0B               	xorlw	11
  8891  0F70  1D03               	skipz
  8892  0F71  2F76               	goto	l4386
  8893                           
  8894                           ;LED_B1.c: 200: LED->GO = 1;
  8895  0F72  0876               	movf	_LED,w
  8896  0F73  0084               	movwf	4
  8897  0F74  1383               	bcf	3,7	;select IRP bank0
  8898  0F75  1480               	bsf	0,1
  8899  0F76                     l4386:	
  8900                           
  8901                           ;LED_B1.c: 201: }
  8902                           ;LED_B1.c: 205: if (command == 111) {
  8903  0F76  084D               	movf	setLED@command,w
  8904  0F77  3A6F               	xorlw	111
  8905  0F78  1D03               	skipz
  8906  0F79  2F94               	goto	l4412
  8907                           
  8908                           ;LED_B1.c: 206: PIRLED.Count = 0;
  8909  0F7A  01AB               	clrf	_PIRLED+1
  8910                           
  8911                           ;LED_B1.c: 207: PIRLED.Time = 0;
  8912  0F7B  01AC               	clrf	_PIRLED+2
  8913  0F7C  01AD               	clrf	_PIRLED+3
  8914                           
  8915                           ;LED_B1.c: 208: PIRLED.status = 0;
  8916  0F7D  122A               	bcf	_PIRLED,4
  8917                           
  8918                           ;LED_B1.c: 209: PIRLED.GO = 1;
  8919  0F7E  142A               	bsf	_PIRLED,0
  8920                           
  8921                           ;LED_B1.c: 210: PIRLED.GO1 = 0;
  8922  0F7F  10AA               	bcf	_PIRLED,1
  8923                           
  8924                           ;LED_B1.c: 211: PIRLED.GO2 = 0;
  8925  0F80  112A               	bcf	_PIRLED,2
  8926                           
  8927                           ;LED_B1.c: 212: PIRLED.GO3 = 0;
  8928  0F81  11AA               	bcf	_PIRLED,3
  8929                           
  8930                           ;LED_B1.c: 213: if (led == 1) {
  8931  0F82  084E               	movf	setLED@led,w
  8932  0F83  3A01               	xorlw	1
  8933  0F84  1D03               	skipz
  8934  0F85  2F88               	goto	l4404
  8935                           
  8936                           ;LED_B1.c: 214: PIRLED.GO1 = 1;
  8937  0F86  14AA               	bsf	_PIRLED,1
  8938                           
  8939                           ;LED_B1.c: 215: } else if (led == 2) {
  8940  0F87  0008               	return
  8941  0F88                     l4404:	
  8942  0F88  084E               	movf	setLED@led,w
  8943  0F89  3A02               	xorlw	2
  8944  0F8A  1D03               	skipz
  8945  0F8B  2F8E               	goto	l4408
  8946                           
  8947                           ;LED_B1.c: 216: PIRLED.GO2 = 1;
  8948  0F8C  152A               	bsf	_PIRLED,2
  8949                           
  8950                           ;LED_B1.c: 217: } else if (led == 3) {
  8951  0F8D  0008               	return
  8952  0F8E                     l4408:	
  8953  0F8E  084E               	movf	setLED@led,w
  8954  0F8F  3A03               	xorlw	3
  8955  0F90  1D03               	skipz
  8956  0F91  0008               	return
  8957                           
  8958                           ;LED_B1.c: 218: PIRLED.GO3 = 1;
  8959  0F92  15AA               	bsf	_PIRLED,3
  8960                           
  8961                           ;LED_B1.c: 219: }
  8962                           ;LED_B1.c: 220: } else if (command == 110) {
  8963  0F93  0008               	return
  8964  0F94                     l4412:	
  8965  0F94  084D               	movf	setLED@command,w
  8966  0F95  3A6E               	xorlw	110
  8967  0F96  1D03               	skipz
  8968  0F97  0008               	return
  8969                           
  8970                           ;LED_B1.c: 221: PIRLED.GO = 0;
  8971  0F98  102A               	bcf	_PIRLED,0
  8972  0F99  0008               	return
  8973  0F9A                     __end_of_setLED:	
  8974                           
  8975                           	psect	text58
  8976  0BD5                     __ptext58:	
  8977 ;; *************** function _LedPointSelect *****************
  8978 ;; Defined at:
  8979 ;;		line 7 in file "../src/LED_B1.c"
  8980 ;; Parameters:    Size  Location     Type
  8981 ;;  led             1    wreg     unsigned char 
  8982 ;; Auto vars:     Size  Location     Type
  8983 ;;  led             1    5[COMMON] unsigned char 
  8984 ;; Return value:  Size  Location     Type
  8985 ;;		None               void
  8986 ;; Registers used:
  8987 ;;		wreg
  8988 ;; Tracked objects:
  8989 ;;		On entry : 0/0
  8990 ;;		On exit  : 0/0
  8991 ;;		Unchanged: 0/0
  8992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8993 ;;      Params:         0       0       0       0
  8994 ;;      Locals:         1       0       0       0
  8995 ;;      Temps:          1       0       0       0
  8996 ;;      Totals:         2       0       0       0
  8997 ;;Total ram usage:        2 bytes
  8998 ;; Hardware stack levels used:    1
  8999 ;; Hardware stack levels required when called:    2
  9000 ;; This function calls:
  9001 ;;		Nothing
  9002 ;; This function is called by:
  9003 ;;		_setLED_Initialization
  9004 ;;		_setLED
  9005 ;;		_setLED_Main
  9006 ;; This function uses a non-reentrant model
  9007 ;;
  9008                           
  9009                           
  9010                           ;psect for function _LedPointSelect
  9011  0BD5                     _LedPointSelect:	
  9012                           
  9013                           ;incstack = 0
  9014                           ; Regs used in _LedPointSelect: [wreg]
  9015                           ;LedPointSelect@led stored from wreg
  9016  0BD5  00F5               	movwf	LedPointSelect@led
  9017                           
  9018                           ;LED_B1.c: 9: if (led == 1) {
  9019  0BD6  0875               	movf	LedPointSelect@led,w
  9020  0BD7  3A01               	xorlw	1
  9021  0BD8  1D03               	skipz
  9022  0BD9  2BDE               	goto	l254
  9023                           
  9024                           ;LED_B1.c: 10: LED = &VarLED1;
  9025  0BDA  3045               	movlw	_VarLED1& (0+255)
  9026  0BDB  00F4               	movwf	??_LedPointSelect
  9027  0BDC  0874               	movf	??_LedPointSelect,w
  9028  0BDD  00F6               	movwf	_LED
  9029  0BDE                     l254:	
  9030                           
  9031                           ;LED_B1.c: 11: }
  9032                           ;LED_B1.c: 14: if (led == 2) {
  9033  0BDE  0875               	movf	LedPointSelect@led,w
  9034  0BDF  3A02               	xorlw	2
  9035  0BE0  1D03               	skipz
  9036  0BE1  0008               	return
  9037                           
  9038                           ;LED_B1.c: 15: LED = &VarLED2;
  9039  0BE2  3049               	movlw	_VarLED2& (0+255)
  9040  0BE3  00F4               	movwf	??_LedPointSelect
  9041  0BE4  0874               	movf	??_LedPointSelect,w
  9042  0BE5  00F6               	movwf	_LED
  9043  0BE6  0008               	return
  9044  0BE7                     __end_of_LedPointSelect:	
  9045                           
  9046                           	psect	text59
  9047  0B44                     __ptext59:	
  9048 ;; *************** function _getMain_All_LightsStatus *****************
  9049 ;; Defined at:
  9050 ;;		line 373 in file "../src/Main_B1.c"
  9051 ;; Parameters:    Size  Location     Type
  9052 ;;		None
  9053 ;; Auto vars:     Size  Location     Type
  9054 ;;  status          1    4[COMMON] unsigned char 
  9055 ;; Return value:  Size  Location     Type
  9056 ;;                  1    wreg      unsigned char 
  9057 ;; Registers used:
  9058 ;;		wreg, status,2
  9059 ;; Tracked objects:
  9060 ;;		On entry : 0/0
  9061 ;;		On exit  : 0/0
  9062 ;;		Unchanged: 0/0
  9063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9064 ;;      Params:         0       0       0       0
  9065 ;;      Locals:         1       0       0       0
  9066 ;;      Temps:          0       0       0       0
  9067 ;;      Totals:         1       0       0       0
  9068 ;;Total ram usage:        1 bytes
  9069 ;; Hardware stack levels used:    1
  9070 ;; Hardware stack levels required when called:    2
  9071 ;; This function calls:
  9072 ;;		Nothing
  9073 ;; This function is called by:
  9074 ;;		_Exception_Main
  9075 ;;		_Load_Main
  9076 ;;		_setTemp_Main
  9077 ;;		_Lights_Main
  9078 ;; This function uses a non-reentrant model
  9079 ;;
  9080                           
  9081                           
  9082                           ;psect for function _getMain_All_LightsStatus
  9083  0B44                     _getMain_All_LightsStatus:	
  9084                           
  9085                           ;Main_B1.c: 374: char status = 0;
  9086                           
  9087                           ;incstack = 0
  9088                           ; Regs used in _getMain_All_LightsStatus: [wreg+status,2]
  9089  0B44  01F4               	clrf	getMain_All_LightsStatus@status
  9090                           
  9091                           ;Main_B1.c: 378: status = Lights1.Status == 1 ? 1 : 0;
  9092  0B45  3000               	movlw	0
  9093  0B46  1283               	bcf	3,5	;RP0=0, select bank0
  9094  0B47  1303               	bcf	3,6	;RP1=0, select bank0
  9095  0B48  1940               	btfsc	_Lights1,2
  9096  0B49  3001               	movlw	1
  9097  0B4A  00F4               	movwf	getMain_All_LightsStatus@status
  9098                           
  9099                           ;Main_B1.c: 420: return status;
  9100  0B4B  0874               	movf	getMain_All_LightsStatus@status,w
  9101  0B4C  0008               	return
  9102  0B4D                     __end_of_getMain_All_LightsStatus:	
  9103                           
  9104                           	psect	text60
  9105  0DFA                     __ptext60:	
  9106 ;; *************** function _getMain_All_Error_Status *****************
  9107 ;; Defined at:
  9108 ;;		line 424 in file "../src/Main_B1.c"
  9109 ;; Parameters:    Size  Location     Type
  9110 ;;  command         1    wreg     unsigned char 
  9111 ;; Auto vars:     Size  Location     Type
  9112 ;;  command         1    4[BANK0 ] unsigned char 
  9113 ;;  status          1    5[BANK0 ] unsigned char 
  9114 ;; Return value:  Size  Location     Type
  9115 ;;                  1    wreg      unsigned char 
  9116 ;; Registers used:
  9117 ;;		wreg, status,2, status,0
  9118 ;; Tracked objects:
  9119 ;;		On entry : 0/0
  9120 ;;		On exit  : 0/0
  9121 ;;		Unchanged: 0/0
  9122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9123 ;;      Params:         0       0       0       0
  9124 ;;      Locals:         0       6       0       0
  9125 ;;      Temps:          1       0       0       0
  9126 ;;      Totals:         1       6       0       0
  9127 ;;Total ram usage:        7 bytes
  9128 ;; Hardware stack levels used:    1
  9129 ;; Hardware stack levels required when called:    2
  9130 ;; This function calls:
  9131 ;;		Nothing
  9132 ;; This function is called by:
  9133 ;;		_Exception_Main
  9134 ;;		_Load_Main
  9135 ;;		_setTemp_Main
  9136 ;;		_PIR_Main
  9137 ;;		_setSYSC_Main
  9138 ;;		_Lights_Main
  9139 ;; This function uses a non-reentrant model
  9140 ;;
  9141                           
  9142                           
  9143                           ;psect for function _getMain_All_Error_Status
  9144  0DFA                     _getMain_All_Error_Status:	
  9145                           
  9146                           ;incstack = 0
  9147                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2+status,0]
  9148                           ;getMain_All_Error_Status@command stored from wreg
  9149  0DFA  1283               	bcf	3,5	;RP0=0, select bank0
  9150  0DFB  1303               	bcf	3,6	;RP1=0, select bank0
  9151  0DFC  00D1               	movwf	getMain_All_Error_Status@command
  9152                           
  9153                           ;Main_B1.c: 425: char status = 0;
  9154  0DFD  01D2               	clrf	getMain_All_Error_Status@status
  9155                           
  9156                           ;Main_B1.c: 428: if (status == 0 && command != 1) {
  9157  0DFE  08D2               	movf	getMain_All_Error_Status@status,f
  9158  0DFF  1D03               	skipz
  9159  0E00  2E09               	goto	l3172
  9160  0E01  0851               	movf	getMain_All_Error_Status@command,w
  9161  0E02  3A01               	xorlw	1
  9162  0E03  1903               	skipnz
  9163  0E04  2E09               	goto	l3172
  9164                           
  9165                           ;Main_B1.c: 429: status = SYSC.ERROR == 1 ? 1 : 0;
  9166  0E05  3000               	movlw	0
  9167  0E06  18A0               	btfsc	_SYSC,1
  9168  0E07  3001               	movlw	1
  9169  0E08  00D2               	movwf	getMain_All_Error_Status@status
  9170  0E09                     l3172:	
  9171                           
  9172                           ;Main_B1.c: 430: }
  9173                           ;Main_B1.c: 436: if (status == 0 && command != 2) {
  9174  0E09  08D2               	movf	getMain_All_Error_Status@status,f
  9175  0E0A  1D03               	skipz
  9176  0E0B  2E1D               	goto	l3182
  9177  0E0C  0851               	movf	getMain_All_Error_Status@command,w
  9178  0E0D  3A02               	xorlw	2
  9179  0E0E  1903               	skipnz
  9180  0E0F  2E1D               	goto	l3182
  9181                           
  9182                           ;Main_B1.c: 437: status = Temp.ERROR == 1 ? 2 : 0;
  9183  0E10  18B9               	btfsc	_Temp,1
  9184  0E11  2E15               	goto	l3180
  9185  0E12  01CD               	clrf	_getMain_All_Error_Status$2127
  9186  0E13  01CE               	clrf	_getMain_All_Error_Status$2127+1
  9187  0E14  2E19               	goto	l590
  9188  0E15                     l3180:	
  9189  0E15  3002               	movlw	2
  9190  0E16  00CD               	movwf	_getMain_All_Error_Status$2127
  9191  0E17  3000               	movlw	0
  9192  0E18  00CE               	movwf	_getMain_All_Error_Status$2127+1
  9193  0E19                     l590:	
  9194  0E19  084D               	movf	_getMain_All_Error_Status$2127,w
  9195  0E1A  00F4               	movwf	??_getMain_All_Error_Status
  9196  0E1B  0874               	movf	??_getMain_All_Error_Status,w
  9197  0E1C  00D2               	movwf	getMain_All_Error_Status@status
  9198  0E1D                     l3182:	
  9199                           
  9200                           ;Main_B1.c: 438: }
  9201                           ;Main_B1.c: 443: if (status == 0 && command != 3) {
  9202  0E1D  08D2               	movf	getMain_All_Error_Status@status,f
  9203  0E1E  1D03               	skipz
  9204  0E1F  2E36               	goto	l591
  9205  0E20  0851               	movf	getMain_All_Error_Status@command,w
  9206  0E21  3A03               	xorlw	3
  9207  0E22  1903               	skipnz
  9208  0E23  2E36               	goto	l591
  9209                           
  9210                           ;Main_B1.c: 444: status = Load.ERROR == 1 ? 3 : 0;
  9211  0E24  1683               	bsf	3,5	;RP0=1, select bank1
  9212  0E25  1303               	bcf	3,6	;RP1=0, select bank1
  9213  0E26  1ACA               	btfsc	_Load^(0+128),5
  9214  0E27  2E2D               	goto	l3190
  9215  0E28  1283               	bcf	3,5	;RP0=0, select bank0
  9216  0E29  1303               	bcf	3,6	;RP1=0, select bank0
  9217  0E2A  01CF               	clrf	_getMain_All_Error_Status$2128
  9218  0E2B  01D0               	clrf	_getMain_All_Error_Status$2128+1
  9219  0E2C  2E32               	goto	l595
  9220  0E2D                     l3190:	
  9221  0E2D  3003               	movlw	3
  9222  0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  9223  0E2F  00CF               	movwf	_getMain_All_Error_Status$2128
  9224  0E30  3000               	movlw	0
  9225  0E31  00D0               	movwf	_getMain_All_Error_Status$2128+1
  9226  0E32                     l595:	
  9227  0E32  084F               	movf	_getMain_All_Error_Status$2128,w
  9228  0E33  00F4               	movwf	??_getMain_All_Error_Status
  9229  0E34  0874               	movf	??_getMain_All_Error_Status,w
  9230  0E35  00D2               	movwf	getMain_All_Error_Status@status
  9231  0E36                     l591:	
  9232                           
  9233                           ;Main_B1.c: 445: }
  9234                           ;Main_B1.c: 455: return status;
  9235  0E36  0852               	movf	getMain_All_Error_Status@status,w
  9236  0E37  0008               	return
  9237  0E38                     __end_of_getMain_All_Error_Status:	
  9238                           
  9239                           	psect	text61
  9240  0B3B                     __ptext61:	
  9241 ;; *************** function _getAll_Lights_Line *****************
  9242 ;; Defined at:
  9243 ;;		line 310 in file "../src/TriacRelay_B1.c"
  9244 ;; Parameters:    Size  Location     Type
  9245 ;;		None
  9246 ;; Auto vars:     Size  Location     Type
  9247 ;;  line            1    4[COMMON] unsigned char 
  9248 ;; Return value:  Size  Location     Type
  9249 ;;                  1    wreg      unsigned char 
  9250 ;; Registers used:
  9251 ;;		wreg, status,2
  9252 ;; Tracked objects:
  9253 ;;		On entry : 0/0
  9254 ;;		On exit  : 0/0
  9255 ;;		Unchanged: 0/0
  9256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9257 ;;      Params:         0       0       0       0
  9258 ;;      Locals:         1       0       0       0
  9259 ;;      Temps:          0       0       0       0
  9260 ;;      Totals:         1       0       0       0
  9261 ;;Total ram usage:        1 bytes
  9262 ;; Hardware stack levels used:    1
  9263 ;; Hardware stack levels required when called:    2
  9264 ;; This function calls:
  9265 ;;		Nothing
  9266 ;; This function is called by:
  9267 ;;		_Exception_Main
  9268 ;; This function uses a non-reentrant model
  9269 ;;
  9270                           
  9271                           
  9272                           ;psect for function _getAll_Lights_Line
  9273  0B3B                     _getAll_Lights_Line:	
  9274                           
  9275                           ;TriacRelay_B1.c: 311: char line = 0;
  9276                           
  9277                           ;incstack = 0
  9278                           ; Regs used in _getAll_Lights_Line: [wreg+status,2]
  9279  0B3B  01F4               	clrf	getAll_Lights_Line@line
  9280                           
  9281                           ;TriacRelay_B1.c: 313: if (Lights1.Line == 1) {
  9282  0B3C  1283               	bcf	3,5	;RP0=0, select bank0
  9283  0B3D  1303               	bcf	3,6	;RP1=0, select bank0
  9284  0B3E  1C41               	btfss	_Lights1+1,0
  9285  0B3F  2B42               	goto	l3436
  9286                           
  9287                           ;TriacRelay_B1.c: 314: line = 1;
  9288  0B40  01F4               	clrf	getAll_Lights_Line@line
  9289  0B41  0AF4               	incf	getAll_Lights_Line@line,f
  9290  0B42                     l3436:	
  9291                           
  9292                           ;TriacRelay_B1.c: 315: }
  9293                           ;TriacRelay_B1.c: 327: return line;
  9294  0B42  0874               	movf	getAll_Lights_Line@line,w
  9295  0B43  0008               	return
  9296  0B44                     __end_of_getAll_Lights_Line:	
  9297                           
  9298                           	psect	text62
  9299  0B6C                     __ptext62:	
  9300 ;; *************** function _DetectSYSC_Signal *****************
  9301 ;; Defined at:
  9302 ;;		line 50 in file "../src/SYSC_B1.c"
  9303 ;; Parameters:    Size  Location     Type
  9304 ;;		None
  9305 ;; Auto vars:     Size  Location     Type
  9306 ;;		None
  9307 ;; Return value:  Size  Location     Type
  9308 ;;		None               void
  9309 ;; Registers used:
  9310 ;;		status,2
  9311 ;; Tracked objects:
  9312 ;;		On entry : 0/0
  9313 ;;		On exit  : 0/0
  9314 ;;		Unchanged: 0/0
  9315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9316 ;;      Params:         0       0       0       0
  9317 ;;      Locals:         0       0       0       0
  9318 ;;      Temps:          0       0       0       0
  9319 ;;      Totals:         0       0       0       0
  9320 ;;Total ram usage:        0 bytes
  9321 ;; Hardware stack levels used:    1
  9322 ;; Hardware stack levels required when called:    2
  9323 ;; This function calls:
  9324 ;;		Nothing
  9325 ;; This function is called by:
  9326 ;;		_main
  9327 ;; This function uses a non-reentrant model
  9328 ;;
  9329                           
  9330                           
  9331                           ;psect for function _DetectSYSC_Signal
  9332  0B6C                     _DetectSYSC_Signal:	
  9333                           
  9334                           ;SYSC_B1.c: 51: if (SYSC.Signal == 0) {
  9335                           
  9336                           ;incstack = 0
  9337                           ; Regs used in _DetectSYSC_Signal: [status,2]
  9338  0B6C  1283               	bcf	3,5	;RP0=0, select bank0
  9339  0B6D  1303               	bcf	3,6	;RP1=0, select bank0
  9340  0B6E  19A0               	btfsc	_SYSC,3
  9341  0B6F  2B76               	goto	l1106
  9342                           
  9343                           ;SYSC_B1.c: 52: if (RA5 == 1) {
  9344  0B70  1E85               	btfss	5,5	;volatile
  9345  0B71  0008               	return
  9346                           
  9347                           ;SYSC_B1.c: 53: SYSC.Signal = 1;
  9348  0B72  15A0               	bsf	_SYSC,3
  9349                           
  9350                           ;SYSC_B1.c: 54: SYSC.Time = 0;
  9351  0B73  01A1               	clrf	_SYSC+1
  9352  0B74  01A2               	clrf	_SYSC+2
  9353                           
  9354                           ;SYSC_B1.c: 55: }
  9355                           ;SYSC_B1.c: 56: } else {
  9356  0B75  0008               	return
  9357  0B76                     l1106:	
  9358                           
  9359                           ;SYSC_B1.c: 57: if (RA5 == 0) {
  9360  0B76  1A85               	btfsc	5,5	;volatile
  9361  0B77  0008               	return
  9362                           
  9363                           ;SYSC_B1.c: 58: SYSC.Signal = 0;
  9364  0B78  11A0               	bcf	_SYSC,3
  9365  0B79  0008               	return
  9366  0B7A                     __end_of_DetectSYSC_Signal:	
  9367                           
  9368                           	psect	text63
  9369  0DC6                     __ptext63:	
  9370 ;; *************** function _CDS_Main *****************
  9371 ;; Defined at:
  9372 ;;		line 11 in file "../src/CDS_B1.c"
  9373 ;; Parameters:    Size  Location     Type
  9374 ;;		None
  9375 ;; Auto vars:     Size  Location     Type
  9376 ;;		None
  9377 ;; Return value:  Size  Location     Type
  9378 ;;		None               void
  9379 ;; Registers used:
  9380 ;;		wreg, status,2, status,0
  9381 ;; Tracked objects:
  9382 ;;		On entry : 0/0
  9383 ;;		On exit  : 0/0
  9384 ;;		Unchanged: 0/0
  9385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9386 ;;      Params:         0       0       0       0
  9387 ;;      Locals:         0       0       0       0
  9388 ;;      Temps:          0       3       0       0
  9389 ;;      Totals:         0       3       0       0
  9390 ;;Total ram usage:        3 bytes
  9391 ;; Hardware stack levels used:    1
  9392 ;; Hardware stack levels required when called:    2
  9393 ;; This function calls:
  9394 ;;		Nothing
  9395 ;; This function is called by:
  9396 ;;		_main
  9397 ;; This function uses a non-reentrant model
  9398 ;;
  9399                           
  9400                           
  9401                           ;psect for function _CDS_Main
  9402  0DC6                     _CDS_Main:	
  9403                           
  9404                           ;CDS_B1.c: 13: if (_CDS.Enable == 1) {
  9405                           
  9406                           ;incstack = 0
  9407                           ; Regs used in _CDS_Main: [wreg+status,2+status,0]
  9408  0DC6  1283               	bcf	3,5	;RP0=0, select bank0
  9409  0DC7  1303               	bcf	3,6	;RP1=0, select bank0
  9410  0DC8  1C2E               	btfss	__CDS,0
  9411  0DC9  0008               	return
  9412                           
  9413                           ;CDS_B1.c: 14: if (_CDS.GO == 0) {
  9414  0DCA  18AE               	btfsc	__CDS,1
  9415  0DCB  2DD9               	goto	l117
  9416                           
  9417                           ;CDS_B1.c: 15: if (_CDS.ADtoGO == 0) {
  9418  0DCC  19AE               	btfsc	__CDS,3
  9419  0DCD  0008               	return
  9420                           
  9421                           ;CDS_B1.c: 16: _CDS.Time++;
  9422  0DCE  3001               	movlw	1
  9423  0DCF  00CD               	movwf	??_CDS_Main
  9424  0DD0  084D               	movf	??_CDS_Main,w
  9425  0DD1  07AF               	addwf	__CDS+1,f
  9426                           
  9427                           ;CDS_B1.c: 17: if (_CDS.Time >= (100 / 20))
  9428  0DD2  3005               	movlw	5
  9429  0DD3  022F               	subwf	__CDS+1,w
  9430  0DD4  1C03               	skipc
  9431  0DD5  0008               	return
  9432                           
  9433                           ;CDS_B1.c: 18: {
  9434                           ;CDS_B1.c: 19: _CDS.Time = 0;
  9435  0DD6  01AF               	clrf	__CDS+1
  9436                           
  9437                           ;CDS_B1.c: 20: _CDS.ADtoGO = 1;
  9438  0DD7  15AE               	bsf	__CDS,3
  9439                           
  9440                           ;CDS_B1.c: 21: }
  9441                           ;CDS_B1.c: 22: }
  9442                           ;CDS_B1.c: 23: } else {
  9443  0DD8  0008               	return
  9444  0DD9                     l117:	
  9445                           
  9446                           ;CDS_B1.c: 24: if (_CDS.GO == 1) {
  9447  0DD9  1CAE               	btfss	__CDS,1
  9448  0DDA  0008               	return
  9449                           
  9450                           ;CDS_B1.c: 25: _CDS.GO = 0;
  9451  0DDB  10AE               	bcf	__CDS,1
  9452                           
  9453                           ;CDS_B1.c: 26: if (_CDS.Status == 0) {
  9454  0DDC  1A2E               	btfsc	__CDS,4
  9455  0DDD  2DE4               	goto	l4740
  9456                           
  9457                           ;CDS_B1.c: 27: if (_CDS.SignalAD >= _CDS.VRAD) {
  9458  0DDE  0830               	movf	__CDS+2,w
  9459  0DDF  0231               	subwf	__CDS+3,w
  9460  0DE0  1C03               	skipc
  9461  0DE1  0008               	return
  9462                           
  9463                           ;CDS_B1.c: 28: _CDS.Status = 1;
  9464  0DE2  162E               	bsf	__CDS,4
  9465                           
  9466                           ;CDS_B1.c: 29: }
  9467                           ;CDS_B1.c: 30: } else {
  9468  0DE3  0008               	return
  9469  0DE4                     l4740:	
  9470                           
  9471                           ;CDS_B1.c: 31: if (_CDS.SignalAD <= (_CDS.VRAD - 100)) {
  9472  0DE4  0830               	movf	__CDS+2,w
  9473  0DE5  3E9C               	addlw	156
  9474  0DE6  00CD               	movwf	??_CDS_Main
  9475  0DE7  30FF               	movlw	255
  9476  0DE8  1803               	skipnc
  9477  0DE9  3000               	movlw	0
  9478  0DEA  00CE               	movwf	??_CDS_Main+1
  9479  0DEB  084E               	movf	??_CDS_Main+1,w
  9480  0DEC  3A80               	xorlw	128
  9481  0DED  00CF               	movwf	??_CDS_Main+2
  9482  0DEE  3080               	movlw	128
  9483  0DEF  024F               	subwf	??_CDS_Main+2,w
  9484  0DF0  1D03               	skipz
  9485  0DF1  2DF4               	goto	u5725
  9486  0DF2  0831               	movf	__CDS+3,w
  9487  0DF3  024D               	subwf	??_CDS_Main,w
  9488  0DF4                     u5725:	
  9489  0DF4  1C03               	skipc
  9490  0DF5  0008               	return
  9491                           
  9492                           ;CDS_B1.c: 32: _CDS.Status = 0;
  9493  0DF6  1283               	bcf	3,5	;RP0=0, select bank0
  9494  0DF7  1303               	bcf	3,6	;RP1=0, select bank0
  9495  0DF8  122E               	bcf	__CDS,4
  9496  0DF9  0008               	return
  9497  0DFA                     __end_of_CDS_Main:	
  9498                           
  9499                           	psect	text64
  9500  0AEA                     __ptext64:	
  9501 ;; *************** function _CDS_Initialization *****************
  9502 ;; Defined at:
  9503 ;;		line 7 in file "../src/CDS_B1.c"
  9504 ;; Parameters:    Size  Location     Type
  9505 ;;		None
  9506 ;; Auto vars:     Size  Location     Type
  9507 ;;		None
  9508 ;; Return value:  Size  Location     Type
  9509 ;;		None               void
  9510 ;; Registers used:
  9511 ;;		None
  9512 ;; Tracked objects:
  9513 ;;		On entry : 0/0
  9514 ;;		On exit  : 0/0
  9515 ;;		Unchanged: 0/0
  9516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9517 ;;      Params:         0       0       0       0
  9518 ;;      Locals:         0       0       0       0
  9519 ;;      Temps:          0       0       0       0
  9520 ;;      Totals:         0       0       0       0
  9521 ;;Total ram usage:        0 bytes
  9522 ;; Hardware stack levels used:    1
  9523 ;; Hardware stack levels required when called:    2
  9524 ;; This function calls:
  9525 ;;		Nothing
  9526 ;; This function is called by:
  9527 ;;		_main
  9528 ;; This function uses a non-reentrant model
  9529 ;;
  9530                           
  9531                           
  9532                           ;psect for function _CDS_Initialization
  9533  0AEA                     _CDS_Initialization:	
  9534                           
  9535                           ;CDS_B1.c: 8: _CDS.Enable = 1;
  9536                           
  9537                           ;incstack = 0
  9538                           ; Regs used in _CDS_Initialization: []
  9539  0AEA  1283               	bcf	3,5	;RP0=0, select bank0
  9540  0AEB  1303               	bcf	3,6	;RP1=0, select bank0
  9541  0AEC  142E               	bsf	__CDS,0
  9542  0AED  0008               	return
  9543  0AEE                     __end_of_CDS_Initialization:	
  9544                           
  9545                           	psect	text65
  9546  0C50                     __ptext65:	
  9547 ;; *************** function _ISR *****************
  9548 ;; Defined at:
  9549 ;;		line 116 in file "../src/MCU_B1.c"
  9550 ;; Parameters:    Size  Location     Type
  9551 ;;		None
  9552 ;; Auto vars:     Size  Location     Type
  9553 ;;		None
  9554 ;; Return value:  Size  Location     Type
  9555 ;;		None               void
  9556 ;; Registers used:
  9557 ;;		wreg, status,2, status,0, pclath, cstack
  9558 ;; Tracked objects:
  9559 ;;		On entry : 0/0
  9560 ;;		On exit  : 0/0
  9561 ;;		Unchanged: 0/0
  9562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9563 ;;      Params:         0       0       0       0
  9564 ;;      Locals:         0       0       0       0
  9565 ;;      Temps:          4       0       0       0
  9566 ;;      Totals:         4       0       0       0
  9567 ;;Total ram usage:        4 bytes
  9568 ;; Hardware stack levels used:    1
  9569 ;; Hardware stack levels required when called:    1
  9570 ;; This function calls:
  9571 ;;		_TMR1_ISR
  9572 ;; This function is called by:
  9573 ;;		Interrupt level 1
  9574 ;; This function uses a non-reentrant model
  9575 ;;
  9576                           
  9577                           
  9578                           ;psect for function _ISR
  9579  0C50                     _ISR:	
  9580                           
  9581                           ;MCU_B1.c: 125: if (TMR1IE == 1 && TMR1IF == 1) {
  9582  0C50  1683               	bsf	3,5	;RP0=1, select bank1
  9583  0C51  1303               	bcf	3,6	;RP1=0, select bank1
  9584  0C52  1C0C               	btfss	12,0	;volatile
  9585  0C53  2C5B               	goto	i1l426
  9586  0C54  1283               	bcf	3,5	;RP0=0, select bank0
  9587  0C55  1303               	bcf	3,6	;RP1=0, select bank0
  9588  0C56  1C0C               	btfss	12,0	;volatile
  9589  0C57  2C5B               	goto	i1l426
  9590                           
  9591                           ;MCU_B1.c: 126: TMR1_ISR();
  9592  0C58  158A  240D  158A   	fcall	_TMR1_ISR
  9593  0C5B                     i1l426:	
  9594                           ;MCU_B1.c: 127: }
  9595                           ;MCU_B1.c: 148: return;
  9596                           
  9597  0C5B  0873               	movf	??_ISR+3,w
  9598  0C5C  1283               	bcf	3,5	;RP0=0, select bank0
  9599  0C5D  1303               	bcf	3,6	;RP1=0, select bank0
  9600  0C5E  00FF               	movwf	127
  9601  0C5F  0872               	movf	??_ISR+2,w
  9602  0C60  008A               	movwf	10
  9603  0C61  0871               	movf	??_ISR+1,w
  9604  0C62  0084               	movwf	4
  9605  0C63  0E70               	swapf	??_ISR^(0+-128),w
  9606  0C64  0083               	movwf	3
  9607  0C65  0EFE               	swapf	126,f
  9608  0C66  0E7E               	swapf	126,w
  9609  0C67  0009               	retfie
  9610  0C68                     __end_of_ISR:	
  9611                           
  9612                           	psect	intentry
  9613  0004                     __pintentry:	
  9614                           ;incstack = 0
  9615                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  9616                           
  9617  0004                     interrupt_function:	
  9618  007E                     saved_w	set	btemp
  9619  0004  00FE               	movwf	btemp
  9620  0005  0E03               	swapf	3,w
  9621  0006  00F0               	movwf	??_ISR
  9622  0007  0804               	movf	4,w
  9623  0008  00F1               	movwf	??_ISR+1
  9624  0009  080A               	movf	10,w
  9625  000A  00F2               	movwf	??_ISR+2
  9626  000B  1283               	bcf	3,5	;RP0=0, select bank0
  9627  000C  1303               	bcf	3,6	;RP1=0, select bank0
  9628  000D  087F               	movf	btemp+1,w
  9629  000E  00F3               	movwf	??_ISR+3
  9630  000F  158A  2C50         	ljmp	_ISR
  9631                           
  9632                           	psect	text66
  9633  0C0D                     __ptext66:	
  9634 ;; *************** function _TMR1_ISR *****************
  9635 ;; Defined at:
  9636 ;;		line 236 in file "../src/MCU_B1.c"
  9637 ;; Parameters:    Size  Location     Type
  9638 ;;		None
  9639 ;; Auto vars:     Size  Location     Type
  9640 ;;		None
  9641 ;; Return value:  Size  Location     Type
  9642 ;;		None               void
  9643 ;; Registers used:
  9644 ;;		wreg, status,2
  9645 ;; Tracked objects:
  9646 ;;		On entry : 0/0
  9647 ;;		On exit  : 0/0
  9648 ;;		Unchanged: 0/0
  9649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9650 ;;      Params:         0       0       0       0
  9651 ;;      Locals:         0       0       0       0
  9652 ;;      Temps:          0       0       0       0
  9653 ;;      Totals:         0       0       0       0
  9654 ;;Total ram usage:        0 bytes
  9655 ;; Hardware stack levels used:    1
  9656 ;; This function calls:
  9657 ;;		Nothing
  9658 ;; This function is called by:
  9659 ;;		_ISR
  9660 ;; This function uses a non-reentrant model
  9661 ;;
  9662                           
  9663                           
  9664                           ;psect for function _TMR1_ISR
  9665  0C0D                     _TMR1_ISR:	
  9666                           
  9667                           ;MCU_B1.c: 268: Timer1.Count++;
  9668                           
  9669                           ;incstack = 0
  9670                           ; Regs used in _TMR1_ISR: [wreg+status,2]
  9671  0C0D  3001               	movlw	1
  9672  0C0E  1283               	bcf	3,5	;RP0=0, select bank0
  9673  0C0F  1303               	bcf	3,6	;RP1=0, select bank0
  9674  0C10  07B3               	addwf	_Timer1+1,f
  9675  0C11  1803               	skipnc
  9676  0C12  0AB4               	incf	_Timer1+2,f
  9677  0C13  3000               	movlw	0
  9678  0C14  07B4               	addwf	_Timer1+2,f
  9679                           
  9680                           ;MCU_B1.c: 269: if (Timer1.Count == (int)(20*10)) {
  9681  0C15  30C8               	movlw	200
  9682  0C16  0633               	xorwf	_Timer1+1,w
  9683  0C17  0434               	iorwf	_Timer1+2,w
  9684  0C18  1D03               	skipz
  9685  0C19  2C1D               	goto	i1l3678
  9686                           
  9687                           ;MCU_B1.c: 270: Timer1.Count = 0;
  9688  0C1A  01B3               	clrf	_Timer1+1
  9689  0C1B  01B4               	clrf	_Timer1+2
  9690                           
  9691                           ;MCU_B1.c: 271: Timer1.Timeout = 1;
  9692  0C1C  1432               	bsf	_Timer1,0
  9693  0C1D                     i1l3678:	
  9694                           
  9695                           ;MCU_B1.c: 272: }
  9696                           ;MCU_B1.c: 274: TMR1H = (int)((65536-1480)/256);
  9697  0C1D  30FA               	movlw	250
  9698  0C1E  008F               	movwf	15	;volatile
  9699                           
  9700                           ;MCU_B1.c: 275: TMR1L = (int)((65536-1480)%256);
  9701  0C1F  3038               	movlw	56
  9702  0C20  008E               	movwf	14	;volatile
  9703                           
  9704                           ;MCU_B1.c: 276: TMR1IF = 0;
  9705  0C21  100C               	bcf	12,0	;volatile
  9706  0C22  0008               	return
  9707  0C23                     __end_of_TMR1_ISR:	
  9708  007E                     btemp	set	126	;btemp
  9709  007E                     wtemp	set	126
  9710  007E                     wtemp0	set	126
  9711  0080                     wtemp1	set	128
  9712  0082                     wtemp2	set	130
  9713  0084                     wtemp3	set	132
  9714  0086                     wtemp4	set	134
  9715  0088                     wtemp5	set	136
  9716  007F                     wtemp6	set	127
  9717  007E                     ttemp	set	126
  9718  007E                     ttemp0	set	126
  9719  0081                     ttemp1	set	129
  9720  0084                     ttemp2	set	132
  9721  0087                     ttemp3	set	135
  9722  007F                     ttemp4	set	127
  9723  007E                     ltemp	set	126
  9724  007E                     ltemp0	set	126
  9725  0082                     ltemp1	set	130
  9726  0086                     ltemp2	set	134
  9727  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         119
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     23      68
    BANK1            80      0      70
    BANK2            16      0       0

Pointer List with Targets:

    Lights	PTR struct Lights size(1) Largest target is 5
		 -> NULL(NULL[0]), Lights1(BANK0[5]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarLED2(BANK0[4]), VarLED1(BANK0[4]), 


Critical Paths under _main in COMMON

    _getTemp_AD->_getAD
    _getPIR_AD->_getAD
    _getLoad_AD->_getAD
    _getCDS_AD->_getAD
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_getMain_All_Error_Status
    _setTemp_Main->_getMain_All_LightsStatus
    _setSYSC_Main->_getMain_All_Error_Status
    _Mcu_Initialization->_WDT_Set
    _Load_Main->___wmul
    _Load_Main->_getMain_Lights_Count
    _Load_Main->_setLoad_AH_AL_Restore
    _Load_Initialization->_setLoad_AH_AL_Restore
    _setLights_Main->_LightsPointSelect
    _setLights_Main->_getLights_Allow_Condition
    _getLights_Allow_Condition->_getLoad_OK
    _Lights_Control->_LightsPointSelect
    _setLights_Initialization->_LightsPointSelect
    _setLED_Initialization->_LedPointSelect
    _setLights_SwOn->_LightsPointSelect
    _getLights_Status->_LightsPointSelect
    _setLights_SwOff->_LightsPointSelect
    _setLights_Trigger->_LightsPointSelect
    _setLED->_LedPointSelect

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_PIR_Main
    _getPIR_AD->___awdiv
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_getMain_All_Error_Status
    _setSYSC_Main->_getMain_All_Error_Status
    _PIR_Main->_getMain_All_Error_Status
    _Load_Main->___lwdiv
    _Lights_Main->_Lights_Control
    _setLights_Main->_setLights
    _setLights->_setLED
    _Lights_Control->___awdiv
    _Lights_Initialization->_setLights_Initialization
    _LED_Main->_setPIRLED_Main
    _setPIRLED_Main->_setLED
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Exception_Main->_getMain_All_Error_Status
    _setLights_SwOn->_setLights_Trigger
    _setLights_SwOff->_setLights_Trigger

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4   24922
                                             18 BANK0      5     1      4
                 _CDS_Initialization
                           _CDS_Main
                  _DetectSYSC_Signal
                     _Exception_Main
                 _LED_Initialization
                           _LED_Main
              _Lights_Initialization
                        _Lights_Main
                _Load_Initialization
                          _Load_Main
                 _Mcu_Initialization
                 _PIR_Initialization
                           _PIR_Main
                _SYSC_Initialization
                          _SYSC_Main
                _Temp_Initialization
                          _Temp_Main
                           _WDT_Main
                          _getCDS_AD
                         _getLoad_AD
                          _getPIR_AD
                         _getTemp_AD
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           4     4      0     654
                                              0 BANK0      4     4      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getPIR_AD                                            9     8      1    2829
                                              8 BANK0      9     8      1
                            ___awdiv
                            ___lwdiv
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getLoad_AD                                           7     7      0    1053
                                              0 BANK0      7     7      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getCDS_AD                                            6     5      1     669
                                              0 BANK0      6     5      1
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                2     1      1     524
                                              4 COMMON     2     1      1
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              4 COMMON     1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0     347
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         6     6      0     347
                                              5 COMMON     1     1      0
                                              6 BANK0      5     5      0
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSC_Main                                            0     0      0     206
                       _setSYSC_Main
 ---------------------------------------------------------------------------------
 (2) _setSYSC_Main                                         0     0      0     206
           _getMain_All_Error_Status
 ---------------------------------------------------------------------------------
 (1) _SYSC_Initialization                                  0     0      0       0
             _setSYSC_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSYSC_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIR_Main                                            12    12      0    3905
                                              6 BANK0     12    12      0
                      _getCDS_Status
                   _getLights_Status
           _getMain_All_Error_Status
                             _setLED
                    _setLights_SwOff
                     _setLights_SwOn
 ---------------------------------------------------------------------------------
 (2) _getCDS_Status                                        1     1      0      23
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PIR_Initialization                                   1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Load_Main                                           10    10      0    1943
                                              7 BANK0     10    10      0
                            ___lwdiv
                             ___wmul
                    _getLight_LoadGO
               _getLight_Load_Status
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
               _getMain_Lights_Count
              _setLoad_AH_AL_Restore
 ---------------------------------------------------------------------------------
 (2) _getMain_Lights_Count                                 2     2      0      25
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _getLight_Load_Status                                 1     1      0      23
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getLight_LoadGO                                      1     1      0      23
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     290
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     857
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _Load_Initialization                                  0     0      0      90
              _setLoad_AH_AL_Restore
 ---------------------------------------------------------------------------------
 (2) _setLoad_AH_AL_Restore                                2     2      0      90
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lights_Main                                          0     0      0    4194
                     _Lights_Control
                         _getLoad_OK
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
                     _setLights_Main
 ---------------------------------------------------------------------------------
 (2) _setLights_Main                                       1     1      0    2899
                                              5 BANK0      1     1      0
                  _LightsPointSelect
          _getLights_Allow_Condition
                          _setLights
 ---------------------------------------------------------------------------------
 (3) _setLights                                            3     2      1    2636
                                              2 BANK0      3     2      1
                             _setLED
                     _setLights_Line
 ---------------------------------------------------------------------------------
 (4) _setLights_Line                                       1     1      0      44
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _getLights_Allow_Condition                            4     4      0     108
                                              5 COMMON     1     1      0
                                              0 BANK0      2     2      0
                         _getLoad_OK
 ---------------------------------------------------------------------------------
 (4) _getLoad_OK                                           1     1      0      34
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Lights_Control                                       3     3      0    1031
                                              8 BANK0      3     3      0
                  _LightsPointSelect
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     907
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lights_Initialization                                0     0      0      62
           _setLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLights_Initialization                             1     1      0      62
                                              0 BANK0      1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0    2292
                     _setPIRLED_Main
 ---------------------------------------------------------------------------------
 (2) _setPIRLED_Main                                       2     2      0    2292
                                              2 BANK0      2     2      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    2376
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    2376
                                              2 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Exception_Main                                       9     9      0    4302
                                              6 BANK0      9     9      0
                 _getAll_Lights_Line
                   _getLights_Status
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
                             _setLED
                    _setLights_SwOff
                     _setLights_SwOn
 ---------------------------------------------------------------------------------
 (2) _setLights_SwOn                                       1     1      0     621
                                              3 BANK0      1     1      0
                  _LightsPointSelect
                   _getLights_Status
                  _setLights_Trigger
 ---------------------------------------------------------------------------------
 (3) _getLights_Status                                     2     2      0      96
                                              0 BANK0      2     2      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _setLights_SwOff                                      1     1      0     494
                                              3 BANK0      1     1      0
                  _LightsPointSelect
                  _setLights_Trigger
 ---------------------------------------------------------------------------------
 (3) _setLights_Trigger                                    3     2      1     401
                                              0 BANK0      3     2      1
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _LightsPointSelect                                    2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _setLED                                               2     1      1    2252
                                              0 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (3) _LedPointSelect                                       2     2      0      62
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _getMain_All_LightsStatus                             1     1      0      24
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _getMain_All_Error_Status                             7     7      0     206
                                              4 COMMON     1     1      0
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _getAll_Lights_Line                                   1     1      0      24
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DetectSYSC_Signal                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CDS_Main                                             3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDS_Initialization
   _CDS_Main
   _DetectSYSC_Signal
   _Exception_Main
     _getAll_Lights_Line
     _getLights_Status
       _LightsPointSelect
     _getMain_All_Error_Status
     _getMain_All_LightsStatus
     _setLED
       _LedPointSelect
     _setLights_SwOff
       _LightsPointSelect
       _setLights_Trigger
         _LightsPointSelect
     _setLights_SwOn
       _LightsPointSelect
       _getLights_Status
         _LightsPointSelect
       _setLights_Trigger
         _LightsPointSelect
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setPIRLED_Main
       _setLED
         _LedPointSelect
   _Lights_Initialization
     _setLights_Initialization
       _LightsPointSelect
   _Lights_Main
     _Lights_Control
       _LightsPointSelect
       ___awdiv
     _getLoad_OK
     _getMain_All_Error_Status
     _getMain_All_LightsStatus
     _setLights_Main
       _LightsPointSelect
       _getLights_Allow_Condition
         _getLoad_OK
       _setLights
         _setLED
           _LedPointSelect
         _setLights_Line
   _Load_Initialization
     _setLoad_AH_AL_Restore
   _Load_Main
     ___lwdiv
     ___wmul
     _getLight_LoadGO
     _getLight_Load_Status
     _getMain_All_Error_Status
     _getMain_All_LightsStatus
     _getMain_Lights_Count
     _setLoad_AH_AL_Restore
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _PIR_Initialization
   _PIR_Main
     _getCDS_Status
     _getLights_Status
       _LightsPointSelect
     _getMain_All_Error_Status
     _setLED
       _LedPointSelect
     _setLights_SwOff
       _LightsPointSelect
       _setLights_Trigger
         _LightsPointSelect
     _setLights_SwOn
       _LightsPointSelect
       _getLights_Status
         _LightsPointSelect
       _setLights_Trigger
         _LightsPointSelect
   _SYSC_Initialization
     _setSYSC_Initialization
   _SYSC_Main
     _setSYSC_Main
       _getMain_All_Error_Status
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       _getMain_All_Error_Status
       _getMain_All_LightsStatus
   _WDT_Main
     _WDT_Clearing
   _getCDS_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getLoad_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getPIR_AD
     ___awdiv
     ___lwdiv
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getTemp_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_MainTimer

 _ISR (ROOT)
   _TMR1_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      94       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      44       5       85.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      46       7       87.5%
BITBANK2            10      0       0       8        0.0%
BANK2               10      0       0       9        0.0%
DATA                 0      0      94      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Tue Mar 03 09:46:15 2015

                        __CFG_CP$ON 0000                        _WDT_Clearing 0002  
         getMain_Lights_Count@count 0074                        ___awdiv@sign 0052  
                    setTemp_Main@AD 0057                                  fsr 0004  
               ___wmul@multiplicand 004F                                 l117 0DD9  
                               l254 0BDE                                 l700 0208  
                               l621 05D0                                 l710 01E1  
                               l702 005F                                 l711 01DF  
                               l703 005B                                 l704 0055  
                               l716 018B                                 l900 0243  
                               l820 074A                                 l590 0E19  
                               l591 0E36                                 l831 0746  
                               l906 027B                                 l826 06F0  
                               l595 0E32                                 l908 028E  
                               l898 03C3                                 l899 0275  
                               _GIE 005F                                 _RB2 0032  
                               _LED 0076                                 _RB3 0033  
                               _RA5 002D                                 _RA6 002E  
                               _RA7 002F                                 _PS0 0408  
                               _PS1 0409                                 _PS2 040A  
                               _ISR 0C50                                 _PSA 040B  
                               _WDT 0035                   ??_setLights_SwOff 0076  
                               _Cmd 0037              getAll_Lights_Line@line 0074  
                               fsr0 0004                                 indf 0000  
                   __end_of_ADC_Set 0B1B           __end_of_LightsPointSelect 0B57  
                  _getLights_Status 0BB3             __size_of_Lights_Control 0083  
                              ?_ISR 0070                          Load_Main@i 005C  
                              l1106 0B76                                l1258 0D02  
                              l1379 0D7D                      _Load_Main$2389 0057  
                              l3180 0E15                                l3172 0E09  
                              l3190 0E2D                                l3182 0E1D  
                              l3512 0736                                l5210 0539  
                              l5034 01F5                                l5130 02C8  
                              l3522 0745                                l3436 0B42  
                              l4404 0F88                                l4412 0F94  
                              l5220 056C                                l5204 052A  
                              l5052 0D03                                l5230 0573  
                              l4502 06CE                                l5134 02D4  
                              l5118 02B1                                l4408 0F8E  
                              l5232 05A2                                l5216 0560  
                              l5240 05C2                                l4600 0781  
                              l4520 0EE4                                l5136 02D5  
                              l5080 0265                                l3544 0E6A  
                              l3480 06F2                                l4354 0F46  
                              l5218 053D                                l4610 07A1  
                              l5162 0357                                l5154 0329  
                              l5146 0315                                l3538 0E4F  
                              l4364 0F53                                l5236 05B4  
                              l5228 0596                                l4612 07AF  
                              l4382 0F6E                                l4358 0F4A  
                              l4606 078D                                l4526 0EEF  
                              l4454 0C48                                l5166 0389  
                              l3486 0703                                l4368 0F57  
                              l4608 0799                                l4552 0F2E  
                              l4544 0F1B                                l4536 0EF7  
                              l4480 0690                                l4712 07ED  
                              l4704 07C9                                l5168 0398  
                              l3488 0706                                l4560 0CDE  
                              l4386 0F76                                l4378 0F6A  
                              l4538 0F05                                l4466 066C  
                              l4706 07D7                                l4562 0CE1  
                              l5274 0FB5                                l4740 0DE4  
                              l4628 0D6C                                l4548 0F26  
                              l4484 0697                                l4652 0DBF  
                              l4716 07F8                                l4670 0620  
                              l4566 0CE7                                l5286 0FD8  
                              l4592 0775                                l4488 06AA  
                              l4840 0449                                l4832 0433  
                              l4922 005E                                l4906 003F  
                              l4770 0E9B                                l3858 0CAC  
                              l4596 077B                                l4684 0D73  
                              l4860 0489                                l4844 0454  
                              l4836 043E                                l4828 0428  
                              l4782 0EB7                                l4870 04B7  
                              l4854 046D                                l4944 00C1  
                              l4970 014C                                l4938 0085  
                              l4778 0EAF                                l4890 050D  
                              l4980 017D                                l4884 04FF  
                              l4876 04D3                                l4798 0ED3  
                              l4976 015C                                l4988 01A8  
                              l4998 01C1               _myMain_Initialization 07FF  
                      __CFG_WDTE$ON 0000                                u3315 0E76  
                              u5205 0F06                                u5215 0F12  
                              u5055 0C07                                u5225 0F1C  
                              u6115 0083                                _PEIE 005E  
                              u5340 0796                                u5500 061C  
                              u6125 00BF                                u6215 01A0  
                              u6135 0116                                u5360 07AC  
                              u5185 0EFA                                u5525 063F  
                              u5615 07D8                                u5625 07E4  
                              u5635 07EE                                u5555 0D7E  
                              u5725 0DF4                                u5485 0608  
                              u5565 0D85                                u6710 0569  
                              u6615 037B                                u6730 059F  
                              u6715 0546                                u5595 07CC  
                              u6635 03A8                                u6565 02F3  
                              u6735 057C                                u6575 030B  
                              u6595 0342                                __CDS 002E  
           ?_setSYSC_Initialization 0070                                _WPUB 0095  
                              _SYSC 0020                                __PIR 00A0  
                              _Load 00CA                                _Temp 0039  
                              _main 0F9A                                btemp 007E  
                   __end_of_WDT_Set 0BA4                                ltemp 007E  
                              start 0011                                ttemp 007E  
                              wtemp 007E                    __end_of_CDS_Main 0DFA  
      __size_of_Temp_Initialization 0003                               ??_ISR 0070  
                 _setLights_Trigger 0CB6                       ??_Lights_Main 0076  
                     __CFG_PLLEN$ON 0000                    __end_of_LED_Main 0ADB  
                ?_setLights_Trigger 004D                    ??_setPIRLED_Main 004F  
                             ?_main 005F                     __end_of___awdiv 0F35  
                             _ADRES 001E                     ___awdiv@divisor 004D  
                             _T1CON 0010                     __end_of___lwdiv 07FF  
                             i1l426 0C5B                     ___awdiv@counter 0051  
                             _TMR1H 000F                               _TMR1L 000E  
                             _PORTA 0005                               _PORTB 0006  
                             _PORTC 0007                               _TRISA 0085  
                             _TRISB 0086                               _TRISC 0087  
           __end_of_Timeout_Counter 0C0D                               _Light 0077  
               ??_setLights_Trigger 004E                    __end_of_PIR_Main 03E1  
                  __end_of_TMR1_ISR 0C23                    __end_of_TMR1_Set 0B96  
                             _getAD 0CD1      __end_of_setSYSC_Initialization 0AF6  
    getLights_Allow_Condition@allow 004D             __end_of_getLight_LoadGO 0B01  
                  __end_of_WDT_Main 0BD5                       _LightsControl 0079  
                    __CFG_BOREN$OFF 0000        __end_of_getMain_Lights_Count 0B61  
                             pclath 000A                               ltemp0 007E  
                             ltemp1 0082                               ltemp2 0086  
                             ltemp3 0080      __size_of_setLED_Initialization 0012  
     __end_of_setLED_Initialization 0BF9                               ttemp0 007E  
                             ttemp1 0081                               ttemp2 0084  
                             ttemp3 0087                               ttemp4 007F  
                             status 0003                               wtemp0 007E  
                             wtemp1 0080                               wtemp2 0082  
                             wtemp3 0084                               wtemp4 0086  
                             wtemp5 0088                               wtemp6 007F  
                 getPIR_AD@channel1 005A                   getPIR_AD@channel2 0055  
            ?_setLoad_AH_AL_Restore 0070                   setTemp_Main@error 0053  
                    _setLights_Main 0D96                      _setLights_Line 0B7A  
                   __initialization 0013                      _setLights_SwOn 0D4C  
                __size_of_SYSC_Main 0003           __end_of_setLights_Trigger 0CD1  
                      __end_of_main 1000                    __end_of_Fosc_Set 0AFB  
    getMain_All_LightsStatus@status 0074                      _Exception_Main 050F  
                         ??_ADC_Set 0074                              ??_main 0063  
             PIR_Main@Enable_Switch 005A                 __end_of_Lights_Main 0D0B  
        __size_of_LightsPointSelect 000A            _getMain_All_LightsStatus 0B44  
                            ?_getAD 0074              ?_myMain_Initialization 0070  
                            _ADCON0 001F                              _ADCON1 009F  
                  ___awdiv@dividend 004F                           ??_WDT_Set 0074  
                            _ANSELA 0185                              _ANSELB 0186  
          _getMain_All_Error_Status 0DFA                              i1l3678 0C1D  
                            _FVRCON 009D              getLights_Status@lights 004D  
                            _PIRLED 002A                              _OSCCON 0090  
                __size_of_Load_Main 01EA                              _TMR1IE 0460  
                            _TMR1IF 0060                              _IO_Set 0C82  
              Exception_Main@i_2140 0059              getLights_Status@status 004E  
            __end_of_setLights_Main 0DC6              __end_of_setLights_Line 0B88  
            __end_of_setLights_SwOn 0D71        __size_of_SYSC_Initialization 0003  
        __end_of_Mcu_Initialization 0BB3                              _Lights 0078  
                            _Timer1 0032         __size_of_CDS_Initialization 0004  
           ??_Lights_Initialization 0076              __end_of_Exception_Main 05D1  
              Exception_Main@lights 0054                              ___wmul 0D71  
                         ??___awdiv 0074                           ??___lwdiv 0074  
              Exception_Main@status 0056                              _setLED 0F35  
                            _myMain 0025                    ___awdiv@quotient 0053  
                __size_of_Temp_Main 0003                Load_Main@LightsCount 005B  
       __end_of_Load_Initialization 0ADE     getLights_Allow_Condition@lights 0070  
                            saved_w 007E                    setLights_SwOn@sw 0050  
                  ?_Timeout_Counter 0070         getMain_Lights_Count@status1 0075  
                 __end_of_SYSC_Main 0AE4                      _Lights_Control 05D1  
           __size_of_LedPointSelect 0012                           ?_CDS_Main 0070  
                setTemp_Main@TempGO 0054                    ?_getLight_LoadGO 0070  
       __size_of_PIR_Initialization 000B             __end_of__initialization 0023  
                         ?_LED_Main 0070                       ?_my_MainTimer 0070  
                   ?_setLights_Main 0070                     ?_setLights_Line 0070  
                   ?_setLights_SwOn 0070                       ?_setSYSC_Main 0070  
                   _setLights_SwOff 0C68          __size_of_setLights_Trigger 001B  
                    __pcstackCOMMON 0070                  __size_of_getCDS_AD 0022  
                   ?_Exception_Main 0070            __end_of_getLights_Status 0BC4  
                     __end_of_getAD 0CED                           ?_PIR_Main 0070  
                         ?_TMR1_ISR 0070       __size_of_getLight_Load_Status 0006  
                         ?_TMR1_Set 0070              setLoad_AH_AL_Restore@i 0075  
                _LED_Initialization 0B1B                  __size_of_getPIR_AD 012E  
                       _Lights_Main 0CED            _setLights_Initialization 0B0D  
              _getMain_Lights_Count 0B57                           ?_WDT_Main 0070  
                 __end_of_Load_Main 0210          __end_of_set_TimeoutCleared 0B0D  
               ?_LED_Initialization 0070              __end_of_Lights_Control 0654  
                           ??_getAD 0075                 _Temp_Initialization 0AE4  
                        ??_CDS_Main 004D                          __pbssBANK0 0020  
                        __pbssBANK1 00A0                           ?_Fosc_Set 0070  
       __size_of_getAll_Lights_Line 0009                   __end_of_Temp_Main 0AEA  
                           ?_IO_Set 0070                     __CFG_VCAPEN$DIS 0000  
                    ??_my_MainTimer 0074                          ??_LED_Main 0076  
                    ??_setSYSC_Main 0075                ??_LED_Initialization 0076  
                 LedPointSelect@led 0075                          __pmaintext 0F9A  
        ?_getLights_Allow_Condition 0070                ?_Temp_Initialization 0070  
              PIR_Main@LightsStatus 005D                             ?___wmul 004D  
                        ??_PIR_Main 0053                          ??_TMR1_ISR 0070  
                     ?_setTemp_Main 0070                  __size_of_setLights 007F  
                        _getLoad_AD 0E7C                          ??_TMR1_Set 0074  
                        __pintentry 0004                          _getLoad_OK 0B23  
                           ?_setLED 004D             setLights_Trigger@lights 004F  
             ?_getMain_Lights_Count 0070                             _ADC_Set 0B14  
                        _getTemp_AD 0D0B                          ??_WDT_Main 0074  
            __size_of_getCDS_Status 0008                     ?_Lights_Control 0070  
                 __end_of_getCDS_AD 0D4C                             _WDT_Set 0B96  
                     getPIR_AD@VRAD 005C                          ??_Fosc_Set 0074  
                 __end_of_getPIR_AD 050F             ??_setLoad_AH_AL_Restore 0074  
           __end_of_setLights_SwOff 0C82      _getLights_Allow_Condition$4224 004E  
                   __size_of_IO_Set 001A                          getCDS_AD@i 0050  
                        getCDS_AD@j 0051                             _Lights1 0040  
                           _VarLED1 0045                             _VarLED2 0049  
             ??_Temp_Initialization 0074                      ??_setTemp_Main 0075  
                           ___awdiv 0ED8                     __size_of___wmul 0025  
                           ___lwdiv 07BF          ??_getMain_All_LightsStatus 0074  
                       PIR_Main@cds 0059                     __size_of_setLED 0065  
                           __ptext0 0000                             __ptext1 0C9C  
                           __ptext2 07FF                             __ptext3 0D0B  
                           __ptext4 03E1                             __ptext5 0E7C  
                           __ptext6 0D2A                             __ptext7 0CD1  
                           __ptext8 0B07                             __ptext9 0BF9  
                        getPIR_AD@i 005D                          getPIR_AD@j 0059  
                      __size_of_ISR 0018          ??_getMain_All_Error_Status 0074  
               _SYSC_Initialization 0ADE             ??_myMain_Initialization 0074  
          ??_setTemp_Initialization 0074                      _LedPointSelect 0BD5  
                   getTemp_AD@ADRES 0050                             clrloop0 0B34  
                 __end_of_setLights 06D3                end_of_initialization 0023  
                     _getCDS_Status 0B2B                ?_SYSC_Initialization 0070  
             _setLED_Initialization 0BE7                   setLights_SwOff@sw 0050  
                       ?_getLoad_AD 0070      __size_of_Lights_Initialization 0004  
                       ?_getLoad_OK 0070              ??_getMain_Lights_Count 0074  
     __end_of_Lights_Initialization 0AF2                         ?_getTemp_AD 0070  
          setLED_Initialization@led 004F             setTemp_Main@DangerValue 0056  
                _Mcu_Initialization 0BA4                __end_of_my_MainTimer 0CB6  
              __end_of_setSYSC_Main 0E7C              __end_of_LedPointSelect 0BE7  
          Load_Main@ErrorCountValue 0059                 setPIRLED_Main@count 0050  
               ?_Mcu_Initialization 0070             __size_of_setPIRLED_Main 0071  
                  ??_setLights_Main 0076                    ??_setLights_Line 0074  
              setLights_Main@lights 0052                    ??_setLights_SwOn 0076  
                         _SYSC_Main 0AE1     getMain_All_Error_Status@command 0051  
                 __size_of_CDS_Main 0034                      ?_getCDS_Status 0070  
                  ?_setLights_SwOff 0070               ??_SYSC_Initialization 0074  
                  ??_Exception_Main 0053                      __end_of_IO_Set 0C9C  
        __end_of_CDS_Initialization 0AEE          ??_setLights_Initialization 0076  
                 __size_of_LED_Main 0003                ??_Mcu_Initialization 0075  
                     ?_WDT_Clearing 0070                   ?_getLights_Status 0070  
                      ?_Lights_Main 0070                      __end_of___wmul 0D96  
                 __size_of_PIR_Main 01D1                   __size_of_TMR1_ISR 0016  
                ??_getLights_Status 0076                   __size_of_TMR1_Set 000E  
                    __end_of_setLED 0F9A            ??_setSYSC_Initialization 0074  
                 __size_of_WDT_Main 0011                 start_initialization 0013  
                   ?_LedPointSelect 0070                setLights_Line@lights 0074  
                         _Load_Main 0026                         __end_of_ISR 0C68  
        __end_of_PIR_Initialization 0B6C        __size_of_Load_Initialization 0003  
      __end_of_getLight_Load_Status 0B07     __size_of_setTemp_Initialization 0001  
               getCDS_Status@status 0074                __end_of_setTemp_Main 074E  
               __size_of_getLoad_AD 005C                 __size_of_getLoad_OK 0008  
                        ?_SYSC_Main 0070                  _set_TimeoutCleared 0B07  
                          ??_IO_Set 0074            __size_of_Timeout_Counter 0014  
               __size_of_getTemp_AD 001F              ?_setLED_Initialization 0070  
                 __size_of_Fosc_Set 0005            __size_of_getLight_LoadGO 0006  
                         _Temp_Main 0AE7                     setLights@lights 0051  
               ?_set_TimeoutCleared 0070                      ??_WDT_Clearing 0074  
       ??_getLights_Allow_Condition 0075                 Exception_Main@count 0055  
                   setLights@status 004F                 Exception_Main@error 005B  
                          ??___wmul 0074    __end_of_getMain_All_LightsStatus 0B4D  
                          ??_setLED 0076                            ?_ADC_Set 0070  
                  ??_Lights_Control 0055    __end_of_getMain_All_Error_Status 0E38  
                       __pbssCOMMON 0076             Load_Main@Load_RunStatus 005A  
                         ___latbits 0001                          ?_Load_Main 0070  
                     __pcstackBANK0 004D                ??_set_TimeoutCleared 0074  
        __end_of_getAll_Lights_Line 0B44                            ?_WDT_Set 0070  
                   ??_getCDS_Status 0074                       PIR_Main@error 0058  
                         _getCDS_AD 0D2A      __size_of_setLoad_AH_AL_Restore 0016  
     __end_of_setLoad_AH_AL_Restore 0C39                           _getPIR_AD 03E1  
       __size_of_LED_Initialization 0008                     Exception_Main@i 0057  
                        ?_Temp_Main 0070                    ___lwdiv@dividend 004F  
                    Load_Main@error 0056              _setTemp_Initialization 0AD7  
                     _PIR_Main$2856 005B                            ?___awdiv 004D  
             __size_of_my_MainTimer 001A                            ?___lwdiv 004D  
             __size_of_setSYSC_Main 0044            setLights_Trigger@command 004D  
   __size_of_setSYSC_Initialization 0004           _getLights_Allow_Condition 0C39  
    __size_of_myMain_Initialization 0001       __end_of_myMain_Initialization 0800  
                    __size_of_getAD 001C                    ___lwdiv@quotient 0052  
                    _setPIRLED_Main 074E                            _CDS_Main 0DC6  
                       ??_SYSC_Main 0075         __end_of_Temp_Initialization 0AE7  
                 interrupt_function 0004                          ?_getCDS_AD 004D  
                    ___wmul@product 0074                            _LED_Main 0AD8  
                         _setLights 0654                           clear_ram0 0B33  
  __end_of_setLights_Initialization 0B14                        _my_MainTimer 0C9C  
                        ?_getPIR_AD 0055                        _setSYSC_Main 0E38  
                          _GO_nDONE 00F9                   ??_Timeout_Counter 0074  
              PIR_Main@TriggerValue 005E                            _PIR_Main 0210  
                      ??_getLoad_AD 004D                            _TMR1_ISR 0C0D  
                      ??_getLoad_OK 0074                _getLight_Load_Status 0B01  
                          _TMR1_Set 0B88                   ??_getLight_LoadGO 0074  
                      ??_getTemp_AD 004D                            _WDT_Main 0BC4  
                  __size_of_ADC_Set 0007                   ___wmul@multiplier 004D  
                    getPIR_AD@VRAD1 005B                __size_of_Lights_Main 001E  
             __size_of_setTemp_Main 007B                         ??_Load_Main 0054  
            __end_of_setPIRLED_Main 07BF      getMain_All_Error_Status@status 0052  
                       getAD@adcon0 0075                         getAD@adcon1 0074  
              __end_of_WDT_Clearing 0004   __size_of_getMain_All_LightsStatus 0009  
         ?_getMain_All_LightsStatus 0070                            _Fosc_Set 0AF6  
                  __size_of_WDT_Set 000E                  __end_of_getLoad_AD 0ED8  
                __end_of_getLoad_OK 0B2B   __size_of_getMain_All_Error_Status 003E  
         ?_getMain_All_Error_Status 0070                          ?_setLights 004F  
                __end_of_getTemp_AD 0D2A              _setSYSC_Initialization 0AF2  
                 getLoad_AD@channel 004F                   _DetectSYSC_Signal 0B6C  
                          _SwDetect 0038                         ??_Temp_Main 0076  
     _getMain_All_Error_Status$2127 004D       _getMain_All_Error_Status$2128 004F  
               _Load_Initialization 0ADB                  ?_DetectSYSC_Signal 0070  
                         setLED@led 004E               ?_getLight_Load_Status 0070  
                      _setTemp_Main 06D3                    __size_of___awdiv 005D  
    getLight_Load_Status@loadstatus 0074                    __size_of___lwdiv 0040  
                  ??_LedPointSelect 0074       __size_of_getMain_Lights_Count 000A  
               ??_DetectSYSC_Signal 0074                  _CDS_Initialization 0AEA  
             _Lights_Initialization 0AEE                   getTemp_AD@channel 004F  
                   ?_setPIRLED_Main 0070                     ___lwdiv@divisor 004D  
              ?_Load_Initialization 0070                 ?_CDS_Initialization 0070  
                   ___lwdiv@counter 0051                            __ptext10 0BC4  
                          __ptext11 0002                            __ptext20 0210  
                          __ptext12 0AE7                            __ptext21 0B2B  
                          __ptext13 06D3                            __ptext30 0B57  
                          __ptext22 0B61                            __ptext14 0AE4  
                          __ptext31 0B01                            __ptext23 0BA4  
                          __ptext15 0AD7                            __ptext40 0B7A  
                          __ptext32 0AFB                            __ptext24 0B96  
                          __ptext16 0AE1                            __ptext41 0C39  
                          __ptext33 0D71                            __ptext25 0B88  
                          __ptext17 0E38                            __ptext50 0BE7  
                          __ptext42 0B23                            __ptext34 07BF  
                          __ptext26 0C82                            __ptext18 0ADE  
                          __ptext51 050F                            __ptext43 05D1  
                          __ptext35 0ADB                            __ptext27 0AF6  
                          __ptext19 0AF2                            __ptext60 0DFA  
                          __ptext52 0D4C                            __ptext44 0ED8  
                          __ptext36 0C23                            __ptext28 0B14  
                          __ptext61 0B3B                            __ptext53 0BB3  
                          __ptext45 0AEE                            __ptext37 0CED  
                          __ptext29 0026                            __ptext62 0B6C  
                          __ptext54 0C68                            __ptext46 0B0D  
                          __ptext38 0D96                            __ptext63 0DC6  
                          __ptext55 0CB6                            __ptext47 0AD8  
                          __ptext39 0654                            __ptext64 0AEA  
                          __ptext56 0B4D                            __ptext48 074E  
                          __ptext65 0C50                            __ptext57 0F35  
                          __ptext49 0B1B                            __ptext66 0C0D  
                          __ptext58 0BD5                            __ptext59 0B44  
         __size_of_getLights_Status 0011         __end_of_SYSC_Initialization 0AE1  
           ??_setLED_Initialization 0076                         ??_getCDS_AD 004E  
                     setLED@command 004D           __end_of_DetectSYSC_Signal 0B7A  
                     __size_of_main 0066                         ??_getPIR_AD 0056  
                _PIR_Initialization 0B61                ??_CDS_Initialization 0074  
       __size_of_Mcu_Initialization 000F            __size_of_setLights_SwOff 001A  
                      getLoad_OK@ok 0074                 ?_PIR_Initialization 0070  
                          main@argc 005F                            main@argv 0061  
 __size_of_setLights_Initialization 0007           ?_setLights_Initialization 0070  
             ??_Load_Initialization 0076                Lights_Control@lights 0057  
              ??_PIR_Initialization 0074                            intlevel1 0000  
__size_of_getLights_Allow_Condition 0017               setTemp_Main@SafeValue 0055  
                       ??_setLights 0050             ?_setTemp_Initialization 0070  
           LightsPointSelect@lights 0075                  _getAll_Lights_Line 0B3B  
                   getLoad_AD@ADRES 0052              ??_getLight_Load_Status 0074  
                       getLoad_AD@i 0053                         getLoad_AD@j 0051  
                       getLoad_AD@k 0050             __size_of_setLights_Main 0030  
           __size_of_setLights_Line 000E             __size_of_setLights_SwOn 0025  
               ?_getAll_Lights_Line 0070               getLight_LoadGO@loadgo 0074  
            ?_Lights_Initialization 0070             __size_of_Exception_Main 00C2  
             __size_of_WDT_Clearing 0002      setLights_Initialization@lights 004D  
       __size_of_set_TimeoutCleared 0006                   _LightsPointSelect 0B4D  
              ??_getAll_Lights_Line 0074                  __CFG_FOSC$INTOSCIO 0000  
                ?_LightsPointSelect 0070                     _Timeout_Counter 0BF9  
        __end_of_LED_Initialization 0B23               __end_of_getCDS_Status 0B33  
    __end_of_setTemp_Initialization 0AD8          __size_of_DetectSYSC_Signal 000E  
                   _getLight_LoadGO 0AFB                   getCDS_AD@channel1 0052  
                 getCDS_AD@channel2 004D   __end_of_getLights_Allow_Condition 0C50  
               ??_LightsPointSelect 0074               _setLoad_AH_AL_Restore 0C23  
