

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Feb 16 13:38:05 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F723A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,inline,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,inline,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,inline,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,inline,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,inline,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,inline,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,delta=2
    61                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text50,local,class=CODE,merge=1,delta=2
    63                           	psect	text51,local,class=CODE,merge=1,delta=2
    64                           	psect	text52,local,class=CODE,merge=1,delta=2
    65                           	psect	text53,local,class=CODE,merge=1,delta=2
    66                           	psect	text54,local,class=CODE,merge=1,delta=2
    67                           	psect	text55,local,class=CODE,merge=1,delta=2
    68                           	psect	text56,local,class=CODE,merge=1,delta=2
    69                           	psect	text57,local,class=CODE,merge=1,delta=2
    70                           	psect	text58,local,class=CODE,merge=1,delta=2
    71                           	psect	text59,local,class=CODE,merge=1,delta=2
    72                           	psect	text60,local,class=CODE,merge=1,delta=2
    73                           	psect	text61,local,class=CODE,merge=1,delta=2
    74                           	psect	text62,local,class=CODE,merge=1,inline,delta=2
    75                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
    76                           	psect	text64,local,class=CODE,merge=1,inline,delta=2
    77                           	psect	text65,local,class=CODE,merge=1,delta=2
    78                           	psect	intentry,global,class=CODE,delta=2
    79                           	psect	text66,local,class=CODE,merge=1,inline,delta=2
    80                           	dabs	1,0x7E,2
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0089                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  008F                     	;# 
   124  0090                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0095                     	;# 
   131  0095                     	;# 
   132  0096                     	;# 
   133  0096                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009F                     	;# 
   139  0108                     	;# 
   140  0109                     	;# 
   141  010C                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  0185                     	;# 
   148  0186                     	;# 
   149  018C                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0089                     	;# 
   189  008C                     	;# 
   190  008D                     	;# 
   191  008E                     	;# 
   192  008F                     	;# 
   193  0090                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0096                     	;# 
   203  0098                     	;# 
   204  0099                     	;# 
   205  009C                     	;# 
   206  009D                     	;# 
   207  009F                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0186                     	;# 
   218  018C                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000D                     	;# 
   232  000E                     	;# 
   233  000E                     	;# 
   234  000F                     	;# 
   235  0010                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0014                     	;# 
   240  0015                     	;# 
   241  0015                     	;# 
   242  0016                     	;# 
   243  0017                     	;# 
   244  0018                     	;# 
   245  0019                     	;# 
   246  001A                     	;# 
   247  001B                     	;# 
   248  001B                     	;# 
   249  001C                     	;# 
   250  001D                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  0081                     	;# 
   254  0085                     	;# 
   255  0086                     	;# 
   256  0087                     	;# 
   257  0089                     	;# 
   258  008C                     	;# 
   259  008D                     	;# 
   260  008E                     	;# 
   261  008F                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0096                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009F                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0186                     	;# 
   287  018C                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0089                     	;# 
   327  008C                     	;# 
   328  008D                     	;# 
   329  008E                     	;# 
   330  008F                     	;# 
   331  0090                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0094                     	;# 
   337  0095                     	;# 
   338  0095                     	;# 
   339  0096                     	;# 
   340  0096                     	;# 
   341  0098                     	;# 
   342  0099                     	;# 
   343  009C                     	;# 
   344  009D                     	;# 
   345  009F                     	;# 
   346  0108                     	;# 
   347  0109                     	;# 
   348  010C                     	;# 
   349  010C                     	;# 
   350  010D                     	;# 
   351  010D                     	;# 
   352  010E                     	;# 
   353  010F                     	;# 
   354  0185                     	;# 
   355  0186                     	;# 
   356  018C                     	;# 
   357  0000                     	;# 
   358  0001                     	;# 
   359  0002                     	;# 
   360  0003                     	;# 
   361  0004                     	;# 
   362  0005                     	;# 
   363  0006                     	;# 
   364  0007                     	;# 
   365  0009                     	;# 
   366  000A                     	;# 
   367  000B                     	;# 
   368  000C                     	;# 
   369  000D                     	;# 
   370  000E                     	;# 
   371  000E                     	;# 
   372  000F                     	;# 
   373  0010                     	;# 
   374  0011                     	;# 
   375  0012                     	;# 
   376  0013                     	;# 
   377  0014                     	;# 
   378  0015                     	;# 
   379  0015                     	;# 
   380  0016                     	;# 
   381  0017                     	;# 
   382  0018                     	;# 
   383  0019                     	;# 
   384  001A                     	;# 
   385  001B                     	;# 
   386  001B                     	;# 
   387  001C                     	;# 
   388  001D                     	;# 
   389  001E                     	;# 
   390  001F                     	;# 
   391  0081                     	;# 
   392  0085                     	;# 
   393  0086                     	;# 
   394  0087                     	;# 
   395  0089                     	;# 
   396  008C                     	;# 
   397  008D                     	;# 
   398  008E                     	;# 
   399  008F                     	;# 
   400  0090                     	;# 
   401  0091                     	;# 
   402  0092                     	;# 
   403  0093                     	;# 
   404  0093                     	;# 
   405  0094                     	;# 
   406  0095                     	;# 
   407  0095                     	;# 
   408  0096                     	;# 
   409  0096                     	;# 
   410  0098                     	;# 
   411  0099                     	;# 
   412  009C                     	;# 
   413  009D                     	;# 
   414  009F                     	;# 
   415  0108                     	;# 
   416  0109                     	;# 
   417  010C                     	;# 
   418  010C                     	;# 
   419  010D                     	;# 
   420  010D                     	;# 
   421  010E                     	;# 
   422  010F                     	;# 
   423  0185                     	;# 
   424  0186                     	;# 
   425  018C                     	;# 
   426  0000                     	;# 
   427  0001                     	;# 
   428  0002                     	;# 
   429  0003                     	;# 
   430  0004                     	;# 
   431  0005                     	;# 
   432  0006                     	;# 
   433  0007                     	;# 
   434  0009                     	;# 
   435  000A                     	;# 
   436  000B                     	;# 
   437  000C                     	;# 
   438  000D                     	;# 
   439  000E                     	;# 
   440  000E                     	;# 
   441  000F                     	;# 
   442  0010                     	;# 
   443  0011                     	;# 
   444  0012                     	;# 
   445  0013                     	;# 
   446  0014                     	;# 
   447  0015                     	;# 
   448  0015                     	;# 
   449  0016                     	;# 
   450  0017                     	;# 
   451  0018                     	;# 
   452  0019                     	;# 
   453  001A                     	;# 
   454  001B                     	;# 
   455  001B                     	;# 
   456  001C                     	;# 
   457  001D                     	;# 
   458  001E                     	;# 
   459  001F                     	;# 
   460  0081                     	;# 
   461  0085                     	;# 
   462  0086                     	;# 
   463  0087                     	;# 
   464  0089                     	;# 
   465  008C                     	;# 
   466  008D                     	;# 
   467  008E                     	;# 
   468  008F                     	;# 
   469  0090                     	;# 
   470  0091                     	;# 
   471  0092                     	;# 
   472  0093                     	;# 
   473  0093                     	;# 
   474  0094                     	;# 
   475  0095                     	;# 
   476  0095                     	;# 
   477  0096                     	;# 
   478  0096                     	;# 
   479  0098                     	;# 
   480  0099                     	;# 
   481  009C                     	;# 
   482  009D                     	;# 
   483  009F                     	;# 
   484  0108                     	;# 
   485  0109                     	;# 
   486  010C                     	;# 
   487  010C                     	;# 
   488  010D                     	;# 
   489  010D                     	;# 
   490  010E                     	;# 
   491  010F                     	;# 
   492  0185                     	;# 
   493  0186                     	;# 
   494  018C                     	;# 
   495  0000                     	;# 
   496  0001                     	;# 
   497  0002                     	;# 
   498  0003                     	;# 
   499  0004                     	;# 
   500  0005                     	;# 
   501  0006                     	;# 
   502  0007                     	;# 
   503  0009                     	;# 
   504  000A                     	;# 
   505  000B                     	;# 
   506  000C                     	;# 
   507  000D                     	;# 
   508  000E                     	;# 
   509  000E                     	;# 
   510  000F                     	;# 
   511  0010                     	;# 
   512  0011                     	;# 
   513  0012                     	;# 
   514  0013                     	;# 
   515  0014                     	;# 
   516  0015                     	;# 
   517  0015                     	;# 
   518  0016                     	;# 
   519  0017                     	;# 
   520  0018                     	;# 
   521  0019                     	;# 
   522  001A                     	;# 
   523  001B                     	;# 
   524  001B                     	;# 
   525  001C                     	;# 
   526  001D                     	;# 
   527  001E                     	;# 
   528  001F                     	;# 
   529  0081                     	;# 
   530  0085                     	;# 
   531  0086                     	;# 
   532  0087                     	;# 
   533  0089                     	;# 
   534  008C                     	;# 
   535  008D                     	;# 
   536  008E                     	;# 
   537  008F                     	;# 
   538  0090                     	;# 
   539  0091                     	;# 
   540  0092                     	;# 
   541  0093                     	;# 
   542  0093                     	;# 
   543  0094                     	;# 
   544  0095                     	;# 
   545  0095                     	;# 
   546  0096                     	;# 
   547  0096                     	;# 
   548  0098                     	;# 
   549  0099                     	;# 
   550  009C                     	;# 
   551  009D                     	;# 
   552  009F                     	;# 
   553  0108                     	;# 
   554  0109                     	;# 
   555  010C                     	;# 
   556  010C                     	;# 
   557  010D                     	;# 
   558  010D                     	;# 
   559  010E                     	;# 
   560  010F                     	;# 
   561  0185                     	;# 
   562  0186                     	;# 
   563  018C                     	;# 
   564  0000                     	;# 
   565  0001                     	;# 
   566  0002                     	;# 
   567  0003                     	;# 
   568  0004                     	;# 
   569  0005                     	;# 
   570  0006                     	;# 
   571  0007                     	;# 
   572  0009                     	;# 
   573  000A                     	;# 
   574  000B                     	;# 
   575  000C                     	;# 
   576  000D                     	;# 
   577  000E                     	;# 
   578  000E                     	;# 
   579  000F                     	;# 
   580  0010                     	;# 
   581  0011                     	;# 
   582  0012                     	;# 
   583  0013                     	;# 
   584  0014                     	;# 
   585  0015                     	;# 
   586  0015                     	;# 
   587  0016                     	;# 
   588  0017                     	;# 
   589  0018                     	;# 
   590  0019                     	;# 
   591  001A                     	;# 
   592  001B                     	;# 
   593  001B                     	;# 
   594  001C                     	;# 
   595  001D                     	;# 
   596  001E                     	;# 
   597  001F                     	;# 
   598  0081                     	;# 
   599  0085                     	;# 
   600  0086                     	;# 
   601  0087                     	;# 
   602  0089                     	;# 
   603  008C                     	;# 
   604  008D                     	;# 
   605  008E                     	;# 
   606  008F                     	;# 
   607  0090                     	;# 
   608  0091                     	;# 
   609  0092                     	;# 
   610  0093                     	;# 
   611  0093                     	;# 
   612  0094                     	;# 
   613  0095                     	;# 
   614  0095                     	;# 
   615  0096                     	;# 
   616  0096                     	;# 
   617  0098                     	;# 
   618  0099                     	;# 
   619  009C                     	;# 
   620  009D                     	;# 
   621  009F                     	;# 
   622  0108                     	;# 
   623  0109                     	;# 
   624  010C                     	;# 
   625  010C                     	;# 
   626  010D                     	;# 
   627  010D                     	;# 
   628  010E                     	;# 
   629  010F                     	;# 
   630  0185                     	;# 
   631  0186                     	;# 
   632  018C                     	;# 
   633  0000                     	;# 
   634  0001                     	;# 
   635  0002                     	;# 
   636  0003                     	;# 
   637  0004                     	;# 
   638  0005                     	;# 
   639  0006                     	;# 
   640  0007                     	;# 
   641  0009                     	;# 
   642  000A                     	;# 
   643  000B                     	;# 
   644  000C                     	;# 
   645  000D                     	;# 
   646  000E                     	;# 
   647  000E                     	;# 
   648  000F                     	;# 
   649  0010                     	;# 
   650  0011                     	;# 
   651  0012                     	;# 
   652  0013                     	;# 
   653  0014                     	;# 
   654  0015                     	;# 
   655  0015                     	;# 
   656  0016                     	;# 
   657  0017                     	;# 
   658  0018                     	;# 
   659  0019                     	;# 
   660  001A                     	;# 
   661  001B                     	;# 
   662  001B                     	;# 
   663  001C                     	;# 
   664  001D                     	;# 
   665  001E                     	;# 
   666  001F                     	;# 
   667  0081                     	;# 
   668  0085                     	;# 
   669  0086                     	;# 
   670  0087                     	;# 
   671  0089                     	;# 
   672  008C                     	;# 
   673  008D                     	;# 
   674  008E                     	;# 
   675  008F                     	;# 
   676  0090                     	;# 
   677  0091                     	;# 
   678  0092                     	;# 
   679  0093                     	;# 
   680  0093                     	;# 
   681  0094                     	;# 
   682  0095                     	;# 
   683  0095                     	;# 
   684  0096                     	;# 
   685  0096                     	;# 
   686  0098                     	;# 
   687  0099                     	;# 
   688  009C                     	;# 
   689  009D                     	;# 
   690  009F                     	;# 
   691  0108                     	;# 
   692  0109                     	;# 
   693  010C                     	;# 
   694  010C                     	;# 
   695  010D                     	;# 
   696  010D                     	;# 
   697  010E                     	;# 
   698  010F                     	;# 
   699  0185                     	;# 
   700  0186                     	;# 
   701  018C                     	;# 
   702  0000                     	;# 
   703  0001                     	;# 
   704  0002                     	;# 
   705  0003                     	;# 
   706  0004                     	;# 
   707  0005                     	;# 
   708  0006                     	;# 
   709  0007                     	;# 
   710  0009                     	;# 
   711  000A                     	;# 
   712  000B                     	;# 
   713  000C                     	;# 
   714  000D                     	;# 
   715  000E                     	;# 
   716  000E                     	;# 
   717  000F                     	;# 
   718  0010                     	;# 
   719  0011                     	;# 
   720  0012                     	;# 
   721  0013                     	;# 
   722  0014                     	;# 
   723  0015                     	;# 
   724  0015                     	;# 
   725  0016                     	;# 
   726  0017                     	;# 
   727  0018                     	;# 
   728  0019                     	;# 
   729  001A                     	;# 
   730  001B                     	;# 
   731  001B                     	;# 
   732  001C                     	;# 
   733  001D                     	;# 
   734  001E                     	;# 
   735  001F                     	;# 
   736  0081                     	;# 
   737  0085                     	;# 
   738  0086                     	;# 
   739  0087                     	;# 
   740  0089                     	;# 
   741  008C                     	;# 
   742  008D                     	;# 
   743  008E                     	;# 
   744  008F                     	;# 
   745  0090                     	;# 
   746  0091                     	;# 
   747  0092                     	;# 
   748  0093                     	;# 
   749  0093                     	;# 
   750  0094                     	;# 
   751  0095                     	;# 
   752  0095                     	;# 
   753  0096                     	;# 
   754  0096                     	;# 
   755  0098                     	;# 
   756  0099                     	;# 
   757  009C                     	;# 
   758  009D                     	;# 
   759  009F                     	;# 
   760  0108                     	;# 
   761  0109                     	;# 
   762  010C                     	;# 
   763  010C                     	;# 
   764  010D                     	;# 
   765  010D                     	;# 
   766  010E                     	;# 
   767  010F                     	;# 
   768  0185                     	;# 
   769  0186                     	;# 
   770  018C                     	;# 
   771  0000                     	;# 
   772  0001                     	;# 
   773  0002                     	;# 
   774  0003                     	;# 
   775  0004                     	;# 
   776  0005                     	;# 
   777  0006                     	;# 
   778  0007                     	;# 
   779  0009                     	;# 
   780  000A                     	;# 
   781  000B                     	;# 
   782  000C                     	;# 
   783  000D                     	;# 
   784  000E                     	;# 
   785  000E                     	;# 
   786  000F                     	;# 
   787  0010                     	;# 
   788  0011                     	;# 
   789  0012                     	;# 
   790  0013                     	;# 
   791  0014                     	;# 
   792  0015                     	;# 
   793  0015                     	;# 
   794  0016                     	;# 
   795  0017                     	;# 
   796  0018                     	;# 
   797  0019                     	;# 
   798  001A                     	;# 
   799  001B                     	;# 
   800  001B                     	;# 
   801  001C                     	;# 
   802  001D                     	;# 
   803  001E                     	;# 
   804  001F                     	;# 
   805  0081                     	;# 
   806  0085                     	;# 
   807  0086                     	;# 
   808  0087                     	;# 
   809  0089                     	;# 
   810  008C                     	;# 
   811  008D                     	;# 
   812  008E                     	;# 
   813  008F                     	;# 
   814  0090                     	;# 
   815  0091                     	;# 
   816  0092                     	;# 
   817  0093                     	;# 
   818  0093                     	;# 
   819  0094                     	;# 
   820  0095                     	;# 
   821  0095                     	;# 
   822  0096                     	;# 
   823  0096                     	;# 
   824  0098                     	;# 
   825  0099                     	;# 
   826  009C                     	;# 
   827  009D                     	;# 
   828  009F                     	;# 
   829  0108                     	;# 
   830  0109                     	;# 
   831  010C                     	;# 
   832  010C                     	;# 
   833  010D                     	;# 
   834  010D                     	;# 
   835  010E                     	;# 
   836  010F                     	;# 
   837  0185                     	;# 
   838  0186                     	;# 
   839  018C                     	;# 
   840  0000                     	;# 
   841  0001                     	;# 
   842  0002                     	;# 
   843  0003                     	;# 
   844  0004                     	;# 
   845  0005                     	;# 
   846  0006                     	;# 
   847  0007                     	;# 
   848  0009                     	;# 
   849  000A                     	;# 
   850  000B                     	;# 
   851  000C                     	;# 
   852  000D                     	;# 
   853  000E                     	;# 
   854  000E                     	;# 
   855  000F                     	;# 
   856  0010                     	;# 
   857  0011                     	;# 
   858  0012                     	;# 
   859  0013                     	;# 
   860  0014                     	;# 
   861  0015                     	;# 
   862  0015                     	;# 
   863  0016                     	;# 
   864  0017                     	;# 
   865  0018                     	;# 
   866  0019                     	;# 
   867  001A                     	;# 
   868  001B                     	;# 
   869  001B                     	;# 
   870  001C                     	;# 
   871  001D                     	;# 
   872  001E                     	;# 
   873  001F                     	;# 
   874  0081                     	;# 
   875  0085                     	;# 
   876  0086                     	;# 
   877  0087                     	;# 
   878  0089                     	;# 
   879  008C                     	;# 
   880  008D                     	;# 
   881  008E                     	;# 
   882  008F                     	;# 
   883  0090                     	;# 
   884  0091                     	;# 
   885  0092                     	;# 
   886  0093                     	;# 
   887  0093                     	;# 
   888  0094                     	;# 
   889  0095                     	;# 
   890  0095                     	;# 
   891  0096                     	;# 
   892  0096                     	;# 
   893  0098                     	;# 
   894  0099                     	;# 
   895  009C                     	;# 
   896  009D                     	;# 
   897  009F                     	;# 
   898  0108                     	;# 
   899  0109                     	;# 
   900  010C                     	;# 
   901  010C                     	;# 
   902  010D                     	;# 
   903  010D                     	;# 
   904  010E                     	;# 
   905  010F                     	;# 
   906  0185                     	;# 
   907  0186                     	;# 
   908  018C                     	;# 
   909  0000                     	;# 
   910  0001                     	;# 
   911  0002                     	;# 
   912  0003                     	;# 
   913  0004                     	;# 
   914  0005                     	;# 
   915  0006                     	;# 
   916  0007                     	;# 
   917  0009                     	;# 
   918  000A                     	;# 
   919  000B                     	;# 
   920  000C                     	;# 
   921  000D                     	;# 
   922  000E                     	;# 
   923  000E                     	;# 
   924  000F                     	;# 
   925  0010                     	;# 
   926  0011                     	;# 
   927  0012                     	;# 
   928  0013                     	;# 
   929  0014                     	;# 
   930  0015                     	;# 
   931  0015                     	;# 
   932  0016                     	;# 
   933  0017                     	;# 
   934  0018                     	;# 
   935  0019                     	;# 
   936  001A                     	;# 
   937  001B                     	;# 
   938  001B                     	;# 
   939  001C                     	;# 
   940  001D                     	;# 
   941  001E                     	;# 
   942  001F                     	;# 
   943  0081                     	;# 
   944  0085                     	;# 
   945  0086                     	;# 
   946  0087                     	;# 
   947  0089                     	;# 
   948  008C                     	;# 
   949  008D                     	;# 
   950  008E                     	;# 
   951  008F                     	;# 
   952  0090                     	;# 
   953  0091                     	;# 
   954  0092                     	;# 
   955  0093                     	;# 
   956  0093                     	;# 
   957  0094                     	;# 
   958  0095                     	;# 
   959  0095                     	;# 
   960  0096                     	;# 
   961  0096                     	;# 
   962  0098                     	;# 
   963  0099                     	;# 
   964  009C                     	;# 
   965  009D                     	;# 
   966  009F                     	;# 
   967  0108                     	;# 
   968  0109                     	;# 
   969  010C                     	;# 
   970  010C                     	;# 
   971  010D                     	;# 
   972  010D                     	;# 
   973  010E                     	;# 
   974  010F                     	;# 
   975  0185                     	;# 
   976  0186                     	;# 
   977  018C                     	;# 
   978  0000                     	;# 
   979  0001                     	;# 
   980  0002                     	;# 
   981  0003                     	;# 
   982  0004                     	;# 
   983  0005                     	;# 
   984  0006                     	;# 
   985  0007                     	;# 
   986  0009                     	;# 
   987  000A                     	;# 
   988  000B                     	;# 
   989  000C                     	;# 
   990  000D                     	;# 
   991  000E                     	;# 
   992  000E                     	;# 
   993  000F                     	;# 
   994  0010                     	;# 
   995  0011                     	;# 
   996  0012                     	;# 
   997  0013                     	;# 
   998  0014                     	;# 
   999  0015                     	;# 
  1000  0015                     	;# 
  1001  0016                     	;# 
  1002  0017                     	;# 
  1003  0018                     	;# 
  1004  0019                     	;# 
  1005  001A                     	;# 
  1006  001B                     	;# 
  1007  001B                     	;# 
  1008  001C                     	;# 
  1009  001D                     	;# 
  1010  001E                     	;# 
  1011  001F                     	;# 
  1012  0081                     	;# 
  1013  0085                     	;# 
  1014  0086                     	;# 
  1015  0087                     	;# 
  1016  0089                     	;# 
  1017  008C                     	;# 
  1018  008D                     	;# 
  1019  008E                     	;# 
  1020  008F                     	;# 
  1021  0090                     	;# 
  1022  0091                     	;# 
  1023  0092                     	;# 
  1024  0093                     	;# 
  1025  0093                     	;# 
  1026  0094                     	;# 
  1027  0095                     	;# 
  1028  0095                     	;# 
  1029  0096                     	;# 
  1030  0096                     	;# 
  1031  0098                     	;# 
  1032  0099                     	;# 
  1033  009C                     	;# 
  1034  009D                     	;# 
  1035  009F                     	;# 
  1036  0108                     	;# 
  1037  0109                     	;# 
  1038  010C                     	;# 
  1039  010C                     	;# 
  1040  010D                     	;# 
  1041  010D                     	;# 
  1042  010E                     	;# 
  1043  010F                     	;# 
  1044  0185                     	;# 
  1045  0186                     	;# 
  1046  018C                     	;# 
  1047  0000                     	;# 
  1048  0001                     	;# 
  1049  0002                     	;# 
  1050  0003                     	;# 
  1051  0004                     	;# 
  1052  0005                     	;# 
  1053  0006                     	;# 
  1054  0007                     	;# 
  1055  0009                     	;# 
  1056  000A                     	;# 
  1057  000B                     	;# 
  1058  000C                     	;# 
  1059  000D                     	;# 
  1060  000E                     	;# 
  1061  000E                     	;# 
  1062  000F                     	;# 
  1063  0010                     	;# 
  1064  0011                     	;# 
  1065  0012                     	;# 
  1066  0013                     	;# 
  1067  0014                     	;# 
  1068  0015                     	;# 
  1069  0015                     	;# 
  1070  0016                     	;# 
  1071  0017                     	;# 
  1072  0018                     	;# 
  1073  0019                     	;# 
  1074  001A                     	;# 
  1075  001B                     	;# 
  1076  001B                     	;# 
  1077  001C                     	;# 
  1078  001D                     	;# 
  1079  001E                     	;# 
  1080  001F                     	;# 
  1081  0081                     	;# 
  1082  0085                     	;# 
  1083  0086                     	;# 
  1084  0087                     	;# 
  1085  0089                     	;# 
  1086  008C                     	;# 
  1087  008D                     	;# 
  1088  008E                     	;# 
  1089  008F                     	;# 
  1090  0090                     	;# 
  1091  0091                     	;# 
  1092  0092                     	;# 
  1093  0093                     	;# 
  1094  0093                     	;# 
  1095  0094                     	;# 
  1096  0095                     	;# 
  1097  0095                     	;# 
  1098  0096                     	;# 
  1099  0096                     	;# 
  1100  0098                     	;# 
  1101  0099                     	;# 
  1102  009C                     	;# 
  1103  009D                     	;# 
  1104  009F                     	;# 
  1105  0108                     	;# 
  1106  0109                     	;# 
  1107  010C                     	;# 
  1108  010C                     	;# 
  1109  010D                     	;# 
  1110  010D                     	;# 
  1111  010E                     	;# 
  1112  010F                     	;# 
  1113  0185                     	;# 
  1114  0186                     	;# 
  1115  018C                     	;# 
  1116  0000                     	;# 
  1117  0001                     	;# 
  1118  0002                     	;# 
  1119  0003                     	;# 
  1120  0004                     	;# 
  1121  0005                     	;# 
  1122  0006                     	;# 
  1123  0007                     	;# 
  1124  0009                     	;# 
  1125  000A                     	;# 
  1126  000B                     	;# 
  1127  000C                     	;# 
  1128  000D                     	;# 
  1129  000E                     	;# 
  1130  000E                     	;# 
  1131  000F                     	;# 
  1132  0010                     	;# 
  1133  0011                     	;# 
  1134  0012                     	;# 
  1135  0013                     	;# 
  1136  0014                     	;# 
  1137  0015                     	;# 
  1138  0015                     	;# 
  1139  0016                     	;# 
  1140  0017                     	;# 
  1141  0018                     	;# 
  1142  0019                     	;# 
  1143  001A                     	;# 
  1144  001B                     	;# 
  1145  001B                     	;# 
  1146  001C                     	;# 
  1147  001D                     	;# 
  1148  001E                     	;# 
  1149  001F                     	;# 
  1150  0081                     	;# 
  1151  0085                     	;# 
  1152  0086                     	;# 
  1153  0087                     	;# 
  1154  0089                     	;# 
  1155  008C                     	;# 
  1156  008D                     	;# 
  1157  008E                     	;# 
  1158  008F                     	;# 
  1159  0090                     	;# 
  1160  0091                     	;# 
  1161  0092                     	;# 
  1162  0093                     	;# 
  1163  0093                     	;# 
  1164  0094                     	;# 
  1165  0095                     	;# 
  1166  0095                     	;# 
  1167  0096                     	;# 
  1168  0096                     	;# 
  1169  0098                     	;# 
  1170  0099                     	;# 
  1171  009C                     	;# 
  1172  009D                     	;# 
  1173  009F                     	;# 
  1174  0108                     	;# 
  1175  0109                     	;# 
  1176  010C                     	;# 
  1177  010C                     	;# 
  1178  010D                     	;# 
  1179  010D                     	;# 
  1180  010E                     	;# 
  1181  010F                     	;# 
  1182  0185                     	;# 
  1183  0186                     	;# 
  1184  018C                     	;# 
  1185  0000                     	;# 
  1186  0001                     	;# 
  1187  0002                     	;# 
  1188  0003                     	;# 
  1189  0004                     	;# 
  1190  0005                     	;# 
  1191  0006                     	;# 
  1192  0007                     	;# 
  1193  0009                     	;# 
  1194  000A                     	;# 
  1195  000B                     	;# 
  1196  000C                     	;# 
  1197  000D                     	;# 
  1198  000E                     	;# 
  1199  000E                     	;# 
  1200  000F                     	;# 
  1201  0010                     	;# 
  1202  0011                     	;# 
  1203  0012                     	;# 
  1204  0013                     	;# 
  1205  0014                     	;# 
  1206  0015                     	;# 
  1207  0015                     	;# 
  1208  0016                     	;# 
  1209  0017                     	;# 
  1210  0018                     	;# 
  1211  0019                     	;# 
  1212  001A                     	;# 
  1213  001B                     	;# 
  1214  001B                     	;# 
  1215  001C                     	;# 
  1216  001D                     	;# 
  1217  001E                     	;# 
  1218  001F                     	;# 
  1219  0081                     	;# 
  1220  0085                     	;# 
  1221  0086                     	;# 
  1222  0087                     	;# 
  1223  0089                     	;# 
  1224  008C                     	;# 
  1225  008D                     	;# 
  1226  008E                     	;# 
  1227  008F                     	;# 
  1228  0090                     	;# 
  1229  0091                     	;# 
  1230  0092                     	;# 
  1231  0093                     	;# 
  1232  0093                     	;# 
  1233  0094                     	;# 
  1234  0095                     	;# 
  1235  0095                     	;# 
  1236  0096                     	;# 
  1237  0096                     	;# 
  1238  0098                     	;# 
  1239  0099                     	;# 
  1240  009C                     	;# 
  1241  009D                     	;# 
  1242  009F                     	;# 
  1243  0108                     	;# 
  1244  0109                     	;# 
  1245  010C                     	;# 
  1246  010C                     	;# 
  1247  010D                     	;# 
  1248  010D                     	;# 
  1249  010E                     	;# 
  1250  010F                     	;# 
  1251  0185                     	;# 
  1252  0186                     	;# 
  1253  018C                     	;# 
  1254  0000                     	;# 
  1255  0001                     	;# 
  1256  0002                     	;# 
  1257  0003                     	;# 
  1258  0004                     	;# 
  1259  0005                     	;# 
  1260  0006                     	;# 
  1261  0007                     	;# 
  1262  0009                     	;# 
  1263  000A                     	;# 
  1264  000B                     	;# 
  1265  000C                     	;# 
  1266  000D                     	;# 
  1267  000E                     	;# 
  1268  000E                     	;# 
  1269  000F                     	;# 
  1270  0010                     	;# 
  1271  0011                     	;# 
  1272  0012                     	;# 
  1273  0013                     	;# 
  1274  0014                     	;# 
  1275  0015                     	;# 
  1276  0015                     	;# 
  1277  0016                     	;# 
  1278  0017                     	;# 
  1279  0018                     	;# 
  1280  0019                     	;# 
  1281  001A                     	;# 
  1282  001B                     	;# 
  1283  001B                     	;# 
  1284  001C                     	;# 
  1285  001D                     	;# 
  1286  001E                     	;# 
  1287  001F                     	;# 
  1288  0081                     	;# 
  1289  0085                     	;# 
  1290  0086                     	;# 
  1291  0087                     	;# 
  1292  0089                     	;# 
  1293  008C                     	;# 
  1294  008D                     	;# 
  1295  008E                     	;# 
  1296  008F                     	;# 
  1297  0090                     	;# 
  1298  0091                     	;# 
  1299  0092                     	;# 
  1300  0093                     	;# 
  1301  0093                     	;# 
  1302  0094                     	;# 
  1303  0095                     	;# 
  1304  0095                     	;# 
  1305  0096                     	;# 
  1306  0096                     	;# 
  1307  0098                     	;# 
  1308  0099                     	;# 
  1309  009C                     	;# 
  1310  009D                     	;# 
  1311  009F                     	;# 
  1312  0108                     	;# 
  1313  0109                     	;# 
  1314  010C                     	;# 
  1315  010C                     	;# 
  1316  010D                     	;# 
  1317  010D                     	;# 
  1318  010E                     	;# 
  1319  010F                     	;# 
  1320  0185                     	;# 
  1321  0186                     	;# 
  1322  018C                     	;# 
  1323  001F                     _ADCON0	set	31
  1324  001E                     _ADRES	set	30
  1325  0005                     _PORTA	set	5
  1326  0006                     _PORTB	set	6
  1327  0007                     _PORTC	set	7
  1328  0010                     _T1CON	set	16
  1329  000F                     _TMR1H	set	15
  1330  000E                     _TMR1L	set	14
  1331  005F                     _GIE	set	95
  1332  00F9                     _GO_nDONE	set	249
  1333  005E                     _PEIE	set	94
  1334  002D                     _RA5	set	45
  1335  002E                     _RA6	set	46
  1336  002F                     _RA7	set	47
  1337  0032                     _RB2	set	50
  1338  0033                     _RB3	set	51
  1339  0060                     _TMR1IF	set	96
  1340  009F                     _ADCON1	set	159
  1341  009D                     _FVRCON	set	157
  1342  0090                     _OSCCON	set	144
  1343  0085                     _TRISA	set	133
  1344  0086                     _TRISB	set	134
  1345  0087                     _TRISC	set	135
  1346  0095                     _WPUB	set	149
  1347  0408                     _PS0	set	1032
  1348  0409                     _PS1	set	1033
  1349  040A                     _PS2	set	1034
  1350  040B                     _PSA	set	1035
  1351  0460                     _TMR1IE	set	1120
  1352  0185                     _ANSELA	set	389
  1353  0186                     _ANSELB	set	390
  1354                           
  1355                           	psect	text0
  1356  0000                     __ptext0:	
  1357                           ; #config settings
  1358                           
  1359                           
  1360                           ;psect for function _TMR1_ISR
  1361  0000                     
  1362                           	psect	cinit
  1363  0013                     start_initialization:	
  1364  0013                     __initialization:	
  1365                           
  1366                           ; Clear objects allocated to COMMON
  1367  0013  01F6               	clrf	__pbssCOMMON& (0+127)
  1368  0014  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1369  0015  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1370  0016  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  1371                           
  1372                           ; Clear objects allocated to BANK0
  1373  0017  1383               	bcf	3,7	;select IRP bank0
  1374  0018  3020               	movlw	low __pbssBANK0
  1375  0019  0084               	movwf	4
  1376  001A  304D               	movlw	low (__pbssBANK0+45)
  1377  001B  158A  22F2  118A   	fcall	clear_ram0
  1378                           
  1379                           ; Clear objects allocated to BANK1
  1380  001E  30A0               	movlw	low __pbssBANK1
  1381  001F  0084               	movwf	4
  1382  0020  30E6               	movlw	low (__pbssBANK1+70)
  1383  0021  158A  22F2         	fcall	clear_ram0
  1384  0023                     end_of_initialization:	
  1385                           ;End of C runtime variable initialization code
  1386                           
  1387  0023                     __end_of__initialization:	
  1388  0023  0183               	clrf	3
  1389  0024  158A  2F9A         	ljmp	_main	;jump to C main() function
  1390                           
  1391                           	psect	bssCOMMON
  1392  0076                     __pbssCOMMON:	
  1393  0076                     _LED:	
  1394  0076                     	ds	1
  1395  0077                     _Light:	
  1396  0077                     	ds	1
  1397  0078                     _Lights:	
  1398  0078                     	ds	1
  1399  0079                     _LightsControl:	
  1400  0079                     	ds	1
  1401                           
  1402                           	psect	bssBANK0
  1403  0020                     __pbssBANK0:	
  1404  0020                     _SYSC:	
  1405  0020                     	ds	5
  1406  0025                     _myMain:	
  1407  0025                     	ds	5
  1408  002A                     _PIRLED:	
  1409  002A                     	ds	4
  1410  002E                     __CDS:	
  1411  002E                     	ds	4
  1412  0032                     _Timer1:	
  1413  0032                     	ds	3
  1414  0035                     _WDT:	
  1415  0035                     	ds	2
  1416  0037                     _Cmd:	
  1417  0037                     	ds	1
  1418  0038                     _SwDetect:	
  1419  0038                     	ds	1
  1420  0039                     _Temp:	
  1421  0039                     	ds	7
  1422  0040                     _Lights1:	
  1423  0040                     	ds	5
  1424  0045                     _VarLED1:	
  1425  0045                     	ds	4
  1426  0049                     _VarLED2:	
  1427  0049                     	ds	4
  1428                           
  1429                           	psect	bssBANK1
  1430  00A0                     __pbssBANK1:	
  1431  00A0                     __PIR:	
  1432  00A0                     	ds	42
  1433  00CA                     _Load:	
  1434  00CA                     	ds	28
  1435                           
  1436                           	psect	clrtext
  1437  0AF2                     clear_ram0:	
  1438                           ;	Called with FSR containing the base address, and
  1439                           ;	W with the last address+1
  1440                           
  1441  0AF2  0064               	clrwdt	;clear the watchdog before getting into this loop
  1442  0AF3                     clrloop0:	
  1443  0AF3  0180               	clrf	0	;clear RAM location pointed to by FSR
  1444  0AF4  0A84               	incf	4,f	;increment pointer
  1445  0AF5  0604               	xorwf	4,w	;XOR with final address
  1446  0AF6  1903               	btfsc	3,2	;have we reached the end yet?
  1447  0AF7  3400               	retlw	0	;all done for this memory range, return
  1448  0AF8  0604               	xorwf	4,w	;XOR again to restore value
  1449  0AF9  2AF3               	goto	clrloop0	;do the next byte
  1450                           
  1451                           	psect	cstackCOMMON
  1452  0070                     __pcstackCOMMON:	
  1453  0070                     ?_setLED_Initialization:	
  1454  0070                     ?_setPIRLED_Main:	
  1455                           ; 0 bytes @ 0x0
  1456                           
  1457  0070                     ?_Fosc_Set:	
  1458                           ; 0 bytes @ 0x0
  1459                           
  1460  0070                     ?_IO_Set:	
  1461                           ; 0 bytes @ 0x0
  1462                           
  1463  0070                     ?_TMR1_Set:	
  1464                           ; 0 bytes @ 0x0
  1465                           
  1466  0070                     ?_ADC_Set:	
  1467                           ; 0 bytes @ 0x0
  1468                           
  1469  0070                     ?_WDT_Set:	
  1470                           ; 0 bytes @ 0x0
  1471                           
  1472  0070                     ?_TMR1_ISR:	
  1473                           ; 0 bytes @ 0x0
  1474                           
  1475  0070                     ??_TMR1_ISR:	
  1476                           ; 0 bytes @ 0x0
  1477                           
  1478  0070                     ?_Timeout_Counter:	
  1479                           ; 0 bytes @ 0x0
  1480                           
  1481  0070                     ?_set_TimeoutCleared:	
  1482                           ; 0 bytes @ 0x0
  1483                           
  1484  0070                     ?_WDT_Clearing:	
  1485                           ; 0 bytes @ 0x0
  1486                           
  1487  0070                     ?_myMain_Initialization:	
  1488                           ; 0 bytes @ 0x0
  1489                           
  1490  0070                     ?_SYSC_Initialization:	
  1491                           ; 0 bytes @ 0x0
  1492                           
  1493  0070                     ?_Temp_Initialization:	
  1494                           ; 0 bytes @ 0x0
  1495                           
  1496  0070                     ?_Load_Initialization:	
  1497                           ; 0 bytes @ 0x0
  1498                           
  1499  0070                     ?_Lights_Initialization:	
  1500                           ; 0 bytes @ 0x0
  1501                           
  1502  0070                     ?_PIR_Initialization:	
  1503                           ; 0 bytes @ 0x0
  1504                           
  1505  0070                     ?_DetectSYSC_Signal:	
  1506                           ; 0 bytes @ 0x0
  1507                           
  1508  0070                     ?_getLoad_AD:	
  1509                           ; 0 bytes @ 0x0
  1510                           
  1511  0070                     ?_getTemp_AD:	
  1512                           ; 0 bytes @ 0x0
  1513                           
  1514  0070                     ?_my_MainTimer:	
  1515                           ; 0 bytes @ 0x0
  1516                           
  1517  0070                     ?_SYSC_Main:	
  1518                           ; 0 bytes @ 0x0
  1519                           
  1520  0070                     ?_Temp_Main:	
  1521                           ; 0 bytes @ 0x0
  1522                           
  1523  0070                     ?_Load_Main:	
  1524                           ; 0 bytes @ 0x0
  1525                           
  1526  0070                     ?_Lights_Main:	
  1527                           ; 0 bytes @ 0x0
  1528                           
  1529  0070                     ?_PIR_Main:	
  1530                           ; 0 bytes @ 0x0
  1531                           
  1532  0070                     ?_Exception_Main:	
  1533                           ; 0 bytes @ 0x0
  1534                           
  1535  0070                     ?_setLights_SwOn:	
  1536                           ; 0 bytes @ 0x0
  1537                           
  1538  0070                     ?_setLights_SwOff:	
  1539                           ; 0 bytes @ 0x0
  1540                           
  1541  0070                     ?_setLoad_AH_AL_Restore:	
  1542                           ; 0 bytes @ 0x0
  1543                           
  1544  0070                     ?_setTemp_Initialization:	
  1545                           ; 0 bytes @ 0x0
  1546                           
  1547  0070                     ?_setTemp_Main:	
  1548                           ; 0 bytes @ 0x0
  1549                           
  1550  0070                     ?_setSYSC_Initialization:	
  1551                           ; 0 bytes @ 0x0
  1552                           
  1553  0070                     ?_setSYSC_Main:	
  1554                           ; 0 bytes @ 0x0
  1555                           
  1556  0070                     ?_setLights_Initialization:	
  1557                           ; 0 bytes @ 0x0
  1558                           
  1559  0070                     ?_setLights_Main:	
  1560                           ; 0 bytes @ 0x0
  1561                           
  1562  0070                     ?_Lights_Control:	
  1563                           ; 0 bytes @ 0x0
  1564                           
  1565  0070                     ?_setLights_Line:	
  1566                           ; 0 bytes @ 0x0
  1567                           
  1568  0070                     ?_CDS_Initialization:	
  1569                           ; 0 bytes @ 0x0
  1570                           
  1571  0070                     ?_CDS_Main:	
  1572                           ; 0 bytes @ 0x0
  1573                           
  1574  0070                     ?_LedPointSelect:	
  1575                           ; 0 bytes @ 0x0
  1576                           
  1577  0070                     ?_LED_Initialization:	
  1578                           ; 0 bytes @ 0x0
  1579                           
  1580  0070                     ?_LED_Main:	
  1581                           ; 0 bytes @ 0x0
  1582                           
  1583  0070                     ?_Mcu_Initialization:	
  1584                           ; 0 bytes @ 0x0
  1585                           
  1586  0070                     ?_ISR:	
  1587                           ; 0 bytes @ 0x0
  1588                           
  1589  0070                     ??_ISR:	
  1590                           ; 0 bytes @ 0x0
  1591                           
  1592  0070                     ?_WDT_Main:	
  1593                           ; 0 bytes @ 0x0
  1594                           
  1595  0070                     ?_LightsPointSelect:	
  1596                           ; 0 bytes @ 0x0
  1597                           
  1598  0070                     ?_getLights_Status:	
  1599                           ; 0 bytes @ 0x0
  1600                           
  1601  0070                     ?_getAll_Lights_Line:	
  1602                           ; 1 bytes @ 0x0
  1603                           
  1604  0070                     ?_getLight_LoadGO:	
  1605                           ; 1 bytes @ 0x0
  1606                           
  1607  0070                     ?_getLight_Load_Status:	
  1608                           ; 1 bytes @ 0x0
  1609                           
  1610  0070                     ?_getLights_Allow_Condition:	
  1611                           ; 1 bytes @ 0x0
  1612                           
  1613  0070                     ?_getCDS_Status:	
  1614                           ; 1 bytes @ 0x0
  1615                           
  1616  0070                     ?_getMain_All_LightsStatus:	
  1617                           ; 1 bytes @ 0x0
  1618                           
  1619  0070                     ?_getMain_All_Error_Status:	
  1620                           ; 1 bytes @ 0x0
  1621                           
  1622  0070                     ?_getMain_Lights_Count:	
  1623                           ; 1 bytes @ 0x0
  1624                           
  1625  0070                     ?_getLoad_OK:	
  1626                           ; 1 bytes @ 0x0
  1627                           
  1628  0070                     getLights_Allow_Condition@lights:	
  1629                           ; 1 bytes @ 0x0
  1630                           
  1631                           
  1632                           ; 1 bytes @ 0x0
  1633  0070                     	ds	4
  1634  0074                     ??_Fosc_Set:	
  1635  0074                     ??_IO_Set:	
  1636                           ; 0 bytes @ 0x4
  1637                           
  1638  0074                     ??_TMR1_Set:	
  1639                           ; 0 bytes @ 0x4
  1640                           
  1641  0074                     ??_ADC_Set:	
  1642                           ; 0 bytes @ 0x4
  1643                           
  1644  0074                     ??_WDT_Set:	
  1645                           ; 0 bytes @ 0x4
  1646                           
  1647  0074                     ??_Timeout_Counter:	
  1648                           ; 0 bytes @ 0x4
  1649                           
  1650  0074                     ??_set_TimeoutCleared:	
  1651                           ; 0 bytes @ 0x4
  1652                           
  1653  0074                     ??_WDT_Clearing:	
  1654                           ; 0 bytes @ 0x4
  1655                           
  1656  0074                     ??_myMain_Initialization:	
  1657                           ; 0 bytes @ 0x4
  1658                           
  1659  0074                     ??_SYSC_Initialization:	
  1660                           ; 0 bytes @ 0x4
  1661                           
  1662  0074                     ??_Temp_Initialization:	
  1663                           ; 0 bytes @ 0x4
  1664                           
  1665  0074                     ??_PIR_Initialization:	
  1666                           ; 0 bytes @ 0x4
  1667                           
  1668  0074                     ??_DetectSYSC_Signal:	
  1669                           ; 0 bytes @ 0x4
  1670                           
  1671  0074                     ??_my_MainTimer:	
  1672                           ; 0 bytes @ 0x4
  1673                           
  1674  0074                     ??_getAll_Lights_Line:	
  1675                           ; 0 bytes @ 0x4
  1676                           
  1677  0074                     ??_setLoad_AH_AL_Restore:	
  1678                           ; 0 bytes @ 0x4
  1679                           
  1680  0074                     ??_getLight_LoadGO:	
  1681                           ; 0 bytes @ 0x4
  1682                           
  1683  0074                     ??_getLight_Load_Status:	
  1684                           ; 0 bytes @ 0x4
  1685                           
  1686  0074                     ??_setTemp_Initialization:	
  1687                           ; 0 bytes @ 0x4
  1688                           
  1689  0074                     ??_setSYSC_Initialization:	
  1690                           ; 0 bytes @ 0x4
  1691                           
  1692  0074                     ??_setLights_Line:	
  1693                           ; 0 bytes @ 0x4
  1694                           
  1695  0074                     ??_CDS_Initialization:	
  1696                           ; 0 bytes @ 0x4
  1697                           
  1698  0074                     ??_getCDS_Status:	
  1699                           ; 0 bytes @ 0x4
  1700                           
  1701  0074                     ??_LedPointSelect:	
  1702                           ; 0 bytes @ 0x4
  1703                           
  1704  0074                     ??_WDT_Main:	
  1705                           ; 0 bytes @ 0x4
  1706                           
  1707  0074                     ??_getMain_All_LightsStatus:	
  1708                           ; 0 bytes @ 0x4
  1709                           
  1710  0074                     ??_getMain_All_Error_Status:	
  1711                           ; 0 bytes @ 0x4
  1712                           
  1713  0074                     ??_getMain_Lights_Count:	
  1714                           ; 0 bytes @ 0x4
  1715                           
  1716  0074                     ??_getLoad_OK:	
  1717                           ; 0 bytes @ 0x4
  1718                           
  1719  0074                     ??_LightsPointSelect:	
  1720                           ; 0 bytes @ 0x4
  1721                           
  1722  0074                     ??___wmul:	
  1723                           ; 0 bytes @ 0x4
  1724                           
  1725  0074                     ??___awdiv:	
  1726                           ; 0 bytes @ 0x4
  1727                           
  1728  0074                     ??___lwdiv:	
  1729                           ; 0 bytes @ 0x4
  1730                           
  1731  0074                     ?_getAD:	
  1732                           ; 0 bytes @ 0x4
  1733                           
  1734  0074                     getCDS_Status@status:	
  1735                           ; 1 bytes @ 0x4
  1736                           
  1737  0074                     getAD@adcon1:	
  1738                           ; 1 bytes @ 0x4
  1739                           
  1740  0074                     getMain_All_LightsStatus@status:	
  1741                           ; 1 bytes @ 0x4
  1742                           
  1743  0074                     getMain_Lights_Count@count:	
  1744                           ; 1 bytes @ 0x4
  1745                           
  1746  0074                     getLoad_OK@ok:	
  1747                           ; 1 bytes @ 0x4
  1748                           
  1749  0074                     setLights_Line@lights:	
  1750                           ; 1 bytes @ 0x4
  1751                           
  1752  0074                     getAll_Lights_Line@line:	
  1753                           ; 1 bytes @ 0x4
  1754                           
  1755  0074                     getLight_LoadGO@loadgo:	
  1756                           ; 1 bytes @ 0x4
  1757                           
  1758  0074                     getLight_Load_Status@loadstatus:	
  1759                           ; 1 bytes @ 0x4
  1760                           
  1761  0074                     ___wmul@product:	
  1762                           ; 1 bytes @ 0x4
  1763                           
  1764                           
  1765                           ; 2 bytes @ 0x4
  1766  0074                     	ds	1
  1767  0075                     ??_getAD:	
  1768  0075                     ??_SYSC_Main:	
  1769                           ; 0 bytes @ 0x5
  1770                           
  1771  0075                     ??_setTemp_Main:	
  1772                           ; 0 bytes @ 0x5
  1773                           
  1774  0075                     ??_setSYSC_Main:	
  1775                           ; 0 bytes @ 0x5
  1776                           
  1777  0075                     ??_getLights_Allow_Condition:	
  1778                           ; 0 bytes @ 0x5
  1779                           
  1780  0075                     ??_Mcu_Initialization:	
  1781                           ; 0 bytes @ 0x5
  1782                           
  1783  0075                     LedPointSelect@led:	
  1784                           ; 0 bytes @ 0x5
  1785                           
  1786  0075                     getAD@adcon0:	
  1787                           ; 1 bytes @ 0x5
  1788                           
  1789  0075                     getMain_Lights_Count@status1:	
  1790                           ; 1 bytes @ 0x5
  1791                           
  1792  0075                     setLoad_AH_AL_Restore@i:	
  1793                           ; 1 bytes @ 0x5
  1794                           
  1795  0075                     LightsPointSelect@lights:	
  1796                           ; 1 bytes @ 0x5
  1797                           
  1798                           
  1799                           ; 1 bytes @ 0x5
  1800  0075                     	ds	1
  1801  0076                     ??_setLED_Initialization:	
  1802  0076                     ??_setLED:	
  1803                           ; 0 bytes @ 0x6
  1804                           
  1805  0076                     ??_Load_Initialization:	
  1806                           ; 0 bytes @ 0x6
  1807                           
  1808  0076                     ??_Lights_Initialization:	
  1809                           ; 0 bytes @ 0x6
  1810                           
  1811  0076                     ??_Temp_Main:	
  1812                           ; 0 bytes @ 0x6
  1813                           
  1814  0076                     ??_Lights_Main:	
  1815                           ; 0 bytes @ 0x6
  1816                           
  1817  0076                     ??_getLights_Status:	
  1818                           ; 0 bytes @ 0x6
  1819                           
  1820  0076                     ??_setLights_SwOn:	
  1821                           ; 0 bytes @ 0x6
  1822                           
  1823  0076                     ??_setLights_SwOff:	
  1824                           ; 0 bytes @ 0x6
  1825                           
  1826  0076                     ??_setLights_Initialization:	
  1827                           ; 0 bytes @ 0x6
  1828                           
  1829  0076                     ??_setLights_Main:	
  1830                           ; 0 bytes @ 0x6
  1831                           
  1832  0076                     ??_LED_Initialization:	
  1833                           ; 0 bytes @ 0x6
  1834                           
  1835  0076                     ??_LED_Main:	
  1836                           ; 0 bytes @ 0x6
  1837                           
  1838                           
  1839                           	psect	cstackBANK0
  1840  004D                     __pcstackBANK0:	
  1841                           ; 0 bytes @ 0x6
  1842                           
  1843  004D                     ?_setLED:	
  1844  004D                     ??_getLoad_AD:	
  1845                           ; 0 bytes @ 0x0
  1846                           
  1847  004D                     ??_getTemp_AD:	
  1848                           ; 0 bytes @ 0x0
  1849                           
  1850  004D                     ??_CDS_Main:	
  1851                           ; 0 bytes @ 0x0
  1852                           
  1853  004D                     ?_getCDS_AD:	
  1854                           ; 0 bytes @ 0x0
  1855                           
  1856  004D                     ?_setLights_Trigger:	
  1857                           ; 0 bytes @ 0x0
  1858                           
  1859  004D                     ?___wmul:	
  1860                           ; 0 bytes @ 0x0
  1861                           
  1862  004D                     ?___awdiv:	
  1863                           ; 2 bytes @ 0x0
  1864                           
  1865  004D                     ?___lwdiv:	
  1866                           ; 2 bytes @ 0x0
  1867                           
  1868  004D                     getCDS_AD@channel2:	
  1869                           ; 2 bytes @ 0x0
  1870                           
  1871  004D                     setLED@command:	
  1872                           ; 1 bytes @ 0x0
  1873                           
  1874  004D                     setLights_Initialization@lights:	
  1875                           ; 1 bytes @ 0x0
  1876                           
  1877  004D                     getLights_Status@lights:	
  1878                           ; 1 bytes @ 0x0
  1879                           
  1880  004D                     setLights_Trigger@command:	
  1881                           ; 1 bytes @ 0x0
  1882                           
  1883  004D                     getLights_Allow_Condition@allow:	
  1884                           ; 1 bytes @ 0x0
  1885                           
  1886  004D                     _getMain_All_Error_Status$2127:	
  1887                           ; 1 bytes @ 0x0
  1888                           
  1889  004D                     ___wmul@multiplier:	
  1890                           ; 2 bytes @ 0x0
  1891                           
  1892  004D                     ___awdiv@divisor:	
  1893                           ; 2 bytes @ 0x0
  1894                           
  1895  004D                     ___lwdiv@divisor:	
  1896                           ; 2 bytes @ 0x0
  1897                           
  1898                           
  1899                           ; 2 bytes @ 0x0
  1900  004D                     	ds	1
  1901  004E                     ??_getCDS_AD:	
  1902  004E                     ??_setLights_Trigger:	
  1903                           ; 0 bytes @ 0x1
  1904                           
  1905  004E                     setLED@led:	
  1906                           ; 0 bytes @ 0x1
  1907                           
  1908  004E                     getLights_Status@status:	
  1909                           ; 1 bytes @ 0x1
  1910                           
  1911  004E                     _getLights_Allow_Condition$4224:	
  1912                           ; 1 bytes @ 0x1
  1913                           
  1914                           
  1915                           ; 1 bytes @ 0x1
  1916  004E                     	ds	1
  1917  004F                     ??_setPIRLED_Main:	
  1918  004F                     ?_setLights:	
  1919                           ; 0 bytes @ 0x2
  1920                           
  1921  004F                     setLED_Initialization@led:	
  1922                           ; 0 bytes @ 0x2
  1923                           
  1924  004F                     getLoad_AD@channel:	
  1925                           ; 1 bytes @ 0x2
  1926                           
  1927  004F                     getTemp_AD@channel:	
  1928                           ; 1 bytes @ 0x2
  1929                           
  1930  004F                     setLights@status:	
  1931                           ; 1 bytes @ 0x2
  1932                           
  1933  004F                     setLights_Trigger@lights:	
  1934                           ; 1 bytes @ 0x2
  1935                           
  1936  004F                     _getMain_All_Error_Status$2128:	
  1937                           ; 1 bytes @ 0x2
  1938                           
  1939  004F                     ___wmul@multiplicand:	
  1940                           ; 2 bytes @ 0x2
  1941                           
  1942  004F                     ___awdiv@dividend:	
  1943                           ; 2 bytes @ 0x2
  1944                           
  1945  004F                     ___lwdiv@dividend:	
  1946                           ; 2 bytes @ 0x2
  1947                           
  1948                           
  1949                           ; 2 bytes @ 0x2
  1950  004F                     	ds	1
  1951  0050                     ??_setLights:	
  1952  0050                     getCDS_AD@i:	
  1953                           ; 0 bytes @ 0x3
  1954                           
  1955  0050                     setPIRLED_Main@count:	
  1956                           ; 1 bytes @ 0x3
  1957                           
  1958  0050                     getLoad_AD@k:	
  1959                           ; 1 bytes @ 0x3
  1960                           
  1961  0050                     getTemp_AD@ADRES:	
  1962                           ; 1 bytes @ 0x3
  1963                           
  1964  0050                     setLights_SwOn@sw:	
  1965                           ; 1 bytes @ 0x3
  1966                           
  1967  0050                     setLights_SwOff@sw:	
  1968                           ; 1 bytes @ 0x3
  1969                           
  1970                           
  1971                           ; 1 bytes @ 0x3
  1972  0050                     	ds	1
  1973  0051                     getCDS_AD@j:	
  1974  0051                     getMain_All_Error_Status@command:	
  1975                           ; 1 bytes @ 0x4
  1976                           
  1977  0051                     getLoad_AD@j:	
  1978                           ; 1 bytes @ 0x4
  1979                           
  1980  0051                     setLights@lights:	
  1981                           ; 1 bytes @ 0x4
  1982                           
  1983  0051                     ___awdiv@counter:	
  1984                           ; 1 bytes @ 0x4
  1985                           
  1986  0051                     ___lwdiv@counter:	
  1987                           ; 1 bytes @ 0x4
  1988                           
  1989                           
  1990                           ; 1 bytes @ 0x4
  1991  0051                     	ds	1
  1992  0052                     getCDS_AD@channel1:	
  1993  0052                     getMain_All_Error_Status@status:	
  1994                           ; 1 bytes @ 0x5
  1995                           
  1996  0052                     getLoad_AD@ADRES:	
  1997                           ; 1 bytes @ 0x5
  1998                           
  1999  0052                     setLights_Main@lights:	
  2000                           ; 1 bytes @ 0x5
  2001                           
  2002  0052                     ___awdiv@sign:	
  2003                           ; 1 bytes @ 0x5
  2004                           
  2005  0052                     ___lwdiv@quotient:	
  2006                           ; 1 bytes @ 0x5
  2007                           
  2008                           
  2009                           ; 2 bytes @ 0x5
  2010  0052                     	ds	1
  2011  0053                     ??_PIR_Main:	
  2012  0053                     ??_Exception_Main:	
  2013                           ; 0 bytes @ 0x6
  2014                           
  2015  0053                     getLoad_AD@i:	
  2016                           ; 0 bytes @ 0x6
  2017                           
  2018  0053                     setTemp_Main@error:	
  2019                           ; 1 bytes @ 0x6
  2020                           
  2021  0053                     ___awdiv@quotient:	
  2022                           ; 1 bytes @ 0x6
  2023                           
  2024                           
  2025                           ; 2 bytes @ 0x6
  2026  0053                     	ds	1
  2027  0054                     ??_Load_Main:	
  2028  0054                     Exception_Main@lights:	
  2029                           ; 0 bytes @ 0x7
  2030                           
  2031  0054                     setTemp_Main@TempGO:	
  2032                           ; 1 bytes @ 0x7
  2033                           
  2034                           
  2035                           ; 1 bytes @ 0x7
  2036  0054                     	ds	1
  2037  0055                     ?_getPIR_AD:	
  2038  0055                     ??_Lights_Control:	
  2039                           ; 0 bytes @ 0x8
  2040                           
  2041  0055                     Exception_Main@count:	
  2042                           ; 0 bytes @ 0x8
  2043                           
  2044  0055                     setTemp_Main@SafeValue:	
  2045                           ; 1 bytes @ 0x8
  2046                           
  2047  0055                     getPIR_AD@channel2:	
  2048                           ; 1 bytes @ 0x8
  2049                           
  2050                           
  2051                           ; 1 bytes @ 0x8
  2052  0055                     	ds	1
  2053  0056                     ??_getPIR_AD:	
  2054  0056                     Exception_Main@status:	
  2055                           ; 0 bytes @ 0x9
  2056                           
  2057  0056                     Load_Main@error:	
  2058                           ; 1 bytes @ 0x9
  2059                           
  2060  0056                     setTemp_Main@DangerValue:	
  2061                           ; 1 bytes @ 0x9
  2062                           
  2063                           
  2064                           ; 1 bytes @ 0x9
  2065  0056                     	ds	1
  2066  0057                     setTemp_Main@AD:	
  2067  0057                     Lights_Control@lights:	
  2068                           ; 1 bytes @ 0xA
  2069                           
  2070  0057                     Exception_Main@i:	
  2071                           ; 1 bytes @ 0xA
  2072                           
  2073  0057                     _Load_Main$2389:	
  2074                           ; 2 bytes @ 0xA
  2075                           
  2076                           
  2077                           ; 2 bytes @ 0xA
  2078  0057                     	ds	1
  2079  0058                     PIR_Main@error:	
  2080                           
  2081                           ; 1 bytes @ 0xB
  2082  0058                     	ds	1
  2083  0059                     Load_Main@ErrorCountValue:	
  2084  0059                     PIR_Main@cds:	
  2085                           ; 1 bytes @ 0xC
  2086                           
  2087  0059                     getPIR_AD@j:	
  2088                           ; 1 bytes @ 0xC
  2089                           
  2090  0059                     Exception_Main@i_2140:	
  2091                           ; 1 bytes @ 0xC
  2092                           
  2093                           
  2094                           ; 2 bytes @ 0xC
  2095  0059                     	ds	1
  2096  005A                     Load_Main@Load_RunStatus:	
  2097  005A                     PIR_Main@Enable_Switch:	
  2098                           ; 1 bytes @ 0xD
  2099                           
  2100  005A                     getPIR_AD@channel1:	
  2101                           ; 1 bytes @ 0xD
  2102                           
  2103                           
  2104                           ; 1 bytes @ 0xD
  2105  005A                     	ds	1
  2106  005B                     Exception_Main@error:	
  2107  005B                     Load_Main@LightsCount:	
  2108                           ; 1 bytes @ 0xE
  2109                           
  2110  005B                     getPIR_AD@VRAD1:	
  2111                           ; 1 bytes @ 0xE
  2112                           
  2113  005B                     _PIR_Main$2856:	
  2114                           ; 1 bytes @ 0xE
  2115                           
  2116                           
  2117                           ; 2 bytes @ 0xE
  2118  005B                     	ds	1
  2119  005C                     getPIR_AD@VRAD:	
  2120  005C                     Load_Main@i:	
  2121                           ; 1 bytes @ 0xF
  2122                           
  2123                           
  2124                           ; 2 bytes @ 0xF
  2125  005C                     	ds	1
  2126  005D                     PIR_Main@TriggerValue:	
  2127  005D                     getPIR_AD@i:	
  2128                           ; 1 bytes @ 0x10
  2129                           
  2130                           
  2131                           ; 1 bytes @ 0x10
  2132  005D                     	ds	1
  2133  005E                     PIR_Main@LightsStatus:	
  2134                           
  2135                           ; 1 bytes @ 0x11
  2136  005E                     	ds	1
  2137  005F                     ?_main:	
  2138  005F                     main@argc:	
  2139                           ; 2 bytes @ 0x12
  2140                           
  2141                           
  2142                           ; 2 bytes @ 0x12
  2143  005F                     	ds	2
  2144  0061                     main@argv:	
  2145                           
  2146                           ; 2 bytes @ 0x14
  2147  0061                     	ds	2
  2148  0063                     ??_main:	
  2149                           
  2150                           ; 0 bytes @ 0x16
  2151  0063                     	ds	1
  2152                           
  2153                           	psect	maintext
  2154  0F9A                     __pmaintext:	
  2155 ;;
  2156 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2157 ;;
  2158 ;; *************** function _main *****************
  2159 ;; Defined at:
  2160 ;;		line 7 in file "../src/Main_B1.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;  argc            2   18[BANK0 ] int 
  2163 ;;  argv            2   20[BANK0 ] PTR PTR unsigned char 
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;		None
  2166 ;; Return value:  Size  Location     Type
  2167 ;;                  2   18[BANK0 ] int 
  2168 ;; Registers used:
  2169 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2170 ;; Tracked objects:
  2171 ;;		On entry : 17F/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2175 ;;      Params:         0       4       0       0
  2176 ;;      Locals:         0       0       0       0
  2177 ;;      Temps:          0       1       0       0
  2178 ;;      Totals:         0       5       0       0
  2179 ;;Total ram usage:        5 bytes
  2180 ;; Hardware stack levels required when called:    7
  2181 ;; This function calls:
  2182 ;;		_CDS_Initialization
  2183 ;;		_CDS_Main
  2184 ;;		_DetectSYSC_Signal
  2185 ;;		_Exception_Main
  2186 ;;		_LED_Initialization
  2187 ;;		_LED_Main
  2188 ;;		_Lights_Initialization
  2189 ;;		_Lights_Main
  2190 ;;		_Load_Initialization
  2191 ;;		_Load_Main
  2192 ;;		_Mcu_Initialization
  2193 ;;		_PIR_Initialization
  2194 ;;		_PIR_Main
  2195 ;;		_SYSC_Initialization
  2196 ;;		_SYSC_Main
  2197 ;;		_Temp_Initialization
  2198 ;;		_Temp_Main
  2199 ;;		_WDT_Main
  2200 ;;		_getCDS_AD
  2201 ;;		_getLoad_AD
  2202 ;;		_getPIR_AD
  2203 ;;		_getTemp_AD
  2204 ;;		_myMain_Initialization
  2205 ;;		_my_MainTimer
  2206 ;; This function is called by:
  2207 ;;		Startup code after reset
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           
  2212                           ;psect for function _main
  2213  0F9A                     _main:	
  2214                           
  2215                           ;Main_B1.c: 8: myMain_Initialization();
  2216                           
  2217                           ;incstack = 0
  2218                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2219  0F9A  158A  2296  158A   	fcall	_myMain_Initialization
  2220                           
  2221                           ;Main_B1.c: 9: Mcu_Initialization();
  2222  0F9D  158A  2358  158A   	fcall	_Mcu_Initialization
  2223                           
  2224                           ;Main_B1.c: 10: ;;
  2225                           ;Main_B1.c: 11: LED_Initialization();
  2226  0FA0  158A  22DA  158A   	fcall	_LED_Initialization
  2227                           
  2228                           ;Main_B1.c: 12: ;;
  2229                           ;Main_B1.c: 14: SYSC_Initialization();
  2230  0FA3  158A  229D  158A   	fcall	_SYSC_Initialization
  2231                           
  2232                           ;Main_B1.c: 15: Temp_Initialization();
  2233  0FA6  158A  22A3  158A   	fcall	_Temp_Initialization
  2234                           
  2235                           ;Main_B1.c: 16: Load_Initialization();
  2236  0FA9  158A  229A  158A   	fcall	_Load_Initialization
  2237                           
  2238                           ;Main_B1.c: 17: ;;
  2239                           ;Main_B1.c: 18: ;;
  2240                           ;Main_B1.c: 20: ;;
  2241                           ;Main_B1.c: 21: Lights_Initialization();
  2242  0FAC  158A  22AD  158A   	fcall	_Lights_Initialization
  2243                           
  2244                           ;Main_B1.c: 22: CDS_Initialization();
  2245  0FAF  158A  22A9  158A   	fcall	_CDS_Initialization
  2246                           
  2247                           ;Main_B1.c: 23: PIR_Initialization();
  2248  0FB2  118A  27F5  158A   	fcall	_PIR_Initialization
  2249  0FB5                     l5345:	
  2250                           ;Main_B1.c: 24: ;;
  2251                           ;Main_B1.c: 25: ;;
  2252                           ;Main_B1.c: 26: ;;
  2253                           ;Main_B1.c: 27: ;;
  2254                           ;Main_B1.c: 28: ;;
  2255                           ;Main_B1.c: 30: while (1) {
  2256                           
  2257                           
  2258                           ;Main_B1.c: 32: if (myMain.PowerON == 1) {
  2259  0FB5  1283               	bcf	3,5	;RP0=0, select bank0
  2260  0FB6  1303               	bcf	3,6	;RP1=0, select bank0
  2261  0FB7  1C25               	btfss	_myMain,0
  2262  0FB8  2FD8               	goto	l5357
  2263                           
  2264                           ;Main_B1.c: 34: DetectSYSC_Signal();
  2265  0FB9  158A  2320  158A   	fcall	_DetectSYSC_Signal
  2266                           
  2267                           ;Main_B1.c: 38: getLoad_AD(0x01);
  2268  0FBC  3001               	movlw	1
  2269  0FBD  158A  267C  158A   	fcall	_getLoad_AD
  2270                           
  2271                           ;Main_B1.c: 42: getTemp_AD(0x11);
  2272  0FC0  3011               	movlw	17
  2273  0FC1  158A  252B  158A   	fcall	_getTemp_AD
  2274                           
  2275                           ;Main_B1.c: 50: getCDS_AD(0x29, 0x05);
  2276  0FC4  3005               	movlw	5
  2277  0FC5  1283               	bcf	3,5	;RP0=0, select bank0
  2278  0FC6  1303               	bcf	3,6	;RP1=0, select bank0
  2279  0FC7  00E3               	movwf	??_main
  2280  0FC8  0863               	movf	??_main,w
  2281  0FC9  00CD               	movwf	getCDS_AD@channel2
  2282  0FCA  3029               	movlw	41
  2283  0FCB  158A  24BF  158A   	fcall	_getCDS_AD
  2284                           
  2285                           ;Main_B1.c: 54: getPIR_AD(0x2d, 0x09);
  2286  0FCE  3009               	movlw	9
  2287  0FCF  1283               	bcf	3,5	;RP0=0, select bank0
  2288  0FD0  1303               	bcf	3,6	;RP1=0, select bank0
  2289  0FD1  00E3               	movwf	??_main
  2290  0FD2  0863               	movf	??_main,w
  2291  0FD3  00D5               	movwf	getPIR_AD@channel2
  2292  0FD4  302D               	movlw	45
  2293  0FD5  118A  2417  158A   	fcall	_getPIR_AD
  2294  0FD8                     l5357:	
  2295                           
  2296                           ;Main_B1.c: 57: }
  2297                           ;Main_B1.c: 93: if (Timer1.Timeout == 1) {
  2298  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  2299  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  2300  0FDA  1C32               	btfss	_Timer1,0
  2301  0FDB  2FB5               	goto	l5345
  2302                           
  2303                           ;Main_B1.c: 94: Timer1.Timeout = 0;
  2304  0FDC  1032               	bcf	_Timer1,0
  2305                           
  2306                           ;Main_B1.c: 96: my_MainTimer();
  2307  0FDD  158A  2450  158A   	fcall	_my_MainTimer
  2308                           
  2309                           ;Main_B1.c: 97: WDT_Main();
  2310  0FE0  158A  2378  158A   	fcall	_WDT_Main
  2311                           
  2312                           ;Main_B1.c: 98: ;;
  2313                           ;Main_B1.c: 99: ;;
  2314                           ;Main_B1.c: 100: if (myMain.PowerON == 1) {
  2315  0FE3  1283               	bcf	3,5	;RP0=0, select bank0
  2316  0FE4  1303               	bcf	3,6	;RP1=0, select bank0
  2317  0FE5  1C25               	btfss	_myMain,0
  2318  0FE6  2FB5               	goto	l5345
  2319                           
  2320                           ;Main_B1.c: 101: ;;
  2321                           ;Main_B1.c: 103: LED_Main();
  2322  0FE7  158A  2297  158A   	fcall	_LED_Main
  2323                           
  2324                           ;Main_B1.c: 104: ;;
  2325                           ;Main_B1.c: 106: SYSC_Main();
  2326  0FEA  158A  22A0  158A   	fcall	_SYSC_Main
  2327                           
  2328                           ;Main_B1.c: 107: Temp_Main();
  2329  0FED  158A  22A6  158A   	fcall	_Temp_Main
  2330                           
  2331                           ;Main_B1.c: 108: Load_Main();
  2332  0FF0  118A  222D  158A   	fcall	_Load_Main
  2333                           
  2334                           ;Main_B1.c: 109: ;;
  2335                           ;Main_B1.c: 111: Lights_Main();
  2336  0FF3  158A  24A1  158A   	fcall	_Lights_Main
  2337                           
  2338                           ;Main_B1.c: 112: ;;
  2339                           ;Main_B1.c: 113: ;;
  2340                           ;Main_B1.c: 114: CDS_Main();
  2341  0FF6  158A  2586  158A   	fcall	_CDS_Main
  2342                           
  2343                           ;Main_B1.c: 115: PIR_Main();
  2344  0FF9  118A  2026  158A   	fcall	_PIR_Main
  2345                           
  2346                           ;Main_B1.c: 117: ;;
  2347                           ;Main_B1.c: 118: ;;
  2348                           ;Main_B1.c: 119: ;;
  2349                           ;Main_B1.c: 120: ;;
  2350                           ;Main_B1.c: 121: Exception_Main();
  2351  0FFC  118A  2545  158A   	fcall	_Exception_Main
  2352  0FFF  2FB5               	goto	l5345
  2353  1000                     __end_of_main:	
  2354                           ;Main_B1.c: 128: }
  2355                           ;Main_B1.c: 129: }
  2356                           ;Main_B1.c: 163: }
  2357                           ;Main_B1.c: 164: return (0);
  2358                           ;	Return value of _main is never used
  2359                           
  2360                           
  2361                           	psect	text1
  2362  0C50                     __ptext1:	
  2363 ;; *************** function _my_MainTimer *****************
  2364 ;; Defined at:
  2365 ;;		line 185 in file "../src/Main_B1.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;		None
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;		None
  2370 ;; Return value:  Size  Location     Type
  2371 ;;		None               void
  2372 ;; Registers used:
  2373 ;;		wreg, status,2, status,0
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2379 ;;      Params:         0       0       0       0
  2380 ;;      Locals:         0       0       0       0
  2381 ;;      Temps:          1       0       0       0
  2382 ;;      Totals:         1       0       0       0
  2383 ;;Total ram usage:        1 bytes
  2384 ;; Hardware stack levels used:    1
  2385 ;; Hardware stack levels required when called:    2
  2386 ;; This function calls:
  2387 ;;		Nothing
  2388 ;; This function is called by:
  2389 ;;		_main
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392                           
  2393                           
  2394                           ;psect for function _my_MainTimer
  2395  0C50                     _my_MainTimer:	
  2396                           
  2397                           ;Main_B1.c: 187: if (myMain.PowerON == 0) {
  2398                           
  2399                           ;incstack = 0
  2400                           ; Regs used in _my_MainTimer: [wreg+status,2+status,0]
  2401  0C50  1283               	bcf	3,5	;RP0=0, select bank0
  2402  0C51  1303               	bcf	3,6	;RP1=0, select bank0
  2403  0C52  1825               	btfsc	_myMain,0
  2404  0C53  2C60               	goto	l3887
  2405                           
  2406                           ;Main_B1.c: 188: myMain.PowerCount++;
  2407  0C54  3001               	movlw	1
  2408  0C55  00F4               	movwf	??_my_MainTimer
  2409  0C56  0874               	movf	??_my_MainTimer,w
  2410  0C57  07A6               	addwf	_myMain+1,f
  2411                           
  2412                           ;Main_B1.c: 189: if (myMain.PowerCount == (1500 / 20)) {
  2413  0C58  0826               	movf	_myMain+1,w
  2414  0C59  3A4B               	xorlw	75
  2415  0C5A  1D03               	skipz
  2416  0C5B  0008               	return
  2417                           
  2418                           ;Main_B1.c: 190: myMain.PowerCount = 0;
  2419  0C5C  01A6               	clrf	_myMain+1
  2420                           
  2421                           ;Main_B1.c: 191: myMain.PowerON = 1;
  2422  0C5D  1425               	bsf	_myMain,0
  2423                           
  2424                           ;Main_B1.c: 196: ;;
  2425                           ;Main_B1.c: 197: myMain.SelfTest = 1;
  2426  0C5E  1625               	bsf	_myMain,4
  2427                           
  2428                           ;Main_B1.c: 206: }
  2429                           ;Main_B1.c: 207: } else {
  2430  0C5F  0008               	return
  2431  0C60                     l3887:	
  2432                           
  2433                           ;Main_B1.c: 208: myMain.PowerCount++;
  2434  0C60  3001               	movlw	1
  2435  0C61  00F4               	movwf	??_my_MainTimer
  2436  0C62  0874               	movf	??_my_MainTimer,w
  2437  0C63  07A6               	addwf	_myMain+1,f
  2438                           
  2439                           ;Main_B1.c: 209: if (myMain.PowerCount == (1000 / 20)) {
  2440  0C64  0826               	movf	_myMain+1,w
  2441  0C65  3A32               	xorlw	50
  2442  0C66  1D03               	skipz
  2443  0C67  0008               	return
  2444                           
  2445                           ;Main_B1.c: 210: myMain.PowerCount = 0;
  2446  0C68  01A6               	clrf	_myMain+1
  2447  0C69  0008               	return
  2448  0C6A                     __end_of_my_MainTimer:	
  2449                           
  2450                           	psect	text2
  2451  0A96                     __ptext2:	
  2452 ;; *************** function _myMain_Initialization *****************
  2453 ;; Defined at:
  2454 ;;		line 170 in file "../src/Main_B1.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;		None
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;		None
  2459 ;; Return value:  Size  Location     Type
  2460 ;;		None               void
  2461 ;; Registers used:
  2462 ;;		None
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2468 ;;      Params:         0       0       0       0
  2469 ;;      Locals:         0       0       0       0
  2470 ;;      Temps:          0       0       0       0
  2471 ;;      Totals:         0       0       0       0
  2472 ;;Total ram usage:        0 bytes
  2473 ;; Hardware stack levels used:    1
  2474 ;; Hardware stack levels required when called:    2
  2475 ;; This function calls:
  2476 ;;		Nothing
  2477 ;; This function is called by:
  2478 ;;		_main
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482                           
  2483                           ;psect for function _myMain_Initialization
  2484  0A96                     _myMain_Initialization:	
  2485                           
  2486                           ;incstack = 0
  2487                           ; Regs used in _myMain_Initialization: []
  2488  0A96  0008               	return
  2489  0A97                     __end_of_myMain_Initialization:	
  2490                           
  2491                           	psect	text3
  2492  0D2B                     __ptext3:	
  2493 ;; *************** function _getTemp_AD *****************
  2494 ;; Defined at:
  2495 ;;		line 15 in file "../src/OverTemperature_B1.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;  channel         1    wreg     unsigned char 
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;  channel         1    2[BANK0 ] unsigned char 
  2500 ;;  ADRES           1    3[BANK0 ] unsigned char 
  2501 ;; Return value:  Size  Location     Type
  2502 ;;		None               void
  2503 ;; Registers used:
  2504 ;;		wreg, status,2, status,0, pclath, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2510 ;;      Params:         0       0       0       0
  2511 ;;      Locals:         0       2       0       0
  2512 ;;      Temps:          0       2       0       0
  2513 ;;      Totals:         0       4       0       0
  2514 ;;Total ram usage:        4 bytes
  2515 ;; Hardware stack levels used:    1
  2516 ;; Hardware stack levels required when called:    4
  2517 ;; This function calls:
  2518 ;;		_getAD
  2519 ;; This function is called by:
  2520 ;;		_main
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           
  2525                           ;psect for function _getTemp_AD
  2526  0D2B                     _getTemp_AD:	
  2527                           
  2528                           ;incstack = 0
  2529                           ; Regs used in _getTemp_AD: [wreg+status,2+status,0+pclath+cstack]
  2530                           ;getTemp_AD@channel stored from wreg
  2531  0D2B  1283               	bcf	3,5	;RP0=0, select bank0
  2532  0D2C  1303               	bcf	3,6	;RP1=0, select bank0
  2533  0D2D  00CF               	movwf	getTemp_AD@channel
  2534                           
  2535                           ;OverTemperature_B1.c: 16: ADtype ADRES = 0;
  2536  0D2E  01D0               	clrf	getTemp_AD@ADRES
  2537                           
  2538                           ;OverTemperature_B1.c: 19: if (Temp.ADtoGO == 1) {
  2539  0D2F  1D39               	btfss	_Temp,2
  2540  0D30  2D49               	goto	l4863
  2541                           
  2542                           ;OverTemperature_B1.c: 21: ADRES = getAD(channel, 0x70);
  2543  0D31  3070               	movlw	112
  2544  0D32  00CD               	movwf	??_getTemp_AD
  2545  0D33  084D               	movf	??_getTemp_AD,w
  2546  0D34  00F4               	movwf	getAD@adcon1
  2547  0D35  084F               	movf	getTemp_AD@channel,w
  2548  0D36  158A  2485  158A   	fcall	_getAD
  2549  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2550  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2551  0D3B  00CE               	movwf	??_getTemp_AD+1
  2552  0D3C  084E               	movf	??_getTemp_AD+1,w
  2553  0D3D  00D0               	movwf	getTemp_AD@ADRES
  2554                           
  2555                           ;OverTemperature_B1.c: 29: if (ADRES > 0) {
  2556  0D3E  0850               	movf	getTemp_AD@ADRES,w
  2557  0D3F  1903               	btfsc	3,2
  2558  0D40  2D49               	goto	l4863
  2559                           
  2560                           ;OverTemperature_B1.c: 30: if (Temp.ADV < ADRES) {
  2561  0D41  0850               	movf	getTemp_AD@ADRES,w
  2562  0D42  023F               	subwf	_Temp+6,w
  2563  0D43  1803               	skipnc
  2564  0D44  2D49               	goto	l4863
  2565                           
  2566                           ;OverTemperature_B1.c: 31: Temp.ADV = ADRES;
  2567  0D45  0850               	movf	getTemp_AD@ADRES,w
  2568  0D46  00CD               	movwf	??_getTemp_AD
  2569  0D47  084D               	movf	??_getTemp_AD,w
  2570  0D48  00BF               	movwf	_Temp+6
  2571  0D49                     l4863:	
  2572                           
  2573                           ;OverTemperature_B1.c: 32: }
  2574                           ;OverTemperature_B1.c: 33: }
  2575                           ;OverTemperature_B1.c: 34: }
  2576                           ;OverTemperature_B1.c: 41: ADRES = getAD(channel, 0x70);
  2577  0D49  3070               	movlw	112
  2578  0D4A  00CD               	movwf	??_getTemp_AD
  2579  0D4B  084D               	movf	??_getTemp_AD,w
  2580  0D4C  00F4               	movwf	getAD@adcon1
  2581  0D4D  084F               	movf	getTemp_AD@channel,w
  2582  0D4E  158A  2485         	fcall	_getAD
  2583  0D50  1283               	bcf	3,5	;RP0=0, select bank0
  2584  0D51  1303               	bcf	3,6	;RP1=0, select bank0
  2585  0D52  00CE               	movwf	??_getTemp_AD+1
  2586  0D53  084E               	movf	??_getTemp_AD+1,w
  2587  0D54  00D0               	movwf	getTemp_AD@ADRES
  2588  0D55  0008               	return
  2589  0D56                     __end_of_getTemp_AD:	
  2590                           
  2591                           	psect	text4
  2592  0417                     __ptext4:	
  2593 ;; *************** function _getPIR_AD *****************
  2594 ;; Defined at:
  2595 ;;		line 342 in file "../src/PIR_B1.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;  channel1        1    wreg     unsigned char 
  2598 ;;  channel2        1    8[BANK0 ] unsigned char 
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;  channel1        1   13[BANK0 ] unsigned char 
  2601 ;;  i               1   16[BANK0 ] unsigned char 
  2602 ;;  VRAD            1   15[BANK0 ] unsigned char 
  2603 ;;  VRAD1           1   14[BANK0 ] unsigned char 
  2604 ;;  j               1   12[BANK0 ] unsigned char 
  2605 ;; Return value:  Size  Location     Type
  2606 ;;		None               void
  2607 ;; Registers used:
  2608 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2614 ;;      Params:         0       1       0       0
  2615 ;;      Locals:         0       5       0       0
  2616 ;;      Temps:          0       3       0       0
  2617 ;;      Totals:         0       9       0       0
  2618 ;;Total ram usage:        9 bytes
  2619 ;; Hardware stack levels used:    1
  2620 ;; Hardware stack levels required when called:    4
  2621 ;; This function calls:
  2622 ;;		___awdiv
  2623 ;;		___lwdiv
  2624 ;;		_getAD
  2625 ;; This function is called by:
  2626 ;;		_main
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           
  2631                           ;psect for function _getPIR_AD
  2632  0417                     _getPIR_AD:	
  2633                           
  2634                           ;incstack = 0
  2635                           ; Regs used in _getPIR_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2636                           ;getPIR_AD@channel1 stored from wreg
  2637  0417  1283               	bcf	3,5	;RP0=0, select bank0
  2638  0418  1303               	bcf	3,6	;RP1=0, select bank0
  2639  0419  00DA               	movwf	getPIR_AD@channel1
  2640                           
  2641                           ;PIR_B1.c: 343: char i = 0, j = 0;
  2642  041A  01DD               	clrf	getPIR_AD@i
  2643  041B  01D9               	clrf	getPIR_AD@j
  2644                           
  2645                           ;PIR_B1.c: 344: char VRAD = 0, VRAD1 = 0;
  2646  041C  01DC               	clrf	getPIR_AD@VRAD
  2647  041D  01DB               	clrf	getPIR_AD@VRAD1
  2648                           
  2649                           ;PIR_B1.c: 345: if (_PIR.ADtoGO == 1 && _PIR.GO == 0) {
  2650  041E  1683               	bsf	3,5	;RP0=1, select bank1
  2651  041F  1303               	bcf	3,6	;RP1=0, select bank1
  2652  0420  1CA0               	btfss	__PIR^(0+128),1
  2653  0421  0008               	return
  2654  0422  1920               	btfsc	__PIR^(0+128),2
  2655  0423  0008               	return
  2656                           
  2657                           ;PIR_B1.c: 346: _PIR.GO = 1;
  2658  0424  1520               	bsf	__PIR^(0+128),2
  2659                           
  2660                           ;PIR_B1.c: 353: VRAD1 = getAD(channel1, 0x70);
  2661  0425  3070               	movlw	112
  2662  0426  1283               	bcf	3,5	;RP0=0, select bank0
  2663  0427  1303               	bcf	3,6	;RP1=0, select bank0
  2664  0428  00D6               	movwf	??_getPIR_AD
  2665  0429  0856               	movf	??_getPIR_AD,w
  2666  042A  00F4               	movwf	getAD@adcon1
  2667  042B  085A               	movf	getPIR_AD@channel1,w
  2668  042C  158A  2485  118A   	fcall	_getAD
  2669  042F  1283               	bcf	3,5	;RP0=0, select bank0
  2670  0430  1303               	bcf	3,6	;RP1=0, select bank0
  2671  0431  00D7               	movwf	??_getPIR_AD+1
  2672  0432  0857               	movf	??_getPIR_AD+1,w
  2673  0433  00DB               	movwf	getPIR_AD@VRAD1
  2674                           
  2675                           ;PIR_B1.c: 354: VRAD = VRAD1 / 25;
  2676  0434  3019               	movlw	25
  2677  0435  00CD               	movwf	___awdiv@divisor
  2678  0436  3000               	movlw	0
  2679  0437  00CE               	movwf	___awdiv@divisor+1
  2680  0438  085B               	movf	getPIR_AD@VRAD1,w
  2681  0439  00D6               	movwf	??_getPIR_AD
  2682  043A  01D7               	clrf	??_getPIR_AD+1
  2683  043B  0856               	movf	??_getPIR_AD,w
  2684  043C  00CF               	movwf	___awdiv@dividend
  2685  043D  0857               	movf	??_getPIR_AD+1,w
  2686  043E  00D0               	movwf	___awdiv@dividend+1
  2687  043F  158A  26D8  118A   	fcall	___awdiv
  2688  0442  1283               	bcf	3,5	;RP0=0, select bank0
  2689  0443  1303               	bcf	3,6	;RP1=0, select bank0
  2690  0444  084D               	movf	?___awdiv,w
  2691  0445  00D8               	movwf	??_getPIR_AD+2
  2692  0446  0858               	movf	??_getPIR_AD+2,w
  2693  0447  00DC               	movwf	getPIR_AD@VRAD
  2694                           
  2695                           ;PIR_B1.c: 355: _PIR.SignalAD = getAD(channel2, 0x70);
  2696  0448  3070               	movlw	112
  2697  0449  00D6               	movwf	??_getPIR_AD
  2698  044A  0856               	movf	??_getPIR_AD,w
  2699  044B  00F4               	movwf	getAD@adcon1
  2700  044C  0855               	movf	getPIR_AD@channel2,w
  2701  044D  158A  2485  118A   	fcall	_getAD
  2702  0450  1283               	bcf	3,5	;RP0=0, select bank0
  2703  0451  1303               	bcf	3,6	;RP1=0, select bank0
  2704  0452  00D7               	movwf	??_getPIR_AD+1
  2705  0453  0857               	movf	??_getPIR_AD+1,w
  2706  0454  1683               	bsf	3,5	;RP0=1, select bank1
  2707  0455  1303               	bcf	3,6	;RP1=0, select bank1
  2708  0456  00A1               	movwf	(__PIR^(0+128)+1)
  2709                           
  2710                           ;PIR_B1.c: 369: if (VRAD < 1) {
  2711  0457  1283               	bcf	3,5	;RP0=0, select bank0
  2712  0458  1303               	bcf	3,6	;RP1=0, select bank0
  2713  0459  08DC               	movf	getPIR_AD@VRAD,f
  2714  045A  1D03               	skipz
  2715  045B  2C5E               	goto	l4879
  2716                           
  2717                           ;PIR_B1.c: 370: _PIR.CloseTimeValue = 5;
  2718  045C  3005               	movlw	5
  2719  045D  2C64               	goto	L1
  2720  045E                     l4879:	
  2721                           ;PIR_B1.c: 371: } else if (VRAD < 3) {
  2722                           
  2723  045E  3003               	movlw	3
  2724  045F  1283               	bcf	3,5	;RP0=0, select bank0
  2725  0460  025C               	subwf	getPIR_AD@VRAD,w
  2726  0461  1803               	skipnc
  2727  0462  2C69               	goto	l4883
  2728                           
  2729                           ;PIR_B1.c: 372: _PIR.CloseTimeValue = 60;
  2730  0463  303C               	movlw	60
  2731  0464                     L1:	
  2732  0464  1683               	bsf	3,5	;RP0=1, select bank1
  2733  0465  1303               	bcf	3,6	;RP1=0, select bank1
  2734  0466  00C3               	movwf	(__PIR^(0+128)+35)
  2735  0467  3000               	movlw	0
  2736  0468  2C8F               	goto	L5
  2737  0469                     l4883:	
  2738                           ;PIR_B1.c: 373: } else if (VRAD < 5) {
  2739                           
  2740  0469  3005               	movlw	5
  2741  046A  1283               	bcf	3,5	;RP0=0, select bank0
  2742  046B  025C               	subwf	getPIR_AD@VRAD,w
  2743  046C  1803               	skipnc
  2744  046D  2C74               	goto	l4887
  2745                           
  2746                           ;PIR_B1.c: 374: _PIR.CloseTimeValue = 300;
  2747  046E  302C               	movlw	44
  2748  046F  1683               	bsf	3,5	;RP0=1, select bank1
  2749  0470  1303               	bcf	3,6	;RP1=0, select bank1
  2750  0471  00C3               	movwf	(__PIR^(0+128)+35)
  2751  0472  3001               	movlw	1
  2752  0473  2C8F               	goto	L5
  2753  0474                     l4887:	
  2754                           ;PIR_B1.c: 375: } else if (VRAD < 7) {
  2755                           
  2756  0474  3007               	movlw	7
  2757  0475  1283               	bcf	3,5	;RP0=0, select bank0
  2758  0476  025C               	subwf	getPIR_AD@VRAD,w
  2759  0477  1803               	skipnc
  2760  0478  2C7F               	goto	l4891
  2761                           
  2762                           ;PIR_B1.c: 376: _PIR.CloseTimeValue = 600;
  2763  0479  3058               	movlw	88
  2764  047A  1683               	bsf	3,5	;RP0=1, select bank1
  2765  047B  1303               	bcf	3,6	;RP1=0, select bank1
  2766  047C  00C3               	movwf	(__PIR^(0+128)+35)
  2767  047D  3002               	movlw	2
  2768  047E  2C8F               	goto	L5
  2769  047F                     l4891:	
  2770                           ;PIR_B1.c: 377: } else if (VRAD < 9) {
  2771                           
  2772  047F  3009               	movlw	9
  2773  0480  1283               	bcf	3,5	;RP0=0, select bank0
  2774  0481  025C               	subwf	getPIR_AD@VRAD,w
  2775  0482  1803               	skipnc
  2776  0483  2C8A               	goto	l4895
  2777                           
  2778                           ;PIR_B1.c: 378: _PIR.CloseTimeValue = 900;
  2779  0484  3084               	movlw	132
  2780  0485  1683               	bsf	3,5	;RP0=1, select bank1
  2781  0486  1303               	bcf	3,6	;RP1=0, select bank1
  2782  0487  00C3               	movwf	(__PIR^(0+128)+35)
  2783  0488  3003               	movlw	3
  2784  0489  2C8F               	goto	L5
  2785  048A                     l4895:	
  2786                           ;PIR_B1.c: 379: } else {
  2787                           
  2788                           
  2789                           ;PIR_B1.c: 380: _PIR.CloseTimeValue = 1200;
  2790  048A  30B0               	movlw	176
  2791  048B  1683               	bsf	3,5	;RP0=1, select bank1
  2792  048C  1303               	bcf	3,6	;RP1=0, select bank1
  2793  048D  00C3               	movwf	(__PIR^(0+128)+35)
  2794  048E  3004               	movlw	4
  2795  048F                     L5:	
  2796  048F  00C4               	movwf	(__PIR^(0+128)+36)
  2797                           
  2798                           ;PIR_B1.c: 381: }
  2799                           ;PIR_B1.c: 390: _PIR.TenAverage[_PIR.TenCount] = _PIR.SignalAD;
  2800  0490  0821               	movf	(__PIR^(0+128)+1),w
  2801  0491  1283               	bcf	3,5	;RP0=0, select bank0
  2802  0492  1303               	bcf	3,6	;RP1=0, select bank0
  2803  0493  00D6               	movwf	??_getPIR_AD
  2804  0494  1683               	bsf	3,5	;RP0=1, select bank1
  2805  0495  1303               	bcf	3,6	;RP1=0, select bank1
  2806  0496  0824               	movf	(__PIR^(0+128)+4),w
  2807  0497  3EA5               	addlw	(__PIR+5)& (0+255)
  2808  0498  0084               	movwf	4
  2809  0499  1283               	bcf	3,5	;RP0=0, select bank0
  2810  049A  1303               	bcf	3,6	;RP1=0, select bank0
  2811  049B  0856               	movf	??_getPIR_AD,w
  2812  049C  1383               	bcf	3,7	;select IRP bank1
  2813  049D  0080               	movwf	0
  2814                           
  2815                           ;PIR_B1.c: 391: for (i = 0; i < 10; i++) {
  2816  049E  01DD               	clrf	getPIR_AD@i
  2817  049F  300A               	movlw	10
  2818  04A0  025D               	subwf	getPIR_AD@i,w
  2819  04A1  1803               	btfsc	3,0
  2820  04A2  2CBF               	goto	l4911
  2821  04A3                     l4905:	
  2822                           
  2823                           ;PIR_B1.c: 392: _PIR.TenAverageValue += _PIR.TenAverage[i];
  2824  04A3  085D               	movf	getPIR_AD@i,w
  2825  04A4  3EA5               	addlw	(__PIR+5)& (0+255)
  2826  04A5  0084               	movwf	4
  2827  04A6  0800               	movf	0,w
  2828  04A7  00D6               	movwf	??_getPIR_AD
  2829  04A8  01D7               	clrf	??_getPIR_AD+1
  2830  04A9  0856               	movf	??_getPIR_AD,w
  2831  04AA  1683               	bsf	3,5	;RP0=1, select bank1
  2832  04AB  1303               	bcf	3,6	;RP1=0, select bank1
  2833  04AC  07AF               	addwf	(__PIR^(0+128)+15),f
  2834  04AD  1803               	skipnc
  2835  04AE  0AB0               	incf	((__PIR+1)^(0+128)+15),f
  2836  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  2837  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  2838  04B1  0857               	movf	??_getPIR_AD+1,w
  2839  04B2  1683               	bsf	3,5	;RP0=1, select bank1
  2840  04B3  1303               	bcf	3,6	;RP1=0, select bank1
  2841  04B4  07B0               	addwf	((__PIR+1)^(0+128)+15),f
  2842  04B5  3001               	movlw	1
  2843  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  2844  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  2845  04B8  00D6               	movwf	??_getPIR_AD
  2846  04B9  0856               	movf	??_getPIR_AD,w
  2847  04BA  07DD               	addwf	getPIR_AD@i,f
  2848  04BB  300A               	movlw	10
  2849  04BC  025D               	subwf	getPIR_AD@i,w
  2850  04BD  1C03               	skipc
  2851  04BE  2CA3               	goto	l4905
  2852  04BF                     l4911:	
  2853                           
  2854                           ;PIR_B1.c: 393: }
  2855                           ;PIR_B1.c: 394: _PIR.HundredAverage[_PIR.HundreCount] = (_PIR.TenAverageValue / 10);
  2856  04BF  300A               	movlw	10
  2857  04C0  00CD               	movwf	___lwdiv@divisor
  2858  04C1  3000               	movlw	0
  2859  04C2  00CE               	movwf	___lwdiv@divisor+1
  2860  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  2861  04C4  1303               	bcf	3,6	;RP1=0, select bank1
  2862  04C5  0830               	movf	((__PIR+1)^(0+128)+15),w
  2863  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  2864  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  2865  04C8  01D0               	clrf	___lwdiv@dividend+1
  2866  04C9  07D0               	addwf	___lwdiv@dividend+1,f
  2867  04CA  1683               	bsf	3,5	;RP0=1, select bank1
  2868  04CB  1303               	bcf	3,6	;RP1=0, select bank1
  2869  04CC  082F               	movf	(__PIR^(0+128)+15),w
  2870  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  2871  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  2872  04CF  01CF               	clrf	___lwdiv@dividend
  2873  04D0  07CF               	addwf	___lwdiv@dividend,f
  2874  04D1  158A  25F8  118A   	fcall	___lwdiv
  2875  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  2876  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  2877  04D6  084D               	movf	?___lwdiv,w
  2878  04D7  00D6               	movwf	??_getPIR_AD
  2879  04D8  1683               	bsf	3,5	;RP0=1, select bank1
  2880  04D9  1303               	bcf	3,6	;RP1=0, select bank1
  2881  04DA  0831               	movf	(__PIR^(0+128)+17),w
  2882  04DB  3EB2               	addlw	(__PIR+18)& (0+255)
  2883  04DC  0084               	movwf	4
  2884  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  2885  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  2886  04DF  0856               	movf	??_getPIR_AD,w
  2887  04E0  1383               	bcf	3,7	;select IRP bank1
  2888  04E1  0080               	movwf	0
  2889                           
  2890                           ;PIR_B1.c: 395: _PIR.TenAverageValue = 0;
  2891  04E2  1683               	bsf	3,5	;RP0=1, select bank1
  2892  04E3  1303               	bcf	3,6	;RP1=0, select bank1
  2893  04E4  01AF               	clrf	(__PIR^(0+128)+15)
  2894  04E5  01B0               	clrf	((__PIR+1)^(0+128)+15)
  2895                           
  2896                           ;PIR_B1.c: 397: for (i = 0; i <= 9; i++) {
  2897  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  2898  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  2899  04E8  01DD               	clrf	getPIR_AD@i
  2900  04E9  300A               	movlw	10
  2901  04EA  025D               	subwf	getPIR_AD@i,w
  2902  04EB  1803               	btfsc	3,0
  2903  04EC  2D09               	goto	l4927
  2904  04ED                     l4921:	
  2905                           
  2906                           ;PIR_B1.c: 398: _PIR.HundredAverageValue += _PIR.HundredAverage[i];
  2907  04ED  085D               	movf	getPIR_AD@i,w
  2908  04EE  3EB2               	addlw	(__PIR+18)& (0+255)
  2909  04EF  0084               	movwf	4
  2910  04F0  0800               	movf	0,w
  2911  04F1  00D6               	movwf	??_getPIR_AD
  2912  04F2  01D7               	clrf	??_getPIR_AD+1
  2913  04F3  0856               	movf	??_getPIR_AD,w
  2914  04F4  1683               	bsf	3,5	;RP0=1, select bank1
  2915  04F5  1303               	bcf	3,6	;RP1=0, select bank1
  2916  04F6  07BC               	addwf	(__PIR^(0+128)+28),f
  2917  04F7  1803               	skipnc
  2918  04F8  0ABD               	incf	((__PIR+1)^(0+128)+28),f
  2919  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  2920  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  2921  04FB  0857               	movf	??_getPIR_AD+1,w
  2922  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  2923  04FD  1303               	bcf	3,6	;RP1=0, select bank1
  2924  04FE  07BD               	addwf	((__PIR+1)^(0+128)+28),f
  2925  04FF  3001               	movlw	1
  2926  0500  1283               	bcf	3,5	;RP0=0, select bank0
  2927  0501  1303               	bcf	3,6	;RP1=0, select bank0
  2928  0502  00D6               	movwf	??_getPIR_AD
  2929  0503  0856               	movf	??_getPIR_AD,w
  2930  0504  07DD               	addwf	getPIR_AD@i,f
  2931  0505  300A               	movlw	10
  2932  0506  025D               	subwf	getPIR_AD@i,w
  2933  0507  1C03               	skipc
  2934  0508  2CED               	goto	l4921
  2935  0509                     l4927:	
  2936                           
  2937                           ;PIR_B1.c: 399: }
  2938                           ;PIR_B1.c: 400: _PIR.ReferenceVoltage = (_PIR.HundredAverageValue / 10);
  2939  0509  300A               	movlw	10
  2940  050A  00CD               	movwf	___lwdiv@divisor
  2941  050B  3000               	movlw	0
  2942  050C  00CE               	movwf	___lwdiv@divisor+1
  2943  050D  1683               	bsf	3,5	;RP0=1, select bank1
  2944  050E  1303               	bcf	3,6	;RP1=0, select bank1
  2945  050F  083D               	movf	((__PIR+1)^(0+128)+28),w
  2946  0510  1283               	bcf	3,5	;RP0=0, select bank0
  2947  0511  1303               	bcf	3,6	;RP1=0, select bank0
  2948  0512  01D0               	clrf	___lwdiv@dividend+1
  2949  0513  07D0               	addwf	___lwdiv@dividend+1,f
  2950  0514  1683               	bsf	3,5	;RP0=1, select bank1
  2951  0515  1303               	bcf	3,6	;RP1=0, select bank1
  2952  0516  083C               	movf	(__PIR^(0+128)+28),w
  2953  0517  1283               	bcf	3,5	;RP0=0, select bank0
  2954  0518  1303               	bcf	3,6	;RP1=0, select bank0
  2955  0519  01CF               	clrf	___lwdiv@dividend
  2956  051A  07CF               	addwf	___lwdiv@dividend,f
  2957  051B  158A  25F8  118A   	fcall	___lwdiv
  2958  051E  1283               	bcf	3,5	;RP0=0, select bank0
  2959  051F  1303               	bcf	3,6	;RP1=0, select bank0
  2960  0520  084D               	movf	?___lwdiv,w
  2961  0521  00D6               	movwf	??_getPIR_AD
  2962  0522  0856               	movf	??_getPIR_AD,w
  2963  0523  1683               	bsf	3,5	;RP0=1, select bank1
  2964  0524  1303               	bcf	3,6	;RP1=0, select bank1
  2965  0525  00A3               	movwf	(__PIR^(0+128)+3)
  2966                           
  2967                           ;PIR_B1.c: 401: _PIR.HundredAverageValue = 0;
  2968  0526  01BC               	clrf	(__PIR^(0+128)+28)
  2969  0527  01BD               	clrf	((__PIR+1)^(0+128)+28)
  2970                           
  2971                           ;PIR_B1.c: 403: if (_PIR.TenCount < 10) {
  2972  0528  300A               	movlw	10
  2973  0529  0224               	subwf	(__PIR^(0+128)+4),w
  2974  052A  1803               	skipnc
  2975  052B  2D35               	goto	l4935
  2976                           
  2977                           ;PIR_B1.c: 404: _PIR.TenCount++;
  2978  052C  3001               	movlw	1
  2979  052D  1283               	bcf	3,5	;RP0=0, select bank0
  2980  052E  1303               	bcf	3,6	;RP1=0, select bank0
  2981  052F  00D6               	movwf	??_getPIR_AD
  2982  0530  0856               	movf	??_getPIR_AD,w
  2983  0531  1683               	bsf	3,5	;RP0=1, select bank1
  2984  0532  1303               	bcf	3,6	;RP1=0, select bank1
  2985  0533  07A4               	addwf	(__PIR^(0+128)+4),f
  2986                           
  2987                           ;PIR_B1.c: 405: } else {
  2988  0534  0008               	return
  2989  0535                     l4935:	
  2990                           
  2991                           ;PIR_B1.c: 406: _PIR.TenCount = 0;
  2992  0535  01A4               	clrf	(__PIR^(0+128)+4)
  2993                           
  2994                           ;PIR_B1.c: 407: if (_PIR.HundreCount < 10)
  2995  0536  300A               	movlw	10
  2996  0537  0231               	subwf	(__PIR^(0+128)+17),w
  2997  0538  1803               	skipnc
  2998  0539  2D43               	goto	l4941
  2999                           
  3000                           ;PIR_B1.c: 408: _PIR.HundreCount++;
  3001  053A  3001               	movlw	1
  3002  053B  1283               	bcf	3,5	;RP0=0, select bank0
  3003  053C  1303               	bcf	3,6	;RP1=0, select bank0
  3004  053D  00D6               	movwf	??_getPIR_AD
  3005  053E  0856               	movf	??_getPIR_AD,w
  3006  053F  1683               	bsf	3,5	;RP0=1, select bank1
  3007  0540  1303               	bcf	3,6	;RP1=0, select bank1
  3008  0541  07B1               	addwf	(__PIR^(0+128)+17),f
  3009  0542  0008               	return
  3010  0543                     l4941:	
  3011                           
  3012                           ;PIR_B1.c: 409: else
  3013                           ;PIR_B1.c: 410: _PIR.HundreCount = 0;
  3014  0543  01B1               	clrf	(__PIR^(0+128)+17)
  3015  0544  0008               	return
  3016  0545                     __end_of_getPIR_AD:	
  3017                           
  3018                           	psect	text5
  3019  0E7C                     __ptext5:	
  3020 ;; *************** function _getLoad_AD *****************
  3021 ;; Defined at:
  3022 ;;		line 15 in file "../src/OverLoad_B1.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;  channel         1    wreg     unsigned char 
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;  channel         1    2[BANK0 ] unsigned char 
  3027 ;;  i               1    6[BANK0 ] unsigned char 
  3028 ;;  ADRES           1    5[BANK0 ] unsigned char 
  3029 ;;  j               1    4[BANK0 ] unsigned char 
  3030 ;;  k               1    3[BANK0 ] unsigned char 
  3031 ;; Return value:  Size  Location     Type
  3032 ;;		None               void
  3033 ;; Registers used:
  3034 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3040 ;;      Params:         0       0       0       0
  3041 ;;      Locals:         0       5       0       0
  3042 ;;      Temps:          0       2       0       0
  3043 ;;      Totals:         0       7       0       0
  3044 ;;Total ram usage:        7 bytes
  3045 ;; Hardware stack levels used:    1
  3046 ;; Hardware stack levels required when called:    4
  3047 ;; This function calls:
  3048 ;;		_getAD
  3049 ;; This function is called by:
  3050 ;;		_main
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053                           
  3054                           
  3055                           ;psect for function _getLoad_AD
  3056  0E7C                     _getLoad_AD:	
  3057                           
  3058                           ;incstack = 0
  3059                           ; Regs used in _getLoad_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3060                           ;getLoad_AD@channel stored from wreg
  3061  0E7C  1283               	bcf	3,5	;RP0=0, select bank0
  3062  0E7D  1303               	bcf	3,6	;RP1=0, select bank0
  3063  0E7E  00CF               	movwf	getLoad_AD@channel
  3064                           
  3065                           ;OverLoad_B1.c: 16: char i = 0, j = 0, k = 0;
  3066  0E7F  01D3               	clrf	getLoad_AD@i
  3067  0E80  01D1               	clrf	getLoad_AD@j
  3068  0E81  01D0               	clrf	getLoad_AD@k
  3069                           
  3070                           ;OverLoad_B1.c: 17: ADtype ADRES = 0;
  3071  0E82  01D2               	clrf	getLoad_AD@ADRES
  3072                           
  3073                           ;OverLoad_B1.c: 18: if (Load.ADtoGO == 1) {
  3074  0E83  1683               	bsf	3,5	;RP0=1, select bank1
  3075  0E84  1303               	bcf	3,6	;RP1=0, select bank1
  3076  0E85  1E4A               	btfss	_Load^(0+128),4
  3077  0E86  0008               	return
  3078                           
  3079                           ;OverLoad_B1.c: 20: ADRES = getAD(channel, 0x73);
  3080  0E87  3073               	movlw	115
  3081  0E88  1283               	bcf	3,5	;RP0=0, select bank0
  3082  0E89  1303               	bcf	3,6	;RP1=0, select bank0
  3083  0E8A  00CD               	movwf	??_getLoad_AD
  3084  0E8B  084D               	movf	??_getLoad_AD,w
  3085  0E8C  00F4               	movwf	getAD@adcon1
  3086  0E8D  084F               	movf	getLoad_AD@channel,w
  3087  0E8E  158A  2485  158A   	fcall	_getAD
  3088  0E91  1283               	bcf	3,5	;RP0=0, select bank0
  3089  0E92  1303               	bcf	3,6	;RP1=0, select bank0
  3090  0E93  00CE               	movwf	??_getLoad_AD+1
  3091  0E94  084E               	movf	??_getLoad_AD+1,w
  3092  0E95  00D2               	movwf	getLoad_AD@ADRES
  3093                           
  3094                           ;OverLoad_B1.c: 21: for (i = 0; i < 4; i++) {
  3095  0E96  01D3               	clrf	getLoad_AD@i
  3096  0E97  3004               	movlw	4
  3097  0E98  0253               	subwf	getLoad_AD@i,w
  3098  0E99  1803               	btfsc	3,0
  3099  0E9A  2EB7               	goto	l4831
  3100  0E9B                     l4819:	
  3101                           
  3102                           ;OverLoad_B1.c: 22: if (Load.AH[i] < ADRES && j == 0) {
  3103  0E9B  0853               	movf	getLoad_AD@i,w
  3104  0E9C  3ED4               	addlw	(_Load+10)& (0+255)
  3105  0E9D  0084               	movwf	4
  3106  0E9E  0852               	movf	getLoad_AD@ADRES,w
  3107  0E9F  1383               	bcf	3,7	;select IRP bank1
  3108  0EA0  0200               	subwf	0,w
  3109  0EA1  1803               	skipnc
  3110  0EA2  2EAF               	goto	l4827
  3111  0EA3  08D1               	movf	getLoad_AD@j,f
  3112  0EA4  1D03               	skipz
  3113  0EA5  2EAF               	goto	l4827
  3114                           
  3115                           ;OverLoad_B1.c: 23: Load.AH[i] = ADRES;
  3116  0EA6  0852               	movf	getLoad_AD@ADRES,w
  3117  0EA7  00CD               	movwf	??_getLoad_AD
  3118  0EA8  0853               	movf	getLoad_AD@i,w
  3119  0EA9  3ED4               	addlw	(_Load+10)& (0+255)
  3120  0EAA  0084               	movwf	4
  3121  0EAB  084D               	movf	??_getLoad_AD,w
  3122  0EAC  0080               	movwf	0
  3123                           
  3124                           ;OverLoad_B1.c: 24: j = 1;
  3125  0EAD  01D1               	clrf	getLoad_AD@j
  3126  0EAE  0AD1               	incf	getLoad_AD@j,f
  3127  0EAF                     l4827:	
  3128  0EAF  3001               	movlw	1
  3129  0EB0  00CD               	movwf	??_getLoad_AD
  3130  0EB1  084D               	movf	??_getLoad_AD,w
  3131  0EB2  07D3               	addwf	getLoad_AD@i,f
  3132  0EB3  3004               	movlw	4
  3133  0EB4  0253               	subwf	getLoad_AD@i,w
  3134  0EB5  1C03               	skipc
  3135  0EB6  2E9B               	goto	l4819
  3136  0EB7                     l4831:	
  3137                           
  3138                           ;OverLoad_B1.c: 25: }
  3139                           ;OverLoad_B1.c: 26: }
  3140                           ;OverLoad_B1.c: 27: if (j == 0) {
  3141  0EB7  08D1               	movf	getLoad_AD@j,f
  3142  0EB8  1D03               	skipz
  3143  0EB9  0008               	return
  3144                           
  3145                           ;OverLoad_B1.c: 28: for (i = 0; i < 4; i++) {
  3146  0EBA  01D3               	clrf	getLoad_AD@i
  3147  0EBB                     L6:	
  3148  0EBB  3004               	movlw	4
  3149  0EBC  0253               	subwf	getLoad_AD@i,w
  3150  0EBD  1803               	btfsc	3,0
  3151  0EBE  0008               	return
  3152                           
  3153                           ;OverLoad_B1.c: 29: if (Load.AL[i] > ADRES && k == 0) {
  3154  0EBF  0853               	movf	getLoad_AD@i,w
  3155  0EC0  3ED9               	addlw	(_Load+15)& (0+255)
  3156  0EC1  0084               	movwf	4
  3157  0EC2  1383               	bcf	3,7	;select IRP bank1
  3158  0EC3  0800               	movf	0,w
  3159  0EC4  0252               	subwf	getLoad_AD@ADRES,w
  3160  0EC5  1803               	skipnc
  3161  0EC6  2ED3               	goto	l4847
  3162  0EC7  08D0               	movf	getLoad_AD@k,f
  3163  0EC8  1D03               	skipz
  3164  0EC9  2ED3               	goto	l4847
  3165                           
  3166                           ;OverLoad_B1.c: 30: Load.AL[i] = ADRES;
  3167  0ECA  0852               	movf	getLoad_AD@ADRES,w
  3168  0ECB  00CD               	movwf	??_getLoad_AD
  3169  0ECC  0853               	movf	getLoad_AD@i,w
  3170  0ECD  3ED9               	addlw	(_Load+15)& (0+255)
  3171  0ECE  0084               	movwf	4
  3172  0ECF  084D               	movf	??_getLoad_AD,w
  3173  0ED0  0080               	movwf	0
  3174                           
  3175                           ;OverLoad_B1.c: 31: k = 1;
  3176  0ED1  01D0               	clrf	getLoad_AD@k
  3177  0ED2  0AD0               	incf	getLoad_AD@k,f
  3178  0ED3                     l4847:	
  3179  0ED3  3001               	movlw	1
  3180  0ED4  00CD               	movwf	??_getLoad_AD
  3181  0ED5  084D               	movf	??_getLoad_AD,w
  3182  0ED6  07D3               	addwf	getLoad_AD@i,f
  3183  0ED7  2EBB               	goto	L6
  3184  0ED8                     __end_of_getLoad_AD:	
  3185                           
  3186                           	psect	text6
  3187  0CBF                     __ptext6:	
  3188 ;; *************** function _getCDS_AD *****************
  3189 ;; Defined at:
  3190 ;;		line 48 in file "../src/CDS_B1.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;  channel1        1    wreg     unsigned char 
  3193 ;;  channel2        1    0[BANK0 ] unsigned char 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;  channel1        1    5[BANK0 ] unsigned char 
  3196 ;;  j               1    4[BANK0 ] unsigned char 
  3197 ;;  i               1    3[BANK0 ] unsigned char 
  3198 ;; Return value:  Size  Location     Type
  3199 ;;		None               void
  3200 ;; Registers used:
  3201 ;;		wreg, status,2, status,0, pclath, cstack
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3207 ;;      Params:         0       1       0       0
  3208 ;;      Locals:         0       3       0       0
  3209 ;;      Temps:          0       2       0       0
  3210 ;;      Totals:         0       6       0       0
  3211 ;;Total ram usage:        6 bytes
  3212 ;; Hardware stack levels used:    1
  3213 ;; Hardware stack levels required when called:    4
  3214 ;; This function calls:
  3215 ;;		_getAD
  3216 ;; This function is called by:
  3217 ;;		_main
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           
  3222                           ;psect for function _getCDS_AD
  3223  0CBF                     _getCDS_AD:	
  3224                           
  3225                           ;incstack = 0
  3226                           ; Regs used in _getCDS_AD: [wreg+status,2+status,0+pclath+cstack]
  3227                           ;getCDS_AD@channel1 stored from wreg
  3228  0CBF  1283               	bcf	3,5	;RP0=0, select bank0
  3229  0CC0  1303               	bcf	3,6	;RP1=0, select bank0
  3230  0CC1  00D2               	movwf	getCDS_AD@channel1
  3231                           
  3232                           ;CDS_B1.c: 49: char i = 0, j = 0;
  3233  0CC2  01D0               	clrf	getCDS_AD@i
  3234  0CC3  01D1               	clrf	getCDS_AD@j
  3235                           
  3236                           ;CDS_B1.c: 50: if (_CDS.ADtoGO == 1) {
  3237  0CC4  1DAE               	btfss	__CDS,3
  3238  0CC5  0008               	return
  3239                           
  3240                           ;CDS_B1.c: 51: _CDS.GO = 1;
  3241  0CC6  14AE               	bsf	__CDS,1
  3242                           
  3243                           ;CDS_B1.c: 52: _CDS.VRAD = getAD(channel1, 0x70);
  3244  0CC7  3070               	movlw	112
  3245  0CC8  00CE               	movwf	??_getCDS_AD
  3246  0CC9  084E               	movf	??_getCDS_AD,w
  3247  0CCA  00F4               	movwf	getAD@adcon1
  3248  0CCB  0852               	movf	getCDS_AD@channel1,w
  3249  0CCC  158A  2485  158A   	fcall	_getAD
  3250  0CCF  1283               	bcf	3,5	;RP0=0, select bank0
  3251  0CD0  1303               	bcf	3,6	;RP1=0, select bank0
  3252  0CD1  00CF               	movwf	??_getCDS_AD+1
  3253  0CD2  084F               	movf	??_getCDS_AD+1,w
  3254  0CD3  00B0               	movwf	__CDS+2
  3255                           
  3256                           ;CDS_B1.c: 53: _CDS.SignalAD = getAD(channel2, 0x70);
  3257  0CD4  3070               	movlw	112
  3258  0CD5  00CE               	movwf	??_getCDS_AD
  3259  0CD6  084E               	movf	??_getCDS_AD,w
  3260  0CD7  00F4               	movwf	getAD@adcon1
  3261  0CD8  084D               	movf	getCDS_AD@channel2,w
  3262  0CD9  158A  2485         	fcall	_getAD
  3263  0CDB  1283               	bcf	3,5	;RP0=0, select bank0
  3264  0CDC  1303               	bcf	3,6	;RP1=0, select bank0
  3265  0CDD  00CF               	movwf	??_getCDS_AD+1
  3266  0CDE  084F               	movf	??_getCDS_AD+1,w
  3267  0CDF  00B1               	movwf	__CDS+3
  3268  0CE0  0008               	return
  3269  0CE1                     __end_of_getCDS_AD:	
  3270                           
  3271                           	psect	text7
  3272  0C85                     __ptext7:	
  3273 ;; *************** function _getAD *****************
  3274 ;; Defined at:
  3275 ;;		line 434 in file "../src/MCU_B1.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;  adcon0          1    wreg     unsigned char 
  3278 ;;  adcon1          1    4[COMMON] unsigned char 
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;  adcon0          1    5[COMMON] unsigned char 
  3281 ;; Return value:  Size  Location     Type
  3282 ;;                  1    wreg      unsigned char 
  3283 ;; Registers used:
  3284 ;;		wreg, status,2, status,0, pclath, cstack
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3290 ;;      Params:         1       0       0       0
  3291 ;;      Locals:         1       0       0       0
  3292 ;;      Temps:          0       0       0       0
  3293 ;;      Totals:         2       0       0       0
  3294 ;;Total ram usage:        2 bytes
  3295 ;; Hardware stack levels used:    1
  3296 ;; Hardware stack levels required when called:    3
  3297 ;; This function calls:
  3298 ;;		_Timeout_Counter
  3299 ;;		_set_TimeoutCleared
  3300 ;; This function is called by:
  3301 ;;		_getCDS_AD
  3302 ;;		_getLoad_AD
  3303 ;;		_getTemp_AD
  3304 ;;		_getPIR_AD
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           
  3309                           ;psect for function _getAD
  3310  0C85                     _getAD:	
  3311                           
  3312                           ;incstack = 0
  3313                           ; Regs used in _getAD: [wreg+status,2+status,0+pclath+cstack]
  3314                           ;getAD@adcon0 stored from wreg
  3315  0C85  00F5               	movwf	getAD@adcon0
  3316                           
  3317                           ;MCU_B1.c: 435: ADCON0 = adcon0;
  3318  0C86  0875               	movf	getAD@adcon0,w
  3319  0C87  1283               	bcf	3,5	;RP0=0, select bank0
  3320  0C88  1303               	bcf	3,6	;RP1=0, select bank0
  3321  0C89  009F               	movwf	31	;volatile
  3322                           
  3323                           ;MCU_B1.c: 436: ADCON1 = adcon1;
  3324  0C8A  0874               	movf	getAD@adcon1,w
  3325  0C8B  1683               	bsf	3,5	;RP0=1, select bank1
  3326  0C8C  1303               	bcf	3,6	;RP1=0, select bank1
  3327  0C8D  009F               	movwf	31	;volatile
  3328                           
  3329                           ;MCU_B1.c: 437: GO_nDONE = 1;
  3330  0C8E  1283               	bcf	3,5	;RP0=0, select bank0
  3331  0C8F  1303               	bcf	3,6	;RP1=0, select bank0
  3332  0C90  149F               	bsf	31,1	;volatile
  3333                           
  3334                           ;MCU_B1.c: 438: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  3335  0C91  2C95               	goto	l4611
  3336  0C92                     l4609:	
  3337                           
  3338                           ;MCU_B1.c: 439: Timeout_Counter();
  3339  0C92  158A  23AD  158A   	fcall	_Timeout_Counter
  3340  0C95                     l4611:	
  3341  0C95  1283               	bcf	3,5	;RP0=0, select bank0
  3342  0C96  1303               	bcf	3,6	;RP1=0, select bank0
  3343  0C97  1C9F               	btfss	31,1	;volatile
  3344  0C98  2C9B               	goto	l4615
  3345  0C99  1D27               	btfss	_myMain+2,2
  3346  0C9A  2C92               	goto	l4609
  3347  0C9B                     l4615:	
  3348                           
  3349                           ;MCU_B1.c: 440: };
  3350                           ;MCU_B1.c: 441: set_TimeoutCleared();
  3351  0C9B  158A  22C6         	fcall	_set_TimeoutCleared
  3352                           
  3353                           ;MCU_B1.c: 442: return ADRES;
  3354  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  3355  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  3356  0C9F  081E               	movf	30,w	;volatile
  3357  0CA0  0008               	return
  3358  0CA1                     __end_of_getAD:	
  3359                           
  3360                           	psect	text8
  3361  0AC6                     __ptext8:	
  3362 ;; *************** function _set_TimeoutCleared *****************
  3363 ;; Defined at:
  3364 ;;		line 281 in file "../src/Main_B1.c"
  3365 ;; Parameters:    Size  Location     Type
  3366 ;;		None
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;		None
  3369 ;; Return value:  Size  Location     Type
  3370 ;;		None               void
  3371 ;; Registers used:
  3372 ;;		status,2
  3373 ;; Tracked objects:
  3374 ;;		On entry : 0/0
  3375 ;;		On exit  : 0/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3378 ;;      Params:         0       0       0       0
  3379 ;;      Locals:         0       0       0       0
  3380 ;;      Temps:          0       0       0       0
  3381 ;;      Totals:         0       0       0       0
  3382 ;;Total ram usage:        0 bytes
  3383 ;; Hardware stack levels used:    1
  3384 ;; Hardware stack levels required when called:    2
  3385 ;; This function calls:
  3386 ;;		Nothing
  3387 ;; This function is called by:
  3388 ;;		_getAD
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           
  3393                           ;psect for function _set_TimeoutCleared
  3394  0AC6                     _set_TimeoutCleared:	
  3395                           
  3396                           ;Main_B1.c: 282: myMain.Timeout = 0;
  3397                           
  3398                           ;incstack = 0
  3399                           ; Regs used in _set_TimeoutCleared: [status,2]
  3400  0AC6  1283               	bcf	3,5	;RP0=0, select bank0
  3401  0AC7  1303               	bcf	3,6	;RP1=0, select bank0
  3402  0AC8  1127               	bcf	_myMain+2,2
  3403                           
  3404                           ;Main_B1.c: 283: myMain.Timeout_Counter = 0;
  3405  0AC9  01A8               	clrf	_myMain+3
  3406  0ACA  01A9               	clrf	_myMain+4
  3407  0ACB  0008               	return
  3408  0ACC                     __end_of_set_TimeoutCleared:	
  3409                           
  3410                           	psect	text9
  3411  0BAD                     __ptext9:	
  3412 ;; *************** function _Timeout_Counter *****************
  3413 ;; Defined at:
  3414 ;;		line 272 in file "../src/Main_B1.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;		None
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;		None
  3419 ;; Return value:  Size  Location     Type
  3420 ;;		None               void
  3421 ;; Registers used:
  3422 ;;		wreg, status,2
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3428 ;;      Params:         0       0       0       0
  3429 ;;      Locals:         0       0       0       0
  3430 ;;      Temps:          0       0       0       0
  3431 ;;      Totals:         0       0       0       0
  3432 ;;Total ram usage:        0 bytes
  3433 ;; Hardware stack levels used:    1
  3434 ;; Hardware stack levels required when called:    2
  3435 ;; This function calls:
  3436 ;;		Nothing
  3437 ;; This function is called by:
  3438 ;;		_getAD
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           
  3443                           ;psect for function _Timeout_Counter
  3444  0BAD                     _Timeout_Counter:	
  3445                           
  3446                           ;Main_B1.c: 273: myMain.Timeout_Counter++;
  3447                           
  3448                           ;incstack = 0
  3449                           ; Regs used in _Timeout_Counter: [wreg+status,2]
  3450  0BAD  3001               	movlw	1
  3451  0BAE  1283               	bcf	3,5	;RP0=0, select bank0
  3452  0BAF  1303               	bcf	3,6	;RP1=0, select bank0
  3453  0BB0  07A8               	addwf	_myMain+3,f
  3454  0BB1  1803               	skipnc
  3455  0BB2  0AA9               	incf	_myMain+4,f
  3456  0BB3  3000               	movlw	0
  3457  0BB4  07A9               	addwf	_myMain+4,f
  3458                           
  3459                           ;Main_B1.c: 274: if (myMain.Timeout_Counter == 25000) {
  3460  0BB5  3061               	movlw	97
  3461  0BB6  0629               	xorwf	_myMain+4,w
  3462  0BB7  1D03               	skipz
  3463  0BB8  2BBB               	goto	u5135
  3464  0BB9  30A8               	movlw	168
  3465  0BBA  0628               	xorwf	_myMain+3,w
  3466  0BBB                     u5135:	
  3467  0BBB  1D03               	skipz
  3468  0BBC  0008               	return
  3469                           
  3470                           ;Main_B1.c: 275: myMain.Timeout_Counter = 0;
  3471  0BBD  01A8               	clrf	_myMain+3
  3472  0BBE  01A9               	clrf	_myMain+4
  3473                           
  3474                           ;Main_B1.c: 276: myMain.Timeout = 1;
  3475  0BBF  1527               	bsf	_myMain+2,2
  3476  0BC0  0008               	return
  3477  0BC1                     __end_of_Timeout_Counter:	
  3478                           
  3479                           	psect	text10
  3480  0B78                     __ptext10:	
  3481 ;; *************** function _WDT_Main *****************
  3482 ;; Defined at:
  3483 ;;		line 1116 in file "../src/MCU_B1.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;		None
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;		None
  3488 ;; Return value:  Size  Location     Type
  3489 ;;		None               void
  3490 ;; Registers used:
  3491 ;;		wreg, status,2, status,0, pclath, cstack
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3497 ;;      Params:         0       0       0       0
  3498 ;;      Locals:         0       0       0       0
  3499 ;;      Temps:          1       0       0       0
  3500 ;;      Totals:         1       0       0       0
  3501 ;;Total ram usage:        1 bytes
  3502 ;; Hardware stack levels used:    1
  3503 ;; Hardware stack levels required when called:    3
  3504 ;; This function calls:
  3505 ;;		_WDT_Clearing
  3506 ;; This function is called by:
  3507 ;;		_main
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           
  3512                           ;psect for function _WDT_Main
  3513  0B78                     _WDT_Main:	
  3514                           
  3515                           ;MCU_B1.c: 1117: if (WDT.Enable == 1) {
  3516                           
  3517                           ;incstack = 0
  3518                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  3519  0B78  1283               	bcf	3,5	;RP0=0, select bank0
  3520  0B79  1303               	bcf	3,6	;RP1=0, select bank0
  3521  0B7A  1C35               	btfss	_WDT,0
  3522  0B7B  0008               	return
  3523                           
  3524                           ;MCU_B1.c: 1118: if (WDT.Timer-- > 0) {
  3525  0B7C  3001               	movlw	1
  3526  0B7D  02B6               	subwf	_WDT+1,f
  3527  0B7E  0836               	movf	_WDT+1,w
  3528  0B7F  3AFF               	xorlw	255
  3529  0B80  1903               	skipnz
  3530  0B81  0008               	return
  3531                           
  3532                           ;MCU_B1.c: 1119: WDT.Timer = 100;
  3533  0B82  3064               	movlw	100
  3534  0B83  00F4               	movwf	??_WDT_Main
  3535  0B84  0874               	movf	??_WDT_Main,w
  3536  0B85  00B6               	movwf	_WDT+1
  3537                           
  3538                           ;MCU_B1.c: 1120: WDT_Clearing();
  3539  0B86  118A  2002         	fcall	_WDT_Clearing
  3540  0B88  0008               	return
  3541  0B89                     __end_of_WDT_Main:	
  3542                           
  3543                           	psect	text11
  3544  0002                     __ptext11:	
  3545 ;; *************** function _WDT_Clearing *****************
  3546 ;; Defined at:
  3547 ;;		line 1126 in file "../src/MCU_B1.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;		None
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;		None
  3552 ;; Return value:  Size  Location     Type
  3553 ;;		None               void
  3554 ;; Registers used:
  3555 ;;		None
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3561 ;;      Params:         0       0       0       0
  3562 ;;      Locals:         0       0       0       0
  3563 ;;      Temps:          0       0       0       0
  3564 ;;      Totals:         0       0       0       0
  3565 ;;Total ram usage:        0 bytes
  3566 ;; Hardware stack levels used:    1
  3567 ;; Hardware stack levels required when called:    2
  3568 ;; This function calls:
  3569 ;;		Nothing
  3570 ;; This function is called by:
  3571 ;;		_WDT_Main
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           
  3576                           ;psect for function _WDT_Clearing
  3577  0002                     _WDT_Clearing:	
  3578                           
  3579                           ;incstack = 0
  3580                           ; Regs used in _WDT_Clearing: []
  3581  0002  0064               	clrwdt	;# 
  3582  0003  0008               	return
  3583  0004                     __end_of_WDT_Clearing:	
  3584                           
  3585                           	psect	text12
  3586  0AA6                     __ptext12:	
  3587 ;; *************** function _Temp_Main *****************
  3588 ;; Defined at:
  3589 ;;		line 57 in file "../src/OverTemperature_B1.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;		None
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;		None
  3594 ;; Return value:  Size  Location     Type
  3595 ;;		None               void
  3596 ;; Registers used:
  3597 ;;		wreg, status,2, status,0, pclath, cstack
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3603 ;;      Params:         0       0       0       0
  3604 ;;      Locals:         0       0       0       0
  3605 ;;      Temps:          0       0       0       0
  3606 ;;      Totals:         0       0       0       0
  3607 ;;Total ram usage:        0 bytes
  3608 ;; Hardware stack levels used:    1
  3609 ;; Hardware stack levels required when called:    4
  3610 ;; This function calls:
  3611 ;;		_setTemp_Main
  3612 ;; This function is called by:
  3613 ;;		_main
  3614 ;; This function uses a non-reentrant model
  3615 ;;
  3616                           
  3617                           
  3618                           ;psect for function _Temp_Main
  3619  0AA6                     _Temp_Main:	
  3620                           
  3621                           ;OverTemperature_B1.c: 59: setTemp_Main();
  3622                           
  3623                           ;incstack = 0
  3624                           ; Regs used in _Temp_Main: [wreg+status,2+status,0+pclath+cstack]
  3625  0AA6  118A  2709         	fcall	_setTemp_Main
  3626  0AA8  0008               	return
  3627  0AA9                     __end_of_Temp_Main:	
  3628                           
  3629                           	psect	text13
  3630  0709                     __ptext13:	
  3631 ;; *************** function _setTemp_Main *****************
  3632 ;; Defined at:
  3633 ;;		line 64 in file "../src/OverTemperature_B1.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;		None
  3636 ;; Auto vars:     Size  Location     Type
  3637 ;;  AD              1   10[BANK0 ] unsigned char 
  3638 ;;  DangerValue     1    9[BANK0 ] unsigned char 
  3639 ;;  SafeValue       1    8[BANK0 ] unsigned char 
  3640 ;;  TempGO          1    7[BANK0 ] unsigned char 
  3641 ;;  error           1    6[BANK0 ] unsigned char 
  3642 ;; Return value:  Size  Location     Type
  3643 ;;		None               void
  3644 ;; Registers used:
  3645 ;;		wreg, status,2, status,0, pclath, cstack
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3651 ;;      Params:         0       0       0       0
  3652 ;;      Locals:         0       5       0       0
  3653 ;;      Temps:          1       0       0       0
  3654 ;;      Totals:         1       5       0       0
  3655 ;;Total ram usage:        6 bytes
  3656 ;; Hardware stack levels used:    1
  3657 ;; Hardware stack levels required when called:    3
  3658 ;; This function calls:
  3659 ;;		_getMain_All_Error_Status
  3660 ;;		_getMain_All_LightsStatus
  3661 ;; This function is called by:
  3662 ;;		_Temp_Main
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           
  3667                           ;psect for function _setTemp_Main
  3668  0709                     _setTemp_Main:	
  3669                           
  3670                           ;OverTemperature_B1.c: 65: char error = getMain_All_Error_Status(0);
  3671                           
  3672                           ;incstack = 0
  3673                           ; Regs used in _setTemp_Main: [wreg+status,2+status,0+pclath+cstack]
  3674  0709  3000               	movlw	0
  3675  070A  158A  25BA  118A   	fcall	_getMain_All_Error_Status
  3676  070D  00F5               	movwf	??_setTemp_Main
  3677  070E  0875               	movf	??_setTemp_Main,w
  3678  070F  1283               	bcf	3,5	;RP0=0, select bank0
  3679  0710  1303               	bcf	3,6	;RP1=0, select bank0
  3680  0711  00D3               	movwf	setTemp_Main@error
  3681                           
  3682                           ;OverTemperature_B1.c: 66: ADtype SafeValue = 0, DangerValue = 0, AD;
  3683  0712  01D5               	clrf	setTemp_Main@SafeValue
  3684  0713  01D6               	clrf	setTemp_Main@DangerValue
  3685                           
  3686                           ;OverTemperature_B1.c: 67: char TempGO = getMain_All_LightsStatus();
  3687  0714  158A  2303  118A   	fcall	_getMain_All_LightsStatus
  3688  0717  00F5               	movwf	??_setTemp_Main
  3689  0718  0875               	movf	??_setTemp_Main,w
  3690  0719  1283               	bcf	3,5	;RP0=0, select bank0
  3691  071A  1303               	bcf	3,6	;RP1=0, select bank0
  3692  071B  00D4               	movwf	setTemp_Main@TempGO
  3693                           
  3694                           ;OverTemperature_B1.c: 69: if (Temp.Enable == 1) {
  3695  071C  1C39               	btfss	_Temp,0
  3696  071D  2F80               	goto	l820
  3697                           
  3698                           ;OverTemperature_B1.c: 77: if (Temp.ADtoGO == 0) {
  3699  071E  1939               	btfsc	_Temp,2
  3700  071F  2F3C               	goto	l3515
  3701                           
  3702                           ;OverTemperature_B1.c: 78: if ((TempGO == 1 && Temp.ERROR == 0) || Temp.ERROR == 1) {
  3703  0720  0854               	movf	setTemp_Main@TempGO,w
  3704  0721  3A01               	xorlw	1
  3705  0722  1D03               	skipz
  3706  0723  2F26               	goto	l826
  3707  0724  1CB9               	btfss	_Temp,1
  3708  0725  2F28               	goto	l3507
  3709  0726                     l826:	
  3710  0726  1CB9               	btfss	_Temp,1
  3711  0727  2F39               	goto	l3513
  3712  0728                     l3507:	
  3713                           
  3714                           ;OverTemperature_B1.c: 79: Temp.Time++;
  3715  0728  3001               	movlw	1
  3716  0729  07BA               	addwf	_Temp+1,f
  3717  072A  1803               	skipnc
  3718  072B  0ABB               	incf	_Temp+2,f
  3719  072C  3000               	movlw	0
  3720  072D  07BB               	addwf	_Temp+2,f
  3721                           
  3722                           ;OverTemperature_B1.c: 80: if (Temp.Time >= (5000 / 20)) {
  3723  072E  3000               	movlw	0
  3724  072F  023B               	subwf	_Temp+2,w
  3725  0730  30FA               	movlw	250
  3726  0731  1903               	skipnz
  3727  0732  023A               	subwf	_Temp+1,w
  3728  0733  1C03               	skipc
  3729  0734  0008               	return
  3730                           
  3731                           ;OverTemperature_B1.c: 81: Temp.Time = 0;
  3732  0735  01BA               	clrf	_Temp+1
  3733  0736  01BB               	clrf	_Temp+2
  3734                           
  3735                           ;OverTemperature_B1.c: 82: Temp.ADtoGO = 1;
  3736  0737  1539               	bsf	_Temp,2
  3737                           
  3738                           ;OverTemperature_B1.c: 83: }
  3739                           ;OverTemperature_B1.c: 84: } else {
  3740  0738  0008               	return
  3741  0739                     l3513:	
  3742                           
  3743                           ;OverTemperature_B1.c: 85: Temp.Time = 0;
  3744  0739  01BA               	clrf	_Temp+1
  3745  073A  01BB               	clrf	_Temp+2
  3746                           
  3747                           ;OverTemperature_B1.c: 86: }
  3748                           ;OverTemperature_B1.c: 87: } else {
  3749  073B  0008               	return
  3750  073C                     l3515:	
  3751                           
  3752                           ;OverTemperature_B1.c: 88: Temp.Time++;
  3753  073C  3001               	movlw	1
  3754  073D  07BA               	addwf	_Temp+1,f
  3755  073E  1803               	skipnc
  3756  073F  0ABB               	incf	_Temp+2,f
  3757  0740  3000               	movlw	0
  3758  0741  07BB               	addwf	_Temp+2,f
  3759                           
  3760                           ;OverTemperature_B1.c: 89: if (Temp.Time >= (100 / 20)) {
  3761  0742  3000               	movlw	0
  3762  0743  023B               	subwf	_Temp+2,w
  3763  0744  3005               	movlw	5
  3764  0745  1903               	skipnz
  3765  0746  023A               	subwf	_Temp+1,w
  3766  0747  1C03               	skipc
  3767  0748  0008               	return
  3768                           
  3769                           ;OverTemperature_B1.c: 90: Temp.Time = 0;
  3770  0749  01BA               	clrf	_Temp+1
  3771  074A  01BB               	clrf	_Temp+2
  3772                           
  3773                           ;OverTemperature_B1.c: 95: if (Temp.ADV > 0) {
  3774  074B  083F               	movf	_Temp+6,w
  3775  074C  1903               	btfsc	3,2
  3776  074D  2F7C               	goto	l831
  3777                           
  3778                           ;OverTemperature_B1.c: 96: Temp.ADtoGO = 0;
  3779  074E  1139               	bcf	_Temp,2
  3780                           
  3781                           ;OverTemperature_B1.c: 97: AD = Temp.ADV;
  3782  074F  083F               	movf	_Temp+6,w
  3783  0750  00F5               	movwf	??_setTemp_Main
  3784  0751  0875               	movf	??_setTemp_Main,w
  3785  0752  00D7               	movwf	setTemp_Main@AD
  3786                           
  3787                           ;OverTemperature_B1.c: 106: SafeValue = 0x50;
  3788  0753  3050               	movlw	80
  3789  0754  00F5               	movwf	??_setTemp_Main
  3790  0755  0875               	movf	??_setTemp_Main,w
  3791  0756  00D5               	movwf	setTemp_Main@SafeValue
  3792                           
  3793                           ;OverTemperature_B1.c: 107: DangerValue = 0x76;
  3794  0757  3076               	movlw	118
  3795  0758  00F5               	movwf	??_setTemp_Main
  3796  0759  0875               	movf	??_setTemp_Main,w
  3797  075A  00D6               	movwf	setTemp_Main@DangerValue
  3798                           
  3799                           ;OverTemperature_B1.c: 119: if (Temp.ERROR == 1) {
  3800  075B  1CB9               	btfss	_Temp,1
  3801  075C  2F6C               	goto	l3539
  3802                           
  3803                           ;OverTemperature_B1.c: 120: if (AD >= SafeValue) {
  3804  075D  0855               	movf	setTemp_Main@SafeValue,w
  3805  075E  0257               	subwf	setTemp_Main@AD,w
  3806  075F  1C03               	skipc
  3807  0760  2F7B               	goto	l3549
  3808                           
  3809                           ;OverTemperature_B1.c: 121: Temp.Count++;
  3810  0761  3001               	movlw	1
  3811  0762  00F5               	movwf	??_setTemp_Main
  3812  0763  0875               	movf	??_setTemp_Main,w
  3813  0764  07BC               	addwf	_Temp+3,f
  3814                           
  3815                           ;OverTemperature_B1.c: 122: if (Temp.Count >= 3) {
  3816  0765  3003               	movlw	3
  3817  0766  023C               	subwf	_Temp+3,w
  3818  0767  1C03               	skipc
  3819  0768  2F7C               	goto	l831
  3820                           
  3821                           ;OverTemperature_B1.c: 123: Temp.Count = 0;
  3822  0769  01BC               	clrf	_Temp+3
  3823                           
  3824                           ;OverTemperature_B1.c: 124: Temp.ERROR = 0;
  3825  076A  10B9               	bcf	_Temp,1
  3826                           
  3827                           ;OverTemperature_B1.c: 126: }
  3828                           ;OverTemperature_B1.c: 127: } else {
  3829                           
  3830                           ;OverTemperature_B1.c: 125: ;;
  3831  076B  2F7C               	goto	l831
  3832  076C                     l3539:	
  3833                           ;OverTemperature_B1.c: 129: }
  3834                           ;OverTemperature_B1.c: 130: } else {
  3835                           
  3836                           ;OverTemperature_B1.c: 128: Temp.Count = 0;
  3837                           
  3838                           
  3839                           ;OverTemperature_B1.c: 131: if (AD <= DangerValue) {
  3840  076C  0857               	movf	setTemp_Main@AD,w
  3841  076D  0256               	subwf	setTemp_Main@DangerValue,w
  3842  076E  1C03               	skipc
  3843  076F  2F7B               	goto	l3549
  3844                           
  3845                           ;OverTemperature_B1.c: 132: Temp.Count++;
  3846  0770  3001               	movlw	1
  3847  0771  00F5               	movwf	??_setTemp_Main
  3848  0772  0875               	movf	??_setTemp_Main,w
  3849  0773  07BC               	addwf	_Temp+3,f
  3850                           
  3851                           ;OverTemperature_B1.c: 133: if (Temp.Count >= 3) {
  3852  0774  3003               	movlw	3
  3853  0775  023C               	subwf	_Temp+3,w
  3854  0776  1C03               	skipc
  3855  0777  2F7C               	goto	l831
  3856                           
  3857                           ;OverTemperature_B1.c: 134: Temp.Count = 0;
  3858  0778  01BC               	clrf	_Temp+3
  3859                           
  3860                           ;OverTemperature_B1.c: 135: Temp.ERROR = 1;
  3861  0779  14B9               	bsf	_Temp,1
  3862                           
  3863                           ;OverTemperature_B1.c: 136: }
  3864                           ;OverTemperature_B1.c: 137: } else {
  3865  077A  2F7C               	goto	l831
  3866  077B                     l3549:	
  3867                           
  3868                           ;OverTemperature_B1.c: 138: Temp.Count = 0;
  3869  077B  01BC               	clrf	_Temp+3
  3870  077C                     l831:	
  3871                           ;OverTemperature_B1.c: 139: }
  3872                           ;OverTemperature_B1.c: 140: }
  3873                           ;OverTemperature_B1.c: 141: ;;
  3874                           ;OverTemperature_B1.c: 142: ;;
  3875                           
  3876                           
  3877                           ;OverTemperature_B1.c: 158: }
  3878                           ;OverTemperature_B1.c: 159: Temp.ADH[0] = 0;
  3879  077C  01BD               	clrf	_Temp+4
  3880                           
  3881                           ;OverTemperature_B1.c: 160: Temp.ADH[1] = 0;
  3882  077D  01BE               	clrf	_Temp+5
  3883                           
  3884                           ;OverTemperature_B1.c: 161: Temp.ADV = 0;
  3885  077E  01BF               	clrf	_Temp+6
  3886                           
  3887                           ;OverTemperature_B1.c: 162: }
  3888                           ;OverTemperature_B1.c: 163: }
  3889                           ;OverTemperature_B1.c: 166: } else {
  3890  077F  0008               	return
  3891  0780                     l820:	
  3892                           
  3893                           ;OverTemperature_B1.c: 167: if (myMain.PowerON == 1) {
  3894  0780  1C25               	btfss	_myMain,0
  3895  0781  0008               	return
  3896                           
  3897                           ;OverTemperature_B1.c: 168: Temp.Enable = 1;
  3898  0782  1439               	bsf	_Temp,0
  3899  0783  0008               	return
  3900  0784                     __end_of_setTemp_Main:	
  3901                           
  3902                           	psect	text14
  3903  0AA3                     __ptext14:	
  3904 ;; *************** function _Temp_Initialization *****************
  3905 ;; Defined at:
  3906 ;;		line 8 in file "../src/OverTemperature_B1.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;		None
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;		None
  3911 ;; Return value:  Size  Location     Type
  3912 ;;		None               void
  3913 ;; Registers used:
  3914 ;;		status,2, status,0, pclath, cstack
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3920 ;;      Params:         0       0       0       0
  3921 ;;      Locals:         0       0       0       0
  3922 ;;      Temps:          0       0       0       0
  3923 ;;      Totals:         0       0       0       0
  3924 ;;Total ram usage:        0 bytes
  3925 ;; Hardware stack levels used:    1
  3926 ;; Hardware stack levels required when called:    3
  3927 ;; This function calls:
  3928 ;;		_setTemp_Initialization
  3929 ;; This function is called by:
  3930 ;;		_main
  3931 ;; This function uses a non-reentrant model
  3932 ;;
  3933                           
  3934                           
  3935                           ;psect for function _Temp_Initialization
  3936  0AA3                     _Temp_Initialization:	
  3937                           
  3938                           ;OverTemperature_B1.c: 10: setTemp_Initialization();
  3939                           
  3940                           ;incstack = 0
  3941                           ; Regs used in _Temp_Initialization: [status,2+status,0+pclath+cstack]
  3942  0AA3  158A  2295         	fcall	_setTemp_Initialization
  3943  0AA5  0008               	return
  3944  0AA6                     __end_of_Temp_Initialization:	
  3945                           
  3946                           	psect	text15
  3947  0A95                     __ptext15:	
  3948 ;; *************** function _setTemp_Initialization *****************
  3949 ;; Defined at:
  3950 ;;		line 52 in file "../src/OverTemperature_B1.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;		None
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;		None
  3955 ;; Return value:  Size  Location     Type
  3956 ;;		None               void
  3957 ;; Registers used:
  3958 ;;		None
  3959 ;; Tracked objects:
  3960 ;;		On entry : 0/0
  3961 ;;		On exit  : 0/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3964 ;;      Params:         0       0       0       0
  3965 ;;      Locals:         0       0       0       0
  3966 ;;      Temps:          0       0       0       0
  3967 ;;      Totals:         0       0       0       0
  3968 ;;Total ram usage:        0 bytes
  3969 ;; Hardware stack levels used:    1
  3970 ;; Hardware stack levels required when called:    2
  3971 ;; This function calls:
  3972 ;;		Nothing
  3973 ;; This function is called by:
  3974 ;;		_Temp_Initialization
  3975 ;; This function uses a non-reentrant model
  3976 ;;
  3977                           
  3978                           
  3979                           ;psect for function _setTemp_Initialization
  3980  0A95                     _setTemp_Initialization:	
  3981                           
  3982                           ;incstack = 0
  3983                           ; Regs used in _setTemp_Initialization: []
  3984  0A95  0008               	return
  3985  0A96                     __end_of_setTemp_Initialization:	
  3986                           
  3987                           	psect	text16
  3988  0AA0                     __ptext16:	
  3989 ;; *************** function _SYSC_Main *****************
  3990 ;; Defined at:
  3991 ;;		line 17 in file "../src/SYSC_B1.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;		None
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;		None
  3996 ;; Return value:  Size  Location     Type
  3997 ;;		None               void
  3998 ;; Registers used:
  3999 ;;		wreg, status,2, status,0, pclath, cstack
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4005 ;;      Params:         0       0       0       0
  4006 ;;      Locals:         0       0       0       0
  4007 ;;      Temps:          0       0       0       0
  4008 ;;      Totals:         0       0       0       0
  4009 ;;Total ram usage:        0 bytes
  4010 ;; Hardware stack levels used:    1
  4011 ;; Hardware stack levels required when called:    4
  4012 ;; This function calls:
  4013 ;;		_setSYSC_Main
  4014 ;; This function is called by:
  4015 ;;		_main
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019                           
  4020                           ;psect for function _SYSC_Main
  4021  0AA0                     _SYSC_Main:	
  4022                           
  4023                           ;SYSC_B1.c: 19: setSYSC_Main();
  4024                           
  4025                           ;incstack = 0
  4026                           ; Regs used in _SYSC_Main: [wreg+status,2+status,0+pclath+cstack]
  4027  0AA0  158A  2638         	fcall	_setSYSC_Main
  4028  0AA2  0008               	return
  4029  0AA3                     __end_of_SYSC_Main:	
  4030                           
  4031                           	psect	text17
  4032  0E38                     __ptext17:	
  4033 ;; *************** function _setSYSC_Main *****************
  4034 ;; Defined at:
  4035 ;;		line 23 in file "../src/SYSC_B1.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;		None
  4038 ;; Auto vars:     Size  Location     Type
  4039 ;;		None
  4040 ;; Return value:  Size  Location     Type
  4041 ;;		None               void
  4042 ;; Registers used:
  4043 ;;		wreg, status,2, status,0, pclath, cstack
  4044 ;; Tracked objects:
  4045 ;;		On entry : 0/0
  4046 ;;		On exit  : 0/0
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4049 ;;      Params:         0       0       0       0
  4050 ;;      Locals:         0       0       0       0
  4051 ;;      Temps:          0       0       0       0
  4052 ;;      Totals:         0       0       0       0
  4053 ;;Total ram usage:        0 bytes
  4054 ;; Hardware stack levels used:    1
  4055 ;; Hardware stack levels required when called:    3
  4056 ;; This function calls:
  4057 ;;		_getMain_All_Error_Status
  4058 ;; This function is called by:
  4059 ;;		_SYSC_Main
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           
  4064                           ;psect for function _setSYSC_Main
  4065  0E38                     _setSYSC_Main:	
  4066                           
  4067                           ;SYSC_B1.c: 25: if (SYSC.Enable == 1) {
  4068                           
  4069                           ;incstack = 0
  4070                           ; Regs used in _setSYSC_Main: [wreg+status,2+status,0+pclath+cstack]
  4071  0E38  1283               	bcf	3,5	;RP0=0, select bank0
  4072  0E39  1303               	bcf	3,6	;RP1=0, select bank0
  4073  0E3A  1C20               	btfss	_SYSC,0
  4074  0E3B  0008               	return
  4075                           
  4076                           ;SYSC_B1.c: 26: if (SYSC.ERROR == 0) {
  4077  0E3C  18A0               	btfsc	_SYSC,1
  4078  0E3D  2E4F               	goto	l3565
  4079                           
  4080                           ;SYSC_B1.c: 27: SYSC.Time++;
  4081  0E3E  3001               	movlw	1
  4082  0E3F  07A1               	addwf	_SYSC+1,f
  4083  0E40  1803               	skipnc
  4084  0E41  0AA2               	incf	_SYSC+2,f
  4085  0E42  3000               	movlw	0
  4086  0E43  07A2               	addwf	_SYSC+2,f
  4087                           
  4088                           ;SYSC_B1.c: 28: if (SYSC.Time >= (500 / 20)) {
  4089  0E44  3000               	movlw	0
  4090  0E45  0222               	subwf	_SYSC+2,w
  4091  0E46  3019               	movlw	25
  4092  0E47  1903               	skipnz
  4093  0E48  0221               	subwf	_SYSC+1,w
  4094  0E49  1C03               	skipc
  4095  0E4A  0008               	return
  4096                           
  4097                           ;SYSC_B1.c: 29: SYSC.Time = 0;
  4098  0E4B  01A1               	clrf	_SYSC+1
  4099  0E4C  01A2               	clrf	_SYSC+2
  4100                           
  4101                           ;SYSC_B1.c: 30: SYSC.ERROR = 1;
  4102  0E4D  14A0               	bsf	_SYSC,1
  4103                           
  4104                           ;SYSC_B1.c: 31: }
  4105                           ;SYSC_B1.c: 32: } else {
  4106  0E4E  0008               	return
  4107  0E4F                     l3565:	
  4108                           
  4109                           ;SYSC_B1.c: 33: if (getMain_All_Error_Status(1) == 0) {
  4110  0E4F  3001               	movlw	1
  4111  0E50  158A  25BA  158A   	fcall	_getMain_All_Error_Status
  4112  0E53  3800               	iorlw	0
  4113  0E54  1D03               	skipz
  4114  0E55  0008               	return
  4115                           
  4116                           ;SYSC_B1.c: 34: SYSC.Time++;
  4117  0E56  3001               	movlw	1
  4118  0E57  1283               	bcf	3,5	;RP0=0, select bank0
  4119  0E58  1303               	bcf	3,6	;RP1=0, select bank0
  4120  0E59  07A1               	addwf	_SYSC+1,f
  4121  0E5A  1803               	skipnc
  4122  0E5B  0AA2               	incf	_SYSC+2,f
  4123  0E5C  3000               	movlw	0
  4124  0E5D  07A2               	addwf	_SYSC+2,f
  4125                           
  4126                           ;SYSC_B1.c: 35: if (SYSC.Time >= (500 / 20)) {
  4127  0E5E  3000               	movlw	0
  4128  0E5F  0222               	subwf	_SYSC+2,w
  4129  0E60  3019               	movlw	25
  4130  0E61  1903               	skipnz
  4131  0E62  0221               	subwf	_SYSC+1,w
  4132  0E63  1C03               	skipc
  4133  0E64  2E6A               	goto	l3571
  4134                           
  4135                           ;SYSC_B1.c: 36: SYSC.Time = 0;
  4136  0E65  01A1               	clrf	_SYSC+1
  4137  0E66  01A2               	clrf	_SYSC+2
  4138                           
  4139                           ;SYSC_B1.c: 37: SYSC.Counter = 0;
  4140  0E67  01A3               	clrf	_SYSC+3
  4141  0E68  01A4               	clrf	_SYSC+4
  4142                           
  4143                           ;SYSC_B1.c: 38: } else {
  4144  0E69  0008               	return
  4145  0E6A                     l3571:	
  4146                           
  4147                           ;SYSC_B1.c: 39: SYSC.Counter++;
  4148  0E6A  3001               	movlw	1
  4149  0E6B  07A3               	addwf	_SYSC+3,f
  4150  0E6C  1803               	skipnc
  4151  0E6D  0AA4               	incf	_SYSC+4,f
  4152  0E6E  3000               	movlw	0
  4153  0E6F  07A4               	addwf	_SYSC+4,f
  4154                           
  4155                           ;SYSC_B1.c: 40: if (SYSC.Counter == (10000 / 20)) {
  4156  0E70  3001               	movlw	1
  4157  0E71  0624               	xorwf	_SYSC+4,w
  4158  0E72  1D03               	skipz
  4159  0E73  2E76               	goto	u3355
  4160  0E74  30F4               	movlw	244
  4161  0E75  0623               	xorwf	_SYSC+3,w
  4162  0E76                     u3355:	
  4163  0E76  1D03               	skipz
  4164  0E77  0008               	return
  4165                           
  4166                           ;SYSC_B1.c: 41: SYSC.Counter = 0;
  4167  0E78  01A3               	clrf	_SYSC+3
  4168  0E79  01A4               	clrf	_SYSC+4
  4169                           
  4170                           ;SYSC_B1.c: 42: SYSC.ERROR = 0;
  4171  0E7A  10A0               	bcf	_SYSC,1
  4172  0E7B  0008               	return
  4173  0E7C                     __end_of_setSYSC_Main:	
  4174                           
  4175                           	psect	text18
  4176  0A9D                     __ptext18:	
  4177 ;; *************** function _SYSC_Initialization *****************
  4178 ;; Defined at:
  4179 ;;		line 7 in file "../src/SYSC_B1.c"
  4180 ;; Parameters:    Size  Location     Type
  4181 ;;		None
  4182 ;; Auto vars:     Size  Location     Type
  4183 ;;		None
  4184 ;; Return value:  Size  Location     Type
  4185 ;;		None               void
  4186 ;; Registers used:
  4187 ;;		status,2, status,0, pclath, cstack
  4188 ;; Tracked objects:
  4189 ;;		On entry : 0/0
  4190 ;;		On exit  : 0/0
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4193 ;;      Params:         0       0       0       0
  4194 ;;      Locals:         0       0       0       0
  4195 ;;      Temps:          0       0       0       0
  4196 ;;      Totals:         0       0       0       0
  4197 ;;Total ram usage:        0 bytes
  4198 ;; Hardware stack levels used:    1
  4199 ;; Hardware stack levels required when called:    3
  4200 ;; This function calls:
  4201 ;;		_setSYSC_Initialization
  4202 ;; This function is called by:
  4203 ;;		_main
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206                           
  4207                           
  4208                           ;psect for function _SYSC_Initialization
  4209  0A9D                     _SYSC_Initialization:	
  4210                           
  4211                           ;SYSC_B1.c: 9: setSYSC_Initialization();
  4212                           
  4213                           ;incstack = 0
  4214                           ; Regs used in _SYSC_Initialization: [status,2+status,0+pclath+cstack]
  4215  0A9D  158A  22B1         	fcall	_setSYSC_Initialization
  4216  0A9F  0008               	return
  4217  0AA0                     __end_of_SYSC_Initialization:	
  4218                           
  4219                           	psect	text19
  4220  0AB1                     __ptext19:	
  4221 ;; *************** function _setSYSC_Initialization *****************
  4222 ;; Defined at:
  4223 ;;		line 13 in file "../src/SYSC_B1.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;		None
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;		None
  4228 ;; Return value:  Size  Location     Type
  4229 ;;		None               void
  4230 ;; Registers used:
  4231 ;;		None
  4232 ;; Tracked objects:
  4233 ;;		On entry : 0/0
  4234 ;;		On exit  : 0/0
  4235 ;;		Unchanged: 0/0
  4236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4237 ;;      Params:         0       0       0       0
  4238 ;;      Locals:         0       0       0       0
  4239 ;;      Temps:          0       0       0       0
  4240 ;;      Totals:         0       0       0       0
  4241 ;;Total ram usage:        0 bytes
  4242 ;; Hardware stack levels used:    1
  4243 ;; Hardware stack levels required when called:    2
  4244 ;; This function calls:
  4245 ;;		Nothing
  4246 ;; This function is called by:
  4247 ;;		_SYSC_Initialization
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251                           
  4252                           ;psect for function _setSYSC_Initialization
  4253  0AB1                     _setSYSC_Initialization:	
  4254                           
  4255                           ;SYSC_B1.c: 14: SYSC.Enable = 1;
  4256                           
  4257                           ;incstack = 0
  4258                           ; Regs used in _setSYSC_Initialization: []
  4259  0AB1  1283               	bcf	3,5	;RP0=0, select bank0
  4260  0AB2  1303               	bcf	3,6	;RP1=0, select bank0
  4261  0AB3  1420               	bsf	_SYSC,0
  4262  0AB4  0008               	return
  4263  0AB5                     __end_of_setSYSC_Initialization:	
  4264                           
  4265                           	psect	text20
  4266  0026                     __ptext20:	
  4267 ;; *************** function _PIR_Main *****************
  4268 ;; Defined at:
  4269 ;;		line 13 in file "../src/PIR_B1.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;		None
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;  LightsStatus    1   17[BANK0 ] unsigned char 
  4274 ;;  TriggerValue    1   16[BANK0 ] unsigned char 
  4275 ;;  Enable_Switc    1   13[BANK0 ] unsigned char 
  4276 ;;  cds             1   12[BANK0 ] unsigned char 
  4277 ;;  error           1   11[BANK0 ] unsigned char 
  4278 ;; Return value:  Size  Location     Type
  4279 ;;		None               void
  4280 ;; Registers used:
  4281 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4287 ;;      Params:         0       0       0       0
  4288 ;;      Locals:         0       7       0       0
  4289 ;;      Temps:          0       5       0       0
  4290 ;;      Totals:         0      12       0       0
  4291 ;;Total ram usage:       12 bytes
  4292 ;; Hardware stack levels used:    1
  4293 ;; Hardware stack levels required when called:    5
  4294 ;; This function calls:
  4295 ;;		_getCDS_Status
  4296 ;;		_getLights_Status
  4297 ;;		_getMain_All_Error_Status
  4298 ;;		_setLED
  4299 ;;		_setLights_SwOff
  4300 ;;		_setLights_SwOn
  4301 ;; This function is called by:
  4302 ;;		_main
  4303 ;; This function uses a non-reentrant model
  4304 ;;
  4305                           
  4306                           
  4307                           ;psect for function _PIR_Main
  4308  0026                     _PIR_Main:	
  4309                           
  4310                           ;PIR_B1.c: 14: char error = getMain_All_Error_Status(0);
  4311                           
  4312                           ;incstack = 0
  4313                           ; Regs used in _PIR_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4314  0026  3000               	movlw	0
  4315  0027  158A  25BA  118A   	fcall	_getMain_All_Error_Status
  4316  002A  1283               	bcf	3,5	;RP0=0, select bank0
  4317  002B  1303               	bcf	3,6	;RP1=0, select bank0
  4318  002C  00D3               	movwf	??_PIR_Main
  4319  002D  0853               	movf	??_PIR_Main,w
  4320  002E  00D8               	movwf	PIR_Main@error
  4321                           
  4322                           ;PIR_B1.c: 15: char cds = getCDS_Status();
  4323  002F  158A  22EA  118A   	fcall	_getCDS_Status
  4324  0032  1283               	bcf	3,5	;RP0=0, select bank0
  4325  0033  1303               	bcf	3,6	;RP1=0, select bank0
  4326  0034  00D3               	movwf	??_PIR_Main
  4327  0035  0853               	movf	??_PIR_Main,w
  4328  0036  00D9               	movwf	PIR_Main@cds
  4329                           
  4330                           ;PIR_B1.c: 16: char LightsStatus = 0;
  4331  0037  01DE               	clrf	PIR_Main@LightsStatus
  4332                           
  4333                           ;PIR_B1.c: 17: char Enable_Switch = 1;
  4334  0038  01DA               	clrf	PIR_Main@Enable_Switch
  4335  0039  0ADA               	incf	PIR_Main@Enable_Switch,f
  4336                           
  4337                           ;PIR_B1.c: 18: char TriggerValue = 0;
  4338  003A  01DD               	clrf	PIR_Main@TriggerValue
  4339                           
  4340                           ;PIR_B1.c: 25: LightsStatus = getLights_Status(1);
  4341  003B  3001               	movlw	1
  4342  003C  158A  2367  118A   	fcall	_getLights_Status
  4343  003F  1283               	bcf	3,5	;RP0=0, select bank0
  4344  0040  1303               	bcf	3,6	;RP1=0, select bank0
  4345  0041  00D3               	movwf	??_PIR_Main
  4346  0042  0853               	movf	??_PIR_Main,w
  4347  0043  00DE               	movwf	PIR_Main@LightsStatus
  4348                           
  4349                           ;PIR_B1.c: 35: if (_PIR.Enable == 1) {
  4350  0044  1683               	bsf	3,5	;RP0=1, select bank1
  4351  0045  1303               	bcf	3,6	;RP1=0, select bank1
  4352  0046  1C20               	btfss	__PIR^(0+128),0
  4353  0047  2A0F               	goto	l898
  4354                           
  4355                           ;PIR_B1.c: 36: if (error == 0) {
  4356  0048  1283               	bcf	3,5	;RP0=0, select bank0
  4357  0049  1303               	bcf	3,6	;RP1=0, select bank0
  4358  004A  08D8               	movf	PIR_Main@error,f
  4359  004B  1D03               	skipz
  4360  004C  288B               	goto	l899
  4361                           
  4362                           ;PIR_B1.c: 38: if (cds == 1 && Enable_Switch == 1) {
  4363  004D  0859               	movf	PIR_Main@cds,w
  4364  004E  3A01               	xorlw	1
  4365  004F  1D03               	skipz
  4366  0050  2859               	goto	l900
  4367  0051  085A               	movf	PIR_Main@Enable_Switch,w
  4368  0052  3A01               	xorlw	1
  4369  0053  1D03               	skipz
  4370  0054  2859               	goto	l900
  4371                           
  4372                           ;PIR_B1.c: 39: _PIR.Available = 1;
  4373  0055  1683               	bsf	3,5	;RP0=1, select bank1
  4374  0056  1303               	bcf	3,6	;RP1=0, select bank1
  4375  0057  17A0               	bsf	__PIR^(0+128),7
  4376                           
  4377                           ;PIR_B1.c: 40: } else {
  4378  0058  287B               	goto	l5131
  4379  0059                     l900:	
  4380                           
  4381                           ;PIR_B1.c: 41: _PIR.Available = 0;
  4382  0059  1683               	bsf	3,5	;RP0=1, select bank1
  4383  005A  1303               	bcf	3,6	;RP1=0, select bank1
  4384  005B  13A0               	bcf	__PIR^(0+128),7
  4385                           
  4386                           ;PIR_B1.c: 43: if (_PIR.OK == 1) {
  4387  005C  1DA0               	btfss	__PIR^(0+128),3
  4388  005D  287B               	goto	l5131
  4389                           
  4390                           ;PIR_B1.c: 45: setLED(1, 0);
  4391  005E  1283               	bcf	3,5	;RP0=0, select bank0
  4392  005F  1303               	bcf	3,6	;RP1=0, select bank0
  4393  0060  01CD               	clrf	setLED@command
  4394  0061  3001               	movlw	1
  4395  0062  158A  2735  118A   	fcall	_setLED
  4396                           
  4397                           ;PIR_B1.c: 46: setLED(2, 0);
  4398  0065  1283               	bcf	3,5	;RP0=0, select bank0
  4399  0066  1303               	bcf	3,6	;RP1=0, select bank0
  4400  0067  01CD               	clrf	setLED@command
  4401  0068  3002               	movlw	2
  4402  0069  158A  2735  118A   	fcall	_setLED
  4403                           
  4404                           ;PIR_B1.c: 51: if (getLights_Status(1) == 1) {
  4405  006C  3001               	movlw	1
  4406  006D  158A  2367  118A   	fcall	_getLights_Status
  4407  0070  3A01               	xorlw	1
  4408  0071  1D03               	skipz
  4409  0072  287B               	goto	l5131
  4410                           
  4411                           ;PIR_B1.c: 52: setLights_SwOn(1);
  4412  0073  3001               	movlw	1
  4413  0074  158A  24E1  118A   	fcall	_setLights_SwOn
  4414                           
  4415                           ;PIR_B1.c: 53: setLights_SwOff(1);
  4416  0077  3001               	movlw	1
  4417  0078  158A  241C  118A   	fcall	_setLights_SwOff
  4418  007B                     l5131:	
  4419                           
  4420                           ;PIR_B1.c: 55: }
  4421                           ;PIR_B1.c: 67: }
  4422                           ;PIR_B1.c: 68: }
  4423                           ;PIR_B1.c: 72: if (_PIR.Detect == 0) {
  4424  007B  1683               	bsf	3,5	;RP0=1, select bank1
  4425  007C  1303               	bcf	3,6	;RP1=0, select bank1
  4426  007D  1A20               	btfsc	__PIR^(0+128),4
  4427  007E  2891               	goto	l906
  4428                           
  4429                           ;PIR_B1.c: 73: _PIR.Detect = 1;
  4430  007F  1620               	bsf	__PIR^(0+128),4
  4431                           
  4432                           ;PIR_B1.c: 75: if (_PIR.OK == 0) {
  4433  0080  19A0               	btfsc	__PIR^(0+128),3
  4434  0081  2891               	goto	l906
  4435                           
  4436                           ;PIR_B1.c: 76: setLED(1, 1);
  4437  0082  1283               	bcf	3,5	;RP0=0, select bank0
  4438  0083  1303               	bcf	3,6	;RP1=0, select bank0
  4439  0084  01CD               	clrf	setLED@command
  4440  0085  0ACD               	incf	setLED@command,f
  4441  0086  3001               	movlw	1
  4442  0087  158A  2735  118A   	fcall	_setLED
  4443                           
  4444                           ;PIR_B1.c: 77: }
  4445                           ;PIR_B1.c: 80: }
  4446                           ;PIR_B1.c: 81: } else {
  4447  008A  2891               	goto	l906
  4448  008B                     l899:	
  4449                           
  4450                           ;PIR_B1.c: 82: if (_PIR.Detect == 1) {
  4451  008B  1683               	bsf	3,5	;RP0=1, select bank1
  4452  008C  1303               	bcf	3,6	;RP1=0, select bank1
  4453  008D  1E20               	btfss	__PIR^(0+128),4
  4454  008E  2891               	goto	l906
  4455                           
  4456                           ;PIR_B1.c: 83: _PIR.Detect = 0;
  4457  008F  1220               	bcf	__PIR^(0+128),4
  4458                           
  4459                           ;PIR_B1.c: 84: _PIR.Available = 0;
  4460  0090  13A0               	bcf	__PIR^(0+128),7
  4461  0091                     l906:	
  4462                           
  4463                           ;PIR_B1.c: 102: }
  4464                           ;PIR_B1.c: 103: }
  4465                           ;PIR_B1.c: 105: if (_PIR.ADtoGO == 0) {
  4466  0091  1683               	bsf	3,5	;RP0=1, select bank1
  4467  0092  1303               	bcf	3,6	;RP1=0, select bank1
  4468  0093  18A0               	btfsc	__PIR^(0+128),1
  4469  0094  28A4               	goto	l908
  4470                           
  4471                           ;PIR_B1.c: 106: _PIR.Time++;
  4472  0095  3001               	movlw	1
  4473  0096  1283               	bcf	3,5	;RP0=0, select bank0
  4474  0097  1303               	bcf	3,6	;RP1=0, select bank0
  4475  0098  00D3               	movwf	??_PIR_Main
  4476  0099  0853               	movf	??_PIR_Main,w
  4477  009A  1683               	bsf	3,5	;RP0=1, select bank1
  4478  009B  1303               	bcf	3,6	;RP1=0, select bank1
  4479  009C  07A2               	addwf	(__PIR^(0+128)+2),f
  4480                           
  4481                           ;PIR_B1.c: 107: if (_PIR.Time == (100 / 20)) {
  4482  009D  0822               	movf	(__PIR^(0+128)+2),w
  4483  009E  3A05               	xorlw	5
  4484  009F  1D03               	skipz
  4485  00A0  29AE               	goto	l5219
  4486                           
  4487                           ;PIR_B1.c: 108: _PIR.Time = 0;
  4488  00A1  01A2               	clrf	(__PIR^(0+128)+2)
  4489                           
  4490                           ;PIR_B1.c: 109: _PIR.ADtoGO = 1;
  4491  00A2  14A0               	bsf	__PIR^(0+128),1
  4492                           
  4493                           ;PIR_B1.c: 110: }
  4494                           ;PIR_B1.c: 111: } else {
  4495  00A3  29AE               	goto	l5219
  4496  00A4                     l908:	
  4497                           
  4498                           ;PIR_B1.c: 112: if (_PIR.GO == 1) {
  4499  00A4  1D20               	btfss	__PIR^(0+128),2
  4500  00A5  29AE               	goto	l5219
  4501                           
  4502                           ;PIR_B1.c: 113: _PIR.GO = 0;
  4503  00A6  1120               	bcf	__PIR^(0+128),2
  4504                           
  4505                           ;PIR_B1.c: 114: _PIR.ADtoGO = 0;
  4506  00A7  10A0               	bcf	__PIR^(0+128),1
  4507                           
  4508                           ;PIR_B1.c: 115: if (_PIR.Available == 1) {
  4509  00A8  1BA0               	btfsc	__PIR^(0+128),7
  4510                           
  4511                           ;PIR_B1.c: 116: if (_PIR.OK == 1) {
  4512  00A9  1DA0               	btfss	__PIR^(0+128),3
  4513  00AA  29AE               	goto	l5219
  4514                           
  4515                           ;PIR_B1.c: 118: _PIR.Time++;
  4516  00AB  3001               	movlw	1
  4517  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  4518  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  4519  00AE  00D3               	movwf	??_PIR_Main
  4520  00AF  0853               	movf	??_PIR_Main,w
  4521  00B0  1683               	bsf	3,5	;RP0=1, select bank1
  4522  00B1  1303               	bcf	3,6	;RP1=0, select bank1
  4523  00B2  07A2               	addwf	(__PIR^(0+128)+2),f
  4524                           
  4525                           ;PIR_B1.c: 119: if (_PIR.Time == 60) {
  4526  00B3  0822               	movf	(__PIR^(0+128)+2),w
  4527  00B4  3A3C               	xorlw	60
  4528  00B5  1D03               	skipz
  4529  00B6  28EB               	goto	l5187
  4530                           
  4531                           ;PIR_B1.c: 120: _PIR.Time = 0;
  4532  00B7  01A2               	clrf	(__PIR^(0+128)+2)
  4533                           
  4534                           ;PIR_B1.c: 121: if (_PIR.RangeCount >= 90) {
  4535  00B8  305A               	movlw	90
  4536  00B9  0247               	subwf	(__PIR^(0+128)+39),w
  4537  00BA  1C03               	skipc
  4538  00BB  28C7               	goto	l5169
  4539                           
  4540                           ;PIR_B1.c: 122: _PIR.RangeTime1 = 0;
  4541  00BC  01C6               	clrf	(__PIR^(0+128)+38)
  4542                           
  4543                           ;PIR_B1.c: 124: if (_PIR.RangeValue == 25) {
  4544  00BD  0848               	movf	(__PIR^(0+128)+40),w
  4545  00BE  3A19               	xorlw	25
  4546  00BF  1903               	btfsc	3,2
  4547  00C0  28DC               	goto	L12
  4548                           
  4549                           ;PIR_B1.c: 126: } else if (_PIR.RangeValue == (25+10)) {
  4550                           
  4551                           ;PIR_B1.c: 125: _PIR.RangeValue = (25+10);
  4552  00C1  0848               	movf	(__PIR^(0+128)+40),w
  4553  00C2  3A23               	xorlw	35
  4554  00C3  1D03               	skipz
  4555  00C4  28EA               	goto	l5185
  4556                           
  4557                           ;PIR_B1.c: 127: _PIR.RangeValue = (25+20);
  4558  00C5  302D               	movlw	45
  4559  00C6  28E3               	goto	L9
  4560  00C7                     l5169:	
  4561                           ;PIR_B1.c: 128: }
  4562                           ;PIR_B1.c: 129: } else if (_PIR.RangeCount <= 10) {
  4563                           
  4564  00C7  300B               	movlw	11
  4565  00C8  0247               	subwf	(__PIR^(0+128)+39),w
  4566  00C9  1803               	skipnc
  4567  00CA  28EA               	goto	l5185
  4568                           
  4569                           ;PIR_B1.c: 130: _PIR.RangeTime1++;
  4570  00CB  3001               	movlw	1
  4571  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  4572  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  4573  00CE  00D3               	movwf	??_PIR_Main
  4574  00CF  0853               	movf	??_PIR_Main,w
  4575  00D0  1683               	bsf	3,5	;RP0=1, select bank1
  4576  00D1  1303               	bcf	3,6	;RP1=0, select bank1
  4577  00D2  07C6               	addwf	(__PIR^(0+128)+38),f
  4578                           
  4579                           ;PIR_B1.c: 131: if (_PIR.RangeTime1 == 2) {
  4580  00D3  0846               	movf	(__PIR^(0+128)+38),w
  4581  00D4  3A02               	xorlw	2
  4582  00D5  1D03               	skipz
  4583  00D6  28EA               	goto	l5185
  4584                           
  4585                           ;PIR_B1.c: 132: _PIR.RangeTime1 = 0;
  4586  00D7  01C6               	clrf	(__PIR^(0+128)+38)
  4587                           
  4588                           ;PIR_B1.c: 134: if (_PIR.RangeValue == (25+20)) {
  4589  00D8  0848               	movf	(__PIR^(0+128)+40),w
  4590  00D9  3A2D               	xorlw	45
  4591  00DA  1D03               	skipz
  4592  00DB  28DE               	goto	l5181
  4593  00DC                     L12:	
  4594                           
  4595                           ;PIR_B1.c: 135: _PIR.RangeValue = (25+10);
  4596  00DC  3023               	movlw	35
  4597  00DD  28E3               	goto	L9
  4598  00DE                     l5181:	
  4599                           ;PIR_B1.c: 136: } else if (_PIR.RangeValue == (25+10)) {
  4600                           
  4601  00DE  0848               	movf	(__PIR^(0+128)+40),w
  4602  00DF  3A23               	xorlw	35
  4603  00E0  1D03               	skipz
  4604  00E1  28EA               	goto	l5185
  4605                           
  4606                           ;PIR_B1.c: 137: _PIR.RangeValue = 25;
  4607  00E2  3019               	movlw	25
  4608  00E3                     L9:	
  4609  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  4610  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  4611  00E5  00D3               	movwf	??_PIR_Main
  4612  00E6  0853               	movf	??_PIR_Main,w
  4613  00E7  1683               	bsf	3,5	;RP0=1, select bank1
  4614  00E8  1303               	bcf	3,6	;RP1=0, select bank1
  4615  00E9  00C8               	movwf	(__PIR^(0+128)+40)
  4616  00EA                     l5185:	
  4617                           
  4618                           ;PIR_B1.c: 138: }
  4619                           ;PIR_B1.c: 139: }
  4620                           ;PIR_B1.c: 140: }
  4621                           ;PIR_B1.c: 141: _PIR.RangeCount = 0;
  4622  00EA  01C7               	clrf	(__PIR^(0+128)+39)
  4623  00EB                     l5187:	
  4624                           
  4625                           ;PIR_B1.c: 142: }
  4626                           ;PIR_B1.c: 145: if ((_PIR.SignalAD >= (_PIR.ReferenceVoltage - _PIR.RangeValue))
  4627                           ;PIR_B1.c: 146: && (_PIR.SignalAD <= (_PIR.ReferenceVoltage + _PIR.RangeValue))) {
  4628  00EB  0848               	movf	(__PIR^(0+128)+40),w
  4629  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  4630  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  4631  00EE  00D3               	movwf	??_PIR_Main
  4632  00EF  01D4               	clrf	??_PIR_Main+1
  4633  00F0  09D3               	comf	??_PIR_Main,f
  4634  00F1  09D4               	comf	??_PIR_Main+1,f
  4635  00F2  0AD3               	incf	??_PIR_Main,f
  4636  00F3  1903               	skipnz
  4637  00F4  0AD4               	incf	??_PIR_Main+1,f
  4638  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  4639  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  4640  00F7  0823               	movf	(__PIR^(0+128)+3),w
  4641  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  4642  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  4643  00FA  0753               	addwf	??_PIR_Main,w
  4644  00FB  00D5               	movwf	??_PIR_Main+2
  4645  00FC  0854               	movf	??_PIR_Main+1,w
  4646  00FD  1803               	skipnc
  4647  00FE  0A54               	incf	??_PIR_Main+1,w
  4648  00FF  00D6               	movwf	??_PIR_Main+3
  4649  0100  0856               	movf	??_PIR_Main+3,w
  4650  0101  3A80               	xorlw	128
  4651  0102  3C80               	sublw	128
  4652  0103  1D03               	skipz
  4653  0104  2909               	goto	u6645
  4654  0105  0855               	movf	??_PIR_Main+2,w
  4655  0106  1683               	bsf	3,5	;RP0=1, select bank1
  4656  0107  1303               	bcf	3,6	;RP1=0, select bank1
  4657  0108  0221               	subwf	(__PIR^(0+128)+1),w
  4658  0109                     u6645:	
  4659  0109  1C03               	skipc
  4660  010A  292B               	goto	l5197
  4661  010B  1683               	bsf	3,5	;RP0=1, select bank1
  4662  010C  1303               	bcf	3,6	;RP1=0, select bank1
  4663  010D  0823               	movf	(__PIR^(0+128)+3),w
  4664  010E  0748               	addwf	(__PIR^(0+128)+40),w
  4665  010F  1283               	bcf	3,5	;RP0=0, select bank0
  4666  0110  1303               	bcf	3,6	;RP1=0, select bank0
  4667  0111  00D3               	movwf	??_PIR_Main
  4668  0112  01D4               	clrf	??_PIR_Main+1
  4669  0113  0DD4               	rlf	??_PIR_Main+1,f
  4670  0114  0854               	movf	??_PIR_Main+1,w
  4671  0115  3A80               	xorlw	128
  4672  0116  00D5               	movwf	??_PIR_Main+2
  4673  0117  3080               	movlw	128
  4674  0118  0255               	subwf	??_PIR_Main+2,w
  4675  0119  1D03               	skipz
  4676  011A  2921               	goto	u6655
  4677  011B  1683               	bsf	3,5	;RP0=1, select bank1
  4678  011C  1303               	bcf	3,6	;RP1=0, select bank1
  4679  011D  0821               	movf	(__PIR^(0+128)+1),w
  4680  011E  1283               	bcf	3,5	;RP0=0, select bank0
  4681  011F  1303               	bcf	3,6	;RP1=0, select bank0
  4682  0120  0253               	subwf	??_PIR_Main,w
  4683  0121                     u6655:	
  4684  0121  1C03               	skipc
  4685  0122  292B               	goto	l5197
  4686                           
  4687                           ;PIR_B1.c: 148: _PIR.Count = 0;
  4688  0123  1683               	bsf	3,5	;RP0=1, select bank1
  4689  0124  1303               	bcf	3,6	;RP1=0, select bank1
  4690  0125  01BE               	clrf	(__PIR^(0+128)+30)
  4691  0126  01BF               	clrf	((__PIR+1)^(0+128)+30)
  4692                           
  4693                           ;PIR_B1.c: 155: setLED(1, 0);
  4694  0127  1283               	bcf	3,5	;RP0=0, select bank0
  4695  0128  1303               	bcf	3,6	;RP1=0, select bank0
  4696  0129  01CD               	clrf	setLED@command
  4697  012A  2997               	goto	L13
  4698  012B                     l5197:	
  4699                           ;PIR_B1.c: 159: } else {
  4700                           
  4701                           ;PIR_B1.c: 156: setLED(2, 0);
  4702                           
  4703                           
  4704                           ;PIR_B1.c: 162: _PIR.RangeCount++;
  4705  012B  3001               	movlw	1
  4706  012C  1283               	bcf	3,5	;RP0=0, select bank0
  4707  012D  1303               	bcf	3,6	;RP1=0, select bank0
  4708  012E  00D3               	movwf	??_PIR_Main
  4709  012F  0853               	movf	??_PIR_Main,w
  4710  0130  1683               	bsf	3,5	;RP0=1, select bank1
  4711  0131  1303               	bcf	3,6	;RP1=0, select bank1
  4712  0132  07C7               	addwf	(__PIR^(0+128)+39),f
  4713                           
  4714                           ;PIR_B1.c: 163: _PIR.Count++;
  4715  0133  3001               	movlw	1
  4716  0134  07BE               	addwf	(__PIR^(0+128)+30),f
  4717  0135  1803               	skipnc
  4718  0136  0ABF               	incf	((__PIR+1)^(0+128)+30),f
  4719  0137  3000               	movlw	0
  4720  0138  07BF               	addwf	((__PIR+1)^(0+128)+30),f
  4721                           
  4722                           ;PIR_B1.c: 165: TriggerValue = LightsStatus == 1 ? 3 : 3;
  4723  0139  1283               	bcf	3,5	;RP0=0, select bank0
  4724  013A  1303               	bcf	3,6	;RP1=0, select bank0
  4725  013B  085E               	movf	PIR_Main@LightsStatus,w
  4726  013C  3A01               	xorlw	1
  4727  013D  1903               	skipnz
  4728  013E  293F               	goto	l5205
  4729  013F                     l5205:	
  4730  013F  3003               	movlw	3
  4731  0140  00DB               	movwf	_PIR_Main$2856
  4732  0141  3000               	movlw	0
  4733  0142  00DC               	movwf	_PIR_Main$2856+1
  4734  0143  085B               	movf	_PIR_Main$2856,w
  4735  0144  00D3               	movwf	??_PIR_Main
  4736  0145  0853               	movf	??_PIR_Main,w
  4737  0146  00DD               	movwf	PIR_Main@TriggerValue
  4738                           
  4739                           ;PIR_B1.c: 167: if (_PIR.Count == TriggerValue) {
  4740  0147  085D               	movf	PIR_Main@TriggerValue,w
  4741  0148  00D3               	movwf	??_PIR_Main
  4742  0149  01D4               	clrf	??_PIR_Main+1
  4743  014A  1683               	bsf	3,5	;RP0=1, select bank1
  4744  014B  1303               	bcf	3,6	;RP1=0, select bank1
  4745  014C  083F               	movf	((__PIR+1)^(0+128)+30),w
  4746  014D  1283               	bcf	3,5	;RP0=0, select bank0
  4747  014E  1303               	bcf	3,6	;RP1=0, select bank0
  4748  014F  0654               	xorwf	??_PIR_Main+1,w
  4749  0150  1D03               	skipz
  4750  0151  2958               	goto	u6675
  4751  0152  1683               	bsf	3,5	;RP0=1, select bank1
  4752  0153  1303               	bcf	3,6	;RP1=0, select bank1
  4753  0154  083E               	movf	(__PIR^(0+128)+30),w
  4754  0155  1283               	bcf	3,5	;RP0=0, select bank0
  4755  0156  1303               	bcf	3,6	;RP1=0, select bank0
  4756  0157  0653               	xorwf	??_PIR_Main,w
  4757  0158                     u6675:	
  4758  0158  1D03               	skipz
  4759  0159  29AE               	goto	l5219
  4760                           
  4761                           ;PIR_B1.c: 168: _PIR.Count = 0;
  4762  015A  1683               	bsf	3,5	;RP0=1, select bank1
  4763  015B  1303               	bcf	3,6	;RP1=0, select bank1
  4764  015C  01BE               	clrf	(__PIR^(0+128)+30)
  4765  015D  01BF               	clrf	((__PIR+1)^(0+128)+30)
  4766                           
  4767                           ;PIR_B1.c: 175: if (getLights_Status(1) == 0) {
  4768  015E  3001               	movlw	1
  4769  015F  158A  2367  118A   	fcall	_getLights_Status
  4770  0162  3800               	iorlw	0
  4771  0163  1D03               	skipz
  4772  0164  296D               	goto	l5213
  4773                           
  4774                           ;PIR_B1.c: 176: setLights_SwOn(1);
  4775  0165  3001               	movlw	1
  4776  0166  158A  24E1  118A   	fcall	_setLights_SwOn
  4777                           
  4778                           ;PIR_B1.c: 177: setLights_SwOff(1);
  4779  0169  3001               	movlw	1
  4780  016A  158A  241C  118A   	fcall	_setLights_SwOff
  4781  016D                     l5213:	
  4782                           
  4783                           ;PIR_B1.c: 179: }
  4784                           ;PIR_B1.c: 193: if ((_PIR.SignalAD <= (_PIR.ReferenceVoltage - _PIR.RangeValue))) {
  4785  016D  1683               	bsf	3,5	;RP0=1, select bank1
  4786  016E  1303               	bcf	3,6	;RP1=0, select bank1
  4787  016F  0848               	movf	(__PIR^(0+128)+40),w
  4788  0170  1283               	bcf	3,5	;RP0=0, select bank0
  4789  0171  1303               	bcf	3,6	;RP1=0, select bank0
  4790  0172  00D3               	movwf	??_PIR_Main
  4791  0173  01D4               	clrf	??_PIR_Main+1
  4792  0174  09D3               	comf	??_PIR_Main,f
  4793  0175  09D4               	comf	??_PIR_Main+1,f
  4794  0176  0AD3               	incf	??_PIR_Main,f
  4795  0177  1903               	skipnz
  4796  0178  0AD4               	incf	??_PIR_Main+1,f
  4797  0179  1683               	bsf	3,5	;RP0=1, select bank1
  4798  017A  1303               	bcf	3,6	;RP1=0, select bank1
  4799  017B  0823               	movf	(__PIR^(0+128)+3),w
  4800  017C  1283               	bcf	3,5	;RP0=0, select bank0
  4801  017D  1303               	bcf	3,6	;RP1=0, select bank0
  4802  017E  0753               	addwf	??_PIR_Main,w
  4803  017F  00D5               	movwf	??_PIR_Main+2
  4804  0180  0854               	movf	??_PIR_Main+1,w
  4805  0181  1803               	skipnc
  4806  0182  0A54               	incf	??_PIR_Main+1,w
  4807  0183  00D6               	movwf	??_PIR_Main+3
  4808  0184  0856               	movf	??_PIR_Main+3,w
  4809  0185  3A80               	xorlw	128
  4810  0186  00D7               	movwf	??_PIR_Main+4
  4811  0187  3080               	movlw	128
  4812  0188  0257               	subwf	??_PIR_Main+4,w
  4813  0189  1D03               	skipz
  4814  018A  2991               	goto	u6695
  4815  018B  1683               	bsf	3,5	;RP0=1, select bank1
  4816  018C  1303               	bcf	3,6	;RP1=0, select bank1
  4817  018D  0821               	movf	(__PIR^(0+128)+1),w
  4818  018E  1283               	bcf	3,5	;RP0=0, select bank0
  4819  018F  1303               	bcf	3,6	;RP1=0, select bank0
  4820  0190  0255               	subwf	??_PIR_Main+2,w
  4821  0191                     u6695:	
  4822  0191  1C03               	skipc
  4823  0192  299F               	goto	l5217
  4824                           
  4825                           ;PIR_B1.c: 194: setLED(1, 1);
  4826  0193  1283               	bcf	3,5	;RP0=0, select bank0
  4827  0194  1303               	bcf	3,6	;RP1=0, select bank0
  4828  0195  01CD               	clrf	setLED@command
  4829  0196  0ACD               	incf	setLED@command,f
  4830  0197                     L13:	
  4831  0197  3001               	movlw	1
  4832  0198  158A  2735  118A   	fcall	_setLED
  4833                           
  4834                           ;PIR_B1.c: 195: setLED(2, 0);
  4835  019B  1283               	bcf	3,5	;RP0=0, select bank0
  4836  019C  1303               	bcf	3,6	;RP1=0, select bank0
  4837  019D  01CD               	clrf	setLED@command
  4838  019E  29AA               	goto	L10
  4839  019F                     l5217:	
  4840                           ;PIR_B1.c: 196: } else {
  4841                           
  4842                           
  4843                           ;PIR_B1.c: 197: setLED(1, 0);
  4844  019F  1283               	bcf	3,5	;RP0=0, select bank0
  4845  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  4846  01A1  01CD               	clrf	setLED@command
  4847  01A2  3001               	movlw	1
  4848  01A3  158A  2735  118A   	fcall	_setLED
  4849                           
  4850                           ;PIR_B1.c: 198: setLED(2, 1);
  4851  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  4852  01A7  1303               	bcf	3,6	;RP1=0, select bank0
  4853  01A8  01CD               	clrf	setLED@command
  4854  01A9  0ACD               	incf	setLED@command,f
  4855  01AA                     L10:	
  4856  01AA  3002               	movlw	2
  4857  01AB  158A  2735  118A   	fcall	_setLED
  4858  01AE                     l5219:	
  4859                           
  4860                           ;PIR_B1.c: 199: }
  4861                           ;PIR_B1.c: 241: }
  4862                           ;PIR_B1.c: 242: }
  4863                           ;PIR_B1.c: 243: }
  4864                           ;PIR_B1.c: 244: }
  4865                           ;PIR_B1.c: 245: }
  4866                           ;PIR_B1.c: 246: }
  4867                           ;PIR_B1.c: 247: if (_PIR.OK == 0) {
  4868  01AE  1683               	bsf	3,5	;RP0=1, select bank1
  4869  01AF  1303               	bcf	3,6	;RP1=0, select bank1
  4870  01B0  19A0               	btfsc	__PIR^(0+128),3
  4871  01B1  29D9               	goto	l5233
  4872                           
  4873                           ;PIR_B1.c: 248: _PIR.Count++;
  4874  01B2  3001               	movlw	1
  4875  01B3  07BE               	addwf	(__PIR^(0+128)+30),f
  4876  01B4  1803               	skipnc
  4877  01B5  0ABF               	incf	((__PIR+1)^(0+128)+30),f
  4878  01B6  3000               	movlw	0
  4879  01B7  07BF               	addwf	((__PIR+1)^(0+128)+30),f
  4880                           
  4881                           ;PIR_B1.c: 249: if (_PIR.Count == (30000 / 20)) {
  4882  01B8  3005               	movlw	5
  4883  01B9  063F               	xorwf	((__PIR+1)^(0+128)+30),w
  4884  01BA  1D03               	skipz
  4885  01BB  29BE               	goto	u6715
  4886  01BC  30DC               	movlw	220
  4887  01BD  063E               	xorwf	(__PIR^(0+128)+30),w
  4888  01BE                     u6715:	
  4889  01BE  1D03               	skipz
  4890  01BF  0008               	return
  4891                           
  4892                           ;PIR_B1.c: 250: _PIR.Count = 0;
  4893  01C0  01BE               	clrf	(__PIR^(0+128)+30)
  4894  01C1  01BF               	clrf	((__PIR+1)^(0+128)+30)
  4895                           
  4896                           ;PIR_B1.c: 251: _PIR.OK = 1;
  4897  01C2  15A0               	bsf	__PIR^(0+128),3
  4898                           
  4899                           ;PIR_B1.c: 253: setLED(1, 0);
  4900  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  4901  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  4902  01C5  01CD               	clrf	setLED@command
  4903  01C6  3001               	movlw	1
  4904  01C7  158A  2735  118A   	fcall	_setLED
  4905                           
  4906                           ;PIR_B1.c: 259: if (getLights_Status(1) == 1) {
  4907  01CA  3001               	movlw	1
  4908  01CB  158A  2367  118A   	fcall	_getLights_Status
  4909  01CE  3A01               	xorlw	1
  4910  01CF  1D03               	skipz
  4911  01D0  0008               	return
  4912                           
  4913                           ;PIR_B1.c: 260: setLights_SwOn(1);
  4914  01D1  3001               	movlw	1
  4915  01D2  158A  24E1  118A   	fcall	_setLights_SwOn
  4916                           
  4917                           ;PIR_B1.c: 261: setLights_SwOff(1);
  4918  01D5  3001               	movlw	1
  4919  01D6  158A  241C         	fcall	_setLights_SwOff
  4920                           
  4921                           ;PIR_B1.c: 263: }
  4922                           ;PIR_B1.c: 276: }
  4923                           ;PIR_B1.c: 277: } else {
  4924  01D8  0008               	return
  4925  01D9                     l5233:	
  4926                           
  4927                           ;PIR_B1.c: 278: if (LightsStatus == 1) {
  4928  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  4929  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  4930  01DB  085E               	movf	PIR_Main@LightsStatus,w
  4931  01DC  3A01               	xorlw	1
  4932  01DD  1D03               	skipz
  4933  01DE  2A09               	goto	l5251
  4934                           
  4935                           ;PIR_B1.c: 279: _PIR.CloseTimeSeconds++;
  4936  01DF  3001               	movlw	1
  4937  01E0  00D3               	movwf	??_PIR_Main
  4938  01E1  0853               	movf	??_PIR_Main,w
  4939  01E2  1683               	bsf	3,5	;RP0=1, select bank1
  4940  01E3  1303               	bcf	3,6	;RP1=0, select bank1
  4941  01E4  07C2               	addwf	(__PIR^(0+128)+34),f
  4942                           
  4943                           ;PIR_B1.c: 280: if (_PIR.CloseTimeSeconds == (1000 / 20)) {
  4944  01E5  0842               	movf	(__PIR^(0+128)+34),w
  4945  01E6  3A32               	xorlw	50
  4946  01E7  1D03               	skipz
  4947  01E8  0008               	return
  4948                           
  4949                           ;PIR_B1.c: 281: _PIR.CloseTimeSeconds = 0;
  4950  01E9  01C2               	clrf	(__PIR^(0+128)+34)
  4951                           
  4952                           ;PIR_B1.c: 282: _PIR.CloseTimeMinutes++;
  4953  01EA  3001               	movlw	1
  4954  01EB  07C0               	addwf	(__PIR^(0+128)+32),f
  4955  01EC  1803               	skipnc
  4956  01ED  0AC1               	incf	((__PIR+1)^(0+128)+32),f
  4957  01EE  3000               	movlw	0
  4958  01EF  07C1               	addwf	((__PIR+1)^(0+128)+32),f
  4959                           
  4960                           ;PIR_B1.c: 283: if (_PIR.CloseTimeMinutes == _PIR.CloseTimeValue) {
  4961  01F0  0844               	movf	((__PIR+1)^(0+128)+35),w
  4962  01F1  0641               	xorwf	((__PIR+1)^(0+128)+32),w
  4963  01F2  1D03               	skipz
  4964  01F3  29F6               	goto	u6755
  4965  01F4  0843               	movf	(__PIR^(0+128)+35),w
  4966  01F5  0640               	xorwf	(__PIR^(0+128)+32),w
  4967  01F6                     u6755:	
  4968  01F6  1D03               	skipz
  4969  01F7  0008               	return
  4970                           
  4971                           ;PIR_B1.c: 284: _PIR.CloseTimeMinutes = 0;
  4972  01F8  01C0               	clrf	(__PIR^(0+128)+32)
  4973  01F9  01C1               	clrf	((__PIR+1)^(0+128)+32)
  4974                           
  4975                           ;PIR_B1.c: 290: if (getLights_Status(1) == 1) {
  4976  01FA  3001               	movlw	1
  4977  01FB  158A  2367  118A   	fcall	_getLights_Status
  4978  01FE  3A01               	xorlw	1
  4979  01FF  1D03               	skipz
  4980  0200  0008               	return
  4981                           
  4982                           ;PIR_B1.c: 291: setLights_SwOn(1);
  4983  0201  3001               	movlw	1
  4984  0202  158A  24E1  118A   	fcall	_setLights_SwOn
  4985                           
  4986                           ;PIR_B1.c: 292: setLights_SwOff(1);
  4987  0205  3001               	movlw	1
  4988  0206  158A  241C         	fcall	_setLights_SwOff
  4989                           
  4990                           ;PIR_B1.c: 294: }
  4991                           ;PIR_B1.c: 306: }
  4992                           ;PIR_B1.c: 307: }
  4993                           ;PIR_B1.c: 308: } else {
  4994  0208  0008               	return
  4995  0209                     l5251:	
  4996                           
  4997                           ;PIR_B1.c: 309: _PIR.CloseTimeSeconds = 0;
  4998  0209  1683               	bsf	3,5	;RP0=1, select bank1
  4999  020A  1303               	bcf	3,6	;RP1=0, select bank1
  5000  020B  01C2               	clrf	(__PIR^(0+128)+34)
  5001                           
  5002                           ;PIR_B1.c: 310: _PIR.CloseTimeMinutes = 0;
  5003  020C  01C0               	clrf	(__PIR^(0+128)+32)
  5004  020D  01C1               	clrf	((__PIR+1)^(0+128)+32)
  5005                           
  5006                           ;PIR_B1.c: 311: }
  5007                           ;PIR_B1.c: 312: }
  5008                           ;PIR_B1.c: 313: } else {
  5009  020E  0008               	return
  5010  020F                     l898:	
  5011                           
  5012                           ;PIR_B1.c: 314: if (myMain.PowerON == 1) {
  5013  020F  1283               	bcf	3,5	;RP0=0, select bank0
  5014  0210  1303               	bcf	3,6	;RP1=0, select bank0
  5015  0211  1C25               	btfss	_myMain,0
  5016  0212  0008               	return
  5017                           
  5018                           ;PIR_B1.c: 315: _PIR.Enable = 1;
  5019  0213  1683               	bsf	3,5	;RP0=1, select bank1
  5020  0214  1303               	bcf	3,6	;RP1=0, select bank1
  5021  0215  1420               	bsf	__PIR^(0+128),0
  5022                           
  5023                           ;PIR_B1.c: 317: setLED(1, 1);
  5024  0216  1283               	bcf	3,5	;RP0=0, select bank0
  5025  0217  1303               	bcf	3,6	;RP1=0, select bank0
  5026  0218  01CD               	clrf	setLED@command
  5027  0219  0ACD               	incf	setLED@command,f
  5028  021A  3001               	movlw	1
  5029  021B  158A  2735  118A   	fcall	_setLED
  5030                           
  5031                           ;PIR_B1.c: 322: if (getLights_Status(1) == 0) {
  5032  021E  3001               	movlw	1
  5033  021F  158A  2367  118A   	fcall	_getLights_Status
  5034  0222  3800               	iorlw	0
  5035  0223  1D03               	skipz
  5036  0224  0008               	return
  5037                           
  5038                           ;PIR_B1.c: 323: setLights_SwOn(1);
  5039  0225  3001               	movlw	1
  5040  0226  158A  24E1  118A   	fcall	_setLights_SwOn
  5041                           
  5042                           ;PIR_B1.c: 324: setLights_SwOff(1);
  5043  0229  3001               	movlw	1
  5044  022A  158A  241C         	fcall	_setLights_SwOff
  5045  022C  0008               	return
  5046  022D                     __end_of_PIR_Main:	
  5047                           
  5048                           	psect	text21
  5049  0AEA                     __ptext21:	
  5050 ;; *************** function _getCDS_Status *****************
  5051 ;; Defined at:
  5052 ;;		line 42 in file "../src/CDS_B1.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;		None
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;  status          1    4[COMMON] unsigned char 
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  1    wreg      unsigned char 
  5059 ;; Registers used:
  5060 ;;		wreg, status,2
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5066 ;;      Params:         0       0       0       0
  5067 ;;      Locals:         1       0       0       0
  5068 ;;      Temps:          0       0       0       0
  5069 ;;      Totals:         1       0       0       0
  5070 ;;Total ram usage:        1 bytes
  5071 ;; Hardware stack levels used:    1
  5072 ;; Hardware stack levels required when called:    2
  5073 ;; This function calls:
  5074 ;;		Nothing
  5075 ;; This function is called by:
  5076 ;;		_PIR_Main
  5077 ;; This function uses a non-reentrant model
  5078 ;;
  5079                           
  5080                           
  5081                           ;psect for function _getCDS_Status
  5082  0AEA                     _getCDS_Status:	
  5083                           
  5084                           ;CDS_B1.c: 43: char status = _CDS.Status == 1 ? 1 : 0;
  5085                           
  5086                           ;incstack = 0
  5087                           ; Regs used in _getCDS_Status: [wreg+status,2]
  5088  0AEA  3000               	movlw	0
  5089  0AEB  1283               	bcf	3,5	;RP0=0, select bank0
  5090  0AEC  1303               	bcf	3,6	;RP1=0, select bank0
  5091  0AED  1A2E               	btfsc	__CDS,4
  5092  0AEE  3001               	movlw	1
  5093  0AEF  00F4               	movwf	getCDS_Status@status
  5094                           
  5095                           ;CDS_B1.c: 44: return status;
  5096  0AF0  0874               	movf	getCDS_Status@status,w
  5097  0AF1  0008               	return
  5098  0AF2                     __end_of_getCDS_Status:	
  5099                           
  5100                           	psect	text22
  5101  07F5                     __ptext22:	
  5102 ;; *************** function _PIR_Initialization *****************
  5103 ;; Defined at:
  5104 ;;		line 7 in file "../src/PIR_B1.c"
  5105 ;; Parameters:    Size  Location     Type
  5106 ;;		None
  5107 ;; Auto vars:     Size  Location     Type
  5108 ;;		None
  5109 ;; Return value:  Size  Location     Type
  5110 ;;		None               void
  5111 ;; Registers used:
  5112 ;;		wreg
  5113 ;; Tracked objects:
  5114 ;;		On entry : 0/0
  5115 ;;		On exit  : 0/0
  5116 ;;		Unchanged: 0/0
  5117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5118 ;;      Params:         0       0       0       0
  5119 ;;      Locals:         0       0       0       0
  5120 ;;      Temps:          1       0       0       0
  5121 ;;      Totals:         1       0       0       0
  5122 ;;Total ram usage:        1 bytes
  5123 ;; Hardware stack levels used:    1
  5124 ;; Hardware stack levels required when called:    2
  5125 ;; This function calls:
  5126 ;;		Nothing
  5127 ;; This function is called by:
  5128 ;;		_main
  5129 ;; This function uses a non-reentrant model
  5130 ;;
  5131                           
  5132                           
  5133                           ;psect for function _PIR_Initialization
  5134  07F5                     _PIR_Initialization:	
  5135                           
  5136                           ;PIR_B1.c: 8: _PIR.RangeValue = 25;
  5137                           
  5138                           ;incstack = 0
  5139                           ; Regs used in _PIR_Initialization: [wreg]
  5140  07F5  3019               	movlw	25
  5141  07F6  00F4               	movwf	??_PIR_Initialization
  5142  07F7  0874               	movf	??_PIR_Initialization,w
  5143  07F8  1683               	bsf	3,5	;RP0=1, select bank1
  5144  07F9  1303               	bcf	3,6	;RP1=0, select bank1
  5145  07FA  00C8               	movwf	(__PIR^(0+128)+40)
  5146                           
  5147                           ;PIR_B1.c: 9: _PIR.CloseTimeValue = 5;
  5148  07FB  3005               	movlw	5
  5149  07FC  00C3               	movwf	(__PIR^(0+128)+35)
  5150  07FD  3000               	movlw	0
  5151  07FE  00C4               	movwf	(__PIR^(0+128)+36)
  5152  07FF  0008               	return
  5153  0800                     __end_of_PIR_Initialization:	
  5154                           
  5155                           	psect	text23
  5156  0B58                     __ptext23:	
  5157 ;; *************** function _Mcu_Initialization *****************
  5158 ;; Defined at:
  5159 ;;		line 30 in file "../src/MCU_B1.c"
  5160 ;; Parameters:    Size  Location     Type
  5161 ;;		None
  5162 ;; Auto vars:     Size  Location     Type
  5163 ;;		None
  5164 ;; Return value:  Size  Location     Type
  5165 ;;		None               void
  5166 ;; Registers used:
  5167 ;;		wreg, status,2, status,0, pclath, cstack
  5168 ;; Tracked objects:
  5169 ;;		On entry : 0/0
  5170 ;;		On exit  : 0/0
  5171 ;;		Unchanged: 0/0
  5172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5173 ;;      Params:         0       0       0       0
  5174 ;;      Locals:         0       0       0       0
  5175 ;;      Temps:          0       0       0       0
  5176 ;;      Totals:         0       0       0       0
  5177 ;;Total ram usage:        0 bytes
  5178 ;; Hardware stack levels used:    1
  5179 ;; Hardware stack levels required when called:    3
  5180 ;; This function calls:
  5181 ;;		_ADC_Set
  5182 ;;		_Fosc_Set
  5183 ;;		_IO_Set
  5184 ;;		_TMR1_Set
  5185 ;;		_WDT_Set
  5186 ;; This function is called by:
  5187 ;;		_main
  5188 ;; This function uses a non-reentrant model
  5189 ;;
  5190                           
  5191                           
  5192                           ;psect for function _Mcu_Initialization
  5193  0B58                     _Mcu_Initialization:	
  5194                           
  5195                           ;MCU_B1.c: 32: Fosc_Set();
  5196                           
  5197                           ;incstack = 0
  5198                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  5199  0B58  158A  22B5  158A   	fcall	_Fosc_Set
  5200                           
  5201                           ;MCU_B1.c: 34: IO_Set();
  5202  0B5B  158A  2436  158A   	fcall	_IO_Set
  5203                           
  5204                           ;MCU_B1.c: 36: ;;
  5205                           ;MCU_B1.c: 38: TMR1_Set();
  5206  0B5E  158A  233C  158A   	fcall	_TMR1_Set
  5207                           
  5208                           ;MCU_B1.c: 40: ADC_Set();
  5209  0B61  158A  22D3  158A   	fcall	_ADC_Set
  5210                           
  5211                           ;MCU_B1.c: 42: ;;
  5212                           ;MCU_B1.c: 44: ;;
  5213                           ;MCU_B1.c: 46: ;;
  5214                           ;MCU_B1.c: 48: ;;
  5215                           ;MCU_B1.c: 50: ;;
  5216                           ;MCU_B1.c: 52: WDT_Set();
  5217  0B64  158A  234A         	fcall	_WDT_Set
  5218  0B66  0008               	return
  5219  0B67                     __end_of_Mcu_Initialization:	
  5220                           
  5221                           	psect	text24
  5222  0B4A                     __ptext24:	
  5223 ;; *************** function _WDT_Set *****************
  5224 ;; Defined at:
  5225 ;;		line 1102 in file "../src/MCU_B1.c"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;		None
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;		None
  5230 ;; Return value:  Size  Location     Type
  5231 ;;		None               void
  5232 ;; Registers used:
  5233 ;;		wreg
  5234 ;; Tracked objects:
  5235 ;;		On entry : 0/0
  5236 ;;		On exit  : 0/0
  5237 ;;		Unchanged: 0/0
  5238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5239 ;;      Params:         0       0       0       0
  5240 ;;      Locals:         0       0       0       0
  5241 ;;      Temps:          1       0       0       0
  5242 ;;      Totals:         1       0       0       0
  5243 ;;Total ram usage:        1 bytes
  5244 ;; Hardware stack levels used:    1
  5245 ;; Hardware stack levels required when called:    2
  5246 ;; This function calls:
  5247 ;;		Nothing
  5248 ;; This function is called by:
  5249 ;;		_Mcu_Initialization
  5250 ;; This function uses a non-reentrant model
  5251 ;;
  5252                           
  5253                           
  5254                           ;psect for function _WDT_Set
  5255  0B4A                     _WDT_Set:	
  5256                           
  5257                           ;MCU_B1.c: 1104: PSA = 1;
  5258                           
  5259                           ;incstack = 0
  5260                           ; Regs used in _WDT_Set: [wreg]
  5261  0B4A  1683               	bsf	3,5	;RP0=1, select bank1
  5262  0B4B  1303               	bcf	3,6	;RP1=0, select bank1
  5263  0B4C  1581               	bsf	1,3	;volatile
  5264                           
  5265                           ;MCU_B1.c: 1105: PS0 = 1;
  5266  0B4D  1401               	bsf	1,0	;volatile
  5267                           
  5268                           ;MCU_B1.c: 1106: PS1 = 1;
  5269  0B4E  1481               	bsf	1,1	;volatile
  5270                           
  5271                           ;MCU_B1.c: 1107: PS2 = 1;
  5272  0B4F  1501               	bsf	1,2	;volatile
  5273                           
  5274                           ;MCU_B1.c: 1111: WDT.Enable = 1;
  5275  0B50  1283               	bcf	3,5	;RP0=0, select bank0
  5276  0B51  1303               	bcf	3,6	;RP1=0, select bank0
  5277  0B52  1435               	bsf	_WDT,0
  5278                           
  5279                           ;MCU_B1.c: 1112: WDT.Timer = 10;
  5280  0B53  300A               	movlw	10
  5281  0B54  00F4               	movwf	??_WDT_Set
  5282  0B55  0874               	movf	??_WDT_Set,w
  5283  0B56  00B6               	movwf	_WDT+1
  5284  0B57  0008               	return
  5285  0B58                     __end_of_WDT_Set:	
  5286                           
  5287                           	psect	text25
  5288  0B3C                     __ptext25:	
  5289 ;; *************** function _TMR1_Set *****************
  5290 ;; Defined at:
  5291 ;;		line 226 in file "../src/MCU_B1.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;		None
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;		None
  5296 ;; Return value:  Size  Location     Type
  5297 ;;		None               void
  5298 ;; Registers used:
  5299 ;;		wreg
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5305 ;;      Params:         0       0       0       0
  5306 ;;      Locals:         0       0       0       0
  5307 ;;      Temps:          0       0       0       0
  5308 ;;      Totals:         0       0       0       0
  5309 ;;Total ram usage:        0 bytes
  5310 ;; Hardware stack levels used:    1
  5311 ;; Hardware stack levels required when called:    2
  5312 ;; This function calls:
  5313 ;;		Nothing
  5314 ;; This function is called by:
  5315 ;;		_Mcu_Initialization
  5316 ;; This function uses a non-reentrant model
  5317 ;;
  5318                           
  5319                           
  5320                           ;psect for function _TMR1_Set
  5321  0B3C                     _TMR1_Set:	
  5322                           
  5323                           ;MCU_B1.c: 227: T1CON = (0x40 | 0x00 | 0x01);
  5324                           
  5325                           ;incstack = 0
  5326                           ; Regs used in _TMR1_Set: [wreg]
  5327  0B3C  3041               	movlw	65
  5328  0B3D  1283               	bcf	3,5	;RP0=0, select bank0
  5329  0B3E  1303               	bcf	3,6	;RP1=0, select bank0
  5330  0B3F  0090               	movwf	16	;volatile
  5331                           
  5332                           ;MCU_B1.c: 228: TMR1H = (int)((65536-1480)/256);
  5333  0B40  30FA               	movlw	250
  5334  0B41  008F               	movwf	15	;volatile
  5335                           
  5336                           ;MCU_B1.c: 229: TMR1L = (int)((65536-1480)%256);
  5337  0B42  3038               	movlw	56
  5338  0B43  008E               	movwf	14	;volatile
  5339                           
  5340                           ;MCU_B1.c: 230: TMR1IE = 1;
  5341  0B44  1683               	bsf	3,5	;RP0=1, select bank1
  5342  0B45  1303               	bcf	3,6	;RP1=0, select bank1
  5343  0B46  140C               	bsf	12,0	;volatile
  5344                           
  5345                           ;MCU_B1.c: 231: PEIE = 1;
  5346  0B47  170B               	bsf	11,6	;volatile
  5347                           
  5348                           ;MCU_B1.c: 232: GIE = 1;
  5349  0B48  178B               	bsf	11,7	;volatile
  5350  0B49  0008               	return
  5351  0B4A                     __end_of_TMR1_Set:	
  5352                           
  5353                           	psect	text26
  5354  0C36                     __ptext26:	
  5355 ;; *************** function _IO_Set *****************
  5356 ;; Defined at:
  5357 ;;		line 60 in file "../src/MCU_B1.c"
  5358 ;; Parameters:    Size  Location     Type
  5359 ;;		None
  5360 ;; Auto vars:     Size  Location     Type
  5361 ;;		None
  5362 ;; Return value:  Size  Location     Type
  5363 ;;		None               void
  5364 ;; Registers used:
  5365 ;;		wreg, status,2
  5366 ;; Tracked objects:
  5367 ;;		On entry : 0/0
  5368 ;;		On exit  : 0/0
  5369 ;;		Unchanged: 0/0
  5370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5371 ;;      Params:         0       0       0       0
  5372 ;;      Locals:         0       0       0       0
  5373 ;;      Temps:          0       0       0       0
  5374 ;;      Totals:         0       0       0       0
  5375 ;;Total ram usage:        0 bytes
  5376 ;; Hardware stack levels used:    1
  5377 ;; Hardware stack levels required when called:    2
  5378 ;; This function calls:
  5379 ;;		Nothing
  5380 ;; This function is called by:
  5381 ;;		_Mcu_Initialization
  5382 ;; This function uses a non-reentrant model
  5383 ;;
  5384                           
  5385                           
  5386                           ;psect for function _IO_Set
  5387  0C36                     _IO_Set:	
  5388                           
  5389                           ;MCU_B1.c: 62: TRISA = 0b00101111;;
  5390                           
  5391                           ;incstack = 0
  5392                           ; Regs used in _IO_Set: [wreg+status,2]
  5393  0C36  302F               	movlw	47
  5394  0C37  1683               	bsf	3,5	;RP0=1, select bank1
  5395  0C38  1303               	bcf	3,6	;RP1=0, select bank1
  5396  0C39  0085               	movwf	5	;volatile
  5397                           
  5398                           ;MCU_B1.c: 63: TRISB = 0b00010011;;
  5399  0C3A  3013               	movlw	19
  5400  0C3B  0086               	movwf	6	;volatile
  5401                           
  5402                           ;MCU_B1.c: 64: TRISC = 0b00001100;;
  5403  0C3C  300C               	movlw	12
  5404  0C3D  0087               	movwf	7	;volatile
  5405                           
  5406                           ;MCU_B1.c: 65: ANSELA = 0b00001111;;
  5407  0C3E  300F               	movlw	15
  5408  0C3F  1683               	bsf	3,5	;RP0=1, select bank3
  5409  0C40  1703               	bsf	3,6	;RP1=1, select bank3
  5410  0C41  0085               	movwf	5	;volatile
  5411                           
  5412                           ;MCU_B1.c: 66: ANSELB = 0b00010010;;
  5413  0C42  3012               	movlw	18
  5414  0C43  0086               	movwf	6	;volatile
  5415                           
  5416                           ;MCU_B1.c: 67: PORTA = 0b10101111;;
  5417  0C44  30AF               	movlw	175
  5418  0C45  1283               	bcf	3,5	;RP0=0, select bank0
  5419  0C46  1303               	bcf	3,6	;RP1=0, select bank0
  5420  0C47  0085               	movwf	5	;volatile
  5421                           
  5422                           ;MCU_B1.c: 68: PORTB = 0b00010011;;
  5423  0C48  3013               	movlw	19
  5424  0C49  0086               	movwf	6	;volatile
  5425                           
  5426                           ;MCU_B1.c: 69: PORTC = 0b00001100;;
  5427  0C4A  300C               	movlw	12
  5428  0C4B  0087               	movwf	7	;volatile
  5429                           
  5430                           ;MCU_B1.c: 71: WPUB = 0b00000000;;
  5431  0C4C  1683               	bsf	3,5	;RP0=1, select bank1
  5432  0C4D  1303               	bcf	3,6	;RP1=0, select bank1
  5433  0C4E  0195               	clrf	21	;volatile
  5434  0C4F  0008               	return
  5435  0C50                     __end_of_IO_Set:	
  5436                           
  5437                           	psect	text27
  5438  0AB5                     __ptext27:	
  5439 ;; *************** function _Fosc_Set *****************
  5440 ;; Defined at:
  5441 ;;		line 56 in file "../src/MCU_B1.c"
  5442 ;; Parameters:    Size  Location     Type
  5443 ;;		None
  5444 ;; Auto vars:     Size  Location     Type
  5445 ;;		None
  5446 ;; Return value:  Size  Location     Type
  5447 ;;		None               void
  5448 ;; Registers used:
  5449 ;;		wreg
  5450 ;; Tracked objects:
  5451 ;;		On entry : 0/0
  5452 ;;		On exit  : 0/0
  5453 ;;		Unchanged: 0/0
  5454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5455 ;;      Params:         0       0       0       0
  5456 ;;      Locals:         0       0       0       0
  5457 ;;      Temps:          0       0       0       0
  5458 ;;      Totals:         0       0       0       0
  5459 ;;Total ram usage:        0 bytes
  5460 ;; Hardware stack levels used:    1
  5461 ;; Hardware stack levels required when called:    2
  5462 ;; This function calls:
  5463 ;;		Nothing
  5464 ;; This function is called by:
  5465 ;;		_Mcu_Initialization
  5466 ;; This function uses a non-reentrant model
  5467 ;;
  5468                           
  5469                           
  5470                           ;psect for function _Fosc_Set
  5471  0AB5                     _Fosc_Set:	
  5472                           
  5473                           ;MCU_B1.c: 57: OSCCON = 0x3c;
  5474                           
  5475                           ;incstack = 0
  5476                           ; Regs used in _Fosc_Set: [wreg]
  5477  0AB5  303C               	movlw	60
  5478  0AB6  1683               	bsf	3,5	;RP0=1, select bank1
  5479  0AB7  1303               	bcf	3,6	;RP1=0, select bank1
  5480  0AB8  0090               	movwf	16	;volatile
  5481  0AB9  0008               	return
  5482  0ABA                     __end_of_Fosc_Set:	
  5483                           
  5484                           	psect	text28
  5485  0AD3                     __ptext28:	
  5486 ;; *************** function _ADC_Set *****************
  5487 ;; Defined at:
  5488 ;;		line 427 in file "../src/MCU_B1.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;		None
  5491 ;; Auto vars:     Size  Location     Type
  5492 ;;		None
  5493 ;; Return value:  Size  Location     Type
  5494 ;;		None               void
  5495 ;; Registers used:
  5496 ;;		wreg
  5497 ;; Tracked objects:
  5498 ;;		On entry : 0/0
  5499 ;;		On exit  : 0/0
  5500 ;;		Unchanged: 0/0
  5501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5502 ;;      Params:         0       0       0       0
  5503 ;;      Locals:         0       0       0       0
  5504 ;;      Temps:          0       0       0       0
  5505 ;;      Totals:         0       0       0       0
  5506 ;;Total ram usage:        0 bytes
  5507 ;; Hardware stack levels used:    1
  5508 ;; Hardware stack levels required when called:    2
  5509 ;; This function calls:
  5510 ;;		Nothing
  5511 ;; This function is called by:
  5512 ;;		_Mcu_Initialization
  5513 ;; This function uses a non-reentrant model
  5514 ;;
  5515                           
  5516                           
  5517                           ;psect for function _ADC_Set
  5518  0AD3                     _ADC_Set:	
  5519                           
  5520                           ;MCU_B1.c: 428: ADCON1 = 0x73;
  5521                           
  5522                           ;incstack = 0
  5523                           ; Regs used in _ADC_Set: [wreg]
  5524  0AD3  3073               	movlw	115
  5525  0AD4  1683               	bsf	3,5	;RP0=1, select bank1
  5526  0AD5  1303               	bcf	3,6	;RP1=0, select bank1
  5527  0AD6  009F               	movwf	31	;volatile
  5528                           
  5529                           ;MCU_B1.c: 429: FVRCON = 0xc1;
  5530  0AD7  30C1               	movlw	193
  5531  0AD8  009D               	movwf	29	;volatile
  5532  0AD9  0008               	return
  5533  0ADA                     __end_of_ADC_Set:	
  5534                           
  5535                           	psect	text29
  5536  022D                     __ptext29:	
  5537 ;; *************** function _Load_Main *****************
  5538 ;; Defined at:
  5539 ;;		line 39 in file "../src/OverLoad_B1.c"
  5540 ;; Parameters:    Size  Location     Type
  5541 ;;		None
  5542 ;; Auto vars:     Size  Location     Type
  5543 ;;  i               2   15[BANK0 ] int 
  5544 ;;  LightsCount     1   14[BANK0 ] unsigned char 
  5545 ;;  Load_RunStat    1   13[BANK0 ] unsigned char 
  5546 ;;  ErrorCountVa    1   12[BANK0 ] unsigned char 
  5547 ;;  error           1    9[BANK0 ] unsigned char 
  5548 ;; Return value:  Size  Location     Type
  5549 ;;		None               void
  5550 ;; Registers used:
  5551 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5552 ;; Tracked objects:
  5553 ;;		On entry : 0/0
  5554 ;;		On exit  : 0/0
  5555 ;;		Unchanged: 0/0
  5556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5557 ;;      Params:         0       0       0       0
  5558 ;;      Locals:         0       8       0       0
  5559 ;;      Temps:          0       2       0       0
  5560 ;;      Totals:         0      10       0       0
  5561 ;;Total ram usage:       10 bytes
  5562 ;; Hardware stack levels used:    1
  5563 ;; Hardware stack levels required when called:    3
  5564 ;; This function calls:
  5565 ;;		___lwdiv
  5566 ;;		___wmul
  5567 ;;		_getLight_LoadGO
  5568 ;;		_getLight_Load_Status
  5569 ;;		_getMain_All_Error_Status
  5570 ;;		_getMain_All_LightsStatus
  5571 ;;		_getMain_Lights_Count
  5572 ;;		_setLoad_AH_AL_Restore
  5573 ;; This function is called by:
  5574 ;;		_main
  5575 ;; This function uses a non-reentrant model
  5576 ;;
  5577                           
  5578                           
  5579                           ;psect for function _Load_Main
  5580  022D                     _Load_Main:	
  5581                           
  5582                           ;OverLoad_B1.c: 40: char error = getMain_All_Error_Status(0);
  5583                           
  5584                           ;incstack = 0
  5585                           ; Regs used in _Load_Main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5586  022D  3000               	movlw	0
  5587  022E  158A  25BA  118A   	fcall	_getMain_All_Error_Status
  5588  0231  1283               	bcf	3,5	;RP0=0, select bank0
  5589  0232  1303               	bcf	3,6	;RP1=0, select bank0
  5590  0233  00D4               	movwf	??_Load_Main
  5591  0234  0854               	movf	??_Load_Main,w
  5592  0235  00D6               	movwf	Load_Main@error
  5593                           
  5594                           ;OverLoad_B1.c: 41: char Load_RunStatus = 0, ErrorCountValue = 0, LightsCount=0;
  5595  0236  01DA               	clrf	Load_Main@Load_RunStatus
  5596  0237  01D9               	clrf	Load_Main@ErrorCountValue
  5597  0238  01DB               	clrf	Load_Main@LightsCount
  5598                           
  5599                           ;OverLoad_B1.c: 42: if (Load.Enable == 1) {
  5600  0239  1683               	bsf	3,5	;RP0=1, select bank1
  5601  023A  1303               	bcf	3,6	;RP1=0, select bank1
  5602  023B  1C4A               	btfss	_Load^(0+128),0
  5603  023C  2C0F               	goto	l700
  5604                           
  5605                           ;OverLoad_B1.c: 44: if (getMain_All_LightsStatus() == 0) {
  5606  023D  158A  2303  118A   	fcall	_getMain_All_LightsStatus
  5607  0240  3800               	iorlw	0
  5608  0241  1D03               	skipz
  5609  0242  2A46               	goto	l4957
  5610                           
  5611                           ;OverLoad_B1.c: 45: Load.GO = 0;
  5612  0243  1683               	bsf	3,5	;RP0=1, select bank1
  5613  0244  1303               	bcf	3,6	;RP1=0, select bank1
  5614  0245  2A65               	goto	l4973
  5615  0246                     l4957:	
  5616                           ;OverLoad_B1.c: 46: } else {
  5617                           
  5618                           
  5619                           ;OverLoad_B1.c: 69: if (error == 0) {
  5620  0246  1283               	bcf	3,5	;RP0=0, select bank0
  5621  0247  1303               	bcf	3,6	;RP1=0, select bank0
  5622  0248  08D6               	movf	Load_Main@error,f
  5623  0249  1D03               	skipz
  5624  024A  2A62               	goto	l703
  5625                           
  5626                           ;OverLoad_B1.c: 70: Load.GO = 1;
  5627  024B  1683               	bsf	3,5	;RP0=1, select bank1
  5628  024C  1303               	bcf	3,6	;RP1=0, select bank1
  5629  024D  14CA               	bsf	_Load^(0+128),1
  5630                           
  5631                           ;OverLoad_B1.c: 72: if (getLight_LoadGO() == 1) {
  5632  024E  158A  22BA  118A   	fcall	_getLight_LoadGO
  5633  0251  3A01               	xorlw	1
  5634  0252  1D03               	skipz
  5635  0253  2A5C               	goto	l704
  5636                           
  5637                           ;OverLoad_B1.c: 73: if (Load.Run == 0 && Load.OK == 0) {
  5638  0254  1683               	bsf	3,5	;RP0=1, select bank1
  5639  0255  1303               	bcf	3,6	;RP1=0, select bank1
  5640  0256  1DCA               	btfss	_Load^(0+128),3
  5641  0257  1BCA               	btfsc	_Load^(0+128),7
  5642  0258  2A66               	goto	l702
  5643                           
  5644                           ;OverLoad_B1.c: 74: Load.Run = 1;
  5645  0259  15CA               	bsf	_Load^(0+128),3
  5646                           
  5647                           ;OverLoad_B1.c: 75: Load.Count = 0;
  5648  025A  01E3               	clrf	(_Load^(0+128)+25)
  5649                           
  5650                           ;OverLoad_B1.c: 76: }
  5651                           ;OverLoad_B1.c: 77: } else {
  5652  025B  2A66               	goto	l702
  5653  025C                     l704:	
  5654                           
  5655                           ;OverLoad_B1.c: 78: if (Load.OK == 1) {
  5656  025C  1683               	bsf	3,5	;RP0=1, select bank1
  5657  025D  1303               	bcf	3,6	;RP1=0, select bank1
  5658  025E  1FCA               	btfss	_Load^(0+128),7
  5659  025F  2A66               	goto	l702
  5660                           
  5661                           ;OverLoad_B1.c: 79: Load.OK = 0;
  5662  0260  13CA               	bcf	_Load^(0+128),7
  5663                           
  5664                           ;OverLoad_B1.c: 80: }
  5665                           ;OverLoad_B1.c: 81: }
  5666                           ;OverLoad_B1.c: 82: } else {
  5667  0261  2A66               	goto	l702
  5668  0262                     l703:	
  5669                           
  5670                           ;OverLoad_B1.c: 83: if (Load.GO == 1) {
  5671  0262  1683               	bsf	3,5	;RP0=1, select bank1
  5672  0263  1303               	bcf	3,6	;RP1=0, select bank1
  5673  0264  18CA               	btfsc	_Load^(0+128),1
  5674  0265                     l4973:	
  5675                           
  5676                           ;OverLoad_B1.c: 84: Load.GO = 0;
  5677  0265  10CA               	bcf	_Load^(0+128),1
  5678  0266                     l702:	
  5679                           
  5680                           ;OverLoad_B1.c: 85: }
  5681                           ;OverLoad_B1.c: 86: }
  5682                           ;OverLoad_B1.c: 88: }
  5683                           ;OverLoad_B1.c: 91: if (Load.GO == 1) {
  5684  0266  1CCA               	btfss	_Load^(0+128),1
  5685  0267  2BE8               	goto	l710
  5686                           
  5687                           ;OverLoad_B1.c: 92: Load.LightsON = 1;
  5688  0268  154A               	bsf	_Load^(0+128),2
  5689                           
  5690                           ;OverLoad_B1.c: 94: if (Load.ADtoGO == 1) {
  5691  0269  1E4A               	btfss	_Load^(0+128),4
  5692  026A  2BE6               	goto	l711
  5693                           
  5694                           ;OverLoad_B1.c: 95: Load.Time++;
  5695  026B  3001               	movlw	1
  5696  026C  07CB               	addwf	(_Load^(0+128)+1),f
  5697  026D  1803               	skipnc
  5698  026E  0ACC               	incf	((_Load+1)^(0+128)+1),f
  5699  026F  3000               	movlw	0
  5700  0270  07CC               	addwf	((_Load+1)^(0+128)+1),f
  5701                           
  5702                           ;OverLoad_B1.c: 96: if (Load.Time >= (40 / 20)) {
  5703  0271  3000               	movlw	0
  5704  0272  024C               	subwf	((_Load+1)^(0+128)+1),w
  5705  0273  3002               	movlw	2
  5706  0274  1903               	skipnz
  5707  0275  024B               	subwf	(_Load^(0+128)+1),w
  5708  0276  1C03               	skipc
  5709  0277  0008               	return
  5710                           
  5711                           ;OverLoad_B1.c: 97: Load.Time = 0;
  5712  0278  01CB               	clrf	(_Load^(0+128)+1)
  5713  0279  01CC               	clrf	((_Load+1)^(0+128)+1)
  5714                           
  5715                           ;OverLoad_B1.c: 98: Load.ADtoGO = 0;
  5716  027A  124A               	bcf	_Load^(0+128),4
  5717                           
  5718                           ;OverLoad_B1.c: 100: for (int i = 1; i < 4; i++) {
  5719  027B  3001               	movlw	1
  5720  027C  1283               	bcf	3,5	;RP0=0, select bank0
  5721  027D  1303               	bcf	3,6	;RP1=0, select bank0
  5722  027E  00DC               	movwf	Load_Main@i
  5723  027F  3000               	movlw	0
  5724  0280  00DD               	movwf	Load_Main@i+1
  5725  0281  085D               	movf	Load_Main@i+1,w
  5726  0282  3A80               	xorlw	128
  5727  0283  00FF               	movwf	127
  5728  0284  3080               	movlw	128
  5729  0285  027F               	subwf	127,w
  5730  0286  1D03               	skipz
  5731  0287  2A8A               	goto	u6195
  5732  0288  3004               	movlw	4
  5733  0289  025C               	subwf	Load_Main@i,w
  5734  028A                     u6195:	
  5735  028A  1803               	btfsc	3,0
  5736  028B  2AC8               	goto	l4995
  5737  028C                     l4989:	
  5738                           
  5739                           ;OverLoad_B1.c: 101: Load.ADH += Load.AH[i];
  5740  028C  1283               	bcf	3,5	;RP0=0, select bank0
  5741  028D  1303               	bcf	3,6	;RP1=0, select bank0
  5742  028E  085C               	movf	Load_Main@i,w
  5743  028F  3ED4               	addlw	(_Load+10)& (0+255)
  5744  0290  0084               	movwf	4
  5745  0291  1383               	bcf	3,7	;select IRP bank1
  5746  0292  0800               	movf	0,w
  5747  0293  00D4               	movwf	??_Load_Main
  5748  0294  01D5               	clrf	??_Load_Main+1
  5749  0295  0854               	movf	??_Load_Main,w
  5750  0296  1683               	bsf	3,5	;RP0=1, select bank1
  5751  0297  1303               	bcf	3,6	;RP1=0, select bank1
  5752  0298  07CF               	addwf	(_Load^(0+128)+5),f
  5753  0299  1803               	skipnc
  5754  029A  0AD0               	incf	((_Load+1)^(0+128)+5),f
  5755  029B  1283               	bcf	3,5	;RP0=0, select bank0
  5756  029C  1303               	bcf	3,6	;RP1=0, select bank0
  5757  029D  0855               	movf	??_Load_Main+1,w
  5758  029E  1683               	bsf	3,5	;RP0=1, select bank1
  5759  029F  1303               	bcf	3,6	;RP1=0, select bank1
  5760  02A0  07D0               	addwf	((_Load+1)^(0+128)+5),f
  5761                           
  5762                           ;OverLoad_B1.c: 102: Load.ADL += Load.AL[i];
  5763  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  5764  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  5765  02A3  085C               	movf	Load_Main@i,w
  5766  02A4  3ED9               	addlw	(_Load+15)& (0+255)
  5767  02A5  0084               	movwf	4
  5768  02A6  0800               	movf	0,w
  5769  02A7  00D4               	movwf	??_Load_Main
  5770  02A8  01D5               	clrf	??_Load_Main+1
  5771  02A9  0854               	movf	??_Load_Main,w
  5772  02AA  1683               	bsf	3,5	;RP0=1, select bank1
  5773  02AB  1303               	bcf	3,6	;RP1=0, select bank1
  5774  02AC  07D1               	addwf	(_Load^(0+128)+7),f
  5775  02AD  1803               	skipnc
  5776  02AE  0AD2               	incf	((_Load+1)^(0+128)+7),f
  5777  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  5778  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  5779  02B1  0855               	movf	??_Load_Main+1,w
  5780  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  5781  02B3  1303               	bcf	3,6	;RP1=0, select bank1
  5782  02B4  07D2               	addwf	((_Load+1)^(0+128)+7),f
  5783  02B5  3001               	movlw	1
  5784  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  5785  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  5786  02B8  07DC               	addwf	Load_Main@i,f
  5787  02B9  1803               	skipnc
  5788  02BA  0ADD               	incf	Load_Main@i+1,f
  5789  02BB  3000               	movlw	0
  5790  02BC  07DD               	addwf	Load_Main@i+1,f
  5791  02BD  085D               	movf	Load_Main@i+1,w
  5792  02BE  3A80               	xorlw	128
  5793  02BF  00FF               	movwf	127
  5794  02C0  3080               	movlw	128
  5795  02C1  027F               	subwf	127,w
  5796  02C2  1D03               	skipz
  5797  02C3  2AC6               	goto	u6205
  5798  02C4  3004               	movlw	4
  5799  02C5  025C               	subwf	Load_Main@i,w
  5800  02C6                     u6205:	
  5801  02C6  1C03               	skipc
  5802  02C7  2A8C               	goto	l4989
  5803  02C8                     l4995:	
  5804                           
  5805                           ;OverLoad_B1.c: 103: }
  5806                           ;OverLoad_B1.c: 104: Load.ADH /= 3;
  5807  02C8  3003               	movlw	3
  5808  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  5809  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  5810  02CB  00CD               	movwf	___lwdiv@divisor
  5811  02CC  3000               	movlw	0
  5812  02CD  00CE               	movwf	___lwdiv@divisor+1
  5813  02CE  1683               	bsf	3,5	;RP0=1, select bank1
  5814  02CF  1303               	bcf	3,6	;RP1=0, select bank1
  5815  02D0  0850               	movf	((_Load+1)^(0+128)+5),w
  5816  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  5817  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  5818  02D3  01D0               	clrf	___lwdiv@dividend+1
  5819  02D4  07D0               	addwf	___lwdiv@dividend+1,f
  5820  02D5  1683               	bsf	3,5	;RP0=1, select bank1
  5821  02D6  1303               	bcf	3,6	;RP1=0, select bank1
  5822  02D7  084F               	movf	(_Load^(0+128)+5),w
  5823  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  5824  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  5825  02DA  01CF               	clrf	___lwdiv@dividend
  5826  02DB  07CF               	addwf	___lwdiv@dividend,f
  5827  02DC  158A  25F8  118A   	fcall	___lwdiv
  5828  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  5829  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  5830  02E1  084E               	movf	?___lwdiv+1,w
  5831  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  5832  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  5833  02E4  01D0               	clrf	((_Load+1)^(0+128)+5)
  5834  02E5  07D0               	addwf	((_Load+1)^(0+128)+5),f
  5835  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  5836  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  5837  02E8  084D               	movf	?___lwdiv,w
  5838  02E9  1683               	bsf	3,5	;RP0=1, select bank1
  5839  02EA  1303               	bcf	3,6	;RP1=0, select bank1
  5840  02EB  01CF               	clrf	(_Load^(0+128)+5)
  5841  02EC  07CF               	addwf	(_Load^(0+128)+5),f
  5842                           
  5843                           ;OverLoad_B1.c: 105: Load.ADL /= 3;
  5844  02ED  3003               	movlw	3
  5845  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  5846  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  5847  02F0  00CD               	movwf	___lwdiv@divisor
  5848  02F1  3000               	movlw	0
  5849  02F2  00CE               	movwf	___lwdiv@divisor+1
  5850  02F3  1683               	bsf	3,5	;RP0=1, select bank1
  5851  02F4  1303               	bcf	3,6	;RP1=0, select bank1
  5852  02F5  0852               	movf	((_Load+1)^(0+128)+7),w
  5853  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  5854  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  5855  02F8  01D0               	clrf	___lwdiv@dividend+1
  5856  02F9  07D0               	addwf	___lwdiv@dividend+1,f
  5857  02FA  1683               	bsf	3,5	;RP0=1, select bank1
  5858  02FB  1303               	bcf	3,6	;RP1=0, select bank1
  5859  02FC  0851               	movf	(_Load^(0+128)+7),w
  5860  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  5861  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  5862  02FF  01CF               	clrf	___lwdiv@dividend
  5863  0300  07CF               	addwf	___lwdiv@dividend,f
  5864  0301  158A  25F8  118A   	fcall	___lwdiv
  5865  0304  1283               	bcf	3,5	;RP0=0, select bank0
  5866  0305  1303               	bcf	3,6	;RP1=0, select bank0
  5867  0306  084E               	movf	?___lwdiv+1,w
  5868  0307  1683               	bsf	3,5	;RP0=1, select bank1
  5869  0308  1303               	bcf	3,6	;RP1=0, select bank1
  5870  0309  01D2               	clrf	((_Load+1)^(0+128)+7)
  5871  030A  07D2               	addwf	((_Load+1)^(0+128)+7),f
  5872  030B  1283               	bcf	3,5	;RP0=0, select bank0
  5873  030C  1303               	bcf	3,6	;RP1=0, select bank0
  5874  030D  084D               	movf	?___lwdiv,w
  5875  030E  1683               	bsf	3,5	;RP0=1, select bank1
  5876  030F  1303               	bcf	3,6	;RP1=0, select bank1
  5877  0310  01D1               	clrf	(_Load^(0+128)+7)
  5878  0311  07D1               	addwf	(_Load^(0+128)+7),f
  5879                           
  5880                           ;OverLoad_B1.c: 106: setLoad_AH_AL_Restore();
  5881  0312  158A  23D7  118A   	fcall	_setLoad_AH_AL_Restore
  5882                           
  5883                           ;OverLoad_B1.c: 108: if (Load.ADH >= Load.ADL) {
  5884  0315  1683               	bsf	3,5	;RP0=1, select bank1
  5885  0316  1303               	bcf	3,6	;RP1=0, select bank1
  5886  0317  0852               	movf	((_Load+1)^(0+128)+7),w
  5887  0318  0250               	subwf	((_Load+1)^(0+128)+5),w
  5888  0319  1D03               	skipz
  5889  031A  2B1D               	goto	u6215
  5890  031B  0851               	movf	(_Load^(0+128)+7),w
  5891  031C  024F               	subwf	(_Load^(0+128)+5),w
  5892  031D                     u6215:	
  5893  031D  1C03               	skipc
  5894  031E  0008               	return
  5895                           
  5896                           ;OverLoad_B1.c: 109: Load.AD = Load.ADH - Load.ADL;
  5897  031F  0351               	decf	(_Load^(0+128)+7),w
  5898  0320  3AFF               	xorlw	255
  5899  0321  074F               	addwf	(_Load^(0+128)+5),w
  5900  0322  1283               	bcf	3,5	;RP0=0, select bank0
  5901  0323  1303               	bcf	3,6	;RP1=0, select bank0
  5902  0324  00D4               	movwf	??_Load_Main
  5903  0325  0854               	movf	??_Load_Main,w
  5904  0326  1683               	bsf	3,5	;RP0=1, select bank1
  5905  0327  1303               	bcf	3,6	;RP1=0, select bank1
  5906  0328  00DE               	movwf	(_Load^(0+128)+20)
  5907                           
  5908                           ;OverLoad_B1.c: 110: Load.ADH = 0;
  5909  0329  01CF               	clrf	(_Load^(0+128)+5)
  5910  032A  01D0               	clrf	((_Load+1)^(0+128)+5)
  5911                           
  5912                           ;OverLoad_B1.c: 111: Load.ADL = 0;
  5913  032B  01D1               	clrf	(_Load^(0+128)+7)
  5914  032C  01D2               	clrf	((_Load+1)^(0+128)+7)
  5915                           
  5916                           ;OverLoad_B1.c: 113: if (Load.Run == 1) {
  5917  032D  1DCA               	btfss	_Load^(0+128),3
  5918  032E  2B92               	goto	l716
  5919                           
  5920                           ;OverLoad_B1.c: 114: if (Load.Count < 2) {
  5921  032F  3002               	movlw	2
  5922  0330  0263               	subwf	(_Load^(0+128)+25),w
  5923  0331  1803               	skipnc
  5924  0332  2B92               	goto	l716
  5925                           
  5926                           ;OverLoad_B1.c: 115: Load.Count++;
  5927  0333  3001               	movlw	1
  5928  0334  1283               	bcf	3,5	;RP0=0, select bank0
  5929  0335  1303               	bcf	3,6	;RP1=0, select bank0
  5930  0336  00D4               	movwf	??_Load_Main
  5931  0337  0854               	movf	??_Load_Main,w
  5932  0338  1683               	bsf	3,5	;RP0=1, select bank1
  5933  0339  1303               	bcf	3,6	;RP1=0, select bank1
  5934  033A  07E3               	addwf	(_Load^(0+128)+25),f
  5935                           
  5936                           ;OverLoad_B1.c: 120: Load_RunStatus = getLight_Load_Status();
  5937  033B  158A  22C0  118A   	fcall	_getLight_Load_Status
  5938  033E  1283               	bcf	3,5	;RP0=0, select bank0
  5939  033F  1303               	bcf	3,6	;RP1=0, select bank0
  5940  0340  00D4               	movwf	??_Load_Main
  5941  0341  0854               	movf	??_Load_Main,w
  5942  0342  00DA               	movwf	Load_Main@Load_RunStatus
  5943                           
  5944                           ;OverLoad_B1.c: 122: LightsCount = getMain_Lights_Count();
  5945  0343  158A  2316  118A   	fcall	_getMain_Lights_Count
  5946  0346  1283               	bcf	3,5	;RP0=0, select bank0
  5947  0347  1303               	bcf	3,6	;RP1=0, select bank0
  5948  0348  00D4               	movwf	??_Load_Main
  5949  0349  0854               	movf	??_Load_Main,w
  5950  034A  00DB               	movwf	Load_Main@LightsCount
  5951                           
  5952                           ;OverLoad_B1.c: 124: if (Load.Count == 1) {
  5953  034B  1683               	bsf	3,5	;RP0=1, select bank1
  5954  034C  1303               	bcf	3,6	;RP1=0, select bank1
  5955  034D  0863               	movf	(_Load^(0+128)+25),w
  5956  034E  3A01               	xorlw	1
  5957  034F  1D03               	skipz
  5958  0350  2B53               	goto	l5021
  5959                           
  5960                           ;OverLoad_B1.c: 126: Load.JudgeValue = (int)(20*1.7);
  5961  0351  3022               	movlw	34
  5962  0352  2B60               	goto	L14
  5963  0353                     l5021:	
  5964                           ;OverLoad_B1.c: 127: } else if (Load.Count == 2) {
  5965                           
  5966  0353  0863               	movf	(_Load^(0+128)+25),w
  5967  0354  3A02               	xorlw	2
  5968  0355  1D03               	skipz
  5969  0356  2B92               	goto	l716
  5970                           
  5971                           ;OverLoad_B1.c: 128: if (LightsCount == 1) {
  5972  0357  1283               	bcf	3,5	;RP0=0, select bank0
  5973  0358  1303               	bcf	3,6	;RP1=0, select bank0
  5974  0359  085B               	movf	Load_Main@LightsCount,w
  5975  035A  3A01               	xorlw	1
  5976  035B  1D03               	skipz
  5977  035C  2B63               	goto	l5027
  5978                           
  5979                           ;OverLoad_B1.c: 129: Load.JudgeValue = (int)(8*1.7);
  5980  035D  300D               	movlw	13
  5981  035E  1683               	bsf	3,5	;RP0=1, select bank1
  5982  035F  1303               	bcf	3,6	;RP1=0, select bank1
  5983  0360                     L14:	
  5984  0360  00E1               	movwf	(_Load^(0+128)+23)
  5985  0361  3000               	movlw	0
  5986  0362  2B91               	goto	L15
  5987  0363                     l5027:	
  5988                           ;OverLoad_B1.c: 130: } else {
  5989                           
  5990                           
  5991                           ;OverLoad_B1.c: 131: if (Load_RunStatus == 0) {
  5992  0363  1283               	bcf	3,5	;RP0=0, select bank0
  5993  0364  08DA               	movf	Load_Main@Load_RunStatus,f
  5994  0365  1D03               	skipz
  5995  0366  2B84               	goto	l5031
  5996                           
  5997                           ;OverLoad_B1.c: 132: Load.JudgeValue = (int)(8*1.7) * LightsCount;
  5998  0367  085B               	movf	Load_Main@LightsCount,w
  5999  0368  00D4               	movwf	??_Load_Main
  6000  0369  01D5               	clrf	??_Load_Main+1
  6001  036A  0854               	movf	??_Load_Main,w
  6002  036B  00CD               	movwf	___wmul@multiplier
  6003  036C  0855               	movf	??_Load_Main+1,w
  6004  036D  00CE               	movwf	___wmul@multiplier+1
  6005  036E  300D               	movlw	13
  6006  036F  00CF               	movwf	___wmul@multiplicand
  6007  0370  3000               	movlw	0
  6008  0371  00D0               	movwf	___wmul@multiplicand+1
  6009  0372  158A  2506  118A   	fcall	___wmul
  6010  0375  1283               	bcf	3,5	;RP0=0, select bank0
  6011  0376  1303               	bcf	3,6	;RP1=0, select bank0
  6012  0377  084E               	movf	?___wmul+1,w
  6013  0378  1683               	bsf	3,5	;RP0=1, select bank1
  6014  0379  1303               	bcf	3,6	;RP1=0, select bank1
  6015  037A  01E2               	clrf	((_Load+1)^(0+128)+23)
  6016  037B  07E2               	addwf	((_Load+1)^(0+128)+23),f
  6017  037C  1283               	bcf	3,5	;RP0=0, select bank0
  6018  037D  1303               	bcf	3,6	;RP1=0, select bank0
  6019  037E  084D               	movf	?___wmul,w
  6020  037F  1683               	bsf	3,5	;RP0=1, select bank1
  6021  0380  1303               	bcf	3,6	;RP1=0, select bank1
  6022  0381  01E1               	clrf	(_Load^(0+128)+23)
  6023  0382  07E1               	addwf	(_Load^(0+128)+23),f
  6024                           
  6025                           ;OverLoad_B1.c: 133: } else if (Load_RunStatus == 1) {
  6026  0383  2B92               	goto	l716
  6027  0384                     l5031:	
  6028  0384  1283               	bcf	3,5	;RP0=0, select bank0
  6029  0385  085A               	movf	Load_Main@Load_RunStatus,w
  6030  0386  3A01               	xorlw	1
  6031  0387  1D03               	skipz
  6032  0388  2B92               	goto	l716
  6033                           
  6034                           ;OverLoad_B1.c: 134: Load.JudgeValue = (int)(8*1.7) + Load.TotalLoad;
  6035  0389  1683               	bsf	3,5	;RP0=1, select bank1
  6036  038A  1303               	bcf	3,6	;RP1=0, select bank1
  6037  038B  0853               	movf	(_Load^(0+128)+9),w
  6038  038C  3E0D               	addlw	13
  6039  038D  00E1               	movwf	(_Load^(0+128)+23)
  6040  038E  3000               	movlw	0
  6041  038F  1803               	skipnc
  6042  0390  3001               	movlw	1
  6043  0391                     L15:	
  6044  0391  00E2               	movwf	(_Load^(0+128)+24)
  6045  0392                     l716:	
  6046                           
  6047                           ;OverLoad_B1.c: 135: }
  6048                           ;OverLoad_B1.c: 136: }
  6049                           ;OverLoad_B1.c: 137: }
  6050                           ;OverLoad_B1.c: 138: }
  6051                           ;OverLoad_B1.c: 139: }
  6052                           ;OverLoad_B1.c: 141: if (Load.AD >= Load.JudgeValue) {
  6053  0392  1683               	bsf	3,5	;RP0=1, select bank1
  6054  0393  1303               	bcf	3,6	;RP1=0, select bank1
  6055  0394  085E               	movf	(_Load^(0+128)+20),w
  6056  0395  1283               	bcf	3,5	;RP0=0, select bank0
  6057  0396  1303               	bcf	3,6	;RP1=0, select bank0
  6058  0397  00D4               	movwf	??_Load_Main
  6059  0398  01D5               	clrf	??_Load_Main+1
  6060  0399  1683               	bsf	3,5	;RP0=1, select bank1
  6061  039A  1303               	bcf	3,6	;RP1=0, select bank1
  6062  039B  0862               	movf	((_Load+1)^(0+128)+23),w
  6063  039C  1283               	bcf	3,5	;RP0=0, select bank0
  6064  039D  1303               	bcf	3,6	;RP1=0, select bank0
  6065  039E  0255               	subwf	??_Load_Main+1,w
  6066  039F  1D03               	skipz
  6067  03A0  2BA7               	goto	u6295
  6068  03A1  1683               	bsf	3,5	;RP0=1, select bank1
  6069  03A2  1303               	bcf	3,6	;RP1=0, select bank1
  6070  03A3  0861               	movf	(_Load^(0+128)+23),w
  6071  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  6072  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  6073  03A6  0254               	subwf	??_Load_Main,w
  6074  03A7                     u6295:	
  6075  03A7  1C03               	skipc
  6076  03A8  2BC8               	goto	l5049
  6077                           
  6078                           ;OverLoad_B1.c: 142: ErrorCountValue = LightsCount == 1 ? 2 : 3;
  6079  03A9  085B               	movf	Load_Main@LightsCount,w
  6080  03AA  3A01               	xorlw	1
  6081  03AB  1903               	skipnz
  6082  03AC  2BAF               	goto	l5039
  6083  03AD  3003               	movlw	3
  6084  03AE  2BB0               	goto	L16
  6085  03AF                     l5039:	
  6086  03AF  3002               	movlw	2
  6087  03B0                     L16:	
  6088  03B0  00D7               	movwf	_Load_Main$2389
  6089  03B1  3000               	movlw	0
  6090  03B2  00D8               	movwf	_Load_Main$2389+1
  6091  03B3  0857               	movf	_Load_Main$2389,w
  6092  03B4  00D4               	movwf	??_Load_Main
  6093  03B5  0854               	movf	??_Load_Main,w
  6094  03B6  00D9               	movwf	Load_Main@ErrorCountValue
  6095                           
  6096                           ;OverLoad_B1.c: 143: Load.ErrorCount++;
  6097  03B7  3001               	movlw	1
  6098  03B8  00D4               	movwf	??_Load_Main
  6099  03B9  0854               	movf	??_Load_Main,w
  6100  03BA  1683               	bsf	3,5	;RP0=1, select bank1
  6101  03BB  1303               	bcf	3,6	;RP1=0, select bank1
  6102  03BC  07E4               	addwf	(_Load^(0+128)+26),f
  6103                           
  6104                           ;OverLoad_B1.c: 144: if (Load.ErrorCount > ErrorCountValue) {
  6105  03BD  0864               	movf	(_Load^(0+128)+26),w
  6106  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  6107  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  6108  03C0  0259               	subwf	Load_Main@ErrorCountValue,w
  6109  03C1  1803               	skipnc
  6110  03C2  0008               	return
  6111                           
  6112                           ;OverLoad_B1.c: 145: Load.ErrorCount = 0;
  6113  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  6114  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  6115  03C5  01E4               	clrf	(_Load^(0+128)+26)
  6116                           
  6117                           ;OverLoad_B1.c: 146: Load.ERROR = 1;
  6118  03C6  16CA               	bsf	_Load^(0+128),5
  6119                           
  6120                           ;OverLoad_B1.c: 168: }
  6121                           ;OverLoad_B1.c: 169: } else {
  6122  03C7  0008               	return
  6123  03C8                     l5049:	
  6124                           
  6125                           ;OverLoad_B1.c: 170: Load.ErrorCount = 0;
  6126  03C8  1683               	bsf	3,5	;RP0=1, select bank1
  6127  03C9  1303               	bcf	3,6	;RP1=0, select bank1
  6128  03CA  01E4               	clrf	(_Load^(0+128)+26)
  6129                           
  6130                           ;OverLoad_B1.c: 171: if (Load.Run == 1) {
  6131  03CB  1DCA               	btfss	_Load^(0+128),3
  6132  03CC  0008               	return
  6133                           
  6134                           ;OverLoad_B1.c: 172: Load.SafeCount++;
  6135  03CD  3001               	movlw	1
  6136  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  6137  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  6138  03D0  00D4               	movwf	??_Load_Main
  6139  03D1  0854               	movf	??_Load_Main,w
  6140  03D2  1683               	bsf	3,5	;RP0=1, select bank1
  6141  03D3  1303               	bcf	3,6	;RP1=0, select bank1
  6142  03D4  07E5               	addwf	(_Load^(0+128)+27),f
  6143                           
  6144                           ;OverLoad_B1.c: 173: if (Load.SafeCount >= 3) {
  6145  03D5  3003               	movlw	3
  6146  03D6  0265               	subwf	(_Load^(0+128)+27),w
  6147  03D7  1C03               	skipc
  6148  03D8  0008               	return
  6149                           
  6150                           ;OverLoad_B1.c: 174: Load.SafeCount = 0;
  6151  03D9  01E5               	clrf	(_Load^(0+128)+27)
  6152                           
  6153                           ;OverLoad_B1.c: 175: Load.OK = 1;
  6154  03DA  17CA               	bsf	_Load^(0+128),7
  6155                           
  6156                           ;OverLoad_B1.c: 176: Load.Run = 0;
  6157  03DB  11CA               	bcf	_Load^(0+128),3
  6158                           
  6159                           ;OverLoad_B1.c: 177: Load.Count = 0;
  6160  03DC  01E3               	clrf	(_Load^(0+128)+25)
  6161                           
  6162                           ;OverLoad_B1.c: 178: Load.TotalLoad = Load.AD;
  6163  03DD  085E               	movf	(_Load^(0+128)+20),w
  6164  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  6165  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  6166  03E0  00D4               	movwf	??_Load_Main
  6167  03E1  0854               	movf	??_Load_Main,w
  6168  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  6169  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  6170  03E4  00D3               	movwf	(_Load^(0+128)+9)
  6171                           
  6172                           ;OverLoad_B1.c: 182: }
  6173                           ;OverLoad_B1.c: 183: }
  6174                           ;OverLoad_B1.c: 206: }
  6175                           ;OverLoad_B1.c: 207: }
  6176                           ;OverLoad_B1.c: 208: }
  6177                           ;OverLoad_B1.c: 209: } else {
  6178  03E5  0008               	return
  6179  03E6                     l711:	
  6180                           
  6181                           ;OverLoad_B1.c: 210: Load.ADtoGO = 1;
  6182  03E6  164A               	bsf	_Load^(0+128),4
  6183                           
  6184                           ;OverLoad_B1.c: 211: }
  6185                           ;OverLoad_B1.c: 212: } else {
  6186  03E7  0008               	return
  6187  03E8                     l710:	
  6188                           
  6189                           ;OverLoad_B1.c: 214: if (Load.LightsON == 1) {
  6190  03E8  1D4A               	btfss	_Load^(0+128),2
  6191  03E9  2BFC               	goto	l5085
  6192                           
  6193                           ;OverLoad_B1.c: 215: Load.LightsON = 0;
  6194  03EA  114A               	bcf	_Load^(0+128),2
  6195                           
  6196                           ;OverLoad_B1.c: 217: Load.ADtoGO = 0;
  6197  03EB  124A               	bcf	_Load^(0+128),4
  6198                           
  6199                           ;OverLoad_B1.c: 218: Load.Time = 0;
  6200  03EC  01CB               	clrf	(_Load^(0+128)+1)
  6201  03ED  01CC               	clrf	((_Load+1)^(0+128)+1)
  6202                           
  6203                           ;OverLoad_B1.c: 219: setLoad_AH_AL_Restore();
  6204  03EE  158A  23D7  118A   	fcall	_setLoad_AH_AL_Restore
  6205                           
  6206                           ;OverLoad_B1.c: 221: Load.ErrorCount = 0;
  6207  03F1  1683               	bsf	3,5	;RP0=1, select bank1
  6208  03F2  1303               	bcf	3,6	;RP1=0, select bank1
  6209  03F3  01E4               	clrf	(_Load^(0+128)+26)
  6210                           
  6211                           ;OverLoad_B1.c: 222: Load.SafeCount = 0;
  6212  03F4  01E5               	clrf	(_Load^(0+128)+27)
  6213                           
  6214                           ;OverLoad_B1.c: 224: Load.ADH = 0;
  6215  03F5  01CF               	clrf	(_Load^(0+128)+5)
  6216  03F6  01D0               	clrf	((_Load+1)^(0+128)+5)
  6217                           
  6218                           ;OverLoad_B1.c: 225: Load.ADL = 0;
  6219  03F7  01D1               	clrf	(_Load^(0+128)+7)
  6220  03F8  01D2               	clrf	((_Load+1)^(0+128)+7)
  6221                           
  6222                           ;OverLoad_B1.c: 231: Load.Run = 0;
  6223  03F9  11CA               	bcf	_Load^(0+128),3
  6224                           
  6225                           ;OverLoad_B1.c: 232: Load.Count = 0;
  6226  03FA  01E3               	clrf	(_Load^(0+128)+25)
  6227                           
  6228                           ;OverLoad_B1.c: 233: Load.OK = 0;
  6229  03FB  13CA               	bcf	_Load^(0+128),7
  6230  03FC                     l5085:	
  6231                           
  6232                           ;OverLoad_B1.c: 255: }
  6233                           ;OverLoad_B1.c: 256: if (Load.ERROR == 1) {
  6234  03FC  1ECA               	btfss	_Load^(0+128),5
  6235  03FD  0008               	return
  6236                           
  6237                           ;OverLoad_B1.c: 257: Load.ErrorTime++;
  6238  03FE  3001               	movlw	1
  6239  03FF  07CD               	addwf	(_Load^(0+128)+3),f
  6240  0400  1803               	skipnc
  6241  0401  0ACE               	incf	((_Load+1)^(0+128)+3),f
  6242  0402  3000               	movlw	0
  6243  0403  07CE               	addwf	((_Load+1)^(0+128)+3),f
  6244                           
  6245                           ;OverLoad_B1.c: 258: if (Load.ErrorTime >= (10000 / 20)) {
  6246  0404  3001               	movlw	1
  6247  0405  024E               	subwf	((_Load+1)^(0+128)+3),w
  6248  0406  30F4               	movlw	244
  6249  0407  1903               	skipnz
  6250  0408  024D               	subwf	(_Load^(0+128)+3),w
  6251  0409  1C03               	skipc
  6252  040A  0008               	return
  6253                           
  6254                           ;OverLoad_B1.c: 259: Load.ErrorTime = 0;
  6255  040B  01CD               	clrf	(_Load^(0+128)+3)
  6256  040C  01CE               	clrf	((_Load+1)^(0+128)+3)
  6257                           
  6258                           ;OverLoad_B1.c: 260: Load.ERROR = 0;
  6259  040D  12CA               	bcf	_Load^(0+128),5
  6260                           
  6261                           ;OverLoad_B1.c: 261: }
  6262                           ;OverLoad_B1.c: 262: }
  6263                           ;OverLoad_B1.c: 263: }
  6264                           ;OverLoad_B1.c: 264: } else {
  6265  040E  0008               	return
  6266  040F                     l700:	
  6267                           
  6268                           ;OverLoad_B1.c: 265: if (myMain.PowerON == 1) {
  6269  040F  1283               	bcf	3,5	;RP0=0, select bank0
  6270  0410  1303               	bcf	3,6	;RP1=0, select bank0
  6271  0411  1C25               	btfss	_myMain,0
  6272  0412  0008               	return
  6273                           
  6274                           ;OverLoad_B1.c: 266: Load.Enable = 1;
  6275  0413  1683               	bsf	3,5	;RP0=1, select bank1
  6276  0414  1303               	bcf	3,6	;RP1=0, select bank1
  6277  0415  144A               	bsf	_Load^(0+128),0
  6278  0416  0008               	return
  6279  0417                     __end_of_Load_Main:	
  6280                           
  6281                           	psect	text30
  6282  0B16                     __ptext30:	
  6283 ;; *************** function _getMain_Lights_Count *****************
  6284 ;; Defined at:
  6285 ;;		line 459 in file "../src/Main_B1.c"
  6286 ;; Parameters:    Size  Location     Type
  6287 ;;		None
  6288 ;; Auto vars:     Size  Location     Type
  6289 ;;  status1         1    5[COMMON] unsigned char 
  6290 ;;  count           1    4[COMMON] unsigned char 
  6291 ;; Return value:  Size  Location     Type
  6292 ;;                  1    wreg      unsigned char 
  6293 ;; Registers used:
  6294 ;;		wreg, status,2
  6295 ;; Tracked objects:
  6296 ;;		On entry : 0/0
  6297 ;;		On exit  : 0/0
  6298 ;;		Unchanged: 0/0
  6299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6300 ;;      Params:         0       0       0       0
  6301 ;;      Locals:         2       0       0       0
  6302 ;;      Temps:          0       0       0       0
  6303 ;;      Totals:         2       0       0       0
  6304 ;;Total ram usage:        2 bytes
  6305 ;; Hardware stack levels used:    1
  6306 ;; Hardware stack levels required when called:    2
  6307 ;; This function calls:
  6308 ;;		Nothing
  6309 ;; This function is called by:
  6310 ;;		_Load_Main
  6311 ;; This function uses a non-reentrant model
  6312 ;;
  6313                           
  6314                           
  6315                           ;psect for function _getMain_Lights_Count
  6316  0B16                     _getMain_Lights_Count:	
  6317                           
  6318                           ;Main_B1.c: 460: char count = 0;
  6319                           
  6320                           ;incstack = 0
  6321                           ; Regs used in _getMain_Lights_Count: [wreg+status,2]
  6322  0B16  01F4               	clrf	getMain_Lights_Count@count
  6323                           
  6324                           ;Main_B1.c: 476: char status1 = Lights1.Status == 1 ? 1 : 0;
  6325  0B17  3000               	movlw	0
  6326  0B18  1283               	bcf	3,5	;RP0=0, select bank0
  6327  0B19  1303               	bcf	3,6	;RP1=0, select bank0
  6328  0B1A  1940               	btfsc	_Lights1,2
  6329  0B1B  3001               	movlw	1
  6330  0B1C  00F5               	movwf	getMain_Lights_Count@status1
  6331                           
  6332                           ;Main_B1.c: 487: return count = status1;
  6333  0B1D  0875               	movf	getMain_Lights_Count@status1,w
  6334  0B1E  00F4               	movwf	getMain_Lights_Count@count
  6335  0B1F  0008               	return
  6336  0B20                     __end_of_getMain_Lights_Count:	
  6337                           
  6338                           	psect	text31
  6339  0AC0                     __ptext31:	
  6340 ;; *************** function _getLight_Load_Status *****************
  6341 ;; Defined at:
  6342 ;;		line 405 in file "../src/TriacRelay_B1.c"
  6343 ;; Parameters:    Size  Location     Type
  6344 ;;		None
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;  loadstatus      1    4[COMMON] unsigned char 
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  1    wreg      unsigned char 
  6349 ;; Registers used:
  6350 ;;		wreg, status,2
  6351 ;; Tracked objects:
  6352 ;;		On entry : 0/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6356 ;;      Params:         0       0       0       0
  6357 ;;      Locals:         1       0       0       0
  6358 ;;      Temps:          0       0       0       0
  6359 ;;      Totals:         1       0       0       0
  6360 ;;Total ram usage:        1 bytes
  6361 ;; Hardware stack levels used:    1
  6362 ;; Hardware stack levels required when called:    2
  6363 ;; This function calls:
  6364 ;;		Nothing
  6365 ;; This function is called by:
  6366 ;;		_Load_Main
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370                           
  6371                           ;psect for function _getLight_Load_Status
  6372  0AC0                     _getLight_Load_Status:	
  6373                           
  6374                           ;TriacRelay_B1.c: 406: char loadstatus = Light.Load_Status == 1 ? 1 : 0;
  6375                           
  6376                           ;incstack = 0
  6377                           ; Regs used in _getLight_Load_Status: [wreg+status,2]
  6378  0AC0  3000               	movlw	0
  6379  0AC1  18F7               	btfsc	_Light,1
  6380  0AC2  3001               	movlw	1
  6381  0AC3  00F4               	movwf	getLight_Load_Status@loadstatus
  6382                           
  6383                           ;TriacRelay_B1.c: 407: return loadstatus;
  6384  0AC4  0874               	movf	getLight_Load_Status@loadstatus,w
  6385  0AC5  0008               	return
  6386  0AC6                     __end_of_getLight_Load_Status:	
  6387                           
  6388                           	psect	text32
  6389  0ABA                     __ptext32:	
  6390 ;; *************** function _getLight_LoadGO *****************
  6391 ;; Defined at:
  6392 ;;		line 400 in file "../src/TriacRelay_B1.c"
  6393 ;; Parameters:    Size  Location     Type
  6394 ;;		None
  6395 ;; Auto vars:     Size  Location     Type
  6396 ;;  loadgo          1    4[COMMON] unsigned char 
  6397 ;; Return value:  Size  Location     Type
  6398 ;;                  1    wreg      unsigned char 
  6399 ;; Registers used:
  6400 ;;		wreg, status,2
  6401 ;; Tracked objects:
  6402 ;;		On entry : 0/0
  6403 ;;		On exit  : 0/0
  6404 ;;		Unchanged: 0/0
  6405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6406 ;;      Params:         0       0       0       0
  6407 ;;      Locals:         1       0       0       0
  6408 ;;      Temps:          0       0       0       0
  6409 ;;      Totals:         1       0       0       0
  6410 ;;Total ram usage:        1 bytes
  6411 ;; Hardware stack levels used:    1
  6412 ;; Hardware stack levels required when called:    2
  6413 ;; This function calls:
  6414 ;;		Nothing
  6415 ;; This function is called by:
  6416 ;;		_Load_Main
  6417 ;; This function uses a non-reentrant model
  6418 ;;
  6419                           
  6420                           
  6421                           ;psect for function _getLight_LoadGO
  6422  0ABA                     _getLight_LoadGO:	
  6423                           
  6424                           ;TriacRelay_B1.c: 401: char loadgo = Light.LoadGO == 1 ? 1 : 0;
  6425                           
  6426                           ;incstack = 0
  6427                           ; Regs used in _getLight_LoadGO: [wreg+status,2]
  6428  0ABA  3000               	movlw	0
  6429  0ABB  1877               	btfsc	_Light,0
  6430  0ABC  3001               	movlw	1
  6431  0ABD  00F4               	movwf	getLight_LoadGO@loadgo
  6432                           
  6433                           ;TriacRelay_B1.c: 402: return loadgo;
  6434  0ABE  0874               	movf	getLight_LoadGO@loadgo,w
  6435  0ABF  0008               	return
  6436  0AC0                     __end_of_getLight_LoadGO:	
  6437                           
  6438                           	psect	text33
  6439  0D06                     __ptext33:	
  6440 ;; *************** function ___wmul *****************
  6441 ;; Defined at:
  6442 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul16.c"
  6443 ;; Parameters:    Size  Location     Type
  6444 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6445 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6446 ;; Auto vars:     Size  Location     Type
  6447 ;;  product         2    4[COMMON] unsigned int 
  6448 ;; Return value:  Size  Location     Type
  6449 ;;                  2    0[BANK0 ] unsigned int 
  6450 ;; Registers used:
  6451 ;;		wreg, status,2, status,0
  6452 ;; Tracked objects:
  6453 ;;		On entry : 0/0
  6454 ;;		On exit  : 0/0
  6455 ;;		Unchanged: 0/0
  6456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6457 ;;      Params:         0       4       0       0
  6458 ;;      Locals:         2       0       0       0
  6459 ;;      Temps:          0       0       0       0
  6460 ;;      Totals:         2       4       0       0
  6461 ;;Total ram usage:        6 bytes
  6462 ;; Hardware stack levels used:    1
  6463 ;; Hardware stack levels required when called:    2
  6464 ;; This function calls:
  6465 ;;		Nothing
  6466 ;; This function is called by:
  6467 ;;		_Load_Main
  6468 ;; This function uses a non-reentrant model
  6469 ;;
  6470                           
  6471                           
  6472                           ;psect for function ___wmul
  6473  0D06                     ___wmul:	
  6474                           
  6475                           ;incstack = 0
  6476                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6477  0D06  01F4               	clrf	___wmul@product
  6478  0D07  01F5               	clrf	___wmul@product+1
  6479  0D08                     l4733:	
  6480  0D08  1283               	bcf	3,5	;RP0=0, select bank0
  6481  0D09  1303               	bcf	3,6	;RP1=0, select bank0
  6482  0D0A  1C4D               	btfss	___wmul@multiplier,0
  6483  0D0B  2D12               	goto	l1384
  6484  0D0C  084F               	movf	___wmul@multiplicand,w
  6485  0D0D  07F4               	addwf	___wmul@product,f
  6486  0D0E  1803               	skipnc
  6487  0D0F  0AF5               	incf	___wmul@product+1,f
  6488  0D10  0850               	movf	___wmul@multiplicand+1,w
  6489  0D11  07F5               	addwf	___wmul@product+1,f
  6490  0D12                     l1384:	
  6491  0D12  3001               	movlw	1
  6492  0D13                     u5635:	
  6493  0D13  1003               	clrc
  6494  0D14  0DCF               	rlf	___wmul@multiplicand,f
  6495  0D15  0DD0               	rlf	___wmul@multiplicand+1,f
  6496  0D16  3EFF               	addlw	-1
  6497  0D17  1D03               	skipz
  6498  0D18  2D13               	goto	u5635
  6499  0D19  3001               	movlw	1
  6500  0D1A                     u5645:	
  6501  0D1A  1003               	clrc
  6502  0D1B  0CCE               	rrf	___wmul@multiplier+1,f
  6503  0D1C  0CCD               	rrf	___wmul@multiplier,f
  6504  0D1D  3EFF               	addlw	-1
  6505  0D1E  1D03               	skipz
  6506  0D1F  2D1A               	goto	u5645
  6507  0D20  084E               	movf	___wmul@multiplier+1,w
  6508  0D21  044D               	iorwf	___wmul@multiplier,w
  6509  0D22  1D03               	skipz
  6510  0D23  2D08               	goto	l4733
  6511  0D24  0875               	movf	___wmul@product+1,w
  6512  0D25  01CE               	clrf	?___wmul+1
  6513  0D26  07CE               	addwf	?___wmul+1,f
  6514  0D27  0874               	movf	___wmul@product,w
  6515  0D28  01CD               	clrf	?___wmul
  6516  0D29  07CD               	addwf	?___wmul,f
  6517  0D2A  0008               	return
  6518  0D2B                     __end_of___wmul:	
  6519                           
  6520                           	psect	text34
  6521  0DF8                     __ptext34:	
  6522 ;; *************** function ___lwdiv *****************
  6523 ;; Defined at:
  6524 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  6525 ;; Parameters:    Size  Location     Type
  6526 ;;  divisor         2    0[BANK0 ] unsigned int 
  6527 ;;  dividend        2    2[BANK0 ] unsigned int 
  6528 ;; Auto vars:     Size  Location     Type
  6529 ;;  quotient        2    5[BANK0 ] unsigned int 
  6530 ;;  counter         1    4[BANK0 ] unsigned char 
  6531 ;; Return value:  Size  Location     Type
  6532 ;;                  2    0[BANK0 ] unsigned int 
  6533 ;; Registers used:
  6534 ;;		wreg, status,2, status,0
  6535 ;; Tracked objects:
  6536 ;;		On entry : 0/0
  6537 ;;		On exit  : 0/0
  6538 ;;		Unchanged: 0/0
  6539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6540 ;;      Params:         0       4       0       0
  6541 ;;      Locals:         0       3       0       0
  6542 ;;      Temps:          1       0       0       0
  6543 ;;      Totals:         1       7       0       0
  6544 ;;Total ram usage:        8 bytes
  6545 ;; Hardware stack levels used:    1
  6546 ;; Hardware stack levels required when called:    2
  6547 ;; This function calls:
  6548 ;;		Nothing
  6549 ;; This function is called by:
  6550 ;;		_Load_Main
  6551 ;;		_getPIR_AD
  6552 ;; This function uses a non-reentrant model
  6553 ;;
  6554                           
  6555                           
  6556                           ;psect for function ___lwdiv
  6557  0DF8                     ___lwdiv:	
  6558                           
  6559                           ;incstack = 0
  6560                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6561  0DF8  1283               	bcf	3,5	;RP0=0, select bank0
  6562  0DF9  1303               	bcf	3,6	;RP1=0, select bank0
  6563  0DFA  01D2               	clrf	___lwdiv@quotient
  6564  0DFB  01D3               	clrf	___lwdiv@quotient+1
  6565  0DFC  084E               	movf	___lwdiv@divisor+1,w
  6566  0DFD  044D               	iorwf	___lwdiv@divisor,w
  6567  0DFE  1903               	skipnz
  6568  0DFF  2E31               	goto	l4765
  6569  0E00  01D1               	clrf	___lwdiv@counter
  6570  0E01  0AD1               	incf	___lwdiv@counter,f
  6571  0E02                     l4753:	
  6572  0E02  1BCE               	btfsc	___lwdiv@divisor+1,7
  6573  0E03  2E10               	goto	l4755
  6574  0E04  3001               	movlw	1
  6575  0E05                     u5675:	
  6576  0E05  1003               	clrc
  6577  0E06  0DCD               	rlf	___lwdiv@divisor,f
  6578  0E07  0DCE               	rlf	___lwdiv@divisor+1,f
  6579  0E08  3EFF               	addlw	-1
  6580  0E09  1D03               	skipz
  6581  0E0A  2E05               	goto	u5675
  6582  0E0B  3001               	movlw	1
  6583  0E0C  00F4               	movwf	??___lwdiv
  6584  0E0D  0874               	movf	??___lwdiv,w
  6585  0E0E  07D1               	addwf	___lwdiv@counter,f
  6586  0E0F  2E02               	goto	l4753
  6587  0E10                     l4755:	
  6588  0E10  3001               	movlw	1
  6589  0E11                     u5695:	
  6590  0E11  1003               	clrc
  6591  0E12  0DD2               	rlf	___lwdiv@quotient,f
  6592  0E13  0DD3               	rlf	___lwdiv@quotient+1,f
  6593  0E14  3EFF               	addlw	-1
  6594  0E15  1D03               	skipz
  6595  0E16  2E11               	goto	u5695
  6596  0E17  084E               	movf	___lwdiv@divisor+1,w
  6597  0E18  0250               	subwf	___lwdiv@dividend+1,w
  6598  0E19  1D03               	skipz
  6599  0E1A  2E1D               	goto	u5705
  6600  0E1B  084D               	movf	___lwdiv@divisor,w
  6601  0E1C  024F               	subwf	___lwdiv@dividend,w
  6602  0E1D                     u5705:	
  6603  0E1D  1C03               	skipc
  6604  0E1E  2E26               	goto	l4761
  6605  0E1F  084D               	movf	___lwdiv@divisor,w
  6606  0E20  02CF               	subwf	___lwdiv@dividend,f
  6607  0E21  084E               	movf	___lwdiv@divisor+1,w
  6608  0E22  1C03               	skipc
  6609  0E23  03D0               	decf	___lwdiv@dividend+1,f
  6610  0E24  02D0               	subwf	___lwdiv@dividend+1,f
  6611  0E25  1452               	bsf	___lwdiv@quotient,0
  6612  0E26                     l4761:	
  6613  0E26  3001               	movlw	1
  6614  0E27                     u5715:	
  6615  0E27  1003               	clrc
  6616  0E28  0CCE               	rrf	___lwdiv@divisor+1,f
  6617  0E29  0CCD               	rrf	___lwdiv@divisor,f
  6618  0E2A  3EFF               	addlw	-1
  6619  0E2B  1D03               	skipz
  6620  0E2C  2E27               	goto	u5715
  6621  0E2D  3001               	movlw	1
  6622  0E2E  02D1               	subwf	___lwdiv@counter,f
  6623  0E2F  1D03               	btfss	3,2
  6624  0E30  2E10               	goto	l4755
  6625  0E31                     l4765:	
  6626  0E31  0853               	movf	___lwdiv@quotient+1,w
  6627  0E32  01CE               	clrf	?___lwdiv+1
  6628  0E33  07CE               	addwf	?___lwdiv+1,f
  6629  0E34  0852               	movf	___lwdiv@quotient,w
  6630  0E35  01CD               	clrf	?___lwdiv
  6631  0E36  07CD               	addwf	?___lwdiv,f
  6632  0E37  0008               	return
  6633  0E38                     __end_of___lwdiv:	
  6634                           
  6635                           	psect	text35
  6636  0A9A                     __ptext35:	
  6637 ;; *************** function _Load_Initialization *****************
  6638 ;; Defined at:
  6639 ;;		line 9 in file "../src/OverLoad_B1.c"
  6640 ;; Parameters:    Size  Location     Type
  6641 ;;		None
  6642 ;; Auto vars:     Size  Location     Type
  6643 ;;		None
  6644 ;; Return value:  Size  Location     Type
  6645 ;;		None               void
  6646 ;; Registers used:
  6647 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6648 ;; Tracked objects:
  6649 ;;		On entry : 0/0
  6650 ;;		On exit  : 0/0
  6651 ;;		Unchanged: 0/0
  6652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6653 ;;      Params:         0       0       0       0
  6654 ;;      Locals:         0       0       0       0
  6655 ;;      Temps:          0       0       0       0
  6656 ;;      Totals:         0       0       0       0
  6657 ;;Total ram usage:        0 bytes
  6658 ;; Hardware stack levels used:    1
  6659 ;; Hardware stack levels required when called:    3
  6660 ;; This function calls:
  6661 ;;		_setLoad_AH_AL_Restore
  6662 ;; This function is called by:
  6663 ;;		_main
  6664 ;; This function uses a non-reentrant model
  6665 ;;
  6666                           
  6667                           
  6668                           ;psect for function _Load_Initialization
  6669  0A9A                     _Load_Initialization:	
  6670                           
  6671                           ;OverLoad_B1.c: 11: setLoad_AH_AL_Restore();
  6672                           
  6673                           ;incstack = 0
  6674                           ; Regs used in _Load_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6675  0A9A  158A  23D7         	fcall	_setLoad_AH_AL_Restore
  6676  0A9C  0008               	return
  6677  0A9D                     __end_of_Load_Initialization:	
  6678                           
  6679                           	psect	text36
  6680  0BD7                     __ptext36:	
  6681 ;; *************** function _setLoad_AH_AL_Restore *****************
  6682 ;; Defined at:
  6683 ;;		line 292 in file "../src/OverLoad_B1.c"
  6684 ;; Parameters:    Size  Location     Type
  6685 ;;		None
  6686 ;; Auto vars:     Size  Location     Type
  6687 ;;  i               1    5[COMMON] unsigned char 
  6688 ;; Return value:  Size  Location     Type
  6689 ;;		None               void
  6690 ;; Registers used:
  6691 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6692 ;; Tracked objects:
  6693 ;;		On entry : 0/0
  6694 ;;		On exit  : 0/0
  6695 ;;		Unchanged: 0/0
  6696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6697 ;;      Params:         0       0       0       0
  6698 ;;      Locals:         1       0       0       0
  6699 ;;      Temps:          1       0       0       0
  6700 ;;      Totals:         2       0       0       0
  6701 ;;Total ram usage:        2 bytes
  6702 ;; Hardware stack levels used:    1
  6703 ;; Hardware stack levels required when called:    2
  6704 ;; This function calls:
  6705 ;;		Nothing
  6706 ;; This function is called by:
  6707 ;;		_Load_Initialization
  6708 ;;		_Load_Main
  6709 ;; This function uses a non-reentrant model
  6710 ;;
  6711                           
  6712                           
  6713                           ;psect for function _setLoad_AH_AL_Restore
  6714  0BD7                     _setLoad_AH_AL_Restore:	
  6715                           
  6716                           ;OverLoad_B1.c: 293: char i;
  6717                           ;OverLoad_B1.c: 294: for (i = 0; i < 5; i++) {
  6718                           
  6719                           ;incstack = 0
  6720                           ; Regs used in _setLoad_AH_AL_Restore: [wreg-fsr0h+status,2+status,0]
  6721  0BD7  01F5               	clrf	setLoad_AH_AL_Restore@i
  6722  0BD8                     L17:	
  6723  0BD8  3005               	movlw	5
  6724  0BD9  0275               	subwf	setLoad_AH_AL_Restore@i,w
  6725  0BDA  1803               	btfsc	3,0
  6726  0BDB  0008               	return
  6727                           
  6728                           ;OverLoad_B1.c: 295: Load.AH[i] = 0;
  6729  0BDC  0875               	movf	setLoad_AH_AL_Restore@i,w
  6730  0BDD  3ED4               	addlw	(_Load+10)& (0+255)
  6731  0BDE  0084               	movwf	4
  6732  0BDF  1383               	bcf	3,7	;select IRP bank1
  6733  0BE0  0180               	clrf	0
  6734                           
  6735                           ;OverLoad_B1.c: 296: Load.AL[i] = 0xff;
  6736  0BE1  30FF               	movlw	255
  6737  0BE2  00F4               	movwf	??_setLoad_AH_AL_Restore
  6738  0BE3  0875               	movf	setLoad_AH_AL_Restore@i,w
  6739  0BE4  3ED9               	addlw	(_Load+15)& (0+255)
  6740  0BE5  0084               	movwf	4
  6741  0BE6  0874               	movf	??_setLoad_AH_AL_Restore,w
  6742  0BE7  0080               	movwf	0
  6743  0BE8  3001               	movlw	1
  6744  0BE9  00F4               	movwf	??_setLoad_AH_AL_Restore
  6745  0BEA  0874               	movf	??_setLoad_AH_AL_Restore,w
  6746  0BEB  07F5               	addwf	setLoad_AH_AL_Restore@i,f
  6747  0BEC  2BD8               	goto	L17
  6748  0BED                     __end_of_setLoad_AH_AL_Restore:	
  6749                           
  6750                           	psect	text37
  6751  0CA1                     __ptext37:	
  6752 ;; *************** function _Lights_Main *****************
  6753 ;; Defined at:
  6754 ;;		line 52 in file "../src/TriacRelay_B1.c"
  6755 ;; Parameters:    Size  Location     Type
  6756 ;;		None
  6757 ;; Auto vars:     Size  Location     Type
  6758 ;;		None
  6759 ;; Return value:  Size  Location     Type
  6760 ;;		None               void
  6761 ;; Registers used:
  6762 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6763 ;; Tracked objects:
  6764 ;;		On entry : 0/0
  6765 ;;		On exit  : 0/0
  6766 ;;		Unchanged: 0/0
  6767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6768 ;;      Params:         0       0       0       0
  6769 ;;      Locals:         0       0       0       0
  6770 ;;      Temps:          0       0       0       0
  6771 ;;      Totals:         0       0       0       0
  6772 ;;Total ram usage:        0 bytes
  6773 ;; Hardware stack levels used:    1
  6774 ;; Hardware stack levels required when called:    6
  6775 ;; This function calls:
  6776 ;;		_Lights_Control
  6777 ;;		_getLoad_OK
  6778 ;;		_getMain_All_Error_Status
  6779 ;;		_getMain_All_LightsStatus
  6780 ;;		_setLights_Main
  6781 ;; This function is called by:
  6782 ;;		_main
  6783 ;; This function uses a non-reentrant model
  6784 ;;
  6785                           
  6786                           
  6787                           ;psect for function _Lights_Main
  6788  0CA1                     _Lights_Main:	
  6789                           
  6790                           ;TriacRelay_B1.c: 65: if (Light.LoadGO == 1) {
  6791                           
  6792                           ;incstack = 0
  6793                           ; Regs used in _Lights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6794  0CA1  1C77               	btfss	_Light,0
  6795  0CA2  2CB7               	goto	l5103
  6796                           
  6797                           ;TriacRelay_B1.c: 66: if (getLoad_OK() == 1 || getMain_All_Error_Status(0) != 0 || getMa
      +                          in_All_LightsStatus() == 0) {
  6798  0CA3  158A  22E2  158A   	fcall	_getLoad_OK
  6799  0CA6  3A01               	xorlw	1
  6800  0CA7  1903               	skipnz
  6801  0CA8  2CB6               	goto	l1263
  6802  0CA9  3000               	movlw	0
  6803  0CAA  158A  25BA  158A   	fcall	_getMain_All_Error_Status
  6804  0CAD  3800               	iorlw	0
  6805  0CAE  1D03               	skipz
  6806  0CAF  2CB6               	goto	l1263
  6807  0CB0  158A  2303  158A   	fcall	_getMain_All_LightsStatus
  6808  0CB3  3800               	iorlw	0
  6809  0CB4  1D03               	skipz
  6810  0CB5  2CB7               	goto	l5103
  6811  0CB6                     l1263:	
  6812                           
  6813                           ;TriacRelay_B1.c: 67: Light.LoadGO = 0;
  6814  0CB6  1077               	bcf	_Light,0
  6815  0CB7                     l5103:	
  6816                           
  6817                           ;TriacRelay_B1.c: 68: }
  6818                           ;TriacRelay_B1.c: 69: }
  6819                           ;TriacRelay_B1.c: 73: setLights_Main(1);
  6820  0CB7  3001               	movlw	1
  6821  0CB8  158A  2556  158A   	fcall	_setLights_Main
  6822                           
  6823                           ;TriacRelay_B1.c: 74: Lights_Control(1);
  6824  0CBB  3001               	movlw	1
  6825  0CBC  118A  2607         	fcall	_Lights_Control
  6826  0CBE  0008               	return
  6827  0CBF                     __end_of_Lights_Main:	
  6828                           
  6829                           	psect	text38
  6830  0D56                     __ptext38:	
  6831 ;; *************** function _setLights_Main *****************
  6832 ;; Defined at:
  6833 ;;		line 91 in file "../src/TriacRelay_B1.c"
  6834 ;; Parameters:    Size  Location     Type
  6835 ;;  lights          1    wreg     unsigned char 
  6836 ;; Auto vars:     Size  Location     Type
  6837 ;;  lights          1    5[BANK0 ] unsigned char 
  6838 ;; Return value:  Size  Location     Type
  6839 ;;		None               void
  6840 ;; Registers used:
  6841 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6842 ;; Tracked objects:
  6843 ;;		On entry : 0/0
  6844 ;;		On exit  : 0/0
  6845 ;;		Unchanged: 0/0
  6846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6847 ;;      Params:         0       0       0       0
  6848 ;;      Locals:         0       1       0       0
  6849 ;;      Temps:          0       0       0       0
  6850 ;;      Totals:         0       1       0       0
  6851 ;;Total ram usage:        1 bytes
  6852 ;; Hardware stack levels used:    1
  6853 ;; Hardware stack levels required when called:    5
  6854 ;; This function calls:
  6855 ;;		_LightsPointSelect
  6856 ;;		_getLights_Allow_Condition
  6857 ;;		_setLights
  6858 ;; This function is called by:
  6859 ;;		_Lights_Main
  6860 ;; This function uses a non-reentrant model
  6861 ;;
  6862                           
  6863                           
  6864                           ;psect for function _setLights_Main
  6865  0D56                     _setLights_Main:	
  6866                           
  6867                           ;incstack = 0
  6868                           ; Regs used in _setLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6869                           ;setLights_Main@lights stored from wreg
  6870  0D56  1283               	bcf	3,5	;RP0=0, select bank0
  6871  0D57  1303               	bcf	3,6	;RP1=0, select bank0
  6872  0D58  00D2               	movwf	setLights_Main@lights
  6873                           
  6874                           ;TriacRelay_B1.c: 92: LightsPointSelect(lights);
  6875  0D59  0852               	movf	setLights_Main@lights,w
  6876  0D5A  158A  230C  158A   	fcall	_LightsPointSelect
  6877                           
  6878                           ;TriacRelay_B1.c: 93: if (Lights->GO == 0) {
  6879  0D5D  0878               	movf	_Lights,w
  6880  0D5E  0084               	movwf	4
  6881  0D5F  1383               	bcf	3,7	;select IRP bank0
  6882  0D60  1880               	btfsc	0,1
  6883  0D61  0008               	return
  6884                           
  6885                           ;TriacRelay_B1.c: 94: if (Lights->Trigger == 1) {
  6886  0D62  0878               	movf	_Lights,w
  6887  0D63  0084               	movwf	4
  6888  0D64  1D80               	btfss	0,3
  6889  0D65  0008               	return
  6890                           
  6891                           ;TriacRelay_B1.c: 95: if (getLights_Allow_Condition(lights) == 0) {
  6892  0D66  1283               	bcf	3,5	;RP0=0, select bank0
  6893  0D67  1303               	bcf	3,6	;RP1=0, select bank0
  6894  0D68  0852               	movf	setLights_Main@lights,w
  6895  0D69  158A  23ED  158A   	fcall	_getLights_Allow_Condition
  6896  0D6C  3800               	iorlw	0
  6897  0D6D  1D03               	skipz
  6898  0D6E  0008               	return
  6899                           
  6900                           ;TriacRelay_B1.c: 96: Lights->Trigger = 0;
  6901  0D6F  0878               	movf	_Lights,w
  6902  0D70  0084               	movwf	4
  6903  0D71  1383               	bcf	3,7	;select IRP bank0
  6904  0D72  1180               	bcf	0,3
  6905                           
  6906                           ;TriacRelay_B1.c: 97: if (Lights->Switch == 1) {
  6907  0D73  0878               	movf	_Lights,w
  6908  0D74  0084               	movwf	4
  6909  0D75  1E00               	btfss	0,4
  6910  0D76  2D7F               	goto	l4701
  6911                           
  6912                           ;TriacRelay_B1.c: 98: setLights(lights, 1);
  6913  0D77  1283               	bcf	3,5	;RP0=0, select bank0
  6914  0D78  1303               	bcf	3,6	;RP1=0, select bank0
  6915  0D79  01CF               	clrf	setLights@status
  6916  0D7A  0ACF               	incf	setLights@status,f
  6917  0D7B  0852               	movf	setLights_Main@lights,w
  6918  0D7C  118A  268A         	fcall	_setLights
  6919                           
  6920                           ;TriacRelay_B1.c: 99: } else {
  6921  0D7E  0008               	return
  6922  0D7F                     l4701:	
  6923                           
  6924                           ;TriacRelay_B1.c: 100: setLights(lights, 0);
  6925  0D7F  1283               	bcf	3,5	;RP0=0, select bank0
  6926  0D80  1303               	bcf	3,6	;RP1=0, select bank0
  6927  0D81  01CF               	clrf	setLights@status
  6928  0D82  0852               	movf	setLights_Main@lights,w
  6929  0D83  118A  268A         	fcall	_setLights
  6930  0D85  0008               	return
  6931  0D86                     __end_of_setLights_Main:	
  6932                           
  6933                           	psect	text39
  6934  068A                     __ptext39:	
  6935 ;; *************** function _setLights *****************
  6936 ;; Defined at:
  6937 ;;		line 108 in file "../src/TriacRelay_B1.c"
  6938 ;; Parameters:    Size  Location     Type
  6939 ;;  lights          1    wreg     unsigned char 
  6940 ;;  status          1    2[BANK0 ] unsigned char 
  6941 ;; Auto vars:     Size  Location     Type
  6942 ;;  lights          1    4[BANK0 ] unsigned char 
  6943 ;; Return value:  Size  Location     Type
  6944 ;;		None               void
  6945 ;; Registers used:
  6946 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6947 ;; Tracked objects:
  6948 ;;		On entry : 0/0
  6949 ;;		On exit  : 0/0
  6950 ;;		Unchanged: 0/0
  6951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6952 ;;      Params:         0       1       0       0
  6953 ;;      Locals:         0       1       0       0
  6954 ;;      Temps:          0       1       0       0
  6955 ;;      Totals:         0       3       0       0
  6956 ;;Total ram usage:        3 bytes
  6957 ;; Hardware stack levels used:    1
  6958 ;; Hardware stack levels required when called:    4
  6959 ;; This function calls:
  6960 ;;		_setLED
  6961 ;;		_setLights_Line
  6962 ;; This function is called by:
  6963 ;;		_setLights_Main
  6964 ;; This function uses a non-reentrant model
  6965 ;;
  6966                           
  6967                           
  6968                           ;psect for function _setLights
  6969  068A                     _setLights:	
  6970                           
  6971                           ;incstack = 0
  6972                           ; Regs used in _setLights: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6973                           ;setLights@lights stored from wreg
  6974  068A  1283               	bcf	3,5	;RP0=0, select bank0
  6975  068B  1303               	bcf	3,6	;RP1=0, select bank0
  6976  068C  00D1               	movwf	setLights@lights
  6977                           
  6978                           ;TriacRelay_B1.c: 116: if (status == 1) {
  6979  068D  084F               	movf	setLights@status,w
  6980  068E  3A01               	xorlw	1
  6981  068F  1D03               	skipz
  6982  0690  2ECD               	goto	l4533
  6983                           
  6984                           ;TriacRelay_B1.c: 118: if (lights == 2) {
  6985  0691  0851               	movf	setLights@lights,w
  6986  0692  3A02               	xorlw	2
  6987  0693  1D03               	skipz
  6988  0694  2EA2               	goto	l4515
  6989                           
  6990                           ;TriacRelay_B1.c: 119: setLED(1, 0);
  6991  0695  01CD               	clrf	setLED@command
  6992  0696  3001               	movlw	1
  6993  0697  158A  2735  118A   	fcall	_setLED
  6994                           
  6995                           ;TriacRelay_B1.c: 120: setLED(2, 1);
  6996  069A  1283               	bcf	3,5	;RP0=0, select bank0
  6997  069B  1303               	bcf	3,6	;RP1=0, select bank0
  6998  069C  01CD               	clrf	setLED@command
  6999  069D  0ACD               	incf	setLED@command,f
  7000  069E  3002               	movlw	2
  7001  069F  158A  2735  118A   	fcall	_setLED
  7002  06A2                     l4515:	
  7003                           
  7004                           ;TriacRelay_B1.c: 121: }
  7005                           ;TriacRelay_B1.c: 127: if (Lights->Status == 0) {
  7006  06A2  0878               	movf	_Lights,w
  7007  06A3  0084               	movwf	4
  7008  06A4  1383               	bcf	3,7	;select IRP bank0
  7009  06A5  1900               	btfsc	0,2
  7010  06A6  2EC6               	goto	l4529
  7011                           
  7012                           ;TriacRelay_B1.c: 128: Lights->Status = 1;
  7013  06A7  0878               	movf	_Lights,w
  7014  06A8  0084               	movwf	4
  7015  06A9  1500               	bsf	0,2
  7016                           
  7017                           ;TriacRelay_B1.c: 130: if (lights == 1) {
  7018  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  7019  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  7020  06AC  0851               	movf	setLights@lights,w
  7021  06AD  3A01               	xorlw	1
  7022  06AE  1D03               	skipz
  7023  06AF  2EC6               	goto	l4529
  7024                           
  7025                           ;TriacRelay_B1.c: 131: RB2 = 1;
  7026  06B0  1506               	bsf	6,2	;volatile
  7027                           
  7028                           ;TriacRelay_B1.c: 132: Lights->RelayValue = 100;
  7029  06B1  3064               	movlw	100
  7030  06B2  00D0               	movwf	??_setLights
  7031  06B3  0878               	movf	_Lights,w
  7032  06B4  3E04               	addlw	4
  7033  06B5  0084               	movwf	4
  7034  06B6  0850               	movf	??_setLights,w
  7035  06B7  0080               	movwf	0
  7036                           
  7037                           ;TriacRelay_B1.c: 133: Lights->TriacValue = 140;
  7038  06B8  308C               	movlw	140
  7039  06B9  00D0               	movwf	??_setLights
  7040  06BA  0878               	movf	_Lights,w
  7041  06BB  3E03               	addlw	3
  7042  06BC  0084               	movwf	4
  7043  06BD  0850               	movf	??_setLights,w
  7044  06BE  0080               	movwf	0
  7045                           
  7046                           ;TriacRelay_B1.c: 134: Lights->Time = 0;
  7047  06BF  0878               	movf	_Lights,w
  7048  06C0  3E02               	addlw	2
  7049  06C1  0084               	movwf	4
  7050  06C2  0180               	clrf	0
  7051                           
  7052                           ;TriacRelay_B1.c: 135: Lights->GO = 1;
  7053  06C3  0878               	movf	_Lights,w
  7054  06C4  0084               	movwf	4
  7055  06C5  1480               	bsf	0,1
  7056  06C6                     l4529:	
  7057                           
  7058                           ;TriacRelay_B1.c: 136: }
  7059                           ;TriacRelay_B1.c: 162: }
  7060                           ;TriacRelay_B1.c: 164: Light.Load_Status = 1;
  7061  06C6  14F7               	bsf	_Light,1
  7062                           
  7063                           ;TriacRelay_B1.c: 165: setLights_Line(lights);
  7064  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  7065  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  7066  06C9  0851               	movf	setLights@lights,w
  7067  06CA  158A  232E         	fcall	_setLights_Line
  7068                           
  7069                           ;TriacRelay_B1.c: 167: } else {
  7070  06CC  0008               	return
  7071  06CD                     l4533:	
  7072                           
  7073                           ;TriacRelay_B1.c: 170: if (lights == 2) {
  7074  06CD  1283               	bcf	3,5	;RP0=0, select bank0
  7075  06CE  1303               	bcf	3,6	;RP1=0, select bank0
  7076  06CF  0851               	movf	setLights@lights,w
  7077  06D0  3A02               	xorlw	2
  7078  06D1  1D03               	skipz
  7079  06D2  2EE0               	goto	l4537
  7080                           
  7081                           ;TriacRelay_B1.c: 171: setLED(1, 1);
  7082  06D3  01CD               	clrf	setLED@command
  7083  06D4  0ACD               	incf	setLED@command,f
  7084  06D5  3001               	movlw	1
  7085  06D6  158A  2735  118A   	fcall	_setLED
  7086                           
  7087                           ;TriacRelay_B1.c: 172: setLED(2, 0);
  7088  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  7089  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  7090  06DB  01CD               	clrf	setLED@command
  7091  06DC  3002               	movlw	2
  7092  06DD  158A  2735  118A   	fcall	_setLED
  7093  06E0                     l4537:	
  7094                           
  7095                           ;TriacRelay_B1.c: 173: }
  7096                           ;TriacRelay_B1.c: 175: if (Lights->Status == 1) {
  7097  06E0  0878               	movf	_Lights,w
  7098  06E1  0084               	movwf	4
  7099  06E2  1383               	bcf	3,7	;select IRP bank0
  7100  06E3  1D00               	btfss	0,2
  7101  06E4  2F04               	goto	l4551
  7102                           
  7103                           ;TriacRelay_B1.c: 176: Lights->Status = 0;
  7104  06E5  0878               	movf	_Lights,w
  7105  06E6  0084               	movwf	4
  7106  06E7  1100               	bcf	0,2
  7107                           
  7108                           ;TriacRelay_B1.c: 178: if (lights == 1) {
  7109  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  7110  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  7111  06EA  0851               	movf	setLights@lights,w
  7112  06EB  3A01               	xorlw	1
  7113  06EC  1D03               	skipz
  7114  06ED  2F04               	goto	l4551
  7115                           
  7116                           ;TriacRelay_B1.c: 179: RB2 = 1;
  7117  06EE  1506               	bsf	6,2	;volatile
  7118                           
  7119                           ;TriacRelay_B1.c: 180: Lights->RelayValue = 40;
  7120  06EF  3028               	movlw	40
  7121  06F0  00D0               	movwf	??_setLights
  7122  06F1  0878               	movf	_Lights,w
  7123  06F2  3E04               	addlw	4
  7124  06F3  0084               	movwf	4
  7125  06F4  0850               	movf	??_setLights,w
  7126  06F5  0080               	movwf	0
  7127                           
  7128                           ;TriacRelay_B1.c: 181: Lights->TriacValue = 80;
  7129  06F6  3050               	movlw	80
  7130  06F7  00D0               	movwf	??_setLights
  7131  06F8  0878               	movf	_Lights,w
  7132  06F9  3E03               	addlw	3
  7133  06FA  0084               	movwf	4
  7134  06FB  0850               	movf	??_setLights,w
  7135  06FC  0080               	movwf	0
  7136                           
  7137                           ;TriacRelay_B1.c: 182: Lights->Time = 0;
  7138  06FD  0878               	movf	_Lights,w
  7139  06FE  3E02               	addlw	2
  7140  06FF  0084               	movwf	4
  7141  0700  0180               	clrf	0
  7142                           
  7143                           ;TriacRelay_B1.c: 183: Lights->GO = 1;
  7144  0701  0878               	movf	_Lights,w
  7145  0702  0084               	movwf	4
  7146  0703  1480               	bsf	0,1
  7147  0704                     l4551:	
  7148                           
  7149                           ;TriacRelay_B1.c: 184: }
  7150                           ;TriacRelay_B1.c: 211: }
  7151                           ;TriacRelay_B1.c: 213: Light.Load_Status = 0;
  7152  0704  10F7               	bcf	_Light,1
  7153                           
  7154                           ;TriacRelay_B1.c: 214: setLights_Line(0);
  7155  0705  3000               	movlw	0
  7156  0706  158A  232E         	fcall	_setLights_Line
  7157  0708  0008               	return
  7158  0709                     __end_of_setLights:	
  7159                           
  7160                           	psect	text40
  7161  0B2E                     __ptext40:	
  7162 ;; *************** function _setLights_Line *****************
  7163 ;; Defined at:
  7164 ;;		line 285 in file "../src/TriacRelay_B1.c"
  7165 ;; Parameters:    Size  Location     Type
  7166 ;;  lights          1    wreg     unsigned char 
  7167 ;; Auto vars:     Size  Location     Type
  7168 ;;  lights          1    4[COMMON] unsigned char 
  7169 ;; Return value:  Size  Location     Type
  7170 ;;		None               void
  7171 ;; Registers used:
  7172 ;;		wreg
  7173 ;; Tracked objects:
  7174 ;;		On entry : 0/0
  7175 ;;		On exit  : 0/0
  7176 ;;		Unchanged: 0/0
  7177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7178 ;;      Params:         0       0       0       0
  7179 ;;      Locals:         1       0       0       0
  7180 ;;      Temps:          0       0       0       0
  7181 ;;      Totals:         1       0       0       0
  7182 ;;Total ram usage:        1 bytes
  7183 ;; Hardware stack levels used:    1
  7184 ;; Hardware stack levels required when called:    2
  7185 ;; This function calls:
  7186 ;;		Nothing
  7187 ;; This function is called by:
  7188 ;;		_setLights
  7189 ;; This function uses a non-reentrant model
  7190 ;;
  7191                           
  7192                           
  7193                           ;psect for function _setLights_Line
  7194  0B2E                     _setLights_Line:	
  7195                           
  7196                           ;incstack = 0
  7197                           ; Regs used in _setLights_Line: [wreg]
  7198                           ;setLights_Line@lights stored from wreg
  7199  0B2E  00F4               	movwf	setLights_Line@lights
  7200                           
  7201                           ;TriacRelay_B1.c: 286: Light.LoadGO = 1;
  7202  0B2F  1477               	bsf	_Light,0
  7203                           
  7204                           ;TriacRelay_B1.c: 288: Lights1.Line = 0;
  7205  0B30  1283               	bcf	3,5	;RP0=0, select bank0
  7206  0B31  1303               	bcf	3,6	;RP1=0, select bank0
  7207  0B32  1041               	bcf	_Lights1+1,0
  7208                           
  7209                           ;TriacRelay_B1.c: 289: if (lights == 1 && lights != 0) {
  7210  0B33  0874               	movf	setLights_Line@lights,w
  7211  0B34  3A01               	xorlw	1
  7212  0B35  1D03               	skipz
  7213  0B36  0008               	return
  7214  0B37  0874               	movf	setLights_Line@lights,w
  7215  0B38  1903               	btfsc	3,2
  7216  0B39  0008               	return
  7217                           
  7218                           ;TriacRelay_B1.c: 290: Lights1.Line = 1;
  7219  0B3A  1441               	bsf	_Lights1+1,0
  7220  0B3B  0008               	return
  7221  0B3C                     __end_of_setLights_Line:	
  7222                           
  7223                           	psect	text41
  7224  0BED                     __ptext41:	
  7225 ;; *************** function _getLights_Allow_Condition *****************
  7226 ;; Defined at:
  7227 ;;		line 367 in file "../src/TriacRelay_B1.c"
  7228 ;; Parameters:    Size  Location     Type
  7229 ;;  lights          1    wreg     unsigned char 
  7230 ;; Auto vars:     Size  Location     Type
  7231 ;;  lights          1    0[COMMON] unsigned char 
  7232 ;;  allow           1    0[BANK0 ] unsigned char 
  7233 ;; Return value:  Size  Location     Type
  7234 ;;                  1    wreg      unsigned char 
  7235 ;; Registers used:
  7236 ;;		wreg, status,2, pclath, cstack
  7237 ;; Tracked objects:
  7238 ;;		On entry : 0/0
  7239 ;;		On exit  : 0/0
  7240 ;;		Unchanged: 0/0
  7241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7242 ;;      Params:         0       0       0       0
  7243 ;;      Locals:         0       2       0       0
  7244 ;;      Temps:          1       0       0       0
  7245 ;;      Totals:         1       2       0       0
  7246 ;;Total ram usage:        3 bytes
  7247 ;; Hardware stack levels used:    1
  7248 ;; Hardware stack levels required when called:    3
  7249 ;; This function calls:
  7250 ;;		_getLoad_OK
  7251 ;; This function is called by:
  7252 ;;		_setLights_Main
  7253 ;; This function uses a non-reentrant model
  7254 ;;
  7255                           
  7256                           
  7257                           ;psect for function _getLights_Allow_Condition
  7258  0BED                     _getLights_Allow_Condition:	
  7259                           
  7260                           ;TriacRelay_B1.c: 368: char allow = 0;
  7261                           
  7262                           ;incstack = 0
  7263                           ; Regs used in _getLights_Allow_Condition: [wreg+status,2+pclath+cstack]
  7264  0BED  1283               	bcf	3,5	;RP0=0, select bank0
  7265  0BEE  1303               	bcf	3,6	;RP1=0, select bank0
  7266  0BEF  01CD               	clrf	getLights_Allow_Condition@allow
  7267                           
  7268                           ;TriacRelay_B1.c: 371: allow = getLoad_OK() == 0 && Light.LoadGO == 0 ? 0 : 1;
  7269  0BF0  01CE               	clrf	_getLights_Allow_Condition$4224
  7270  0BF1  0ACE               	incf	_getLights_Allow_Condition$4224,f
  7271  0BF2  158A  22E2  158A   	fcall	_getLoad_OK
  7272  0BF5  3800               	iorlw	0
  7273  0BF6  1903               	btfsc	3,2
  7274  0BF7  1877               	btfsc	_Light,0
  7275  0BF8  2BFC               	goto	l4503
  7276  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  7277  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  7278  0BFB  01CE               	clrf	_getLights_Allow_Condition$4224
  7279  0BFC                     l4503:	
  7280  0BFC  1283               	bcf	3,5	;RP0=0, select bank0
  7281  0BFD  1303               	bcf	3,6	;RP1=0, select bank0
  7282  0BFE  084E               	movf	_getLights_Allow_Condition$4224,w
  7283  0BFF  00F5               	movwf	??_getLights_Allow_Condition
  7284  0C00  0875               	movf	??_getLights_Allow_Condition,w
  7285  0C01  00CD               	movwf	getLights_Allow_Condition@allow
  7286                           
  7287                           ;TriacRelay_B1.c: 396: return allow;
  7288  0C02  084D               	movf	getLights_Allow_Condition@allow,w
  7289  0C03  0008               	return
  7290  0C04                     __end_of_getLights_Allow_Condition:	
  7291                           
  7292                           	psect	text42
  7293  0AE2                     __ptext42:	
  7294 ;; *************** function _getLoad_OK *****************
  7295 ;; Defined at:
  7296 ;;		line 272 in file "../src/OverLoad_B1.c"
  7297 ;; Parameters:    Size  Location     Type
  7298 ;;		None
  7299 ;; Auto vars:     Size  Location     Type
  7300 ;;  ok              1    4[COMMON] unsigned char 
  7301 ;; Return value:  Size  Location     Type
  7302 ;;                  1    wreg      unsigned char 
  7303 ;; Registers used:
  7304 ;;		wreg, status,2
  7305 ;; Tracked objects:
  7306 ;;		On entry : 0/0
  7307 ;;		On exit  : 0/0
  7308 ;;		Unchanged: 0/0
  7309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7310 ;;      Params:         0       0       0       0
  7311 ;;      Locals:         1       0       0       0
  7312 ;;      Temps:          0       0       0       0
  7313 ;;      Totals:         1       0       0       0
  7314 ;;Total ram usage:        1 bytes
  7315 ;; Hardware stack levels used:    1
  7316 ;; Hardware stack levels required when called:    2
  7317 ;; This function calls:
  7318 ;;		Nothing
  7319 ;; This function is called by:
  7320 ;;		_Lights_Main
  7321 ;;		_getLights_Allow_Condition
  7322 ;; This function uses a non-reentrant model
  7323 ;;
  7324                           
  7325                           
  7326                           ;psect for function _getLoad_OK
  7327  0AE2                     _getLoad_OK:	
  7328                           
  7329                           ;OverLoad_B1.c: 273: char ok = Load.OK == 1 ? 1 : 0;
  7330                           
  7331                           ;incstack = 0
  7332                           ; Regs used in _getLoad_OK: [wreg+status,2]
  7333  0AE2  3000               	movlw	0
  7334  0AE3  1683               	bsf	3,5	;RP0=1, select bank1
  7335  0AE4  1303               	bcf	3,6	;RP1=0, select bank1
  7336  0AE5  1BCA               	btfsc	_Load^(0+128),7
  7337  0AE6  3001               	movlw	1
  7338  0AE7  00F4               	movwf	getLoad_OK@ok
  7339                           
  7340                           ;OverLoad_B1.c: 274: return ok;
  7341  0AE8  0874               	movf	getLoad_OK@ok,w
  7342  0AE9  0008               	return
  7343  0AEA                     __end_of_getLoad_OK:	
  7344                           
  7345                           	psect	text43
  7346  0607                     __ptext43:	
  7347 ;; *************** function _Lights_Control *****************
  7348 ;; Defined at:
  7349 ;;		line 220 in file "../src/TriacRelay_B1.c"
  7350 ;; Parameters:    Size  Location     Type
  7351 ;;  lights          1    wreg     unsigned char 
  7352 ;; Auto vars:     Size  Location     Type
  7353 ;;  lights          1   10[BANK0 ] unsigned char 
  7354 ;; Return value:  Size  Location     Type
  7355 ;;		None               void
  7356 ;; Registers used:
  7357 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7358 ;; Tracked objects:
  7359 ;;		On entry : 0/0
  7360 ;;		On exit  : 0/0
  7361 ;;		Unchanged: 0/0
  7362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7363 ;;      Params:         0       0       0       0
  7364 ;;      Locals:         0       1       0       0
  7365 ;;      Temps:          0       2       0       0
  7366 ;;      Totals:         0       3       0       0
  7367 ;;Total ram usage:        3 bytes
  7368 ;; Hardware stack levels used:    1
  7369 ;; Hardware stack levels required when called:    3
  7370 ;; This function calls:
  7371 ;;		_LightsPointSelect
  7372 ;;		___awdiv
  7373 ;; This function is called by:
  7374 ;;		_Lights_Main
  7375 ;; This function uses a non-reentrant model
  7376 ;;
  7377                           
  7378                           
  7379                           ;psect for function _Lights_Control
  7380  0607                     _Lights_Control:	
  7381                           
  7382                           ;incstack = 0
  7383                           ; Regs used in _Lights_Control: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7384                           ;Lights_Control@lights stored from wreg
  7385  0607  1283               	bcf	3,5	;RP0=0, select bank0
  7386  0608  1303               	bcf	3,6	;RP1=0, select bank0
  7387  0609  00D7               	movwf	Lights_Control@lights
  7388                           
  7389                           ;TriacRelay_B1.c: 221: LightsPointSelect(lights);
  7390  060A  0857               	movf	Lights_Control@lights,w
  7391  060B  158A  230C  118A   	fcall	_LightsPointSelect
  7392                           
  7393                           ;TriacRelay_B1.c: 222: if (Lights->GO == 1) {
  7394  060E  0878               	movf	_Lights,w
  7395  060F  0084               	movwf	4
  7396  0610  1383               	bcf	3,7	;select IRP bank0
  7397  0611  1C80               	btfss	0,1
  7398  0612  0008               	return
  7399                           
  7400                           ;TriacRelay_B1.c: 223: Lights->Time++;
  7401  0613  3001               	movlw	1
  7402  0614  1283               	bcf	3,5	;RP0=0, select bank0
  7403  0615  1303               	bcf	3,6	;RP1=0, select bank0
  7404  0616  00D5               	movwf	??_Lights_Control
  7405  0617  0878               	movf	_Lights,w
  7406  0618  3E02               	addlw	2
  7407  0619  0084               	movwf	4
  7408  061A  0855               	movf	??_Lights_Control,w
  7409  061B  0780               	addwf	0,f
  7410                           
  7411                           ;TriacRelay_B1.c: 224: if (Lights->RelaySet == 0) {
  7412  061C  0878               	movf	_Lights,w
  7413  061D  0084               	movwf	4
  7414  061E  1B80               	btfsc	0,7
  7415  061F  2E56               	goto	l4719
  7416                           
  7417                           ;TriacRelay_B1.c: 225: if (Lights->Time >= (Lights->RelayValue / 20)) {
  7418  0620  3014               	movlw	20
  7419  0621  00CD               	movwf	___awdiv@divisor
  7420  0622  3000               	movlw	0
  7421  0623  00CE               	movwf	___awdiv@divisor+1
  7422  0624  0878               	movf	_Lights,w
  7423  0625  3E04               	addlw	4
  7424  0626  0084               	movwf	4
  7425  0627  0800               	movf	0,w
  7426  0628  00D5               	movwf	??_Lights_Control
  7427  0629  01D6               	clrf	??_Lights_Control+1
  7428  062A  0855               	movf	??_Lights_Control,w
  7429  062B  00CF               	movwf	___awdiv@dividend
  7430  062C  0856               	movf	??_Lights_Control+1,w
  7431  062D  00D0               	movwf	___awdiv@dividend+1
  7432  062E  158A  26D8  118A   	fcall	___awdiv
  7433  0631  0878               	movf	_Lights,w
  7434  0632  3E02               	addlw	2
  7435  0633  0084               	movwf	4
  7436  0634  1283               	bcf	3,5	;RP0=0, select bank0
  7437  0635  1303               	bcf	3,6	;RP1=0, select bank0
  7438  0636  084E               	movf	?___awdiv+1,w
  7439  0637  3A80               	xorlw	128
  7440  0638  3C80               	sublw	128
  7441  0639  1D03               	skipz
  7442  063A  2E3E               	goto	u5565
  7443  063B  084D               	movf	?___awdiv,w
  7444  063C  1383               	bcf	3,7	;select IRP bank0
  7445  063D  0200               	subwf	0,w
  7446  063E                     u5565:	
  7447  063E  1C03               	skipc
  7448  063F  0008               	return
  7449                           
  7450                           ;TriacRelay_B1.c: 226: Lights->RelaySet = 1;
  7451  0640  0878               	movf	_Lights,w
  7452  0641  0084               	movwf	4
  7453  0642  1383               	bcf	3,7	;select IRP bank0
  7454  0643  1780               	bsf	0,7
  7455                           
  7456                           ;TriacRelay_B1.c: 228: if (lights == 1) {
  7457  0644  1283               	bcf	3,5	;RP0=0, select bank0
  7458  0645  1303               	bcf	3,6	;RP1=0, select bank0
  7459  0646  0857               	movf	Lights_Control@lights,w
  7460  0647  3A01               	xorlw	1
  7461  0648  1D03               	skipz
  7462  0649  0008               	return
  7463                           
  7464                           ;TriacRelay_B1.c: 229: RB3 = Lights->Status == 1 ? 1 : 0;
  7465  064A  0878               	movf	_Lights,w
  7466  064B  0084               	movwf	4
  7467  064C  1D00               	btfss	0,2
  7468  064D  2E52               	goto	u5580
  7469  064E  1283               	bcf	3,5	;RP0=0, select bank0
  7470  064F  1303               	bcf	3,6	;RP1=0, select bank0
  7471  0650  1586               	bsf	6,3	;volatile
  7472  0651  0008               	return
  7473  0652                     u5580:	
  7474  0652  1283               	bcf	3,5	;RP0=0, select bank0
  7475  0653  1303               	bcf	3,6	;RP1=0, select bank0
  7476  0654  1186               	bcf	6,3	;volatile
  7477                           
  7478                           ;TriacRelay_B1.c: 230: }
  7479                           ;TriacRelay_B1.c: 242: }
  7480                           ;TriacRelay_B1.c: 243: } else {
  7481  0655  0008               	return
  7482  0656                     l4719:	
  7483                           
  7484                           ;TriacRelay_B1.c: 244: if (Lights->Time >= (Lights->TriacValue / 20)) {
  7485  0656  3014               	movlw	20
  7486  0657  00CD               	movwf	___awdiv@divisor
  7487  0658  3000               	movlw	0
  7488  0659  00CE               	movwf	___awdiv@divisor+1
  7489  065A  0878               	movf	_Lights,w
  7490  065B  3E03               	addlw	3
  7491  065C  0084               	movwf	4
  7492  065D  1383               	bcf	3,7	;select IRP bank0
  7493  065E  0800               	movf	0,w
  7494  065F  00D5               	movwf	??_Lights_Control
  7495  0660  01D6               	clrf	??_Lights_Control+1
  7496  0661  0855               	movf	??_Lights_Control,w
  7497  0662  00CF               	movwf	___awdiv@dividend
  7498  0663  0856               	movf	??_Lights_Control+1,w
  7499  0664  00D0               	movwf	___awdiv@dividend+1
  7500  0665  158A  26D8  118A   	fcall	___awdiv
  7501  0668  0878               	movf	_Lights,w
  7502  0669  3E02               	addlw	2
  7503  066A  0084               	movwf	4
  7504  066B  1283               	bcf	3,5	;RP0=0, select bank0
  7505  066C  1303               	bcf	3,6	;RP1=0, select bank0
  7506  066D  084E               	movf	?___awdiv+1,w
  7507  066E  3A80               	xorlw	128
  7508  066F  3C80               	sublw	128
  7509  0670  1D03               	skipz
  7510  0671  2E75               	goto	u5605
  7511  0672  084D               	movf	?___awdiv,w
  7512  0673  1383               	bcf	3,7	;select IRP bank0
  7513  0674  0200               	subwf	0,w
  7514  0675                     u5605:	
  7515  0675  1C03               	skipc
  7516  0676  0008               	return
  7517                           
  7518                           ;TriacRelay_B1.c: 245: Lights->Time = 0;
  7519  0677  0878               	movf	_Lights,w
  7520  0678  3E02               	addlw	2
  7521  0679  0084               	movwf	4
  7522  067A  1383               	bcf	3,7	;select IRP bank0
  7523  067B  0180               	clrf	0
  7524                           
  7525                           ;TriacRelay_B1.c: 246: Lights->GO = 0;
  7526  067C  0878               	movf	_Lights,w
  7527  067D  0084               	movwf	4
  7528  067E  1080               	bcf	0,1
  7529                           
  7530                           ;TriacRelay_B1.c: 247: Lights->RelaySet = 0;
  7531  067F  0878               	movf	_Lights,w
  7532  0680  0084               	movwf	4
  7533  0681  1380               	bcf	0,7
  7534                           
  7535                           ;TriacRelay_B1.c: 250: if (lights == 1) {
  7536  0682  1283               	bcf	3,5	;RP0=0, select bank0
  7537  0683  1303               	bcf	3,6	;RP1=0, select bank0
  7538  0684  0857               	movf	Lights_Control@lights,w
  7539  0685  3A01               	xorlw	1
  7540  0686  1D03               	skipz
  7541  0687  0008               	return
  7542                           
  7543                           ;TriacRelay_B1.c: 251: RB2 = 0;
  7544  0688  1106               	bcf	6,2	;volatile
  7545  0689  0008               	return
  7546  068A                     __end_of_Lights_Control:	
  7547                           
  7548                           	psect	text44
  7549  0ED8                     __ptext44:	
  7550 ;; *************** function ___awdiv *****************
  7551 ;; Defined at:
  7552 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  7553 ;; Parameters:    Size  Location     Type
  7554 ;;  divisor         2    0[BANK0 ] int 
  7555 ;;  dividend        2    2[BANK0 ] int 
  7556 ;; Auto vars:     Size  Location     Type
  7557 ;;  quotient        2    6[BANK0 ] int 
  7558 ;;  sign            1    5[BANK0 ] unsigned char 
  7559 ;;  counter         1    4[BANK0 ] unsigned char 
  7560 ;; Return value:  Size  Location     Type
  7561 ;;                  2    0[BANK0 ] int 
  7562 ;; Registers used:
  7563 ;;		wreg, status,2, status,0
  7564 ;; Tracked objects:
  7565 ;;		On entry : 0/0
  7566 ;;		On exit  : 0/0
  7567 ;;		Unchanged: 0/0
  7568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7569 ;;      Params:         0       4       0       0
  7570 ;;      Locals:         0       4       0       0
  7571 ;;      Temps:          1       0       0       0
  7572 ;;      Totals:         1       8       0       0
  7573 ;;Total ram usage:        9 bytes
  7574 ;; Hardware stack levels used:    1
  7575 ;; Hardware stack levels required when called:    2
  7576 ;; This function calls:
  7577 ;;		Nothing
  7578 ;; This function is called by:
  7579 ;;		_getPIR_AD
  7580 ;;		_Lights_Control
  7581 ;; This function uses a non-reentrant model
  7582 ;;
  7583                           
  7584                           
  7585                           ;psect for function ___awdiv
  7586  0ED8                     ___awdiv:	
  7587                           
  7588                           ;incstack = 0
  7589                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7590  0ED8  1283               	bcf	3,5	;RP0=0, select bank0
  7591  0ED9  1303               	bcf	3,6	;RP1=0, select bank0
  7592  0EDA  01D2               	clrf	___awdiv@sign
  7593  0EDB  1FCE               	btfss	___awdiv@divisor+1,7
  7594  0EDC  2EE4               	goto	l4569
  7595  0EDD  09CD               	comf	___awdiv@divisor,f
  7596  0EDE  09CE               	comf	___awdiv@divisor+1,f
  7597  0EDF  0ACD               	incf	___awdiv@divisor,f
  7598  0EE0  1903               	skipnz
  7599  0EE1  0ACE               	incf	___awdiv@divisor+1,f
  7600  0EE2  01D2               	clrf	___awdiv@sign
  7601  0EE3  0AD2               	incf	___awdiv@sign,f
  7602  0EE4                     l4569:	
  7603  0EE4  1FD0               	btfss	___awdiv@dividend+1,7
  7604  0EE5  2EEF               	goto	l4575
  7605  0EE6  09CF               	comf	___awdiv@dividend,f
  7606  0EE7  09D0               	comf	___awdiv@dividend+1,f
  7607  0EE8  0ACF               	incf	___awdiv@dividend,f
  7608  0EE9  1903               	skipnz
  7609  0EEA  0AD0               	incf	___awdiv@dividend+1,f
  7610  0EEB  3001               	movlw	1
  7611  0EEC  00F4               	movwf	??___awdiv
  7612  0EED  0874               	movf	??___awdiv,w
  7613  0EEE  06D2               	xorwf	___awdiv@sign,f
  7614  0EEF                     l4575:	
  7615  0EEF  01D3               	clrf	___awdiv@quotient
  7616  0EF0  01D4               	clrf	___awdiv@quotient+1
  7617  0EF1  084E               	movf	___awdiv@divisor+1,w
  7618  0EF2  044D               	iorwf	___awdiv@divisor,w
  7619  0EF3  1903               	skipnz
  7620  0EF4  2F26               	goto	l4597
  7621  0EF5  01D1               	clrf	___awdiv@counter
  7622  0EF6  0AD1               	incf	___awdiv@counter,f
  7623  0EF7                     l4585:	
  7624  0EF7  1BCE               	btfsc	___awdiv@divisor+1,7
  7625  0EF8  2F05               	goto	l4587
  7626  0EF9  3001               	movlw	1
  7627  0EFA                     u5265:	
  7628  0EFA  1003               	clrc
  7629  0EFB  0DCD               	rlf	___awdiv@divisor,f
  7630  0EFC  0DCE               	rlf	___awdiv@divisor+1,f
  7631  0EFD  3EFF               	addlw	-1
  7632  0EFE  1D03               	skipz
  7633  0EFF  2EFA               	goto	u5265
  7634  0F00  3001               	movlw	1
  7635  0F01  00F4               	movwf	??___awdiv
  7636  0F02  0874               	movf	??___awdiv,w
  7637  0F03  07D1               	addwf	___awdiv@counter,f
  7638  0F04  2EF7               	goto	l4585
  7639  0F05                     l4587:	
  7640  0F05  3001               	movlw	1
  7641  0F06                     u5285:	
  7642  0F06  1003               	clrc
  7643  0F07  0DD3               	rlf	___awdiv@quotient,f
  7644  0F08  0DD4               	rlf	___awdiv@quotient+1,f
  7645  0F09  3EFF               	addlw	-1
  7646  0F0A  1D03               	skipz
  7647  0F0B  2F06               	goto	u5285
  7648  0F0C  084E               	movf	___awdiv@divisor+1,w
  7649  0F0D  0250               	subwf	___awdiv@dividend+1,w
  7650  0F0E  1D03               	skipz
  7651  0F0F  2F12               	goto	u5295
  7652  0F10  084D               	movf	___awdiv@divisor,w
  7653  0F11  024F               	subwf	___awdiv@dividend,w
  7654  0F12                     u5295:	
  7655  0F12  1C03               	skipc
  7656  0F13  2F1B               	goto	l4593
  7657  0F14  084D               	movf	___awdiv@divisor,w
  7658  0F15  02CF               	subwf	___awdiv@dividend,f
  7659  0F16  084E               	movf	___awdiv@divisor+1,w
  7660  0F17  1C03               	skipc
  7661  0F18  03D0               	decf	___awdiv@dividend+1,f
  7662  0F19  02D0               	subwf	___awdiv@dividend+1,f
  7663  0F1A  1453               	bsf	___awdiv@quotient,0
  7664  0F1B                     l4593:	
  7665  0F1B  3001               	movlw	1
  7666  0F1C                     u5305:	
  7667  0F1C  1003               	clrc
  7668  0F1D  0CCE               	rrf	___awdiv@divisor+1,f
  7669  0F1E  0CCD               	rrf	___awdiv@divisor,f
  7670  0F1F  3EFF               	addlw	-1
  7671  0F20  1D03               	skipz
  7672  0F21  2F1C               	goto	u5305
  7673  0F22  3001               	movlw	1
  7674  0F23  02D1               	subwf	___awdiv@counter,f
  7675  0F24  1D03               	btfss	3,2
  7676  0F25  2F05               	goto	l4587
  7677  0F26                     l4597:	
  7678  0F26  0852               	movf	___awdiv@sign,w
  7679  0F27  1903               	btfsc	3,2
  7680  0F28  2F2E               	goto	l4601
  7681  0F29  09D3               	comf	___awdiv@quotient,f
  7682  0F2A  09D4               	comf	___awdiv@quotient+1,f
  7683  0F2B  0AD3               	incf	___awdiv@quotient,f
  7684  0F2C  1903               	skipnz
  7685  0F2D  0AD4               	incf	___awdiv@quotient+1,f
  7686  0F2E                     l4601:	
  7687  0F2E  0854               	movf	___awdiv@quotient+1,w
  7688  0F2F  01CE               	clrf	?___awdiv+1
  7689  0F30  07CE               	addwf	?___awdiv+1,f
  7690  0F31  0853               	movf	___awdiv@quotient,w
  7691  0F32  01CD               	clrf	?___awdiv
  7692  0F33  07CD               	addwf	?___awdiv,f
  7693  0F34  0008               	return
  7694  0F35                     __end_of___awdiv:	
  7695                           
  7696                           	psect	text45
  7697  0AAD                     __ptext45:	
  7698 ;; *************** function _Lights_Initialization *****************
  7699 ;; Defined at:
  7700 ;;		line 32 in file "../src/TriacRelay_B1.c"
  7701 ;; Parameters:    Size  Location     Type
  7702 ;;		None
  7703 ;; Auto vars:     Size  Location     Type
  7704 ;;		None
  7705 ;; Return value:  Size  Location     Type
  7706 ;;		None               void
  7707 ;; Registers used:
  7708 ;;		wreg, status,2, status,0, pclath, cstack
  7709 ;; Tracked objects:
  7710 ;;		On entry : 0/0
  7711 ;;		On exit  : 0/0
  7712 ;;		Unchanged: 0/0
  7713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7714 ;;      Params:         0       0       0       0
  7715 ;;      Locals:         0       0       0       0
  7716 ;;      Temps:          0       0       0       0
  7717 ;;      Totals:         0       0       0       0
  7718 ;;Total ram usage:        0 bytes
  7719 ;; Hardware stack levels used:    1
  7720 ;; Hardware stack levels required when called:    4
  7721 ;; This function calls:
  7722 ;;		_setLights_Initialization
  7723 ;; This function is called by:
  7724 ;;		_main
  7725 ;; This function uses a non-reentrant model
  7726 ;;
  7727                           
  7728                           
  7729                           ;psect for function _Lights_Initialization
  7730  0AAD                     _Lights_Initialization:	
  7731                           
  7732                           ;TriacRelay_B1.c: 34: setLights_Initialization(1);
  7733                           
  7734                           ;incstack = 0
  7735                           ; Regs used in _Lights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  7736  0AAD  3001               	movlw	1
  7737  0AAE  158A  22CC         	fcall	_setLights_Initialization
  7738  0AB0  0008               	return
  7739  0AB1                     __end_of_Lights_Initialization:	
  7740                           
  7741                           	psect	text46
  7742  0ACC                     __ptext46:	
  7743 ;; *************** function _setLights_Initialization *****************
  7744 ;; Defined at:
  7745 ;;		line 47 in file "../src/TriacRelay_B1.c"
  7746 ;; Parameters:    Size  Location     Type
  7747 ;;  lights          1    wreg     unsigned char 
  7748 ;; Auto vars:     Size  Location     Type
  7749 ;;  lights          1    0[BANK0 ] unsigned char 
  7750 ;; Return value:  Size  Location     Type
  7751 ;;		None               void
  7752 ;; Registers used:
  7753 ;;		wreg, status,2, status,0, pclath, cstack
  7754 ;; Tracked objects:
  7755 ;;		On entry : 0/0
  7756 ;;		On exit  : 0/0
  7757 ;;		Unchanged: 0/0
  7758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7759 ;;      Params:         0       0       0       0
  7760 ;;      Locals:         0       1       0       0
  7761 ;;      Temps:          0       0       0       0
  7762 ;;      Totals:         0       1       0       0
  7763 ;;Total ram usage:        1 bytes
  7764 ;; Hardware stack levels used:    1
  7765 ;; Hardware stack levels required when called:    3
  7766 ;; This function calls:
  7767 ;;		_LightsPointSelect
  7768 ;; This function is called by:
  7769 ;;		_Lights_Initialization
  7770 ;; This function uses a non-reentrant model
  7771 ;;
  7772                           
  7773                           
  7774                           ;psect for function _setLights_Initialization
  7775  0ACC                     _setLights_Initialization:	
  7776                           
  7777                           ;incstack = 0
  7778                           ; Regs used in _setLights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  7779                           ;setLights_Initialization@lights stored from wreg
  7780  0ACC  1283               	bcf	3,5	;RP0=0, select bank0
  7781  0ACD  1303               	bcf	3,6	;RP1=0, select bank0
  7782  0ACE  00CD               	movwf	setLights_Initialization@lights
  7783                           
  7784                           ;TriacRelay_B1.c: 48: LightsPointSelect(lights);
  7785  0ACF  084D               	movf	setLights_Initialization@lights,w
  7786  0AD0  158A  230C         	fcall	_LightsPointSelect
  7787  0AD2  0008               	return
  7788  0AD3                     __end_of_setLights_Initialization:	
  7789                           
  7790                           	psect	text47
  7791  0A97                     __ptext47:	
  7792 ;; *************** function _LED_Main *****************
  7793 ;; Defined at:
  7794 ;;		line 47 in file "../src/LED_B1.c"
  7795 ;; Parameters:    Size  Location     Type
  7796 ;;		None
  7797 ;; Auto vars:     Size  Location     Type
  7798 ;;		None
  7799 ;; Return value:  Size  Location     Type
  7800 ;;		None               void
  7801 ;; Registers used:
  7802 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7803 ;; Tracked objects:
  7804 ;;		On entry : 0/0
  7805 ;;		On exit  : 0/0
  7806 ;;		Unchanged: 0/0
  7807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7808 ;;      Params:         0       0       0       0
  7809 ;;      Locals:         0       0       0       0
  7810 ;;      Temps:          0       0       0       0
  7811 ;;      Totals:         0       0       0       0
  7812 ;;Total ram usage:        0 bytes
  7813 ;; Hardware stack levels used:    1
  7814 ;; Hardware stack levels required when called:    5
  7815 ;; This function calls:
  7816 ;;		_setPIRLED_Main
  7817 ;; This function is called by:
  7818 ;;		_main
  7819 ;; This function uses a non-reentrant model
  7820 ;;
  7821                           
  7822                           
  7823                           ;psect for function _LED_Main
  7824  0A97                     _LED_Main:	
  7825                           
  7826                           ;LED_B1.c: 55: setPIRLED_Main();
  7827                           
  7828                           ;incstack = 0
  7829                           ; Regs used in _LED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7830  0A97  118A  2784         	fcall	_setPIRLED_Main
  7831  0A99  0008               	return
  7832  0A9A                     __end_of_LED_Main:	
  7833                           
  7834                           	psect	text48
  7835  0784                     __ptext48:	
  7836 ;; *************** function _setPIRLED_Main *****************
  7837 ;; Defined at:
  7838 ;;		line 265 in file "../src/LED_B1.c"
  7839 ;; Parameters:    Size  Location     Type
  7840 ;;		None
  7841 ;; Auto vars:     Size  Location     Type
  7842 ;;  count           1    3[BANK0 ] unsigned char 
  7843 ;; Return value:  Size  Location     Type
  7844 ;;		None               void
  7845 ;; Registers used:
  7846 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7847 ;; Tracked objects:
  7848 ;;		On entry : 0/0
  7849 ;;		On exit  : 0/0
  7850 ;;		Unchanged: 0/0
  7851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7852 ;;      Params:         0       0       0       0
  7853 ;;      Locals:         0       1       0       0
  7854 ;;      Temps:          0       1       0       0
  7855 ;;      Totals:         0       2       0       0
  7856 ;;Total ram usage:        2 bytes
  7857 ;; Hardware stack levels used:    1
  7858 ;; Hardware stack levels required when called:    4
  7859 ;; This function calls:
  7860 ;;		_setLED
  7861 ;; This function is called by:
  7862 ;;		_LED_Main
  7863 ;; This function uses a non-reentrant model
  7864 ;;
  7865                           
  7866                           
  7867                           ;psect for function _setPIRLED_Main
  7868  0784                     _setPIRLED_Main:	
  7869                           
  7870                           ;LED_B1.c: 267: char count;
  7871                           ;LED_B1.c: 268: if (PIRLED.GO == 1) {
  7872                           
  7873                           ;incstack = 0
  7874                           ; Regs used in _setPIRLED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7875  0784  1283               	bcf	3,5	;RP0=0, select bank0
  7876  0785  1303               	bcf	3,6	;RP1=0, select bank0
  7877  0786  1C2A               	btfss	_PIRLED,0
  7878  0787  0008               	return
  7879                           
  7880                           ;LED_B1.c: 269: PIRLED.Time++;
  7881  0788  3001               	movlw	1
  7882  0789  07AC               	addwf	_PIRLED+2,f
  7883  078A  1803               	skipnc
  7884  078B  0AAD               	incf	_PIRLED+3,f
  7885  078C  3000               	movlw	0
  7886  078D  07AD               	addwf	_PIRLED+3,f
  7887                           
  7888                           ;LED_B1.c: 270: if (PIRLED.Time >= 500 / 20) {
  7889  078E  3000               	movlw	0
  7890  078F  022D               	subwf	_PIRLED+3,w
  7891  0790  3019               	movlw	25
  7892  0791  1903               	skipnz
  7893  0792  022C               	subwf	_PIRLED+2,w
  7894  0793  1C03               	skipc
  7895  0794  0008               	return
  7896                           
  7897                           ;LED_B1.c: 271: PIRLED.Time = 0;
  7898  0795  01AC               	clrf	_PIRLED+2
  7899  0796  01AD               	clrf	_PIRLED+3
  7900                           
  7901                           ;LED_B1.c: 272: setLED(1, 0);
  7902  0797  01CD               	clrf	setLED@command
  7903  0798  3001               	movlw	1
  7904  0799  158A  2735  118A   	fcall	_setLED
  7905                           
  7906                           ;LED_B1.c: 273: setLED(2, 0);
  7907  079C  1283               	bcf	3,5	;RP0=0, select bank0
  7908  079D  1303               	bcf	3,6	;RP1=0, select bank0
  7909  079E  01CD               	clrf	setLED@command
  7910  079F  3002               	movlw	2
  7911  07A0  158A  2735  118A   	fcall	_setLED
  7912                           
  7913                           ;LED_B1.c: 274: if (PIRLED.GO1 == 1) {
  7914  07A3  1283               	bcf	3,5	;RP0=0, select bank0
  7915  07A4  1303               	bcf	3,6	;RP1=0, select bank0
  7916  07A5  1CAA               	btfss	_PIRLED,1
  7917  07A6  2FAB               	goto	l4641
  7918                           
  7919                           ;LED_B1.c: 275: count = 4;
  7920  07A7  3004               	movlw	4
  7921  07A8  00CF               	movwf	??_setPIRLED_Main
  7922  07A9  084F               	movf	??_setPIRLED_Main,w
  7923  07AA  00D0               	movwf	setPIRLED_Main@count
  7924  07AB                     l4641:	
  7925                           
  7926                           ;LED_B1.c: 276: }
  7927                           ;LED_B1.c: 277: if (PIRLED.GO2 == 1) {
  7928  07AB  1D2A               	btfss	_PIRLED,2
  7929  07AC  2FB1               	goto	l4645
  7930                           
  7931                           ;LED_B1.c: 278: count = 6;
  7932  07AD  3006               	movlw	6
  7933  07AE  00CF               	movwf	??_setPIRLED_Main
  7934  07AF  084F               	movf	??_setPIRLED_Main,w
  7935  07B0  00D0               	movwf	setPIRLED_Main@count
  7936  07B1                     l4645:	
  7937                           
  7938                           ;LED_B1.c: 279: }
  7939                           ;LED_B1.c: 280: if (PIRLED.GO3 == 1) {
  7940  07B1  1DAA               	btfss	_PIRLED,3
  7941  07B2  2FB7               	goto	l4649
  7942                           
  7943                           ;LED_B1.c: 281: count = 8;
  7944  07B3  3008               	movlw	8
  7945  07B4  00CF               	movwf	??_setPIRLED_Main
  7946  07B5  084F               	movf	??_setPIRLED_Main,w
  7947  07B6  00D0               	movwf	setPIRLED_Main@count
  7948  07B7                     l4649:	
  7949                           
  7950                           ;LED_B1.c: 282: }
  7951                           ;LED_B1.c: 283: PIRLED.Count++;
  7952  07B7  3001               	movlw	1
  7953  07B8  00CF               	movwf	??_setPIRLED_Main
  7954  07B9  084F               	movf	??_setPIRLED_Main,w
  7955  07BA  07AB               	addwf	_PIRLED+1,f
  7956                           
  7957                           ;LED_B1.c: 284: if (PIRLED.Count == 1 || PIRLED.Count == 2) {
  7958  07BB  082B               	movf	_PIRLED+1,w
  7959  07BC  3A01               	xorlw	1
  7960  07BD  1903               	skipnz
  7961  07BE  2FC3               	goto	l4655
  7962  07BF  082B               	movf	_PIRLED+1,w
  7963  07C0  3A02               	xorlw	2
  7964  07C1  1D03               	skipz
  7965  07C2  2FD7               	goto	l4659
  7966  07C3                     l4655:	
  7967                           
  7968                           ;LED_B1.c: 285: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  7969  07C3  1003               	clrc
  7970  07C4  1E2A               	btfss	_PIRLED,4
  7971  07C5  1403               	setc
  7972  07C6  1C03               	btfss	3,0
  7973  07C7  2FCC               	goto	u5420
  7974  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  7975  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  7976  07CA  162A               	bsf	_PIRLED,4
  7977  07CB  2FCF               	goto	l4657
  7978  07CC                     u5420:	
  7979  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  7980  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  7981  07CE  122A               	bcf	_PIRLED,4
  7982  07CF                     l4657:	
  7983                           
  7984                           ;LED_B1.c: 286: setLED(2, PIRLED.status);
  7985  07CF  3000               	movlw	0
  7986  07D0  1A2A               	btfsc	_PIRLED,4
  7987  07D1  3001               	movlw	1
  7988  07D2  00CD               	movwf	setLED@command
  7989  07D3  3002               	movlw	2
  7990  07D4  158A  2735         	fcall	_setLED
  7991                           
  7992                           ;LED_B1.c: 287: } else {
  7993  07D6  0008               	return
  7994  07D7                     l4659:	
  7995                           
  7996                           ;LED_B1.c: 288: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  7997  07D7  1003               	clrc
  7998  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  7999  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  8000  07DA  1E2A               	btfss	_PIRLED,4
  8001  07DB  1403               	setc
  8002  07DC  1C03               	btfss	3,0
  8003  07DD  2FE2               	goto	u5440
  8004  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  8005  07DF  1303               	bcf	3,6	;RP1=0, select bank0
  8006  07E0  162A               	bsf	_PIRLED,4
  8007  07E1  2FE5               	goto	l4661
  8008  07E2                     u5440:	
  8009  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  8010  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  8011  07E4  122A               	bcf	_PIRLED,4
  8012  07E5                     l4661:	
  8013                           
  8014                           ;LED_B1.c: 289: setLED(1, PIRLED.status);
  8015  07E5  3000               	movlw	0
  8016  07E6  1A2A               	btfsc	_PIRLED,4
  8017  07E7  3001               	movlw	1
  8018  07E8  00CD               	movwf	setLED@command
  8019  07E9  3001               	movlw	1
  8020  07EA  158A  2735  118A   	fcall	_setLED
  8021                           
  8022                           ;LED_B1.c: 290: if (PIRLED.Count == count) {
  8023  07ED  1283               	bcf	3,5	;RP0=0, select bank0
  8024  07EE  1303               	bcf	3,6	;RP1=0, select bank0
  8025  07EF  082B               	movf	_PIRLED+1,w
  8026  07F0  0650               	xorwf	setPIRLED_Main@count,w
  8027  07F1  1D03               	skipz
  8028  07F2  0008               	return
  8029                           
  8030                           ;LED_B1.c: 291: PIRLED.Count = 0;
  8031  07F3  01AB               	clrf	_PIRLED+1
  8032  07F4  0008               	return
  8033  07F5                     __end_of_setPIRLED_Main:	
  8034                           
  8035                           	psect	text49
  8036  0ADA                     __ptext49:	
  8037 ;; *************** function _LED_Initialization *****************
  8038 ;; Defined at:
  8039 ;;		line 31 in file "../src/LED_B1.c"
  8040 ;; Parameters:    Size  Location     Type
  8041 ;;		None
  8042 ;; Auto vars:     Size  Location     Type
  8043 ;;		None
  8044 ;; Return value:  Size  Location     Type
  8045 ;;		None               void
  8046 ;; Registers used:
  8047 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8048 ;; Tracked objects:
  8049 ;;		On entry : 0/0
  8050 ;;		On exit  : 0/0
  8051 ;;		Unchanged: 0/0
  8052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8053 ;;      Params:         0       0       0       0
  8054 ;;      Locals:         0       0       0       0
  8055 ;;      Temps:          0       0       0       0
  8056 ;;      Totals:         0       0       0       0
  8057 ;;Total ram usage:        0 bytes
  8058 ;; Hardware stack levels used:    1
  8059 ;; Hardware stack levels required when called:    5
  8060 ;; This function calls:
  8061 ;;		_setLED_Initialization
  8062 ;; This function is called by:
  8063 ;;		_main
  8064 ;; This function uses a non-reentrant model
  8065 ;;
  8066                           
  8067                           
  8068                           ;psect for function _LED_Initialization
  8069  0ADA                     _LED_Initialization:	
  8070                           
  8071                           ;LED_B1.c: 33: setLED_Initialization(1);
  8072                           
  8073                           ;incstack = 0
  8074                           ; Regs used in _LED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8075  0ADA  3001               	movlw	1
  8076  0ADB  158A  239B  158A   	fcall	_setLED_Initialization
  8077                           
  8078                           ;LED_B1.c: 36: setLED_Initialization(2);
  8079  0ADE  3002               	movlw	2
  8080  0ADF  158A  239B         	fcall	_setLED_Initialization
  8081  0AE1  0008               	return
  8082  0AE2                     __end_of_LED_Initialization:	
  8083                           
  8084                           	psect	text50
  8085  0B9B                     __ptext50:	
  8086 ;; *************** function _setLED_Initialization *****************
  8087 ;; Defined at:
  8088 ;;		line 74 in file "../src/LED_B1.c"
  8089 ;; Parameters:    Size  Location     Type
  8090 ;;  led             1    wreg     unsigned char 
  8091 ;; Auto vars:     Size  Location     Type
  8092 ;;  led             1    2[BANK0 ] unsigned char 
  8093 ;; Return value:  Size  Location     Type
  8094 ;;		None               void
  8095 ;; Registers used:
  8096 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8097 ;; Tracked objects:
  8098 ;;		On entry : 0/0
  8099 ;;		On exit  : 0/0
  8100 ;;		Unchanged: 0/0
  8101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8102 ;;      Params:         0       0       0       0
  8103 ;;      Locals:         0       1       0       0
  8104 ;;      Temps:          0       0       0       0
  8105 ;;      Totals:         0       1       0       0
  8106 ;;Total ram usage:        1 bytes
  8107 ;; Hardware stack levels used:    1
  8108 ;; Hardware stack levels required when called:    4
  8109 ;; This function calls:
  8110 ;;		_LedPointSelect
  8111 ;;		_setLED
  8112 ;; This function is called by:
  8113 ;;		_LED_Initialization
  8114 ;; This function uses a non-reentrant model
  8115 ;;
  8116                           
  8117                           
  8118                           ;psect for function _setLED_Initialization
  8119  0B9B                     _setLED_Initialization:	
  8120                           
  8121                           ;incstack = 0
  8122                           ; Regs used in _setLED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8123                           ;setLED_Initialization@led stored from wreg
  8124  0B9B  1283               	bcf	3,5	;RP0=0, select bank0
  8125  0B9C  1303               	bcf	3,6	;RP1=0, select bank0
  8126  0B9D  00CF               	movwf	setLED_Initialization@led
  8127                           
  8128                           ;LED_B1.c: 75: LedPointSelect(led);
  8129  0B9E  084F               	movf	setLED_Initialization@led,w
  8130  0B9F  158A  2389  158A   	fcall	_LedPointSelect
  8131                           
  8132                           ;LED_B1.c: 76: LED->Enable = 1;
  8133  0BA2  0876               	movf	_LED,w
  8134  0BA3  0084               	movwf	4
  8135  0BA4  1383               	bcf	3,7	;select IRP bank0
  8136  0BA5  1400               	bsf	0,0
  8137                           
  8138                           ;LED_B1.c: 77: setLED(led, 0);
  8139  0BA6  1283               	bcf	3,5	;RP0=0, select bank0
  8140  0BA7  1303               	bcf	3,6	;RP1=0, select bank0
  8141  0BA8  01CD               	clrf	setLED@command
  8142  0BA9  084F               	movf	setLED_Initialization@led,w
  8143  0BAA  158A  2735         	fcall	_setLED
  8144  0BAC  0008               	return
  8145  0BAD                     __end_of_setLED_Initialization:	
  8146                           
  8147                           	psect	text51
  8148  0545                     __ptext51:	
  8149 ;; *************** function _Exception_Main *****************
  8150 ;; Defined at:
  8151 ;;		line 499 in file "../src/Main_B1.c"
  8152 ;; Parameters:    Size  Location     Type
  8153 ;;		None
  8154 ;; Auto vars:     Size  Location     Type
  8155 ;;  i               2   12[BANK0 ] int 
  8156 ;;  i               2   10[BANK0 ] int 
  8157 ;;  error           1   14[BANK0 ] unsigned char 
  8158 ;;  status          1    9[BANK0 ] unsigned char 
  8159 ;;  count           1    8[BANK0 ] unsigned char 
  8160 ;;  lights          1    7[BANK0 ] unsigned char 
  8161 ;; Return value:  Size  Location     Type
  8162 ;;		None               void
  8163 ;; Registers used:
  8164 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8165 ;; Tracked objects:
  8166 ;;		On entry : 0/0
  8167 ;;		On exit  : 0/0
  8168 ;;		Unchanged: 0/0
  8169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8170 ;;      Params:         0       0       0       0
  8171 ;;      Locals:         0       8       0       0
  8172 ;;      Temps:          0       1       0       0
  8173 ;;      Totals:         0       9       0       0
  8174 ;;Total ram usage:        9 bytes
  8175 ;; Hardware stack levels used:    1
  8176 ;; Hardware stack levels required when called:    5
  8177 ;; This function calls:
  8178 ;;		_getAll_Lights_Line
  8179 ;;		_getLights_Status
  8180 ;;		_getMain_All_Error_Status
  8181 ;;		_getMain_All_LightsStatus
  8182 ;;		_setLED
  8183 ;;		_setLights_SwOff
  8184 ;;		_setLights_SwOn
  8185 ;; This function is called by:
  8186 ;;		_main
  8187 ;; This function uses a non-reentrant model
  8188 ;;
  8189                           
  8190                           
  8191                           ;psect for function _Exception_Main
  8192  0545                     _Exception_Main:	
  8193                           
  8194                           ;Main_B1.c: 500: char error = getMain_All_Error_Status(0);
  8195                           
  8196                           ;incstack = 0
  8197                           ; Regs used in _Exception_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8198  0545  3000               	movlw	0
  8199  0546  158A  25BA  118A   	fcall	_getMain_All_Error_Status
  8200  0549  1283               	bcf	3,5	;RP0=0, select bank0
  8201  054A  1303               	bcf	3,6	;RP1=0, select bank0
  8202  054B  00D3               	movwf	??_Exception_Main
  8203  054C  0853               	movf	??_Exception_Main,w
  8204  054D  00DB               	movwf	Exception_Main@error
  8205                           
  8206                           ;Main_B1.c: 501: char lights = 0, count = 1;
  8207  054E  01D4               	clrf	Exception_Main@lights
  8208  054F  01D5               	clrf	Exception_Main@count
  8209  0550  0AD5               	incf	Exception_Main@count,f
  8210                           
  8211                           ;Main_B1.c: 502: char status = 0;
  8212  0551  01D6               	clrf	Exception_Main@status
  8213                           
  8214                           ;Main_B1.c: 504: if (myMain.Error_Run == 1) {
  8215  0552  1DA7               	btfss	_myMain+2,3
  8216  0553  2D60               	goto	l5275
  8217                           
  8218                           ;Main_B1.c: 505: if (error == 0) {
  8219  0554  08DB               	movf	Exception_Main@error,f
  8220  0555  1D03               	skipz
  8221  0556  0008               	return
  8222                           
  8223                           ;Main_B1.c: 506: myMain.Error_Run = 0;
  8224  0557  11A7               	bcf	_myMain+2,3
  8225                           
  8226                           ;Main_B1.c: 511: setLED(error, 110);
  8227  0558  306E               	movlw	110
  8228  0559  00D3               	movwf	??_Exception_Main
  8229  055A  0853               	movf	??_Exception_Main,w
  8230  055B  00CD               	movwf	setLED@command
  8231  055C  085B               	movf	Exception_Main@error,w
  8232  055D  158A  2735         	fcall	_setLED
  8233                           
  8234                           ;Main_B1.c: 522: }
  8235                           ;Main_B1.c: 523: } else {
  8236  055F  0008               	return
  8237  0560                     l5275:	
  8238                           
  8239                           ;Main_B1.c: 524: if (error != 0) {
  8240  0560  1283               	bcf	3,5	;RP0=0, select bank0
  8241  0561  1303               	bcf	3,6	;RP1=0, select bank0
  8242  0562  085B               	movf	Exception_Main@error,w
  8243  0563  1903               	btfsc	3,2
  8244  0564  0008               	return
  8245                           
  8246                           ;Main_B1.c: 525: myMain.Error_Run = 1;
  8247  0565  15A7               	bsf	_myMain+2,3
  8248                           
  8249                           ;Main_B1.c: 529: setLED(error, 111);
  8250  0566  306F               	movlw	111
  8251  0567  00D3               	movwf	??_Exception_Main
  8252  0568  0853               	movf	??_Exception_Main,w
  8253  0569  00CD               	movwf	setLED@command
  8254  056A  085B               	movf	Exception_Main@error,w
  8255  056B  158A  2735  118A   	fcall	_setLED
  8256                           
  8257                           ;Main_B1.c: 591: switch (error) {
  8258  056E  2DF8               	goto	l5311
  8259  056F                     l5281:	
  8260                           ;Main_B1.c: 592: case 1:
  8261                           
  8262                           
  8263                           ;Main_B1.c: 593: for (int i = 0; i < count; i++) {
  8264  056F  1283               	bcf	3,5	;RP0=0, select bank0
  8265  0570  1303               	bcf	3,6	;RP1=0, select bank0
  8266  0571  01D7               	clrf	Exception_Main@i
  8267  0572  01D8               	clrf	Exception_Main@i+1
  8268  0573                     l5289:	
  8269  0573  0858               	movf	Exception_Main@i+1,w
  8270  0574  3A80               	xorlw	128
  8271  0575  00D3               	movwf	??_Exception_Main
  8272  0576  3080               	movlw	128
  8273  0577  0253               	subwf	??_Exception_Main,w
  8274  0578  1D03               	skipz
  8275  0579  2D7C               	goto	u6835
  8276  057A  0855               	movf	Exception_Main@count,w
  8277  057B  0257               	subwf	Exception_Main@i,w
  8278  057C                     u6835:	
  8279  057C  1803               	btfsc	3,0
  8280  057D  2D9F               	goto	u6830
  8281                           
  8282                           ;Main_B1.c: 594: if (getLights_Status(i + 1) == 1) {
  8283  057E  1283               	bcf	3,5	;RP0=0, select bank0
  8284  057F  1303               	bcf	3,6	;RP1=0, select bank0
  8285  0580  0857               	movf	Exception_Main@i,w
  8286  0581  3E01               	addlw	1
  8287  0582  158A  2367  118A   	fcall	_getLights_Status
  8288  0585  3A01               	xorlw	1
  8289  0586  1D03               	skipz
  8290  0587  2D96               	goto	l5287
  8291                           
  8292                           ;Main_B1.c: 596: setLights_SwOn(i + 1);
  8293  0588  1283               	bcf	3,5	;RP0=0, select bank0
  8294  0589  1303               	bcf	3,6	;RP1=0, select bank0
  8295  058A  0857               	movf	Exception_Main@i,w
  8296  058B  3E01               	addlw	1
  8297  058C  158A  24E1  118A   	fcall	_setLights_SwOn
  8298                           
  8299                           ;Main_B1.c: 597: setLights_SwOff(i + 1);
  8300  058F  1283               	bcf	3,5	;RP0=0, select bank0
  8301  0590  1303               	bcf	3,6	;RP1=0, select bank0
  8302  0591  0857               	movf	Exception_Main@i,w
  8303  0592  3E01               	addlw	1
  8304  0593  158A  241C  118A   	fcall	_setLights_SwOff
  8305  0596                     l5287:	
  8306  0596  3001               	movlw	1
  8307  0597  1283               	bcf	3,5	;RP0=0, select bank0
  8308  0598  1303               	bcf	3,6	;RP1=0, select bank0
  8309  0599  07D7               	addwf	Exception_Main@i,f
  8310  059A  1803               	skipnc
  8311  059B  0AD8               	incf	Exception_Main@i+1,f
  8312  059C  3000               	movlw	0
  8313  059D  07D8               	addwf	Exception_Main@i+1,f
  8314  059E  2D73               	goto	l5289
  8315  059F                     u6830:	
  8316  059F  1283               	bcf	3,5	;RP0=0, select bank0
  8317  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  8318  05A1  0008               	return
  8319  05A2                     l5291:	
  8320                           ;Main_B1.c: 601: case 2:
  8321                           
  8322                           ;Main_B1.c: 598: }
  8323                           ;Main_B1.c: 599: }
  8324                           ;Main_B1.c: 600: break;
  8325                           
  8326                           
  8327                           ;Main_B1.c: 602: if (getMain_All_LightsStatus() == 1) {
  8328  05A2  158A  2303  118A   	fcall	_getMain_All_LightsStatus
  8329                           
  8330                           ;Main_B1.c: 604: }
  8331                           ;Main_B1.c: 606: for (int i = 0; i < count; i++) {
  8332                           
  8333                           ;Main_B1.c: 603: ;;
  8334  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  8335  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  8336  05A7  01D9               	clrf	Exception_Main@i_2140
  8337  05A8  01DA               	clrf	Exception_Main@i_2140+1
  8338  05A9                     l5301:	
  8339  05A9  085A               	movf	Exception_Main@i_2140+1,w
  8340  05AA  3A80               	xorlw	128
  8341  05AB  00D3               	movwf	??_Exception_Main
  8342  05AC  3080               	movlw	128
  8343  05AD  0253               	subwf	??_Exception_Main,w
  8344  05AE  1D03               	skipz
  8345  05AF  2DB2               	goto	u6855
  8346  05B0  0855               	movf	Exception_Main@count,w
  8347  05B1  0259               	subwf	Exception_Main@i_2140,w
  8348  05B2                     u6855:	
  8349  05B2  1803               	btfsc	3,0
  8350  05B3  2DD5               	goto	u6850
  8351                           
  8352                           ;Main_B1.c: 607: if (getLights_Status(i + 1) == 1) {
  8353  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  8354  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  8355  05B6  0859               	movf	Exception_Main@i_2140,w
  8356  05B7  3E01               	addlw	1
  8357  05B8  158A  2367  118A   	fcall	_getLights_Status
  8358  05BB  3A01               	xorlw	1
  8359  05BC  1D03               	skipz
  8360  05BD  2DCC               	goto	l5299
  8361                           
  8362                           ;Main_B1.c: 608: setLights_SwOn(i + 1);
  8363  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  8364  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  8365  05C0  0859               	movf	Exception_Main@i_2140,w
  8366  05C1  3E01               	addlw	1
  8367  05C2  158A  24E1  118A   	fcall	_setLights_SwOn
  8368                           
  8369                           ;Main_B1.c: 609: setLights_SwOff(i + 1);
  8370  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  8371  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  8372  05C7  0859               	movf	Exception_Main@i_2140,w
  8373  05C8  3E01               	addlw	1
  8374  05C9  158A  241C  118A   	fcall	_setLights_SwOff
  8375  05CC                     l5299:	
  8376  05CC  3001               	movlw	1
  8377  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  8378  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  8379  05CF  07D9               	addwf	Exception_Main@i_2140,f
  8380  05D0  1803               	skipnc
  8381  05D1  0ADA               	incf	Exception_Main@i_2140+1,f
  8382  05D2  3000               	movlw	0
  8383  05D3  07DA               	addwf	Exception_Main@i_2140+1,f
  8384  05D4  2DA9               	goto	l5301
  8385  05D5                     u6850:	
  8386  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  8387  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  8388  05D7  0008               	return
  8389  05D8                     l5303:	
  8390                           ;Main_B1.c: 613: case 3:
  8391                           
  8392                           ;Main_B1.c: 610: }
  8393                           ;Main_B1.c: 611: }
  8394                           ;Main_B1.c: 612: break;
  8395                           
  8396                           
  8397                           ;Main_B1.c: 614: status = getAll_Lights_Line();
  8398  05D8  158A  22FA  118A   	fcall	_getAll_Lights_Line
  8399  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  8400  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  8401  05DD  00D3               	movwf	??_Exception_Main
  8402  05DE  0853               	movf	??_Exception_Main,w
  8403  05DF  00D6               	movwf	Exception_Main@status
  8404                           
  8405                           ;Main_B1.c: 616: if (getLights_Status(status) == 1) {
  8406  05E0  0856               	movf	Exception_Main@status,w
  8407  05E1  158A  2367  118A   	fcall	_getLights_Status
  8408  05E4  3A01               	xorlw	1
  8409  05E5  1903               	btfsc	3,2
  8410  05E6  2DEA               	goto	l5307
  8411  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  8412  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  8413  05E9  0008               	return
  8414  05EA                     l5307:	
  8415                           
  8416                           ;Main_B1.c: 617: setLights_SwOn(status);
  8417  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  8418  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  8419  05EC  0856               	movf	Exception_Main@status,w
  8420  05ED  158A  24E1  118A   	fcall	_setLights_SwOn
  8421                           
  8422                           ;Main_B1.c: 618: setLights_SwOff(status);
  8423  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  8424  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  8425  05F2  0856               	movf	Exception_Main@status,w
  8426  05F3  158A  241C         	fcall	_setLights_SwOff
  8427  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  8428  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  8429  05F7  0008               	return
  8430  05F8                     l5311:	
  8431                           ;Main_B1.c: 623: }
  8432                           
  8433                           ;Main_B1.c: 620: }
  8434                           ;Main_B1.c: 621: ;;
  8435                           ;Main_B1.c: 622: break;
  8436                           
  8437  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  8438  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  8439  05FA  085B               	movf	Exception_Main@error,w
  8440                           
  8441                           ; Switch size 1, requested type "space"
  8442                           ; Number of cases is 3, Range of values is 1 to 3
  8443                           ; switch strategies available:
  8444                           ; Name         Instructions Cycles
  8445                           ; simple_byte           10     6 (average)
  8446                           ; direct_byte           16    10 (fixed)
  8447                           ; jumptable            263     9 (fixed)
  8448                           ;	Chosen strategy is simple_byte
  8449  05FB  3A01               	xorlw	1	; case 1
  8450  05FC  1903               	skipnz
  8451  05FD  2D6F               	goto	l5281
  8452  05FE  3A03               	xorlw	3	; case 2
  8453  05FF  1903               	skipnz
  8454  0600  2DA2               	goto	l5291
  8455  0601  3A01               	xorlw	1	; case 3
  8456  0602  1903               	skipnz
  8457  0603  2DD8               	goto	l5303
  8458  0604  2E06               	goto	l621
  8459  0605  0008               	return
  8460  0606                     l621:	
  8461  0606  0008               	return
  8462  0607                     __end_of_Exception_Main:	
  8463                           
  8464                           	psect	text52
  8465  0CE1                     __ptext52:	
  8466 ;; *************** function _setLights_SwOn *****************
  8467 ;; Defined at:
  8468 ;;		line 410 in file "../src/TriacRelay_B1.c"
  8469 ;; Parameters:    Size  Location     Type
  8470 ;;  sw              1    wreg     unsigned char 
  8471 ;; Auto vars:     Size  Location     Type
  8472 ;;  sw              1    3[BANK0 ] unsigned char 
  8473 ;; Return value:  Size  Location     Type
  8474 ;;		None               void
  8475 ;; Registers used:
  8476 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8477 ;; Tracked objects:
  8478 ;;		On entry : 0/0
  8479 ;;		On exit  : 0/0
  8480 ;;		Unchanged: 0/0
  8481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8482 ;;      Params:         0       0       0       0
  8483 ;;      Locals:         0       1       0       0
  8484 ;;      Temps:          0       0       0       0
  8485 ;;      Totals:         0       1       0       0
  8486 ;;Total ram usage:        1 bytes
  8487 ;; Hardware stack levels used:    1
  8488 ;; Hardware stack levels required when called:    4
  8489 ;; This function calls:
  8490 ;;		_LightsPointSelect
  8491 ;;		_getLights_Status
  8492 ;;		_setLights_Trigger
  8493 ;; This function is called by:
  8494 ;;		_Exception_Main
  8495 ;;		_PIR_Main
  8496 ;; This function uses a non-reentrant model
  8497 ;;
  8498                           
  8499                           
  8500                           ;psect for function _setLights_SwOn
  8501  0CE1                     _setLights_SwOn:	
  8502                           
  8503                           ;incstack = 0
  8504                           ; Regs used in _setLights_SwOn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8505                           ;setLights_SwOn@sw stored from wreg
  8506  0CE1  1283               	bcf	3,5	;RP0=0, select bank0
  8507  0CE2  1303               	bcf	3,6	;RP1=0, select bank0
  8508  0CE3  00D0               	movwf	setLights_SwOn@sw
  8509                           
  8510                           ;TriacRelay_B1.c: 411: LightsPointSelect(sw);
  8511  0CE4  0850               	movf	setLights_SwOn@sw,w
  8512  0CE5  158A  230C  158A   	fcall	_LightsPointSelect
  8513                           
  8514                           ;TriacRelay_B1.c: 414: Lights->SwFlag = 1;
  8515  0CE8  0A78               	incf	_Lights,w
  8516  0CE9  0084               	movwf	4
  8517  0CEA  1383               	bcf	3,7	;select IRP bank0
  8518  0CEB  1500               	bsf	0,2
  8519                           
  8520                           ;TriacRelay_B1.c: 415: if (getLights_Status(sw) == 0) {
  8521  0CEC  1283               	bcf	3,5	;RP0=0, select bank0
  8522  0CED  1303               	bcf	3,6	;RP1=0, select bank0
  8523  0CEE  0850               	movf	setLights_SwOn@sw,w
  8524  0CEF  158A  2367  158A   	fcall	_getLights_Status
  8525  0CF2  3800               	iorlw	0
  8526  0CF3  1D03               	skipz
  8527  0CF4  2D01               	goto	l4677
  8528                           
  8529                           ;TriacRelay_B1.c: 416: Lights->SwStatus = 1;
  8530  0CF5  0A78               	incf	_Lights,w
  8531  0CF6  0084               	movwf	4
  8532  0CF7  1383               	bcf	3,7	;select IRP bank0
  8533  0CF8  1580               	bsf	0,3
  8534                           
  8535                           ;TriacRelay_B1.c: 417: setLights_Trigger(sw, 1);
  8536  0CF9  1283               	bcf	3,5	;RP0=0, select bank0
  8537  0CFA  1303               	bcf	3,6	;RP1=0, select bank0
  8538  0CFB  01CD               	clrf	setLights_Trigger@command
  8539  0CFC  0ACD               	incf	setLights_Trigger@command,f
  8540  0CFD  0850               	movf	setLights_SwOn@sw,w
  8541  0CFE  158A  246A         	fcall	_setLights_Trigger
  8542                           
  8543                           ;TriacRelay_B1.c: 418: } else {
  8544  0D00  0008               	return
  8545  0D01                     l4677:	
  8546                           
  8547                           ;TriacRelay_B1.c: 419: Lights->SwStatus = 0;
  8548  0D01  0A78               	incf	_Lights,w
  8549  0D02  0084               	movwf	4
  8550  0D03  1383               	bcf	3,7	;select IRP bank0
  8551  0D04  1180               	bcf	0,3
  8552  0D05  0008               	return
  8553  0D06                     __end_of_setLights_SwOn:	
  8554                           
  8555                           	psect	text53
  8556  0B67                     __ptext53:	
  8557 ;; *************** function _getLights_Status *****************
  8558 ;; Defined at:
  8559 ;;		line 271 in file "../src/TriacRelay_B1.c"
  8560 ;; Parameters:    Size  Location     Type
  8561 ;;  lights          1    wreg     unsigned char 
  8562 ;; Auto vars:     Size  Location     Type
  8563 ;;  lights          1    0[BANK0 ] unsigned char 
  8564 ;;  status          1    1[BANK0 ] unsigned char 
  8565 ;; Return value:  Size  Location     Type
  8566 ;;                  1    wreg      unsigned char 
  8567 ;; Registers used:
  8568 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8569 ;; Tracked objects:
  8570 ;;		On entry : 0/0
  8571 ;;		On exit  : 0/0
  8572 ;;		Unchanged: 0/0
  8573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8574 ;;      Params:         0       0       0       0
  8575 ;;      Locals:         0       2       0       0
  8576 ;;      Temps:          0       0       0       0
  8577 ;;      Totals:         0       2       0       0
  8578 ;;Total ram usage:        2 bytes
  8579 ;; Hardware stack levels used:    1
  8580 ;; Hardware stack levels required when called:    3
  8581 ;; This function calls:
  8582 ;;		_LightsPointSelect
  8583 ;; This function is called by:
  8584 ;;		_Exception_Main
  8585 ;;		_PIR_Main
  8586 ;;		_setLights_SwOn
  8587 ;;		_setLights_ErrorClose
  8588 ;; This function uses a non-reentrant model
  8589 ;;
  8590                           
  8591                           
  8592                           ;psect for function _getLights_Status
  8593  0B67                     _getLights_Status:	
  8594                           
  8595                           ;incstack = 0
  8596                           ; Regs used in _getLights_Status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8597                           ;getLights_Status@lights stored from wreg
  8598  0B67  1283               	bcf	3,5	;RP0=0, select bank0
  8599  0B68  1303               	bcf	3,6	;RP1=0, select bank0
  8600  0B69  00CD               	movwf	getLights_Status@lights
  8601                           
  8602                           ;TriacRelay_B1.c: 272: LightsPointSelect(lights);
  8603  0B6A  084D               	movf	getLights_Status@lights,w
  8604  0B6B  158A  230C         	fcall	_LightsPointSelect
  8605                           
  8606                           ;TriacRelay_B1.c: 273: char status = Lights->Status == 1 ? 1 : 0;
  8607  0B6D  0878               	movf	_Lights,w
  8608  0B6E  0084               	movwf	4
  8609  0B6F  3000               	movlw	0
  8610  0B70  1383               	bcf	3,7	;select IRP bank0
  8611  0B71  1900               	btfsc	0,2
  8612  0B72  3001               	movlw	1
  8613  0B73  1283               	bcf	3,5	;RP0=0, select bank0
  8614  0B74  1303               	bcf	3,6	;RP1=0, select bank0
  8615  0B75  00CE               	movwf	getLights_Status@status
  8616                           
  8617                           ;TriacRelay_B1.c: 274: return status;
  8618  0B76  084E               	movf	getLights_Status@status,w
  8619  0B77  0008               	return
  8620  0B78                     __end_of_getLights_Status:	
  8621                           
  8622                           	psect	text54
  8623  0C1C                     __ptext54:	
  8624 ;; *************** function _setLights_SwOff *****************
  8625 ;; Defined at:
  8626 ;;		line 438 in file "../src/TriacRelay_B1.c"
  8627 ;; Parameters:    Size  Location     Type
  8628 ;;  sw              1    wreg     unsigned char 
  8629 ;; Auto vars:     Size  Location     Type
  8630 ;;  sw              1    3[BANK0 ] unsigned char 
  8631 ;; Return value:  Size  Location     Type
  8632 ;;		None               void
  8633 ;; Registers used:
  8634 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8635 ;; Tracked objects:
  8636 ;;		On entry : 0/0
  8637 ;;		On exit  : 0/0
  8638 ;;		Unchanged: 0/0
  8639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8640 ;;      Params:         0       0       0       0
  8641 ;;      Locals:         0       1       0       0
  8642 ;;      Temps:          0       0       0       0
  8643 ;;      Totals:         0       1       0       0
  8644 ;;Total ram usage:        1 bytes
  8645 ;; Hardware stack levels used:    1
  8646 ;; Hardware stack levels required when called:    4
  8647 ;; This function calls:
  8648 ;;		_LightsPointSelect
  8649 ;;		_setLights_Trigger
  8650 ;; This function is called by:
  8651 ;;		_Exception_Main
  8652 ;;		_PIR_Main
  8653 ;; This function uses a non-reentrant model
  8654 ;;
  8655                           
  8656                           
  8657                           ;psect for function _setLights_SwOff
  8658  0C1C                     _setLights_SwOff:	
  8659                           
  8660                           ;incstack = 0
  8661                           ; Regs used in _setLights_SwOff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8662                           ;setLights_SwOff@sw stored from wreg
  8663  0C1C  1283               	bcf	3,5	;RP0=0, select bank0
  8664  0C1D  1303               	bcf	3,6	;RP1=0, select bank0
  8665  0C1E  00D0               	movwf	setLights_SwOff@sw
  8666                           
  8667                           ;TriacRelay_B1.c: 440: LightsPointSelect(sw);
  8668  0C1F  0850               	movf	setLights_SwOff@sw,w
  8669  0C20  158A  230C  158A   	fcall	_LightsPointSelect
  8670                           
  8671                           ;TriacRelay_B1.c: 442: if (Lights->SwFlag == 1) {
  8672  0C23  0A78               	incf	_Lights,w
  8673  0C24  0084               	movwf	4
  8674  0C25  1383               	bcf	3,7	;select IRP bank0
  8675  0C26  1D00               	btfss	0,2
  8676  0C27  0008               	return
  8677                           
  8678                           ;TriacRelay_B1.c: 443: Lights->SwFlag = 0;
  8679  0C28  0A78               	incf	_Lights,w
  8680  0C29  0084               	movwf	4
  8681  0C2A  1100               	bcf	0,2
  8682                           
  8683                           ;TriacRelay_B1.c: 444: if (Lights->SwStatus == 0) {
  8684  0C2B  0A78               	incf	_Lights,w
  8685  0C2C  0084               	movwf	4
  8686  0C2D  1980               	btfsc	0,3
  8687  0C2E  0008               	return
  8688                           
  8689                           ;TriacRelay_B1.c: 445: setLights_Trigger(sw, 0);
  8690  0C2F  1283               	bcf	3,5	;RP0=0, select bank0
  8691  0C30  1303               	bcf	3,6	;RP1=0, select bank0
  8692  0C31  01CD               	clrf	setLights_Trigger@command
  8693  0C32  0850               	movf	setLights_SwOff@sw,w
  8694  0C33  158A  246A         	fcall	_setLights_Trigger
  8695  0C35  0008               	return
  8696  0C36                     __end_of_setLights_SwOff:	
  8697                           
  8698                           	psect	text55
  8699  0C6A                     __ptext55:	
  8700 ;; *************** function _setLights_Trigger *****************
  8701 ;; Defined at:
  8702 ;;		line 278 in file "../src/TriacRelay_B1.c"
  8703 ;; Parameters:    Size  Location     Type
  8704 ;;  lights          1    wreg     unsigned char 
  8705 ;;  command         1    0[BANK0 ] unsigned char 
  8706 ;; Auto vars:     Size  Location     Type
  8707 ;;  lights          1    2[BANK0 ] unsigned char 
  8708 ;; Return value:  Size  Location     Type
  8709 ;;		None               void
  8710 ;; Registers used:
  8711 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8712 ;; Tracked objects:
  8713 ;;		On entry : 0/0
  8714 ;;		On exit  : 0/0
  8715 ;;		Unchanged: 0/0
  8716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8717 ;;      Params:         0       1       0       0
  8718 ;;      Locals:         0       1       0       0
  8719 ;;      Temps:          0       1       0       0
  8720 ;;      Totals:         0       3       0       0
  8721 ;;Total ram usage:        3 bytes
  8722 ;; Hardware stack levels used:    1
  8723 ;; Hardware stack levels required when called:    3
  8724 ;; This function calls:
  8725 ;;		_LightsPointSelect
  8726 ;; This function is called by:
  8727 ;;		_setLights_SwOn
  8728 ;;		_setLights_SwOff
  8729 ;;		_setLights_ErrorClose
  8730 ;; This function uses a non-reentrant model
  8731 ;;
  8732                           
  8733                           
  8734                           ;psect for function _setLights_Trigger
  8735  0C6A                     _setLights_Trigger:	
  8736                           
  8737                           ;incstack = 0
  8738                           ; Regs used in _setLights_Trigger: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8739                           ;setLights_Trigger@lights stored from wreg
  8740  0C6A  1283               	bcf	3,5	;RP0=0, select bank0
  8741  0C6B  1303               	bcf	3,6	;RP1=0, select bank0
  8742  0C6C  00CF               	movwf	setLights_Trigger@lights
  8743                           
  8744                           ;TriacRelay_B1.c: 279: LightsPointSelect(lights);
  8745  0C6D  084F               	movf	setLights_Trigger@lights,w
  8746  0C6E  158A  230C         	fcall	_LightsPointSelect
  8747                           
  8748                           ;TriacRelay_B1.c: 280: Lights->Trigger = 1;
  8749  0C70  0878               	movf	_Lights,w
  8750  0C71  0084               	movwf	4
  8751  0C72  1383               	bcf	3,7	;select IRP bank0
  8752  0C73  1580               	bsf	0,3
  8753                           
  8754                           ;TriacRelay_B1.c: 281: Lights->Switch = command == 1 ? 1 : 0;
  8755  0C74  1283               	bcf	3,5	;RP0=0, select bank0
  8756  0C75  1303               	bcf	3,6	;RP1=0, select bank0
  8757  0C76  084D               	movf	setLights_Trigger@command,w
  8758  0C77  3A01               	xorlw	1
  8759  0C78  3000               	movlw	0
  8760  0C79  1903               	skipnz
  8761  0C7A  3001               	movlw	1
  8762  0C7B  00CE               	movwf	??_setLights_Trigger
  8763  0C7C  0878               	movf	_Lights,w
  8764  0C7D  0084               	movwf	4
  8765  0C7E  0ECE               	swapf	??_setLights_Trigger,f
  8766  0C7F  0800               	movf	0,w
  8767  0C80  064E               	xorwf	??_setLights_Trigger,w
  8768  0C81  39EF               	andlw	-17
  8769  0C82  064E               	xorwf	??_setLights_Trigger,w
  8770  0C83  0080               	movwf	0
  8771  0C84  0008               	return
  8772  0C85                     __end_of_setLights_Trigger:	
  8773                           
  8774                           	psect	text56
  8775  0B0C                     __ptext56:	
  8776 ;; *************** function _LightsPointSelect *****************
  8777 ;; Defined at:
  8778 ;;		line 10 in file "../src/TriacRelay_B1.c"
  8779 ;; Parameters:    Size  Location     Type
  8780 ;;  lights          1    wreg     unsigned char 
  8781 ;; Auto vars:     Size  Location     Type
  8782 ;;  lights          1    5[COMMON] unsigned char 
  8783 ;; Return value:  Size  Location     Type
  8784 ;;		None               void
  8785 ;; Registers used:
  8786 ;;		wreg
  8787 ;; Tracked objects:
  8788 ;;		On entry : 0/0
  8789 ;;		On exit  : 0/0
  8790 ;;		Unchanged: 0/0
  8791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8792 ;;      Params:         0       0       0       0
  8793 ;;      Locals:         1       0       0       0
  8794 ;;      Temps:          1       0       0       0
  8795 ;;      Totals:         2       0       0       0
  8796 ;;Total ram usage:        2 bytes
  8797 ;; Hardware stack levels used:    1
  8798 ;; Hardware stack levels required when called:    2
  8799 ;; This function calls:
  8800 ;;		Nothing
  8801 ;; This function is called by:
  8802 ;;		_setLights_Initialization
  8803 ;;		_setLights_Main
  8804 ;;		_Lights_Control
  8805 ;;		_getLights_Status
  8806 ;;		_setLights_Trigger
  8807 ;;		_setLights_SwOn
  8808 ;;		_setLights_SwOff
  8809 ;; This function uses a non-reentrant model
  8810 ;;
  8811                           
  8812                           
  8813                           ;psect for function _LightsPointSelect
  8814  0B0C                     _LightsPointSelect:	
  8815                           
  8816                           ;incstack = 0
  8817                           ; Regs used in _LightsPointSelect: [wreg]
  8818                           ;LightsPointSelect@lights stored from wreg
  8819  0B0C  00F5               	movwf	LightsPointSelect@lights
  8820                           
  8821                           ;TriacRelay_B1.c: 13: if (lights == 1) {
  8822  0B0D  0875               	movf	LightsPointSelect@lights,w
  8823  0B0E  3A01               	xorlw	1
  8824  0B0F  1D03               	skipz
  8825  0B10  0008               	return
  8826                           
  8827                           ;TriacRelay_B1.c: 14: Lights = &Lights1;
  8828  0B11  3040               	movlw	_Lights1& (0+255)
  8829  0B12  00F4               	movwf	??_LightsPointSelect
  8830  0B13  0874               	movf	??_LightsPointSelect,w
  8831  0B14  00F8               	movwf	_Lights
  8832  0B15  0008               	return
  8833  0B16                     __end_of_LightsPointSelect:	
  8834                           
  8835                           	psect	text57
  8836  0F35                     __ptext57:	
  8837 ;; *************** function _setLED *****************
  8838 ;; Defined at:
  8839 ;;		line 81 in file "../src/LED_B1.c"
  8840 ;; Parameters:    Size  Location     Type
  8841 ;;  led             1    wreg     unsigned char 
  8842 ;;  command         1    0[BANK0 ] unsigned char 
  8843 ;; Auto vars:     Size  Location     Type
  8844 ;;  led             1    1[BANK0 ] unsigned char 
  8845 ;; Return value:  Size  Location     Type
  8846 ;;		None               void
  8847 ;; Registers used:
  8848 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8849 ;; Tracked objects:
  8850 ;;		On entry : 0/0
  8851 ;;		On exit  : 0/0
  8852 ;;		Unchanged: 0/0
  8853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8854 ;;      Params:         0       1       0       0
  8855 ;;      Locals:         0       1       0       0
  8856 ;;      Temps:          0       0       0       0
  8857 ;;      Totals:         0       2       0       0
  8858 ;;Total ram usage:        2 bytes
  8859 ;; Hardware stack levels used:    1
  8860 ;; Hardware stack levels required when called:    3
  8861 ;; This function calls:
  8862 ;;		_LedPointSelect
  8863 ;; This function is called by:
  8864 ;;		_setLED_Initialization
  8865 ;;		_setPIRLED_Main
  8866 ;;		_Exception_Main
  8867 ;;		_PIR_Main
  8868 ;;		_setLights
  8869 ;; This function uses a non-reentrant model
  8870 ;;
  8871                           
  8872                           
  8873                           ;psect for function _setLED
  8874  0F35                     _setLED:	
  8875                           
  8876                           ;incstack = 0
  8877                           ; Regs used in _setLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8878                           ;setLED@led stored from wreg
  8879  0F35  1283               	bcf	3,5	;RP0=0, select bank0
  8880  0F36  1303               	bcf	3,6	;RP1=0, select bank0
  8881  0F37  00CE               	movwf	setLED@led
  8882                           
  8883                           ;LED_B1.c: 82: LedPointSelect(led);
  8884  0F38  084E               	movf	setLED@led,w
  8885  0F39  158A  2389  158A   	fcall	_LedPointSelect
  8886                           
  8887                           ;LED_B1.c: 83: if (command == 0) {
  8888  0F3C  1283               	bcf	3,5	;RP0=0, select bank0
  8889  0F3D  1303               	bcf	3,6	;RP1=0, select bank0
  8890  0F3E  08CD               	movf	setLED@command,f
  8891  0F3F  1D03               	skipz
  8892  0F40  2F4A               	goto	l4407
  8893                           
  8894                           ;LED_B1.c: 85: if (led == 1) {
  8895  0F41  084E               	movf	setLED@led,w
  8896  0F42  3A01               	xorlw	1
  8897  0F43  1D03               	skipz
  8898  0F44  2F46               	goto	l4403
  8899                           
  8900                           ;LED_B1.c: 89: RA6 = 1;
  8901  0F45  1705               	bsf	5,6	;volatile
  8902  0F46                     l4403:	
  8903                           
  8904                           ;LED_B1.c: 91: }
  8905                           ;LED_B1.c: 94: if (led == 2) {
  8906  0F46  084E               	movf	setLED@led,w
  8907  0F47  3A02               	xorlw	2
  8908  0F48  1903               	btfsc	3,2
  8909                           
  8910                           ;LED_B1.c: 98: RA7 = 1;
  8911  0F49  1785               	bsf	5,7	;volatile
  8912  0F4A                     l4407:	
  8913                           
  8914                           ;LED_B1.c: 100: }
  8915                           ;LED_B1.c: 120: }
  8916                           ;LED_B1.c: 121: if (command == 1) {
  8917  0F4A  084D               	movf	setLED@command,w
  8918  0F4B  3A01               	xorlw	1
  8919  0F4C  1D03               	skipz
  8920  0F4D  2F57               	goto	l4417
  8921                           
  8922                           ;LED_B1.c: 123: if (led == 1) {
  8923  0F4E  084E               	movf	setLED@led,w
  8924  0F4F  3A01               	xorlw	1
  8925  0F50  1D03               	skipz
  8926  0F51  2F53               	goto	l4413
  8927                           
  8928                           ;LED_B1.c: 127: RA6 = 0;
  8929  0F52  1305               	bcf	5,6	;volatile
  8930  0F53                     l4413:	
  8931                           
  8932                           ;LED_B1.c: 129: }
  8933                           ;LED_B1.c: 132: if (led == 2) {
  8934  0F53  084E               	movf	setLED@led,w
  8935  0F54  3A02               	xorlw	2
  8936  0F55  1903               	btfsc	3,2
  8937                           
  8938                           ;LED_B1.c: 136: RA7 = 0;
  8939  0F56  1385               	bcf	5,7	;volatile
  8940  0F57                     l4417:	
  8941                           
  8942                           ;LED_B1.c: 138: }
  8943                           ;LED_B1.c: 158: }
  8944                           ;LED_B1.c: 159: if (command == 10) {
  8945  0F57  084D               	movf	setLED@command,w
  8946  0F58  3A0A               	xorlw	10
  8947  0F59  1D03               	skipz
  8948  0F5A  2F6E               	goto	l4431
  8949                           
  8950                           ;LED_B1.c: 160: LED->GO = 0;
  8951  0F5B  0876               	movf	_LED,w
  8952  0F5C  0084               	movwf	4
  8953  0F5D  1383               	bcf	3,7	;select IRP bank0
  8954  0F5E  1080               	bcf	0,1
  8955                           
  8956                           ;LED_B1.c: 161: LED->Time = 0;
  8957  0F5F  0A76               	incf	_LED,w
  8958  0F60  0084               	movwf	4
  8959  0F61  0180               	clrf	0
  8960  0F62  0A84               	incf	4,f
  8961  0F63  0180               	clrf	0
  8962                           
  8963                           ;LED_B1.c: 163: if (led == 1) {
  8964  0F64  084E               	movf	setLED@led,w
  8965  0F65  3A01               	xorlw	1
  8966  0F66  1D03               	skipz
  8967  0F67  2F6A               	goto	l4427
  8968                           
  8969                           ;LED_B1.c: 167: RA6 = 1;
  8970  0F68  1705               	bsf	5,6	;volatile
  8971                           
  8972                           ;LED_B1.c: 169: }
  8973  0F69  2F6E               	goto	l4431
  8974  0F6A                     l4427:	
  8975                           
  8976                           ;LED_B1.c: 172: else if (led == 2) {
  8977  0F6A  084E               	movf	setLED@led,w
  8978  0F6B  3A02               	xorlw	2
  8979  0F6C  1903               	btfsc	3,2
  8980                           
  8981                           ;LED_B1.c: 176: RA7 = 1;
  8982  0F6D  1785               	bsf	5,7	;volatile
  8983  0F6E                     l4431:	
  8984                           
  8985                           ;LED_B1.c: 178: }
  8986                           ;LED_B1.c: 198: }
  8987                           ;LED_B1.c: 199: if (command == 11) {
  8988  0F6E  084D               	movf	setLED@command,w
  8989  0F6F  3A0B               	xorlw	11
  8990  0F70  1D03               	skipz
  8991  0F71  2F76               	goto	l4435
  8992                           
  8993                           ;LED_B1.c: 200: LED->GO = 1;
  8994  0F72  0876               	movf	_LED,w
  8995  0F73  0084               	movwf	4
  8996  0F74  1383               	bcf	3,7	;select IRP bank0
  8997  0F75  1480               	bsf	0,1
  8998  0F76                     l4435:	
  8999                           
  9000                           ;LED_B1.c: 201: }
  9001                           ;LED_B1.c: 205: if (command == 111) {
  9002  0F76  084D               	movf	setLED@command,w
  9003  0F77  3A6F               	xorlw	111
  9004  0F78  1D03               	skipz
  9005  0F79  2F94               	goto	l4461
  9006                           
  9007                           ;LED_B1.c: 206: PIRLED.Count = 0;
  9008  0F7A  01AB               	clrf	_PIRLED+1
  9009                           
  9010                           ;LED_B1.c: 207: PIRLED.Time = 0;
  9011  0F7B  01AC               	clrf	_PIRLED+2
  9012  0F7C  01AD               	clrf	_PIRLED+3
  9013                           
  9014                           ;LED_B1.c: 208: PIRLED.status = 0;
  9015  0F7D  122A               	bcf	_PIRLED,4
  9016                           
  9017                           ;LED_B1.c: 209: PIRLED.GO = 1;
  9018  0F7E  142A               	bsf	_PIRLED,0
  9019                           
  9020                           ;LED_B1.c: 210: PIRLED.GO1 = 0;
  9021  0F7F  10AA               	bcf	_PIRLED,1
  9022                           
  9023                           ;LED_B1.c: 211: PIRLED.GO2 = 0;
  9024  0F80  112A               	bcf	_PIRLED,2
  9025                           
  9026                           ;LED_B1.c: 212: PIRLED.GO3 = 0;
  9027  0F81  11AA               	bcf	_PIRLED,3
  9028                           
  9029                           ;LED_B1.c: 213: if (led == 1) {
  9030  0F82  084E               	movf	setLED@led,w
  9031  0F83  3A01               	xorlw	1
  9032  0F84  1D03               	skipz
  9033  0F85  2F88               	goto	l4453
  9034                           
  9035                           ;LED_B1.c: 214: PIRLED.GO1 = 1;
  9036  0F86  14AA               	bsf	_PIRLED,1
  9037                           
  9038                           ;LED_B1.c: 215: } else if (led == 2) {
  9039  0F87  0008               	return
  9040  0F88                     l4453:	
  9041  0F88  084E               	movf	setLED@led,w
  9042  0F89  3A02               	xorlw	2
  9043  0F8A  1D03               	skipz
  9044  0F8B  2F8E               	goto	l4457
  9045                           
  9046                           ;LED_B1.c: 216: PIRLED.GO2 = 1;
  9047  0F8C  152A               	bsf	_PIRLED,2
  9048                           
  9049                           ;LED_B1.c: 217: } else if (led == 3) {
  9050  0F8D  0008               	return
  9051  0F8E                     l4457:	
  9052  0F8E  084E               	movf	setLED@led,w
  9053  0F8F  3A03               	xorlw	3
  9054  0F90  1D03               	skipz
  9055  0F91  0008               	return
  9056                           
  9057                           ;LED_B1.c: 218: PIRLED.GO3 = 1;
  9058  0F92  15AA               	bsf	_PIRLED,3
  9059                           
  9060                           ;LED_B1.c: 219: }
  9061                           ;LED_B1.c: 220: } else if (command == 110) {
  9062  0F93  0008               	return
  9063  0F94                     l4461:	
  9064  0F94  084D               	movf	setLED@command,w
  9065  0F95  3A6E               	xorlw	110
  9066  0F96  1D03               	skipz
  9067  0F97  0008               	return
  9068                           
  9069                           ;LED_B1.c: 221: PIRLED.GO = 0;
  9070  0F98  102A               	bcf	_PIRLED,0
  9071  0F99  0008               	return
  9072  0F9A                     __end_of_setLED:	
  9073                           
  9074                           	psect	text58
  9075  0B89                     __ptext58:	
  9076 ;; *************** function _LedPointSelect *****************
  9077 ;; Defined at:
  9078 ;;		line 7 in file "../src/LED_B1.c"
  9079 ;; Parameters:    Size  Location     Type
  9080 ;;  led             1    wreg     unsigned char 
  9081 ;; Auto vars:     Size  Location     Type
  9082 ;;  led             1    5[COMMON] unsigned char 
  9083 ;; Return value:  Size  Location     Type
  9084 ;;		None               void
  9085 ;; Registers used:
  9086 ;;		wreg
  9087 ;; Tracked objects:
  9088 ;;		On entry : 0/0
  9089 ;;		On exit  : 0/0
  9090 ;;		Unchanged: 0/0
  9091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9092 ;;      Params:         0       0       0       0
  9093 ;;      Locals:         1       0       0       0
  9094 ;;      Temps:          1       0       0       0
  9095 ;;      Totals:         2       0       0       0
  9096 ;;Total ram usage:        2 bytes
  9097 ;; Hardware stack levels used:    1
  9098 ;; Hardware stack levels required when called:    2
  9099 ;; This function calls:
  9100 ;;		Nothing
  9101 ;; This function is called by:
  9102 ;;		_setLED_Initialization
  9103 ;;		_setLED
  9104 ;;		_setLED_Main
  9105 ;; This function uses a non-reentrant model
  9106 ;;
  9107                           
  9108                           
  9109                           ;psect for function _LedPointSelect
  9110  0B89                     _LedPointSelect:	
  9111                           
  9112                           ;incstack = 0
  9113                           ; Regs used in _LedPointSelect: [wreg]
  9114                           ;LedPointSelect@led stored from wreg
  9115  0B89  00F5               	movwf	LedPointSelect@led
  9116                           
  9117                           ;LED_B1.c: 9: if (led == 1) {
  9118  0B8A  0875               	movf	LedPointSelect@led,w
  9119  0B8B  3A01               	xorlw	1
  9120  0B8C  1D03               	skipz
  9121  0B8D  2B92               	goto	l254
  9122                           
  9123                           ;LED_B1.c: 10: LED = &VarLED1;
  9124  0B8E  3045               	movlw	_VarLED1& (0+255)
  9125  0B8F  00F4               	movwf	??_LedPointSelect
  9126  0B90  0874               	movf	??_LedPointSelect,w
  9127  0B91  00F6               	movwf	_LED
  9128  0B92                     l254:	
  9129                           
  9130                           ;LED_B1.c: 11: }
  9131                           ;LED_B1.c: 14: if (led == 2) {
  9132  0B92  0875               	movf	LedPointSelect@led,w
  9133  0B93  3A02               	xorlw	2
  9134  0B94  1D03               	skipz
  9135  0B95  0008               	return
  9136                           
  9137                           ;LED_B1.c: 15: LED = &VarLED2;
  9138  0B96  3049               	movlw	_VarLED2& (0+255)
  9139  0B97  00F4               	movwf	??_LedPointSelect
  9140  0B98  0874               	movf	??_LedPointSelect,w
  9141  0B99  00F6               	movwf	_LED
  9142  0B9A  0008               	return
  9143  0B9B                     __end_of_LedPointSelect:	
  9144                           
  9145                           	psect	text59
  9146  0B03                     __ptext59:	
  9147 ;; *************** function _getMain_All_LightsStatus *****************
  9148 ;; Defined at:
  9149 ;;		line 373 in file "../src/Main_B1.c"
  9150 ;; Parameters:    Size  Location     Type
  9151 ;;		None
  9152 ;; Auto vars:     Size  Location     Type
  9153 ;;  status          1    4[COMMON] unsigned char 
  9154 ;; Return value:  Size  Location     Type
  9155 ;;                  1    wreg      unsigned char 
  9156 ;; Registers used:
  9157 ;;		wreg, status,2
  9158 ;; Tracked objects:
  9159 ;;		On entry : 0/0
  9160 ;;		On exit  : 0/0
  9161 ;;		Unchanged: 0/0
  9162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9163 ;;      Params:         0       0       0       0
  9164 ;;      Locals:         1       0       0       0
  9165 ;;      Temps:          0       0       0       0
  9166 ;;      Totals:         1       0       0       0
  9167 ;;Total ram usage:        1 bytes
  9168 ;; Hardware stack levels used:    1
  9169 ;; Hardware stack levels required when called:    2
  9170 ;; This function calls:
  9171 ;;		Nothing
  9172 ;; This function is called by:
  9173 ;;		_Exception_Main
  9174 ;;		_Load_Main
  9175 ;;		_setTemp_Main
  9176 ;;		_Lights_Main
  9177 ;; This function uses a non-reentrant model
  9178 ;;
  9179                           
  9180                           
  9181                           ;psect for function _getMain_All_LightsStatus
  9182  0B03                     _getMain_All_LightsStatus:	
  9183                           
  9184                           ;Main_B1.c: 374: char status = 0;
  9185                           
  9186                           ;incstack = 0
  9187                           ; Regs used in _getMain_All_LightsStatus: [wreg+status,2]
  9188  0B03  01F4               	clrf	getMain_All_LightsStatus@status
  9189                           
  9190                           ;Main_B1.c: 378: status = Lights1.Status == 1 ? 1 : 0;
  9191  0B04  3000               	movlw	0
  9192  0B05  1283               	bcf	3,5	;RP0=0, select bank0
  9193  0B06  1303               	bcf	3,6	;RP1=0, select bank0
  9194  0B07  1940               	btfsc	_Lights1,2
  9195  0B08  3001               	movlw	1
  9196  0B09  00F4               	movwf	getMain_All_LightsStatus@status
  9197                           
  9198                           ;Main_B1.c: 420: return status;
  9199  0B0A  0874               	movf	getMain_All_LightsStatus@status,w
  9200  0B0B  0008               	return
  9201  0B0C                     __end_of_getMain_All_LightsStatus:	
  9202                           
  9203                           	psect	text60
  9204  0DBA                     __ptext60:	
  9205 ;; *************** function _getMain_All_Error_Status *****************
  9206 ;; Defined at:
  9207 ;;		line 424 in file "../src/Main_B1.c"
  9208 ;; Parameters:    Size  Location     Type
  9209 ;;  command         1    wreg     unsigned char 
  9210 ;; Auto vars:     Size  Location     Type
  9211 ;;  command         1    4[BANK0 ] unsigned char 
  9212 ;;  status          1    5[BANK0 ] unsigned char 
  9213 ;; Return value:  Size  Location     Type
  9214 ;;                  1    wreg      unsigned char 
  9215 ;; Registers used:
  9216 ;;		wreg, status,2, status,0
  9217 ;; Tracked objects:
  9218 ;;		On entry : 0/0
  9219 ;;		On exit  : 0/0
  9220 ;;		Unchanged: 0/0
  9221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9222 ;;      Params:         0       0       0       0
  9223 ;;      Locals:         0       6       0       0
  9224 ;;      Temps:          1       0       0       0
  9225 ;;      Totals:         1       6       0       0
  9226 ;;Total ram usage:        7 bytes
  9227 ;; Hardware stack levels used:    1
  9228 ;; Hardware stack levels required when called:    2
  9229 ;; This function calls:
  9230 ;;		Nothing
  9231 ;; This function is called by:
  9232 ;;		_Exception_Main
  9233 ;;		_Load_Main
  9234 ;;		_setTemp_Main
  9235 ;;		_PIR_Main
  9236 ;;		_setSYSC_Main
  9237 ;;		_Lights_Main
  9238 ;; This function uses a non-reentrant model
  9239 ;;
  9240                           
  9241                           
  9242                           ;psect for function _getMain_All_Error_Status
  9243  0DBA                     _getMain_All_Error_Status:	
  9244                           
  9245                           ;incstack = 0
  9246                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2+status,0]
  9247                           ;getMain_All_Error_Status@command stored from wreg
  9248  0DBA  1283               	bcf	3,5	;RP0=0, select bank0
  9249  0DBB  1303               	bcf	3,6	;RP1=0, select bank0
  9250  0DBC  00D1               	movwf	getMain_All_Error_Status@command
  9251                           
  9252                           ;Main_B1.c: 425: char status = 0;
  9253  0DBD  01D2               	clrf	getMain_All_Error_Status@status
  9254                           
  9255                           ;Main_B1.c: 428: if (status == 0 && command != 1) {
  9256  0DBE  08D2               	movf	getMain_All_Error_Status@status,f
  9257  0DBF  1D03               	skipz
  9258  0DC0  2DC9               	goto	l3199
  9259  0DC1  0851               	movf	getMain_All_Error_Status@command,w
  9260  0DC2  3A01               	xorlw	1
  9261  0DC3  1903               	skipnz
  9262  0DC4  2DC9               	goto	l3199
  9263                           
  9264                           ;Main_B1.c: 429: status = SYSC.ERROR == 1 ? 1 : 0;
  9265  0DC5  3000               	movlw	0
  9266  0DC6  18A0               	btfsc	_SYSC,1
  9267  0DC7  3001               	movlw	1
  9268  0DC8  00D2               	movwf	getMain_All_Error_Status@status
  9269  0DC9                     l3199:	
  9270                           
  9271                           ;Main_B1.c: 430: }
  9272                           ;Main_B1.c: 436: if (status == 0 && command != 2) {
  9273  0DC9  08D2               	movf	getMain_All_Error_Status@status,f
  9274  0DCA  1D03               	skipz
  9275  0DCB  2DDD               	goto	l3209
  9276  0DCC  0851               	movf	getMain_All_Error_Status@command,w
  9277  0DCD  3A02               	xorlw	2
  9278  0DCE  1903               	skipnz
  9279  0DCF  2DDD               	goto	l3209
  9280                           
  9281                           ;Main_B1.c: 437: status = Temp.ERROR == 1 ? 2 : 0;
  9282  0DD0  18B9               	btfsc	_Temp,1
  9283  0DD1  2DD5               	goto	l3207
  9284  0DD2  01CD               	clrf	_getMain_All_Error_Status$2127
  9285  0DD3  01CE               	clrf	_getMain_All_Error_Status$2127+1
  9286  0DD4  2DD9               	goto	l590
  9287  0DD5                     l3207:	
  9288  0DD5  3002               	movlw	2
  9289  0DD6  00CD               	movwf	_getMain_All_Error_Status$2127
  9290  0DD7  3000               	movlw	0
  9291  0DD8  00CE               	movwf	_getMain_All_Error_Status$2127+1
  9292  0DD9                     l590:	
  9293  0DD9  084D               	movf	_getMain_All_Error_Status$2127,w
  9294  0DDA  00F4               	movwf	??_getMain_All_Error_Status
  9295  0DDB  0874               	movf	??_getMain_All_Error_Status,w
  9296  0DDC  00D2               	movwf	getMain_All_Error_Status@status
  9297  0DDD                     l3209:	
  9298                           
  9299                           ;Main_B1.c: 438: }
  9300                           ;Main_B1.c: 443: if (status == 0 && command != 3) {
  9301  0DDD  08D2               	movf	getMain_All_Error_Status@status,f
  9302  0DDE  1D03               	skipz
  9303  0DDF  2DF6               	goto	l591
  9304  0DE0  0851               	movf	getMain_All_Error_Status@command,w
  9305  0DE1  3A03               	xorlw	3
  9306  0DE2  1903               	skipnz
  9307  0DE3  2DF6               	goto	l591
  9308                           
  9309                           ;Main_B1.c: 444: status = Load.ERROR == 1 ? 3 : 0;
  9310  0DE4  1683               	bsf	3,5	;RP0=1, select bank1
  9311  0DE5  1303               	bcf	3,6	;RP1=0, select bank1
  9312  0DE6  1ACA               	btfsc	_Load^(0+128),5
  9313  0DE7  2DED               	goto	l3217
  9314  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  9315  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  9316  0DEA  01CF               	clrf	_getMain_All_Error_Status$2128
  9317  0DEB  01D0               	clrf	_getMain_All_Error_Status$2128+1
  9318  0DEC  2DF2               	goto	l595
  9319  0DED                     l3217:	
  9320  0DED  3003               	movlw	3
  9321  0DEE  1283               	bcf	3,5	;RP0=0, select bank0
  9322  0DEF  00CF               	movwf	_getMain_All_Error_Status$2128
  9323  0DF0  3000               	movlw	0
  9324  0DF1  00D0               	movwf	_getMain_All_Error_Status$2128+1
  9325  0DF2                     l595:	
  9326  0DF2  084F               	movf	_getMain_All_Error_Status$2128,w
  9327  0DF3  00F4               	movwf	??_getMain_All_Error_Status
  9328  0DF4  0874               	movf	??_getMain_All_Error_Status,w
  9329  0DF5  00D2               	movwf	getMain_All_Error_Status@status
  9330  0DF6                     l591:	
  9331                           
  9332                           ;Main_B1.c: 445: }
  9333                           ;Main_B1.c: 455: return status;
  9334  0DF6  0852               	movf	getMain_All_Error_Status@status,w
  9335  0DF7  0008               	return
  9336  0DF8                     __end_of_getMain_All_Error_Status:	
  9337                           
  9338                           	psect	text61
  9339  0AFA                     __ptext61:	
  9340 ;; *************** function _getAll_Lights_Line *****************
  9341 ;; Defined at:
  9342 ;;		line 310 in file "../src/TriacRelay_B1.c"
  9343 ;; Parameters:    Size  Location     Type
  9344 ;;		None
  9345 ;; Auto vars:     Size  Location     Type
  9346 ;;  line            1    4[COMMON] unsigned char 
  9347 ;; Return value:  Size  Location     Type
  9348 ;;                  1    wreg      unsigned char 
  9349 ;; Registers used:
  9350 ;;		wreg, status,2
  9351 ;; Tracked objects:
  9352 ;;		On entry : 0/0
  9353 ;;		On exit  : 0/0
  9354 ;;		Unchanged: 0/0
  9355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9356 ;;      Params:         0       0       0       0
  9357 ;;      Locals:         1       0       0       0
  9358 ;;      Temps:          0       0       0       0
  9359 ;;      Totals:         1       0       0       0
  9360 ;;Total ram usage:        1 bytes
  9361 ;; Hardware stack levels used:    1
  9362 ;; Hardware stack levels required when called:    2
  9363 ;; This function calls:
  9364 ;;		Nothing
  9365 ;; This function is called by:
  9366 ;;		_Exception_Main
  9367 ;; This function uses a non-reentrant model
  9368 ;;
  9369                           
  9370                           
  9371                           ;psect for function _getAll_Lights_Line
  9372  0AFA                     _getAll_Lights_Line:	
  9373                           
  9374                           ;TriacRelay_B1.c: 311: char line = 0;
  9375                           
  9376                           ;incstack = 0
  9377                           ; Regs used in _getAll_Lights_Line: [wreg+status,2]
  9378  0AFA  01F4               	clrf	getAll_Lights_Line@line
  9379                           
  9380                           ;TriacRelay_B1.c: 313: if (Lights1.Line == 1) {
  9381  0AFB  1283               	bcf	3,5	;RP0=0, select bank0
  9382  0AFC  1303               	bcf	3,6	;RP1=0, select bank0
  9383  0AFD  1C41               	btfss	_Lights1+1,0
  9384  0AFE  2B01               	goto	l3463
  9385                           
  9386                           ;TriacRelay_B1.c: 314: line = 1;
  9387  0AFF  01F4               	clrf	getAll_Lights_Line@line
  9388  0B00  0AF4               	incf	getAll_Lights_Line@line,f
  9389  0B01                     l3463:	
  9390                           
  9391                           ;TriacRelay_B1.c: 315: }
  9392                           ;TriacRelay_B1.c: 327: return line;
  9393  0B01  0874               	movf	getAll_Lights_Line@line,w
  9394  0B02  0008               	return
  9395  0B03                     __end_of_getAll_Lights_Line:	
  9396                           
  9397                           	psect	text62
  9398  0B20                     __ptext62:	
  9399 ;; *************** function _DetectSYSC_Signal *****************
  9400 ;; Defined at:
  9401 ;;		line 50 in file "../src/SYSC_B1.c"
  9402 ;; Parameters:    Size  Location     Type
  9403 ;;		None
  9404 ;; Auto vars:     Size  Location     Type
  9405 ;;		None
  9406 ;; Return value:  Size  Location     Type
  9407 ;;		None               void
  9408 ;; Registers used:
  9409 ;;		status,2
  9410 ;; Tracked objects:
  9411 ;;		On entry : 0/0
  9412 ;;		On exit  : 0/0
  9413 ;;		Unchanged: 0/0
  9414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9415 ;;      Params:         0       0       0       0
  9416 ;;      Locals:         0       0       0       0
  9417 ;;      Temps:          0       0       0       0
  9418 ;;      Totals:         0       0       0       0
  9419 ;;Total ram usage:        0 bytes
  9420 ;; Hardware stack levels used:    1
  9421 ;; Hardware stack levels required when called:    2
  9422 ;; This function calls:
  9423 ;;		Nothing
  9424 ;; This function is called by:
  9425 ;;		_main
  9426 ;; This function uses a non-reentrant model
  9427 ;;
  9428                           
  9429                           
  9430                           ;psect for function _DetectSYSC_Signal
  9431  0B20                     _DetectSYSC_Signal:	
  9432                           
  9433                           ;SYSC_B1.c: 51: if (SYSC.Signal == 0) {
  9434                           
  9435                           ;incstack = 0
  9436                           ; Regs used in _DetectSYSC_Signal: [status,2]
  9437  0B20  1283               	bcf	3,5	;RP0=0, select bank0
  9438  0B21  1303               	bcf	3,6	;RP1=0, select bank0
  9439  0B22  19A0               	btfsc	_SYSC,3
  9440  0B23  2B2A               	goto	l1111
  9441                           
  9442                           ;SYSC_B1.c: 52: if (RA5 == 1) {
  9443  0B24  1E85               	btfss	5,5	;volatile
  9444  0B25  0008               	return
  9445                           
  9446                           ;SYSC_B1.c: 53: SYSC.Signal = 1;
  9447  0B26  15A0               	bsf	_SYSC,3
  9448                           
  9449                           ;SYSC_B1.c: 54: SYSC.Time = 0;
  9450  0B27  01A1               	clrf	_SYSC+1
  9451  0B28  01A2               	clrf	_SYSC+2
  9452                           
  9453                           ;SYSC_B1.c: 55: }
  9454                           ;SYSC_B1.c: 56: } else {
  9455  0B29  0008               	return
  9456  0B2A                     l1111:	
  9457                           
  9458                           ;SYSC_B1.c: 57: if (RA5 == 0) {
  9459  0B2A  1A85               	btfsc	5,5	;volatile
  9460  0B2B  0008               	return
  9461                           
  9462                           ;SYSC_B1.c: 58: SYSC.Signal = 0;
  9463  0B2C  11A0               	bcf	_SYSC,3
  9464  0B2D  0008               	return
  9465  0B2E                     __end_of_DetectSYSC_Signal:	
  9466                           
  9467                           	psect	text63
  9468  0D86                     __ptext63:	
  9469 ;; *************** function _CDS_Main *****************
  9470 ;; Defined at:
  9471 ;;		line 11 in file "../src/CDS_B1.c"
  9472 ;; Parameters:    Size  Location     Type
  9473 ;;		None
  9474 ;; Auto vars:     Size  Location     Type
  9475 ;;		None
  9476 ;; Return value:  Size  Location     Type
  9477 ;;		None               void
  9478 ;; Registers used:
  9479 ;;		wreg, status,2, status,0
  9480 ;; Tracked objects:
  9481 ;;		On entry : 0/0
  9482 ;;		On exit  : 0/0
  9483 ;;		Unchanged: 0/0
  9484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9485 ;;      Params:         0       0       0       0
  9486 ;;      Locals:         0       0       0       0
  9487 ;;      Temps:          0       3       0       0
  9488 ;;      Totals:         0       3       0       0
  9489 ;;Total ram usage:        3 bytes
  9490 ;; Hardware stack levels used:    1
  9491 ;; Hardware stack levels required when called:    2
  9492 ;; This function calls:
  9493 ;;		Nothing
  9494 ;; This function is called by:
  9495 ;;		_main
  9496 ;; This function uses a non-reentrant model
  9497 ;;
  9498                           
  9499                           
  9500                           ;psect for function _CDS_Main
  9501  0D86                     _CDS_Main:	
  9502                           
  9503                           ;CDS_B1.c: 13: if (_CDS.Enable == 1) {
  9504                           
  9505                           ;incstack = 0
  9506                           ; Regs used in _CDS_Main: [wreg+status,2+status,0]
  9507  0D86  1283               	bcf	3,5	;RP0=0, select bank0
  9508  0D87  1303               	bcf	3,6	;RP1=0, select bank0
  9509  0D88  1C2E               	btfss	__CDS,0
  9510  0D89  0008               	return
  9511                           
  9512                           ;CDS_B1.c: 14: if (_CDS.GO == 0) {
  9513  0D8A  18AE               	btfsc	__CDS,1
  9514  0D8B  2D99               	goto	l117
  9515                           
  9516                           ;CDS_B1.c: 15: if (_CDS.ADtoGO == 0) {
  9517  0D8C  19AE               	btfsc	__CDS,3
  9518  0D8D  0008               	return
  9519                           
  9520                           ;CDS_B1.c: 16: _CDS.Time++;
  9521  0D8E  3001               	movlw	1
  9522  0D8F  00CD               	movwf	??_CDS_Main
  9523  0D90  084D               	movf	??_CDS_Main,w
  9524  0D91  07AF               	addwf	__CDS+1,f
  9525                           
  9526                           ;CDS_B1.c: 17: if (_CDS.Time >= (100 / 20))
  9527  0D92  3005               	movlw	5
  9528  0D93  022F               	subwf	__CDS+1,w
  9529  0D94  1C03               	skipc
  9530  0D95  0008               	return
  9531                           
  9532                           ;CDS_B1.c: 18: {
  9533                           ;CDS_B1.c: 19: _CDS.Time = 0;
  9534  0D96  01AF               	clrf	__CDS+1
  9535                           
  9536                           ;CDS_B1.c: 20: _CDS.ADtoGO = 1;
  9537  0D97  15AE               	bsf	__CDS,3
  9538                           
  9539                           ;CDS_B1.c: 21: }
  9540                           ;CDS_B1.c: 22: }
  9541                           ;CDS_B1.c: 23: } else {
  9542  0D98  0008               	return
  9543  0D99                     l117:	
  9544                           
  9545                           ;CDS_B1.c: 24: if (_CDS.GO == 1) {
  9546  0D99  1CAE               	btfss	__CDS,1
  9547  0D9A  0008               	return
  9548                           
  9549                           ;CDS_B1.c: 25: _CDS.GO = 0;
  9550  0D9B  10AE               	bcf	__CDS,1
  9551                           
  9552                           ;CDS_B1.c: 26: if (_CDS.Status == 0) {
  9553  0D9C  1A2E               	btfsc	__CDS,4
  9554  0D9D  2DA4               	goto	l4789
  9555                           
  9556                           ;CDS_B1.c: 27: if (_CDS.SignalAD >= _CDS.VRAD) {
  9557  0D9E  0830               	movf	__CDS+2,w
  9558  0D9F  0231               	subwf	__CDS+3,w
  9559  0DA0  1C03               	skipc
  9560  0DA1  0008               	return
  9561                           
  9562                           ;CDS_B1.c: 28: _CDS.Status = 1;
  9563  0DA2  162E               	bsf	__CDS,4
  9564                           
  9565                           ;CDS_B1.c: 29: }
  9566                           ;CDS_B1.c: 30: } else {
  9567  0DA3  0008               	return
  9568  0DA4                     l4789:	
  9569                           
  9570                           ;CDS_B1.c: 31: if (_CDS.SignalAD <= (_CDS.VRAD - 100)) {
  9571  0DA4  0830               	movf	__CDS+2,w
  9572  0DA5  3E9C               	addlw	156
  9573  0DA6  00CD               	movwf	??_CDS_Main
  9574  0DA7  30FF               	movlw	255
  9575  0DA8  1803               	skipnc
  9576  0DA9  3000               	movlw	0
  9577  0DAA  00CE               	movwf	??_CDS_Main+1
  9578  0DAB  084E               	movf	??_CDS_Main+1,w
  9579  0DAC  3A80               	xorlw	128
  9580  0DAD  00CF               	movwf	??_CDS_Main+2
  9581  0DAE  3080               	movlw	128
  9582  0DAF  024F               	subwf	??_CDS_Main+2,w
  9583  0DB0  1D03               	skipz
  9584  0DB1  2DB4               	goto	u5805
  9585  0DB2  0831               	movf	__CDS+3,w
  9586  0DB3  024D               	subwf	??_CDS_Main,w
  9587  0DB4                     u5805:	
  9588  0DB4  1C03               	skipc
  9589  0DB5  0008               	return
  9590                           
  9591                           ;CDS_B1.c: 32: _CDS.Status = 0;
  9592  0DB6  1283               	bcf	3,5	;RP0=0, select bank0
  9593  0DB7  1303               	bcf	3,6	;RP1=0, select bank0
  9594  0DB8  122E               	bcf	__CDS,4
  9595  0DB9  0008               	return
  9596  0DBA                     __end_of_CDS_Main:	
  9597                           
  9598                           	psect	text64
  9599  0AA9                     __ptext64:	
  9600 ;; *************** function _CDS_Initialization *****************
  9601 ;; Defined at:
  9602 ;;		line 7 in file "../src/CDS_B1.c"
  9603 ;; Parameters:    Size  Location     Type
  9604 ;;		None
  9605 ;; Auto vars:     Size  Location     Type
  9606 ;;		None
  9607 ;; Return value:  Size  Location     Type
  9608 ;;		None               void
  9609 ;; Registers used:
  9610 ;;		None
  9611 ;; Tracked objects:
  9612 ;;		On entry : 0/0
  9613 ;;		On exit  : 0/0
  9614 ;;		Unchanged: 0/0
  9615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9616 ;;      Params:         0       0       0       0
  9617 ;;      Locals:         0       0       0       0
  9618 ;;      Temps:          0       0       0       0
  9619 ;;      Totals:         0       0       0       0
  9620 ;;Total ram usage:        0 bytes
  9621 ;; Hardware stack levels used:    1
  9622 ;; Hardware stack levels required when called:    2
  9623 ;; This function calls:
  9624 ;;		Nothing
  9625 ;; This function is called by:
  9626 ;;		_main
  9627 ;; This function uses a non-reentrant model
  9628 ;;
  9629                           
  9630                           
  9631                           ;psect for function _CDS_Initialization
  9632  0AA9                     _CDS_Initialization:	
  9633                           
  9634                           ;CDS_B1.c: 8: _CDS.Enable = 1;
  9635                           
  9636                           ;incstack = 0
  9637                           ; Regs used in _CDS_Initialization: []
  9638  0AA9  1283               	bcf	3,5	;RP0=0, select bank0
  9639  0AAA  1303               	bcf	3,6	;RP1=0, select bank0
  9640  0AAB  142E               	bsf	__CDS,0
  9641  0AAC  0008               	return
  9642  0AAD                     __end_of_CDS_Initialization:	
  9643                           
  9644                           	psect	text65
  9645  0C04                     __ptext65:	
  9646 ;; *************** function _ISR *****************
  9647 ;; Defined at:
  9648 ;;		line 116 in file "../src/MCU_B1.c"
  9649 ;; Parameters:    Size  Location     Type
  9650 ;;		None
  9651 ;; Auto vars:     Size  Location     Type
  9652 ;;		None
  9653 ;; Return value:  Size  Location     Type
  9654 ;;		None               void
  9655 ;; Registers used:
  9656 ;;		wreg, status,2, status,0, pclath, cstack
  9657 ;; Tracked objects:
  9658 ;;		On entry : 0/0
  9659 ;;		On exit  : 0/0
  9660 ;;		Unchanged: 0/0
  9661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9662 ;;      Params:         0       0       0       0
  9663 ;;      Locals:         0       0       0       0
  9664 ;;      Temps:          4       0       0       0
  9665 ;;      Totals:         4       0       0       0
  9666 ;;Total ram usage:        4 bytes
  9667 ;; Hardware stack levels used:    1
  9668 ;; Hardware stack levels required when called:    1
  9669 ;; This function calls:
  9670 ;;		_TMR1_ISR
  9671 ;; This function is called by:
  9672 ;;		Interrupt level 1
  9673 ;; This function uses a non-reentrant model
  9674 ;;
  9675                           
  9676                           
  9677                           ;psect for function _ISR
  9678  0C04                     _ISR:	
  9679                           
  9680                           ;MCU_B1.c: 125: if (TMR1IE == 1 && TMR1IF == 1) {
  9681  0C04  1683               	bsf	3,5	;RP0=1, select bank1
  9682  0C05  1303               	bcf	3,6	;RP1=0, select bank1
  9683  0C06  1C0C               	btfss	12,0	;volatile
  9684  0C07  2C0F               	goto	i1l426
  9685  0C08  1283               	bcf	3,5	;RP0=0, select bank0
  9686  0C09  1303               	bcf	3,6	;RP1=0, select bank0
  9687  0C0A  1C0C               	btfss	12,0	;volatile
  9688  0C0B  2C0F               	goto	i1l426
  9689                           
  9690                           ;MCU_B1.c: 126: TMR1_ISR();
  9691  0C0C  158A  23C1  158A   	fcall	_TMR1_ISR
  9692  0C0F                     i1l426:	
  9693                           ;MCU_B1.c: 127: }
  9694                           ;MCU_B1.c: 148: return;
  9695                           
  9696  0C0F  0873               	movf	??_ISR+3,w
  9697  0C10  1283               	bcf	3,5	;RP0=0, select bank0
  9698  0C11  1303               	bcf	3,6	;RP1=0, select bank0
  9699  0C12  00FF               	movwf	127
  9700  0C13  0872               	movf	??_ISR+2,w
  9701  0C14  008A               	movwf	10
  9702  0C15  0871               	movf	??_ISR+1,w
  9703  0C16  0084               	movwf	4
  9704  0C17  0E70               	swapf	??_ISR^(0+-128),w
  9705  0C18  0083               	movwf	3
  9706  0C19  0EFE               	swapf	126,f
  9707  0C1A  0E7E               	swapf	126,w
  9708  0C1B  0009               	retfie
  9709  0C1C                     __end_of_ISR:	
  9710                           
  9711                           	psect	intentry
  9712  0004                     __pintentry:	
  9713                           ;incstack = 0
  9714                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  9715                           
  9716  0004                     interrupt_function:	
  9717  007E                     saved_w	set	btemp
  9718  0004  00FE               	movwf	btemp
  9719  0005  0E03               	swapf	3,w
  9720  0006  00F0               	movwf	??_ISR
  9721  0007  0804               	movf	4,w
  9722  0008  00F1               	movwf	??_ISR+1
  9723  0009  080A               	movf	10,w
  9724  000A  00F2               	movwf	??_ISR+2
  9725  000B  1283               	bcf	3,5	;RP0=0, select bank0
  9726  000C  1303               	bcf	3,6	;RP1=0, select bank0
  9727  000D  087F               	movf	btemp+1,w
  9728  000E  00F3               	movwf	??_ISR+3
  9729  000F  158A  2C04         	ljmp	_ISR
  9730                           
  9731                           	psect	text66
  9732  0BC1                     __ptext66:	
  9733 ;; *************** function _TMR1_ISR *****************
  9734 ;; Defined at:
  9735 ;;		line 236 in file "../src/MCU_B1.c"
  9736 ;; Parameters:    Size  Location     Type
  9737 ;;		None
  9738 ;; Auto vars:     Size  Location     Type
  9739 ;;		None
  9740 ;; Return value:  Size  Location     Type
  9741 ;;		None               void
  9742 ;; Registers used:
  9743 ;;		wreg, status,2
  9744 ;; Tracked objects:
  9745 ;;		On entry : 0/0
  9746 ;;		On exit  : 0/0
  9747 ;;		Unchanged: 0/0
  9748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9749 ;;      Params:         0       0       0       0
  9750 ;;      Locals:         0       0       0       0
  9751 ;;      Temps:          0       0       0       0
  9752 ;;      Totals:         0       0       0       0
  9753 ;;Total ram usage:        0 bytes
  9754 ;; Hardware stack levels used:    1
  9755 ;; This function calls:
  9756 ;;		Nothing
  9757 ;; This function is called by:
  9758 ;;		_ISR
  9759 ;; This function uses a non-reentrant model
  9760 ;;
  9761                           
  9762                           
  9763                           ;psect for function _TMR1_ISR
  9764  0BC1                     _TMR1_ISR:	
  9765                           
  9766                           ;MCU_B1.c: 268: Timer1.Count++;
  9767                           
  9768                           ;incstack = 0
  9769                           ; Regs used in _TMR1_ISR: [wreg+status,2]
  9770  0BC1  3001               	movlw	1
  9771  0BC2  1283               	bcf	3,5	;RP0=0, select bank0
  9772  0BC3  1303               	bcf	3,6	;RP1=0, select bank0
  9773  0BC4  07B3               	addwf	_Timer1+1,f
  9774  0BC5  1803               	skipnc
  9775  0BC6  0AB4               	incf	_Timer1+2,f
  9776  0BC7  3000               	movlw	0
  9777  0BC8  07B4               	addwf	_Timer1+2,f
  9778                           
  9779                           ;MCU_B1.c: 269: if (Timer1.Count == (int)(20*10)) {
  9780  0BC9  30C8               	movlw	200
  9781  0BCA  0633               	xorwf	_Timer1+1,w
  9782  0BCB  0434               	iorwf	_Timer1+2,w
  9783  0BCC  1D03               	skipz
  9784  0BCD  2BD1               	goto	i1l3705
  9785                           
  9786                           ;MCU_B1.c: 270: Timer1.Count = 0;
  9787  0BCE  01B3               	clrf	_Timer1+1
  9788  0BCF  01B4               	clrf	_Timer1+2
  9789                           
  9790                           ;MCU_B1.c: 271: Timer1.Timeout = 1;
  9791  0BD0  1432               	bsf	_Timer1,0
  9792  0BD1                     i1l3705:	
  9793                           
  9794                           ;MCU_B1.c: 272: }
  9795                           ;MCU_B1.c: 274: TMR1H = (int)((65536-1480)/256);
  9796  0BD1  30FA               	movlw	250
  9797  0BD2  008F               	movwf	15	;volatile
  9798                           
  9799                           ;MCU_B1.c: 275: TMR1L = (int)((65536-1480)%256);
  9800  0BD3  3038               	movlw	56
  9801  0BD4  008E               	movwf	14	;volatile
  9802                           
  9803                           ;MCU_B1.c: 276: TMR1IF = 0;
  9804  0BD5  100C               	bcf	12,0	;volatile
  9805  0BD6  0008               	return
  9806  0BD7                     __end_of_TMR1_ISR:	
  9807  007E                     btemp	set	126	;btemp
  9808  007E                     wtemp	set	126
  9809  007E                     wtemp0	set	126
  9810  0080                     wtemp1	set	128
  9811  0082                     wtemp2	set	130
  9812  0084                     wtemp3	set	132
  9813  0086                     wtemp4	set	134
  9814  0088                     wtemp5	set	136
  9815  007F                     wtemp6	set	127
  9816  007E                     ttemp	set	126
  9817  007E                     ttemp0	set	126
  9818  0081                     ttemp1	set	129
  9819  0084                     ttemp2	set	132
  9820  0087                     ttemp3	set	135
  9821  007F                     ttemp4	set	127
  9822  007E                     ltemp	set	126
  9823  007E                     ltemp0	set	126
  9824  0082                     ltemp1	set	130
  9825  0086                     ltemp2	set	134
  9826  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         119
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     23      68
    BANK1            80      0      70
    BANK2            16      0       0

Pointer List with Targets:

    Lights	PTR struct Lights size(1) Largest target is 5
		 -> NULL(NULL[0]), Lights1(BANK0[5]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarLED2(BANK0[4]), VarLED1(BANK0[4]), 


Critical Paths under _main in COMMON

    _getTemp_AD->_getAD
    _getPIR_AD->_getAD
    _getLoad_AD->_getAD
    _getCDS_AD->_getAD
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_getMain_All_Error_Status
    _setTemp_Main->_getMain_All_LightsStatus
    _setSYSC_Main->_getMain_All_Error_Status
    _Mcu_Initialization->_WDT_Set
    _Load_Main->___wmul
    _Load_Main->_getMain_Lights_Count
    _Load_Main->_setLoad_AH_AL_Restore
    _Load_Initialization->_setLoad_AH_AL_Restore
    _setLights_Main->_LightsPointSelect
    _setLights_Main->_getLights_Allow_Condition
    _getLights_Allow_Condition->_getLoad_OK
    _Lights_Control->_LightsPointSelect
    _setLights_Initialization->_LightsPointSelect
    _setLED_Initialization->_LedPointSelect
    _setLights_SwOn->_LightsPointSelect
    _getLights_Status->_LightsPointSelect
    _setLights_SwOff->_LightsPointSelect
    _setLights_Trigger->_LightsPointSelect
    _setLED->_LedPointSelect

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_PIR_Main
    _getPIR_AD->___awdiv
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_getMain_All_Error_Status
    _setSYSC_Main->_getMain_All_Error_Status
    _PIR_Main->_getMain_All_Error_Status
    _Load_Main->___lwdiv
    _Lights_Main->_Lights_Control
    _setLights_Main->_setLights
    _setLights->_setLED
    _Lights_Control->___awdiv
    _Lights_Initialization->_setLights_Initialization
    _LED_Main->_setPIRLED_Main
    _setPIRLED_Main->_setLED
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Exception_Main->_getMain_All_Error_Status
    _setLights_SwOn->_setLights_Trigger
    _setLights_SwOff->_setLights_Trigger

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4   25295
                                             18 BANK0      5     1      4
                 _CDS_Initialization
                           _CDS_Main
                  _DetectSYSC_Signal
                     _Exception_Main
                 _LED_Initialization
                           _LED_Main
              _Lights_Initialization
                        _Lights_Main
                _Load_Initialization
                          _Load_Main
                 _Mcu_Initialization
                 _PIR_Initialization
                           _PIR_Main
                _SYSC_Initialization
                          _SYSC_Main
                _Temp_Initialization
                          _Temp_Main
                           _WDT_Main
                          _getCDS_AD
                         _getLoad_AD
                          _getPIR_AD
                         _getTemp_AD
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           4     4      0     765
                                              0 BANK0      4     4      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getPIR_AD                                            9     8      1    2906
                                              8 BANK0      9     8      1
                            ___awdiv
                            ___lwdiv
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getLoad_AD                                           7     7      0    1130
                                              0 BANK0      7     7      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getCDS_AD                                            6     5      1     746
                                              0 BANK0      6     5      1
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                2     1      1     601
                                              4 COMMON     2     1      1
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              4 COMMON     1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0     347
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         6     6      0     347
                                              5 COMMON     1     1      0
                                              6 BANK0      5     5      0
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSC_Main                                            0     0      0     206
                       _setSYSC_Main
 ---------------------------------------------------------------------------------
 (2) _setSYSC_Main                                         0     0      0     206
           _getMain_All_Error_Status
 ---------------------------------------------------------------------------------
 (1) _SYSC_Initialization                                  0     0      0       0
             _setSYSC_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSYSC_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIR_Main                                            12    12      0    3936
                                              6 BANK0     12    12      0
                      _getCDS_Status
                   _getLights_Status
           _getMain_All_Error_Status
                             _setLED
                    _setLights_SwOff
                     _setLights_SwOn
 ---------------------------------------------------------------------------------
 (2) _getCDS_Status                                        1     1      0      23
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PIR_Initialization                                   1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Load_Main                                           10    10      0    1943
                                              7 BANK0     10    10      0
                            ___lwdiv
                             ___wmul
                    _getLight_LoadGO
               _getLight_Load_Status
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
               _getMain_Lights_Count
              _setLoad_AH_AL_Restore
 ---------------------------------------------------------------------------------
 (2) _getMain_Lights_Count                                 2     2      0      25
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _getLight_Load_Status                                 1     1      0      23
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getLight_LoadGO                                      1     1      0      23
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     290
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     857
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _Load_Initialization                                  0     0      0      90
              _setLoad_AH_AL_Restore
 ---------------------------------------------------------------------------------
 (2) _setLoad_AH_AL_Restore                                2     2      0      90
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lights_Main                                          0     0      0    4194
                     _Lights_Control
                         _getLoad_OK
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
                     _setLights_Main
 ---------------------------------------------------------------------------------
 (2) _setLights_Main                                       1     1      0    2899
                                              5 BANK0      1     1      0
                  _LightsPointSelect
          _getLights_Allow_Condition
                          _setLights
 ---------------------------------------------------------------------------------
 (3) _setLights                                            3     2      1    2636
                                              2 BANK0      3     2      1
                             _setLED
                     _setLights_Line
 ---------------------------------------------------------------------------------
 (4) _setLights_Line                                       1     1      0      44
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _getLights_Allow_Condition                            4     4      0     108
                                              5 COMMON     1     1      0
                                              0 BANK0      2     2      0
                         _getLoad_OK
 ---------------------------------------------------------------------------------
 (4) _getLoad_OK                                           1     1      0      34
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Lights_Control                                       3     3      0    1031
                                              8 BANK0      3     3      0
                  _LightsPointSelect
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     907
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lights_Initialization                                0     0      0      62
           _setLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLights_Initialization                             1     1      0      62
                                              0 BANK0      1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0    2292
                     _setPIRLED_Main
 ---------------------------------------------------------------------------------
 (2) _setPIRLED_Main                                       2     2      0    2292
                                              2 BANK0      2     2      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    2376
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    2376
                                              2 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Exception_Main                                       9     9      0    4302
                                              6 BANK0      9     9      0
                 _getAll_Lights_Line
                   _getLights_Status
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
                             _setLED
                    _setLights_SwOff
                     _setLights_SwOn
 ---------------------------------------------------------------------------------
 (2) _setLights_SwOn                                       1     1      0     621
                                              3 BANK0      1     1      0
                  _LightsPointSelect
                   _getLights_Status
                  _setLights_Trigger
 ---------------------------------------------------------------------------------
 (3) _getLights_Status                                     2     2      0      96
                                              0 BANK0      2     2      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _setLights_SwOff                                      1     1      0     494
                                              3 BANK0      1     1      0
                  _LightsPointSelect
                  _setLights_Trigger
 ---------------------------------------------------------------------------------
 (3) _setLights_Trigger                                    3     2      1     401
                                              0 BANK0      3     2      1
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _LightsPointSelect                                    2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _setLED                                               2     1      1    2252
                                              0 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (3) _LedPointSelect                                       2     2      0      62
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _getMain_All_LightsStatus                             1     1      0      24
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _getMain_All_Error_Status                             7     7      0     206
                                              4 COMMON     1     1      0
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _getAll_Lights_Line                                   1     1      0      24
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DetectSYSC_Signal                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CDS_Main                                             3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDS_Initialization
   _CDS_Main
   _DetectSYSC_Signal
   _Exception_Main
     _getAll_Lights_Line
     _getLights_Status
       _LightsPointSelect
     _getMain_All_Error_Status
     _getMain_All_LightsStatus
     _setLED
       _LedPointSelect
     _setLights_SwOff
       _LightsPointSelect
       _setLights_Trigger
         _LightsPointSelect
     _setLights_SwOn
       _LightsPointSelect
       _getLights_Status
         _LightsPointSelect
       _setLights_Trigger
         _LightsPointSelect
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setPIRLED_Main
       _setLED
         _LedPointSelect
   _Lights_Initialization
     _setLights_Initialization
       _LightsPointSelect
   _Lights_Main
     _Lights_Control
       _LightsPointSelect
       ___awdiv
     _getLoad_OK
     _getMain_All_Error_Status
     _getMain_All_LightsStatus
     _setLights_Main
       _LightsPointSelect
       _getLights_Allow_Condition
         _getLoad_OK
       _setLights
         _setLED
           _LedPointSelect
         _setLights_Line
   _Load_Initialization
     _setLoad_AH_AL_Restore
   _Load_Main
     ___lwdiv
     ___wmul
     _getLight_LoadGO
     _getLight_Load_Status
     _getMain_All_Error_Status
     _getMain_All_LightsStatus
     _getMain_Lights_Count
     _setLoad_AH_AL_Restore
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _PIR_Initialization
   _PIR_Main
     _getCDS_Status
     _getLights_Status
       _LightsPointSelect
     _getMain_All_Error_Status
     _setLED
       _LedPointSelect
     _setLights_SwOff
       _LightsPointSelect
       _setLights_Trigger
         _LightsPointSelect
     _setLights_SwOn
       _LightsPointSelect
       _getLights_Status
         _LightsPointSelect
       _setLights_Trigger
         _LightsPointSelect
   _SYSC_Initialization
     _setSYSC_Initialization
   _SYSC_Main
     _setSYSC_Main
       _getMain_All_Error_Status
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       _getMain_All_Error_Status
       _getMain_All_LightsStatus
   _WDT_Main
     _WDT_Clearing
   _getCDS_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getLoad_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getPIR_AD
     ___awdiv
     ___lwdiv
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getTemp_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_MainTimer

 _ISR (ROOT)
   _TMR1_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      94       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      44       5       85.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      46       7       87.5%
BITBANK2            10      0       0       8        0.0%
BANK2               10      0       0       9        0.0%
DATA                 0      0      94      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Feb 16 13:38:05 2015

                      _WDT_Clearing 0002           getMain_Lights_Count@count 0074  
                      ___awdiv@sign 0052                      setTemp_Main@AD 0057  
                                fsr 0004                 ___wmul@multiplicand 004F  
                               l117 0D99                                 l254 0B92  
                               l700 040F                                 l621 0606  
                               l710 03E8                                 l702 0266  
                               l711 03E6                                 l703 0262  
                               l704 025C                                 l716 0392  
                               l900 0059                                 l820 0780  
                               l590 0DD9                                 l591 0DF6  
                               l831 077C                                 l906 0091  
                               l826 0726                                 l595 0DF2  
                               l908 00A4                                 l898 020F  
                               l899 008B                                 _GIE 005F  
                               _RB2 0032                                 _LED 0076  
                               _RB3 0033                                 _RA5 002D  
                               _RA6 002E                                 _RA7 002F  
                               _PS0 0408                                 _PS1 0409  
                               _PS2 040A                                 _ISR 0C04  
                               _PSA 040B                                 _WDT 0035  
                 ??_setLights_SwOff 0076                                 _Cmd 0037  
            getAll_Lights_Line@line 0074                                 fsr0 0004  
                               indf 0000                     __end_of_ADC_Set 0ADA  
         __end_of_LightsPointSelect 0B16                    _getLights_Status 0B67  
           __size_of_Lights_Control 0083                                ?_ISR 0070  
                        Load_Main@i 005C                                l1111 0B2A  
                              l1263 0CB6                                l3207 0DD5  
                              l1384 0D12                                l3217 0DED  
                              l3209 0DDD                      _Load_Main$2389 0057  
                              l5021 0353                                l5103 0CB7  
                              l5031 0384                                l3513 0739  
                              l4403 0F46                                l5027 0363  
                              l5131 007B                                l3507 0728  
                              l3515 073C                                l4413 0F53  
                              l5301 05A9                                l5213 016D  
                              l5205 013F                                l3463 0B01  
                              l3199 0DC9                                l4431 0F6E  
                              l4407 0F4A                                l5303 05D8  
                              l5311 05F8                                l4503 0BFC  
                              l5039 03AF                                l4417 0F57  
                              l4601 0F2E                                l5049 03C8  
                              l5233 01D9                                l5217 019F  
                              l4435 0F76                                l4427 0F6A  
                              l5307 05EA                                l4515 06A2  
                              l5251 0209                                l5219 01AE  
                              l3571 0E6A                                l3539 076C  
                              l4611 0C95                                l4453 0F88  
                              l4461 0F94                                l4533 06CD  
                              l4701 0D7F                                l5085 03FC  
                              l5181 00DE                                l3565 0E4F  
                              l3549 077B                                l4551 0704  
                              l4615 0C9B                                l4457 0F8E  
                              l5281 056F                                l4641 07AB  
                              l4537 06E0                                l4529 06C6  
                              l5185 00EA                                l5169 00C7  
                              l4609 0C92                                l5345 0FB5  
                              l5291 05A2                                l5275 0560  
                              l5187 00EB                                l4661 07E5  
                              l4645 07B1                                l4733 0D08  
                              l5197 012B                                l5357 0FD8  
                              l5287 0596                                l4655 07C3  
                              l4575 0EEF                                l4719 0656  
                              l4831 0EB7                                l4911 04BF  
                              l5289 0573                                l4657 07CF  
                              l4649 07B7                                l4593 0F1B  
                              l4585 0EF7                                l4569 0EE4  
                              l4761 0E26                                l4753 0E02  
                              l4921 04ED                                l4905 04A3  
                              l5299 05CC                                l4659 07D7  
                              l4587 0F05                                l4755 0E10  
                              l4827 0EAF                                l4819 0E9B  
                              l4677 0D01                                l4597 0F26  
                              l4765 0E31                                l4941 0543  
                              l4847 0ED3                                l4935 0535  
                              l4927 0509                                l4863 0D49  
                              l3887 0C60                                l4891 047F  
                              l4883 0469                                l4789 0DA4  
                              l4973 0265                                l4957 0246  
                              l4895 048A                                l4887 0474  
                              l4879 045E                                l4995 02C8  
                              l4989 028C               _myMain_Initialization 0A96  
                      __CFG_WDTE$ON 0000                                u3355 0E76  
                              u5135 0BBB                                u5305 0F1C  
                              _PEIE 005E                                u5420 07CC  
                              u6205 02C6                                u6215 031D  
                              u5440 07E2                                u5265 0EFA  
                              u5285 0F06                                u5605 0675  
                              u5295 0F12                                u5705 0E1D  
                              u5715 0E27                                u5635 0D13  
                              u6195 028A                                u5580 0652  
                              u5805 0DB4                                u5565 063E  
                              u5645 0D1A                                u6295 03A7  
                              u5675 0E05                                u6715 01BE  
                              u6645 0109                                u6830 059F  
                              u5695 0E11                                u6655 0121  
                              u6850 05D5                                u6835 057C  
                              u6755 01F6                                u6675 0158  
                              u6855 05B2                                u6695 0191  
                              __CDS 002E             ?_setSYSC_Initialization 0070  
                              _WPUB 0095                                _SYSC 0020  
                              __PIR 00A0                                _Load 00CA  
                              _Temp 0039                                _main 0F9A  
                              btemp 007E                     __end_of_WDT_Set 0B58  
                              ltemp 007E                                start 0011  
                              ttemp 007E                                wtemp 007E  
                  __end_of_CDS_Main 0DBA        __size_of_Temp_Initialization 0003  
                             ??_ISR 0070                   _setLights_Trigger 0C6A  
                     ??_Lights_Main 0076                       __CFG_PLLEN$ON 0000  
                  __end_of_LED_Main 0A9A                  ?_setLights_Trigger 004D  
                  ??_setPIRLED_Main 004F                               ?_main 005F  
                   __end_of___awdiv 0F35                               _ADRES 001E  
                   ___awdiv@divisor 004D                               _T1CON 0010  
                   __end_of___lwdiv 0E38                               i1l426 0C0F  
                   ___awdiv@counter 0051                               _TMR1H 000F  
                             _TMR1L 000E                               _PORTA 0005  
                             _PORTB 0006                               _PORTC 0007  
                             _TRISA 0085                               _TRISB 0086  
                             _TRISC 0087             __end_of_Timeout_Counter 0BC1  
                             _Light 0077                 ??_setLights_Trigger 004E  
                  __end_of_PIR_Main 022D                    __end_of_TMR1_ISR 0BD7  
                  __end_of_TMR1_Set 0B4A                               _getAD 0C85  
    __end_of_setSYSC_Initialization 0AB5      getLights_Allow_Condition@allow 004D  
           __end_of_getLight_LoadGO 0AC0                    __end_of_WDT_Main 0B89  
                     _LightsControl 0079                      __CFG_BOREN$OFF 0000  
      __end_of_getMain_Lights_Count 0B20                               pclath 000A  
                             ltemp0 007E                               ltemp1 0082  
                             ltemp2 0086                               ltemp3 0080  
    __size_of_setLED_Initialization 0012       __end_of_setLED_Initialization 0BAD  
                             ttemp0 007E                               ttemp1 0081  
                             ttemp2 0084                               ttemp3 0087  
                             ttemp4 007F                               status 0003  
                             wtemp0 007E                               wtemp1 0080  
                             wtemp2 0082                               wtemp3 0084  
                             wtemp4 0086                               wtemp5 0088  
                             wtemp6 007F                   getPIR_AD@channel1 005A  
                 getPIR_AD@channel2 0055              ?_setLoad_AH_AL_Restore 0070  
                 setTemp_Main@error 0053                      _setLights_Main 0D56  
                    _setLights_Line 0B2E                     __initialization 0013  
                    _setLights_SwOn 0CE1                  __size_of_SYSC_Main 0003  
         __end_of_setLights_Trigger 0C85                        __end_of_main 1000  
                  __end_of_Fosc_Set 0ABA      getMain_All_LightsStatus@status 0074  
                    _Exception_Main 0545                           ??_ADC_Set 0074  
                            ??_main 0063               PIR_Main@Enable_Switch 005A  
               __end_of_Lights_Main 0CBF          __size_of_LightsPointSelect 000A  
          _getMain_All_LightsStatus 0B03                              ?_getAD 0074  
            ?_myMain_Initialization 0070                              _ADCON0 001F  
                            _ADCON1 009F                    ___awdiv@dividend 004F  
                         ??_WDT_Set 0074                              _ANSELA 0185  
                            _ANSELB 0186            _getMain_All_Error_Status 0DBA  
                            i1l3705 0BD1                              _FVRCON 009D  
            getLights_Status@lights 004D                              _PIRLED 002A  
                            _OSCCON 0090                  __size_of_Load_Main 01EA  
                            _TMR1IE 0460                              _TMR1IF 0060  
                            _IO_Set 0C36                Exception_Main@i_2140 0059  
            getLights_Status@status 004E              __end_of_setLights_Main 0D86  
            __end_of_setLights_Line 0B3C              __end_of_setLights_SwOn 0D06  
      __size_of_SYSC_Initialization 0003          __end_of_Mcu_Initialization 0B67  
                            _Lights 0078                              _Timer1 0032  
       __size_of_CDS_Initialization 0004             ??_Lights_Initialization 0076  
            __end_of_Exception_Main 0607                Exception_Main@lights 0054  
                            ___wmul 0D06                           ??___awdiv 0074  
                         ??___lwdiv 0074                Exception_Main@status 0056  
                            _setLED 0F35                              _myMain 0025  
                  ___awdiv@quotient 0053                  __size_of_Temp_Main 0003  
              Load_Main@LightsCount 005B         __end_of_Load_Initialization 0A9D  
   getLights_Allow_Condition@lights 0070                              saved_w 007E  
                  setLights_SwOn@sw 0050                    ?_Timeout_Counter 0070  
       getMain_Lights_Count@status1 0075                   __end_of_SYSC_Main 0AA3  
                    _Lights_Control 0607             __size_of_LedPointSelect 0012  
                         ?_CDS_Main 0070                  setTemp_Main@TempGO 0054  
                  ?_getLight_LoadGO 0070         __size_of_PIR_Initialization 000B  
           __end_of__initialization 0023                           ?_LED_Main 0070  
                     ?_my_MainTimer 0070                     ?_setLights_Main 0070  
                   ?_setLights_Line 0070                     ?_setLights_SwOn 0070  
                     ?_setSYSC_Main 0070                     _setLights_SwOff 0C1C  
        __size_of_setLights_Trigger 001B                      __pcstackCOMMON 0070  
                __size_of_getCDS_AD 0022                     ?_Exception_Main 0070  
          __end_of_getLights_Status 0B78                       __end_of_getAD 0CA1  
                         ?_PIR_Main 0070                           ?_TMR1_ISR 0070  
     __size_of_getLight_Load_Status 0006                           ?_TMR1_Set 0070  
            setLoad_AH_AL_Restore@i 0075                  _LED_Initialization 0ADA  
                __size_of_getPIR_AD 012E                         _Lights_Main 0CA1  
          _setLights_Initialization 0ACC                _getMain_Lights_Count 0B16  
                         ?_WDT_Main 0070                   __end_of_Load_Main 0417  
        __end_of_set_TimeoutCleared 0ACC                 ?_LED_Initialization 0070  
            __end_of_Lights_Control 068A                             ??_getAD 0075  
               _Temp_Initialization 0AA3                          ??_CDS_Main 004D  
                        __pbssBANK0 0020                          __pbssBANK1 00A0  
                         ?_Fosc_Set 0070         __size_of_getAll_Lights_Line 0009  
                 __end_of_Temp_Main 0AA9                             ?_IO_Set 0070  
                   __CFG_VCAPEN$DIS 0000                      ??_my_MainTimer 0074  
                        ??_LED_Main 0076                      ??_setSYSC_Main 0075  
              ??_LED_Initialization 0076                   LedPointSelect@led 0075  
                        __pmaintext 0F9A          ?_getLights_Allow_Condition 0070  
              ?_Temp_Initialization 0070                PIR_Main@LightsStatus 005E  
                           ?___wmul 004D                          ??_PIR_Main 0053  
                        ??_TMR1_ISR 0070                       ?_setTemp_Main 0070  
                __size_of_setLights 007F                          _getLoad_AD 0E7C  
                        ??_TMR1_Set 0074                          __pintentry 0004  
                        _getLoad_OK 0AE2                             ?_setLED 004D  
           setLights_Trigger@lights 004F               ?_getMain_Lights_Count 0070  
                           _ADC_Set 0AD3                          _getTemp_AD 0D2B  
                        ??_WDT_Main 0074              __size_of_getCDS_Status 0008  
                   ?_Lights_Control 0070                   __end_of_getCDS_AD 0CE1  
                           _WDT_Set 0B4A                       getPIR_AD@VRAD 005C  
                        ??_Fosc_Set 0074                   __end_of_getPIR_AD 0545  
           ??_setLoad_AH_AL_Restore 0074             __end_of_setLights_SwOff 0C36  
    _getLights_Allow_Condition$4224 004E                     __size_of_IO_Set 001A  
                        getCDS_AD@i 0050                          getCDS_AD@j 0051  
                           _Lights1 0040                             _VarLED1 0045  
                           _VarLED2 0049               ??_Temp_Initialization 0074  
                    ??_setTemp_Main 0075                             ___awdiv 0ED8  
                   __size_of___wmul 0025                             ___lwdiv 0DF8  
        ??_getMain_All_LightsStatus 0074                         PIR_Main@cds 0059  
                   __size_of_setLED 0065                             __ptext0 0000  
                           __ptext1 0C50                             __ptext2 0A96  
                           __ptext3 0D2B                             __ptext4 0417  
                           __ptext5 0E7C                             __ptext6 0CBF  
                           __ptext7 0C85                             __ptext8 0AC6  
                           __ptext9 0BAD                          getPIR_AD@i 005D  
                        getPIR_AD@j 0059                        __size_of_ISR 0018  
        ??_getMain_All_Error_Status 0074                 _SYSC_Initialization 0A9D  
           ??_myMain_Initialization 0074            ??_setTemp_Initialization 0074  
                    _LedPointSelect 0B89                     getTemp_AD@ADRES 0050  
                           clrloop0 0AF3                   __end_of_setLights 0709  
              end_of_initialization 0023                       _getCDS_Status 0AEA  
              ?_SYSC_Initialization 0070               _setLED_Initialization 0B9B  
                 setLights_SwOff@sw 0050                         ?_getLoad_AD 0070  
    __size_of_Lights_Initialization 0004                         ?_getLoad_OK 0070  
            ??_getMain_Lights_Count 0074       __end_of_Lights_Initialization 0AB1  
                       ?_getTemp_AD 0070            setLED_Initialization@led 004F  
           setTemp_Main@DangerValue 0056                  _Mcu_Initialization 0B58  
              __end_of_my_MainTimer 0C6A                __end_of_setSYSC_Main 0E7C  
            __end_of_LedPointSelect 0B9B            Load_Main@ErrorCountValue 0059  
               setPIRLED_Main@count 0050                 ?_Mcu_Initialization 0070  
           __size_of_setPIRLED_Main 0071                    ??_setLights_Main 0076  
                  ??_setLights_Line 0074                setLights_Main@lights 0052  
                  ??_setLights_SwOn 0076                           _SYSC_Main 0AA0  
   getMain_All_Error_Status@command 0051                   __size_of_CDS_Main 0034  
                    ?_getCDS_Status 0070                    ?_setLights_SwOff 0070  
             ??_SYSC_Initialization 0074                    ??_Exception_Main 0053  
                    __end_of_IO_Set 0C50          __end_of_CDS_Initialization 0AAD  
        ??_setLights_Initialization 0076                   __size_of_LED_Main 0003  
              ??_Mcu_Initialization 0075                       ?_WDT_Clearing 0070  
                 ?_getLights_Status 0070                        ?_Lights_Main 0070  
                    __end_of___wmul 0D2B                   __size_of_PIR_Main 0207  
                 __size_of_TMR1_ISR 0016                  ??_getLights_Status 0076  
                 __size_of_TMR1_Set 000E                      __end_of_setLED 0F9A  
          ??_setSYSC_Initialization 0074                   __size_of_WDT_Main 0011  
               start_initialization 0013                     ?_LedPointSelect 0070  
              setLights_Line@lights 0074                           _Load_Main 022D  
                       __end_of_ISR 0C1C          __end_of_PIR_Initialization 0800  
      __size_of_Load_Initialization 0003        __end_of_getLight_Load_Status 0AC6  
   __size_of_setTemp_Initialization 0001                 getCDS_Status@status 0074  
              __end_of_setTemp_Main 0784                 __size_of_getLoad_AD 005C  
               __size_of_getLoad_OK 0008                          ?_SYSC_Main 0070  
                _set_TimeoutCleared 0AC6                            ??_IO_Set 0074  
          __size_of_Timeout_Counter 0014                 __size_of_getTemp_AD 002B  
            ?_setLED_Initialization 0070                   __size_of_Fosc_Set 0005  
          __size_of_getLight_LoadGO 0006                           _Temp_Main 0AA6  
                   setLights@lights 0051                 ?_set_TimeoutCleared 0070  
                    ??_WDT_Clearing 0074         ??_getLights_Allow_Condition 0075  
               Exception_Main@count 0055                     setLights@status 004F  
               Exception_Main@error 005B                            ??___wmul 0074  
  __end_of_getMain_All_LightsStatus 0B0C                            ??_setLED 0076  
                          ?_ADC_Set 0070                    ??_Lights_Control 0055  
  __end_of_getMain_All_Error_Status 0DF8                         __pbssCOMMON 0076  
           Load_Main@Load_RunStatus 005A                           ___latbits 0001  
                        ?_Load_Main 0070                       __pcstackBANK0 004D  
              ??_set_TimeoutCleared 0074          __end_of_getAll_Lights_Line 0B03  
                          ?_WDT_Set 0070                     ??_getCDS_Status 0074  
                     PIR_Main@error 0058                           _getCDS_AD 0CBF  
    __size_of_setLoad_AH_AL_Restore 0016       __end_of_setLoad_AH_AL_Restore 0BED  
                         _getPIR_AD 0417         __size_of_LED_Initialization 0008  
                   Exception_Main@i 0057                          ?_Temp_Main 0070  
                  ___lwdiv@dividend 004F                      Load_Main@error 0056  
            _setTemp_Initialization 0A95                       _PIR_Main$2856 005B  
                          ?___awdiv 004D               __size_of_my_MainTimer 001A  
                          ?___lwdiv 004D               __size_of_setSYSC_Main 0044  
          setLights_Trigger@command 004D     __size_of_setSYSC_Initialization 0004  
         _getLights_Allow_Condition 0BED      __size_of_myMain_Initialization 0001  
     __end_of_myMain_Initialization 0A97                      __size_of_getAD 001C  
                  ___lwdiv@quotient 0052                      _setPIRLED_Main 0784  
                          _CDS_Main 0D86                         ??_SYSC_Main 0075  
       __end_of_Temp_Initialization 0AA6                   interrupt_function 0004  
                        ?_getCDS_AD 004D                      ___wmul@product 0074  
                          _LED_Main 0A97                           _setLights 068A  
                         clear_ram0 0AF2    __end_of_setLights_Initialization 0AD3  
                      _my_MainTimer 0C50                          ?_getPIR_AD 0055  
                      _setSYSC_Main 0E38                            _GO_nDONE 00F9  
                 ??_Timeout_Counter 0074                PIR_Main@TriggerValue 005D  
                          _PIR_Main 0026                        ??_getLoad_AD 004D  
                          _TMR1_ISR 0BC1                        ??_getLoad_OK 0074  
              _getLight_Load_Status 0AC0                            _TMR1_Set 0B3C  
                 ??_getLight_LoadGO 0074                        ??_getTemp_AD 004D  
                          _WDT_Main 0B78                    __size_of_ADC_Set 0007  
                 ___wmul@multiplier 004D                      getPIR_AD@VRAD1 005B  
              __size_of_Lights_Main 001E               __size_of_setTemp_Main 007B  
                       ??_Load_Main 0054              __end_of_setPIRLED_Main 07F5  
    getMain_All_Error_Status@status 0052                         getAD@adcon0 0075  
                       getAD@adcon1 0074                __end_of_WDT_Clearing 0004  
 __size_of_getMain_All_LightsStatus 0009           ?_getMain_All_LightsStatus 0070  
                          _Fosc_Set 0AB5                    __size_of_WDT_Set 000E  
                __end_of_getLoad_AD 0ED8                  __end_of_getLoad_OK 0AEA  
 __size_of_getMain_All_Error_Status 003E           ?_getMain_All_Error_Status 0070  
                        ?_setLights 004F                  __end_of_getTemp_AD 0D56  
            _setSYSC_Initialization 0AB1                   getLoad_AD@channel 004F  
                 _DetectSYSC_Signal 0B20                            _SwDetect 0038  
                       ??_Temp_Main 0076       _getMain_All_Error_Status$2127 004D  
     _getMain_All_Error_Status$2128 004F                 _Load_Initialization 0A9A  
                ?_DetectSYSC_Signal 0070                           setLED@led 004E  
             ?_getLight_Load_Status 0070                        _setTemp_Main 0709  
                  __size_of___awdiv 005D      getLight_Load_Status@loadstatus 0074  
                  __size_of___lwdiv 0040                    ??_LedPointSelect 0074  
     __size_of_getMain_Lights_Count 000A                 ??_DetectSYSC_Signal 0074  
                _CDS_Initialization 0AA9               _Lights_Initialization 0AAD  
                 getTemp_AD@channel 004F                     ?_setPIRLED_Main 0070  
                   ___lwdiv@divisor 004D                ?_Load_Initialization 0070  
               ?_CDS_Initialization 0070                     ___lwdiv@counter 0051  
                          __ptext10 0B78                            __ptext11 0002  
                          __ptext20 0026                            __ptext12 0AA6  
                          __ptext21 0AEA                            __ptext13 0709  
                          __ptext30 0B16                            __ptext22 07F5  
                          __ptext14 0AA3                            __ptext31 0AC0  
                          __ptext23 0B58                            __ptext15 0A95  
                          __ptext40 0B2E                            __ptext32 0ABA  
                          __ptext24 0B4A                            __ptext16 0AA0  
                          __ptext41 0BED                            __ptext33 0D06  
                          __ptext25 0B3C                            __ptext17 0E38  
                          __ptext50 0B9B                            __ptext42 0AE2  
                          __ptext34 0DF8                            __ptext26 0C36  
                          __ptext18 0A9D                            __ptext51 0545  
                          __ptext43 0607                            __ptext35 0A9A  
                          __ptext27 0AB5                            __ptext19 0AB1  
                          __ptext60 0DBA                            __ptext52 0CE1  
                          __ptext44 0ED8                            __ptext36 0BD7  
                          __ptext28 0AD3                            __ptext61 0AFA  
                          __ptext53 0B67                            __ptext45 0AAD  
                          __ptext37 0CA1                            __ptext29 022D  
                          __ptext62 0B20                            __ptext54 0C1C  
                          __ptext46 0ACC                            __ptext38 0D56  
                          __ptext63 0D86                            __ptext55 0C6A  
                          __ptext47 0A97                            __ptext39 068A  
                          __ptext64 0AA9                            __ptext56 0B0C  
                          __ptext48 0784                            __ptext65 0C04  
                          __ptext57 0F35                            __ptext49 0ADA  
                          __ptext66 0BC1                            __ptext58 0B89  
                          __ptext59 0B03           __size_of_getLights_Status 0011  
       __end_of_SYSC_Initialization 0AA0             ??_setLED_Initialization 0076  
                       ??_getCDS_AD 004E                       setLED@command 004D  
         __end_of_DetectSYSC_Signal 0B2E                       __size_of_main 0066  
                       ??_getPIR_AD 0056                  _PIR_Initialization 07F5  
              ??_CDS_Initialization 0074         __size_of_Mcu_Initialization 000F  
          __size_of_setLights_SwOff 001A                        getLoad_OK@ok 0074  
               ?_PIR_Initialization 0070                            main@argc 005F  
                          main@argv 0061   __size_of_setLights_Initialization 0007  
         ?_setLights_Initialization 0070               ??_Load_Initialization 0076  
              Lights_Control@lights 0057                ??_PIR_Initialization 0074  
                          intlevel1 0000  __size_of_getLights_Allow_Condition 0017  
             setTemp_Main@SafeValue 0055                         ??_setLights 0050  
           ?_setTemp_Initialization 0070             LightsPointSelect@lights 0075  
                _getAll_Lights_Line 0AFA                     getLoad_AD@ADRES 0052  
            ??_getLight_Load_Status 0074                         getLoad_AD@i 0053  
                       getLoad_AD@j 0051                         getLoad_AD@k 0050  
           __size_of_setLights_Main 0030             __size_of_setLights_Line 000E  
           __size_of_setLights_SwOn 0025                 ?_getAll_Lights_Line 0070  
             getLight_LoadGO@loadgo 0074              ?_Lights_Initialization 0070  
           __size_of_Exception_Main 00C2               __size_of_WDT_Clearing 0002  
    setLights_Initialization@lights 004D         __size_of_set_TimeoutCleared 0006  
                 _LightsPointSelect 0B0C                ??_getAll_Lights_Line 0074  
                __CFG_FOSC$INTOSCIO 0000                  ?_LightsPointSelect 0070  
                   _Timeout_Counter 0BAD          __end_of_LED_Initialization 0AE2  
             __end_of_getCDS_Status 0AF2      __end_of_setTemp_Initialization 0A96  
        __size_of_DetectSYSC_Signal 000E                     _getLight_LoadGO 0ABA  
                 getCDS_AD@channel1 0052                   getCDS_AD@channel2 004D  
 __end_of_getLights_Allow_Condition 0C04                 ??_LightsPointSelect 0074  
             _setLoad_AH_AL_Restore 0BD7  
