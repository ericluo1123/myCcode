

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Oct 13 16:44:21 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2
    70                           	psect	text52,local,class=CODE,merge=1,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,delta=2
    73                           	psect	text55,local,class=CODE,merge=1,delta=2
    74                           	psect	text56,local,class=CODE,merge=1,delta=2
    75                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    76                           	psect	text58,local,class=CODE,merge=1,delta=2
    77                           	psect	text59,local,class=CODE,merge=1,delta=2
    78                           	psect	intentry,global,class=CODE,delta=2
    79                           	psect	text61,local,class=CODE,merge=1,delta=2
    80                           	psect	text62,local,class=CODE,merge=1,inline,delta=2
    81                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
    82                           	psect	text64,local,class=CODE,merge=1,inline,delta=2
    83                           	psect	text65,local,class=CODE,merge=1,delta=2
    84                           	psect	text66,local,class=CODE,merge=1,inline,delta=2
    85                           	psect	text67,local,class=CODE,merge=1,inline,delta=2
    86                           	psect	text68,local,class=CODE,merge=1,inline,delta=2
    87                           	psect	text69,local,class=CODE,merge=1,delta=2
    88                           	dabs	1,0x7E,2
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  0010                     	;# 
   105  0011                     	;# 
   106  0012                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  0090                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0095                     	;# 
   123  0096                     	;# 
   124  0097                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  0116                     	;# 
   136  0117                     	;# 
   137  011D                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  018E                     	;# 
   141  0191                     	;# 
   142  0191                     	;# 
   143  0192                     	;# 
   144  0193                     	;# 
   145  0193                     	;# 
   146  0194                     	;# 
   147  0195                     	;# 
   148  0196                     	;# 
   149  0197                     	;# 
   150  0199                     	;# 
   151  019A                     	;# 
   152  019B                     	;# 
   153  019B                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019C                     	;# 
   157  019C                     	;# 
   158  019D                     	;# 
   159  019E                     	;# 
   160  019F                     	;# 
   161  020D                     	;# 
   162  0210                     	;# 
   163  0211                     	;# 
   164  0211                     	;# 
   165  0212                     	;# 
   166  0212                     	;# 
   167  0213                     	;# 
   168  0213                     	;# 
   169  0214                     	;# 
   170  0214                     	;# 
   171  0215                     	;# 
   172  0215                     	;# 
   173  0215                     	;# 
   174  0216                     	;# 
   175  0216                     	;# 
   176  0217                     	;# 
   177  0217                     	;# 
   178  0291                     	;# 
   179  0291                     	;# 
   180  0292                     	;# 
   181  0293                     	;# 
   182  0298                     	;# 
   183  0298                     	;# 
   184  0299                     	;# 
   185  029A                     	;# 
   186  0394                     	;# 
   187  0395                     	;# 
   188  0396                     	;# 
   189  0FE4                     	;# 
   190  0FE5                     	;# 
   191  0FE6                     	;# 
   192  0FE7                     	;# 
   193  0FE8                     	;# 
   194  0FE9                     	;# 
   195  0FEA                     	;# 
   196  0FEB                     	;# 
   197  0FED                     	;# 
   198  0FEE                     	;# 
   199  0FEF                     	;# 
   200  0000                     	;# 
   201  0001                     	;# 
   202  0002                     	;# 
   203  0003                     	;# 
   204  0004                     	;# 
   205  0005                     	;# 
   206  0006                     	;# 
   207  0007                     	;# 
   208  0008                     	;# 
   209  0009                     	;# 
   210  000A                     	;# 
   211  000B                     	;# 
   212  000C                     	;# 
   213  000D                     	;# 
   214  000E                     	;# 
   215  0010                     	;# 
   216  0011                     	;# 
   217  0012                     	;# 
   218  0015                     	;# 
   219  0016                     	;# 
   220  0016                     	;# 
   221  0017                     	;# 
   222  0018                     	;# 
   223  0019                     	;# 
   224  001A                     	;# 
   225  001B                     	;# 
   226  001C                     	;# 
   227  008C                     	;# 
   228  008D                     	;# 
   229  008E                     	;# 
   230  0090                     	;# 
   231  0091                     	;# 
   232  0092                     	;# 
   233  0095                     	;# 
   234  0096                     	;# 
   235  0097                     	;# 
   236  0099                     	;# 
   237  009A                     	;# 
   238  009B                     	;# 
   239  009B                     	;# 
   240  009C                     	;# 
   241  009D                     	;# 
   242  009E                     	;# 
   243  010C                     	;# 
   244  010D                     	;# 
   245  010E                     	;# 
   246  0116                     	;# 
   247  0117                     	;# 
   248  011D                     	;# 
   249  018C                     	;# 
   250  018D                     	;# 
   251  018E                     	;# 
   252  0191                     	;# 
   253  0191                     	;# 
   254  0192                     	;# 
   255  0193                     	;# 
   256  0193                     	;# 
   257  0194                     	;# 
   258  0195                     	;# 
   259  0196                     	;# 
   260  0197                     	;# 
   261  0199                     	;# 
   262  019A                     	;# 
   263  019B                     	;# 
   264  019B                     	;# 
   265  019B                     	;# 
   266  019B                     	;# 
   267  019C                     	;# 
   268  019C                     	;# 
   269  019D                     	;# 
   270  019E                     	;# 
   271  019F                     	;# 
   272  020D                     	;# 
   273  0210                     	;# 
   274  0211                     	;# 
   275  0211                     	;# 
   276  0212                     	;# 
   277  0212                     	;# 
   278  0213                     	;# 
   279  0213                     	;# 
   280  0214                     	;# 
   281  0214                     	;# 
   282  0215                     	;# 
   283  0215                     	;# 
   284  0215                     	;# 
   285  0216                     	;# 
   286  0216                     	;# 
   287  0217                     	;# 
   288  0217                     	;# 
   289  0291                     	;# 
   290  0291                     	;# 
   291  0292                     	;# 
   292  0293                     	;# 
   293  0298                     	;# 
   294  0298                     	;# 
   295  0299                     	;# 
   296  029A                     	;# 
   297  0394                     	;# 
   298  0395                     	;# 
   299  0396                     	;# 
   300  0FE4                     	;# 
   301  0FE5                     	;# 
   302  0FE6                     	;# 
   303  0FE7                     	;# 
   304  0FE8                     	;# 
   305  0FE9                     	;# 
   306  0FEA                     	;# 
   307  0FEB                     	;# 
   308  0FED                     	;# 
   309  0FEE                     	;# 
   310  0FEF                     	;# 
   311  0000                     	;# 
   312  0001                     	;# 
   313  0002                     	;# 
   314  0003                     	;# 
   315  0004                     	;# 
   316  0005                     	;# 
   317  0006                     	;# 
   318  0007                     	;# 
   319  0008                     	;# 
   320  0009                     	;# 
   321  000A                     	;# 
   322  000B                     	;# 
   323  000C                     	;# 
   324  000D                     	;# 
   325  000E                     	;# 
   326  0010                     	;# 
   327  0011                     	;# 
   328  0012                     	;# 
   329  0015                     	;# 
   330  0016                     	;# 
   331  0016                     	;# 
   332  0017                     	;# 
   333  0018                     	;# 
   334  0019                     	;# 
   335  001A                     	;# 
   336  001B                     	;# 
   337  001C                     	;# 
   338  008C                     	;# 
   339  008D                     	;# 
   340  008E                     	;# 
   341  0090                     	;# 
   342  0091                     	;# 
   343  0092                     	;# 
   344  0095                     	;# 
   345  0096                     	;# 
   346  0097                     	;# 
   347  0099                     	;# 
   348  009A                     	;# 
   349  009B                     	;# 
   350  009B                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  010C                     	;# 
   355  010D                     	;# 
   356  010E                     	;# 
   357  0116                     	;# 
   358  0117                     	;# 
   359  011D                     	;# 
   360  018C                     	;# 
   361  018D                     	;# 
   362  018E                     	;# 
   363  0191                     	;# 
   364  0191                     	;# 
   365  0192                     	;# 
   366  0193                     	;# 
   367  0193                     	;# 
   368  0194                     	;# 
   369  0195                     	;# 
   370  0196                     	;# 
   371  0197                     	;# 
   372  0199                     	;# 
   373  019A                     	;# 
   374  019B                     	;# 
   375  019B                     	;# 
   376  019B                     	;# 
   377  019B                     	;# 
   378  019C                     	;# 
   379  019C                     	;# 
   380  019D                     	;# 
   381  019E                     	;# 
   382  019F                     	;# 
   383  020D                     	;# 
   384  0210                     	;# 
   385  0211                     	;# 
   386  0211                     	;# 
   387  0212                     	;# 
   388  0212                     	;# 
   389  0213                     	;# 
   390  0213                     	;# 
   391  0214                     	;# 
   392  0214                     	;# 
   393  0215                     	;# 
   394  0215                     	;# 
   395  0215                     	;# 
   396  0216                     	;# 
   397  0216                     	;# 
   398  0217                     	;# 
   399  0217                     	;# 
   400  0291                     	;# 
   401  0291                     	;# 
   402  0292                     	;# 
   403  0293                     	;# 
   404  0298                     	;# 
   405  0298                     	;# 
   406  0299                     	;# 
   407  029A                     	;# 
   408  0394                     	;# 
   409  0395                     	;# 
   410  0396                     	;# 
   411  0FE4                     	;# 
   412  0FE5                     	;# 
   413  0FE6                     	;# 
   414  0FE7                     	;# 
   415  0FE8                     	;# 
   416  0FE9                     	;# 
   417  0FEA                     	;# 
   418  0FEB                     	;# 
   419  0FED                     	;# 
   420  0FEE                     	;# 
   421  0FEF                     	;# 
   422  0000                     	;# 
   423  0001                     	;# 
   424  0002                     	;# 
   425  0003                     	;# 
   426  0004                     	;# 
   427  0005                     	;# 
   428  0006                     	;# 
   429  0007                     	;# 
   430  0008                     	;# 
   431  0009                     	;# 
   432  000A                     	;# 
   433  000B                     	;# 
   434  000C                     	;# 
   435  000D                     	;# 
   436  000E                     	;# 
   437  0010                     	;# 
   438  0011                     	;# 
   439  0012                     	;# 
   440  0015                     	;# 
   441  0016                     	;# 
   442  0016                     	;# 
   443  0017                     	;# 
   444  0018                     	;# 
   445  0019                     	;# 
   446  001A                     	;# 
   447  001B                     	;# 
   448  001C                     	;# 
   449  008C                     	;# 
   450  008D                     	;# 
   451  008E                     	;# 
   452  0090                     	;# 
   453  0091                     	;# 
   454  0092                     	;# 
   455  0095                     	;# 
   456  0096                     	;# 
   457  0097                     	;# 
   458  0099                     	;# 
   459  009A                     	;# 
   460  009B                     	;# 
   461  009B                     	;# 
   462  009C                     	;# 
   463  009D                     	;# 
   464  009E                     	;# 
   465  010C                     	;# 
   466  010D                     	;# 
   467  010E                     	;# 
   468  0116                     	;# 
   469  0117                     	;# 
   470  011D                     	;# 
   471  018C                     	;# 
   472  018D                     	;# 
   473  018E                     	;# 
   474  0191                     	;# 
   475  0191                     	;# 
   476  0192                     	;# 
   477  0193                     	;# 
   478  0193                     	;# 
   479  0194                     	;# 
   480  0195                     	;# 
   481  0196                     	;# 
   482  0197                     	;# 
   483  0199                     	;# 
   484  019A                     	;# 
   485  019B                     	;# 
   486  019B                     	;# 
   487  019B                     	;# 
   488  019B                     	;# 
   489  019C                     	;# 
   490  019C                     	;# 
   491  019D                     	;# 
   492  019E                     	;# 
   493  019F                     	;# 
   494  020D                     	;# 
   495  0210                     	;# 
   496  0211                     	;# 
   497  0211                     	;# 
   498  0212                     	;# 
   499  0212                     	;# 
   500  0213                     	;# 
   501  0213                     	;# 
   502  0214                     	;# 
   503  0214                     	;# 
   504  0215                     	;# 
   505  0215                     	;# 
   506  0215                     	;# 
   507  0216                     	;# 
   508  0216                     	;# 
   509  0217                     	;# 
   510  0217                     	;# 
   511  0291                     	;# 
   512  0291                     	;# 
   513  0292                     	;# 
   514  0293                     	;# 
   515  0298                     	;# 
   516  0298                     	;# 
   517  0299                     	;# 
   518  029A                     	;# 
   519  0394                     	;# 
   520  0395                     	;# 
   521  0396                     	;# 
   522  0FE4                     	;# 
   523  0FE5                     	;# 
   524  0FE6                     	;# 
   525  0FE7                     	;# 
   526  0FE8                     	;# 
   527  0FE9                     	;# 
   528  0FEA                     	;# 
   529  0FEB                     	;# 
   530  0FED                     	;# 
   531  0FEE                     	;# 
   532  0FEF                     	;# 
   533  0000                     	;# 
   534  0001                     	;# 
   535  0002                     	;# 
   536  0003                     	;# 
   537  0004                     	;# 
   538  0005                     	;# 
   539  0006                     	;# 
   540  0007                     	;# 
   541  0008                     	;# 
   542  0009                     	;# 
   543  000A                     	;# 
   544  000B                     	;# 
   545  000C                     	;# 
   546  000D                     	;# 
   547  000E                     	;# 
   548  0010                     	;# 
   549  0011                     	;# 
   550  0012                     	;# 
   551  0015                     	;# 
   552  0016                     	;# 
   553  0016                     	;# 
   554  0017                     	;# 
   555  0018                     	;# 
   556  0019                     	;# 
   557  001A                     	;# 
   558  001B                     	;# 
   559  001C                     	;# 
   560  008C                     	;# 
   561  008D                     	;# 
   562  008E                     	;# 
   563  0090                     	;# 
   564  0091                     	;# 
   565  0092                     	;# 
   566  0095                     	;# 
   567  0096                     	;# 
   568  0097                     	;# 
   569  0099                     	;# 
   570  009A                     	;# 
   571  009B                     	;# 
   572  009B                     	;# 
   573  009C                     	;# 
   574  009D                     	;# 
   575  009E                     	;# 
   576  010C                     	;# 
   577  010D                     	;# 
   578  010E                     	;# 
   579  0116                     	;# 
   580  0117                     	;# 
   581  011D                     	;# 
   582  018C                     	;# 
   583  018D                     	;# 
   584  018E                     	;# 
   585  0191                     	;# 
   586  0191                     	;# 
   587  0192                     	;# 
   588  0193                     	;# 
   589  0193                     	;# 
   590  0194                     	;# 
   591  0195                     	;# 
   592  0196                     	;# 
   593  0197                     	;# 
   594  0199                     	;# 
   595  019A                     	;# 
   596  019B                     	;# 
   597  019B                     	;# 
   598  019B                     	;# 
   599  019B                     	;# 
   600  019C                     	;# 
   601  019C                     	;# 
   602  019D                     	;# 
   603  019E                     	;# 
   604  019F                     	;# 
   605  020D                     	;# 
   606  0210                     	;# 
   607  0211                     	;# 
   608  0211                     	;# 
   609  0212                     	;# 
   610  0212                     	;# 
   611  0213                     	;# 
   612  0213                     	;# 
   613  0214                     	;# 
   614  0214                     	;# 
   615  0215                     	;# 
   616  0215                     	;# 
   617  0215                     	;# 
   618  0216                     	;# 
   619  0216                     	;# 
   620  0217                     	;# 
   621  0217                     	;# 
   622  0291                     	;# 
   623  0291                     	;# 
   624  0292                     	;# 
   625  0293                     	;# 
   626  0298                     	;# 
   627  0298                     	;# 
   628  0299                     	;# 
   629  029A                     	;# 
   630  0394                     	;# 
   631  0395                     	;# 
   632  0396                     	;# 
   633  0FE4                     	;# 
   634  0FE5                     	;# 
   635  0FE6                     	;# 
   636  0FE7                     	;# 
   637  0FE8                     	;# 
   638  0FE9                     	;# 
   639  0FEA                     	;# 
   640  0FEB                     	;# 
   641  0FED                     	;# 
   642  0FEE                     	;# 
   643  0FEF                     	;# 
   644  0000                     	;# 
   645  0001                     	;# 
   646  0002                     	;# 
   647  0003                     	;# 
   648  0004                     	;# 
   649  0005                     	;# 
   650  0006                     	;# 
   651  0007                     	;# 
   652  0008                     	;# 
   653  0009                     	;# 
   654  000A                     	;# 
   655  000B                     	;# 
   656  000C                     	;# 
   657  000D                     	;# 
   658  000E                     	;# 
   659  0010                     	;# 
   660  0011                     	;# 
   661  0012                     	;# 
   662  0015                     	;# 
   663  0016                     	;# 
   664  0016                     	;# 
   665  0017                     	;# 
   666  0018                     	;# 
   667  0019                     	;# 
   668  001A                     	;# 
   669  001B                     	;# 
   670  001C                     	;# 
   671  008C                     	;# 
   672  008D                     	;# 
   673  008E                     	;# 
   674  0090                     	;# 
   675  0091                     	;# 
   676  0092                     	;# 
   677  0095                     	;# 
   678  0096                     	;# 
   679  0097                     	;# 
   680  0099                     	;# 
   681  009A                     	;# 
   682  009B                     	;# 
   683  009B                     	;# 
   684  009C                     	;# 
   685  009D                     	;# 
   686  009E                     	;# 
   687  010C                     	;# 
   688  010D                     	;# 
   689  010E                     	;# 
   690  0116                     	;# 
   691  0117                     	;# 
   692  011D                     	;# 
   693  018C                     	;# 
   694  018D                     	;# 
   695  018E                     	;# 
   696  0191                     	;# 
   697  0191                     	;# 
   698  0192                     	;# 
   699  0193                     	;# 
   700  0193                     	;# 
   701  0194                     	;# 
   702  0195                     	;# 
   703  0196                     	;# 
   704  0197                     	;# 
   705  0199                     	;# 
   706  019A                     	;# 
   707  019B                     	;# 
   708  019B                     	;# 
   709  019B                     	;# 
   710  019B                     	;# 
   711  019C                     	;# 
   712  019C                     	;# 
   713  019D                     	;# 
   714  019E                     	;# 
   715  019F                     	;# 
   716  020D                     	;# 
   717  0210                     	;# 
   718  0211                     	;# 
   719  0211                     	;# 
   720  0212                     	;# 
   721  0212                     	;# 
   722  0213                     	;# 
   723  0213                     	;# 
   724  0214                     	;# 
   725  0214                     	;# 
   726  0215                     	;# 
   727  0215                     	;# 
   728  0215                     	;# 
   729  0216                     	;# 
   730  0216                     	;# 
   731  0217                     	;# 
   732  0217                     	;# 
   733  0291                     	;# 
   734  0291                     	;# 
   735  0292                     	;# 
   736  0293                     	;# 
   737  0298                     	;# 
   738  0298                     	;# 
   739  0299                     	;# 
   740  029A                     	;# 
   741  0394                     	;# 
   742  0395                     	;# 
   743  0396                     	;# 
   744  0FE4                     	;# 
   745  0FE5                     	;# 
   746  0FE6                     	;# 
   747  0FE7                     	;# 
   748  0FE8                     	;# 
   749  0FE9                     	;# 
   750  0FEA                     	;# 
   751  0FEB                     	;# 
   752  0FED                     	;# 
   753  0FEE                     	;# 
   754  0FEF                     	;# 
   755  0000                     	;# 
   756  0001                     	;# 
   757  0002                     	;# 
   758  0003                     	;# 
   759  0004                     	;# 
   760  0005                     	;# 
   761  0006                     	;# 
   762  0007                     	;# 
   763  0008                     	;# 
   764  0009                     	;# 
   765  000A                     	;# 
   766  000B                     	;# 
   767  000C                     	;# 
   768  000D                     	;# 
   769  000E                     	;# 
   770  0010                     	;# 
   771  0011                     	;# 
   772  0012                     	;# 
   773  0015                     	;# 
   774  0016                     	;# 
   775  0016                     	;# 
   776  0017                     	;# 
   777  0018                     	;# 
   778  0019                     	;# 
   779  001A                     	;# 
   780  001B                     	;# 
   781  001C                     	;# 
   782  008C                     	;# 
   783  008D                     	;# 
   784  008E                     	;# 
   785  0090                     	;# 
   786  0091                     	;# 
   787  0092                     	;# 
   788  0095                     	;# 
   789  0096                     	;# 
   790  0097                     	;# 
   791  0099                     	;# 
   792  009A                     	;# 
   793  009B                     	;# 
   794  009B                     	;# 
   795  009C                     	;# 
   796  009D                     	;# 
   797  009E                     	;# 
   798  010C                     	;# 
   799  010D                     	;# 
   800  010E                     	;# 
   801  0116                     	;# 
   802  0117                     	;# 
   803  011D                     	;# 
   804  018C                     	;# 
   805  018D                     	;# 
   806  018E                     	;# 
   807  0191                     	;# 
   808  0191                     	;# 
   809  0192                     	;# 
   810  0193                     	;# 
   811  0193                     	;# 
   812  0194                     	;# 
   813  0195                     	;# 
   814  0196                     	;# 
   815  0197                     	;# 
   816  0199                     	;# 
   817  019A                     	;# 
   818  019B                     	;# 
   819  019B                     	;# 
   820  019B                     	;# 
   821  019B                     	;# 
   822  019C                     	;# 
   823  019C                     	;# 
   824  019D                     	;# 
   825  019E                     	;# 
   826  019F                     	;# 
   827  020D                     	;# 
   828  0210                     	;# 
   829  0211                     	;# 
   830  0211                     	;# 
   831  0212                     	;# 
   832  0212                     	;# 
   833  0213                     	;# 
   834  0213                     	;# 
   835  0214                     	;# 
   836  0214                     	;# 
   837  0215                     	;# 
   838  0215                     	;# 
   839  0215                     	;# 
   840  0216                     	;# 
   841  0216                     	;# 
   842  0217                     	;# 
   843  0217                     	;# 
   844  0291                     	;# 
   845  0291                     	;# 
   846  0292                     	;# 
   847  0293                     	;# 
   848  0298                     	;# 
   849  0298                     	;# 
   850  0299                     	;# 
   851  029A                     	;# 
   852  0394                     	;# 
   853  0395                     	;# 
   854  0396                     	;# 
   855  0FE4                     	;# 
   856  0FE5                     	;# 
   857  0FE6                     	;# 
   858  0FE7                     	;# 
   859  0FE8                     	;# 
   860  0FE9                     	;# 
   861  0FEA                     	;# 
   862  0FEB                     	;# 
   863  0FED                     	;# 
   864  0FEE                     	;# 
   865  0FEF                     	;# 
   866  0000                     	;# 
   867  0001                     	;# 
   868  0002                     	;# 
   869  0003                     	;# 
   870  0004                     	;# 
   871  0005                     	;# 
   872  0006                     	;# 
   873  0007                     	;# 
   874  0008                     	;# 
   875  0009                     	;# 
   876  000A                     	;# 
   877  000B                     	;# 
   878  000C                     	;# 
   879  000D                     	;# 
   880  000E                     	;# 
   881  0010                     	;# 
   882  0011                     	;# 
   883  0012                     	;# 
   884  0015                     	;# 
   885  0016                     	;# 
   886  0016                     	;# 
   887  0017                     	;# 
   888  0018                     	;# 
   889  0019                     	;# 
   890  001A                     	;# 
   891  001B                     	;# 
   892  001C                     	;# 
   893  008C                     	;# 
   894  008D                     	;# 
   895  008E                     	;# 
   896  0090                     	;# 
   897  0091                     	;# 
   898  0092                     	;# 
   899  0095                     	;# 
   900  0096                     	;# 
   901  0097                     	;# 
   902  0099                     	;# 
   903  009A                     	;# 
   904  009B                     	;# 
   905  009B                     	;# 
   906  009C                     	;# 
   907  009D                     	;# 
   908  009E                     	;# 
   909  010C                     	;# 
   910  010D                     	;# 
   911  010E                     	;# 
   912  0116                     	;# 
   913  0117                     	;# 
   914  011D                     	;# 
   915  018C                     	;# 
   916  018D                     	;# 
   917  018E                     	;# 
   918  0191                     	;# 
   919  0191                     	;# 
   920  0192                     	;# 
   921  0193                     	;# 
   922  0193                     	;# 
   923  0194                     	;# 
   924  0195                     	;# 
   925  0196                     	;# 
   926  0197                     	;# 
   927  0199                     	;# 
   928  019A                     	;# 
   929  019B                     	;# 
   930  019B                     	;# 
   931  019B                     	;# 
   932  019B                     	;# 
   933  019C                     	;# 
   934  019C                     	;# 
   935  019D                     	;# 
   936  019E                     	;# 
   937  019F                     	;# 
   938  020D                     	;# 
   939  0210                     	;# 
   940  0211                     	;# 
   941  0211                     	;# 
   942  0212                     	;# 
   943  0212                     	;# 
   944  0213                     	;# 
   945  0213                     	;# 
   946  0214                     	;# 
   947  0214                     	;# 
   948  0215                     	;# 
   949  0215                     	;# 
   950  0215                     	;# 
   951  0216                     	;# 
   952  0216                     	;# 
   953  0217                     	;# 
   954  0217                     	;# 
   955  0291                     	;# 
   956  0291                     	;# 
   957  0292                     	;# 
   958  0293                     	;# 
   959  0298                     	;# 
   960  0298                     	;# 
   961  0299                     	;# 
   962  029A                     	;# 
   963  0394                     	;# 
   964  0395                     	;# 
   965  0396                     	;# 
   966  0FE4                     	;# 
   967  0FE5                     	;# 
   968  0FE6                     	;# 
   969  0FE7                     	;# 
   970  0FE8                     	;# 
   971  0FE9                     	;# 
   972  0FEA                     	;# 
   973  0FEB                     	;# 
   974  0FED                     	;# 
   975  0FEE                     	;# 
   976  0FEF                     	;# 
   977  0000                     	;# 
   978  0001                     	;# 
   979  0002                     	;# 
   980  0003                     	;# 
   981  0004                     	;# 
   982  0005                     	;# 
   983  0006                     	;# 
   984  0007                     	;# 
   985  0008                     	;# 
   986  0009                     	;# 
   987  000A                     	;# 
   988  000B                     	;# 
   989  000C                     	;# 
   990  000D                     	;# 
   991  000E                     	;# 
   992  0010                     	;# 
   993  0011                     	;# 
   994  0012                     	;# 
   995  0015                     	;# 
   996  0016                     	;# 
   997  0016                     	;# 
   998  0017                     	;# 
   999  0018                     	;# 
  1000  0019                     	;# 
  1001  001A                     	;# 
  1002  001B                     	;# 
  1003  001C                     	;# 
  1004  008C                     	;# 
  1005  008D                     	;# 
  1006  008E                     	;# 
  1007  0090                     	;# 
  1008  0091                     	;# 
  1009  0092                     	;# 
  1010  0095                     	;# 
  1011  0096                     	;# 
  1012  0097                     	;# 
  1013  0099                     	;# 
  1014  009A                     	;# 
  1015  009B                     	;# 
  1016  009B                     	;# 
  1017  009C                     	;# 
  1018  009D                     	;# 
  1019  009E                     	;# 
  1020  010C                     	;# 
  1021  010D                     	;# 
  1022  010E                     	;# 
  1023  0116                     	;# 
  1024  0117                     	;# 
  1025  011D                     	;# 
  1026  018C                     	;# 
  1027  018D                     	;# 
  1028  018E                     	;# 
  1029  0191                     	;# 
  1030  0191                     	;# 
  1031  0192                     	;# 
  1032  0193                     	;# 
  1033  0193                     	;# 
  1034  0194                     	;# 
  1035  0195                     	;# 
  1036  0196                     	;# 
  1037  0197                     	;# 
  1038  0199                     	;# 
  1039  019A                     	;# 
  1040  019B                     	;# 
  1041  019B                     	;# 
  1042  019B                     	;# 
  1043  019B                     	;# 
  1044  019C                     	;# 
  1045  019C                     	;# 
  1046  019D                     	;# 
  1047  019E                     	;# 
  1048  019F                     	;# 
  1049  020D                     	;# 
  1050  0210                     	;# 
  1051  0211                     	;# 
  1052  0211                     	;# 
  1053  0212                     	;# 
  1054  0212                     	;# 
  1055  0213                     	;# 
  1056  0213                     	;# 
  1057  0214                     	;# 
  1058  0214                     	;# 
  1059  0215                     	;# 
  1060  0215                     	;# 
  1061  0215                     	;# 
  1062  0216                     	;# 
  1063  0216                     	;# 
  1064  0217                     	;# 
  1065  0217                     	;# 
  1066  0291                     	;# 
  1067  0291                     	;# 
  1068  0292                     	;# 
  1069  0293                     	;# 
  1070  0298                     	;# 
  1071  0298                     	;# 
  1072  0299                     	;# 
  1073  029A                     	;# 
  1074  0394                     	;# 
  1075  0395                     	;# 
  1076  0396                     	;# 
  1077  0FE4                     	;# 
  1078  0FE5                     	;# 
  1079  0FE6                     	;# 
  1080  0FE7                     	;# 
  1081  0FE8                     	;# 
  1082  0FE9                     	;# 
  1083  0FEA                     	;# 
  1084  0FEB                     	;# 
  1085  0FED                     	;# 
  1086  0FEE                     	;# 
  1087  0FEF                     	;# 
  1088  0000                     	;# 
  1089  0001                     	;# 
  1090  0002                     	;# 
  1091  0003                     	;# 
  1092  0004                     	;# 
  1093  0005                     	;# 
  1094  0006                     	;# 
  1095  0007                     	;# 
  1096  0008                     	;# 
  1097  0009                     	;# 
  1098  000A                     	;# 
  1099  000B                     	;# 
  1100  000C                     	;# 
  1101  000D                     	;# 
  1102  000E                     	;# 
  1103  0010                     	;# 
  1104  0011                     	;# 
  1105  0012                     	;# 
  1106  0015                     	;# 
  1107  0016                     	;# 
  1108  0016                     	;# 
  1109  0017                     	;# 
  1110  0018                     	;# 
  1111  0019                     	;# 
  1112  001A                     	;# 
  1113  001B                     	;# 
  1114  001C                     	;# 
  1115  008C                     	;# 
  1116  008D                     	;# 
  1117  008E                     	;# 
  1118  0090                     	;# 
  1119  0091                     	;# 
  1120  0092                     	;# 
  1121  0095                     	;# 
  1122  0096                     	;# 
  1123  0097                     	;# 
  1124  0099                     	;# 
  1125  009A                     	;# 
  1126  009B                     	;# 
  1127  009B                     	;# 
  1128  009C                     	;# 
  1129  009D                     	;# 
  1130  009E                     	;# 
  1131  010C                     	;# 
  1132  010D                     	;# 
  1133  010E                     	;# 
  1134  0116                     	;# 
  1135  0117                     	;# 
  1136  011D                     	;# 
  1137  018C                     	;# 
  1138  018D                     	;# 
  1139  018E                     	;# 
  1140  0191                     	;# 
  1141  0191                     	;# 
  1142  0192                     	;# 
  1143  0193                     	;# 
  1144  0193                     	;# 
  1145  0194                     	;# 
  1146  0195                     	;# 
  1147  0196                     	;# 
  1148  0197                     	;# 
  1149  0199                     	;# 
  1150  019A                     	;# 
  1151  019B                     	;# 
  1152  019B                     	;# 
  1153  019B                     	;# 
  1154  019B                     	;# 
  1155  019C                     	;# 
  1156  019C                     	;# 
  1157  019D                     	;# 
  1158  019E                     	;# 
  1159  019F                     	;# 
  1160  020D                     	;# 
  1161  0210                     	;# 
  1162  0211                     	;# 
  1163  0211                     	;# 
  1164  0212                     	;# 
  1165  0212                     	;# 
  1166  0213                     	;# 
  1167  0213                     	;# 
  1168  0214                     	;# 
  1169  0214                     	;# 
  1170  0215                     	;# 
  1171  0215                     	;# 
  1172  0215                     	;# 
  1173  0216                     	;# 
  1174  0216                     	;# 
  1175  0217                     	;# 
  1176  0217                     	;# 
  1177  0291                     	;# 
  1178  0291                     	;# 
  1179  0292                     	;# 
  1180  0293                     	;# 
  1181  0298                     	;# 
  1182  0298                     	;# 
  1183  0299                     	;# 
  1184  029A                     	;# 
  1185  0394                     	;# 
  1186  0395                     	;# 
  1187  0396                     	;# 
  1188  0FE4                     	;# 
  1189  0FE5                     	;# 
  1190  0FE6                     	;# 
  1191  0FE7                     	;# 
  1192  0FE8                     	;# 
  1193  0FE9                     	;# 
  1194  0FEA                     	;# 
  1195  0FEB                     	;# 
  1196  0FED                     	;# 
  1197  0FEE                     	;# 
  1198  0FEF                     	;# 
  1199  0000                     	;# 
  1200  0001                     	;# 
  1201  0002                     	;# 
  1202  0003                     	;# 
  1203  0004                     	;# 
  1204  0005                     	;# 
  1205  0006                     	;# 
  1206  0007                     	;# 
  1207  0008                     	;# 
  1208  0009                     	;# 
  1209  000A                     	;# 
  1210  000B                     	;# 
  1211  000C                     	;# 
  1212  000D                     	;# 
  1213  000E                     	;# 
  1214  0010                     	;# 
  1215  0011                     	;# 
  1216  0012                     	;# 
  1217  0015                     	;# 
  1218  0016                     	;# 
  1219  0016                     	;# 
  1220  0017                     	;# 
  1221  0018                     	;# 
  1222  0019                     	;# 
  1223  001A                     	;# 
  1224  001B                     	;# 
  1225  001C                     	;# 
  1226  008C                     	;# 
  1227  008D                     	;# 
  1228  008E                     	;# 
  1229  0090                     	;# 
  1230  0091                     	;# 
  1231  0092                     	;# 
  1232  0095                     	;# 
  1233  0096                     	;# 
  1234  0097                     	;# 
  1235  0099                     	;# 
  1236  009A                     	;# 
  1237  009B                     	;# 
  1238  009B                     	;# 
  1239  009C                     	;# 
  1240  009D                     	;# 
  1241  009E                     	;# 
  1242  010C                     	;# 
  1243  010D                     	;# 
  1244  010E                     	;# 
  1245  0116                     	;# 
  1246  0117                     	;# 
  1247  011D                     	;# 
  1248  018C                     	;# 
  1249  018D                     	;# 
  1250  018E                     	;# 
  1251  0191                     	;# 
  1252  0191                     	;# 
  1253  0192                     	;# 
  1254  0193                     	;# 
  1255  0193                     	;# 
  1256  0194                     	;# 
  1257  0195                     	;# 
  1258  0196                     	;# 
  1259  0197                     	;# 
  1260  0199                     	;# 
  1261  019A                     	;# 
  1262  019B                     	;# 
  1263  019B                     	;# 
  1264  019B                     	;# 
  1265  019B                     	;# 
  1266  019C                     	;# 
  1267  019C                     	;# 
  1268  019D                     	;# 
  1269  019E                     	;# 
  1270  019F                     	;# 
  1271  020D                     	;# 
  1272  0210                     	;# 
  1273  0211                     	;# 
  1274  0211                     	;# 
  1275  0212                     	;# 
  1276  0212                     	;# 
  1277  0213                     	;# 
  1278  0213                     	;# 
  1279  0214                     	;# 
  1280  0214                     	;# 
  1281  0215                     	;# 
  1282  0215                     	;# 
  1283  0215                     	;# 
  1284  0216                     	;# 
  1285  0216                     	;# 
  1286  0217                     	;# 
  1287  0217                     	;# 
  1288  0291                     	;# 
  1289  0291                     	;# 
  1290  0292                     	;# 
  1291  0293                     	;# 
  1292  0298                     	;# 
  1293  0298                     	;# 
  1294  0299                     	;# 
  1295  029A                     	;# 
  1296  0394                     	;# 
  1297  0395                     	;# 
  1298  0396                     	;# 
  1299  0FE4                     	;# 
  1300  0FE5                     	;# 
  1301  0FE6                     	;# 
  1302  0FE7                     	;# 
  1303  0FE8                     	;# 
  1304  0FE9                     	;# 
  1305  0FEA                     	;# 
  1306  0FEB                     	;# 
  1307  0FED                     	;# 
  1308  0FEE                     	;# 
  1309  0FEF                     	;# 
  1310  0000                     	;# 
  1311  0001                     	;# 
  1312  0002                     	;# 
  1313  0003                     	;# 
  1314  0004                     	;# 
  1315  0005                     	;# 
  1316  0006                     	;# 
  1317  0007                     	;# 
  1318  0008                     	;# 
  1319  0009                     	;# 
  1320  000A                     	;# 
  1321  000B                     	;# 
  1322  000C                     	;# 
  1323  000D                     	;# 
  1324  000E                     	;# 
  1325  0010                     	;# 
  1326  0011                     	;# 
  1327  0012                     	;# 
  1328  0015                     	;# 
  1329  0016                     	;# 
  1330  0016                     	;# 
  1331  0017                     	;# 
  1332  0018                     	;# 
  1333  0019                     	;# 
  1334  001A                     	;# 
  1335  001B                     	;# 
  1336  001C                     	;# 
  1337  008C                     	;# 
  1338  008D                     	;# 
  1339  008E                     	;# 
  1340  0090                     	;# 
  1341  0091                     	;# 
  1342  0092                     	;# 
  1343  0095                     	;# 
  1344  0096                     	;# 
  1345  0097                     	;# 
  1346  0099                     	;# 
  1347  009A                     	;# 
  1348  009B                     	;# 
  1349  009B                     	;# 
  1350  009C                     	;# 
  1351  009D                     	;# 
  1352  009E                     	;# 
  1353  010C                     	;# 
  1354  010D                     	;# 
  1355  010E                     	;# 
  1356  0116                     	;# 
  1357  0117                     	;# 
  1358  011D                     	;# 
  1359  018C                     	;# 
  1360  018D                     	;# 
  1361  018E                     	;# 
  1362  0191                     	;# 
  1363  0191                     	;# 
  1364  0192                     	;# 
  1365  0193                     	;# 
  1366  0193                     	;# 
  1367  0194                     	;# 
  1368  0195                     	;# 
  1369  0196                     	;# 
  1370  0197                     	;# 
  1371  0199                     	;# 
  1372  019A                     	;# 
  1373  019B                     	;# 
  1374  019B                     	;# 
  1375  019B                     	;# 
  1376  019B                     	;# 
  1377  019C                     	;# 
  1378  019C                     	;# 
  1379  019D                     	;# 
  1380  019E                     	;# 
  1381  019F                     	;# 
  1382  020D                     	;# 
  1383  0210                     	;# 
  1384  0211                     	;# 
  1385  0211                     	;# 
  1386  0212                     	;# 
  1387  0212                     	;# 
  1388  0213                     	;# 
  1389  0213                     	;# 
  1390  0214                     	;# 
  1391  0214                     	;# 
  1392  0215                     	;# 
  1393  0215                     	;# 
  1394  0215                     	;# 
  1395  0216                     	;# 
  1396  0216                     	;# 
  1397  0217                     	;# 
  1398  0217                     	;# 
  1399  0291                     	;# 
  1400  0291                     	;# 
  1401  0292                     	;# 
  1402  0293                     	;# 
  1403  0298                     	;# 
  1404  0298                     	;# 
  1405  0299                     	;# 
  1406  029A                     	;# 
  1407  0394                     	;# 
  1408  0395                     	;# 
  1409  0396                     	;# 
  1410  0FE4                     	;# 
  1411  0FE5                     	;# 
  1412  0FE6                     	;# 
  1413  0FE7                     	;# 
  1414  0FE8                     	;# 
  1415  0FE9                     	;# 
  1416  0FEA                     	;# 
  1417  0FEB                     	;# 
  1418  0FED                     	;# 
  1419  0FEE                     	;# 
  1420  0FEF                     	;# 
  1421  0000                     	;# 
  1422  0001                     	;# 
  1423  0002                     	;# 
  1424  0003                     	;# 
  1425  0004                     	;# 
  1426  0005                     	;# 
  1427  0006                     	;# 
  1428  0007                     	;# 
  1429  0008                     	;# 
  1430  0009                     	;# 
  1431  000A                     	;# 
  1432  000B                     	;# 
  1433  000C                     	;# 
  1434  000D                     	;# 
  1435  000E                     	;# 
  1436  0010                     	;# 
  1437  0011                     	;# 
  1438  0012                     	;# 
  1439  0015                     	;# 
  1440  0016                     	;# 
  1441  0016                     	;# 
  1442  0017                     	;# 
  1443  0018                     	;# 
  1444  0019                     	;# 
  1445  001A                     	;# 
  1446  001B                     	;# 
  1447  001C                     	;# 
  1448  008C                     	;# 
  1449  008D                     	;# 
  1450  008E                     	;# 
  1451  0090                     	;# 
  1452  0091                     	;# 
  1453  0092                     	;# 
  1454  0095                     	;# 
  1455  0096                     	;# 
  1456  0097                     	;# 
  1457  0099                     	;# 
  1458  009A                     	;# 
  1459  009B                     	;# 
  1460  009B                     	;# 
  1461  009C                     	;# 
  1462  009D                     	;# 
  1463  009E                     	;# 
  1464  010C                     	;# 
  1465  010D                     	;# 
  1466  010E                     	;# 
  1467  0116                     	;# 
  1468  0117                     	;# 
  1469  011D                     	;# 
  1470  018C                     	;# 
  1471  018D                     	;# 
  1472  018E                     	;# 
  1473  0191                     	;# 
  1474  0191                     	;# 
  1475  0192                     	;# 
  1476  0193                     	;# 
  1477  0193                     	;# 
  1478  0194                     	;# 
  1479  0195                     	;# 
  1480  0196                     	;# 
  1481  0197                     	;# 
  1482  0199                     	;# 
  1483  019A                     	;# 
  1484  019B                     	;# 
  1485  019B                     	;# 
  1486  019B                     	;# 
  1487  019B                     	;# 
  1488  019C                     	;# 
  1489  019C                     	;# 
  1490  019D                     	;# 
  1491  019E                     	;# 
  1492  019F                     	;# 
  1493  020D                     	;# 
  1494  0210                     	;# 
  1495  0211                     	;# 
  1496  0211                     	;# 
  1497  0212                     	;# 
  1498  0212                     	;# 
  1499  0213                     	;# 
  1500  0213                     	;# 
  1501  0214                     	;# 
  1502  0214                     	;# 
  1503  0215                     	;# 
  1504  0215                     	;# 
  1505  0215                     	;# 
  1506  0216                     	;# 
  1507  0216                     	;# 
  1508  0217                     	;# 
  1509  0217                     	;# 
  1510  0291                     	;# 
  1511  0291                     	;# 
  1512  0292                     	;# 
  1513  0293                     	;# 
  1514  0298                     	;# 
  1515  0298                     	;# 
  1516  0299                     	;# 
  1517  029A                     	;# 
  1518  0394                     	;# 
  1519  0395                     	;# 
  1520  0396                     	;# 
  1521  0FE4                     	;# 
  1522  0FE5                     	;# 
  1523  0FE6                     	;# 
  1524  0FE7                     	;# 
  1525  0FE8                     	;# 
  1526  0FE9                     	;# 
  1527  0FEA                     	;# 
  1528  0FEB                     	;# 
  1529  0FED                     	;# 
  1530  0FEE                     	;# 
  1531  0FEF                     	;# 
  1532  0000                     	;# 
  1533  0001                     	;# 
  1534  0002                     	;# 
  1535  0003                     	;# 
  1536  0004                     	;# 
  1537  0005                     	;# 
  1538  0006                     	;# 
  1539  0007                     	;# 
  1540  0008                     	;# 
  1541  0009                     	;# 
  1542  000A                     	;# 
  1543  000B                     	;# 
  1544  000C                     	;# 
  1545  000D                     	;# 
  1546  000E                     	;# 
  1547  0010                     	;# 
  1548  0011                     	;# 
  1549  0012                     	;# 
  1550  0015                     	;# 
  1551  0016                     	;# 
  1552  0016                     	;# 
  1553  0017                     	;# 
  1554  0018                     	;# 
  1555  0019                     	;# 
  1556  001A                     	;# 
  1557  001B                     	;# 
  1558  001C                     	;# 
  1559  008C                     	;# 
  1560  008D                     	;# 
  1561  008E                     	;# 
  1562  0090                     	;# 
  1563  0091                     	;# 
  1564  0092                     	;# 
  1565  0095                     	;# 
  1566  0096                     	;# 
  1567  0097                     	;# 
  1568  0099                     	;# 
  1569  009A                     	;# 
  1570  009B                     	;# 
  1571  009B                     	;# 
  1572  009C                     	;# 
  1573  009D                     	;# 
  1574  009E                     	;# 
  1575  010C                     	;# 
  1576  010D                     	;# 
  1577  010E                     	;# 
  1578  0116                     	;# 
  1579  0117                     	;# 
  1580  011D                     	;# 
  1581  018C                     	;# 
  1582  018D                     	;# 
  1583  018E                     	;# 
  1584  0191                     	;# 
  1585  0191                     	;# 
  1586  0192                     	;# 
  1587  0193                     	;# 
  1588  0193                     	;# 
  1589  0194                     	;# 
  1590  0195                     	;# 
  1591  0196                     	;# 
  1592  0197                     	;# 
  1593  0199                     	;# 
  1594  019A                     	;# 
  1595  019B                     	;# 
  1596  019B                     	;# 
  1597  019B                     	;# 
  1598  019B                     	;# 
  1599  019C                     	;# 
  1600  019C                     	;# 
  1601  019D                     	;# 
  1602  019E                     	;# 
  1603  019F                     	;# 
  1604  020D                     	;# 
  1605  0210                     	;# 
  1606  0211                     	;# 
  1607  0211                     	;# 
  1608  0212                     	;# 
  1609  0212                     	;# 
  1610  0213                     	;# 
  1611  0213                     	;# 
  1612  0214                     	;# 
  1613  0214                     	;# 
  1614  0215                     	;# 
  1615  0215                     	;# 
  1616  0215                     	;# 
  1617  0216                     	;# 
  1618  0216                     	;# 
  1619  0217                     	;# 
  1620  0217                     	;# 
  1621  0291                     	;# 
  1622  0291                     	;# 
  1623  0292                     	;# 
  1624  0293                     	;# 
  1625  0298                     	;# 
  1626  0298                     	;# 
  1627  0299                     	;# 
  1628  029A                     	;# 
  1629  0394                     	;# 
  1630  0395                     	;# 
  1631  0396                     	;# 
  1632  0FE4                     	;# 
  1633  0FE5                     	;# 
  1634  0FE6                     	;# 
  1635  0FE7                     	;# 
  1636  0FE8                     	;# 
  1637  0FE9                     	;# 
  1638  0FEA                     	;# 
  1639  0FEB                     	;# 
  1640  0FED                     	;# 
  1641  0FEE                     	;# 
  1642  0FEF                     	;# 
  1643  0000                     	;# 
  1644  0001                     	;# 
  1645  0002                     	;# 
  1646  0003                     	;# 
  1647  0004                     	;# 
  1648  0005                     	;# 
  1649  0006                     	;# 
  1650  0007                     	;# 
  1651  0008                     	;# 
  1652  0009                     	;# 
  1653  000A                     	;# 
  1654  000B                     	;# 
  1655  000C                     	;# 
  1656  000D                     	;# 
  1657  000E                     	;# 
  1658  0010                     	;# 
  1659  0011                     	;# 
  1660  0012                     	;# 
  1661  0015                     	;# 
  1662  0016                     	;# 
  1663  0016                     	;# 
  1664  0017                     	;# 
  1665  0018                     	;# 
  1666  0019                     	;# 
  1667  001A                     	;# 
  1668  001B                     	;# 
  1669  001C                     	;# 
  1670  008C                     	;# 
  1671  008D                     	;# 
  1672  008E                     	;# 
  1673  0090                     	;# 
  1674  0091                     	;# 
  1675  0092                     	;# 
  1676  0095                     	;# 
  1677  0096                     	;# 
  1678  0097                     	;# 
  1679  0099                     	;# 
  1680  009A                     	;# 
  1681  009B                     	;# 
  1682  009B                     	;# 
  1683  009C                     	;# 
  1684  009D                     	;# 
  1685  009E                     	;# 
  1686  010C                     	;# 
  1687  010D                     	;# 
  1688  010E                     	;# 
  1689  0116                     	;# 
  1690  0117                     	;# 
  1691  011D                     	;# 
  1692  018C                     	;# 
  1693  018D                     	;# 
  1694  018E                     	;# 
  1695  0191                     	;# 
  1696  0191                     	;# 
  1697  0192                     	;# 
  1698  0193                     	;# 
  1699  0193                     	;# 
  1700  0194                     	;# 
  1701  0195                     	;# 
  1702  0196                     	;# 
  1703  0197                     	;# 
  1704  0199                     	;# 
  1705  019A                     	;# 
  1706  019B                     	;# 
  1707  019B                     	;# 
  1708  019B                     	;# 
  1709  019B                     	;# 
  1710  019C                     	;# 
  1711  019C                     	;# 
  1712  019D                     	;# 
  1713  019E                     	;# 
  1714  019F                     	;# 
  1715  020D                     	;# 
  1716  0210                     	;# 
  1717  0211                     	;# 
  1718  0211                     	;# 
  1719  0212                     	;# 
  1720  0212                     	;# 
  1721  0213                     	;# 
  1722  0213                     	;# 
  1723  0214                     	;# 
  1724  0214                     	;# 
  1725  0215                     	;# 
  1726  0215                     	;# 
  1727  0215                     	;# 
  1728  0216                     	;# 
  1729  0216                     	;# 
  1730  0217                     	;# 
  1731  0217                     	;# 
  1732  0291                     	;# 
  1733  0291                     	;# 
  1734  0292                     	;# 
  1735  0293                     	;# 
  1736  0298                     	;# 
  1737  0298                     	;# 
  1738  0299                     	;# 
  1739  029A                     	;# 
  1740  0394                     	;# 
  1741  0395                     	;# 
  1742  0396                     	;# 
  1743  0FE4                     	;# 
  1744  0FE5                     	;# 
  1745  0FE6                     	;# 
  1746  0FE7                     	;# 
  1747  0FE8                     	;# 
  1748  0FE9                     	;# 
  1749  0FEA                     	;# 
  1750  0FEB                     	;# 
  1751  0FED                     	;# 
  1752  0FEE                     	;# 
  1753  0FEF                     	;# 
  1754  0000                     	;# 
  1755  0001                     	;# 
  1756  0002                     	;# 
  1757  0003                     	;# 
  1758  0004                     	;# 
  1759  0005                     	;# 
  1760  0006                     	;# 
  1761  0007                     	;# 
  1762  0008                     	;# 
  1763  0009                     	;# 
  1764  000A                     	;# 
  1765  000B                     	;# 
  1766  000C                     	;# 
  1767  000D                     	;# 
  1768  000E                     	;# 
  1769  0010                     	;# 
  1770  0011                     	;# 
  1771  0012                     	;# 
  1772  0015                     	;# 
  1773  0016                     	;# 
  1774  0016                     	;# 
  1775  0017                     	;# 
  1776  0018                     	;# 
  1777  0019                     	;# 
  1778  001A                     	;# 
  1779  001B                     	;# 
  1780  001C                     	;# 
  1781  008C                     	;# 
  1782  008D                     	;# 
  1783  008E                     	;# 
  1784  0090                     	;# 
  1785  0091                     	;# 
  1786  0092                     	;# 
  1787  0095                     	;# 
  1788  0096                     	;# 
  1789  0097                     	;# 
  1790  0099                     	;# 
  1791  009A                     	;# 
  1792  009B                     	;# 
  1793  009B                     	;# 
  1794  009C                     	;# 
  1795  009D                     	;# 
  1796  009E                     	;# 
  1797  010C                     	;# 
  1798  010D                     	;# 
  1799  010E                     	;# 
  1800  0116                     	;# 
  1801  0117                     	;# 
  1802  011D                     	;# 
  1803  018C                     	;# 
  1804  018D                     	;# 
  1805  018E                     	;# 
  1806  0191                     	;# 
  1807  0191                     	;# 
  1808  0192                     	;# 
  1809  0193                     	;# 
  1810  0193                     	;# 
  1811  0194                     	;# 
  1812  0195                     	;# 
  1813  0196                     	;# 
  1814  0197                     	;# 
  1815  0199                     	;# 
  1816  019A                     	;# 
  1817  019B                     	;# 
  1818  019B                     	;# 
  1819  019B                     	;# 
  1820  019B                     	;# 
  1821  019C                     	;# 
  1822  019C                     	;# 
  1823  019D                     	;# 
  1824  019E                     	;# 
  1825  019F                     	;# 
  1826  020D                     	;# 
  1827  0210                     	;# 
  1828  0211                     	;# 
  1829  0211                     	;# 
  1830  0212                     	;# 
  1831  0212                     	;# 
  1832  0213                     	;# 
  1833  0213                     	;# 
  1834  0214                     	;# 
  1835  0214                     	;# 
  1836  0215                     	;# 
  1837  0215                     	;# 
  1838  0215                     	;# 
  1839  0216                     	;# 
  1840  0216                     	;# 
  1841  0217                     	;# 
  1842  0217                     	;# 
  1843  0291                     	;# 
  1844  0291                     	;# 
  1845  0292                     	;# 
  1846  0293                     	;# 
  1847  0298                     	;# 
  1848  0298                     	;# 
  1849  0299                     	;# 
  1850  029A                     	;# 
  1851  0394                     	;# 
  1852  0395                     	;# 
  1853  0396                     	;# 
  1854  0FE4                     	;# 
  1855  0FE5                     	;# 
  1856  0FE6                     	;# 
  1857  0FE7                     	;# 
  1858  0FE8                     	;# 
  1859  0FE9                     	;# 
  1860  0FEA                     	;# 
  1861  0FEB                     	;# 
  1862  0FED                     	;# 
  1863  0FEE                     	;# 
  1864  0FEF                     	;# 
  1865  0000                     	;# 
  1866  0001                     	;# 
  1867  0002                     	;# 
  1868  0003                     	;# 
  1869  0004                     	;# 
  1870  0005                     	;# 
  1871  0006                     	;# 
  1872  0007                     	;# 
  1873  0008                     	;# 
  1874  0009                     	;# 
  1875  000A                     	;# 
  1876  000B                     	;# 
  1877  000C                     	;# 
  1878  000D                     	;# 
  1879  000E                     	;# 
  1880  0010                     	;# 
  1881  0011                     	;# 
  1882  0012                     	;# 
  1883  0015                     	;# 
  1884  0016                     	;# 
  1885  0016                     	;# 
  1886  0017                     	;# 
  1887  0018                     	;# 
  1888  0019                     	;# 
  1889  001A                     	;# 
  1890  001B                     	;# 
  1891  001C                     	;# 
  1892  008C                     	;# 
  1893  008D                     	;# 
  1894  008E                     	;# 
  1895  0090                     	;# 
  1896  0091                     	;# 
  1897  0092                     	;# 
  1898  0095                     	;# 
  1899  0096                     	;# 
  1900  0097                     	;# 
  1901  0099                     	;# 
  1902  009A                     	;# 
  1903  009B                     	;# 
  1904  009B                     	;# 
  1905  009C                     	;# 
  1906  009D                     	;# 
  1907  009E                     	;# 
  1908  010C                     	;# 
  1909  010D                     	;# 
  1910  010E                     	;# 
  1911  0116                     	;# 
  1912  0117                     	;# 
  1913  011D                     	;# 
  1914  018C                     	;# 
  1915  018D                     	;# 
  1916  018E                     	;# 
  1917  0191                     	;# 
  1918  0191                     	;# 
  1919  0192                     	;# 
  1920  0193                     	;# 
  1921  0193                     	;# 
  1922  0194                     	;# 
  1923  0195                     	;# 
  1924  0196                     	;# 
  1925  0197                     	;# 
  1926  0199                     	;# 
  1927  019A                     	;# 
  1928  019B                     	;# 
  1929  019B                     	;# 
  1930  019B                     	;# 
  1931  019B                     	;# 
  1932  019C                     	;# 
  1933  019C                     	;# 
  1934  019D                     	;# 
  1935  019E                     	;# 
  1936  019F                     	;# 
  1937  020D                     	;# 
  1938  0210                     	;# 
  1939  0211                     	;# 
  1940  0211                     	;# 
  1941  0212                     	;# 
  1942  0212                     	;# 
  1943  0213                     	;# 
  1944  0213                     	;# 
  1945  0214                     	;# 
  1946  0214                     	;# 
  1947  0215                     	;# 
  1948  0215                     	;# 
  1949  0215                     	;# 
  1950  0216                     	;# 
  1951  0216                     	;# 
  1952  0217                     	;# 
  1953  0217                     	;# 
  1954  0291                     	;# 
  1955  0291                     	;# 
  1956  0292                     	;# 
  1957  0293                     	;# 
  1958  0298                     	;# 
  1959  0298                     	;# 
  1960  0299                     	;# 
  1961  029A                     	;# 
  1962  0394                     	;# 
  1963  0395                     	;# 
  1964  0396                     	;# 
  1965  0FE4                     	;# 
  1966  0FE5                     	;# 
  1967  0FE6                     	;# 
  1968  0FE7                     	;# 
  1969  0FE8                     	;# 
  1970  0FE9                     	;# 
  1971  0FEA                     	;# 
  1972  0FEB                     	;# 
  1973  0FED                     	;# 
  1974  0FEE                     	;# 
  1975  0FEF                     	;# 
  1976                           
  1977                           	psect	idataBANK2
  1978  0B2B                     __pidataBANK2:	
  1979                           
  1980                           ;initializer for __product
  1981  0B2B  3463               	retlw	99
  1982  0B2C  3402               	retlw	2
  1983  0B2D  3400               	retlw	0
  1984  0B2E  3400               	retlw	0
  1985  0B2F  3400               	retlw	0
  1986  0B30  3400               	retlw	0
  1987  0B31  3400               	retlw	0
  1988  0B32  3400               	retlw	0
  1989  0B33  3400               	retlw	0
  1990  0B34  3400               	retlw	0
  1991  0B35  3400               	retlw	0
  1992  0B36  3400               	retlw	0
  1993  0B37  34FF               	retlw	255
  1994  0B38  34FF               	retlw	255
  1995  0B39  34FF               	retlw	255
  1996  0B3A  3400               	retlw	0
  1997  0B3B  3400               	retlw	0
  1998  0B3C  3400               	retlw	0
  1999  0B3D  3400               	retlw	0
  2000  0B3E  3400               	retlw	0
  2001  0B3F  3400               	retlw	0
  2002  0B40  3400               	retlw	0
  2003  0B41  3400               	retlw	0
  2004  0B42  3400               	retlw	0
  2005  0B43  3400               	retlw	0
  2006  0B44  3400               	retlw	0
  2007  0B45  3400               	retlw	0
  2008  0B46  3400               	retlw	0
  2009  0B47  3400               	retlw	0
  2010  0B48  3400               	retlw	0
  2011  0B49  3400               	retlw	0
  2012  0B4A  3400               	retlw	0
  2013                           
  2014                           	psect	nvCOMMON
  2015  007C                     __pnvCOMMON:	
  2016  007C                     _Timer0:	
  2017  007C                     	ds	1
  2018  007D                     _WDT:	
  2019  007D                     	ds	1
  2020                           
  2021                           	psect	nvBANK0
  2022  006A                     __pnvBANK0:	
  2023  006A                     _myMain:	
  2024  006A                     	ds	1
  2025  006B                     _product:	
  2026  006B                     	ds	1
  2027  006C                     _Memory:	
  2028  006C                     	ds	1
  2029  000C                     _PORTA	set	12
  2030  000D                     _PORTB	set	13
  2031  000E                     _PORTC	set	14
  2032  0015                     _TMR0	set	21
  2033  005F                     _GIE	set	95
  2034  005C                     _INTE	set	92
  2035  0059                     _INTF	set	89
  2036  005B                     _IOCIE	set	91
  2037  0058                     _IOCIF	set	88
  2038  005E                     _PEIE	set	94
  2039  0060                     _RA0	set	96
  2040  0063                     _RA3	set	99
  2041  0064                     _RA4	set	100
  2042  0066                     _RA6	set	102
  2043  0067                     _RA7	set	103
  2044  0069                     _RB1	set	105
  2045  006B                     _RB3	set	107
  2046  006C                     _RB4	set	108
  2047  006D                     _RB5	set	109
  2048  0075                     _RC5	set	117
  2049  0076                     _RC6	set	118
  2050  0077                     _RC7	set	119
  2051  005D                     _TMR0IE	set	93
  2052  005A                     _TMR0IF	set	90
  2053  009D                     _ADCON0	set	157
  2054  009E                     _ADCON1	set	158
  2055  009C                     _ADRESH	set	156
  2056  009B                     _ADRESL	set	155
  2057  0095                     _OPTION_REG	set	149
  2058  0099                     _OSCCON	set	153
  2059  008C                     _TRISA	set	140
  2060  008D                     _TRISB	set	141
  2061  008E                     _TRISC	set	142
  2062  0097                     _WDTCON	set	151
  2063  04E9                     _GO_nDONE	set	1257
  2064  0117                     _FVRCON	set	279
  2065  010C                     _LATA	set	268
  2066  010D                     _LATB	set	269
  2067  010E                     _LATC	set	270
  2068  018C                     _ANSELA	set	396
  2069  018D                     _ANSELB	set	397
  2070  018E                     _ANSELC	set	398
  2071  0192                     _PMADRH	set	402
  2072  0191                     _PMADRL	set	401
  2073  0196                     _PMCON2	set	406
  2074  0194                     _PMDATH	set	404
  2075  0193                     _PMDATL	set	403
  2076  0CAE                     _CFGS	set	3246
  2077  0CAC                     _FREE	set	3244
  2078  0CAD                     _LWLO	set	3245
  2079  0CA8                     _RD	set	3240
  2080  0CA9                     _WR	set	3241
  2081  0CAA                     _WREN	set	3242
  2082  1068                     _WPUB0	set	4200
  2083  1069                     _WPUB1	set	4201
  2084  106A                     _WPUB2	set	4202
  2085  0396                     _IOCBF	set	918
  2086  0395                     _IOCBN	set	917
  2087  0394                     _IOCBP	set	916
  2088  1CB2                     _IOCBF2	set	7346
  2089                           
  2090                           ; #config settings
  2091  0000                     
  2092                           	psect	cinit
  2093  0018                     start_initialization:	
  2094  0018                     __initialization:	
  2095                           
  2096                           ; Clear objects allocated to COMMON
  2097  0018  01F8               	clrf	__pbssCOMMON& (0+127)
  2098  0019  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  2099  001A  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  2100  001B  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  2101                           
  2102                           ; Clear objects allocated to BANK0
  2103  001C  3056               	movlw	low __pbssBANK0
  2104  001D  0084               	movwf	4
  2105  001E  3000               	movlw	high __pbssBANK0
  2106  001F  0085               	movwf	5
  2107  0020  3014               	movlw	20
  2108  0021  3188  2095  3180   	fcall	clear_ram0
  2109                           
  2110                           ; Clear objects allocated to BANK1
  2111  0024  30A0               	movlw	low __pbssBANK1
  2112  0025  0084               	movwf	4
  2113  0026  3000               	movlw	high __pbssBANK1
  2114  0027  0085               	movwf	5
  2115  0028  304F               	movlw	79
  2116  0029  3188  2095  3180   	fcall	clear_ram0
  2117                           
  2118                           ; Clear objects allocated to BANK2
  2119  002C  3020               	movlw	low __pbssBANK2
  2120  002D  0084               	movwf	4
  2121  002E  3001               	movlw	high __pbssBANK2
  2122  002F  0085               	movwf	5
  2123  0030  3025               	movlw	37
  2124  0031  3188  2095  3180   	fcall	clear_ram0
  2125                           
  2126                           ; Clear objects allocated to BANK3
  2127  0034  30A0               	movlw	low __pbssBANK3
  2128  0035  0084               	movwf	4
  2129  0036  3001               	movlw	high __pbssBANK3
  2130  0037  0085               	movwf	5
  2131  0038  3025               	movlw	37
  2132  0039  3188  2095  3180   	fcall	clear_ram0
  2133                           
  2134                           ; Initialize objects allocated to BANK2
  2135  003C  302B               	movlw	low __pidataBANK2
  2136  003D  0084               	movwf	4
  2137  003E  308B               	movlw	(high __pidataBANK2)| (0+128)
  2138  003F  0085               	movwf	5
  2139  0040  3045               	movlw	low __pdataBANK2
  2140  0041  0086               	movwf	6
  2141  0042  3001               	movlw	high __pdataBANK2
  2142  0043  0087               	movwf	7
  2143  0044  3020               	movlw	32
  2144  0045  3188  208F         	fcall	init_ram
  2145  0047                     end_of_initialization:	
  2146                           ;End of C runtime variable initialization code
  2147                           
  2148  0047                     __end_of__initialization:	
  2149  0047  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  2150  0048  0020               	movlb	0
  2151  0049  318C  2C4F         	ljmp	_main	;jump to C main() function
  2152                           
  2153                           	psect	bssCOMMON
  2154  0078                     __pbssCOMMON:	
  2155  0078                     _DimmerLightsIntr:	
  2156  0078                     	ds	1
  2157  0079                     _DimmerLightsIntrIOC:	
  2158  0079                     	ds	1
  2159  007A                     __WDT:	
  2160  007A                     	ds	2
  2161                           
  2162                           	psect	bssBANK0
  2163  0056                     __pbssBANK0:	
  2164  0056                     _Sw:	
  2165  0056                     	ds	2
  2166  0058                     _Buz:	
  2167  0058                     	ds	1
  2168  0059                     _Dimmer:	
  2169  0059                     	ds	1
  2170  005A                     _DimmerLights:	
  2171  005A                     	ds	1
  2172  005B                     _DimmerLights11:	
  2173  005B                     	ds	1
  2174  005C                     _DimmerLights22:	
  2175  005C                     	ds	1
  2176  005D                     _DimmerLights33:	
  2177  005D                     	ds	1
  2178  005E                     _LED:	
  2179  005E                     	ds	1
  2180  005F                     _VarErrLED:	
  2181  005F                     	ds	4
  2182  0063                     _VarLED1:	
  2183  0063                     	ds	4
  2184  0067                     _Dimmer1:	
  2185  0067                     	ds	3
  2186                           
  2187                           	psect	bssBANK1
  2188  00A0                     __pbssBANK1:	
  2189  00A0                     _DimmerLights1:	
  2190  00A0                     	ds	15
  2191  00AF                     _DimmerLights2:	
  2192  00AF                     	ds	15
  2193  00BE                     _DimmerLights3:	
  2194  00BE                     	ds	15
  2195  00CD                     _Sw1:	
  2196  00CD                     	ds	9
  2197  00D6                     _Sw2:	
  2198  00D6                     	ds	9
  2199  00DF                     _VarTimer0:	
  2200  00DF                     	ds	8
  2201  00E7                     _VarLED2:	
  2202  00E7                     	ds	4
  2203  00EB                     _VarLED3:	
  2204  00EB                     	ds	4
  2205                           
  2206                           	psect	bssBANK2
  2207  0120                     __pbssBANK2:	
  2208  0120                     __myMain:	
  2209  0120                     	ds	16
  2210  0130                     _Buz1:	
  2211  0130                     	ds	12
  2212  013C                     _Sw3:	
  2213  013C                     	ds	9
  2214                           
  2215                           	psect	dataBANK2
  2216  0145                     __pdataBANK2:	
  2217  0145                     __product:	
  2218  0145                     	ds	32
  2219                           
  2220                           	psect	bssBANK3
  2221  01A0                     __pbssBANK3:	
  2222  01A0                     _VarMemory:	
  2223  01A0                     	ds	37
  2224                           
  2225                           	psect	clrtext
  2226  0895                     clear_ram0:	
  2227                           ;	Called with FSR0 containing the base address, and
  2228                           ;	WREG with the size to clear
  2229                           
  2230  0895  0064               	clrwdt	;clear the watchdog before getting into this loop
  2231  0896                     clrloop0:	
  2232  0896  0180               	clrf	0	;clear RAM location pointed to by FSR
  2233  0897  3101               	addfsr 0,1
  2234  0898  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2235  0899  2896               	goto	clrloop0	;have we reached the end yet?
  2236  089A  3400               	retlw	0	;all done for this memory range, return
  2237                           
  2238                           	psect	inittext
  2239  088F                     init_ram:	
  2240  088F  00FE               	movwf	126
  2241  0890                     initloop:	
  2242  0890  0012               	moviw fsr0++
  2243  0891  001E               	movwi fsr1++
  2244  0892  0BFE               	decfsz	126,f
  2245  0893  2890               	goto	initloop
  2246  0894  3400               	retlw	0
  2247                           
  2248                           	psect	cstackCOMMON
  2249  0070                     __pcstackCOMMON:	
  2250  0070                     ?_setDimmerLights_Initialization:	
  2251  0070                     ?_Dimmer_Initialization:	
  2252                           ; 0 bytes @ 0x0
  2253                           
  2254  0070                     ?_setMemory_GO:	
  2255                           ; 0 bytes @ 0x0
  2256                           
  2257  0070                     ?_setDimmerLights_Main:	
  2258                           ; 0 bytes @ 0x0
  2259                           
  2260  0070                     ?_setLED_Initialization:	
  2261                           ; 0 bytes @ 0x0
  2262                           
  2263  0070                     ?_setLED_Main:	
  2264                           ; 0 bytes @ 0x0
  2265                           
  2266  0070                     ?_Fosc_Set:	
  2267                           ; 0 bytes @ 0x0
  2268                           
  2269  0070                     ?_IO_Set:	
  2270                           ; 0 bytes @ 0x0
  2271                           
  2272  0070                     ?_TMR0_Set:	
  2273                           ; 0 bytes @ 0x0
  2274                           
  2275  0070                     ?_ADC_Set:	
  2276                           ; 0 bytes @ 0x0
  2277                           
  2278  0070                     ?_INT_Set:	
  2279                           ; 0 bytes @ 0x0
  2280                           
  2281  0070                     ?_IOC_Set:	
  2282                           ; 0 bytes @ 0x0
  2283                           
  2284  0070                     ?_WDT_Set:	
  2285                           ; 0 bytes @ 0x0
  2286                           
  2287  0070                     ?_IOC_ISR:	
  2288                           ; 0 bytes @ 0x0
  2289                           
  2290  0070                     ?_TMR0_ISR:	
  2291                           ; 0 bytes @ 0x0
  2292                           
  2293  0070                     ?_INT_ISR:	
  2294                           ; 0 bytes @ 0x0
  2295                           
  2296  0070                     ??_INT_ISR:	
  2297                           ; 0 bytes @ 0x0
  2298                           
  2299  0070                     ?_Flash_Memory_Write:	
  2300                           ; 0 bytes @ 0x0
  2301                           
  2302  0070                     ?_Flash_Memory_Modify:	
  2303                           ; 0 bytes @ 0x0
  2304                           
  2305  0070                     ?_WDT_Clearing:	
  2306                           ; 0 bytes @ 0x0
  2307                           
  2308  0070                     ?_myMain_Initialization:	
  2309                           ; 0 bytes @ 0x0
  2310                           
  2311  0070                     ?_Switch_Initialization:	
  2312                           ; 0 bytes @ 0x0
  2313                           
  2314  0070                     ?_my_Main:	
  2315                           ; 0 bytes @ 0x0
  2316                           
  2317  0070                     ?_Switch_Main:	
  2318                           ; 0 bytes @ 0x0
  2319                           
  2320  0070                     ?_setSw_Enable:	
  2321                           ; 0 bytes @ 0x0
  2322                           
  2323  0070                     ?_setSw_Initialization:	
  2324                           ; 0 bytes @ 0x0
  2325                           
  2326  0070                     ?_setSw_Main:	
  2327                           ; 0 bytes @ 0x0
  2328                           
  2329  0070                     ?_Sw_DimmerOnFunc:	
  2330                           ; 0 bytes @ 0x0
  2331                           
  2332  0070                     ?_Sw_DimmerAdjFunc:	
  2333                           ; 0 bytes @ 0x0
  2334                           
  2335  0070                     ?_Sw_DimmerOffFunc:	
  2336                           ; 0 bytes @ 0x0
  2337                           
  2338  0070                     ?_Buzzer_Initialization:	
  2339                           ; 0 bytes @ 0x0
  2340                           
  2341  0070                     ?_Buz_Counter:	
  2342                           ; 0 bytes @ 0x0
  2343                           
  2344  0070                     ??_Buz_Counter:	
  2345                           ; 0 bytes @ 0x0
  2346                           
  2347  0070                     ?_Buzzer_Main:	
  2348                           ; 0 bytes @ 0x0
  2349                           
  2350  0070                     ?_DimmerIntrIOCPointSelect:	
  2351                           ; 0 bytes @ 0x0
  2352                           
  2353  0070                     ??_DimmerIntrIOCPointSelect:	
  2354                           ; 0 bytes @ 0x0
  2355                           
  2356  0070                     ?_setDimmerLights_IntrIOC_GO:	
  2357                           ; 0 bytes @ 0x0
  2358                           
  2359  0070                     ?_DimmerIntrPointSelect:	
  2360                           ; 0 bytes @ 0x0
  2361                           
  2362  0070                     ??_DimmerIntrPointSelect:	
  2363                           ; 0 bytes @ 0x0
  2364                           
  2365  0070                     ?_setDimmerLights_IntrControl:	
  2366                           ; 0 bytes @ 0x0
  2367                           
  2368  0070                     ?_DimmerLightsPointSelect:	
  2369                           ; 0 bytes @ 0x0
  2370                           
  2371  0070                     ?_DimmerLights_Initialization:	
  2372                           ; 0 bytes @ 0x0
  2373                           
  2374  0070                     ?_DimmerLights_Close:	
  2375                           ; 0 bytes @ 0x0
  2376                           
  2377  0070                     ?_DimmerLights_Main:	
  2378                           ; 0 bytes @ 0x0
  2379                           
  2380  0070                     ?_LedPointSelect:	
  2381                           ; 0 bytes @ 0x0
  2382                           
  2383  0070                     ?_LED_Initialization:	
  2384                           ; 0 bytes @ 0x0
  2385                           
  2386  0070                     ?_LED_Main:	
  2387                           ; 0 bytes @ 0x0
  2388                           
  2389  0070                     ?_Mcu_Initialization:	
  2390                           ; 0 bytes @ 0x0
  2391                           
  2392  0070                     ?_ISR:	
  2393                           ; 0 bytes @ 0x0
  2394                           
  2395  0070                     ?_setDimmerReClock:	
  2396                           ; 0 bytes @ 0x0
  2397                           
  2398  0070                     ?_Flash_Memory_Initialization:	
  2399                           ; 0 bytes @ 0x0
  2400                           
  2401  0070                     ?_Flash_Memory_Main:	
  2402                           ; 0 bytes @ 0x0
  2403                           
  2404  0070                     ?_Flash_Memory_Unlock:	
  2405                           ; 0 bytes @ 0x0
  2406                           
  2407  0070                     ?_Flash_Memory_Erasing:	
  2408                           ; 0 bytes @ 0x0
  2409                           
  2410  0070                     ?_WDT_Main:	
  2411                           ; 0 bytes @ 0x0
  2412                           
  2413  0070                     ?_TouchPower:	
  2414                           ; 0 bytes @ 0x0
  2415                           
  2416  0070                     ?_SwPointSelect:	
  2417                           ; 0 bytes @ 0x0
  2418                           
  2419  0070                     ?_getDimmerLights_StatusFlag:	
  2420                           ; 0 bytes @ 0x0
  2421                           
  2422  0070                     ?_Flash_Memory_Read:	
  2423                           ; 1 bytes @ 0x0
  2424                           
  2425  0070                     ?_setPercentValue:	
  2426                           ; 1 bytes @ 0x0
  2427                           
  2428                           
  2429                           ; 1 bytes @ 0x0
  2430  0070                     	ds	1
  2431  0071                     DimmerIntrIOCPointSelect@lights:	
  2432  0071                     DimmerIntrPointSelect@lights:	
  2433                           ; 1 bytes @ 0x1
  2434                           
  2435                           
  2436                           ; 1 bytes @ 0x1
  2437  0071                     	ds	1
  2438  0072                     ??_setDimmerLights_IntrIOC_GO:	
  2439  0072                     ??_setDimmerLights_IntrControl:	
  2440                           ; 0 bytes @ 0x2
  2441                           
  2442  0072                     setDimmerLights_IntrIOC_GO@lights:	
  2443                           ; 0 bytes @ 0x2
  2444                           
  2445                           
  2446                           ; 1 bytes @ 0x2
  2447  0072                     	ds	1
  2448  0073                     ??_IOC_ISR:	
  2449  0073                     ??_setDimmerReClock:	
  2450                           ; 0 bytes @ 0x3
  2451                           
  2452                           
  2453                           ; 0 bytes @ 0x3
  2454  0073                     	ds	3
  2455  0076                     setDimmerLights_IntrControl@lights:	
  2456                           
  2457                           ; 1 bytes @ 0x6
  2458  0076                     	ds	1
  2459  0077                     ??_TMR0_ISR:	
  2460  0077                     ??_ISR:	
  2461                           ; 0 bytes @ 0x7
  2462                           
  2463                           
  2464                           ; 0 bytes @ 0x7
  2465  0077                     	ds	1
  2466                           
  2467                           	psect	cstackBANK0
  2468  0020                     __pcstackBANK0:	
  2469  0020                     ??_Dimmer_Initialization:	
  2470  0020                     ??_getDimmerLights_StatusFlag:	
  2471                           ; 0 bytes @ 0x0
  2472                           
  2473  0020                     ??_setMemory_GO:	
  2474                           ; 0 bytes @ 0x0
  2475                           
  2476  0020                     ??_Fosc_Set:	
  2477                           ; 0 bytes @ 0x0
  2478                           
  2479  0020                     ??_IO_Set:	
  2480                           ; 0 bytes @ 0x0
  2481                           
  2482  0020                     ??_TMR0_Set:	
  2483                           ; 0 bytes @ 0x0
  2484                           
  2485  0020                     ??_ADC_Set:	
  2486                           ; 0 bytes @ 0x0
  2487                           
  2488  0020                     ??_INT_Set:	
  2489                           ; 0 bytes @ 0x0
  2490                           
  2491  0020                     ??_IOC_Set:	
  2492                           ; 0 bytes @ 0x0
  2493                           
  2494  0020                     ??_WDT_Set:	
  2495                           ; 0 bytes @ 0x0
  2496                           
  2497  0020                     ??_Flash_Memory_Read:	
  2498                           ; 0 bytes @ 0x0
  2499                           
  2500  0020                     ??_Flash_Memory_Write:	
  2501                           ; 0 bytes @ 0x0
  2502                           
  2503  0020                     ??_WDT_Clearing:	
  2504                           ; 0 bytes @ 0x0
  2505                           
  2506  0020                     ??_myMain_Initialization:	
  2507                           ; 0 bytes @ 0x0
  2508                           
  2509  0020                     ??_Buzzer_Initialization:	
  2510                           ; 0 bytes @ 0x0
  2511                           
  2512  0020                     ??_Buzzer_Main:	
  2513                           ; 0 bytes @ 0x0
  2514                           
  2515  0020                     ??_DimmerLightsPointSelect:	
  2516                           ; 0 bytes @ 0x0
  2517                           
  2518  0020                     ??_LedPointSelect:	
  2519                           ; 0 bytes @ 0x0
  2520                           
  2521  0020                     ??_Flash_Memory_Unlock:	
  2522                           ; 0 bytes @ 0x0
  2523                           
  2524  0020                     ??_Flash_Memory_Erasing:	
  2525                           ; 0 bytes @ 0x0
  2526                           
  2527  0020                     ??_WDT_Main:	
  2528                           ; 0 bytes @ 0x0
  2529                           
  2530  0020                     ??_TouchPower:	
  2531                           ; 0 bytes @ 0x0
  2532                           
  2533  0020                     ??_SwPointSelect:	
  2534                           ; 0 bytes @ 0x0
  2535                           
  2536  0020                     ?___awdiv:	
  2537                           ; 0 bytes @ 0x0
  2538                           
  2539  0020                     ?___ftpack:	
  2540                           ; 2 bytes @ 0x0
  2541                           
  2542  0020                     SwPointSelect@sw:	
  2543                           ; 3 bytes @ 0x0
  2544                           
  2545  0020                     ___awdiv@divisor:	
  2546                           ; 1 bytes @ 0x0
  2547                           
  2548  0020                     ___ftpack@arg:	
  2549                           ; 2 bytes @ 0x0
  2550                           
  2551                           
  2552                           ; 3 bytes @ 0x0
  2553  0020                     	ds	1
  2554  0021                     ??_setSw_Enable:	
  2555  0021                     ??_Mcu_Initialization:	
  2556                           ; 0 bytes @ 0x1
  2557                           
  2558  0021                     DimmerLightsPointSelect@lights:	
  2559                           ; 0 bytes @ 0x1
  2560                           
  2561  0021                     getDimmerLights_StatusFlag@Status:	
  2562                           ; 1 bytes @ 0x1
  2563                           
  2564  0021                     LedPointSelect@led:	
  2565                           ; 1 bytes @ 0x1
  2566                           
  2567  0021                     Flash_Memory_Read@i:	
  2568                           ; 1 bytes @ 0x1
  2569                           
  2570  0021                     Flash_Memory_Write@i:	
  2571                           ; 1 bytes @ 0x1
  2572                           
  2573  0021                     setSw_Enable@command:	
  2574                           ; 1 bytes @ 0x1
  2575                           
  2576                           
  2577                           ; 1 bytes @ 0x1
  2578  0021                     	ds	1
  2579  0022                     ??_setDimmerLights_Initialization:	
  2580  0022                     ?_setDimmerLights_Adj:	
  2581                           ; 0 bytes @ 0x2
  2582                           
  2583  0022                     ?_setLED:	
  2584                           ; 0 bytes @ 0x2
  2585                           
  2586  0022                     ??_setLED_Main:	
  2587                           ; 0 bytes @ 0x2
  2588                           
  2589  0022                     ?_setDimmerLights_Switch:	
  2590                           ; 0 bytes @ 0x2
  2591                           
  2592  0022                     ?_setDimmerLights_AdjGo:	
  2593                           ; 0 bytes @ 0x2
  2594                           
  2595  0022                     ?_setDimmerLights_Trigger:	
  2596                           ; 0 bytes @ 0x2
  2597                           
  2598  0022                     ?_setDimmerLights_TriggerAdj:	
  2599                           ; 0 bytes @ 0x2
  2600                           
  2601  0022                     _getDimmerLights_StatusFlag$1562:	
  2602                           ; 0 bytes @ 0x2
  2603                           
  2604  0022                     setDimmerLights_Adj@status:	
  2605                           ; 1 bytes @ 0x2
  2606                           
  2607  0022                     setDimmerLights_Switch@command:	
  2608                           ; 1 bytes @ 0x2
  2609                           
  2610  0022                     setDimmerLights_AdjGo@command:	
  2611                           ; 1 bytes @ 0x2
  2612                           
  2613  0022                     setDimmerLights_Trigger@command:	
  2614                           ; 1 bytes @ 0x2
  2615                           
  2616  0022                     setDimmerLights_TriggerAdj@command:	
  2617                           ; 1 bytes @ 0x2
  2618                           
  2619  0022                     setLED@command:	
  2620                           ; 1 bytes @ 0x2
  2621                           
  2622  0022                     Flash_Memory_Read@address:	
  2623                           ; 1 bytes @ 0x2
  2624                           
  2625  0022                     setMemory_GO@command:	
  2626                           ; 1 bytes @ 0x2
  2627                           
  2628  0022                     ___awdiv@dividend:	
  2629                           ; 1 bytes @ 0x2
  2630                           
  2631                           
  2632                           ; 2 bytes @ 0x2
  2633  0022                     	ds	1
  2634  0023                     ??_setDimmerLights_Adj:	
  2635  0023                     ??_setLED:	
  2636                           ; 0 bytes @ 0x3
  2637                           
  2638  0023                     ??_DimmerLights_Close:	
  2639                           ; 0 bytes @ 0x3
  2640                           
  2641  0023                     ??_setDimmerLights_Switch:	
  2642                           ; 0 bytes @ 0x3
  2643                           
  2644  0023                     ??_setDimmerLights_AdjGo:	
  2645                           ; 0 bytes @ 0x3
  2646                           
  2647  0023                     ??_setDimmerLights_Trigger:	
  2648                           ; 0 bytes @ 0x3
  2649                           
  2650  0023                     ??_setDimmerLights_TriggerAdj:	
  2651                           ; 0 bytes @ 0x3
  2652                           
  2653  0023                     setDimmerLights_Initialization@lights:	
  2654                           ; 0 bytes @ 0x3
  2655                           
  2656  0023                     setDimmerLights_Switch@lights:	
  2657                           ; 1 bytes @ 0x3
  2658                           
  2659  0023                     setDimmerLights_AdjGo@lights:	
  2660                           ; 1 bytes @ 0x3
  2661                           
  2662  0023                     setDimmerLights_Trigger@lights:	
  2663                           ; 1 bytes @ 0x3
  2664                           
  2665  0023                     setDimmerLights_TriggerAdj@lights:	
  2666                           ; 1 bytes @ 0x3
  2667                           
  2668  0023                     setLED@led:	
  2669                           ; 1 bytes @ 0x3
  2670                           
  2671  0023                     Flash_Memory_Read@ret:	
  2672                           ; 1 bytes @ 0x3
  2673                           
  2674  0023                     ___ftpack@exp:	
  2675                           ; 1 bytes @ 0x3
  2676                           
  2677                           
  2678                           ; 1 bytes @ 0x3
  2679  0023                     	ds	1
  2680  0024                     ?_setDimmerLights:	
  2681  0024                     ??_setLED_Initialization:	
  2682                           ; 0 bytes @ 0x4
  2683                           
  2684  0024                     ??_Flash_Memory_Modify:	
  2685                           ; 0 bytes @ 0x4
  2686                           
  2687  0024                     ??_setSw_Initialization:	
  2688                           ; 0 bytes @ 0x4
  2689                           
  2690  0024                     ??_Sw_DimmerAdjFunc:	
  2691                           ; 0 bytes @ 0x4
  2692                           
  2693  0024                     ??_Sw_DimmerOffFunc:	
  2694                           ; 0 bytes @ 0x4
  2695                           
  2696  0024                     ??_DimmerLights_Initialization:	
  2697                           ; 0 bytes @ 0x4
  2698                           
  2699  0024                     ??___awdiv:	
  2700                           ; 0 bytes @ 0x4
  2701                           
  2702  0024                     setDimmerLights@status:	
  2703                           ; 0 bytes @ 0x4
  2704                           
  2705  0024                     setDimmerLights_Adj@lights:	
  2706                           ; 1 bytes @ 0x4
  2707                           
  2708  0024                     setLED_Initialization@led:	
  2709                           ; 1 bytes @ 0x4
  2710                           
  2711  0024                     setLED_Main@led:	
  2712                           ; 1 bytes @ 0x4
  2713                           
  2714  0024                     setSw_Initialization@sw:	
  2715                           ; 1 bytes @ 0x4
  2716                           
  2717  0024                     ___ftpack@sign:	
  2718                           ; 1 bytes @ 0x4
  2719                           
  2720                           
  2721                           ; 1 bytes @ 0x4
  2722  0024                     	ds	1
  2723  0025                     ??_setDimmerLights:	
  2724  0025                     ??_Switch_Initialization:	
  2725                           ; 0 bytes @ 0x5
  2726                           
  2727  0025                     ??___ftpack:	
  2728                           ; 0 bytes @ 0x5
  2729                           
  2730  0025                     ??_LED_Initialization:	
  2731                           ; 0 bytes @ 0x5
  2732                           
  2733  0025                     ??_LED_Main:	
  2734                           ; 0 bytes @ 0x5
  2735                           
  2736  0025                     _Sw_DimmerAdjFunc$4017:	
  2737                           ; 0 bytes @ 0x5
  2738                           
  2739  0025                     ___awdiv@counter:	
  2740                           ; 1 bytes @ 0x5
  2741                           
  2742                           
  2743                           ; 1 bytes @ 0x5
  2744  0025                     	ds	1
  2745  0026                     setDimmerLights@lights:	
  2746  0026                     Flash_Memory_Modify@i:	
  2747                           ; 1 bytes @ 0x6
  2748                           
  2749  0026                     Sw_DimmerOffFunc@sw:	
  2750                           ; 1 bytes @ 0x6
  2751                           
  2752  0026                     _Sw_DimmerAdjFunc$4018:	
  2753                           ; 1 bytes @ 0x6
  2754                           
  2755  0026                     ___awdiv@sign:	
  2756                           ; 1 bytes @ 0x6
  2757                           
  2758                           
  2759                           ; 1 bytes @ 0x6
  2760  0026                     	ds	1
  2761  0027                     ??_Flash_Memory_Main:	
  2762  0027                     _Sw_DimmerAdjFunc$4019:	
  2763                           ; 0 bytes @ 0x7
  2764                           
  2765  0027                     ___awdiv@quotient:	
  2766                           ; 1 bytes @ 0x7
  2767                           
  2768                           
  2769                           ; 2 bytes @ 0x7
  2770  0027                     	ds	1
  2771  0028                     ?___awtoft:	
  2772  0028                     Sw_DimmerAdjFunc@Idle:	
  2773                           ; 3 bytes @ 0x8
  2774                           
  2775  0028                     ___awtoft@c:	
  2776                           ; 1 bytes @ 0x8
  2777                           
  2778                           
  2779                           ; 2 bytes @ 0x8
  2780  0028                     	ds	1
  2781  0029                     ?_setBuz:	
  2782  0029                     Sw_DimmerAdjFunc@sw:	
  2783                           ; 0 bytes @ 0x9
  2784                           
  2785  0029                     setBuz@time:	
  2786                           ; 1 bytes @ 0x9
  2787                           
  2788                           
  2789                           ; 2 bytes @ 0x9
  2790  0029                     	ds	2
  2791  002B                     ??_setBuz:	
  2792  002B                     ??___awtoft:	
  2793                           ; 0 bytes @ 0xB
  2794                           
  2795                           
  2796                           ; 0 bytes @ 0xB
  2797  002B                     	ds	1
  2798  002C                     setBuz@count:	
  2799                           
  2800                           ; 1 bytes @ 0xC
  2801  002C                     	ds	1
  2802  002D                     ??_setDimmerLights_Main:	
  2803  002D                     ??_my_Main:	
  2804                           ; 0 bytes @ 0xD
  2805                           
  2806  002D                     ??_Sw_DimmerOnFunc:	
  2807                           ; 0 bytes @ 0xD
  2808                           
  2809  002D                     ___awtoft@sign:	
  2810                           ; 0 bytes @ 0xD
  2811                           
  2812                           
  2813                           ; 1 bytes @ 0xD
  2814  002D                     	ds	1
  2815  002E                     ?___ftdiv:	
  2816  002E                     _setDimmerLights_Main$1556:	
  2817                           ; 3 bytes @ 0xE
  2818                           
  2819  002E                     _Sw_DimmerOnFunc$4005:	
  2820                           ; 1 bytes @ 0xE
  2821                           
  2822  002E                     ___ftdiv@f2:	
  2823                           ; 1 bytes @ 0xE
  2824                           
  2825                           
  2826                           ; 3 bytes @ 0xE
  2827  002E                     	ds	1
  2828  002F                     _setDimmerLights_Main$1557:	
  2829  002F                     _Sw_DimmerOnFunc$4006:	
  2830                           ; 1 bytes @ 0xF
  2831                           
  2832                           
  2833                           ; 1 bytes @ 0xF
  2834  002F                     	ds	1
  2835  0030                     _setDimmerLights_Main$1558:	
  2836  0030                     _Sw_DimmerOnFunc$4007:	
  2837                           ; 1 bytes @ 0x10
  2838                           
  2839                           
  2840                           ; 1 bytes @ 0x10
  2841  0030                     	ds	1
  2842  0031                     setDimmerLights_Main@clear:	
  2843  0031                     Sw_DimmerOnFunc@Idle:	
  2844                           ; 1 bytes @ 0x11
  2845                           
  2846  0031                     ___ftdiv@f1:	
  2847                           ; 1 bytes @ 0x11
  2848                           
  2849                           
  2850                           ; 3 bytes @ 0x11
  2851  0031                     	ds	1
  2852  0032                     setDimmerLights_Main@lights:	
  2853  0032                     Sw_DimmerOnFunc@sw:	
  2854                           ; 1 bytes @ 0x12
  2855                           
  2856                           
  2857                           ; 1 bytes @ 0x12
  2858  0032                     	ds	1
  2859  0033                     ??_setSw_Main:	
  2860  0033                     ??_DimmerLights_Main:	
  2861                           ; 0 bytes @ 0x13
  2862                           
  2863                           
  2864                           ; 0 bytes @ 0x13
  2865  0033                     	ds	1
  2866  0034                     ??___ftdiv:	
  2867                           
  2868                           ; 0 bytes @ 0x14
  2869  0034                     	ds	1
  2870  0035                     setSw_Main@sw:	
  2871                           
  2872                           ; 1 bytes @ 0x15
  2873  0035                     	ds	1
  2874  0036                     ??_Switch_Main:	
  2875                           
  2876                           ; 0 bytes @ 0x16
  2877  0036                     	ds	2
  2878  0038                     ___ftdiv@cntr:	
  2879                           
  2880                           ; 1 bytes @ 0x18
  2881  0038                     	ds	1
  2882  0039                     ___ftdiv@f3:	
  2883                           
  2884                           ; 3 bytes @ 0x19
  2885  0039                     	ds	3
  2886  003C                     ___ftdiv@exp:	
  2887                           
  2888                           ; 1 bytes @ 0x1C
  2889  003C                     	ds	1
  2890  003D                     ___ftdiv@sign:	
  2891                           
  2892                           ; 1 bytes @ 0x1D
  2893  003D                     	ds	1
  2894  003E                     ?___fttol:	
  2895  003E                     ___fttol@f1:	
  2896                           ; 4 bytes @ 0x1E
  2897                           
  2898                           
  2899                           ; 3 bytes @ 0x1E
  2900  003E                     	ds	4
  2901  0042                     ??___fttol:	
  2902                           
  2903                           ; 0 bytes @ 0x22
  2904  0042                     	ds	4
  2905  0046                     ___fttol@sign1:	
  2906                           
  2907                           ; 1 bytes @ 0x26
  2908  0046                     	ds	1
  2909  0047                     ___fttol@lval:	
  2910                           
  2911                           ; 4 bytes @ 0x27
  2912  0047                     	ds	4
  2913  004B                     ___fttol@exp1:	
  2914                           
  2915                           ; 1 bytes @ 0x2B
  2916  004B                     	ds	1
  2917  004C                     ??_setPercentValue:	
  2918  004C                     setPercentValue@value:	
  2919                           ; 0 bytes @ 0x2C
  2920                           
  2921                           
  2922                           ; 1 bytes @ 0x2C
  2923  004C                     	ds	1
  2924  004D                     setPercentValue@i:	
  2925                           
  2926                           ; 3 bytes @ 0x2D
  2927  004D                     	ds	3
  2928  0050                     ??_Flash_Memory_Initialization:	
  2929                           
  2930                           ; 0 bytes @ 0x30
  2931  0050                     	ds	1
  2932  0051                     Flash_Memory_Initialization@i:	
  2933                           
  2934                           ; 1 bytes @ 0x31
  2935  0051                     	ds	1
  2936  0052                     ?_main:	
  2937  0052                     main@argc:	
  2938                           ; 2 bytes @ 0x32
  2939                           
  2940                           
  2941                           ; 2 bytes @ 0x32
  2942  0052                     	ds	2
  2943  0054                     main@argv:	
  2944                           
  2945                           ; 2 bytes @ 0x34
  2946  0054                     	ds	2
  2947  0056                     ??_main:	
  2948                           
  2949                           	psect	maintext
  2950  0C4F                     __pmaintext:	
  2951                           ; 0 bytes @ 0x36
  2952 ;;
  2953 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2954 ;;
  2955 ;; *************** function _main *****************
  2956 ;; Defined at:
  2957 ;;		line 7 in file "../src/Main_B1.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;  argc            2   50[BANK0 ] int 
  2960 ;;  argv            2   52[BANK0 ] PTR PTR unsigned char 
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;		None
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  2   50[BANK0 ] int 
  2965 ;; Registers used:
  2966 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2967 ;; Tracked objects:
  2968 ;;		On entry : 17F/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2972 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2975 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2976 ;;Total ram usage:        4 bytes
  2977 ;; Hardware stack levels required when called:   10
  2978 ;; This function calls:
  2979 ;;		_Buzzer_Initialization
  2980 ;;		_Buzzer_Main
  2981 ;;		_DimmerLights_Initialization
  2982 ;;		_DimmerLights_Main
  2983 ;;		_Flash_Memory_Initialization
  2984 ;;		_Flash_Memory_Main
  2985 ;;		_LED_Initialization
  2986 ;;		_LED_Main
  2987 ;;		_Mcu_Initialization
  2988 ;;		_Switch_Initialization
  2989 ;;		_Switch_Main
  2990 ;;		_WDT_Main
  2991 ;;		_myMain_Initialization
  2992 ;;		_my_Main
  2993 ;; This function is called by:
  2994 ;;		Startup code after reset
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           
  2999                           ;psect for function _main
  3000  0C4F                     _main:	
  3001                           
  3002                           ;Main_B1.c: 9: myMain_Initialization();
  3003                           
  3004                           ;incstack = 0
  3005                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3006  0C4F  3189  21C7  318C   	fcall	_myMain_Initialization
  3007                           
  3008                           ;Main_B1.c: 10: Mcu_Initialization();
  3009  0C52  318A  2280  318C   	fcall	_Mcu_Initialization
  3010                           
  3011                           ;Main_B1.c: 11: Flash_Memory_Initialization();
  3012  0C55  3183  2336  318C   	fcall	_Flash_Memory_Initialization
  3013                           
  3014                           ;Main_B1.c: 12: LED_Initialization();
  3015  0C58  3189  2161  318C   	fcall	_LED_Initialization
  3016                           
  3017                           ;Main_B1.c: 13: Buzzer_Initialization();
  3018  0C5B  3188  20BA  318C   	fcall	_Buzzer_Initialization
  3019                           
  3020                           ;Main_B1.c: 15: ;;
  3021                           ;Main_B1.c: 16: ;;
  3022                           ;Main_B1.c: 17: ;;
  3023                           ;Main_B1.c: 18: ;;
  3024                           ;Main_B1.c: 19: ;;
  3025                           ;Main_B1.c: 21: DimmerLights_Initialization();
  3026  0C5E  318A  22ED  318C   	fcall	_DimmerLights_Initialization
  3027                           
  3028                           ;Main_B1.c: 22: ;;
  3029                           ;Main_B1.c: 23: ;;
  3030                           ;Main_B1.c: 24: ;;
  3031                           ;Main_B1.c: 26: Switch_Initialization();
  3032  0C61  3189  21A3  318C   	fcall	_Switch_Initialization
  3033                           
  3034                           ;Main_B1.c: 27: ;;
  3035                           ;Main_B1.c: 28: __nop();
  3036  0C64  0000               	nop
  3037  0C65                     l5340:	
  3038                           ;Main_B1.c: 35: ;;
  3039                           ;Main_B1.c: 39: ;;
  3040                           ;Main_B1.c: 43: ;;
  3041                           ;Main_B1.c: 47: ;;
  3042                           
  3043                           ;Main_B1.c: 29: ;;
  3044                           ;Main_B1.c: 32: while (1) {
  3045                           
  3046                           
  3047                           ;Main_B1.c: 58: }
  3048                           ;Main_B1.c: 61: if (myMain->T0_Timerout) {
  3049  0C65  0020               	movlb	0	; select bank0
  3050  0C66  086A               	movf	_myMain,w
  3051  0C67  0086               	movwf	6
  3052  0C68  3001               	movlw	1	; select bank2/3
  3053  0C69  0087               	movwf	7
  3054  0C6A  1C81               	btfss	1,1
  3055  0C6B  2C65               	goto	l5340
  3056                           
  3057                           ;Main_B1.c: 62: myMain->T0_Timerout = 0;
  3058  0C6C  086A               	movf	_myMain,w
  3059  0C6D  0086               	movwf	6
  3060  0C6E  3001               	movlw	1	; select bank2/3
  3061  0C6F  0087               	movwf	7
  3062  0C70  1081               	bcf	1,1
  3063                           
  3064                           ;Main_B1.c: 63: my_Main();
  3065  0C71  318F  2727  318C   	fcall	_my_Main
  3066                           
  3067                           ;Main_B1.c: 64: WDT_Main();
  3068  0C74  318A  2233  318C   	fcall	_WDT_Main
  3069                           
  3070                           ;Main_B1.c: 65: ;;
  3071                           ;Main_B1.c: 66: ;;
  3072                           ;Main_B1.c: 67: if (myMain->PowerON) {
  3073  0C77  0020               	movlb	0	; select bank0
  3074  0C78  086A               	movf	_myMain,w
  3075  0C79  0086               	movwf	6
  3076  0C7A  3001               	movlw	1	; select bank2/3
  3077  0C7B  0087               	movwf	7
  3078  0C7C  1C01               	btfss	1,0
  3079  0C7D  2C65               	goto	l5340
  3080                           
  3081                           ;Main_B1.c: 68: Flash_Memory_Main();
  3082  0C7E  318C  24D2  318C   	fcall	_Flash_Memory_Main
  3083                           
  3084                           ;Main_B1.c: 70: LED_Main();
  3085  0C81  3189  2171  318C   	fcall	_LED_Main
  3086                           
  3087                           ;Main_B1.c: 71: Buzzer_Main();
  3088  0C84  3184  24C6  318C   	fcall	_Buzzer_Main
  3089                           
  3090                           ;Main_B1.c: 73: ;;
  3091                           ;Main_B1.c: 74: ;;
  3092                           ;Main_B1.c: 75: ;;
  3093                           ;Main_B1.c: 76: ;;
  3094                           ;Main_B1.c: 78: ;;
  3095                           ;Main_B1.c: 79: DimmerLights_Main();
  3096  0C87  3189  2106  318C   	fcall	_DimmerLights_Main
  3097                           
  3098                           ;Main_B1.c: 80: Switch_Main();
  3099  0C8A  3188  20D1  318C   	fcall	_Switch_Main
  3100                           
  3101                           ;Main_B1.c: 81: ;;
  3102                           ;Main_B1.c: 82: ;;
  3103                           ;Main_B1.c: 84: ;;
  3104                           ;Main_B1.c: 85: ;;
  3105                           ;Main_B1.c: 86: ;;
  3106  0C8D  2C65               	goto	l5340
  3107  0C8E                     __end_of_main:	
  3108                           
  3109                           	psect	text1
  3110  0F27                     __ptext1:	
  3111 ;; *************** function _my_Main *****************
  3112 ;; Defined at:
  3113 ;;		line 123 in file "../src/Main_B1.c"
  3114 ;; Parameters:    Size  Location     Type
  3115 ;;		None
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;		None
  3118 ;; Return value:  Size  Location     Type
  3119 ;;		None               void
  3120 ;; Registers used:
  3121 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3122 ;; Tracked objects:
  3123 ;;		On entry : 0/0
  3124 ;;		On exit  : 0/0
  3125 ;;		Unchanged: 0/0
  3126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3131 ;;Total ram usage:        0 bytes
  3132 ;; Hardware stack levels used:    1
  3133 ;; Hardware stack levels required when called:    7
  3134 ;; This function calls:
  3135 ;;		_setBuz
  3136 ;;		_setSw_Enable
  3137 ;; This function is called by:
  3138 ;;		_main
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141                           
  3142                           
  3143                           ;psect for function _my_Main
  3144  0F27                     _my_Main:	
  3145                           
  3146                           ;Main_B1.c: 125: if (myMain->PowerON == 0) {
  3147                           
  3148                           ;incstack = 0
  3149                           ; Regs used in _my_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3150  0F27  0020               	movlb	0	; select bank0
  3151  0F28  086A               	movf	_myMain,w
  3152  0F29  0086               	movwf	6
  3153  0F2A  3001               	movlw	1	; select bank2/3
  3154  0F2B  0087               	movwf	7
  3155  0F2C  1801               	btfsc	1,0
  3156  0F2D  2F61               	goto	l4800
  3157                           
  3158                           ;Main_B1.c: 126: myMain->PowerCount++;
  3159  0F2E  0A6A               	incf	_myMain,w
  3160  0F2F  0086               	movwf	6
  3161  0F30  3001               	movlw	1	; select bank2/3
  3162  0F31  0087               	movwf	7
  3163  0F32  3001               	movlw	1
  3164  0F33  0781               	addwf	1,f
  3165  0F34  3141               	addfsr 1,1
  3166  0F35  1803               	skipnc
  3167  0F36  0A81               	incf	1,f
  3168                           
  3169                           ;Main_B1.c: 127: if (myMain->PowerCount == 150)
  3170  0F37  0A6A               	incf	_myMain,w
  3171  0F38  0086               	movwf	6
  3172  0F39  3001               	movlw	1	; select bank2/3
  3173  0F3A  0087               	movwf	7
  3174  0F3B  3F40               	moviw [0]fsr1
  3175  0F3C  3A96               	xorlw	150
  3176  0F3D  1D03               	skipz
  3177  0F3E  2F41               	goto	u4525
  3178  0F3F  3F41               	moviw [1]fsr1
  3179  0F40  3A00               	xorlw	0
  3180  0F41                     u4525:	
  3181  0F41  1D03               	skipz
  3182  0F42  0008               	return
  3183                           
  3184                           ;Main_B1.c: 128: {
  3185                           ;Main_B1.c: 129: myMain->PowerCount = 0;
  3186  0F43  0A6A               	incf	_myMain,w
  3187  0F44  0086               	movwf	6
  3188  0F45  3001               	movlw	1	; select bank2/3
  3189  0F46  0087               	movwf	7
  3190  0F47  3000               	movlw	0
  3191  0F48  3FC0               	movwi [0]fsr1
  3192  0F49  3FC1               	movwi [1]fsr1
  3193                           
  3194                           ;Main_B1.c: 130: myMain->PowerON = 1;
  3195  0F4A  086A               	movf	_myMain,w
  3196  0F4B  0086               	movwf	6
  3197  0F4C  3001               	movlw	1	; select bank2/3
  3198  0F4D  0087               	movwf	7
  3199  0F4E  1401               	bsf	1,0
  3200                           
  3201                           ;Main_B1.c: 133: ;;
  3202                           ;Main_B1.c: 137: ;;
  3203                           ;Main_B1.c: 143: setBuz(3, 50);
  3204  0F4F  3032               	movlw	50
  3205  0F50  00A9               	movwf	setBuz@time
  3206  0F51  3000               	movlw	0
  3207  0F52  00AA               	movwf	setBuz@time+1
  3208  0F53  3003               	movlw	3
  3209  0F54  3186  267D  318F   	fcall	_setBuz
  3210                           
  3211                           ;Main_B1.c: 144: myMain->SelfTest = 1;
  3212  0F57  0020               	movlb	0	; select bank0
  3213  0F58  086A               	movf	_myMain,w
  3214  0F59  0086               	movwf	6
  3215  0F5A  3001               	movlw	1	; select bank2/3
  3216  0F5B  0087               	movwf	7
  3217  0F5C  1701               	bsf	1,6
  3218                           
  3219                           ;Main_B1.c: 146: setSw_Enable(1);
  3220  0F5D  3001               	movlw	1
  3221  0F5E  318B  2393         	fcall	_setSw_Enable
  3222                           
  3223                           ;Main_B1.c: 153: }
  3224                           ;Main_B1.c: 154: } else {
  3225  0F60  0008               	return
  3226  0F61                     l4800:	
  3227                           
  3228                           ;Main_B1.c: 162: myMain->Count1++;
  3229  0F61  0020               	movlb	0	; select bank0
  3230  0F62  086A               	movf	_myMain,w
  3231  0F63  3E05               	addlw	5
  3232  0F64  0086               	movwf	6
  3233  0F65  3001               	movlw	1	; select bank2/3
  3234  0F66  0087               	movwf	7
  3235  0F67  3001               	movlw	1
  3236  0F68  0781               	addwf	1,f
  3237  0F69  3141               	addfsr 1,1
  3238  0F6A  1803               	skipnc
  3239  0F6B  0A81               	incf	1,f
  3240                           
  3241                           ;Main_B1.c: 163: if (myMain->Count1 == 100)
  3242  0F6C  086A               	movf	_myMain,w
  3243  0F6D  3E05               	addlw	5
  3244  0F6E  0086               	movwf	6
  3245  0F6F  3001               	movlw	1	; select bank2/3
  3246  0F70  0087               	movwf	7
  3247  0F71  3F40               	moviw [0]fsr1
  3248  0F72  3A64               	xorlw	100
  3249  0F73  1D03               	skipz
  3250  0F74  2F77               	goto	u4535
  3251  0F75  3F41               	moviw [1]fsr1
  3252  0F76  3A00               	xorlw	0
  3253  0F77                     u4535:	
  3254  0F77  1D03               	skipz
  3255  0F78  0008               	return
  3256                           
  3257                           ;Main_B1.c: 164: {
  3258                           ;Main_B1.c: 165: myMain->Count1 = 0;
  3259  0F79  086A               	movf	_myMain,w
  3260  0F7A  3E05               	addlw	5
  3261  0F7B  0086               	movwf	6
  3262  0F7C  3001               	movlw	1	; select bank2/3
  3263  0F7D  0087               	movwf	7
  3264  0F7E  3000               	movlw	0
  3265  0F7F  3FC0               	movwi [0]fsr1
  3266  0F80  3FC1               	movwi [1]fsr1
  3267                           
  3268                           ;Main_B1.c: 178: if (myMain->Flag) {
  3269  0F81  086A               	movf	_myMain,w
  3270  0F82  0086               	movwf	6
  3271  0F83  3001               	movlw	1	; select bank2/3
  3272  0F84  0087               	movwf	7
  3273  0F85  1D81               	btfss	1,3
  3274  0F86  2F8D               	goto	l4808
  3275                           
  3276                           ;Main_B1.c: 179: myMain->Flag = 0;
  3277  0F87  086A               	movf	_myMain,w
  3278  0F88  0086               	movwf	6
  3279  0F89  3001               	movlw	1	; select bank2/3
  3280  0F8A  0087               	movwf	7
  3281  0F8B  1181               	bcf	1,3
  3282                           
  3283                           ;Main_B1.c: 188: } else {
  3284  0F8C  0008               	return
  3285  0F8D                     l4808:	
  3286                           
  3287                           ;Main_B1.c: 189: myMain->Flag = 1;
  3288  0F8D  086A               	movf	_myMain,w
  3289  0F8E  0086               	movwf	6
  3290  0F8F  3001               	movlw	1	; select bank2/3
  3291  0F90  0087               	movwf	7
  3292  0F91  1581               	bsf	1,3
  3293  0F92  0008               	return
  3294  0F93                     __end_of_my_Main:	
  3295                           
  3296                           	psect	text2
  3297  0B93                     __ptext2:	
  3298 ;; *************** function _setSw_Enable *****************
  3299 ;; Defined at:
  3300 ;;		line 85 in file "../src/Switch_B1.c"
  3301 ;; Parameters:    Size  Location     Type
  3302 ;;  command         1    wreg     unsigned char 
  3303 ;; Auto vars:     Size  Location     Type
  3304 ;;  command         1    1[BANK0 ] unsigned char 
  3305 ;; Return value:  Size  Location     Type
  3306 ;;		None               void
  3307 ;; Registers used:
  3308 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3309 ;; Tracked objects:
  3310 ;;		On entry : 0/0
  3311 ;;		On exit  : 0/0
  3312 ;;		Unchanged: 0/0
  3313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3315 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3317 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3318 ;;Total ram usage:        1 bytes
  3319 ;; Hardware stack levels used:    1
  3320 ;; Hardware stack levels required when called:    6
  3321 ;; This function calls:
  3322 ;;		_SwPointSelect
  3323 ;; This function is called by:
  3324 ;;		_my_Main
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328                           
  3329                           ;psect for function _setSw_Enable
  3330  0B93                     _setSw_Enable:	
  3331                           
  3332                           ;incstack = 0
  3333                           ; Regs used in _setSw_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3334                           ;setSw_Enable@command stored from wreg
  3335  0B93  0020               	movlb	0	; select bank0
  3336  0B94  00A1               	movwf	setSw_Enable@command
  3337                           
  3338                           ;Switch_B1.c: 88: SwPointSelect(1);
  3339  0B95  3001               	movlw	1
  3340  0B96  318A  22D0  318B   	fcall	_SwPointSelect
  3341                           
  3342                           ;Switch_B1.c: 89: Sw->Enable = command;
  3343  0B99  0020               	movlb	0	; select bank0
  3344  0B9A  0856               	movf	_Sw,w
  3345  0B9B  0086               	movwf	6
  3346  0B9C  0857               	movf	_Sw+1,w
  3347  0B9D  0087               	movwf	7
  3348  0B9E  0821               	movf	setSw_Enable@command,w
  3349  0B9F  1001               	bcf	1,0
  3350  0BA0  1D03               	skipz
  3351  0BA1  1401               	bsf	1,0
  3352                           
  3353                           ;Switch_B1.c: 93: SwPointSelect(2);
  3354  0BA2  3002               	movlw	2
  3355  0BA3  318A  22D0  318B   	fcall	_SwPointSelect
  3356                           
  3357                           ;Switch_B1.c: 94: Sw->Enable = command;
  3358  0BA6  0020               	movlb	0	; select bank0
  3359  0BA7  0856               	movf	_Sw,w
  3360  0BA8  0086               	movwf	6
  3361  0BA9  0857               	movf	_Sw+1,w
  3362  0BAA  0087               	movwf	7
  3363  0BAB  0821               	movf	setSw_Enable@command,w
  3364  0BAC  1001               	bcf	1,0
  3365  0BAD  1D03               	skipz
  3366  0BAE  1401               	bsf	1,0
  3367                           
  3368                           ;Switch_B1.c: 98: SwPointSelect(3);
  3369  0BAF  3003               	movlw	3
  3370  0BB0  318A  22D0         	fcall	_SwPointSelect
  3371                           
  3372                           ;Switch_B1.c: 99: Sw->Enable = command;
  3373  0BB2  0020               	movlb	0	; select bank0
  3374  0BB3  0856               	movf	_Sw,w
  3375  0BB4  0086               	movwf	6
  3376  0BB5  0857               	movf	_Sw+1,w
  3377  0BB6  0087               	movwf	7
  3378  0BB7  0821               	movf	setSw_Enable@command,w
  3379  0BB8  1001               	bcf	1,0
  3380  0BB9  1D03               	skipz
  3381  0BBA  1401               	bsf	1,0
  3382  0BBB  0008               	return
  3383  0BBC                     __end_of_setSw_Enable:	
  3384                           
  3385                           	psect	text3
  3386  09C7                     __ptext3:	
  3387 ;; *************** function _myMain_Initialization *****************
  3388 ;; Defined at:
  3389 ;;		line 111 in file "../src/Main_B1.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;		None
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;		None
  3394 ;; Return value:  Size  Location     Type
  3395 ;;		None               void
  3396 ;; Registers used:
  3397 ;;		wreg, fsr1l, fsr1h
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3405 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3406 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3407 ;;Total ram usage:        1 bytes
  3408 ;; Hardware stack levels used:    1
  3409 ;; Hardware stack levels required when called:    5
  3410 ;; This function calls:
  3411 ;;		Nothing
  3412 ;; This function is called by:
  3413 ;;		_main
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           
  3418                           ;psect for function _myMain_Initialization
  3419  09C7                     _myMain_Initialization:	
  3420                           
  3421                           ;Main_B1.c: 113: product = &_product;
  3422                           
  3423                           ;incstack = 0
  3424                           ; Regs used in _myMain_Initialization: [wregfsr1]
  3425  09C7  3045               	movlw	__product& (0+255)
  3426  09C8  0020               	movlb	0	; select bank0
  3427  09C9  00A0               	movwf	??_myMain_Initialization
  3428  09CA  0820               	movf	??_myMain_Initialization,w
  3429  09CB  00EB               	movwf	_product
  3430                           
  3431                           ;Main_B1.c: 114: product->Data[20] = 211;
  3432  09CC  30D3               	movlw	211
  3433  09CD  00A0               	movwf	??_myMain_Initialization
  3434  09CE  086B               	movf	_product,w
  3435  09CF  3E14               	addlw	20
  3436  09D0  0086               	movwf	6
  3437  09D1  3001               	movlw	1	; select bank2/3
  3438  09D2  0087               	movwf	7
  3439  09D3  0820               	movf	??_myMain_Initialization,w
  3440  09D4  0081               	movwf	1
  3441                           
  3442                           ;Main_B1.c: 117: myMain = &_myMain;
  3443  09D5  3020               	movlw	__myMain& (0+255)
  3444  09D6  00A0               	movwf	??_myMain_Initialization
  3445  09D7  0820               	movf	??_myMain_Initialization,w
  3446  09D8  00EA               	movwf	_myMain
  3447  09D9  0008               	return
  3448  09DA                     __end_of_myMain_Initialization:	
  3449                           
  3450                           	psect	text4
  3451  0A33                     __ptext4:	
  3452 ;; *************** function _WDT_Main *****************
  3453 ;; Defined at:
  3454 ;;		line 909 in file "../src/MCU_B1.c"
  3455 ;; Parameters:    Size  Location     Type
  3456 ;;		None
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;		None
  3459 ;; Return value:  Size  Location     Type
  3460 ;;		None               void
  3461 ;; Registers used:
  3462 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3463 ;; Tracked objects:
  3464 ;;		On entry : 0/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3470 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3471 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3472 ;;Total ram usage:        1 bytes
  3473 ;; Hardware stack levels used:    1
  3474 ;; Hardware stack levels required when called:    6
  3475 ;; This function calls:
  3476 ;;		_WDT_Clearing
  3477 ;; This function is called by:
  3478 ;;		_main
  3479 ;; This function uses a non-reentrant model
  3480 ;;
  3481                           
  3482                           
  3483                           ;psect for function _WDT_Main
  3484  0A33                     _WDT_Main:	
  3485                           
  3486                           ;MCU_B1.c: 910: if (WDT->Enable == 1) {
  3487                           
  3488                           ;incstack = 0
  3489                           ; Regs used in _WDT_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3490  0A33  087D               	movf	_WDT,w
  3491  0A34  0086               	movwf	6
  3492  0A35  0187               	clrf	7
  3493  0A36  1C01               	btfss	1,0
  3494  0A37  0008               	return
  3495                           
  3496                           ;MCU_B1.c: 911: if (WDT->Count-- > 0) {
  3497  0A38  0A7D               	incf	_WDT,w
  3498  0A39  0086               	movwf	6
  3499  0A3A  0187               	clrf	7
  3500  0A3B  3001               	movlw	1
  3501  0A3C  0281               	subwf	1,f
  3502  0A3D  0801               	movf	1,w
  3503  0A3E  3AFF               	xorlw	255
  3504  0A3F  1903               	skipnz
  3505  0A40  0008               	return
  3506                           
  3507                           ;MCU_B1.c: 912: WDT->Count = 10;
  3508  0A41  300A               	movlw	10
  3509  0A42  0020               	movlb	0	; select bank0
  3510  0A43  00A0               	movwf	??_WDT_Main
  3511  0A44  0A7D               	incf	_WDT,w
  3512  0A45  0086               	movwf	6
  3513  0A46  0187               	clrf	7
  3514  0A47  0820               	movf	??_WDT_Main,w
  3515  0A48  0081               	movwf	1
  3516                           
  3517                           ;MCU_B1.c: 913: WDT_Clearing();
  3518  0A49  3180  2002         	fcall	_WDT_Clearing
  3519  0A4B  0008               	return
  3520  0A4C                     __end_of_WDT_Main:	
  3521                           
  3522                           	psect	text5
  3523  0002                     __ptext5:	
  3524 ;; *************** function _WDT_Clearing *****************
  3525 ;; Defined at:
  3526 ;;		line 919 in file "../src/MCU_B1.c"
  3527 ;; Parameters:    Size  Location     Type
  3528 ;;		None
  3529 ;; Auto vars:     Size  Location     Type
  3530 ;;		None
  3531 ;; Return value:  Size  Location     Type
  3532 ;;		None               void
  3533 ;; Registers used:
  3534 ;;		None
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3544 ;;Total ram usage:        0 bytes
  3545 ;; Hardware stack levels used:    1
  3546 ;; Hardware stack levels required when called:    5
  3547 ;; This function calls:
  3548 ;;		Nothing
  3549 ;; This function is called by:
  3550 ;;		_WDT_Main
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           
  3555                           ;psect for function _WDT_Clearing
  3556  0002                     _WDT_Clearing:	
  3557                           
  3558                           ;incstack = 0
  3559                           ; Regs used in _WDT_Clearing: []
  3560  0002  0064               	clrwdt	;# 
  3561  0003  0008               	return
  3562  0004                     __end_of_WDT_Clearing:	
  3563                           
  3564                           	psect	text6
  3565  08D1                     __ptext6:	
  3566 ;; *************** function _Switch_Main *****************
  3567 ;; Defined at:
  3568 ;;		line 61 in file "../src/Switch_B1.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;		None
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;		None
  3573 ;; Return value:  Size  Location     Type
  3574 ;;		None               void
  3575 ;; Registers used:
  3576 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3586 ;;Total ram usage:        0 bytes
  3587 ;; Hardware stack levels used:    1
  3588 ;; Hardware stack levels required when called:    9
  3589 ;; This function calls:
  3590 ;;		_setSw_Main
  3591 ;; This function is called by:
  3592 ;;		_main
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           
  3597                           ;psect for function _Switch_Main
  3598  08D1                     _Switch_Main:	
  3599                           
  3600                           ;Switch_B1.c: 63: setSw_Main(1);
  3601                           
  3602                           ;incstack = 0
  3603                           ; Regs used in _Switch_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3604  08D1  3001               	movlw	1
  3605  08D2  3181  21EB  3188   	fcall	_setSw_Main
  3606                           
  3607                           ;Switch_B1.c: 67: setSw_Main(2);
  3608  08D5  3002               	movlw	2
  3609  08D6  3181  21EB  3188   	fcall	_setSw_Main
  3610                           
  3611                           ;Switch_B1.c: 71: setSw_Main(3);
  3612  08D9  3003               	movlw	3
  3613  08DA  3181  21EB         	fcall	_setSw_Main
  3614  08DC  0008               	return
  3615  08DD                     __end_of_Switch_Main:	
  3616                           
  3617                           	psect	text7
  3618  01EB                     __ptext7:	
  3619 ;; *************** function _setSw_Main *****************
  3620 ;; Defined at:
  3621 ;;		line 111 in file "../src/Switch_B1.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;  sw              1    wreg     unsigned char 
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;  sw              1   21[BANK0 ] unsigned char 
  3626 ;; Return value:  Size  Location     Type
  3627 ;;		None               void
  3628 ;; Registers used:
  3629 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3630 ;; Tracked objects:
  3631 ;;		On entry : 0/0
  3632 ;;		On exit  : 0/0
  3633 ;;		Unchanged: 0/0
  3634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3636 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3637 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3638 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3639 ;;Total ram usage:        3 bytes
  3640 ;; Hardware stack levels used:    1
  3641 ;; Hardware stack levels required when called:    8
  3642 ;; This function calls:
  3643 ;;		_SwPointSelect
  3644 ;;		_Sw_DimmerAdjFunc
  3645 ;;		_Sw_DimmerOffFunc
  3646 ;;		_Sw_DimmerOnFunc
  3647 ;;		_setBuz
  3648 ;; This function is called by:
  3649 ;;		_Switch_Main
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653                           
  3654                           ;psect for function _setSw_Main
  3655  01EB                     _setSw_Main:	
  3656                           
  3657                           ;incstack = 0
  3658                           ; Regs used in _setSw_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3659                           ;setSw_Main@sw stored from wreg
  3660  01EB  0020               	movlb	0	; select bank0
  3661  01EC  00B5               	movwf	setSw_Main@sw
  3662                           
  3663                           ;Switch_B1.c: 112: if (Sw->Enable == 1) {
  3664  01ED  0856               	movf	_Sw,w
  3665  01EE  0086               	movwf	6
  3666  01EF  0857               	movf	_Sw+1,w
  3667  01F0  0087               	movwf	7
  3668  01F1  1C01               	btfss	1,0
  3669  01F2  0008               	return
  3670                           
  3671                           ;Switch_B1.c: 113: SwPointSelect(sw);
  3672  01F3  0835               	movf	setSw_Main@sw,w
  3673  01F4  318A  22D0  3181   	fcall	_SwPointSelect
  3674                           
  3675                           ;Switch_B1.c: 115: if (sw == 1) {
  3676  01F7  0020               	movlb	0	; select bank0
  3677  01F8  0835               	movf	setSw_Main@sw,w
  3678  01F9  3A01               	xorlw	1
  3679  01FA  1D03               	skipz
  3680  01FB  2A04               	goto	l4532
  3681                           
  3682                           ;Switch_B1.c: 116: Sw->Touch = (RA0) ? 1 : 0;
  3683  01FC  0856               	movf	_Sw,w
  3684  01FD  0086               	movwf	6
  3685  01FE  0857               	movf	_Sw+1,w
  3686  01FF  0087               	movwf	7
  3687  0200  1081               	bcf	1,1
  3688  0201  180C               	btfsc	12,0	;volatile
  3689  0202  1481               	bsf	1,1
  3690                           
  3691                           ;Switch_B1.c: 117: } else if (sw == 2) {
  3692  0203  2A1D               	goto	l1698
  3693  0204                     l4532:	
  3694  0204  0020               	movlb	0	; select bank0
  3695  0205  0835               	movf	setSw_Main@sw,w
  3696  0206  3A02               	xorlw	2
  3697  0207  1D03               	skipz
  3698  0208  2A11               	goto	l4536
  3699                           
  3700                           ;Switch_B1.c: 118: Sw->Touch = (RA6) ? 1 : 0;
  3701  0209  0856               	movf	_Sw,w
  3702  020A  0086               	movwf	6
  3703  020B  0857               	movf	_Sw+1,w
  3704  020C  0087               	movwf	7
  3705  020D  1081               	bcf	1,1
  3706  020E  1B0C               	btfsc	12,6	;volatile
  3707  020F  1481               	bsf	1,1
  3708                           
  3709                           ;Switch_B1.c: 119: } else if (sw == 3) {
  3710  0210  2A1D               	goto	l1698
  3711  0211                     l4536:	
  3712  0211  0020               	movlb	0	; select bank0
  3713  0212  0835               	movf	setSw_Main@sw,w
  3714  0213  3A03               	xorlw	3
  3715  0214  1D03               	skipz
  3716  0215  2A1D               	goto	l1698
  3717                           
  3718                           ;Switch_B1.c: 120: Sw->Touch = (RA4) ? 1 : 0;
  3719  0216  0856               	movf	_Sw,w
  3720  0217  0086               	movwf	6
  3721  0218  0857               	movf	_Sw+1,w
  3722  0219  0087               	movwf	7
  3723  021A  1081               	bcf	1,1
  3724  021B  1A0C               	btfsc	12,4	;volatile
  3725  021C  1481               	bsf	1,1
  3726  021D                     l1698:	
  3727                           
  3728                           ;Switch_B1.c: 121: }
  3729                           ;Switch_B1.c: 137: if (Sw->Touch == 1) {
  3730  021D  0020               	movlb	0	; select bank0
  3731  021E  0856               	movf	_Sw,w
  3732  021F  0086               	movwf	6
  3733  0220  0857               	movf	_Sw+1,w
  3734  0221  0087               	movwf	7
  3735  0222  1C81               	btfss	1,1
  3736  0223  2AE8               	goto	l4580
  3737                           
  3738                           ;Switch_B1.c: 138: if (Sw->Debounce == 0) {
  3739  0224  0856               	movf	_Sw,w
  3740  0225  0086               	movwf	6
  3741  0226  0857               	movf	_Sw+1,w
  3742  0227  0087               	movwf	7
  3743  0228  1901               	btfsc	1,2
  3744  0229  2A4B               	goto	l4552
  3745                           
  3746                           ;Switch_B1.c: 139: Sw->DebounceTime++;
  3747  022A  3001               	movlw	1
  3748  022B  00B3               	movwf	??_setSw_Main
  3749  022C  0856               	movf	_Sw,w
  3750  022D  0086               	movwf	6
  3751  022E  0857               	movf	_Sw+1,w
  3752  022F  0087               	movwf	7
  3753  0230  3142               	addfsr 1,2
  3754  0231  0833               	movf	??_setSw_Main,w
  3755  0232  0781               	addwf	1,f
  3756                           
  3757                           ;Switch_B1.c: 140: if (Sw->DebounceTime >= 5) {
  3758  0233  0856               	movf	_Sw,w
  3759  0234  0086               	movwf	6
  3760  0235  0857               	movf	_Sw+1,w
  3761  0236  0087               	movwf	7
  3762  0237  3142               	addfsr 1,2
  3763  0238  3005               	movlw	5
  3764  0239  0201               	subwf	1,w
  3765  023A  1C03               	skipc
  3766  023B  0008               	return
  3767                           
  3768                           ;Switch_B1.c: 141: Sw->DebounceTime = 0;
  3769  023C  0856               	movf	_Sw,w
  3770  023D  0086               	movwf	6
  3771  023E  0857               	movf	_Sw+1,w
  3772  023F  0087               	movwf	7
  3773  0240  3142               	addfsr 1,2
  3774  0241  0181               	clrf	1
  3775                           
  3776                           ;Switch_B1.c: 142: Sw->Debounce = 1;
  3777  0242  0856               	movf	_Sw,w
  3778  0243  0086               	movwf	6
  3779  0244  0857               	movf	_Sw+1,w
  3780  0245  0087               	movwf	7
  3781  0246  1501               	bsf	1,2
  3782                           
  3783                           ;Switch_B1.c: 146: Sw_DimmerOnFunc(sw);
  3784  0247  0835               	movf	setSw_Main@sw,w
  3785  0248  3186  26F4         	fcall	_Sw_DimmerOnFunc
  3786                           
  3787                           ;Switch_B1.c: 149: }
  3788                           ;Switch_B1.c: 150: } else {
  3789  024A  0008               	return
  3790  024B                     l4552:	
  3791                           
  3792                           ;Switch_B1.c: 151: if (Sw->Hold1 == 0) {
  3793  024B  0020               	movlb	0	; select bank0
  3794  024C  0856               	movf	_Sw,w
  3795  024D  0086               	movwf	6
  3796  024E  0857               	movf	_Sw+1,w
  3797  024F  0087               	movwf	7
  3798  0250  1981               	btfsc	1,3
  3799  0251  2A7D               	goto	l4562
  3800                           
  3801                           ;Switch_B1.c: 152: Sw->Hold1Time++;
  3802  0252  0856               	movf	_Sw,w
  3803  0253  0086               	movwf	6
  3804  0254  0857               	movf	_Sw+1,w
  3805  0255  0087               	movwf	7
  3806  0256  3143               	addfsr 1,3
  3807  0257  3001               	movlw	1
  3808  0258  0781               	addwf	1,f
  3809  0259  3141               	addfsr 1,1
  3810  025A  1803               	skipnc
  3811  025B  0A81               	incf	1,f
  3812                           
  3813                           ;Switch_B1.c: 153: if (Sw->Hold1Time >= 150) {
  3814  025C  0856               	movf	_Sw,w
  3815  025D  0086               	movwf	6
  3816  025E  0857               	movf	_Sw+1,w
  3817  025F  0087               	movwf	7
  3818  0260  3143               	addfsr 1,3
  3819  0261  3F40               	moviw [0]fsr1
  3820  0262  00B3               	movwf	??_setSw_Main
  3821  0263  3F41               	moviw [1]fsr1
  3822  0264  00B4               	movwf	??_setSw_Main+1
  3823  0265  3000               	movlw	0
  3824  0266  0234               	subwf	??_setSw_Main+1,w
  3825  0267  3096               	movlw	150
  3826  0268  1903               	skipnz
  3827  0269  0233               	subwf	??_setSw_Main,w
  3828  026A  1C03               	skipc
  3829  026B  0008               	return
  3830                           
  3831                           ;Switch_B1.c: 154: Sw->Hold1Time = 0;
  3832  026C  0856               	movf	_Sw,w
  3833  026D  0086               	movwf	6
  3834  026E  0857               	movf	_Sw+1,w
  3835  026F  0087               	movwf	7
  3836  0270  3143               	addfsr 1,3
  3837  0271  3000               	movlw	0
  3838  0272  3FC0               	movwi [0]fsr1
  3839  0273  3FC1               	movwi [1]fsr1
  3840                           
  3841                           ;Switch_B1.c: 155: Sw->Hold1 = 1;
  3842  0274  0856               	movf	_Sw,w
  3843  0275  0086               	movwf	6
  3844  0276  0857               	movf	_Sw+1,w
  3845  0277  0087               	movwf	7
  3846  0278  1581               	bsf	1,3
  3847                           
  3848                           ;Switch_B1.c: 158: Sw_DimmerAdjFunc(sw);
  3849  0279  0835               	movf	setSw_Main@sw,w
  3850  027A  318E  26C0         	fcall	_Sw_DimmerAdjFunc
  3851                           
  3852                           ;Switch_B1.c: 161: }
  3853                           ;Switch_B1.c: 162: } else {
  3854  027C  0008               	return
  3855  027D                     l4562:	
  3856                           
  3857                           ;Switch_B1.c: 163: if (!Sw->Hold2) {
  3858  027D  0020               	movlb	0	; select bank0
  3859  027E  0856               	movf	_Sw,w
  3860  027F  0086               	movwf	6
  3861  0280  0857               	movf	_Sw+1,w
  3862  0281  0087               	movwf	7
  3863  0282  1A01               	btfsc	1,4
  3864  0283  2AB9               	goto	l4572
  3865                           
  3866                           ;Switch_B1.c: 164: Sw->Hold2Time++;
  3867  0284  0856               	movf	_Sw,w
  3868  0285  0086               	movwf	6
  3869  0286  0857               	movf	_Sw+1,w
  3870  0287  0087               	movwf	7
  3871  0288  3145               	addfsr 1,5
  3872  0289  3001               	movlw	1
  3873  028A  0781               	addwf	1,f
  3874  028B  3141               	addfsr 1,1
  3875  028C  1803               	skipnc
  3876  028D  0A81               	incf	1,f
  3877                           
  3878                           ;Switch_B1.c: 165: if (Sw->Hold2Time >= 150) {
  3879  028E  0856               	movf	_Sw,w
  3880  028F  0086               	movwf	6
  3881  0290  0857               	movf	_Sw+1,w
  3882  0291  0087               	movwf	7
  3883  0292  3145               	addfsr 1,5
  3884  0293  3F40               	moviw [0]fsr1
  3885  0294  00B3               	movwf	??_setSw_Main
  3886  0295  3F41               	moviw [1]fsr1
  3887  0296  00B4               	movwf	??_setSw_Main+1
  3888  0297  3000               	movlw	0
  3889  0298  0234               	subwf	??_setSw_Main+1,w
  3890  0299  3096               	movlw	150
  3891  029A  1903               	skipnz
  3892  029B  0233               	subwf	??_setSw_Main,w
  3893  029C  1C03               	skipc
  3894  029D  0008               	return
  3895                           
  3896                           ;Switch_B1.c: 166: Sw->Hold2Time = 0;
  3897  029E  0856               	movf	_Sw,w
  3898  029F  0086               	movwf	6
  3899  02A0  0857               	movf	_Sw+1,w
  3900  02A1  0087               	movwf	7
  3901  02A2  3145               	addfsr 1,5
  3902  02A3  3000               	movlw	0
  3903  02A4  3FC0               	movwi [0]fsr1
  3904  02A5  3FC1               	movwi [1]fsr1
  3905                           
  3906                           ;Switch_B1.c: 167: Sw->Hold2 = 1;
  3907  02A6  0856               	movf	_Sw,w
  3908  02A7  0086               	movwf	6
  3909  02A8  0857               	movf	_Sw+1,w
  3910  02A9  0087               	movwf	7
  3911  02AA  1601               	bsf	1,4
  3912                           
  3913                           ;Switch_B1.c: 173: if (myMain->First) {
  3914  02AB  086A               	movf	_myMain,w
  3915  02AC  0086               	movwf	6
  3916  02AD  3001               	movlw	1	; select bank2/3
  3917  02AE  0087               	movwf	7
  3918  02AF  1F81               	btfss	1,7
  3919  02B0  0008               	return
  3920                           
  3921                           ;Switch_B1.c: 174: setBuz(2, 100);
  3922  02B1  3064               	movlw	100
  3923  02B2  00A9               	movwf	setBuz@time
  3924  02B3  3000               	movlw	0
  3925  02B4  00AA               	movwf	setBuz@time+1
  3926  02B5  3002               	movlw	2
  3927  02B6  3186  267D         	fcall	_setBuz
  3928                           
  3929                           ;Switch_B1.c: 175: }
  3930                           ;Switch_B1.c: 177: }
  3931                           ;Switch_B1.c: 178: } else {
  3932  02B8  0008               	return
  3933  02B9                     l4572:	
  3934                           
  3935                           ;Switch_B1.c: 179: if (!Sw->Hold3) {
  3936  02B9  0020               	movlb	0	; select bank0
  3937  02BA  0856               	movf	_Sw,w
  3938  02BB  0086               	movwf	6
  3939  02BC  0857               	movf	_Sw+1,w
  3940  02BD  0087               	movwf	7
  3941  02BE  1A81               	btfsc	1,5
  3942  02BF  0008               	return
  3943                           
  3944                           ;Switch_B1.c: 180: Sw->Hold3Time++;
  3945  02C0  0856               	movf	_Sw,w
  3946  02C1  0086               	movwf	6
  3947  02C2  0857               	movf	_Sw+1,w
  3948  02C3  0087               	movwf	7
  3949  02C4  3147               	addfsr 1,7
  3950  02C5  3001               	movlw	1
  3951  02C6  0781               	addwf	1,f
  3952  02C7  3141               	addfsr 1,1
  3953  02C8  1803               	skipnc
  3954  02C9  0A81               	incf	1,f
  3955                           
  3956                           ;Switch_B1.c: 181: if (Sw->Hold3Time >= 300)
  3957  02CA  0856               	movf	_Sw,w
  3958  02CB  0086               	movwf	6
  3959  02CC  0857               	movf	_Sw+1,w
  3960  02CD  0087               	movwf	7
  3961  02CE  3147               	addfsr 1,7
  3962  02CF  3F40               	moviw [0]fsr1
  3963  02D0  00B3               	movwf	??_setSw_Main
  3964  02D1  3F41               	moviw [1]fsr1
  3965  02D2  00B4               	movwf	??_setSw_Main+1
  3966  02D3  3001               	movlw	1
  3967  02D4  0234               	subwf	??_setSw_Main+1,w
  3968  02D5  302C               	movlw	44
  3969  02D6  1903               	skipnz
  3970  02D7  0233               	subwf	??_setSw_Main,w
  3971  02D8  1C03               	skipc
  3972  02D9  0008               	return
  3973                           
  3974                           ;Switch_B1.c: 182: {
  3975                           ;Switch_B1.c: 183: Sw->Hold3Time = 0;
  3976  02DA  0856               	movf	_Sw,w
  3977  02DB  0086               	movwf	6
  3978  02DC  0857               	movf	_Sw+1,w
  3979  02DD  0087               	movwf	7
  3980  02DE  3147               	addfsr 1,7
  3981  02DF  3000               	movlw	0
  3982  02E0  3FC0               	movwi [0]fsr1
  3983  02E1  3FC1               	movwi [1]fsr1
  3984                           
  3985                           ;Switch_B1.c: 184: Sw->Hold3 = 1;
  3986  02E2  0856               	movf	_Sw,w
  3987  02E3  0086               	movwf	6
  3988  02E4  0857               	movf	_Sw+1,w
  3989  02E5  0087               	movwf	7
  3990  02E6  1681               	bsf	1,5
  3991                           
  3992                           ;Switch_B1.c: 190: }
  3993                           ;Switch_B1.c: 191: }
  3994                           ;Switch_B1.c: 192: }
  3995                           ;Switch_B1.c: 193: }
  3996                           ;Switch_B1.c: 194: }
  3997                           ;Switch_B1.c: 195: } else {
  3998  02E7  0008               	return
  3999  02E8                     l4580:	
  4000                           
  4001                           ;Switch_B1.c: 196: if (Sw->Debounce) {
  4002  02E8  0856               	movf	_Sw,w
  4003  02E9  0086               	movwf	6
  4004  02EA  0857               	movf	_Sw+1,w
  4005  02EB  0087               	movwf	7
  4006  02EC  1D01               	btfss	1,2
  4007  02ED  0008               	return
  4008                           
  4009                           ;Switch_B1.c: 197: Sw->DebounceTime++;
  4010  02EE  3001               	movlw	1
  4011  02EF  00B3               	movwf	??_setSw_Main
  4012  02F0  0856               	movf	_Sw,w
  4013  02F1  0086               	movwf	6
  4014  02F2  0857               	movf	_Sw+1,w
  4015  02F3  0087               	movwf	7
  4016  02F4  3142               	addfsr 1,2
  4017  02F5  0833               	movf	??_setSw_Main,w
  4018  02F6  0781               	addwf	1,f
  4019                           
  4020                           ;Switch_B1.c: 198: if (Sw->DebounceTime >= 5) {
  4021  02F7  0856               	movf	_Sw,w
  4022  02F8  0086               	movwf	6
  4023  02F9  0857               	movf	_Sw+1,w
  4024  02FA  0087               	movwf	7
  4025  02FB  3142               	addfsr 1,2
  4026  02FC  3005               	movlw	5
  4027  02FD  0201               	subwf	1,w
  4028  02FE  1C03               	skipc
  4029  02FF  0008               	return
  4030                           
  4031                           ;Switch_B1.c: 199: Sw->DebounceTime = 0;
  4032  0300  0856               	movf	_Sw,w
  4033  0301  0086               	movwf	6
  4034  0302  0857               	movf	_Sw+1,w
  4035  0303  0087               	movwf	7
  4036  0304  3142               	addfsr 1,2
  4037  0305  0181               	clrf	1
  4038                           
  4039                           ;Switch_B1.c: 200: Sw->Debounce = 0;
  4040  0306  0856               	movf	_Sw,w
  4041  0307  0086               	movwf	6
  4042  0308  0857               	movf	_Sw+1,w
  4043  0309  0087               	movwf	7
  4044  030A  1101               	bcf	1,2
  4045                           
  4046                           ;Switch_B1.c: 201: Sw->Hold1Time = 0;
  4047  030B  0856               	movf	_Sw,w
  4048  030C  0086               	movwf	6
  4049  030D  0857               	movf	_Sw+1,w
  4050  030E  0087               	movwf	7
  4051  030F  3143               	addfsr 1,3
  4052  0310  3000               	movlw	0
  4053  0311  3FC0               	movwi [0]fsr1
  4054  0312  3FC1               	movwi [1]fsr1
  4055                           
  4056                           ;Switch_B1.c: 202: Sw->Hold1 = 0;
  4057  0313  0856               	movf	_Sw,w
  4058  0314  0086               	movwf	6
  4059  0315  0857               	movf	_Sw+1,w
  4060  0316  0087               	movwf	7
  4061  0317  1181               	bcf	1,3
  4062                           
  4063                           ;Switch_B1.c: 203: Sw->Hold2Time = 0;
  4064  0318  0856               	movf	_Sw,w
  4065  0319  0086               	movwf	6
  4066  031A  0857               	movf	_Sw+1,w
  4067  031B  0087               	movwf	7
  4068  031C  3145               	addfsr 1,5
  4069  031D  3000               	movlw	0
  4070  031E  3FC0               	movwi [0]fsr1
  4071  031F  3FC1               	movwi [1]fsr1
  4072                           
  4073                           ;Switch_B1.c: 204: Sw->Hold2 = 0;
  4074  0320  0856               	movf	_Sw,w
  4075  0321  0086               	movwf	6
  4076  0322  0857               	movf	_Sw+1,w
  4077  0323  0087               	movwf	7
  4078  0324  1201               	bcf	1,4
  4079                           
  4080                           ;Switch_B1.c: 205: Sw->Hold3Time = 0;
  4081  0325  0856               	movf	_Sw,w
  4082  0326  0086               	movwf	6
  4083  0327  0857               	movf	_Sw+1,w
  4084  0328  0087               	movwf	7
  4085  0329  3147               	addfsr 1,7
  4086  032A  3000               	movlw	0
  4087  032B  3FC0               	movwi [0]fsr1
  4088  032C  3FC1               	movwi [1]fsr1
  4089                           
  4090                           ;Switch_B1.c: 206: Sw->Hold3 = 0;
  4091  032D  0856               	movf	_Sw,w
  4092  032E  0086               	movwf	6
  4093  032F  0857               	movf	_Sw+1,w
  4094  0330  0087               	movwf	7
  4095  0331  1281               	bcf	1,5
  4096                           
  4097                           ;Switch_B1.c: 209: Sw_DimmerOffFunc(sw);
  4098  0332  0835               	movf	setSw_Main@sw,w
  4099  0333  318D  255D         	fcall	_Sw_DimmerOffFunc
  4100  0335  0008               	return
  4101  0336                     __end_of_setSw_Main:	
  4102                           
  4103                           	psect	text8
  4104  06F4                     __ptext8:	
  4105 ;; *************** function _Sw_DimmerOnFunc *****************
  4106 ;; Defined at:
  4107 ;;		line 223 in file "../src/Switch_B1.c"
  4108 ;; Parameters:    Size  Location     Type
  4109 ;;  sw              1    wreg     unsigned char 
  4110 ;; Auto vars:     Size  Location     Type
  4111 ;;  sw              1   18[BANK0 ] unsigned char 
  4112 ;;  Idle            1   17[BANK0 ] unsigned char 
  4113 ;; Return value:  Size  Location     Type
  4114 ;;		None               void
  4115 ;; Registers used:
  4116 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4117 ;; Tracked objects:
  4118 ;;		On entry : 0/0
  4119 ;;		On exit  : 0/0
  4120 ;;		Unchanged: 0/0
  4121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4123 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4124 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4125 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4126 ;;Total ram usage:        6 bytes
  4127 ;; Hardware stack levels used:    1
  4128 ;; Hardware stack levels required when called:    7
  4129 ;; This function calls:
  4130 ;;		_setBuz
  4131 ;;		_setDimmerLights_Switch
  4132 ;;		_setDimmerLights_Trigger
  4133 ;; This function is called by:
  4134 ;;		_setSw_Main
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138                           
  4139                           ;psect for function _Sw_DimmerOnFunc
  4140  06F4                     _Sw_DimmerOnFunc:	
  4141                           
  4142                           ;incstack = 0
  4143                           ; Regs used in _Sw_DimmerOnFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4144                           ;Sw_DimmerOnFunc@sw stored from wreg
  4145  06F4  0020               	movlb	0	; select bank0
  4146  06F5  00B2               	movwf	Sw_DimmerOnFunc@sw
  4147                           
  4148                           ;Switch_B1.c: 224: char Idle = 1;
  4149  06F6  01B1               	clrf	Sw_DimmerOnFunc@Idle
  4150  06F7  0AB1               	incf	Sw_DimmerOnFunc@Idle,f
  4151                           
  4152                           ;Switch_B1.c: 228: if (sw == 1) {
  4153  06F8  0832               	movf	Sw_DimmerOnFunc@sw,w
  4154  06F9  3A01               	xorlw	1
  4155  06FA  1D03               	skipz
  4156  06FB  2F0D               	goto	l3970
  4157                           
  4158                           ;Switch_B1.c: 229: Idle = (DimmerLights22->AdjGo == 1 || DimmerLights33->AdjGo == 1) ? 0
      +                           : 1;
  4159  06FC  01AE               	clrf	_Sw_DimmerOnFunc$4005
  4160  06FD  085C               	movf	_DimmerLights22,w
  4161  06FE  3E08               	addlw	8
  4162  06FF  0086               	movwf	6
  4163  0700  0187               	clrf	7
  4164  0701  1981               	btfsc	1,3
  4165  0702  2F0B               	goto	l3968
  4166  0703  085D               	movf	_DimmerLights33,w
  4167  0704  3E08               	addlw	8
  4168  0705  0086               	movwf	6
  4169  0706  0187               	clrf	7
  4170  0707  1981               	btfsc	1,3
  4171  0708  2F0B               	goto	l3968
  4172  0709  01AE               	clrf	_Sw_DimmerOnFunc$4005
  4173  070A  0AAE               	incf	_Sw_DimmerOnFunc$4005,f
  4174  070B                     l3968:	
  4175  070B  082E               	movf	_Sw_DimmerOnFunc$4005,w
  4176  070C  2F36               	goto	L2
  4177  070D                     l3970:	
  4178                           ;Switch_B1.c: 230: } else if (sw == 2) {
  4179                           
  4180  070D  0832               	movf	Sw_DimmerOnFunc@sw,w
  4181  070E  3A02               	xorlw	2
  4182  070F  1D03               	skipz
  4183  0710  2F22               	goto	l3982
  4184                           
  4185                           ;Switch_B1.c: 231: Idle = (DimmerLights11->AdjGo == 1 || DimmerLights33->AdjGo == 1) ? 0
      +                           : 1;
  4186  0711  01AF               	clrf	_Sw_DimmerOnFunc$4006
  4187  0712  085B               	movf	_DimmerLights11,w
  4188  0713  3E08               	addlw	8
  4189  0714  0086               	movwf	6
  4190  0715  0187               	clrf	7
  4191  0716  1981               	btfsc	1,3
  4192  0717  2F20               	goto	l3980
  4193  0718  085D               	movf	_DimmerLights33,w
  4194  0719  3E08               	addlw	8
  4195  071A  0086               	movwf	6
  4196  071B  0187               	clrf	7
  4197  071C  1981               	btfsc	1,3
  4198  071D  2F20               	goto	l3980
  4199  071E  01AF               	clrf	_Sw_DimmerOnFunc$4006
  4200  071F  0AAF               	incf	_Sw_DimmerOnFunc$4006,f
  4201  0720                     l3980:	
  4202  0720  082F               	movf	_Sw_DimmerOnFunc$4006,w
  4203  0721  2F36               	goto	L2
  4204  0722                     l3982:	
  4205                           ;Switch_B1.c: 232: } else if (sw == 3) {
  4206                           
  4207  0722  0832               	movf	Sw_DimmerOnFunc@sw,w
  4208  0723  3A03               	xorlw	3
  4209  0724  1D03               	skipz
  4210  0725  2F39               	goto	l1724
  4211                           
  4212                           ;Switch_B1.c: 233: Idle = (DimmerLights11->AdjGo == 1 || DimmerLights22->AdjGo == 1) ? 0
      +                           : 1;
  4213  0726  01B0               	clrf	_Sw_DimmerOnFunc$4007
  4214  0727  085B               	movf	_DimmerLights11,w
  4215  0728  3E08               	addlw	8
  4216  0729  0086               	movwf	6
  4217  072A  0187               	clrf	7
  4218  072B  1981               	btfsc	1,3
  4219  072C  2F35               	goto	l3992
  4220  072D  085C               	movf	_DimmerLights22,w
  4221  072E  3E08               	addlw	8
  4222  072F  0086               	movwf	6
  4223  0730  0187               	clrf	7
  4224  0731  1981               	btfsc	1,3
  4225  0732  2F35               	goto	l3992
  4226  0733  01B0               	clrf	_Sw_DimmerOnFunc$4007
  4227  0734  0AB0               	incf	_Sw_DimmerOnFunc$4007,f
  4228  0735                     l3992:	
  4229  0735  0830               	movf	_Sw_DimmerOnFunc$4007,w
  4230  0736                     L2:	
  4231  0736  00AD               	movwf	??_Sw_DimmerOnFunc
  4232  0737  082D               	movf	??_Sw_DimmerOnFunc,w
  4233  0738  00B1               	movwf	Sw_DimmerOnFunc@Idle
  4234  0739                     l1724:	
  4235                           
  4236                           ;Switch_B1.c: 234: }
  4237                           ;Switch_B1.c: 245: if (Idle) {
  4238  0739  0831               	movf	Sw_DimmerOnFunc@Idle,w
  4239  073A  1903               	btfsc	3,2
  4240  073B  0008               	return
  4241                           
  4242                           ;Switch_B1.c: 246: Sw->Flag = 1;
  4243  073C  0856               	movf	_Sw,w
  4244  073D  0086               	movwf	6
  4245  073E  0857               	movf	_Sw+1,w
  4246  073F  0087               	movwf	7
  4247  0740  1781               	bsf	1,7
  4248                           
  4249                           ;Switch_B1.c: 247: setBuz(1, 100);
  4250  0741  3064               	movlw	100
  4251  0742  00A9               	movwf	setBuz@time
  4252  0743  3000               	movlw	0
  4253  0744  00AA               	movwf	setBuz@time+1
  4254  0745  3001               	movlw	1
  4255  0746  3186  267D  3186   	fcall	_setBuz
  4256                           
  4257                           ;Switch_B1.c: 248: if (!Sw->Status) {
  4258  0749  0020               	movlb	0	; select bank0
  4259  074A  0856               	movf	_Sw,w
  4260  074B  0086               	movwf	6
  4261  074C  0857               	movf	_Sw+1,w
  4262  074D  0087               	movwf	7
  4263  074E  1B01               	btfsc	1,6
  4264  074F  2F63               	goto	l4006
  4265                           
  4266                           ;Switch_B1.c: 249: Sw->Status = 1;
  4267  0750  0856               	movf	_Sw,w
  4268  0751  0086               	movwf	6
  4269  0752  0857               	movf	_Sw+1,w
  4270  0753  0087               	movwf	7
  4271  0754  1701               	bsf	1,6
  4272                           
  4273                           ;Switch_B1.c: 250: ;;
  4274                           ;Switch_B1.c: 252: setDimmerLights_Trigger(sw, 1);
  4275  0755  01A2               	clrf	setDimmerLights_Trigger@command
  4276  0756  0AA2               	incf	setDimmerLights_Trigger@command,f
  4277  0757  0832               	movf	Sw_DimmerOnFunc@sw,w
  4278  0758  3189  2142  3186   	fcall	_setDimmerLights_Trigger
  4279                           
  4280                           ;Switch_B1.c: 253: setDimmerLights_Switch(sw, 1);
  4281  075B  0020               	movlb	0	; select bank0
  4282  075C  01A2               	clrf	setDimmerLights_Switch@command
  4283  075D  0AA2               	incf	setDimmerLights_Switch@command,f
  4284  075E  0832               	movf	Sw_DimmerOnFunc@sw,w
  4285  075F  3189  2133         	fcall	_setDimmerLights_Switch
  4286                           
  4287                           ;Switch_B1.c: 255: ;;
  4288                           ;Switch_B1.c: 256: ;;
  4289                           ;Switch_B1.c: 258: } else {
  4290  0761  0020               	movlb	0	; select bank0
  4291  0762  0008               	return
  4292  0763                     l4006:	
  4293                           
  4294                           ;Switch_B1.c: 259: Sw->Status = 0;
  4295  0763  0020               	movlb	0	; select bank0
  4296  0764  0856               	movf	_Sw,w
  4297  0765  0086               	movwf	6
  4298  0766  0857               	movf	_Sw+1,w
  4299  0767  0087               	movwf	7
  4300  0768  1301               	bcf	1,6
  4301                           
  4302                           ;Switch_B1.c: 260: ;;
  4303  0769  0008               	return
  4304  076A                     __end_of_Sw_DimmerOnFunc:	
  4305                           
  4306                           	psect	text9
  4307  0D5D                     __ptext9:	
  4308 ;; *************** function _Sw_DimmerOffFunc *****************
  4309 ;; Defined at:
  4310 ;;		line 266 in file "../src/Switch_B1.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;  sw              1    wreg     unsigned char 
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;  sw              1    6[BANK0 ] unsigned char 
  4315 ;; Return value:  Size  Location     Type
  4316 ;;		None               void
  4317 ;; Registers used:
  4318 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4319 ;; Tracked objects:
  4320 ;;		On entry : 0/0
  4321 ;;		On exit  : 0/0
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4325 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4326 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4327 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4328 ;;Total ram usage:        3 bytes
  4329 ;; Hardware stack levels used:    1
  4330 ;; Hardware stack levels required when called:    7
  4331 ;; This function calls:
  4332 ;;		_setDimmerLights_AdjGo
  4333 ;;		_setDimmerLights_Switch
  4334 ;;		_setDimmerLights_Trigger
  4335 ;;		_setDimmerLights_TriggerAdj
  4336 ;; This function is called by:
  4337 ;;		_setSw_Main
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341                           
  4342                           ;psect for function _Sw_DimmerOffFunc
  4343  0D5D                     _Sw_DimmerOffFunc:	
  4344                           
  4345                           ;incstack = 0
  4346                           ; Regs used in _Sw_DimmerOffFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4347                           ;Sw_DimmerOffFunc@sw stored from wreg
  4348  0D5D  0020               	movlb	0	; select bank0
  4349  0D5E  00A6               	movwf	Sw_DimmerOffFunc@sw
  4350                           
  4351                           ;Switch_B1.c: 267: if (Sw->Flag) {
  4352  0D5F  0856               	movf	_Sw,w
  4353  0D60  0086               	movwf	6
  4354  0D61  0857               	movf	_Sw+1,w
  4355  0D62  0087               	movwf	7
  4356  0D63  1F81               	btfss	1,7
  4357  0D64  0008               	return
  4358                           
  4359                           ;Switch_B1.c: 268: Sw->Flag = 0;
  4360  0D65  0856               	movf	_Sw,w
  4361  0D66  0086               	movwf	6
  4362  0D67  0857               	movf	_Sw+1,w
  4363  0D68  0087               	movwf	7
  4364  0D69  1381               	bcf	1,7
  4365                           
  4366                           ;Switch_B1.c: 269: if (Sw->Status) {
  4367  0D6A  0856               	movf	_Sw,w
  4368  0D6B  0086               	movwf	6
  4369  0D6C  0857               	movf	_Sw+1,w
  4370  0D6D  0087               	movwf	7
  4371  0D6E  1F01               	btfss	1,6
  4372  0D6F  2D9B               	goto	l4068
  4373                           
  4374                           ;Switch_B1.c: 270: if (Sw->Adj) {
  4375  0D70  0856               	movf	_Sw,w
  4376  0D71  0086               	movwf	6
  4377  0D72  0857               	movf	_Sw+1,w
  4378  0D73  0087               	movwf	7
  4379  0D74  3141               	addfsr 1,1
  4380  0D75  1C01               	btfss	1,0
  4381  0D76  0008               	return
  4382                           
  4383                           ;Switch_B1.c: 271: Sw->Adj = 0;
  4384  0D77  0856               	movf	_Sw,w
  4385  0D78  0086               	movwf	6
  4386  0D79  0857               	movf	_Sw+1,w
  4387  0D7A  0087               	movwf	7
  4388  0D7B  3141               	addfsr 1,1
  4389  0D7C  1001               	bcf	1,0
  4390                           
  4391                           ;Switch_B1.c: 272: setDimmerLights_TriggerAdj(sw, 1);
  4392  0D7D  01A2               	clrf	setDimmerLights_TriggerAdj@command
  4393  0D7E  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  4394  0D7F  0826               	movf	Sw_DimmerOffFunc@sw,w
  4395  0D80  3189  2124  318D   	fcall	_setDimmerLights_TriggerAdj
  4396                           
  4397                           ;Switch_B1.c: 273: setDimmerLights_AdjGo(sw, 0);
  4398  0D83  0020               	movlb	0	; select bank0
  4399  0D84  01A2               	clrf	setDimmerLights_AdjGo@command
  4400  0D85  0826               	movf	Sw_DimmerOffFunc@sw,w
  4401  0D86  3189  2115         	fcall	_setDimmerLights_AdjGo
  4402                           
  4403                           ;Switch_B1.c: 275: product->Data[17]=product->Data[26 + sw];
  4404  0D88  0020               	movlb	0	; select bank0
  4405  0D89  0826               	movf	Sw_DimmerOffFunc@sw,w
  4406  0D8A  3E1A               	addlw	26
  4407  0D8B  076B               	addwf	_product,w
  4408  0D8C  00A4               	movwf	??_Sw_DimmerOffFunc
  4409  0D8D  0824               	movf	??_Sw_DimmerOffFunc,w
  4410  0D8E  0086               	movwf	6
  4411  0D8F  3001               	movlw	1	; select bank2/3
  4412  0D90  0087               	movwf	7
  4413  0D91  0801               	movf	1,w
  4414  0D92  00A5               	movwf	??_Sw_DimmerOffFunc+1
  4415  0D93  086B               	movf	_product,w
  4416  0D94  3E11               	addlw	17
  4417  0D95  0086               	movwf	6
  4418  0D96  3001               	movlw	1	; select bank2/3
  4419  0D97  0087               	movwf	7
  4420  0D98  0825               	movf	??_Sw_DimmerOffFunc+1,w
  4421  0D99  0081               	movwf	1
  4422                           
  4423                           ;Switch_B1.c: 279: }
  4424                           ;Switch_B1.c: 280: } else {
  4425                           
  4426                           ;Switch_B1.c: 276: ;;
  4427                           ;Switch_B1.c: 277: ;;
  4428  0D9A  0008               	return
  4429  0D9B                     l4068:	
  4430                           
  4431                           ;Switch_B1.c: 281: setDimmerLights_Trigger(sw, 1);
  4432  0D9B  01A2               	clrf	setDimmerLights_Trigger@command
  4433  0D9C  0AA2               	incf	setDimmerLights_Trigger@command,f
  4434  0D9D  0826               	movf	Sw_DimmerOffFunc@sw,w
  4435  0D9E  3189  2142  318D   	fcall	_setDimmerLights_Trigger
  4436                           
  4437                           ;Switch_B1.c: 282: setDimmerLights_Switch(sw, 0);
  4438  0DA1  0020               	movlb	0	; select bank0
  4439  0DA2  01A2               	clrf	setDimmerLights_Switch@command
  4440  0DA3  0826               	movf	Sw_DimmerOffFunc@sw,w
  4441  0DA4  3189  2133         	fcall	_setDimmerLights_Switch
  4442                           
  4443                           ;Switch_B1.c: 284: ;;
  4444                           ;Switch_B1.c: 285: ;;
  4445                           ;Switch_B1.c: 286: ;;
  4446  0DA6  0008               	return
  4447  0DA7                     __end_of_Sw_DimmerOffFunc:	
  4448                           
  4449                           	psect	text10
  4450  0942                     __ptext10:	
  4451 ;; *************** function _setDimmerLights_Trigger *****************
  4452 ;; Defined at:
  4453 ;;		line 731 in file "../src/Dimmer_B1.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;  lights          1    wreg     unsigned char 
  4456 ;;  command         1    2[BANK0 ] unsigned char 
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;  lights          1    3[BANK0 ] unsigned char 
  4459 ;; Return value:  Size  Location     Type
  4460 ;;		None               void
  4461 ;; Registers used:
  4462 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4468 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4469 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4471 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4472 ;;Total ram usage:        2 bytes
  4473 ;; Hardware stack levels used:    1
  4474 ;; Hardware stack levels required when called:    6
  4475 ;; This function calls:
  4476 ;;		_DimmerLightsPointSelect
  4477 ;; This function is called by:
  4478 ;;		_Sw_DimmerOnFunc
  4479 ;;		_Sw_DimmerOffFunc
  4480 ;; This function uses a non-reentrant model
  4481 ;;
  4482                           
  4483                           
  4484                           ;psect for function _setDimmerLights_Trigger
  4485  0942                     _setDimmerLights_Trigger:	
  4486                           
  4487                           ;incstack = 0
  4488                           ; Regs used in _setDimmerLights_Trigger: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  4489                           ;setDimmerLights_Trigger@lights stored from wreg
  4490  0942  0020               	movlb	0	; select bank0
  4491  0943  00A3               	movwf	setDimmerLights_Trigger@lights
  4492                           
  4493                           ;Dimmer_B1.c: 733: DimmerLightsPointSelect(lights);
  4494  0944  0823               	movf	setDimmerLights_Trigger@lights,w
  4495  0945  318A  229A         	fcall	_DimmerLightsPointSelect
  4496                           
  4497                           ;Dimmer_B1.c: 734: DimmerLights->Trigger = command;
  4498  0947  0020               	movlb	0	; select bank0
  4499  0948  085A               	movf	_DimmerLights,w
  4500  0949  3E08               	addlw	8
  4501  094A  0086               	movwf	6
  4502  094B  0187               	clrf	7
  4503  094C  0822               	movf	setDimmerLights_Trigger@command,w
  4504  094D  1101               	bcf	1,2
  4505  094E  1D03               	skipz
  4506  094F  1501               	bsf	1,2
  4507  0950  0008               	return
  4508  0951                     __end_of_setDimmerLights_Trigger:	
  4509                           
  4510                           	psect	text11
  4511  0933                     __ptext11:	
  4512 ;; *************** function _setDimmerLights_Switch *****************
  4513 ;; Defined at:
  4514 ;;		line 719 in file "../src/Dimmer_B1.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;  lights          1    wreg     unsigned char 
  4517 ;;  command         1    2[BANK0 ] unsigned char 
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;  lights          1    3[BANK0 ] unsigned char 
  4520 ;; Return value:  Size  Location     Type
  4521 ;;		None               void
  4522 ;; Registers used:
  4523 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4524 ;; Tracked objects:
  4525 ;;		On entry : 0/0
  4526 ;;		On exit  : 0/0
  4527 ;;		Unchanged: 0/0
  4528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4529 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4530 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4532 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4533 ;;Total ram usage:        2 bytes
  4534 ;; Hardware stack levels used:    1
  4535 ;; Hardware stack levels required when called:    6
  4536 ;; This function calls:
  4537 ;;		_DimmerLightsPointSelect
  4538 ;; This function is called by:
  4539 ;;		_Sw_DimmerOnFunc
  4540 ;;		_Sw_DimmerOffFunc
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           
  4545                           ;psect for function _setDimmerLights_Switch
  4546  0933                     _setDimmerLights_Switch:	
  4547                           
  4548                           ;incstack = 0
  4549                           ; Regs used in _setDimmerLights_Switch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  4550                           ;setDimmerLights_Switch@lights stored from wreg
  4551  0933  0020               	movlb	0	; select bank0
  4552  0934  00A3               	movwf	setDimmerLights_Switch@lights
  4553                           
  4554                           ;Dimmer_B1.c: 721: DimmerLightsPointSelect(lights);
  4555  0935  0823               	movf	setDimmerLights_Switch@lights,w
  4556  0936  318A  229A         	fcall	_DimmerLightsPointSelect
  4557                           
  4558                           ;Dimmer_B1.c: 722: DimmerLights->Switch = command;
  4559  0938  0020               	movlb	0	; select bank0
  4560  0939  085A               	movf	_DimmerLights,w
  4561  093A  3E08               	addlw	8
  4562  093B  0086               	movwf	6
  4563  093C  0187               	clrf	7
  4564  093D  0822               	movf	setDimmerLights_Switch@command,w
  4565  093E  1081               	bcf	1,1
  4566  093F  1D03               	skipz
  4567  0940  1481               	bsf	1,1
  4568  0941  0008               	return
  4569  0942                     __end_of_setDimmerLights_Switch:	
  4570                           
  4571                           	psect	text12
  4572  0EC0                     __ptext12:	
  4573 ;; *************** function _Sw_DimmerAdjFunc *****************
  4574 ;; Defined at:
  4575 ;;		line 293 in file "../src/Switch_B1.c"
  4576 ;; Parameters:    Size  Location     Type
  4577 ;;  sw              1    wreg     unsigned char 
  4578 ;; Auto vars:     Size  Location     Type
  4579 ;;  sw              1    9[BANK0 ] unsigned char 
  4580 ;;  Idle            1    8[BANK0 ] unsigned char 
  4581 ;; Return value:  Size  Location     Type
  4582 ;;		None               void
  4583 ;; Registers used:
  4584 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4591 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4592 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4593 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4594 ;;Total ram usage:        6 bytes
  4595 ;; Hardware stack levels used:    1
  4596 ;; Hardware stack levels required when called:    7
  4597 ;; This function calls:
  4598 ;;		_setDimmerLights_AdjGo
  4599 ;;		_setDimmerLights_TriggerAdj
  4600 ;; This function is called by:
  4601 ;;		_setSw_Main
  4602 ;; This function uses a non-reentrant model
  4603 ;;
  4604                           
  4605                           
  4606                           ;psect for function _Sw_DimmerAdjFunc
  4607  0EC0                     _Sw_DimmerAdjFunc:	
  4608                           
  4609                           ;incstack = 0
  4610                           ; Regs used in _Sw_DimmerAdjFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4611                           ;Sw_DimmerAdjFunc@sw stored from wreg
  4612  0EC0  0020               	movlb	0	; select bank0
  4613  0EC1  00A9               	movwf	Sw_DimmerAdjFunc@sw
  4614                           
  4615                           ;Switch_B1.c: 294: char Idle = 1;
  4616  0EC2  01A8               	clrf	Sw_DimmerAdjFunc@Idle
  4617  0EC3  0AA8               	incf	Sw_DimmerAdjFunc@Idle,f
  4618                           
  4619                           ;Switch_B1.c: 297: if (sw == 1) {
  4620  0EC4  0829               	movf	Sw_DimmerAdjFunc@sw,w
  4621  0EC5  3A01               	xorlw	1
  4622  0EC6  1D03               	skipz
  4623  0EC7  2ED9               	goto	l4022
  4624                           
  4625                           ;Switch_B1.c: 298: Idle = (DimmerLights22->AdjGo || DimmerLights33->AdjGo) ? 0 : 1;
  4626  0EC8  01A5               	clrf	_Sw_DimmerAdjFunc$4017
  4627  0EC9  085C               	movf	_DimmerLights22,w
  4628  0ECA  3E08               	addlw	8
  4629  0ECB  0086               	movwf	6
  4630  0ECC  0187               	clrf	7
  4631  0ECD  1981               	btfsc	1,3
  4632  0ECE  2ED7               	goto	l4020
  4633  0ECF  085D               	movf	_DimmerLights33,w
  4634  0ED0  3E08               	addlw	8
  4635  0ED1  0086               	movwf	6
  4636  0ED2  0187               	clrf	7
  4637  0ED3  1981               	btfsc	1,3
  4638  0ED4  2ED7               	goto	l4020
  4639  0ED5  01A5               	clrf	_Sw_DimmerAdjFunc$4017
  4640  0ED6  0AA5               	incf	_Sw_DimmerAdjFunc$4017,f
  4641  0ED7                     l4020:	
  4642  0ED7  0825               	movf	_Sw_DimmerAdjFunc$4017,w
  4643  0ED8  2F02               	goto	L4
  4644  0ED9                     l4022:	
  4645                           ;Switch_B1.c: 299: } else if (sw == 2) {
  4646                           
  4647  0ED9  0829               	movf	Sw_DimmerAdjFunc@sw,w
  4648  0EDA  3A02               	xorlw	2
  4649  0EDB  1D03               	skipz
  4650  0EDC  2EEE               	goto	l4034
  4651                           
  4652                           ;Switch_B1.c: 300: Idle = (DimmerLights11->AdjGo || DimmerLights33->AdjGo) ? 0 : 1;
  4653  0EDD  01A6               	clrf	_Sw_DimmerAdjFunc$4018
  4654  0EDE  085B               	movf	_DimmerLights11,w
  4655  0EDF  3E08               	addlw	8
  4656  0EE0  0086               	movwf	6
  4657  0EE1  0187               	clrf	7
  4658  0EE2  1981               	btfsc	1,3
  4659  0EE3  2EEC               	goto	l4032
  4660  0EE4  085D               	movf	_DimmerLights33,w
  4661  0EE5  3E08               	addlw	8
  4662  0EE6  0086               	movwf	6
  4663  0EE7  0187               	clrf	7
  4664  0EE8  1981               	btfsc	1,3
  4665  0EE9  2EEC               	goto	l4032
  4666  0EEA  01A6               	clrf	_Sw_DimmerAdjFunc$4018
  4667  0EEB  0AA6               	incf	_Sw_DimmerAdjFunc$4018,f
  4668  0EEC                     l4032:	
  4669  0EEC  0826               	movf	_Sw_DimmerAdjFunc$4018,w
  4670  0EED  2F02               	goto	L4
  4671  0EEE                     l4034:	
  4672                           ;Switch_B1.c: 301: } else if (sw == 3) {
  4673                           
  4674  0EEE  0829               	movf	Sw_DimmerAdjFunc@sw,w
  4675  0EEF  3A03               	xorlw	3
  4676  0EF0  1D03               	skipz
  4677  0EF1  2F05               	goto	l1748
  4678                           
  4679                           ;Switch_B1.c: 302: Idle = (DimmerLights11->AdjGo || DimmerLights22->AdjGo) ? 0 : 1;
  4680  0EF2  01A7               	clrf	_Sw_DimmerAdjFunc$4019
  4681  0EF3  085B               	movf	_DimmerLights11,w
  4682  0EF4  3E08               	addlw	8
  4683  0EF5  0086               	movwf	6
  4684  0EF6  0187               	clrf	7
  4685  0EF7  1981               	btfsc	1,3
  4686  0EF8  2F01               	goto	l4044
  4687  0EF9  085C               	movf	_DimmerLights22,w
  4688  0EFA  3E08               	addlw	8
  4689  0EFB  0086               	movwf	6
  4690  0EFC  0187               	clrf	7
  4691  0EFD  1981               	btfsc	1,3
  4692  0EFE  2F01               	goto	l4044
  4693  0EFF  01A7               	clrf	_Sw_DimmerAdjFunc$4019
  4694  0F00  0AA7               	incf	_Sw_DimmerAdjFunc$4019,f
  4695  0F01                     l4044:	
  4696  0F01  0827               	movf	_Sw_DimmerAdjFunc$4019,w
  4697  0F02                     L4:	
  4698  0F02  00A4               	movwf	??_Sw_DimmerAdjFunc
  4699  0F03  0824               	movf	??_Sw_DimmerAdjFunc,w
  4700  0F04  00A8               	movwf	Sw_DimmerAdjFunc@Idle
  4701  0F05                     l1748:	
  4702                           
  4703                           ;Switch_B1.c: 303: }
  4704                           ;Switch_B1.c: 314: if (Idle) {
  4705  0F05  0828               	movf	Sw_DimmerAdjFunc@Idle,w
  4706  0F06  1903               	btfsc	3,2
  4707  0F07  0008               	return
  4708                           
  4709                           ;Switch_B1.c: 315: if (Sw->Flag) {
  4710  0F08  0856               	movf	_Sw,w
  4711  0F09  0086               	movwf	6
  4712  0F0A  0857               	movf	_Sw+1,w
  4713  0F0B  0087               	movwf	7
  4714  0F0C  1F81               	btfss	1,7
  4715  0F0D  0008               	return
  4716                           
  4717                           ;Switch_B1.c: 316: Sw->Adj = 1;
  4718  0F0E  0856               	movf	_Sw,w
  4719  0F0F  0086               	movwf	6
  4720  0F10  0857               	movf	_Sw+1,w
  4721  0F11  0087               	movwf	7
  4722  0F12  3141               	addfsr 1,1
  4723  0F13  1401               	bsf	1,0
  4724                           
  4725                           ;Switch_B1.c: 317: Sw->Status = 1;
  4726  0F14  0856               	movf	_Sw,w
  4727  0F15  0086               	movwf	6
  4728  0F16  0857               	movf	_Sw+1,w
  4729  0F17  0087               	movwf	7
  4730  0F18  1701               	bsf	1,6
  4731                           
  4732                           ;Switch_B1.c: 318: ;;
  4733                           ;Switch_B1.c: 320: setDimmerLights_TriggerAdj(sw, 1);
  4734  0F19  01A2               	clrf	setDimmerLights_TriggerAdj@command
  4735  0F1A  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  4736  0F1B  0829               	movf	Sw_DimmerAdjFunc@sw,w
  4737  0F1C  3189  2124  318E   	fcall	_setDimmerLights_TriggerAdj
  4738                           
  4739                           ;Switch_B1.c: 321: setDimmerLights_AdjGo(sw, 1);
  4740  0F1F  0020               	movlb	0	; select bank0
  4741  0F20  01A2               	clrf	setDimmerLights_AdjGo@command
  4742  0F21  0AA2               	incf	setDimmerLights_AdjGo@command,f
  4743  0F22  0829               	movf	Sw_DimmerAdjFunc@sw,w
  4744  0F23  3189  2115         	fcall	_setDimmerLights_AdjGo
  4745  0F25  0020               	movlb	0	; select bank0
  4746  0F26  0008               	return
  4747  0F27                     __end_of_Sw_DimmerAdjFunc:	
  4748                           
  4749                           	psect	text13
  4750  0924                     __ptext13:	
  4751 ;; *************** function _setDimmerLights_TriggerAdj *****************
  4752 ;; Defined at:
  4753 ;;		line 737 in file "../src/Dimmer_B1.c"
  4754 ;; Parameters:    Size  Location     Type
  4755 ;;  lights          1    wreg     unsigned char 
  4756 ;;  command         1    2[BANK0 ] unsigned char 
  4757 ;; Auto vars:     Size  Location     Type
  4758 ;;  lights          1    3[BANK0 ] unsigned char 
  4759 ;; Return value:  Size  Location     Type
  4760 ;;		None               void
  4761 ;; Registers used:
  4762 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4763 ;; Tracked objects:
  4764 ;;		On entry : 0/0
  4765 ;;		On exit  : 0/0
  4766 ;;		Unchanged: 0/0
  4767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4768 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4769 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4771 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4772 ;;Total ram usage:        2 bytes
  4773 ;; Hardware stack levels used:    1
  4774 ;; Hardware stack levels required when called:    6
  4775 ;; This function calls:
  4776 ;;		_DimmerLightsPointSelect
  4777 ;; This function is called by:
  4778 ;;		_Sw_DimmerOffFunc
  4779 ;;		_Sw_DimmerAdjFunc
  4780 ;; This function uses a non-reentrant model
  4781 ;;
  4782                           
  4783                           
  4784                           ;psect for function _setDimmerLights_TriggerAdj
  4785  0924                     _setDimmerLights_TriggerAdj:	
  4786                           
  4787                           ;incstack = 0
  4788                           ; Regs used in _setDimmerLights_TriggerAdj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4789                           ;setDimmerLights_TriggerAdj@lights stored from wreg
  4790  0924  0020               	movlb	0	; select bank0
  4791  0925  00A3               	movwf	setDimmerLights_TriggerAdj@lights
  4792                           
  4793                           ;Dimmer_B1.c: 739: DimmerLightsPointSelect(lights);
  4794  0926  0823               	movf	setDimmerLights_TriggerAdj@lights,w
  4795  0927  318A  229A         	fcall	_DimmerLightsPointSelect
  4796                           
  4797                           ;Dimmer_B1.c: 740: DimmerLights->TriggerAdj = command;
  4798  0929  0020               	movlb	0	; select bank0
  4799  092A  085A               	movf	_DimmerLights,w
  4800  092B  3E08               	addlw	8
  4801  092C  0086               	movwf	6
  4802  092D  0187               	clrf	7
  4803  092E  0822               	movf	setDimmerLights_TriggerAdj@command,w
  4804  092F  1201               	bcf	1,4
  4805  0930  1D03               	skipz
  4806  0931  1601               	bsf	1,4
  4807  0932  0008               	return
  4808  0933                     __end_of_setDimmerLights_TriggerAdj:	
  4809                           
  4810                           	psect	text14
  4811  0915                     __ptext14:	
  4812 ;; *************** function _setDimmerLights_AdjGo *****************
  4813 ;; Defined at:
  4814 ;;		line 725 in file "../src/Dimmer_B1.c"
  4815 ;; Parameters:    Size  Location     Type
  4816 ;;  lights          1    wreg     unsigned char 
  4817 ;;  command         1    2[BANK0 ] unsigned char 
  4818 ;; Auto vars:     Size  Location     Type
  4819 ;;  lights          1    3[BANK0 ] unsigned char 
  4820 ;; Return value:  Size  Location     Type
  4821 ;;		None               void
  4822 ;; Registers used:
  4823 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4824 ;; Tracked objects:
  4825 ;;		On entry : 0/0
  4826 ;;		On exit  : 0/0
  4827 ;;		Unchanged: 0/0
  4828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4829 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4830 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4832 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4833 ;;Total ram usage:        2 bytes
  4834 ;; Hardware stack levels used:    1
  4835 ;; Hardware stack levels required when called:    6
  4836 ;; This function calls:
  4837 ;;		_DimmerLightsPointSelect
  4838 ;; This function is called by:
  4839 ;;		_Sw_DimmerOffFunc
  4840 ;;		_Sw_DimmerAdjFunc
  4841 ;; This function uses a non-reentrant model
  4842 ;;
  4843                           
  4844                           
  4845                           ;psect for function _setDimmerLights_AdjGo
  4846  0915                     _setDimmerLights_AdjGo:	
  4847                           
  4848                           ;incstack = 0
  4849                           ; Regs used in _setDimmerLights_AdjGo: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  4850                           ;setDimmerLights_AdjGo@lights stored from wreg
  4851  0915  0020               	movlb	0	; select bank0
  4852  0916  00A3               	movwf	setDimmerLights_AdjGo@lights
  4853                           
  4854                           ;Dimmer_B1.c: 727: DimmerLightsPointSelect(lights);
  4855  0917  0823               	movf	setDimmerLights_AdjGo@lights,w
  4856  0918  318A  229A         	fcall	_DimmerLightsPointSelect
  4857                           
  4858                           ;Dimmer_B1.c: 728: DimmerLights->AdjGo = command;
  4859  091A  0020               	movlb	0	; select bank0
  4860  091B  085A               	movf	_DimmerLights,w
  4861  091C  3E08               	addlw	8
  4862  091D  0086               	movwf	6
  4863  091E  0187               	clrf	7
  4864  091F  0822               	movf	setDimmerLights_AdjGo@command,w
  4865  0920  1181               	bcf	1,3
  4866  0921  1D03               	skipz
  4867  0922  1581               	bsf	1,3
  4868  0923  0008               	return
  4869  0924                     __end_of_setDimmerLights_AdjGo:	
  4870                           
  4871                           	psect	text15
  4872  0AD0                     __ptext15:	
  4873 ;; *************** function _SwPointSelect *****************
  4874 ;; Defined at:
  4875 ;;		line 17 in file "../src/Switch_B1.c"
  4876 ;; Parameters:    Size  Location     Type
  4877 ;;  sw              1    wreg     unsigned char 
  4878 ;; Auto vars:     Size  Location     Type
  4879 ;;  sw              1    0[BANK0 ] unsigned char 
  4880 ;; Return value:  Size  Location     Type
  4881 ;;		None               void
  4882 ;; Registers used:
  4883 ;;		wreg, status,2, status,0
  4884 ;; Tracked objects:
  4885 ;;		On entry : 0/0
  4886 ;;		On exit  : 0/0
  4887 ;;		Unchanged: 0/0
  4888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4890 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4892 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4893 ;;Total ram usage:        1 bytes
  4894 ;; Hardware stack levels used:    1
  4895 ;; Hardware stack levels required when called:    5
  4896 ;; This function calls:
  4897 ;;		Nothing
  4898 ;; This function is called by:
  4899 ;;		_setSw_Enable
  4900 ;;		_setSw_Main
  4901 ;;		_setSw_Status
  4902 ;;		_Sw_Detect
  4903 ;; This function uses a non-reentrant model
  4904 ;;
  4905                           
  4906                           
  4907                           ;psect for function _SwPointSelect
  4908  0AD0                     _SwPointSelect:	
  4909                           
  4910                           ;incstack = 0
  4911                           ; Regs used in _SwPointSelect: [wreg+status,2+status,0]
  4912                           ;SwPointSelect@sw stored from wreg
  4913  0AD0  0020               	movlb	0	; select bank0
  4914  0AD1  00A0               	movwf	SwPointSelect@sw
  4915                           
  4916                           ;Switch_B1.c: 20: if (sw == 1) {
  4917  0AD2  0820               	movf	SwPointSelect@sw,w
  4918  0AD3  3A01               	xorlw	1
  4919  0AD4  1D03               	skipz
  4920  0AD5  2ADB               	goto	l3948
  4921                           
  4922                           ;Switch_B1.c: 21: Sw = &Sw1;
  4923  0AD6  30CD               	movlw	low _Sw1
  4924  0AD7  00D6               	movwf	_Sw
  4925  0AD8  3000               	movlw	high _Sw1
  4926  0AD9  00D7               	movwf	_Sw+1
  4927                           
  4928                           ;Switch_B1.c: 22: }
  4929  0ADA  0008               	return
  4930  0ADB                     l3948:	
  4931                           
  4932                           ;Switch_B1.c: 25: else if (sw == 2) {
  4933  0ADB  0820               	movf	SwPointSelect@sw,w
  4934  0ADC  3A02               	xorlw	2
  4935  0ADD  1D03               	skipz
  4936  0ADE  2AE4               	goto	l3952
  4937                           
  4938                           ;Switch_B1.c: 26: Sw = &Sw2;
  4939  0ADF  30D6               	movlw	low _Sw2
  4940  0AE0  00D6               	movwf	_Sw
  4941  0AE1  3000               	movlw	high _Sw2
  4942  0AE2  00D7               	movwf	_Sw+1
  4943                           
  4944                           ;Switch_B1.c: 27: }
  4945  0AE3  0008               	return
  4946  0AE4                     l3952:	
  4947                           
  4948                           ;Switch_B1.c: 30: else if (sw == 3) {
  4949  0AE4  0820               	movf	SwPointSelect@sw,w
  4950  0AE5  3A03               	xorlw	3
  4951  0AE6  1D03               	skipz
  4952  0AE7  0008               	return
  4953                           
  4954                           ;Switch_B1.c: 31: Sw = &Sw3;
  4955  0AE8  303C               	movlw	low _Sw3
  4956  0AE9  00D6               	movwf	_Sw
  4957  0AEA  3001               	movlw	high _Sw3
  4958  0AEB  00D7               	movwf	_Sw+1
  4959  0AEC  0008               	return
  4960  0AED                     __end_of_SwPointSelect:	
  4961                           
  4962                           	psect	text16
  4963  09A3                     __ptext16:	
  4964 ;; *************** function _Switch_Initialization *****************
  4965 ;; Defined at:
  4966 ;;		line 37 in file "../src/Switch_B1.c"
  4967 ;; Parameters:    Size  Location     Type
  4968 ;;		None
  4969 ;; Auto vars:     Size  Location     Type
  4970 ;;		None
  4971 ;; Return value:  Size  Location     Type
  4972 ;;		None               void
  4973 ;; Registers used:
  4974 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4975 ;; Tracked objects:
  4976 ;;		On entry : 0/0
  4977 ;;		On exit  : 0/0
  4978 ;;		Unchanged: 0/0
  4979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4984 ;;Total ram usage:        0 bytes
  4985 ;; Hardware stack levels used:    1
  4986 ;; Hardware stack levels required when called:    8
  4987 ;; This function calls:
  4988 ;;		_TouchPower
  4989 ;;		_setSw_Initialization
  4990 ;; This function is called by:
  4991 ;;		_main
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994                           
  4995                           
  4996                           ;psect for function _Switch_Initialization
  4997  09A3                     _Switch_Initialization:	
  4998                           
  4999                           ;Switch_B1.c: 38: TouchPower();
  5000                           
  5001                           ;incstack = 0
  5002                           ; Regs used in _Switch_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  5003  09A3  3188  207E  3189   	fcall	_TouchPower
  5004                           
  5005                           ;Switch_B1.c: 40: WPUB1 = 0;
  5006  09A6  0024               	movlb	4	; select bank4
  5007  09A7  108D               	bcf	13,1	;volatile
  5008                           
  5009                           ;Switch_B1.c: 49: setSw_Initialization(1);
  5010  09A8  3001               	movlw	1
  5011  09A9  3188  20A9  3189   	fcall	_setSw_Initialization
  5012                           
  5013                           ;Switch_B1.c: 52: setSw_Initialization(2);
  5014  09AC  3002               	movlw	2
  5015  09AD  3188  20A9  3189   	fcall	_setSw_Initialization
  5016                           
  5017                           ;Switch_B1.c: 55: setSw_Initialization(3);
  5018  09B0  3003               	movlw	3
  5019  09B1  3188  20A9         	fcall	_setSw_Initialization
  5020  09B3  0008               	return
  5021  09B4                     __end_of_Switch_Initialization:	
  5022                           
  5023                           	psect	text17
  5024  08A9                     __ptext17:	
  5025 ;; *************** function _setSw_Initialization *****************
  5026 ;; Defined at:
  5027 ;;		line 77 in file "../src/Switch_B1.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;  sw              1    wreg     unsigned char 
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;  sw              1    4[BANK0 ] unsigned char 
  5032 ;; Return value:  Size  Location     Type
  5033 ;;		None               void
  5034 ;; Registers used:
  5035 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5042 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5044 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5045 ;;Total ram usage:        1 bytes
  5046 ;; Hardware stack levels used:    1
  5047 ;; Hardware stack levels required when called:    7
  5048 ;; This function calls:
  5049 ;;		_setLED
  5050 ;; This function is called by:
  5051 ;;		_Switch_Initialization
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055                           
  5056                           ;psect for function _setSw_Initialization
  5057  08A9                     _setSw_Initialization:	
  5058                           
  5059                           ;incstack = 0
  5060                           ; Regs used in _setSw_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5061                           ;setSw_Initialization@sw stored from wreg
  5062  08A9  0020               	movlb	0	; select bank0
  5063  08AA  00A4               	movwf	setSw_Initialization@sw
  5064                           
  5065                           ;Switch_B1.c: 78: setLED(sw, 1);
  5066  08AB  01A2               	clrf	setLED@command
  5067  08AC  0AA2               	incf	setLED@command,f
  5068  08AD  0824               	movf	setSw_Initialization@sw,w
  5069  08AE  318F  2793         	fcall	_setLED
  5070  08B0  0008               	return
  5071  08B1                     __end_of_setSw_Initialization:	
  5072                           
  5073                           	psect	text18
  5074  087E                     __ptext18:	
  5075 ;; *************** function _TouchPower *****************
  5076 ;; Defined at:
  5077 ;;		line 10 in file "../src/Switch_B1.c"
  5078 ;; Parameters:    Size  Location     Type
  5079 ;;		None
  5080 ;; Auto vars:     Size  Location     Type
  5081 ;;		None
  5082 ;; Return value:  Size  Location     Type
  5083 ;;		None               void
  5084 ;; Registers used:
  5085 ;;		None
  5086 ;; Tracked objects:
  5087 ;;		On entry : 0/0
  5088 ;;		On exit  : 0/0
  5089 ;;		Unchanged: 0/0
  5090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5095 ;;Total ram usage:        0 bytes
  5096 ;; Hardware stack levels used:    1
  5097 ;; Hardware stack levels required when called:    5
  5098 ;; This function calls:
  5099 ;;		Nothing
  5100 ;; This function is called by:
  5101 ;;		_Switch_Initialization
  5102 ;; This function uses a non-reentrant model
  5103 ;;
  5104                           
  5105                           
  5106                           ;psect for function _TouchPower
  5107  087E                     _TouchPower:	
  5108  087E                     l1667:	
  5109                           ;Switch_B1.c: 11: while (RC5 == 0)
  5110                           
  5111                           ;incstack = 0
  5112                           ; Regs used in _TouchPower: []
  5113                           
  5114  087E  0020               	movlb	0	; select bank0
  5115  087F  1A8E               	btfsc	14,5	;volatile
  5116  0880  0008               	return
  5117                           
  5118                           ;Switch_B1.c: 12: RC5 = 1;
  5119  0881  168E               	bsf	14,5	;volatile
  5120  0882  287E               	goto	l1667
  5121  0883                     __end_of_TouchPower:	
  5122                           
  5123                           	psect	text19
  5124  0A80                     __ptext19:	
  5125 ;; *************** function _Mcu_Initialization *****************
  5126 ;; Defined at:
  5127 ;;		line 30 in file "../src/MCU_B1.c"
  5128 ;; Parameters:    Size  Location     Type
  5129 ;;		None
  5130 ;; Auto vars:     Size  Location     Type
  5131 ;;		None
  5132 ;; Return value:  Size  Location     Type
  5133 ;;		None               void
  5134 ;; Registers used:
  5135 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5136 ;; Tracked objects:
  5137 ;;		On entry : 0/0
  5138 ;;		On exit  : 0/0
  5139 ;;		Unchanged: 0/0
  5140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5143 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5144 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5145 ;;Total ram usage:        1 bytes
  5146 ;; Hardware stack levels used:    1
  5147 ;; Hardware stack levels required when called:    6
  5148 ;; This function calls:
  5149 ;;		_ADC_Set
  5150 ;;		_Fosc_Set
  5151 ;;		_INT_Set
  5152 ;;		_IOC_Set
  5153 ;;		_IO_Set
  5154 ;;		_TMR0_Set
  5155 ;;		_WDT_Set
  5156 ;; This function is called by:
  5157 ;;		_main
  5158 ;; This function uses a non-reentrant model
  5159 ;;
  5160                           
  5161                           
  5162                           ;psect for function _Mcu_Initialization
  5163  0A80                     _Mcu_Initialization:	
  5164                           
  5165                           ;MCU_B1.c: 32: Fosc_Set();
  5166                           
  5167                           ;incstack = 0
  5168                           ; Regs used in _Mcu_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5169  0A80  3188  207A  318A   	fcall	_Fosc_Set
  5170                           
  5171                           ;MCU_B1.c: 34: IO_Set();
  5172  0A83  318A  2202  318A   	fcall	_IO_Set
  5173                           
  5174                           ;MCU_B1.c: 36: TMR0_Set();
  5175  0A86  3188  20EA  318A   	fcall	_TMR0_Set
  5176                           
  5177                           ;MCU_B1.c: 38: ;;
  5178                           ;MCU_B1.c: 40: ADC_Set();
  5179  0A89  3188  20A2  318A   	fcall	_ADC_Set
  5180                           
  5181                           ;MCU_B1.c: 44: INT_Set();
  5182  0A8C  3188  2089  318A   	fcall	_INT_Set
  5183                           
  5184                           ;MCU_B1.c: 46: IOC_Set();
  5185  0A8F  3188  20DD  318A   	fcall	_IOC_Set
  5186                           
  5187                           ;MCU_B1.c: 48: ;;
  5188                           ;MCU_B1.c: 50: ;;
  5189                           ;MCU_B1.c: 52: Memory=&VarMemory;
  5190  0A92  30A0               	movlw	_VarMemory& (0+255)
  5191  0A93  0020               	movlb	0	; select bank0
  5192  0A94  00A1               	movwf	??_Mcu_Initialization
  5193  0A95  0821               	movf	??_Mcu_Initialization,w
  5194  0A96  00EC               	movwf	_Memory
  5195                           
  5196                           ;MCU_B1.c: 54: WDT_Set();
  5197  0A97  3189  21EE         	fcall	_WDT_Set
  5198  0A99  0008               	return
  5199  0A9A                     __end_of_Mcu_Initialization:	
  5200                           
  5201                           	psect	text20
  5202  09EE                     __ptext20:	
  5203 ;; *************** function _WDT_Set *****************
  5204 ;; Defined at:
  5205 ;;		line 901 in file "../src/MCU_B1.c"
  5206 ;; Parameters:    Size  Location     Type
  5207 ;;		None
  5208 ;; Auto vars:     Size  Location     Type
  5209 ;;		None
  5210 ;; Return value:  Size  Location     Type
  5211 ;;		None               void
  5212 ;; Registers used:
  5213 ;;		wreg, fsr1l, fsr1h
  5214 ;; Tracked objects:
  5215 ;;		On entry : 0/0
  5216 ;;		On exit  : 0/0
  5217 ;;		Unchanged: 0/0
  5218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5221 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5222 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5223 ;;Total ram usage:        1 bytes
  5224 ;; Hardware stack levels used:    1
  5225 ;; Hardware stack levels required when called:    5
  5226 ;; This function calls:
  5227 ;;		Nothing
  5228 ;; This function is called by:
  5229 ;;		_Mcu_Initialization
  5230 ;; This function uses a non-reentrant model
  5231 ;;
  5232                           
  5233                           
  5234                           ;psect for function _WDT_Set
  5235  09EE                     _WDT_Set:	
  5236                           
  5237                           ;MCU_B1.c: 902: WDTCON = 0b00010111;;
  5238                           
  5239                           ;incstack = 0
  5240                           ; Regs used in _WDT_Set: [wregfsr1]
  5241  09EE  3017               	movlw	23
  5242  09EF  0021               	movlb	1	; select bank1
  5243  09F0  0097               	movwf	23	;volatile
  5244                           
  5245                           ;MCU_B1.c: 903: WDT = &_WDT;
  5246  09F1  307A               	movlw	__WDT& (0+255)
  5247  09F2  0020               	movlb	0	; select bank0
  5248  09F3  00A0               	movwf	??_WDT_Set
  5249  09F4  0820               	movf	??_WDT_Set,w
  5250  09F5  00FD               	movwf	_WDT
  5251                           
  5252                           ;MCU_B1.c: 904: WDT->Enable = 1;
  5253  09F6  087D               	movf	_WDT,w
  5254  09F7  0086               	movwf	6
  5255  09F8  0187               	clrf	7
  5256  09F9  1401               	bsf	1,0
  5257                           
  5258                           ;MCU_B1.c: 905: WDT->Count = 10;
  5259  09FA  300A               	movlw	10
  5260  09FB  00A0               	movwf	??_WDT_Set
  5261  09FC  0A7D               	incf	_WDT,w
  5262  09FD  0086               	movwf	6
  5263  09FE  0187               	clrf	7
  5264  09FF  0820               	movf	??_WDT_Set,w
  5265  0A00  0081               	movwf	1
  5266  0A01  0008               	return
  5267  0A02                     __end_of_WDT_Set:	
  5268                           
  5269                           	psect	text21
  5270  08EA                     __ptext21:	
  5271 ;; *************** function _TMR0_Set *****************
  5272 ;; Defined at:
  5273 ;;		line 128 in file "../src/MCU_B1.c"
  5274 ;; Parameters:    Size  Location     Type
  5275 ;;		None
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;		None
  5278 ;; Return value:  Size  Location     Type
  5279 ;;		None               void
  5280 ;; Registers used:
  5281 ;;		wreg, status,2
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 0/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5289 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5290 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5291 ;;Total ram usage:        1 bytes
  5292 ;; Hardware stack levels used:    1
  5293 ;; Hardware stack levels required when called:    5
  5294 ;; This function calls:
  5295 ;;		Nothing
  5296 ;; This function is called by:
  5297 ;;		_Mcu_Initialization
  5298 ;; This function uses a non-reentrant model
  5299 ;;
  5300                           
  5301                           
  5302                           ;psect for function _TMR0_Set
  5303  08EA                     _TMR0_Set:	
  5304                           
  5305                           ;MCU_B1.c: 129: Timer0 = &VarTimer0;
  5306                           
  5307                           ;incstack = 0
  5308                           ; Regs used in _TMR0_Set: [wreg+status,2]
  5309  08EA  30DF               	movlw	_VarTimer0& (0+255)
  5310  08EB  0020               	movlb	0	; select bank0
  5311  08EC  00A0               	movwf	??_TMR0_Set
  5312  08ED  0820               	movf	??_TMR0_Set,w
  5313  08EE  00FC               	movwf	_Timer0
  5314                           
  5315                           ;MCU_B1.c: 130: OPTION_REG = 0x00;
  5316  08EF  0021               	movlb	1	; select bank1
  5317  08F0  0195               	clrf	21	;volatile
  5318                           
  5319                           ;MCU_B1.c: 131: TMR0 = (256-190);
  5320  08F1  3042               	movlw	66
  5321  08F2  0020               	movlb	0	; select bank0
  5322  08F3  0095               	movwf	21	;volatile
  5323                           
  5324                           ;MCU_B1.c: 132: TMR0IE = 1;
  5325  08F4  168B               	bsf	11,5	;volatile
  5326                           
  5327                           ;MCU_B1.c: 133: GIE = 1;
  5328  08F5  178B               	bsf	11,7	;volatile
  5329  08F6  0008               	return
  5330  08F7                     __end_of_TMR0_Set:	
  5331                           
  5332                           	psect	text22
  5333  0A02                     __ptext22:	
  5334 ;; *************** function _IO_Set *****************
  5335 ;; Defined at:
  5336 ;;		line 62 in file "../src/MCU_B1.c"
  5337 ;; Parameters:    Size  Location     Type
  5338 ;;		None
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;		None
  5341 ;; Return value:  Size  Location     Type
  5342 ;;		None               void
  5343 ;; Registers used:
  5344 ;;		wreg, status,2
  5345 ;; Tracked objects:
  5346 ;;		On entry : 0/0
  5347 ;;		On exit  : 0/0
  5348 ;;		Unchanged: 0/0
  5349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5354 ;;Total ram usage:        0 bytes
  5355 ;; Hardware stack levels used:    1
  5356 ;; Hardware stack levels required when called:    5
  5357 ;; This function calls:
  5358 ;;		Nothing
  5359 ;; This function is called by:
  5360 ;;		_Mcu_Initialization
  5361 ;; This function uses a non-reentrant model
  5362 ;;
  5363                           
  5364                           
  5365                           ;psect for function _IO_Set
  5366  0A02                     _IO_Set:	
  5367                           
  5368                           ;MCU_B1.c: 90: TRISA = 0b01110111;;
  5369                           
  5370                           ;incstack = 0
  5371                           ; Regs used in _IO_Set: [wreg+status,2]
  5372  0A02  3077               	movlw	119
  5373  0A03  0021               	movlb	1	; select bank1
  5374  0A04  008C               	movwf	12	;volatile
  5375                           
  5376                           ;MCU_B1.c: 91: TRISB = 0b00000101;;
  5377  0A05  3005               	movlw	5
  5378  0A06  008D               	movwf	13	;volatile
  5379                           
  5380                           ;MCU_B1.c: 92: TRISC = 0b00001100;;
  5381  0A07  300C               	movlw	12
  5382  0A08  008E               	movwf	14	;volatile
  5383                           
  5384                           ;MCU_B1.c: 93: LATA = 0b00000000;;
  5385  0A09  0022               	movlb	2	; select bank2
  5386  0A0A  018C               	clrf	12	;volatile
  5387                           
  5388                           ;MCU_B1.c: 94: LATB = 0b00000000;;
  5389  0A0B  018D               	clrf	13	;volatile
  5390                           
  5391                           ;MCU_B1.c: 95: LATC = 0b00000000;;
  5392  0A0C  018E               	clrf	14	;volatile
  5393                           
  5394                           ;MCU_B1.c: 96: ANSELA = 0b00000010;;
  5395  0A0D  3002               	movlw	2
  5396  0A0E  0023               	movlb	3	; select bank3
  5397  0A0F  008C               	movwf	12	;volatile
  5398                           
  5399                           ;MCU_B1.c: 97: ANSELB = 0b00000000;;
  5400  0A10  018D               	clrf	13	;volatile
  5401                           
  5402                           ;MCU_B1.c: 98: ANSELC = 0b00000000;;
  5403  0A11  018E               	clrf	14	;volatile
  5404                           
  5405                           ;MCU_B1.c: 99: PORTA = 0b01110111;;
  5406  0A12  3077               	movlw	119
  5407  0A13  0020               	movlb	0	; select bank0
  5408  0A14  008C               	movwf	12	;volatile
  5409                           
  5410                           ;MCU_B1.c: 100: PORTB = 0b00000101;;
  5411  0A15  3005               	movlw	5
  5412  0A16  008D               	movwf	13	;volatile
  5413                           
  5414                           ;MCU_B1.c: 101: PORTC = 0b00001100;;
  5415  0A17  300C               	movlw	12
  5416  0A18  008E               	movwf	14	;volatile
  5417  0A19  0008               	return
  5418  0A1A                     __end_of_IO_Set:	
  5419                           
  5420                           	psect	text23
  5421  08DD                     __ptext23:	
  5422 ;; *************** function _IOC_Set *****************
  5423 ;; Defined at:
  5424 ;;		line 270 in file "../src/MCU_B1.c"
  5425 ;; Parameters:    Size  Location     Type
  5426 ;;		None
  5427 ;; Auto vars:     Size  Location     Type
  5428 ;;		None
  5429 ;; Return value:  Size  Location     Type
  5430 ;;		None               void
  5431 ;; Registers used:
  5432 ;;		wreg, status,2
  5433 ;; Tracked objects:
  5434 ;;		On entry : 0/0
  5435 ;;		On exit  : 0/0
  5436 ;;		Unchanged: 0/0
  5437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5442 ;;Total ram usage:        0 bytes
  5443 ;; Hardware stack levels used:    1
  5444 ;; Hardware stack levels required when called:    5
  5445 ;; This function calls:
  5446 ;;		Nothing
  5447 ;; This function is called by:
  5448 ;;		_Mcu_Initialization
  5449 ;; This function uses a non-reentrant model
  5450 ;;
  5451                           
  5452                           
  5453                           ;psect for function _IOC_Set
  5454  08DD                     _IOC_Set:	
  5455                           
  5456                           ;MCU_B1.c: 271: WPUB2 = 0;
  5457                           
  5458                           ;incstack = 0
  5459                           ; Regs used in _IOC_Set: [wreg+status,2]
  5460  08DD  0024               	movlb	4	; select bank4
  5461  08DE  110D               	bcf	13,2	;volatile
  5462                           
  5463                           ;MCU_B1.c: 273: IOCBP = 0b00000100;
  5464  08DF  3004               	movlw	4
  5465  08E0  0027               	movlb	7	; select bank7
  5466  08E1  0094               	movwf	20	;volatile
  5467                           
  5468                           ;MCU_B1.c: 274: IOCBN = 0b00000100;
  5469  08E2  3004               	movlw	4
  5470  08E3  0095               	movwf	21	;volatile
  5471                           
  5472                           ;MCU_B1.c: 289: IOCBF = 0b00000000;
  5473  08E4  0196               	clrf	22	;volatile
  5474                           
  5475                           ;MCU_B1.c: 291: IOCIE = 1;
  5476  08E5  158B               	bsf	11,3	;volatile
  5477                           
  5478                           ;MCU_B1.c: 292: IOCIF = 0;
  5479  08E6  100B               	bcf	11,0	;volatile
  5480                           
  5481                           ;MCU_B1.c: 293: PEIE = 1;
  5482  08E7  170B               	bsf	11,6	;volatile
  5483                           
  5484                           ;MCU_B1.c: 294: GIE = 1;
  5485  08E8  178B               	bsf	11,7	;volatile
  5486  08E9  0008               	return
  5487  08EA                     __end_of_IOC_Set:	
  5488                           
  5489                           	psect	text24
  5490  0889                     __ptext24:	
  5491 ;; *************** function _INT_Set *****************
  5492 ;; Defined at:
  5493 ;;		line 242 in file "../src/MCU_B1.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;		None
  5496 ;; Auto vars:     Size  Location     Type
  5497 ;;		None
  5498 ;; Return value:  Size  Location     Type
  5499 ;;		None               void
  5500 ;; Registers used:
  5501 ;;		None
  5502 ;; Tracked objects:
  5503 ;;		On entry : 0/0
  5504 ;;		On exit  : 0/0
  5505 ;;		Unchanged: 0/0
  5506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5511 ;;Total ram usage:        0 bytes
  5512 ;; Hardware stack levels used:    1
  5513 ;; Hardware stack levels required when called:    5
  5514 ;; This function calls:
  5515 ;;		Nothing
  5516 ;; This function is called by:
  5517 ;;		_Mcu_Initialization
  5518 ;; This function uses a non-reentrant model
  5519 ;;
  5520                           
  5521                           
  5522                           ;psect for function _INT_Set
  5523  0889                     _INT_Set:	
  5524                           
  5525                           ;MCU_B1.c: 243: WPUB0 = 0;
  5526                           
  5527                           ;incstack = 0
  5528                           ; Regs used in _INT_Set: []
  5529  0889  0024               	movlb	4	; select bank4
  5530  088A  100D               	bcf	13,0	;volatile
  5531                           
  5532                           ;MCU_B1.c: 244: INTE = 1;
  5533  088B  160B               	bsf	11,4	;volatile
  5534                           
  5535                           ;MCU_B1.c: 245: PEIE = 1;
  5536  088C  170B               	bsf	11,6	;volatile
  5537                           
  5538                           ;MCU_B1.c: 246: GIE = 1;
  5539  088D  178B               	bsf	11,7	;volatile
  5540  088E  0008               	return
  5541  088F                     __end_of_INT_Set:	
  5542                           
  5543                           	psect	text25
  5544  087A                     __ptext25:	
  5545 ;; *************** function _Fosc_Set *****************
  5546 ;; Defined at:
  5547 ;;		line 58 in file "../src/MCU_B1.c"
  5548 ;; Parameters:    Size  Location     Type
  5549 ;;		None
  5550 ;; Auto vars:     Size  Location     Type
  5551 ;;		None
  5552 ;; Return value:  Size  Location     Type
  5553 ;;		None               void
  5554 ;; Registers used:
  5555 ;;		wreg
  5556 ;; Tracked objects:
  5557 ;;		On entry : 0/0
  5558 ;;		On exit  : 0/0
  5559 ;;		Unchanged: 0/0
  5560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5565 ;;Total ram usage:        0 bytes
  5566 ;; Hardware stack levels used:    1
  5567 ;; Hardware stack levels required when called:    5
  5568 ;; This function calls:
  5569 ;;		Nothing
  5570 ;; This function is called by:
  5571 ;;		_Mcu_Initialization
  5572 ;; This function uses a non-reentrant model
  5573 ;;
  5574                           
  5575                           
  5576                           ;psect for function _Fosc_Set
  5577  087A                     _Fosc_Set:	
  5578                           
  5579                           ;MCU_B1.c: 59: OSCCON = 0x78;
  5580                           
  5581                           ;incstack = 0
  5582                           ; Regs used in _Fosc_Set: [wreg]
  5583  087A  3078               	movlw	120
  5584  087B  0021               	movlb	1	; select bank1
  5585  087C  0099               	movwf	25	;volatile
  5586  087D  0008               	return
  5587  087E                     __end_of_Fosc_Set:	
  5588                           
  5589                           	psect	text26
  5590  08A2                     __ptext26:	
  5591 ;; *************** function _ADC_Set *****************
  5592 ;; Defined at:
  5593 ;;		line 316 in file "../src/MCU_B1.c"
  5594 ;; Parameters:    Size  Location     Type
  5595 ;;		None
  5596 ;; Auto vars:     Size  Location     Type
  5597 ;;		None
  5598 ;; Return value:  Size  Location     Type
  5599 ;;		None               void
  5600 ;; Registers used:
  5601 ;;		wreg
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5611 ;;Total ram usage:        0 bytes
  5612 ;; Hardware stack levels used:    1
  5613 ;; Hardware stack levels required when called:    5
  5614 ;; This function calls:
  5615 ;;		Nothing
  5616 ;; This function is called by:
  5617 ;;		_Mcu_Initialization
  5618 ;; This function uses a non-reentrant model
  5619 ;;
  5620                           
  5621                           
  5622                           ;psect for function _ADC_Set
  5623  08A2                     _ADC_Set:	
  5624                           
  5625                           ;MCU_B1.c: 317: ADCON1 = 0xf2;
  5626                           
  5627                           ;incstack = 0
  5628                           ; Regs used in _ADC_Set: [wreg]
  5629  08A2  30F2               	movlw	242
  5630  08A3  0021               	movlb	1	; select bank1
  5631  08A4  009E               	movwf	30	;volatile
  5632                           
  5633                           ;MCU_B1.c: 318: FVRCON = 0xc0;
  5634  08A5  30C0               	movlw	192
  5635  08A6  0022               	movlb	2	; select bank2
  5636  08A7  0097               	movwf	23	;volatile
  5637  08A8  0008               	return
  5638  08A9                     __end_of_ADC_Set:	
  5639                           
  5640                           	psect	text27
  5641  0971                     __ptext27:	
  5642 ;; *************** function _LED_Main *****************
  5643 ;; Defined at:
  5644 ;;		line 51 in file "../src/LED_B1.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;		None
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;		None
  5649 ;; Return value:  Size  Location     Type
  5650 ;;		None               void
  5651 ;; Registers used:
  5652 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5653 ;; Tracked objects:
  5654 ;;		On entry : 0/0
  5655 ;;		On exit  : 0/0
  5656 ;;		Unchanged: 0/0
  5657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5662 ;;Total ram usage:        0 bytes
  5663 ;; Hardware stack levels used:    1
  5664 ;; Hardware stack levels required when called:    7
  5665 ;; This function calls:
  5666 ;;		_setLED_Main
  5667 ;; This function is called by:
  5668 ;;		_main
  5669 ;; This function uses a non-reentrant model
  5670 ;;
  5671                           
  5672                           
  5673                           ;psect for function _LED_Main
  5674  0971                     _LED_Main:	
  5675                           
  5676                           ;LED_B1.c: 54: setLED_Main(1);
  5677                           
  5678                           ;incstack = 0
  5679                           ; Regs used in _LED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5680  0971  3001               	movlw	1
  5681  0972  318C  248E  3189   	fcall	_setLED_Main
  5682                           
  5683                           ;LED_B1.c: 57: setLED_Main(2);
  5684  0975  3002               	movlw	2
  5685  0976  318C  248E  3189   	fcall	_setLED_Main
  5686                           
  5687                           ;LED_B1.c: 60: setLED_Main(3);
  5688  0979  3003               	movlw	3
  5689  097A  318C  248E  3189   	fcall	_setLED_Main
  5690                           
  5691                           ;LED_B1.c: 63: setLED_Main(99);
  5692  097D  3063               	movlw	99
  5693  097E  318C  248E         	fcall	_setLED_Main
  5694  0980  0008               	return
  5695  0981                     __end_of_LED_Main:	
  5696                           
  5697                           	psect	text28
  5698  0C8E                     __ptext28:	
  5699 ;; *************** function _setLED_Main *****************
  5700 ;; Defined at:
  5701 ;;		line 215 in file "../src/LED_B1.c"
  5702 ;; Parameters:    Size  Location     Type
  5703 ;;  led             1    wreg     unsigned char 
  5704 ;; Auto vars:     Size  Location     Type
  5705 ;;  led             1    4[BANK0 ] unsigned char 
  5706 ;; Return value:  Size  Location     Type
  5707 ;;		None               void
  5708 ;; Registers used:
  5709 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5710 ;; Tracked objects:
  5711 ;;		On entry : 0/0
  5712 ;;		On exit  : 0/0
  5713 ;;		Unchanged: 0/0
  5714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5716 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5717 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5718 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5719 ;;Total ram usage:        3 bytes
  5720 ;; Hardware stack levels used:    1
  5721 ;; Hardware stack levels required when called:    6
  5722 ;; This function calls:
  5723 ;;		_LedPointSelect
  5724 ;; This function is called by:
  5725 ;;		_LED_Main
  5726 ;; This function uses a non-reentrant model
  5727 ;;
  5728                           
  5729                           
  5730                           ;psect for function _setLED_Main
  5731  0C8E                     _setLED_Main:	
  5732                           
  5733                           ;incstack = 0
  5734                           ; Regs used in _setLED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5735                           ;setLED_Main@led stored from wreg
  5736  0C8E  0020               	movlb	0	; select bank0
  5737  0C8F  00A4               	movwf	setLED_Main@led
  5738                           
  5739                           ;LED_B1.c: 217: LedPointSelect(led);
  5740  0C90  0824               	movf	setLED_Main@led,w
  5741  0C91  318B  236D  318C   	fcall	_LedPointSelect
  5742                           
  5743                           ;LED_B1.c: 218: if(LED->GO)
  5744  0C94  0020               	movlb	0	; select bank0
  5745  0C95  085E               	movf	_LED,w
  5746  0C96  0086               	movwf	6
  5747  0C97  0187               	clrf	7
  5748  0C98  1C81               	btfss	1,1
  5749  0C99  0008               	return
  5750                           
  5751                           ;LED_B1.c: 219: {
  5752                           ;LED_B1.c: 220: LED->Time++;
  5753  0C9A  0A5E               	incf	_LED,w
  5754  0C9B  0086               	movwf	6
  5755  0C9C  0187               	clrf	7
  5756  0C9D  3001               	movlw	1
  5757  0C9E  0781               	addwf	1,f
  5758  0C9F  3141               	addfsr 1,1
  5759  0CA0  1803               	skipnc
  5760  0CA1  0A81               	incf	1,f
  5761                           
  5762                           ;LED_B1.c: 221: if(LED->Time >= 500/10)
  5763  0CA2  0A5E               	incf	_LED,w
  5764  0CA3  0086               	movwf	6
  5765  0CA4  0187               	clrf	7
  5766  0CA5  3F40               	moviw [0]fsr1
  5767  0CA6  00A2               	movwf	??_setLED_Main
  5768  0CA7  3F41               	moviw [1]fsr1
  5769  0CA8  00A3               	movwf	??_setLED_Main+1
  5770  0CA9  3000               	movlw	0
  5771  0CAA  0223               	subwf	??_setLED_Main+1,w
  5772  0CAB  3032               	movlw	50
  5773  0CAC  1903               	skipnz
  5774  0CAD  0222               	subwf	??_setLED_Main,w
  5775  0CAE  1C03               	skipc
  5776  0CAF  0008               	return
  5777                           
  5778                           ;LED_B1.c: 222: {
  5779                           ;LED_B1.c: 223: LED->Time=0;
  5780  0CB0  0A5E               	incf	_LED,w
  5781  0CB1  0086               	movwf	6
  5782  0CB2  0187               	clrf	7
  5783  0CB3  3000               	movlw	0
  5784  0CB4  3FC0               	movwi [0]fsr1
  5785  0CB5  3FC1               	movwi [1]fsr1
  5786                           
  5787                           ;LED_B1.c: 225: if(led == 1)
  5788  0CB6  0824               	movf	setLED_Main@led,w
  5789  0CB7  3A01               	xorlw	1
  5790  0CB8  1D03               	skipz
  5791  0CB9  2CBD               	goto	l5276
  5792                           
  5793                           ;LED_B1.c: 226: {
  5794                           ;LED_B1.c: 227: RC7=~RC7;
  5795  0CBA  3080               	movlw	128
  5796  0CBB  068E               	xorwf	14,f
  5797                           
  5798                           ;LED_B1.c: 228: }
  5799  0CBC  0008               	return
  5800  0CBD                     l5276:	
  5801                           
  5802                           ;LED_B1.c: 231: else if(led == 2)
  5803  0CBD  0824               	movf	setLED_Main@led,w
  5804  0CBE  3A02               	xorlw	2
  5805  0CBF  1D03               	skipz
  5806  0CC0  2CC4               	goto	l5280
  5807                           
  5808                           ;LED_B1.c: 232: {
  5809                           ;LED_B1.c: 233: RA3=~RA3;
  5810  0CC1  3008               	movlw	8
  5811  0CC2  068C               	xorwf	12,f
  5812                           
  5813                           ;LED_B1.c: 234: }
  5814  0CC3  0008               	return
  5815  0CC4                     l5280:	
  5816                           
  5817                           ;LED_B1.c: 237: else if(led == 3)
  5818  0CC4  0824               	movf	setLED_Main@led,w
  5819  0CC5  3A03               	xorlw	3
  5820  0CC6  1D03               	skipz
  5821  0CC7  2CCB               	goto	l5284
  5822                           
  5823                           ;LED_B1.c: 238: {
  5824                           ;LED_B1.c: 239: RC6=~RC6;
  5825  0CC8  3040               	movlw	64
  5826  0CC9  068E               	xorwf	14,f
  5827                           
  5828                           ;LED_B1.c: 240: }
  5829  0CCA  0008               	return
  5830  0CCB                     l5284:	
  5831                           
  5832                           ;LED_B1.c: 243: else if(led == 99)
  5833  0CCB  0824               	movf	setLED_Main@led,w
  5834  0CCC  3A63               	xorlw	99
  5835  0CCD  1D03               	skipz
  5836  0CCE  0008               	return
  5837                           
  5838                           ;LED_B1.c: 244: {
  5839                           ;LED_B1.c: 245: RB5=~RB5;
  5840  0CCF  3020               	movlw	32
  5841  0CD0  068D               	xorwf	13,f
  5842  0CD1  0008               	return
  5843  0CD2                     __end_of_setLED_Main:	
  5844                           
  5845                           	psect	text29
  5846  0961                     __ptext29:	
  5847 ;; *************** function _LED_Initialization *****************
  5848 ;; Defined at:
  5849 ;;		line 35 in file "../src/LED_B1.c"
  5850 ;; Parameters:    Size  Location     Type
  5851 ;;		None
  5852 ;; Auto vars:     Size  Location     Type
  5853 ;;		None
  5854 ;; Return value:  Size  Location     Type
  5855 ;;		None               void
  5856 ;; Registers used:
  5857 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5858 ;; Tracked objects:
  5859 ;;		On entry : 0/0
  5860 ;;		On exit  : 0/0
  5861 ;;		Unchanged: 0/0
  5862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5867 ;;Total ram usage:        0 bytes
  5868 ;; Hardware stack levels used:    1
  5869 ;; Hardware stack levels required when called:    8
  5870 ;; This function calls:
  5871 ;;		_setLED_Initialization
  5872 ;; This function is called by:
  5873 ;;		_main
  5874 ;; This function uses a non-reentrant model
  5875 ;;
  5876                           
  5877                           
  5878                           ;psect for function _LED_Initialization
  5879  0961                     _LED_Initialization:	
  5880                           
  5881                           ;LED_B1.c: 38: setLED_Initialization(1);
  5882                           
  5883                           ;incstack = 0
  5884                           ; Regs used in _LED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5885  0961  3001               	movlw	1
  5886  0962  3189  2151  3189   	fcall	_setLED_Initialization
  5887                           
  5888                           ;LED_B1.c: 41: setLED_Initialization(2);
  5889  0965  3002               	movlw	2
  5890  0966  3189  2151  3189   	fcall	_setLED_Initialization
  5891                           
  5892                           ;LED_B1.c: 44: setLED_Initialization(3);
  5893  0969  3003               	movlw	3
  5894  096A  3189  2151  3189   	fcall	_setLED_Initialization
  5895                           
  5896                           ;LED_B1.c: 47: setLED_Initialization(99);
  5897  096D  3063               	movlw	99
  5898  096E  3189  2151         	fcall	_setLED_Initialization
  5899  0970  0008               	return
  5900  0971                     __end_of_LED_Initialization:	
  5901                           
  5902                           	psect	text30
  5903  0951                     __ptext30:	
  5904 ;; *************** function _setLED_Initialization *****************
  5905 ;; Defined at:
  5906 ;;		line 67 in file "../src/LED_B1.c"
  5907 ;; Parameters:    Size  Location     Type
  5908 ;;  led             1    wreg     unsigned char 
  5909 ;; Auto vars:     Size  Location     Type
  5910 ;;  led             1    4[BANK0 ] unsigned char 
  5911 ;; Return value:  Size  Location     Type
  5912 ;;		None               void
  5913 ;; Registers used:
  5914 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5915 ;; Tracked objects:
  5916 ;;		On entry : 0/0
  5917 ;;		On exit  : 0/0
  5918 ;;		Unchanged: 0/0
  5919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5921 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5923 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5924 ;;Total ram usage:        1 bytes
  5925 ;; Hardware stack levels used:    1
  5926 ;; Hardware stack levels required when called:    7
  5927 ;; This function calls:
  5928 ;;		_LedPointSelect
  5929 ;;		_setLED
  5930 ;; This function is called by:
  5931 ;;		_LED_Initialization
  5932 ;; This function uses a non-reentrant model
  5933 ;;
  5934                           
  5935                           
  5936                           ;psect for function _setLED_Initialization
  5937  0951                     _setLED_Initialization:	
  5938                           
  5939                           ;incstack = 0
  5940                           ; Regs used in _setLED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  5941                           ;setLED_Initialization@led stored from wreg
  5942  0951  0020               	movlb	0	; select bank0
  5943  0952  00A4               	movwf	setLED_Initialization@led
  5944                           
  5945                           ;LED_B1.c: 69: LedPointSelect(led);
  5946  0953  0824               	movf	setLED_Initialization@led,w
  5947  0954  318B  236D  3189   	fcall	_LedPointSelect
  5948                           
  5949                           ;LED_B1.c: 70: LED->Enable=1;
  5950  0957  0020               	movlb	0	; select bank0
  5951  0958  085E               	movf	_LED,w
  5952  0959  0086               	movwf	6
  5953  095A  0187               	clrf	7
  5954  095B  1401               	bsf	1,0
  5955                           
  5956                           ;LED_B1.c: 71: setLED(led,0);
  5957  095C  01A2               	clrf	setLED@command
  5958  095D  0824               	movf	setLED_Initialization@led,w
  5959  095E  318F  2793         	fcall	_setLED
  5960  0960  0008               	return
  5961  0961                     __end_of_setLED_Initialization:	
  5962                           
  5963                           	psect	text31
  5964  0CD2                     __ptext31:	
  5965 ;; *************** function _Flash_Memory_Main *****************
  5966 ;; Defined at:
  5967 ;;		line 795 in file "../src/MCU_B1.c"
  5968 ;; Parameters:    Size  Location     Type
  5969 ;;		None
  5970 ;; Auto vars:     Size  Location     Type
  5971 ;;		None
  5972 ;; Return value:  Size  Location     Type
  5973 ;;		None               void
  5974 ;; Registers used:
  5975 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5976 ;; Tracked objects:
  5977 ;;		On entry : 0/0
  5978 ;;		On exit  : 0/0
  5979 ;;		Unchanged: 0/0
  5980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5985 ;;Total ram usage:        0 bytes
  5986 ;; Hardware stack levels used:    1
  5987 ;; Hardware stack levels required when called:    8
  5988 ;; This function calls:
  5989 ;;		_Flash_Memory_Modify
  5990 ;; This function is called by:
  5991 ;;		_main
  5992 ;; This function uses a non-reentrant model
  5993 ;;
  5994                           
  5995                           
  5996                           ;psect for function _Flash_Memory_Main
  5997  0CD2                     _Flash_Memory_Main:	
  5998                           
  5999                           ;MCU_B1.c: 796: if (Memory->GO) {
  6000                           
  6001                           ;incstack = 0
  6002                           ; Regs used in _Flash_Memory_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6003  0CD2  0020               	movlb	0	; select bank0
  6004  0CD3  086C               	movf	_Memory,w
  6005  0CD4  3E24               	addlw	36
  6006  0CD5  0086               	movwf	6
  6007  0CD6  3001               	movlw	1	; select bank2/3
  6008  0CD7  0087               	movwf	7
  6009  0CD8  1C81               	btfss	1,1
  6010  0CD9  0008               	return
  6011                           
  6012                           ;MCU_B1.c: 797: if (Memory->Modify) {
  6013  0CDA  086C               	movf	_Memory,w
  6014  0CDB  3E24               	addlw	36
  6015  0CDC  0086               	movwf	6
  6016  0CDD  3001               	movlw	1	; select bank2/3
  6017  0CDE  0087               	movwf	7
  6018  0CDF  1C01               	btfss	1,0
  6019  0CE0  2D0F               	goto	l4762
  6020                           
  6021                           ;MCU_B1.c: 798: Memory->Time++;
  6022  0CE1  086C               	movf	_Memory,w
  6023  0CE2  3E22               	addlw	34
  6024  0CE3  0086               	movwf	6
  6025  0CE4  3001               	movlw	1	; select bank2/3
  6026  0CE5  0087               	movwf	7
  6027  0CE6  3001               	movlw	1
  6028  0CE7  0781               	addwf	1,f
  6029  0CE8  3141               	addfsr 1,1
  6030  0CE9  1803               	skipnc
  6031  0CEA  0A81               	incf	1,f
  6032                           
  6033                           ;MCU_B1.c: 799: if (Memory->Time == 25)
  6034  0CEB  086C               	movf	_Memory,w
  6035  0CEC  3E22               	addlw	34
  6036  0CED  0086               	movwf	6
  6037  0CEE  3001               	movlw	1	; select bank2/3
  6038  0CEF  0087               	movwf	7
  6039  0CF0  3F40               	moviw [0]fsr1
  6040  0CF1  3A19               	xorlw	25
  6041  0CF2  1D03               	skipz
  6042  0CF3  2CF6               	goto	u4485
  6043  0CF4  3F41               	moviw [1]fsr1
  6044  0CF5  3A00               	xorlw	0
  6045  0CF6                     u4485:	
  6046  0CF6  1D03               	skipz
  6047  0CF7  0008               	return
  6048                           
  6049                           ;MCU_B1.c: 800: {
  6050                           ;MCU_B1.c: 801: Memory->Time = 0;
  6051  0CF8  086C               	movf	_Memory,w
  6052  0CF9  3E22               	addlw	34
  6053  0CFA  0086               	movwf	6
  6054  0CFB  3001               	movlw	1	; select bank2/3
  6055  0CFC  0087               	movwf	7
  6056  0CFD  3000               	movlw	0
  6057  0CFE  3FC0               	movwi [0]fsr1
  6058  0CFF  3FC1               	movwi [1]fsr1
  6059                           
  6060                           ;MCU_B1.c: 802: Memory->Modify = 0;
  6061  0D00  086C               	movf	_Memory,w
  6062  0D01  3E24               	addlw	36
  6063  0D02  0086               	movwf	6
  6064  0D03  3001               	movlw	1	; select bank2/3
  6065  0D04  0087               	movwf	7
  6066  0D05  1001               	bcf	1,0
  6067                           
  6068                           ;MCU_B1.c: 803: Memory->GO = 0;
  6069  0D06  086C               	movf	_Memory,w
  6070  0D07  3E24               	addlw	36
  6071  0D08  0086               	movwf	6
  6072  0D09  3001               	movlw	1	; select bank2/3
  6073  0D0A  0087               	movwf	7
  6074  0D0B  1081               	bcf	1,1
  6075                           
  6076                           ;MCU_B1.c: 804: Flash_Memory_Modify();
  6077  0D0C  318E  265C         	fcall	_Flash_Memory_Modify
  6078                           
  6079                           ;MCU_B1.c: 806: }
  6080                           ;MCU_B1.c: 807: } else {
  6081  0D0E  0008               	return
  6082  0D0F                     l4762:	
  6083                           
  6084                           ;MCU_B1.c: 808: Memory->GO = 0;
  6085  0D0F  0020               	movlb	0	; select bank0
  6086  0D10  086C               	movf	_Memory,w
  6087  0D11  3E24               	addlw	36
  6088  0D12  0086               	movwf	6
  6089  0D13  3001               	movlw	1	; select bank2/3
  6090  0D14  0087               	movwf	7
  6091  0D15  1081               	bcf	1,1
  6092  0D16  0008               	return
  6093  0D17                     __end_of_Flash_Memory_Main:	
  6094                           
  6095                           	psect	text32
  6096  0E5C                     __ptext32:	
  6097 ;; *************** function _Flash_Memory_Modify *****************
  6098 ;; Defined at:
  6099 ;;		line 865 in file "../src/MCU_B1.c"
  6100 ;; Parameters:    Size  Location     Type
  6101 ;;		None
  6102 ;; Auto vars:     Size  Location     Type
  6103 ;;  i               1    6[BANK0 ] unsigned char 
  6104 ;; Return value:  Size  Location     Type
  6105 ;;		None               void
  6106 ;; Registers used:
  6107 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6108 ;; Tracked objects:
  6109 ;;		On entry : 0/0
  6110 ;;		On exit  : 0/0
  6111 ;;		Unchanged: 0/0
  6112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6114 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6115 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6116 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6117 ;;Total ram usage:        3 bytes
  6118 ;; Hardware stack levels used:    1
  6119 ;; Hardware stack levels required when called:    7
  6120 ;; This function calls:
  6121 ;;		_Flash_Memory_Erasing
  6122 ;;		_Flash_Memory_Read
  6123 ;;		_Flash_Memory_Write
  6124 ;; This function is called by:
  6125 ;;		_Flash_Memory_Main
  6126 ;; This function uses a non-reentrant model
  6127 ;;
  6128                           
  6129                           
  6130                           ;psect for function _Flash_Memory_Modify
  6131  0E5C                     _Flash_Memory_Modify:	
  6132                           
  6133                           ;MCU_B1.c: 866: char i;
  6134                           ;MCU_B1.c: 867: for (i = 0; i < 32; i++) {
  6135                           
  6136                           ;incstack = 0
  6137                           ; Regs used in _Flash_Memory_Modify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6138  0E5C  0020               	movlb	0	; select bank0
  6139  0E5D  01A6               	clrf	Flash_Memory_Modify@i
  6140  0E5E  3020               	movlw	32
  6141  0E5F  0226               	subwf	Flash_Memory_Modify@i,w
  6142  0E60  1803               	btfsc	3,0
  6143  0E61  2E79               	goto	l4496
  6144  0E62                     l4490:	
  6145                           
  6146                           ;MCU_B1.c: 868: Memory->Data[i] = Flash_Memory_Read(i);
  6147  0E62  0826               	movf	Flash_Memory_Modify@i,w
  6148  0E63  318A  221A  318E   	fcall	_Flash_Memory_Read
  6149  0E66  0020               	movlb	0	; select bank0
  6150  0E67  00A4               	movwf	??_Flash_Memory_Modify
  6151  0E68  0826               	movf	Flash_Memory_Modify@i,w
  6152  0E69  076C               	addwf	_Memory,w
  6153  0E6A  00A5               	movwf	??_Flash_Memory_Modify+1
  6154  0E6B  0825               	movf	??_Flash_Memory_Modify+1,w
  6155  0E6C  0086               	movwf	6
  6156  0E6D  3001               	movlw	1	; select bank2/3
  6157  0E6E  0087               	movwf	7
  6158  0E6F  0824               	movf	??_Flash_Memory_Modify,w
  6159  0E70  0081               	movwf	1
  6160  0E71  3001               	movlw	1
  6161  0E72  00A4               	movwf	??_Flash_Memory_Modify
  6162  0E73  0824               	movf	??_Flash_Memory_Modify,w
  6163  0E74  07A6               	addwf	Flash_Memory_Modify@i,f
  6164  0E75  3020               	movlw	32
  6165  0E76  0226               	subwf	Flash_Memory_Modify@i,w
  6166  0E77  1C03               	skipc
  6167  0E78  2E62               	goto	l4490
  6168  0E79                     l4496:	
  6169                           
  6170                           ;MCU_B1.c: 869: }
  6171                           ;MCU_B1.c: 870: Memory->Data[0]=product->Data[12];
  6172  0E79  086B               	movf	_product,w
  6173  0E7A  3E0C               	addlw	12
  6174  0E7B  0086               	movwf	6
  6175  0E7C  3001               	movlw	1	; select bank2/3
  6176  0E7D  0087               	movwf	7
  6177  0E7E  0801               	movf	1,w
  6178  0E7F  00A4               	movwf	??_Flash_Memory_Modify
  6179  0E80  086C               	movf	_Memory,w
  6180  0E81  0086               	movwf	6
  6181  0E82  3001               	movlw	1	; select bank2/3
  6182  0E83  0087               	movwf	7
  6183  0E84  0824               	movf	??_Flash_Memory_Modify,w
  6184  0E85  0081               	movwf	1
  6185                           
  6186                           ;MCU_B1.c: 871: Memory->Data[1]=product->Data[13];
  6187  0E86  086B               	movf	_product,w
  6188  0E87  3E0D               	addlw	13
  6189  0E88  0086               	movwf	6
  6190  0E89  3001               	movlw	1	; select bank2/3
  6191  0E8A  0087               	movwf	7
  6192  0E8B  0801               	movf	1,w
  6193  0E8C  00A4               	movwf	??_Flash_Memory_Modify
  6194  0E8D  0A6C               	incf	_Memory,w
  6195  0E8E  0086               	movwf	6
  6196  0E8F  3001               	movlw	1	; select bank2/3
  6197  0E90  0087               	movwf	7
  6198  0E91  0824               	movf	??_Flash_Memory_Modify,w
  6199  0E92  0081               	movwf	1
  6200                           
  6201                           ;MCU_B1.c: 872: Memory->Data[2]=product->Data[14];
  6202  0E93  086B               	movf	_product,w
  6203  0E94  3E0E               	addlw	14
  6204  0E95  0086               	movwf	6
  6205  0E96  3001               	movlw	1	; select bank2/3
  6206  0E97  0087               	movwf	7
  6207  0E98  0801               	movf	1,w
  6208  0E99  00A4               	movwf	??_Flash_Memory_Modify
  6209  0E9A  086C               	movf	_Memory,w
  6210  0E9B  3E02               	addlw	2
  6211  0E9C  0086               	movwf	6
  6212  0E9D  3001               	movlw	1	; select bank2/3
  6213  0E9E  0087               	movwf	7
  6214  0E9F  0824               	movf	??_Flash_Memory_Modify,w
  6215  0EA0  0081               	movwf	1
  6216                           
  6217                           ;MCU_B1.c: 878: if (Memory->LoopSave) {
  6218  0EA1  086C               	movf	_Memory,w
  6219  0EA2  3E24               	addlw	36
  6220  0EA3  0086               	movwf	6
  6221  0EA4  3001               	movlw	1	; select bank2/3
  6222  0EA5  0087               	movwf	7
  6223  0EA6  1D01               	btfss	1,2
  6224  0EA7  2EB8               	goto	l4500
  6225                           
  6226                           ;MCU_B1.c: 879: Memory->LoopSave = 0;
  6227  0EA8  086C               	movf	_Memory,w
  6228  0EA9  3E24               	addlw	36
  6229  0EAA  0086               	movwf	6
  6230  0EAB  3001               	movlw	1	; select bank2/3
  6231  0EAC  0087               	movwf	7
  6232  0EAD  1101               	bcf	1,2
  6233                           
  6234                           ;MCU_B1.c: 880: myMain->FirstOpen = 0;
  6235  0EAE  086A               	movf	_myMain,w
  6236  0EAF  0086               	movwf	6
  6237  0EB0  3001               	movlw	1	; select bank2/3
  6238  0EB1  0087               	movwf	7
  6239  0EB2  1281               	bcf	1,5
  6240                           
  6241                           ;MCU_B1.c: 881: myMain->First = 0;
  6242  0EB3  086A               	movf	_myMain,w
  6243  0EB4  0086               	movwf	6
  6244  0EB5  3001               	movlw	1	; select bank2/3
  6245  0EB6  0087               	movwf	7
  6246  0EB7  1381               	bcf	1,7
  6247  0EB8                     l4500:	
  6248                           
  6249                           ;MCU_B1.c: 883: }
  6250                           ;MCU_B1.c: 884: GIE = 0;
  6251  0EB8  138B               	bcf	11,7	;volatile
  6252                           
  6253                           ;MCU_B1.c: 885: Flash_Memory_Erasing();
  6254  0EB9  3188  20C5  318E   	fcall	_Flash_Memory_Erasing
  6255                           
  6256                           ;MCU_B1.c: 886: Flash_Memory_Write();
  6257  0EBC  318B  23EA         	fcall	_Flash_Memory_Write
  6258                           
  6259                           ;MCU_B1.c: 887: GIE = 1;
  6260  0EBE  178B               	bsf	11,7	;volatile
  6261  0EBF  0008               	return
  6262  0EC0                     __end_of_Flash_Memory_Modify:	
  6263                           
  6264                           	psect	text33
  6265  08C5                     __ptext33:	
  6266 ;; *************** function _Flash_Memory_Erasing *****************
  6267 ;; Defined at:
  6268 ;;		line 854 in file "../src/MCU_B1.c"
  6269 ;; Parameters:    Size  Location     Type
  6270 ;;		None
  6271 ;; Auto vars:     Size  Location     Type
  6272 ;;		None
  6273 ;; Return value:  Size  Location     Type
  6274 ;;		None               void
  6275 ;; Registers used:
  6276 ;;		wreg, status,2, status,0, pclath, cstack
  6277 ;; Tracked objects:
  6278 ;;		On entry : 0/0
  6279 ;;		On exit  : 0/0
  6280 ;;		Unchanged: 0/0
  6281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6286 ;;Total ram usage:        0 bytes
  6287 ;; Hardware stack levels used:    1
  6288 ;; Hardware stack levels required when called:    6
  6289 ;; This function calls:
  6290 ;;		_Flash_Memory_Unlock
  6291 ;; This function is called by:
  6292 ;;		_Flash_Memory_Modify
  6293 ;; This function uses a non-reentrant model
  6294 ;;
  6295                           
  6296                           
  6297                           ;psect for function _Flash_Memory_Erasing
  6298  08C5                     _Flash_Memory_Erasing:	
  6299                           
  6300                           ;MCU_B1.c: 855: CFGS = 0;
  6301                           
  6302                           ;incstack = 0
  6303                           ; Regs used in _Flash_Memory_Erasing: [wreg+status,2+status,0+pclath+cstack]
  6304  08C5  0023               	movlb	3	; select bank3
  6305  08C6  1315               	bcf	21,6	;volatile
  6306                           
  6307                           ;MCU_B1.c: 856: PMADRH = 0x30;
  6308  08C7  3030               	movlw	48
  6309  08C8  0092               	movwf	18	;volatile
  6310                           
  6311                           ;MCU_B1.c: 857: PMADRL = 0x00;
  6312  08C9  0191               	clrf	17	;volatile
  6313                           
  6314                           ;MCU_B1.c: 858: FREE = 1;
  6315  08CA  1615               	bsf	21,4	;volatile
  6316                           
  6317                           ;MCU_B1.c: 859: WREN = 1;
  6318  08CB  1515               	bsf	21,2	;volatile
  6319                           
  6320                           ;MCU_B1.c: 860: Flash_Memory_Unlock();
  6321  08CC  3188  20B1         	fcall	_Flash_Memory_Unlock
  6322                           
  6323                           ;MCU_B1.c: 861: WREN = 0;
  6324  08CE  0023               	movlb	3	; select bank3
  6325  08CF  1115               	bcf	21,2	;volatile
  6326  08D0  0008               	return
  6327  08D1                     __end_of_Flash_Memory_Erasing:	
  6328                           
  6329                           	psect	text34
  6330  0336                     __ptext34:	
  6331 ;; *************** function _Flash_Memory_Initialization *****************
  6332 ;; Defined at:
  6333 ;;		line 754 in file "../src/MCU_B1.c"
  6334 ;; Parameters:    Size  Location     Type
  6335 ;;		None
  6336 ;; Auto vars:     Size  Location     Type
  6337 ;;  i               1   49[BANK0 ] unsigned char 
  6338 ;; Return value:  Size  Location     Type
  6339 ;;		None               void
  6340 ;; Registers used:
  6341 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6342 ;; Tracked objects:
  6343 ;;		On entry : 0/0
  6344 ;;		On exit  : 0/0
  6345 ;;		Unchanged: 0/0
  6346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6348 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6349 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6350 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6351 ;;Total ram usage:        2 bytes
  6352 ;; Hardware stack levels used:    1
  6353 ;; Hardware stack levels required when called:    8
  6354 ;; This function calls:
  6355 ;;		_Flash_Memory_Read
  6356 ;;		_Flash_Memory_Write
  6357 ;;		_setPercentValue
  6358 ;; This function is called by:
  6359 ;;		_main
  6360 ;; This function uses a non-reentrant model
  6361 ;;
  6362                           
  6363                           
  6364                           ;psect for function _Flash_Memory_Initialization
  6365  0336                     _Flash_Memory_Initialization:	
  6366                           
  6367                           ;MCU_B1.c: 755: char i;
  6368                           ;MCU_B1.c: 756: if (Flash_Memory_Read(31) == 0xaa) {
  6369                           
  6370                           ;incstack = 0
  6371                           ; Regs used in _Flash_Memory_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  6372  0336  301F               	movlw	31
  6373  0337  318A  221A  3183   	fcall	_Flash_Memory_Read
  6374  033A  3AAA               	xorlw	170
  6375  033B  1D03               	skipz
  6376  033C  2BAD               	goto	l4718
  6377                           
  6378                           ;MCU_B1.c: 757: product->Data[12] = Flash_Memory_Read(0);
  6379  033D  3000               	movlw	0
  6380  033E  318A  221A  3183   	fcall	_Flash_Memory_Read
  6381  0341  0020               	movlb	0	; select bank0
  6382  0342  00D0               	movwf	??_Flash_Memory_Initialization
  6383  0343  086B               	movf	_product,w
  6384  0344  3E0C               	addlw	12
  6385  0345  0086               	movwf	6
  6386  0346  3001               	movlw	1	; select bank2/3
  6387  0347  0087               	movwf	7
  6388  0348  0850               	movf	??_Flash_Memory_Initialization,w
  6389  0349  0081               	movwf	1
  6390                           
  6391                           ;MCU_B1.c: 758: product->Data[13] = Flash_Memory_Read(1);
  6392  034A  3001               	movlw	1
  6393  034B  318A  221A  3183   	fcall	_Flash_Memory_Read
  6394  034E  0020               	movlb	0	; select bank0
  6395  034F  00D0               	movwf	??_Flash_Memory_Initialization
  6396  0350  086B               	movf	_product,w
  6397  0351  3E0D               	addlw	13
  6398  0352  0086               	movwf	6
  6399  0353  3001               	movlw	1	; select bank2/3
  6400  0354  0087               	movwf	7
  6401  0355  0850               	movf	??_Flash_Memory_Initialization,w
  6402  0356  0081               	movwf	1
  6403                           
  6404                           ;MCU_B1.c: 759: product->Data[14] = Flash_Memory_Read(2);
  6405  0357  3002               	movlw	2
  6406  0358  318A  221A  3183   	fcall	_Flash_Memory_Read
  6407  035B  0020               	movlb	0	; select bank0
  6408  035C  00D0               	movwf	??_Flash_Memory_Initialization
  6409  035D  086B               	movf	_product,w
  6410  035E  3E0E               	addlw	14
  6411  035F  0086               	movwf	6
  6412  0360  3001               	movlw	1	; select bank2/3
  6413  0361  0087               	movwf	7
  6414  0362  0850               	movf	??_Flash_Memory_Initialization,w
  6415  0363  0081               	movwf	1
  6416                           
  6417                           ;MCU_B1.c: 765: i = setPercentValue(((char)((100-95)*0.8)));
  6418  0364  3004               	movlw	4
  6419  0365  318D  2517  3183   	fcall	_setPercentValue
  6420  0368  0020               	movlb	0	; select bank0
  6421  0369  00D0               	movwf	??_Flash_Memory_Initialization
  6422  036A  0850               	movf	??_Flash_Memory_Initialization,w
  6423  036B  00D1               	movwf	Flash_Memory_Initialization@i
  6424                           
  6425                           ;MCU_B1.c: 766: product->Data[21] = i;
  6426  036C  0851               	movf	Flash_Memory_Initialization@i,w
  6427  036D  00D0               	movwf	??_Flash_Memory_Initialization
  6428  036E  086B               	movf	_product,w
  6429  036F  3E15               	addlw	21
  6430  0370  0086               	movwf	6
  6431  0371  3001               	movlw	1	; select bank2/3
  6432  0372  0087               	movwf	7
  6433  0373  0850               	movf	??_Flash_Memory_Initialization,w
  6434  0374  0081               	movwf	1
  6435                           
  6436                           ;MCU_B1.c: 767: product->Data[22] = i;
  6437  0375  0851               	movf	Flash_Memory_Initialization@i,w
  6438  0376  00D0               	movwf	??_Flash_Memory_Initialization
  6439  0377  086B               	movf	_product,w
  6440  0378  3E16               	addlw	22
  6441  0379  0086               	movwf	6
  6442  037A  3001               	movlw	1	; select bank2/3
  6443  037B  0087               	movwf	7
  6444  037C  0850               	movf	??_Flash_Memory_Initialization,w
  6445  037D  0081               	movwf	1
  6446                           
  6447                           ;MCU_B1.c: 768: product->Data[23] = i;
  6448  037E  0851               	movf	Flash_Memory_Initialization@i,w
  6449  037F  00D0               	movwf	??_Flash_Memory_Initialization
  6450  0380  086B               	movf	_product,w
  6451  0381  3E17               	addlw	23
  6452  0382  0086               	movwf	6
  6453  0383  3001               	movlw	1	; select bank2/3
  6454  0384  0087               	movwf	7
  6455  0385  0850               	movf	??_Flash_Memory_Initialization,w
  6456  0386  0081               	movwf	1
  6457                           
  6458                           ;MCU_B1.c: 770: if (product->Data[12] == 0xff && product->Data[13] == 0xff && product->D
      +                          ata[14] == 0xff) {
  6459  0387  086B               	movf	_product,w
  6460  0388  3E0C               	addlw	12
  6461  0389  0086               	movwf	6
  6462  038A  3001               	movlw	1	; select bank2/3
  6463  038B  0087               	movwf	7
  6464  038C  0801               	movf	1,w
  6465  038D  3AFF               	xorlw	255
  6466  038E  1D03               	skipz
  6467  038F  0008               	return
  6468  0390  086B               	movf	_product,w
  6469  0391  3E0D               	addlw	13
  6470  0392  0086               	movwf	6
  6471  0393  3001               	movlw	1	; select bank2/3
  6472  0394  0087               	movwf	7
  6473  0395  0801               	movf	1,w
  6474  0396  3AFF               	xorlw	255
  6475  0397  1D03               	skipz
  6476  0398  0008               	return
  6477  0399  086B               	movf	_product,w
  6478  039A  3E0E               	addlw	14
  6479  039B  0086               	movwf	6
  6480  039C  3001               	movlw	1	; select bank2/3
  6481  039D  0087               	movwf	7
  6482  039E  0801               	movf	1,w
  6483  039F  3AFF               	xorlw	255
  6484  03A0  1D03               	skipz
  6485  03A1  0008               	return
  6486                           
  6487                           ;MCU_B1.c: 771: myMain->FirstOpen = 1;
  6488  03A2  086A               	movf	_myMain,w
  6489  03A3  0086               	movwf	6
  6490  03A4  3001               	movlw	1	; select bank2/3
  6491  03A5  0087               	movwf	7
  6492  03A6  1681               	bsf	1,5
  6493                           
  6494                           ;MCU_B1.c: 772: myMain->First = 1;
  6495  03A7  086A               	movf	_myMain,w
  6496  03A8  0086               	movwf	6
  6497  03A9  3001               	movlw	1	; select bank2/3
  6498  03AA  0087               	movwf	7
  6499  03AB  1781               	bsf	1,7
  6500                           
  6501                           ;MCU_B1.c: 773: }
  6502                           ;MCU_B1.c: 774: } else {
  6503  03AC  0008               	return
  6504  03AD                     l4718:	
  6505                           
  6506                           ;MCU_B1.c: 775: i = setPercentValue(((char)((100-95)*0.8)));
  6507  03AD  3004               	movlw	4
  6508  03AE  318D  2517  3183   	fcall	_setPercentValue
  6509  03B1  0020               	movlb	0	; select bank0
  6510  03B2  00D0               	movwf	??_Flash_Memory_Initialization
  6511  03B3  0850               	movf	??_Flash_Memory_Initialization,w
  6512  03B4  00D1               	movwf	Flash_Memory_Initialization@i
  6513                           
  6514                           ;MCU_B1.c: 776: Memory->Data[0]=0xff;
  6515  03B5  30FF               	movlw	255
  6516  03B6  00D0               	movwf	??_Flash_Memory_Initialization
  6517  03B7  086C               	movf	_Memory,w
  6518  03B8  0086               	movwf	6
  6519  03B9  3001               	movlw	1	; select bank2/3
  6520  03BA  0087               	movwf	7
  6521  03BB  0850               	movf	??_Flash_Memory_Initialization,w
  6522  03BC  0081               	movwf	1
  6523                           
  6524                           ;MCU_B1.c: 777: Memory->Data[1]=0xff;
  6525  03BD  30FF               	movlw	255
  6526  03BE  00D0               	movwf	??_Flash_Memory_Initialization
  6527  03BF  0A6C               	incf	_Memory,w
  6528  03C0  0086               	movwf	6
  6529  03C1  3001               	movlw	1	; select bank2/3
  6530  03C2  0087               	movwf	7
  6531  03C3  0850               	movf	??_Flash_Memory_Initialization,w
  6532  03C4  0081               	movwf	1
  6533                           
  6534                           ;MCU_B1.c: 778: Memory->Data[2]=0xff;
  6535  03C5  30FF               	movlw	255
  6536  03C6  00D0               	movwf	??_Flash_Memory_Initialization
  6537  03C7  086C               	movf	_Memory,w
  6538  03C8  3E02               	addlw	2
  6539  03C9  0086               	movwf	6
  6540  03CA  3001               	movlw	1	; select bank2/3
  6541  03CB  0087               	movwf	7
  6542  03CC  0850               	movf	??_Flash_Memory_Initialization,w
  6543  03CD  0081               	movwf	1
  6544                           
  6545                           ;MCU_B1.c: 779: Memory->Data[3]=0xff;
  6546  03CE  30FF               	movlw	255
  6547  03CF  00D0               	movwf	??_Flash_Memory_Initialization
  6548  03D0  086C               	movf	_Memory,w
  6549  03D1  3E03               	addlw	3
  6550  03D2  0086               	movwf	6
  6551  03D3  3001               	movlw	1	; select bank2/3
  6552  03D4  0087               	movwf	7
  6553  03D5  0850               	movf	??_Flash_Memory_Initialization,w
  6554  03D6  0081               	movwf	1
  6555                           
  6556                           ;MCU_B1.c: 780: Memory->Data[4]=0xff;
  6557  03D7  30FF               	movlw	255
  6558  03D8  00D0               	movwf	??_Flash_Memory_Initialization
  6559  03D9  086C               	movf	_Memory,w
  6560  03DA  3E04               	addlw	4
  6561  03DB  0086               	movwf	6
  6562  03DC  3001               	movlw	1	; select bank2/3
  6563  03DD  0087               	movwf	7
  6564  03DE  0850               	movf	??_Flash_Memory_Initialization,w
  6565  03DF  0081               	movwf	1
  6566                           
  6567                           ;MCU_B1.c: 781: Memory->Data[5]=0xff;
  6568  03E0  30FF               	movlw	255
  6569  03E1  00D0               	movwf	??_Flash_Memory_Initialization
  6570  03E2  086C               	movf	_Memory,w
  6571  03E3  3E05               	addlw	5
  6572  03E4  0086               	movwf	6
  6573  03E5  3001               	movlw	1	; select bank2/3
  6574  03E6  0087               	movwf	7
  6575  03E7  0850               	movf	??_Flash_Memory_Initialization,w
  6576  03E8  0081               	movwf	1
  6577                           
  6578                           ;MCU_B1.c: 782: Memory->Data[31]=0xaa;
  6579  03E9  30AA               	movlw	170
  6580  03EA  00D0               	movwf	??_Flash_Memory_Initialization
  6581  03EB  086C               	movf	_Memory,w
  6582  03EC  3E1F               	addlw	31
  6583  03ED  0086               	movwf	6
  6584  03EE  3001               	movlw	1	; select bank2/3
  6585  03EF  0087               	movwf	7
  6586  03F0  0850               	movf	??_Flash_Memory_Initialization,w
  6587  03F1  0081               	movwf	1
  6588                           
  6589                           ;MCU_B1.c: 783: product->Data[21] = i;
  6590  03F2  0851               	movf	Flash_Memory_Initialization@i,w
  6591  03F3  00D0               	movwf	??_Flash_Memory_Initialization
  6592  03F4  086B               	movf	_product,w
  6593  03F5  3E15               	addlw	21
  6594  03F6  0086               	movwf	6
  6595  03F7  3001               	movlw	1	; select bank2/3
  6596  03F8  0087               	movwf	7
  6597  03F9  0850               	movf	??_Flash_Memory_Initialization,w
  6598  03FA  0081               	movwf	1
  6599                           
  6600                           ;MCU_B1.c: 784: product->Data[22] = i;
  6601  03FB  0851               	movf	Flash_Memory_Initialization@i,w
  6602  03FC  00D0               	movwf	??_Flash_Memory_Initialization
  6603  03FD  086B               	movf	_product,w
  6604  03FE  3E16               	addlw	22
  6605  03FF  0086               	movwf	6
  6606  0400  3001               	movlw	1	; select bank2/3
  6607  0401  0087               	movwf	7
  6608  0402  0850               	movf	??_Flash_Memory_Initialization,w
  6609  0403  0081               	movwf	1
  6610                           
  6611                           ;MCU_B1.c: 785: product->Data[23] = i;
  6612  0404  0851               	movf	Flash_Memory_Initialization@i,w
  6613  0405  00D0               	movwf	??_Flash_Memory_Initialization
  6614  0406  086B               	movf	_product,w
  6615  0407  3E17               	addlw	23
  6616  0408  0086               	movwf	6
  6617  0409  3001               	movlw	1	; select bank2/3
  6618  040A  0087               	movwf	7
  6619  040B  0850               	movf	??_Flash_Memory_Initialization,w
  6620  040C  0081               	movwf	1
  6621                           
  6622                           ;MCU_B1.c: 786: GIE = 0;
  6623  040D  138B               	bcf	11,7	;volatile
  6624                           
  6625                           ;MCU_B1.c: 787: Flash_Memory_Write();
  6626  040E  318B  23EA         	fcall	_Flash_Memory_Write
  6627                           
  6628                           ;MCU_B1.c: 788: GIE = 1;
  6629  0410  178B               	bsf	11,7	;volatile
  6630                           
  6631                           ;MCU_B1.c: 789: myMain->FirstOpen = 1;
  6632  0411  0020               	movlb	0	; select bank0
  6633  0412  086A               	movf	_myMain,w
  6634  0413  0086               	movwf	6
  6635  0414  3001               	movlw	1	; select bank2/3
  6636  0415  0087               	movwf	7
  6637  0416  1681               	bsf	1,5
  6638                           
  6639                           ;MCU_B1.c: 790: myMain->First = 1;
  6640  0417  086A               	movf	_myMain,w
  6641  0418  0086               	movwf	6
  6642  0419  3001               	movlw	1	; select bank2/3
  6643  041A  0087               	movwf	7
  6644  041B  1781               	bsf	1,7
  6645  041C  0008               	return
  6646  041D                     __end_of_Flash_Memory_Initialization:	
  6647                           
  6648                           	psect	text35
  6649  0D17                     __ptext35:	
  6650 ;; *************** function _setPercentValue *****************
  6651 ;; Defined at:
  6652 ;;		line 794 in file "../src/Dimmer_B1.c"
  6653 ;; Parameters:    Size  Location     Type
  6654 ;;  value           1    wreg     unsigned char 
  6655 ;; Auto vars:     Size  Location     Type
  6656 ;;  value           1   44[BANK0 ] unsigned char 
  6657 ;;  i               3   45[BANK0 ] float 
  6658 ;; Return value:  Size  Location     Type
  6659 ;;                  1    wreg      unsigned char 
  6660 ;; Registers used:
  6661 ;;		wreg, status,2, status,0, pclath, cstack
  6662 ;; Tracked objects:
  6663 ;;		On entry : 0/0
  6664 ;;		On exit  : 0/0
  6665 ;;		Unchanged: 0/0
  6666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6668 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6670 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6671 ;;Total ram usage:        4 bytes
  6672 ;; Hardware stack levels used:    1
  6673 ;; Hardware stack levels required when called:    7
  6674 ;; This function calls:
  6675 ;;		___awtoft
  6676 ;;		___ftdiv
  6677 ;;		___fttol
  6678 ;; This function is called by:
  6679 ;;		_Flash_Memory_Initialization
  6680 ;; This function uses a non-reentrant model
  6681 ;;
  6682                           
  6683                           
  6684                           ;psect for function _setPercentValue
  6685  0D17                     _setPercentValue:	
  6686                           
  6687                           ;incstack = 0
  6688                           ; Regs used in _setPercentValue: [wreg+status,2+status,0+pclath+cstack]
  6689                           ;setPercentValue@value stored from wreg
  6690  0D17  0020               	movlb	0	; select bank0
  6691  0D18  00CC               	movwf	setPercentValue@value
  6692                           
  6693                           ;Dimmer_B1.c: 796: float i = ((char)((100-20)*0.8)) - ((char)((100-95)*0.8));
  6694  0D19  3000               	movlw	0
  6695  0D1A  00CD               	movwf	setPercentValue@i
  6696  0D1B  3070               	movlw	112
  6697  0D1C  00CE               	movwf	setPercentValue@i+1
  6698  0D1D  3042               	movlw	66
  6699  0D1E  00CF               	movwf	setPercentValue@i+2
  6700                           
  6701                           ;Dimmer_B1.c: 797: i /= 100;
  6702  0D1F  3000               	movlw	0
  6703  0D20  00AE               	movwf	___ftdiv@f2
  6704  0D21  30C8               	movlw	200
  6705  0D22  00AF               	movwf	___ftdiv@f2+1
  6706  0D23  3042               	movlw	66
  6707  0D24  00B0               	movwf	___ftdiv@f2+2
  6708  0D25  084D               	movf	setPercentValue@i,w
  6709  0D26  00B1               	movwf	___ftdiv@f1
  6710  0D27  084E               	movf	setPercentValue@i+1,w
  6711  0D28  00B2               	movwf	___ftdiv@f1+1
  6712  0D29  084F               	movf	setPercentValue@i+2,w
  6713  0D2A  00B3               	movwf	___ftdiv@f1+2
  6714  0D2B  3184  241D  318D   	fcall	___ftdiv
  6715  0D2E  0020               	movlb	0	; select bank0
  6716  0D2F  082E               	movf	?___ftdiv,w
  6717  0D30  00CD               	movwf	setPercentValue@i
  6718  0D31  082F               	movf	?___ftdiv+1,w
  6719  0D32  00CE               	movwf	setPercentValue@i+1
  6720  0D33  0830               	movf	?___ftdiv+2,w
  6721  0D34  00CF               	movwf	setPercentValue@i+2
  6722                           
  6723                           ;Dimmer_B1.c: 798: return (100 - (char) ((value - ((char)((100-95)*0.8))) / i));
  6724  0D35  084C               	movf	setPercentValue@value,w
  6725  0D36  3EFC               	addlw	252
  6726  0D37  00A8               	movwf	___awtoft@c
  6727  0D38  30FF               	movlw	255
  6728  0D39  1803               	skipnc
  6729  0D3A  3000               	movlw	0
  6730  0D3B  00A9               	movwf	___awtoft@c+1
  6731  0D3C  318B  234B  318D   	fcall	___awtoft
  6732  0D3F  0020               	movlb	0	; select bank0
  6733  0D40  0828               	movf	?___awtoft,w
  6734  0D41  00B1               	movwf	___ftdiv@f1
  6735  0D42  0829               	movf	?___awtoft+1,w
  6736  0D43  00B2               	movwf	___ftdiv@f1+1
  6737  0D44  082A               	movf	?___awtoft+2,w
  6738  0D45  00B3               	movwf	___ftdiv@f1+2
  6739  0D46  084D               	movf	setPercentValue@i,w
  6740  0D47  00AE               	movwf	___ftdiv@f2
  6741  0D48  084E               	movf	setPercentValue@i+1,w
  6742  0D49  00AF               	movwf	___ftdiv@f2+1
  6743  0D4A  084F               	movf	setPercentValue@i+2,w
  6744  0D4B  00B0               	movwf	___ftdiv@f2+2
  6745  0D4C  3184  241D  318D   	fcall	___ftdiv
  6746  0D4F  0020               	movlb	0	; select bank0
  6747  0D50  082E               	movf	?___ftdiv,w
  6748  0D51  00BE               	movwf	___fttol@f1
  6749  0D52  082F               	movf	?___ftdiv+1,w
  6750  0D53  00BF               	movwf	___fttol@f1+1
  6751  0D54  0830               	movf	?___ftdiv+2,w
  6752  0D55  00C0               	movwf	___fttol@f1+2
  6753  0D56  3185  25F6         	fcall	___fttol
  6754  0D58  0020               	movlb	0	; select bank0
  6755  0D59  033E               	decf	?___fttol,w
  6756  0D5A  3AFF               	xorlw	255
  6757  0D5B  3E64               	addlw	100
  6758  0D5C  0008               	return
  6759  0D5D                     __end_of_setPercentValue:	
  6760                           
  6761                           	psect	text36
  6762  05F6                     __ptext36:	
  6763 ;; *************** function ___fttol *****************
  6764 ;; Defined at:
  6765 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
  6766 ;; Parameters:    Size  Location     Type
  6767 ;;  f1              3   30[BANK0 ] float 
  6768 ;; Auto vars:     Size  Location     Type
  6769 ;;  lval            4   39[BANK0 ] unsigned long 
  6770 ;;  exp1            1   43[BANK0 ] unsigned char 
  6771 ;;  sign1           1   38[BANK0 ] unsigned char 
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  4   30[BANK0 ] long 
  6774 ;; Registers used:
  6775 ;;		wreg, status,2, status,0
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6781 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6782 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6783 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6784 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6785 ;;Total ram usage:       14 bytes
  6786 ;; Hardware stack levels used:    1
  6787 ;; Hardware stack levels required when called:    5
  6788 ;; This function calls:
  6789 ;;		Nothing
  6790 ;; This function is called by:
  6791 ;;		_setPercentValue
  6792 ;;		_getPercentValue
  6793 ;; This function uses a non-reentrant model
  6794 ;;
  6795                           
  6796                           
  6797                           ;psect for function ___fttol
  6798  05F6                     ___fttol:	
  6799                           
  6800                           ;incstack = 0
  6801                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6802  05F6  0020               	movlb	0	; select bank0
  6803  05F7  083E               	movf	___fttol@f1,w
  6804  05F8  00C2               	movwf	??___fttol
  6805  05F9  083F               	movf	___fttol@f1+1,w
  6806  05FA  00C3               	movwf	??___fttol+1
  6807  05FB  0840               	movf	___fttol@f1+2,w
  6808  05FC  00C4               	movwf	??___fttol+2
  6809  05FD  1003               	clrc
  6810  05FE  0D43               	rlf	??___fttol+1,w
  6811  05FF  0D44               	rlf	??___fttol+2,w
  6812  0600  00C5               	movwf	??___fttol+3
  6813  0601  0845               	movf	??___fttol+3,w
  6814  0602  00CB               	movwf	___fttol@exp1
  6815  0603  08CB               	movf	___fttol@exp1,f
  6816  0604  1D03               	skipz
  6817  0605  2E0F               	goto	l4130
  6818  0606  3000               	movlw	0
  6819  0607  00C1               	movwf	?___fttol+3
  6820  0608  3000               	movlw	0
  6821  0609  00C0               	movwf	?___fttol+2
  6822  060A  3000               	movlw	0
  6823  060B  00BF               	movwf	?___fttol+1
  6824  060C  3000               	movlw	0
  6825  060D  00BE               	movwf	?___fttol
  6826  060E  0008               	return
  6827  060F                     l4130:	
  6828  060F  083E               	movf	___fttol@f1,w
  6829  0610  00C2               	movwf	??___fttol
  6830  0611  083F               	movf	___fttol@f1+1,w
  6831  0612  00C3               	movwf	??___fttol+1
  6832  0613  0840               	movf	___fttol@f1+2,w
  6833  0614  00C4               	movwf	??___fttol+2
  6834  0615  3017               	movlw	23
  6835  0616                     u3435:	
  6836  0616  36C4               	lsrf	??___fttol+2,f
  6837  0617  0CC3               	rrf	??___fttol+1,f
  6838  0618  0CC2               	rrf	??___fttol,f
  6839  0619  0B89               	decfsz	9,f
  6840  061A  2E16               	goto	u3435
  6841  061B  0842               	movf	??___fttol,w
  6842  061C  00C5               	movwf	??___fttol+3
  6843  061D  0845               	movf	??___fttol+3,w
  6844  061E  00C6               	movwf	___fttol@sign1
  6845  061F  17BF               	bsf	___fttol@f1+1,7
  6846  0620  30FF               	movlw	255
  6847  0621  05BE               	andwf	___fttol@f1,f
  6848  0622  30FF               	movlw	255
  6849  0623  05BF               	andwf	___fttol@f1+1,f
  6850  0624  3000               	movlw	0
  6851  0625  05C0               	andwf	___fttol@f1+2,f
  6852  0626  083E               	movf	___fttol@f1,w
  6853  0627  00C7               	movwf	___fttol@lval
  6854  0628  083F               	movf	___fttol@f1+1,w
  6855  0629  00C8               	movwf	___fttol@lval+1
  6856  062A  0840               	movf	___fttol@f1+2,w
  6857  062B  00C9               	movwf	___fttol@lval+2
  6858  062C  01CA               	clrf	___fttol@lval+3
  6859  062D  308E               	movlw	142
  6860  062E  02CB               	subwf	___fttol@exp1,f
  6861  062F  1FCB               	btfss	___fttol@exp1,7
  6862  0630  2E4D               	goto	l4150
  6863  0631  084B               	movf	___fttol@exp1,w
  6864  0632  3A80               	xorlw	128
  6865  0633  3E8F               	addlw	143
  6866  0634  1803               	skipnc
  6867  0635  2E3F               	goto	l4148
  6868  0636  3000               	movlw	0
  6869  0637  00C1               	movwf	?___fttol+3
  6870  0638  3000               	movlw	0
  6871  0639  00C0               	movwf	?___fttol+2
  6872  063A  3000               	movlw	0
  6873  063B  00BF               	movwf	?___fttol+1
  6874  063C  3000               	movlw	0
  6875  063D  00BE               	movwf	?___fttol
  6876  063E  0008               	return
  6877  063F                     l4148:	
  6878  063F  3001               	movlw	1
  6879  0640                     u3465:	
  6880  0640  36CA               	lsrf	___fttol@lval+3,f
  6881  0641  0CC9               	rrf	___fttol@lval+2,f
  6882  0642  0CC8               	rrf	___fttol@lval+1,f
  6883  0643  0CC7               	rrf	___fttol@lval,f
  6884  0644  0B89               	decfsz	9,f
  6885  0645  2E40               	goto	u3465
  6886  0646  3001               	movlw	1
  6887  0647  00C2               	movwf	??___fttol
  6888  0648  0842               	movf	??___fttol,w
  6889  0649  07CB               	addwf	___fttol@exp1,f
  6890  064A  1903               	btfsc	3,2
  6891  064B  2E66               	goto	l4160
  6892  064C  2E3F               	goto	l4148
  6893  064D                     l4150:	
  6894  064D  3018               	movlw	24
  6895  064E  024B               	subwf	___fttol@exp1,w
  6896  064F  1C03               	skipc
  6897  0650  2E63               	goto	l4158
  6898  0651  3000               	movlw	0
  6899  0652  00C1               	movwf	?___fttol+3
  6900  0653  3000               	movlw	0
  6901  0654  00C0               	movwf	?___fttol+2
  6902  0655  3000               	movlw	0
  6903  0656  00BF               	movwf	?___fttol+1
  6904  0657  3000               	movlw	0
  6905  0658  00BE               	movwf	?___fttol
  6906  0659  0008               	return
  6907  065A                     l4156:	
  6908  065A  3001               	movlw	1
  6909  065B                     u3495:	
  6910  065B  35C7               	lslf	___fttol@lval,f
  6911  065C  0DC8               	rlf	___fttol@lval+1,f
  6912  065D  0DC9               	rlf	___fttol@lval+2,f
  6913  065E  0DCA               	rlf	___fttol@lval+3,f
  6914  065F  0B89               	decfsz	9,f
  6915  0660  2E5B               	goto	u3495
  6916  0661  3001               	movlw	1
  6917  0662  02CB               	subwf	___fttol@exp1,f
  6918  0663                     l4158:	
  6919  0663  08CB               	movf	___fttol@exp1,f
  6920  0664  1D03               	skipz
  6921  0665  2E5A               	goto	l4156
  6922  0666                     l4160:	
  6923  0666  0846               	movf	___fttol@sign1,w
  6924  0667  1903               	btfsc	3,2
  6925  0668  2E74               	goto	l4164
  6926  0669  09C7               	comf	___fttol@lval,f
  6927  066A  09C8               	comf	___fttol@lval+1,f
  6928  066B  09C9               	comf	___fttol@lval+2,f
  6929  066C  09CA               	comf	___fttol@lval+3,f
  6930  066D  0AC7               	incf	___fttol@lval,f
  6931  066E  1903               	skipnz
  6932  066F  0AC8               	incf	___fttol@lval+1,f
  6933  0670  1903               	skipnz
  6934  0671  0AC9               	incf	___fttol@lval+2,f
  6935  0672  1903               	skipnz
  6936  0673  0ACA               	incf	___fttol@lval+3,f
  6937  0674                     l4164:	
  6938  0674  084A               	movf	___fttol@lval+3,w
  6939  0675  00C1               	movwf	?___fttol+3
  6940  0676  0849               	movf	___fttol@lval+2,w
  6941  0677  00C0               	movwf	?___fttol+2
  6942  0678  0848               	movf	___fttol@lval+1,w
  6943  0679  00BF               	movwf	?___fttol+1
  6944  067A  0847               	movf	___fttol@lval,w
  6945  067B  00BE               	movwf	?___fttol
  6946  067C  0008               	return
  6947  067D                     __end_of___fttol:	
  6948                           
  6949                           	psect	text37
  6950  041D                     __ptext37:	
  6951 ;; *************** function ___ftdiv *****************
  6952 ;; Defined at:
  6953 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
  6954 ;; Parameters:    Size  Location     Type
  6955 ;;  f2              3   14[BANK0 ] float 
  6956 ;;  f1              3   17[BANK0 ] float 
  6957 ;; Auto vars:     Size  Location     Type
  6958 ;;  f3              3   25[BANK0 ] float 
  6959 ;;  sign            1   29[BANK0 ] unsigned char 
  6960 ;;  exp             1   28[BANK0 ] unsigned char 
  6961 ;;  cntr            1   24[BANK0 ] unsigned char 
  6962 ;; Return value:  Size  Location     Type
  6963 ;;                  3   14[BANK0 ] float 
  6964 ;; Registers used:
  6965 ;;		wreg, status,2, status,0, pclath, cstack
  6966 ;; Tracked objects:
  6967 ;;		On entry : 0/0
  6968 ;;		On exit  : 0/0
  6969 ;;		Unchanged: 0/0
  6970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6971 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6972 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6973 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6974 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6975 ;;Total ram usage:       16 bytes
  6976 ;; Hardware stack levels used:    1
  6977 ;; Hardware stack levels required when called:    6
  6978 ;; This function calls:
  6979 ;;		___ftpack
  6980 ;; This function is called by:
  6981 ;;		_setPercentValue
  6982 ;;		_getPercentValue
  6983 ;; This function uses a non-reentrant model
  6984 ;;
  6985                           
  6986                           
  6987                           ;psect for function ___ftdiv
  6988  041D                     ___ftdiv:	
  6989                           
  6990                           ;incstack = 0
  6991                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6992  041D  0020               	movlb	0	; select bank0
  6993  041E  0831               	movf	___ftdiv@f1,w
  6994  041F  00B4               	movwf	??___ftdiv
  6995  0420  0832               	movf	___ftdiv@f1+1,w
  6996  0421  00B5               	movwf	??___ftdiv+1
  6997  0422  0833               	movf	___ftdiv@f1+2,w
  6998  0423  00B6               	movwf	??___ftdiv+2
  6999  0424  1003               	clrc
  7000  0425  0D35               	rlf	??___ftdiv+1,w
  7001  0426  0D36               	rlf	??___ftdiv+2,w
  7002  0427  00B7               	movwf	??___ftdiv+3
  7003  0428  0837               	movf	??___ftdiv+3,w
  7004  0429  00BC               	movwf	___ftdiv@exp
  7005  042A  08BC               	movf	___ftdiv@exp,f
  7006  042B  1D03               	skipz
  7007  042C  2C34               	goto	l4088
  7008  042D  3000               	movlw	0
  7009  042E  00AE               	movwf	?___ftdiv
  7010  042F  3000               	movlw	0
  7011  0430  00AF               	movwf	?___ftdiv+1
  7012  0431  3000               	movlw	0
  7013  0432  00B0               	movwf	?___ftdiv+2
  7014  0433  0008               	return
  7015  0434                     l4088:	
  7016  0434  082E               	movf	___ftdiv@f2,w
  7017  0435  00B4               	movwf	??___ftdiv
  7018  0436  082F               	movf	___ftdiv@f2+1,w
  7019  0437  00B5               	movwf	??___ftdiv+1
  7020  0438  0830               	movf	___ftdiv@f2+2,w
  7021  0439  00B6               	movwf	??___ftdiv+2
  7022  043A  1003               	clrc
  7023  043B  0D35               	rlf	??___ftdiv+1,w
  7024  043C  0D36               	rlf	??___ftdiv+2,w
  7025  043D  00B7               	movwf	??___ftdiv+3
  7026  043E  0837               	movf	??___ftdiv+3,w
  7027  043F  00BD               	movwf	___ftdiv@sign
  7028  0440  08BD               	movf	___ftdiv@sign,f
  7029  0441  1D03               	skipz
  7030  0442  2C4A               	goto	l4094
  7031  0443  3000               	movlw	0
  7032  0444  00AE               	movwf	?___ftdiv
  7033  0445  3000               	movlw	0
  7034  0446  00AF               	movwf	?___ftdiv+1
  7035  0447  3000               	movlw	0
  7036  0448  00B0               	movwf	?___ftdiv+2
  7037  0449  0008               	return
  7038  044A                     l4094:	
  7039  044A  3000               	movlw	0
  7040  044B  00B9               	movwf	___ftdiv@f3
  7041  044C  3000               	movlw	0
  7042  044D  00BA               	movwf	___ftdiv@f3+1
  7043  044E  3000               	movlw	0
  7044  044F  00BB               	movwf	___ftdiv@f3+2
  7045  0450  3089               	movlw	137
  7046  0451  073D               	addwf	___ftdiv@sign,w
  7047  0452  00B4               	movwf	??___ftdiv
  7048  0453  0834               	movf	??___ftdiv,w
  7049  0454  02BC               	subwf	___ftdiv@exp,f
  7050  0455  0831               	movf	___ftdiv@f1,w
  7051  0456  00B4               	movwf	??___ftdiv
  7052  0457  0832               	movf	___ftdiv@f1+1,w
  7053  0458  00B5               	movwf	??___ftdiv+1
  7054  0459  0833               	movf	___ftdiv@f1+2,w
  7055  045A  00B6               	movwf	??___ftdiv+2
  7056  045B  3010               	movlw	16
  7057  045C                     u3365:	
  7058  045C  36B6               	lsrf	??___ftdiv+2,f
  7059  045D  0CB5               	rrf	??___ftdiv+1,f
  7060  045E  0CB4               	rrf	??___ftdiv,f
  7061  045F  0B89               	decfsz	9,f
  7062  0460  2C5C               	goto	u3365
  7063  0461  0834               	movf	??___ftdiv,w
  7064  0462  00B7               	movwf	??___ftdiv+3
  7065  0463  0837               	movf	??___ftdiv+3,w
  7066  0464  00BD               	movwf	___ftdiv@sign
  7067  0465  082E               	movf	___ftdiv@f2,w
  7068  0466  00B4               	movwf	??___ftdiv
  7069  0467  082F               	movf	___ftdiv@f2+1,w
  7070  0468  00B5               	movwf	??___ftdiv+1
  7071  0469  0830               	movf	___ftdiv@f2+2,w
  7072  046A  00B6               	movwf	??___ftdiv+2
  7073  046B  3010               	movlw	16
  7074  046C                     u3375:	
  7075  046C  36B6               	lsrf	??___ftdiv+2,f
  7076  046D  0CB5               	rrf	??___ftdiv+1,f
  7077  046E  0CB4               	rrf	??___ftdiv,f
  7078  046F  0B89               	decfsz	9,f
  7079  0470  2C6C               	goto	u3375
  7080  0471  0834               	movf	??___ftdiv,w
  7081  0472  00B7               	movwf	??___ftdiv+3
  7082  0473  0837               	movf	??___ftdiv+3,w
  7083  0474  06BD               	xorwf	___ftdiv@sign,f
  7084  0475  3080               	movlw	128
  7085  0476  00B4               	movwf	??___ftdiv
  7086  0477  0834               	movf	??___ftdiv,w
  7087  0478  05BD               	andwf	___ftdiv@sign,f
  7088  0479  17B2               	bsf	___ftdiv@f1+1,7
  7089  047A  30FF               	movlw	255
  7090  047B  05B1               	andwf	___ftdiv@f1,f
  7091  047C  30FF               	movlw	255
  7092  047D  05B2               	andwf	___ftdiv@f1+1,f
  7093  047E  3000               	movlw	0
  7094  047F  05B3               	andwf	___ftdiv@f1+2,f
  7095  0480  17AF               	bsf	___ftdiv@f2+1,7
  7096  0481  30FF               	movlw	255
  7097  0482  05AE               	andwf	___ftdiv@f2,f
  7098  0483  30FF               	movlw	255
  7099  0484  05AF               	andwf	___ftdiv@f2+1,f
  7100  0485  3000               	movlw	0
  7101  0486  05B0               	andwf	___ftdiv@f2+2,f
  7102  0487  3018               	movlw	24
  7103  0488  00B4               	movwf	??___ftdiv
  7104  0489  0834               	movf	??___ftdiv,w
  7105  048A  00B8               	movwf	___ftdiv@cntr
  7106  048B                     l4108:	
  7107  048B  3001               	movlw	1
  7108  048C                     u3385:	
  7109  048C  35B9               	lslf	___ftdiv@f3,f
  7110  048D  0DBA               	rlf	___ftdiv@f3+1,f
  7111  048E  0DBB               	rlf	___ftdiv@f3+2,f
  7112  048F  0B89               	decfsz	9,f
  7113  0490  2C8C               	goto	u3385
  7114  0491  0830               	movf	___ftdiv@f2+2,w
  7115  0492  0233               	subwf	___ftdiv@f1+2,w
  7116  0493  1D03               	skipz
  7117  0494  2C9B               	goto	u3395
  7118  0495  082F               	movf	___ftdiv@f2+1,w
  7119  0496  0232               	subwf	___ftdiv@f1+1,w
  7120  0497  1D03               	skipz
  7121  0498  2C9B               	goto	u3395
  7122  0499  082E               	movf	___ftdiv@f2,w
  7123  049A  0231               	subwf	___ftdiv@f1,w
  7124  049B                     u3395:	
  7125  049B  1C03               	skipc
  7126  049C  2CA4               	goto	l4116
  7127  049D  082E               	movf	___ftdiv@f2,w
  7128  049E  02B1               	subwf	___ftdiv@f1,f
  7129  049F  082F               	movf	___ftdiv@f2+1,w
  7130  04A0  3BB2               	subwfb	___ftdiv@f1+1,f
  7131  04A1  0830               	movf	___ftdiv@f2+2,w
  7132  04A2  3BB3               	subwfb	___ftdiv@f1+2,f
  7133  04A3  1439               	bsf	___ftdiv@f3,0
  7134  04A4                     l4116:	
  7135  04A4  3001               	movlw	1
  7136  04A5                     u3405:	
  7137  04A5  35B1               	lslf	___ftdiv@f1,f
  7138  04A6  0DB2               	rlf	___ftdiv@f1+1,f
  7139  04A7  0DB3               	rlf	___ftdiv@f1+2,f
  7140  04A8  0B89               	decfsz	9,f
  7141  04A9  2CA5               	goto	u3405
  7142  04AA  3001               	movlw	1
  7143  04AB  02B8               	subwf	___ftdiv@cntr,f
  7144  04AC  1D03               	btfss	3,2
  7145  04AD  2C8B               	goto	l4108
  7146  04AE  0839               	movf	___ftdiv@f3,w
  7147  04AF  00A0               	movwf	___ftpack@arg
  7148  04B0  083A               	movf	___ftdiv@f3+1,w
  7149  04B1  00A1               	movwf	___ftpack@arg+1
  7150  04B2  083B               	movf	___ftdiv@f3+2,w
  7151  04B3  00A2               	movwf	___ftpack@arg+2
  7152  04B4  083C               	movf	___ftdiv@exp,w
  7153  04B5  00B4               	movwf	??___ftdiv
  7154  04B6  0834               	movf	??___ftdiv,w
  7155  04B7  00A3               	movwf	___ftpack@exp
  7156  04B8  083D               	movf	___ftdiv@sign,w
  7157  04B9  00B5               	movwf	??___ftdiv+1
  7158  04BA  0835               	movf	??___ftdiv+1,w
  7159  04BB  00A4               	movwf	___ftpack@sign
  7160  04BC  318D  25FB         	fcall	___ftpack
  7161  04BE  0020               	movlb	0	; select bank0
  7162  04BF  0820               	movf	?___ftpack,w
  7163  04C0  00AE               	movwf	?___ftdiv
  7164  04C1  0821               	movf	?___ftpack+1,w
  7165  04C2  00AF               	movwf	?___ftdiv+1
  7166  04C3  0822               	movf	?___ftpack+2,w
  7167  04C4  00B0               	movwf	?___ftdiv+2
  7168  04C5  0008               	return
  7169  04C6                     __end_of___ftdiv:	
  7170                           
  7171                           	psect	text38
  7172  0B4B                     __ptext38:	
  7173 ;; *************** function ___awtoft *****************
  7174 ;; Defined at:
  7175 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c"
  7176 ;; Parameters:    Size  Location     Type
  7177 ;;  c               2    8[BANK0 ] int 
  7178 ;; Auto vars:     Size  Location     Type
  7179 ;;  sign            1   13[BANK0 ] unsigned char 
  7180 ;; Return value:  Size  Location     Type
  7181 ;;                  3    8[BANK0 ] float 
  7182 ;; Registers used:
  7183 ;;		wreg, status,2, status,0, pclath, cstack
  7184 ;; Tracked objects:
  7185 ;;		On entry : 0/0
  7186 ;;		On exit  : 0/0
  7187 ;;		Unchanged: 0/0
  7188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7189 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7190 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7191 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7192 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7193 ;;Total ram usage:        6 bytes
  7194 ;; Hardware stack levels used:    1
  7195 ;; Hardware stack levels required when called:    6
  7196 ;; This function calls:
  7197 ;;		___ftpack
  7198 ;; This function is called by:
  7199 ;;		_setPercentValue
  7200 ;;		_getPercentValue
  7201 ;; This function uses a non-reentrant model
  7202 ;;
  7203                           
  7204                           
  7205                           ;psect for function ___awtoft
  7206  0B4B                     ___awtoft:	
  7207                           
  7208                           ;incstack = 0
  7209                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  7210  0B4B  0020               	movlb	0	; select bank0
  7211  0B4C  01AD               	clrf	___awtoft@sign
  7212  0B4D  1FA9               	btfss	___awtoft@c+1,7
  7213  0B4E  2B56               	goto	l4078
  7214  0B4F  09A8               	comf	___awtoft@c,f
  7215  0B50  09A9               	comf	___awtoft@c+1,f
  7216  0B51  0AA8               	incf	___awtoft@c,f
  7217  0B52  1903               	skipnz
  7218  0B53  0AA9               	incf	___awtoft@c+1,f
  7219  0B54  01AD               	clrf	___awtoft@sign
  7220  0B55  0AAD               	incf	___awtoft@sign,f
  7221  0B56                     l4078:	
  7222  0B56  0828               	movf	___awtoft@c,w
  7223  0B57  00A0               	movwf	___ftpack@arg
  7224  0B58  0829               	movf	___awtoft@c+1,w
  7225  0B59  00A1               	movwf	___ftpack@arg+1
  7226  0B5A  01A2               	clrf	___ftpack@arg+2
  7227  0B5B  308E               	movlw	142
  7228  0B5C  00AB               	movwf	??___awtoft
  7229  0B5D  082B               	movf	??___awtoft,w
  7230  0B5E  00A3               	movwf	___ftpack@exp
  7231  0B5F  082D               	movf	___awtoft@sign,w
  7232  0B60  00AC               	movwf	??___awtoft+1
  7233  0B61  082C               	movf	??___awtoft+1,w
  7234  0B62  00A4               	movwf	___ftpack@sign
  7235  0B63  318D  25FB         	fcall	___ftpack
  7236  0B65  0020               	movlb	0	; select bank0
  7237  0B66  0820               	movf	?___ftpack,w
  7238  0B67  00A8               	movwf	?___awtoft
  7239  0B68  0821               	movf	?___ftpack+1,w
  7240  0B69  00A9               	movwf	?___awtoft+1
  7241  0B6A  0822               	movf	?___ftpack+2,w
  7242  0B6B  00AA               	movwf	?___awtoft+2
  7243  0B6C  0008               	return
  7244  0B6D                     __end_of___awtoft:	
  7245                           
  7246                           	psect	text39
  7247  0DFB                     __ptext39:	
  7248 ;; *************** function ___ftpack *****************
  7249 ;; Defined at:
  7250 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
  7251 ;; Parameters:    Size  Location     Type
  7252 ;;  arg             3    0[BANK0 ] unsigned um
  7253 ;;  exp             1    3[BANK0 ] unsigned char 
  7254 ;;  sign            1    4[BANK0 ] unsigned char 
  7255 ;; Auto vars:     Size  Location     Type
  7256 ;;		None
  7257 ;; Return value:  Size  Location     Type
  7258 ;;                  3    0[BANK0 ] float 
  7259 ;; Registers used:
  7260 ;;		wreg, status,2, status,0
  7261 ;; Tracked objects:
  7262 ;;		On entry : 0/0
  7263 ;;		On exit  : 0/0
  7264 ;;		Unchanged: 0/0
  7265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7266 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7268 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7269 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7270 ;;Total ram usage:        8 bytes
  7271 ;; Hardware stack levels used:    1
  7272 ;; Hardware stack levels required when called:    5
  7273 ;; This function calls:
  7274 ;;		Nothing
  7275 ;; This function is called by:
  7276 ;;		___awtoft
  7277 ;;		___ftdiv
  7278 ;;		___ftmul
  7279 ;;		___ftadd
  7280 ;; This function uses a non-reentrant model
  7281 ;;
  7282                           
  7283                           
  7284                           ;psect for function ___ftpack
  7285  0DFB                     ___ftpack:	
  7286                           
  7287                           ;incstack = 0
  7288                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7289  0DFB  0020               	movlb	0	; select bank0
  7290  0DFC  0823               	movf	___ftpack@exp,w
  7291  0DFD  1903               	btfsc	3,2
  7292  0DFE  2E04               	goto	l3782
  7293  0DFF  0822               	movf	___ftpack@arg+2,w
  7294  0E00  0421               	iorwf	___ftpack@arg+1,w
  7295  0E01  0420               	iorwf	___ftpack@arg,w
  7296  0E02  1D03               	skipz
  7297  0E03  2E15               	goto	l3788
  7298  0E04                     l3782:	
  7299  0E04  3000               	movlw	0
  7300  0E05  00A0               	movwf	?___ftpack
  7301  0E06  3000               	movlw	0
  7302  0E07  00A1               	movwf	?___ftpack+1
  7303  0E08  3000               	movlw	0
  7304  0E09  00A2               	movwf	?___ftpack+2
  7305  0E0A  0008               	return
  7306  0E0B                     l3786:	
  7307  0E0B  3001               	movlw	1
  7308  0E0C  00A5               	movwf	??___ftpack
  7309  0E0D  0825               	movf	??___ftpack,w
  7310  0E0E  07A3               	addwf	___ftpack@exp,f
  7311  0E0F  3001               	movlw	1
  7312  0E10                     u2815:	
  7313  0E10  36A2               	lsrf	___ftpack@arg+2,f
  7314  0E11  0CA1               	rrf	___ftpack@arg+1,f
  7315  0E12  0CA0               	rrf	___ftpack@arg,f
  7316  0E13  0B89               	decfsz	9,f
  7317  0E14  2E10               	goto	u2815
  7318  0E15                     l3788:	
  7319  0E15  30FE               	movlw	254
  7320  0E16  0522               	andwf	___ftpack@arg+2,w
  7321  0E17  1903               	btfsc	3,2
  7322  0E18  2E2E               	goto	l1994
  7323  0E19  2E0B               	goto	l3786
  7324  0E1A                     l3790:	
  7325  0E1A  3001               	movlw	1
  7326  0E1B  00A5               	movwf	??___ftpack
  7327  0E1C  0825               	movf	??___ftpack,w
  7328  0E1D  07A3               	addwf	___ftpack@exp,f
  7329  0E1E  3001               	movlw	1
  7330  0E1F  07A0               	addwf	___ftpack@arg,f
  7331  0E20  3000               	movlw	0
  7332  0E21  1803               	skipnc
  7333  0E22  3001               	movlw	1
  7334  0E23  07A1               	addwf	___ftpack@arg+1,f
  7335  0E24  3000               	movlw	0
  7336  0E25  1803               	skipnc
  7337  0E26  3001               	movlw	1
  7338  0E27  07A2               	addwf	___ftpack@arg+2,f
  7339  0E28  3001               	movlw	1
  7340  0E29                     u2835:	
  7341  0E29  36A2               	lsrf	___ftpack@arg+2,f
  7342  0E2A  0CA1               	rrf	___ftpack@arg+1,f
  7343  0E2B  0CA0               	rrf	___ftpack@arg,f
  7344  0E2C  0B89               	decfsz	9,f
  7345  0E2D  2E29               	goto	u2835
  7346  0E2E                     l1994:	
  7347  0E2E  30FF               	movlw	255
  7348  0E2F  0522               	andwf	___ftpack@arg+2,w
  7349  0E30  1903               	btfsc	3,2
  7350  0E31  2E3B               	goto	l3798
  7351  0E32  2E1A               	goto	l3790
  7352  0E33                     l3796:	
  7353  0E33  3001               	movlw	1
  7354  0E34  02A3               	subwf	___ftpack@exp,f
  7355  0E35  3001               	movlw	1
  7356  0E36                     u2855:	
  7357  0E36  35A0               	lslf	___ftpack@arg,f
  7358  0E37  0DA1               	rlf	___ftpack@arg+1,f
  7359  0E38  0DA2               	rlf	___ftpack@arg+2,f
  7360  0E39  0B89               	decfsz	9,f
  7361  0E3A  2E36               	goto	u2855
  7362  0E3B                     l3798:	
  7363  0E3B  1FA1               	btfss	___ftpack@arg+1,7
  7364  0E3C  2E33               	goto	l3796
  7365  0E3D  1823               	btfsc	___ftpack@exp,0
  7366  0E3E  2E45               	goto	l2000
  7367  0E3F  30FF               	movlw	255
  7368  0E40  05A0               	andwf	___ftpack@arg,f
  7369  0E41  307F               	movlw	127
  7370  0E42  05A1               	andwf	___ftpack@arg+1,f
  7371  0E43  30FF               	movlw	255
  7372  0E44  05A2               	andwf	___ftpack@arg+2,f
  7373  0E45                     l2000:	
  7374  0E45  1003               	clrc
  7375  0E46  0CA3               	rrf	___ftpack@exp,f
  7376  0E47  0823               	movf	___ftpack@exp,w
  7377  0E48  00A5               	movwf	??___ftpack
  7378  0E49  01A6               	clrf	??___ftpack+1
  7379  0E4A  01A7               	clrf	??___ftpack+2
  7380  0E4B  3010               	movlw	16
  7381  0E4C                     u2885:	
  7382  0E4C  35A5               	lslf	??___ftpack,f
  7383  0E4D  0DA6               	rlf	??___ftpack+1,f
  7384  0E4E  0DA7               	rlf	??___ftpack+2,f
  7385  0E4F  0B89               	decfsz	9,f
  7386  0E50  2E4C               	goto	u2885
  7387  0E51  0825               	movf	??___ftpack,w
  7388  0E52  04A0               	iorwf	___ftpack@arg,f
  7389  0E53  0826               	movf	??___ftpack+1,w
  7390  0E54  04A1               	iorwf	___ftpack@arg+1,f
  7391  0E55  0827               	movf	??___ftpack+2,w
  7392  0E56  04A2               	iorwf	___ftpack@arg+2,f
  7393  0E57  0824               	movf	___ftpack@sign,w
  7394  0E58  1903               	btfsc	3,2
  7395  0E59  0008               	return
  7396  0E5A  17A2               	bsf	___ftpack@arg+2,7
  7397  0E5B  0008               	return
  7398  0E5C                     __end_of___ftpack:	
  7399                           
  7400                           	psect	text40
  7401  0BEA                     __ptext40:	
  7402 ;; *************** function _Flash_Memory_Write *****************
  7403 ;; Defined at:
  7404 ;;		line 835 in file "../src/MCU_B1.c"
  7405 ;; Parameters:    Size  Location     Type
  7406 ;;		None
  7407 ;; Auto vars:     Size  Location     Type
  7408 ;;  i               1    1[BANK0 ] unsigned char 
  7409 ;; Return value:  Size  Location     Type
  7410 ;;		None               void
  7411 ;; Registers used:
  7412 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7413 ;; Tracked objects:
  7414 ;;		On entry : 0/0
  7415 ;;		On exit  : 0/0
  7416 ;;		Unchanged: 0/0
  7417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7419 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7420 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7421 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7422 ;;Total ram usage:        2 bytes
  7423 ;; Hardware stack levels used:    1
  7424 ;; Hardware stack levels required when called:    6
  7425 ;; This function calls:
  7426 ;;		_Flash_Memory_Unlock
  7427 ;; This function is called by:
  7428 ;;		_Flash_Memory_Initialization
  7429 ;;		_Flash_Memory_Modify
  7430 ;; This function uses a non-reentrant model
  7431 ;;
  7432                           
  7433                           
  7434                           ;psect for function _Flash_Memory_Write
  7435  0BEA                     _Flash_Memory_Write:	
  7436                           
  7437                           ;MCU_B1.c: 836: char i;
  7438                           ;MCU_B1.c: 837: CFGS = 0;
  7439                           
  7440                           ;incstack = 0
  7441                           ; Regs used in _Flash_Memory_Write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7442  0BEA  0023               	movlb	3	; select bank3
  7443  0BEB  1315               	bcf	21,6	;volatile
  7444                           
  7445                           ;MCU_B1.c: 838: PMADRH = 0x30;
  7446  0BEC  3030               	movlw	48
  7447  0BED  0092               	movwf	18	;volatile
  7448                           
  7449                           ;MCU_B1.c: 839: PMDATH = 0;
  7450  0BEE  0194               	clrf	20	;volatile
  7451                           
  7452                           ;MCU_B1.c: 840: FREE = 0;
  7453  0BEF  1215               	bcf	21,4	;volatile
  7454                           
  7455                           ;MCU_B1.c: 841: LWLO = 1;
  7456  0BF0  1695               	bsf	21,5	;volatile
  7457                           
  7458                           ;MCU_B1.c: 842: WREN = 1;
  7459  0BF1  1515               	bsf	21,2	;volatile
  7460                           
  7461                           ;MCU_B1.c: 843: for (i = 0; i < 32; i++) {
  7462  0BF2  0020               	movlb	0	; select bank0
  7463  0BF3  01A1               	clrf	Flash_Memory_Write@i
  7464  0BF4  3020               	movlw	32
  7465  0BF5  0221               	subwf	Flash_Memory_Write@i,w
  7466  0BF6  1803               	btfsc	3,0
  7467  0BF7  2C12               	goto	l976
  7468  0BF8                     l3916:	
  7469                           
  7470                           ;MCU_B1.c: 844: PMADRL = i;
  7471  0BF8  0821               	movf	Flash_Memory_Write@i,w
  7472  0BF9  0023               	movlb	3	; select bank3
  7473  0BFA  0091               	movwf	17	;volatile
  7474                           
  7475                           ;MCU_B1.c: 845: PMDATL = Memory->Data[i];
  7476  0BFB  0020               	movlb	0	; select bank0
  7477  0BFC  0821               	movf	Flash_Memory_Write@i,w
  7478  0BFD  076C               	addwf	_Memory,w
  7479  0BFE  00A0               	movwf	??_Flash_Memory_Write
  7480  0BFF  0820               	movf	??_Flash_Memory_Write,w
  7481  0C00  0086               	movwf	6
  7482  0C01  3001               	movlw	1	; select bank2/3
  7483  0C02  0087               	movwf	7
  7484  0C03  0801               	movf	1,w
  7485  0C04  0023               	movlb	3	; select bank3
  7486  0C05  0093               	movwf	19	;volatile
  7487                           
  7488                           ;MCU_B1.c: 846: Flash_Memory_Unlock();
  7489  0C06  3188  20B1  318B   	fcall	_Flash_Memory_Unlock
  7490  0C09  3001               	movlw	1
  7491  0C0A  0020               	movlb	0	; select bank0
  7492  0C0B  00A0               	movwf	??_Flash_Memory_Write
  7493  0C0C  0820               	movf	??_Flash_Memory_Write,w
  7494  0C0D  07A1               	addwf	Flash_Memory_Write@i,f
  7495  0C0E  3020               	movlw	32
  7496  0C0F  0221               	subwf	Flash_Memory_Write@i,w
  7497  0C10  1C03               	skipc
  7498  0C11  2BF8               	goto	l3916
  7499  0C12                     l976:	
  7500                           
  7501                           ;MCU_B1.c: 847: }
  7502                           ;MCU_B1.c: 848: LWLO = 0;
  7503  0C12  0023               	movlb	3	; select bank3
  7504  0C13  1295               	bcf	21,5	;volatile
  7505                           
  7506                           ;MCU_B1.c: 849: Flash_Memory_Unlock();
  7507  0C14  3188  20B1         	fcall	_Flash_Memory_Unlock
  7508                           
  7509                           ;MCU_B1.c: 850: WREN = 0;
  7510  0C16  0023               	movlb	3	; select bank3
  7511  0C17  1115               	bcf	21,2	;volatile
  7512  0C18  0008               	return
  7513  0C19                     __end_of_Flash_Memory_Write:	
  7514                           
  7515                           	psect	text41
  7516  08B1                     __ptext41:	
  7517 ;; *************** function _Flash_Memory_Unlock *****************
  7518 ;; Defined at:
  7519 ;;		line 814 in file "../src/MCU_B1.c"
  7520 ;; Parameters:    Size  Location     Type
  7521 ;;		None
  7522 ;; Auto vars:     Size  Location     Type
  7523 ;;		None
  7524 ;; Return value:  Size  Location     Type
  7525 ;;		None               void
  7526 ;; Registers used:
  7527 ;;		wreg
  7528 ;; Tracked objects:
  7529 ;;		On entry : 0/0
  7530 ;;		On exit  : 0/0
  7531 ;;		Unchanged: 0/0
  7532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7537 ;;Total ram usage:        0 bytes
  7538 ;; Hardware stack levels used:    1
  7539 ;; Hardware stack levels required when called:    5
  7540 ;; This function calls:
  7541 ;;		Nothing
  7542 ;; This function is called by:
  7543 ;;		_Flash_Memory_Write
  7544 ;;		_Flash_Memory_Erasing
  7545 ;; This function uses a non-reentrant model
  7546 ;;
  7547                           
  7548                           
  7549                           ;psect for function _Flash_Memory_Unlock
  7550  08B1                     _Flash_Memory_Unlock:	
  7551                           
  7552                           ;MCU_B1.c: 815: PMCON2 = 0x55;
  7553                           
  7554                           ;incstack = 0
  7555                           ; Regs used in _Flash_Memory_Unlock: [wreg]
  7556  08B1  3055               	movlw	85
  7557  08B2  0023               	movlb	3	; select bank3
  7558  08B3  0096               	movwf	22	;volatile
  7559                           
  7560                           ;MCU_B1.c: 816: PMCON2 = 0xaa;
  7561  08B4  30AA               	movlw	170
  7562  08B5  0096               	movwf	22	;volatile
  7563                           
  7564                           ;MCU_B1.c: 817: WR = 1;
  7565  08B6  1495               	bsf	21,1	;volatile
  7566                           
  7567                           ;MCU_B1.c: 818: __nop();
  7568  08B7  0000               	nop
  7569                           
  7570                           ;MCU_B1.c: 819: __nop();
  7571  08B8  0000               	nop
  7572  08B9  0008               	return
  7573  08BA                     __end_of_Flash_Memory_Unlock:	
  7574                           
  7575                           	psect	text42
  7576  0A1A                     __ptext42:	
  7577 ;; *************** function _Flash_Memory_Read *****************
  7578 ;; Defined at:
  7579 ;;		line 823 in file "../src/MCU_B1.c"
  7580 ;; Parameters:    Size  Location     Type
  7581 ;;  address         1    wreg     unsigned char 
  7582 ;; Auto vars:     Size  Location     Type
  7583 ;;  address         1    2[BANK0 ] unsigned char 
  7584 ;;  ret             1    3[BANK0 ] unsigned char 
  7585 ;;  i               1    1[BANK0 ] unsigned char 
  7586 ;; Return value:  Size  Location     Type
  7587 ;;                  1    wreg      unsigned char 
  7588 ;; Registers used:
  7589 ;;		wreg, status,2
  7590 ;; Tracked objects:
  7591 ;;		On entry : 0/0
  7592 ;;		On exit  : 0/0
  7593 ;;		Unchanged: 0/0
  7594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7596 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7597 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7598 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7599 ;;Total ram usage:        4 bytes
  7600 ;; Hardware stack levels used:    1
  7601 ;; Hardware stack levels required when called:    5
  7602 ;; This function calls:
  7603 ;;		Nothing
  7604 ;; This function is called by:
  7605 ;;		_Flash_Memory_Initialization
  7606 ;;		_Flash_Memory_Modify
  7607 ;; This function uses a non-reentrant model
  7608 ;;
  7609                           
  7610                           
  7611                           ;psect for function _Flash_Memory_Read
  7612  0A1A                     _Flash_Memory_Read:	
  7613                           
  7614                           ;incstack = 0
  7615                           ; Regs used in _Flash_Memory_Read: [wreg+status,2]
  7616                           ;Flash_Memory_Read@address stored from wreg
  7617  0A1A  0020               	movlb	0	; select bank0
  7618  0A1B  00A2               	movwf	Flash_Memory_Read@address
  7619                           
  7620                           ;MCU_B1.c: 824: char i, ret = 0;
  7621  0A1C  01A3               	clrf	Flash_Memory_Read@ret
  7622                           
  7623                           ;MCU_B1.c: 825: PMADRH = 0x30;
  7624  0A1D  3030               	movlw	48
  7625  0A1E  0023               	movlb	3	; select bank3
  7626  0A1F  0092               	movwf	18	;volatile
  7627                           
  7628                           ;MCU_B1.c: 826: PMADRL = address;
  7629  0A20  0020               	movlb	0	; select bank0
  7630  0A21  0822               	movf	Flash_Memory_Read@address,w
  7631  0A22  0023               	movlb	3	; select bank3
  7632  0A23  0091               	movwf	17	;volatile
  7633                           
  7634                           ;MCU_B1.c: 827: CFGS = 0;
  7635  0A24  1315               	bcf	21,6	;volatile
  7636                           
  7637                           ;MCU_B1.c: 828: RD = 1;
  7638  0A25  1415               	bsf	21,0	;volatile
  7639                           
  7640                           ;MCU_B1.c: 829: i = PMDATH;
  7641  0A26  0814               	movf	20,w	;volatile
  7642  0A27  0020               	movlb	0	; select bank0
  7643  0A28  00A0               	movwf	??_Flash_Memory_Read
  7644  0A29  0820               	movf	??_Flash_Memory_Read,w
  7645  0A2A  00A1               	movwf	Flash_Memory_Read@i
  7646                           
  7647                           ;MCU_B1.c: 830: ret = PMDATL;
  7648  0A2B  0023               	movlb	3	; select bank3
  7649  0A2C  0813               	movf	19,w	;volatile
  7650  0A2D  0020               	movlb	0	; select bank0
  7651  0A2E  00A0               	movwf	??_Flash_Memory_Read
  7652  0A2F  0820               	movf	??_Flash_Memory_Read,w
  7653  0A30  00A3               	movwf	Flash_Memory_Read@ret
  7654                           
  7655                           ;MCU_B1.c: 831: return ret;
  7656  0A31  0823               	movf	Flash_Memory_Read@ret,w
  7657  0A32  0008               	return
  7658  0A33                     __end_of_Flash_Memory_Read:	
  7659                           
  7660                           	psect	text43
  7661  0906                     __ptext43:	
  7662 ;; *************** function _DimmerLights_Main *****************
  7663 ;; Defined at:
  7664 ;;		line 428 in file "../src/Dimmer_B1.c"
  7665 ;; Parameters:    Size  Location     Type
  7666 ;;		None
  7667 ;; Auto vars:     Size  Location     Type
  7668 ;;		None
  7669 ;; Return value:  Size  Location     Type
  7670 ;;		None               void
  7671 ;; Registers used:
  7672 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7673 ;; Tracked objects:
  7674 ;;		On entry : 0/0
  7675 ;;		On exit  : 0/0
  7676 ;;		Unchanged: 0/0
  7677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7682 ;;Total ram usage:        0 bytes
  7683 ;; Hardware stack levels used:    1
  7684 ;; Hardware stack levels required when called:    9
  7685 ;; This function calls:
  7686 ;;		_DimmerLights_Close
  7687 ;;		_setDimmerLights_Main
  7688 ;; This function is called by:
  7689 ;;		_main
  7690 ;; This function uses a non-reentrant model
  7691 ;;
  7692                           
  7693                           
  7694                           ;psect for function _DimmerLights_Main
  7695  0906                     _DimmerLights_Main:	
  7696                           
  7697                           ;Dimmer_B1.c: 431: setDimmerLights_Main(1);
  7698                           
  7699                           ;incstack = 0
  7700                           ; Regs used in _DimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7701  0906  3001               	movlw	1
  7702  0907  3185  2568  3189   	fcall	_setDimmerLights_Main
  7703                           
  7704                           ;Dimmer_B1.c: 435: setDimmerLights_Main(2);
  7705  090A  3002               	movlw	2
  7706  090B  3185  2568  3189   	fcall	_setDimmerLights_Main
  7707                           
  7708                           ;Dimmer_B1.c: 439: setDimmerLights_Main(3);
  7709  090E  3003               	movlw	3
  7710  090F  3185  2568  3189   	fcall	_setDimmerLights_Main
  7711                           
  7712                           ;Dimmer_B1.c: 442: DimmerLights_Close();
  7713  0912  3189  21DA         	fcall	_DimmerLights_Close
  7714  0914  0008               	return
  7715  0915                     __end_of_DimmerLights_Main:	
  7716                           
  7717                           	psect	text44
  7718  0568                     __ptext44:	
  7719 ;; *************** function _setDimmerLights_Main *****************
  7720 ;; Defined at:
  7721 ;;		line 446 in file "../src/Dimmer_B1.c"
  7722 ;; Parameters:    Size  Location     Type
  7723 ;;  lights          1    wreg     unsigned char 
  7724 ;; Auto vars:     Size  Location     Type
  7725 ;;  lights          1   18[BANK0 ] unsigned char 
  7726 ;;  clear           1   17[BANK0 ] unsigned char 
  7727 ;; Return value:  Size  Location     Type
  7728 ;;		None               void
  7729 ;; Registers used:
  7730 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7731 ;; Tracked objects:
  7732 ;;		On entry : 0/0
  7733 ;;		On exit  : 0/0
  7734 ;;		Unchanged: 0/0
  7735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7737 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7738 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7739 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7740 ;;Total ram usage:        6 bytes
  7741 ;; Hardware stack levels used:    1
  7742 ;; Hardware stack levels required when called:    8
  7743 ;; This function calls:
  7744 ;;		_DimmerLightsPointSelect
  7745 ;;		_setBuz
  7746 ;;		_setDimmerLights
  7747 ;;		_setDimmerLights_Adj
  7748 ;; This function is called by:
  7749 ;;		_DimmerLights_Main
  7750 ;; This function uses a non-reentrant model
  7751 ;;
  7752                           
  7753                           
  7754                           ;psect for function _setDimmerLights_Main
  7755  0568                     _setDimmerLights_Main:	
  7756                           
  7757                           ;incstack = 0
  7758                           ; Regs used in _setDimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7759                           ;setDimmerLights_Main@lights stored from wreg
  7760  0568  0020               	movlb	0	; select bank0
  7761  0569  00B2               	movwf	setDimmerLights_Main@lights
  7762                           
  7763                           ;Dimmer_B1.c: 447: char clear = 1;
  7764  056A  01B1               	clrf	setDimmerLights_Main@clear
  7765  056B  0AB1               	incf	setDimmerLights_Main@clear,f
  7766                           
  7767                           ;Dimmer_B1.c: 448: DimmerLightsPointSelect(lights);
  7768  056C  0832               	movf	setDimmerLights_Main@lights,w
  7769  056D  318A  229A  3185   	fcall	_DimmerLightsPointSelect
  7770                           
  7771                           ;Dimmer_B1.c: 451: if (lights == 1) {
  7772  0570  0020               	movlb	0	; select bank0
  7773  0571  0832               	movf	setDimmerLights_Main@lights,w
  7774  0572  3A01               	xorlw	1
  7775  0573  1D03               	skipz
  7776  0574  2D80               	goto	l5204
  7777                           
  7778                           ;Dimmer_B1.c: 452: clear = (DimmerLights2.Clear == 0 || DimmerLights3.Clear == 0) ? 0 : 
      +                          1;
  7779  0575  01AE               	clrf	_setDimmerLights_Main$1556
  7780  0576  0021               	movlb	1	; select bank1
  7781  0577  1938               	btfsc	(_DimmerLights2^(0+128)+9),2
  7782  0578  1D47               	btfss	(_DimmerLights3^(0+128)+9),2
  7783  0579  2D7D               	goto	l5202
  7784  057A  0020               	movlb	0	; select bank0
  7785  057B  01AE               	clrf	_setDimmerLights_Main$1556
  7786  057C  0AAE               	incf	_setDimmerLights_Main$1556,f
  7787  057D                     l5202:	
  7788  057D  0020               	movlb	0	; select bank0
  7789  057E  082E               	movf	_setDimmerLights_Main$1556,w
  7790  057F  2D9D               	goto	L6
  7791  0580                     l5204:	
  7792                           ;Dimmer_B1.c: 453: } else if (lights == 2) {
  7793                           
  7794  0580  0832               	movf	setDimmerLights_Main@lights,w
  7795  0581  3A02               	xorlw	2
  7796  0582  1D03               	skipz
  7797  0583  2D8F               	goto	l5216
  7798                           
  7799                           ;Dimmer_B1.c: 454: clear = (DimmerLights1.Clear == 0 || DimmerLights3.Clear == 0) ? 0 : 
      +                          1;
  7800  0584  01AF               	clrf	_setDimmerLights_Main$1557
  7801  0585  0021               	movlb	1	; select bank1
  7802  0586  1929               	btfsc	(_DimmerLights1^(0+128)+9),2
  7803  0587  1D47               	btfss	(_DimmerLights3^(0+128)+9),2
  7804  0588  2D8C               	goto	l5214
  7805  0589  0020               	movlb	0	; select bank0
  7806  058A  01AF               	clrf	_setDimmerLights_Main$1557
  7807  058B  0AAF               	incf	_setDimmerLights_Main$1557,f
  7808  058C                     l5214:	
  7809  058C  0020               	movlb	0	; select bank0
  7810  058D  082F               	movf	_setDimmerLights_Main$1557,w
  7811  058E  2D9D               	goto	L6
  7812  058F                     l5216:	
  7813                           ;Dimmer_B1.c: 455: } else if (lights == 3) {
  7814                           
  7815  058F  0832               	movf	setDimmerLights_Main@lights,w
  7816  0590  3A03               	xorlw	3
  7817  0591  1D03               	skipz
  7818  0592  2DA0               	goto	l5228
  7819                           
  7820                           ;Dimmer_B1.c: 456: clear = (DimmerLights1.Clear == 0 || DimmerLights2.Clear == 0) ? 0 : 
      +                          1;
  7821  0593  01B0               	clrf	_setDimmerLights_Main$1558
  7822  0594  0021               	movlb	1	; select bank1
  7823  0595  1929               	btfsc	(_DimmerLights1^(0+128)+9),2
  7824  0596  1D38               	btfss	(_DimmerLights2^(0+128)+9),2
  7825  0597  2D9B               	goto	l5226
  7826  0598  0020               	movlb	0	; select bank0
  7827  0599  01B0               	clrf	_setDimmerLights_Main$1558
  7828  059A  0AB0               	incf	_setDimmerLights_Main$1558,f
  7829  059B                     l5226:	
  7830  059B  0020               	movlb	0	; select bank0
  7831  059C  0830               	movf	_setDimmerLights_Main$1558,w
  7832  059D                     L6:	
  7833  059D  00AD               	movwf	??_setDimmerLights_Main
  7834  059E  082D               	movf	??_setDimmerLights_Main,w
  7835  059F  00B1               	movwf	setDimmerLights_Main@clear
  7836  05A0                     l5228:	
  7837                           
  7838                           ;Dimmer_B1.c: 457: }
  7839                           ;Dimmer_B1.c: 468: if (DimmerLights->Trigger == 1) {
  7840  05A0  085A               	movf	_DimmerLights,w
  7841  05A1  3E08               	addlw	8
  7842  05A2  0086               	movwf	6
  7843  05A3  0187               	clrf	7
  7844  05A4  1D01               	btfss	1,2
  7845  05A5  2DC6               	goto	l5242
  7846                           
  7847                           ;Dimmer_B1.c: 469: if (clear == 1) {
  7848  05A6  0831               	movf	setDimmerLights_Main@clear,w
  7849  05A7  3A01               	xorlw	1
  7850  05A8  1D03               	skipz
  7851  05A9  0008               	return
  7852                           
  7853                           ;Dimmer_B1.c: 470: if (DimmerLights->Switch == 1) {
  7854  05AA  085A               	movf	_DimmerLights,w
  7855  05AB  3E08               	addlw	8
  7856  05AC  0086               	movwf	6
  7857  05AD  0187               	clrf	7
  7858  05AE  1C81               	btfss	1,1
  7859  05AF  2DBB               	goto	l5238
  7860                           
  7861                           ;Dimmer_B1.c: 471: DimmerLights->Trigger = 0;
  7862  05B0  085A               	movf	_DimmerLights,w
  7863  05B1  3E08               	addlw	8
  7864  05B2  0086               	movwf	6
  7865  05B3  0187               	clrf	7
  7866  05B4  1101               	bcf	1,2
  7867                           
  7868                           ;Dimmer_B1.c: 472: setDimmerLights(lights, 1);
  7869  05B5  01A4               	clrf	setDimmerLights@status
  7870  05B6  0AA4               	incf	setDimmerLights@status,f
  7871  05B7  0832               	movf	setDimmerLights_Main@lights,w
  7872  05B8  3187  276A         	fcall	_setDimmerLights
  7873                           
  7874                           ;Dimmer_B1.c: 473: } else {
  7875  05BA  0008               	return
  7876  05BB                     l5238:	
  7877                           
  7878                           ;Dimmer_B1.c: 474: DimmerLights->Trigger = 0;
  7879  05BB  0020               	movlb	0	; select bank0
  7880  05BC  085A               	movf	_DimmerLights,w
  7881  05BD  3E08               	addlw	8
  7882  05BE  0086               	movwf	6
  7883  05BF  0187               	clrf	7
  7884  05C0  1101               	bcf	1,2
  7885                           
  7886                           ;Dimmer_B1.c: 475: setDimmerLights(lights, 0);
  7887  05C1  01A4               	clrf	setDimmerLights@status
  7888  05C2  0832               	movf	setDimmerLights_Main@lights,w
  7889  05C3  3187  276A         	fcall	_setDimmerLights
  7890                           
  7891                           ;Dimmer_B1.c: 476: }
  7892                           ;Dimmer_B1.c: 480: }
  7893                           ;Dimmer_B1.c: 481: } else {
  7894  05C5  0008               	return
  7895  05C6                     l5242:	
  7896                           
  7897                           ;Dimmer_B1.c: 482: if (DimmerLights->TriggerAdj == 1) {
  7898  05C6  0020               	movlb	0	; select bank0
  7899  05C7  085A               	movf	_DimmerLights,w
  7900  05C8  3E08               	addlw	8
  7901  05C9  0086               	movwf	6
  7902  05CA  0187               	clrf	7
  7903  05CB  1E01               	btfss	1,4
  7904  05CC  0008               	return
  7905                           
  7906                           ;Dimmer_B1.c: 483: if (clear == 1) {
  7907  05CD  0831               	movf	setDimmerLights_Main@clear,w
  7908  05CE  3A01               	xorlw	1
  7909  05CF  1D03               	skipz
  7910  05D0  0008               	return
  7911                           
  7912                           ;Dimmer_B1.c: 484: DimmerLightsPointSelect(lights);
  7913  05D1  0832               	movf	setDimmerLights_Main@lights,w
  7914  05D2  318A  229A  3185   	fcall	_DimmerLightsPointSelect
  7915                           
  7916                           ;Dimmer_B1.c: 485: DimmerLights->TriggerAdj = 0;
  7917  05D5  0020               	movlb	0	; select bank0
  7918  05D6  085A               	movf	_DimmerLights,w
  7919  05D7  3E08               	addlw	8
  7920  05D8  0086               	movwf	6
  7921  05D9  0187               	clrf	7
  7922  05DA  1201               	bcf	1,4
  7923                           
  7924                           ;Dimmer_B1.c: 486: if (DimmerLights->AdjGo == 1) {
  7925  05DB  085A               	movf	_DimmerLights,w
  7926  05DC  3E08               	addlw	8
  7927  05DD  0086               	movwf	6
  7928  05DE  0187               	clrf	7
  7929  05DF  1D81               	btfss	1,3
  7930  05E0  2DF0               	goto	l5254
  7931                           
  7932                           ;Dimmer_B1.c: 487: setDimmerLights_Adj(lights, 1);
  7933  05E1  01A2               	clrf	setDimmerLights_Adj@status
  7934  05E2  0AA2               	incf	setDimmerLights_Adj@status,f
  7935  05E3  0832               	movf	setDimmerLights_Main@lights,w
  7936  05E4  318B  23BC  3185   	fcall	_setDimmerLights_Adj
  7937                           
  7938                           ;Dimmer_B1.c: 488: setBuz(1, 100);
  7939  05E7  3064               	movlw	100
  7940  05E8  0020               	movlb	0	; select bank0
  7941  05E9  00A9               	movwf	setBuz@time
  7942  05EA  3000               	movlw	0
  7943  05EB  00AA               	movwf	setBuz@time+1
  7944  05EC  3001               	movlw	1
  7945  05ED  3186  267D         	fcall	_setBuz
  7946                           
  7947                           ;Dimmer_B1.c: 489: } else {
  7948  05EF  0008               	return
  7949  05F0                     l5254:	
  7950                           
  7951                           ;Dimmer_B1.c: 490: setDimmerLights_Adj(lights, 0);
  7952  05F0  0020               	movlb	0	; select bank0
  7953  05F1  01A2               	clrf	setDimmerLights_Adj@status
  7954  05F2  0832               	movf	setDimmerLights_Main@lights,w
  7955  05F3  318B  23BC         	fcall	_setDimmerLights_Adj
  7956  05F5  0008               	return
  7957  05F6                     __end_of_setDimmerLights_Main:	
  7958                           
  7959                           	psect	text45
  7960  0BBC                     __ptext45:	
  7961 ;; *************** function _setDimmerLights_Adj *****************
  7962 ;; Defined at:
  7963 ;;		line 672 in file "../src/Dimmer_B1.c"
  7964 ;; Parameters:    Size  Location     Type
  7965 ;;  lights          1    wreg     unsigned char 
  7966 ;;  status          1    2[BANK0 ] unsigned char 
  7967 ;; Auto vars:     Size  Location     Type
  7968 ;;  lights          1    4[BANK0 ] unsigned char 
  7969 ;; Return value:  Size  Location     Type
  7970 ;;		None               void
  7971 ;; Registers used:
  7972 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7973 ;; Tracked objects:
  7974 ;;		On entry : 0/0
  7975 ;;		On exit  : 0/0
  7976 ;;		Unchanged: 0/0
  7977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7978 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7979 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7980 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7981 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7982 ;;Total ram usage:        3 bytes
  7983 ;; Hardware stack levels used:    1
  7984 ;; Hardware stack levels required when called:    6
  7985 ;; This function calls:
  7986 ;;		_DimmerLightsPointSelect
  7987 ;; This function is called by:
  7988 ;;		_setDimmerLights_Main
  7989 ;; This function uses a non-reentrant model
  7990 ;;
  7991                           
  7992                           
  7993                           ;psect for function _setDimmerLights_Adj
  7994  0BBC                     _setDimmerLights_Adj:	
  7995                           
  7996                           ;incstack = 0
  7997                           ; Regs used in _setDimmerLights_Adj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7998                           ;setDimmerLights_Adj@lights stored from wreg
  7999  0BBC  0020               	movlb	0	; select bank0
  8000  0BBD  00A4               	movwf	setDimmerLights_Adj@lights
  8001                           
  8002                           ;Dimmer_B1.c: 673: DimmerLightsPointSelect(lights);
  8003  0BBE  0824               	movf	setDimmerLights_Adj@lights,w
  8004  0BBF  318A  229A  318B   	fcall	_DimmerLightsPointSelect
  8005                           
  8006                           ;Dimmer_B1.c: 674: if (status == 1) {
  8007  0BC2  0020               	movlb	0	; select bank0
  8008  0BC3  0822               	movf	setDimmerLights_Adj@status,w
  8009  0BC4  3A01               	xorlw	1
  8010  0BC5  1D03               	skipz
  8011  0BC6  2BD0               	goto	l3878
  8012                           
  8013                           ;Dimmer_B1.c: 675: DimmerLights->AdjFlag = 1;
  8014  0BC7  085A               	movf	_DimmerLights,w
  8015  0BC8  0086               	movwf	6
  8016  0BC9  0187               	clrf	7
  8017  0BCA  1581               	bsf	1,3
  8018                           
  8019                           ;Dimmer_B1.c: 676: DimmerLights->Signal = 1;
  8020  0BCB  085A               	movf	_DimmerLights,w
  8021  0BCC  0086               	movwf	6
  8022  0BCD  0187               	clrf	7
  8023  0BCE  1481               	bsf	1,1
  8024                           
  8025                           ;Dimmer_B1.c: 677: } else {
  8026  0BCF  0008               	return
  8027  0BD0                     l3878:	
  8028                           
  8029                           ;Dimmer_B1.c: 678: if (DimmerLights->AdjFlag) {
  8030  0BD0  085A               	movf	_DimmerLights,w
  8031  0BD1  0086               	movwf	6
  8032  0BD2  0187               	clrf	7
  8033  0BD3  1D81               	btfss	1,3
  8034  0BD4  0008               	return
  8035                           
  8036                           ;Dimmer_B1.c: 680: DimmerLights->Signal = 0;
  8037  0BD5  085A               	movf	_DimmerLights,w
  8038  0BD6  0086               	movwf	6
  8039  0BD7  0187               	clrf	7
  8040  0BD8  1081               	bcf	1,1
  8041                           
  8042                           ;Dimmer_B1.c: 681: DimmerLights->AdjFlag = 0;
  8043  0BD9  085A               	movf	_DimmerLights,w
  8044  0BDA  0086               	movwf	6
  8045  0BDB  0187               	clrf	7
  8046  0BDC  1181               	bcf	1,3
  8047                           
  8048                           ;Dimmer_B1.c: 682: ;;
  8049                           ;Dimmer_B1.c: 683: DimmerLights->MaxmumValue = DimmerLights->DimmingValue;
  8050  0BDD  085A               	movf	_DimmerLights,w
  8051  0BDE  3E04               	addlw	4
  8052  0BDF  0086               	movwf	6
  8053  0BE0  0187               	clrf	7
  8054  0BE1  0801               	movf	1,w
  8055  0BE2  00A3               	movwf	??_setDimmerLights_Adj
  8056  0BE3  085A               	movf	_DimmerLights,w
  8057  0BE4  3E05               	addlw	5
  8058  0BE5  0086               	movwf	6
  8059  0BE6  0187               	clrf	7
  8060  0BE7  0823               	movf	??_setDimmerLights_Adj,w
  8061  0BE8  0081               	movwf	1
  8062                           
  8063                           ;Dimmer_B1.c: 691: ;;
  8064                           ;Dimmer_B1.c: 692: ;;
  8065  0BE9  0008               	return
  8066  0BEA                     __end_of_setDimmerLights_Adj:	
  8067                           
  8068                           	psect	text46
  8069  076A                     __ptext46:	
  8070 ;; *************** function _setDimmerLights *****************
  8071 ;; Defined at:
  8072 ;;		line 618 in file "../src/Dimmer_B1.c"
  8073 ;; Parameters:    Size  Location     Type
  8074 ;;  lights          1    wreg     unsigned char 
  8075 ;;  status          1    4[BANK0 ] unsigned char 
  8076 ;; Auto vars:     Size  Location     Type
  8077 ;;  lights          1    6[BANK0 ] unsigned char 
  8078 ;; Return value:  Size  Location     Type
  8079 ;;		None               void
  8080 ;; Registers used:
  8081 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8082 ;; Tracked objects:
  8083 ;;		On entry : 0/0
  8084 ;;		On exit  : 0/0
  8085 ;;		Unchanged: 0/0
  8086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8087 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8088 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8089 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8090 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8091 ;;Total ram usage:        3 bytes
  8092 ;; Hardware stack levels used:    1
  8093 ;; Hardware stack levels required when called:    7
  8094 ;; This function calls:
  8095 ;;		_DimmerLightsPointSelect
  8096 ;;		_setLED
  8097 ;;		_setMemory_GO
  8098 ;; This function is called by:
  8099 ;;		_setDimmerLights_Main
  8100 ;; This function uses a non-reentrant model
  8101 ;;
  8102                           
  8103                           
  8104                           ;psect for function _setDimmerLights
  8105  076A                     _setDimmerLights:	
  8106                           
  8107                           ;incstack = 0
  8108                           ; Regs used in _setDimmerLights: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8109                           ;setDimmerLights@lights stored from wreg
  8110  076A  0020               	movlb	0	; select bank0
  8111  076B  00A6               	movwf	setDimmerLights@lights
  8112                           
  8113                           ;Dimmer_B1.c: 619: DimmerLightsPointSelect(lights);
  8114  076C  0826               	movf	setDimmerLights@lights,w
  8115  076D  318A  229A  3187   	fcall	_DimmerLightsPointSelect
  8116                           
  8117                           ;Dimmer_B1.c: 620: Dimmer->Load = lights;
  8118  0770  0020               	movlb	0	; select bank0
  8119  0771  0826               	movf	setDimmerLights@lights,w
  8120  0772  00A5               	movwf	??_setDimmerLights
  8121  0773  0A59               	incf	_Dimmer,w
  8122  0774  0086               	movwf	6
  8123  0775  0187               	clrf	7
  8124  0776  0825               	movf	??_setDimmerLights,w
  8125  0777  0081               	movwf	1
  8126                           
  8127                           ;Dimmer_B1.c: 621: if (status) {
  8128  0778  0824               	movf	setDimmerLights@status,w
  8129  0779  1903               	btfsc	3,2
  8130  077A  2FB3               	goto	l5186
  8131                           
  8132                           ;Dimmer_B1.c: 622: DimmerLights->Status = 1;
  8133  077B  085A               	movf	_DimmerLights,w
  8134  077C  0086               	movwf	6
  8135  077D  0187               	clrf	7
  8136  077E  1681               	bsf	1,5
  8137                           
  8138                           ;Dimmer_B1.c: 623: setLED(lights, 0);
  8139  077F  01A2               	clrf	setLED@command
  8140  0780  0826               	movf	setDimmerLights@lights,w
  8141  0781  318F  2793  3187   	fcall	_setLED
  8142                           
  8143                           ;Dimmer_B1.c: 625: ;;
  8144                           ;Dimmer_B1.c: 627: DimmerLights->Signal = 1;
  8145  0784  0020               	movlb	0	; select bank0
  8146  0785  085A               	movf	_DimmerLights,w
  8147  0786  0086               	movwf	6
  8148  0787  0187               	clrf	7
  8149  0788  1481               	bsf	1,1
  8150                           
  8151                           ;Dimmer_B1.c: 628: DimmerLights->DimmingTimeValue = 6;
  8152  0789  3006               	movlw	6
  8153  078A  00A5               	movwf	??_setDimmerLights
  8154  078B  085A               	movf	_DimmerLights,w
  8155  078C  3E02               	addlw	2
  8156  078D  0086               	movwf	6
  8157  078E  0187               	clrf	7
  8158  078F  0825               	movf	??_setDimmerLights,w
  8159  0790  0081               	movwf	1
  8160                           
  8161                           ;Dimmer_B1.c: 630: if (!DimmerLights->StatusFlag) {
  8162  0791  085A               	movf	_DimmerLights,w
  8163  0792  0086               	movwf	6
  8164  0793  0187               	clrf	7
  8165  0794  1B01               	btfsc	1,6
  8166  0795  0008               	return
  8167                           
  8168                           ;Dimmer_B1.c: 631: DimmerLights->StatusFlag = 1;
  8169  0796  085A               	movf	_DimmerLights,w
  8170  0797  0086               	movwf	6
  8171  0798  0187               	clrf	7
  8172  0799  1701               	bsf	1,6
  8173                           
  8174                           ;Dimmer_B1.c: 632: ;;
  8175                           ;Dimmer_B1.c: 633: setMemory_GO(0);
  8176  079A  3000               	movlw	0
  8177  079B  318A  22B5         	fcall	_setMemory_GO
  8178                           
  8179                           ;Dimmer_B1.c: 636: DimmerLights->DimmingValue = DimmerLights->MaxmumValue;
  8180  079D  0020               	movlb	0	; select bank0
  8181  079E  085A               	movf	_DimmerLights,w
  8182  079F  3E05               	addlw	5
  8183  07A0  0086               	movwf	6
  8184  07A1  0187               	clrf	7
  8185  07A2  0801               	movf	1,w
  8186  07A3  00A5               	movwf	??_setDimmerLights
  8187  07A4  085A               	movf	_DimmerLights,w
  8188  07A5  3E04               	addlw	4
  8189  07A6  0086               	movwf	6
  8190  07A7  0187               	clrf	7
  8191  07A8  0825               	movf	??_setDimmerLights,w
  8192  07A9  0081               	movwf	1
  8193                           
  8194                           ;Dimmer_B1.c: 640: DimmerLights->DimmingValue = ((char)((100-95)*0.8));
  8195  07AA  3004               	movlw	4
  8196  07AB  00A5               	movwf	??_setDimmerLights
  8197  07AC  085A               	movf	_DimmerLights,w
  8198  07AD  3E04               	addlw	4
  8199  07AE  0086               	movwf	6
  8200  07AF  0187               	clrf	7
  8201  07B0  0825               	movf	??_setDimmerLights,w
  8202  07B1  0081               	movwf	1
  8203                           
  8204                           ;Dimmer_B1.c: 642: }
  8205                           ;Dimmer_B1.c: 643: } else {
  8206  07B2  0008               	return
  8207  07B3                     l5186:	
  8208                           
  8209                           ;Dimmer_B1.c: 645: DimmerLights->Status = 0;
  8210  07B3  085A               	movf	_DimmerLights,w
  8211  07B4  0086               	movwf	6
  8212  07B5  0187               	clrf	7
  8213  07B6  1281               	bcf	1,5
  8214                           
  8215                           ;Dimmer_B1.c: 647: DimmerLights->DimmingValue = DimmerLights->MinimumValue;
  8216  07B7  085A               	movf	_DimmerLights,w
  8217  07B8  3E06               	addlw	6
  8218  07B9  0086               	movwf	6
  8219  07BA  0187               	clrf	7
  8220  07BB  0801               	movf	1,w
  8221  07BC  00A5               	movwf	??_setDimmerLights
  8222  07BD  085A               	movf	_DimmerLights,w
  8223  07BE  3E04               	addlw	4
  8224  07BF  0086               	movwf	6
  8225  07C0  0187               	clrf	7
  8226  07C1  0825               	movf	??_setDimmerLights,w
  8227  07C2  0081               	movwf	1
  8228                           
  8229                           ;Dimmer_B1.c: 654: DimmerLights->Signal = 1;
  8230  07C3  085A               	movf	_DimmerLights,w
  8231  07C4  0086               	movwf	6
  8232  07C5  0187               	clrf	7
  8233  07C6  1481               	bsf	1,1
  8234                           
  8235                           ;Dimmer_B1.c: 655: DimmerLights->AdjFlag = 0;
  8236  07C7  085A               	movf	_DimmerLights,w
  8237  07C8  0086               	movwf	6
  8238  07C9  0187               	clrf	7
  8239  07CA  1181               	bcf	1,3
  8240                           
  8241                           ;Dimmer_B1.c: 656: DimmerLights->AdjStatus = 0;
  8242  07CB  085A               	movf	_DimmerLights,w
  8243  07CC  0086               	movwf	6
  8244  07CD  0187               	clrf	7
  8245  07CE  1201               	bcf	1,4
  8246                           
  8247                           ;Dimmer_B1.c: 657: DimmerLights->DimmingTimeValue = 6;
  8248  07CF  3006               	movlw	6
  8249  07D0  00A5               	movwf	??_setDimmerLights
  8250  07D1  085A               	movf	_DimmerLights,w
  8251  07D2  3E02               	addlw	2
  8252  07D3  0086               	movwf	6
  8253  07D4  0187               	clrf	7
  8254  07D5  0825               	movf	??_setDimmerLights,w
  8255  07D6  0081               	movwf	1
  8256  07D7  0008               	return
  8257  07D8                     __end_of_setDimmerLights:	
  8258                           
  8259                           	psect	text47
  8260  0F93                     __ptext47:	
  8261 ;; *************** function _setLED *****************
  8262 ;; Defined at:
  8263 ;;		line 74 in file "../src/LED_B1.c"
  8264 ;; Parameters:    Size  Location     Type
  8265 ;;  led             1    wreg     unsigned char 
  8266 ;;  command         1    2[BANK0 ] unsigned char 
  8267 ;; Auto vars:     Size  Location     Type
  8268 ;;  led             1    3[BANK0 ] unsigned char 
  8269 ;; Return value:  Size  Location     Type
  8270 ;;		None               void
  8271 ;; Registers used:
  8272 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8273 ;; Tracked objects:
  8274 ;;		On entry : 0/0
  8275 ;;		On exit  : 0/0
  8276 ;;		Unchanged: 0/0
  8277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8278 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8279 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8281 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8282 ;;Total ram usage:        2 bytes
  8283 ;; Hardware stack levels used:    1
  8284 ;; Hardware stack levels required when called:    6
  8285 ;; This function calls:
  8286 ;;		_LedPointSelect
  8287 ;; This function is called by:
  8288 ;;		_setDimmerLights
  8289 ;;		_setLED_Initialization
  8290 ;;		_setSw_Initialization
  8291 ;;		_setDimmerLights_ERROR
  8292 ;; This function uses a non-reentrant model
  8293 ;;
  8294                           
  8295                           
  8296                           ;psect for function _setLED
  8297  0F93                     _setLED:	
  8298                           
  8299                           ;incstack = 0
  8300                           ; Regs used in _setLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8301                           ;setLED@led stored from wreg
  8302  0F93  0020               	movlb	0	; select bank0
  8303  0F94  00A3               	movwf	setLED@led
  8304                           
  8305                           ;LED_B1.c: 76: LedPointSelect(led);
  8306  0F95  0823               	movf	setLED@led,w
  8307  0F96  318B  236D  318F   	fcall	_LedPointSelect
  8308                           
  8309                           ;LED_B1.c: 77: if(command == 0)
  8310  0F99  0020               	movlb	0	; select bank0
  8311  0F9A  08A2               	movf	setLED@command,f
  8312  0F9B  1D03               	skipz
  8313  0F9C  2FB5               	goto	l5120
  8314                           
  8315                           ;LED_B1.c: 78: {
  8316                           ;LED_B1.c: 80: if(led == 1)
  8317  0F9D  0823               	movf	setLED@led,w
  8318  0F9E  3A01               	xorlw	1
  8319  0F9F  1D03               	skipz
  8320  0FA0  2FA3               	goto	l5108
  8321                           
  8322                           ;LED_B1.c: 81: {
  8323                           ;LED_B1.c: 85: RC7=1;
  8324  0FA1  178E               	bsf	14,7	;volatile
  8325                           
  8326                           ;LED_B1.c: 87: }
  8327  0FA2  0008               	return
  8328  0FA3                     l5108:	
  8329                           
  8330                           ;LED_B1.c: 90: else if(led == 2)
  8331  0FA3  0823               	movf	setLED@led,w
  8332  0FA4  3A02               	xorlw	2
  8333  0FA5  1D03               	skipz
  8334  0FA6  2FA9               	goto	l5112
  8335                           
  8336                           ;LED_B1.c: 91: {
  8337                           ;LED_B1.c: 95: RA3=1;
  8338  0FA7  158C               	bsf	12,3	;volatile
  8339                           
  8340                           ;LED_B1.c: 97: }
  8341  0FA8  0008               	return
  8342  0FA9                     l5112:	
  8343                           
  8344                           ;LED_B1.c: 100: else if(led == 3)
  8345  0FA9  0823               	movf	setLED@led,w
  8346  0FAA  3A03               	xorlw	3
  8347  0FAB  1D03               	skipz
  8348  0FAC  2FAF               	goto	l5116
  8349                           
  8350                           ;LED_B1.c: 101: {
  8351                           ;LED_B1.c: 105: RC6=1;
  8352  0FAD  170E               	bsf	14,6	;volatile
  8353                           
  8354                           ;LED_B1.c: 107: }
  8355  0FAE  0008               	return
  8356  0FAF                     l5116:	
  8357                           
  8358                           ;LED_B1.c: 110: else if(led == 99)
  8359  0FAF  0823               	movf	setLED@led,w
  8360  0FB0  3A63               	xorlw	99
  8361  0FB1  1D03               	skipz
  8362  0FB2  0008               	return
  8363                           
  8364                           ;LED_B1.c: 111: {
  8365                           ;LED_B1.c: 115: RB5=1;
  8366  0FB3  168D               	bsf	13,5	;volatile
  8367                           
  8368                           ;LED_B1.c: 117: }
  8369                           ;LED_B1.c: 119: }
  8370  0FB4  0008               	return
  8371  0FB5                     l5120:	
  8372                           
  8373                           ;LED_B1.c: 120: else if(command == 1)
  8374  0FB5  0822               	movf	setLED@command,w
  8375  0FB6  3A01               	xorlw	1
  8376  0FB7  1D03               	skipz
  8377  0FB8  2FD1               	goto	l5138
  8378                           
  8379                           ;LED_B1.c: 121: {
  8380                           ;LED_B1.c: 123: if(led == 1)
  8381  0FB9  0823               	movf	setLED@led,w
  8382  0FBA  3A01               	xorlw	1
  8383  0FBB  1D03               	skipz
  8384  0FBC  2FBF               	goto	l5126
  8385                           
  8386                           ;LED_B1.c: 124: {
  8387                           ;LED_B1.c: 128: RC7=0;
  8388  0FBD  138E               	bcf	14,7	;volatile
  8389                           
  8390                           ;LED_B1.c: 130: }
  8391  0FBE  0008               	return
  8392  0FBF                     l5126:	
  8393                           
  8394                           ;LED_B1.c: 133: else if(led == 2)
  8395  0FBF  0823               	movf	setLED@led,w
  8396  0FC0  3A02               	xorlw	2
  8397  0FC1  1D03               	skipz
  8398  0FC2  2FC5               	goto	l5130
  8399                           
  8400                           ;LED_B1.c: 134: {
  8401                           ;LED_B1.c: 138: RA3=0;
  8402  0FC3  118C               	bcf	12,3	;volatile
  8403                           
  8404                           ;LED_B1.c: 140: }
  8405  0FC4  0008               	return
  8406  0FC5                     l5130:	
  8407                           
  8408                           ;LED_B1.c: 143: else if(led == 3)
  8409  0FC5  0823               	movf	setLED@led,w
  8410  0FC6  3A03               	xorlw	3
  8411  0FC7  1D03               	skipz
  8412  0FC8  2FCB               	goto	l5134
  8413                           
  8414                           ;LED_B1.c: 144: {
  8415                           ;LED_B1.c: 148: RC6=0;
  8416  0FC9  130E               	bcf	14,6	;volatile
  8417                           
  8418                           ;LED_B1.c: 150: }
  8419  0FCA  0008               	return
  8420  0FCB                     l5134:	
  8421                           
  8422                           ;LED_B1.c: 153: else if(led == 99)
  8423  0FCB  0823               	movf	setLED@led,w
  8424  0FCC  3A63               	xorlw	99
  8425  0FCD  1D03               	skipz
  8426  0FCE  0008               	return
  8427                           
  8428                           ;LED_B1.c: 154: {
  8429                           ;LED_B1.c: 158: RB5=0;
  8430  0FCF  128D               	bcf	13,5	;volatile
  8431                           
  8432                           ;LED_B1.c: 160: }
  8433                           ;LED_B1.c: 162: }
  8434  0FD0  0008               	return
  8435  0FD1                     l5138:	
  8436                           
  8437                           ;LED_B1.c: 163: else if(command == 10)
  8438  0FD1  0822               	movf	setLED@command,w
  8439  0FD2  3A0A               	xorlw	10
  8440  0FD3  1D03               	skipz
  8441  0FD4  2FF7               	goto	l5158
  8442                           
  8443                           ;LED_B1.c: 164: {
  8444                           ;LED_B1.c: 165: LED->GO=0;
  8445  0FD5  085E               	movf	_LED,w
  8446  0FD6  0086               	movwf	6
  8447  0FD7  0187               	clrf	7
  8448  0FD8  1081               	bcf	1,1
  8449                           
  8450                           ;LED_B1.c: 166: LED->Time=0;
  8451  0FD9  0A5E               	incf	_LED,w
  8452  0FDA  0086               	movwf	6
  8453  0FDB  0187               	clrf	7
  8454  0FDC  3000               	movlw	0
  8455  0FDD  3FC0               	movwi [0]fsr1
  8456  0FDE  3FC1               	movwi [1]fsr1
  8457                           
  8458                           ;LED_B1.c: 168: if(led == 1)
  8459  0FDF  0823               	movf	setLED@led,w
  8460  0FE0  3A01               	xorlw	1
  8461  0FE1  1D03               	skipz
  8462  0FE2  2FE5               	goto	l5146
  8463                           
  8464                           ;LED_B1.c: 169: {
  8465                           ;LED_B1.c: 173: RC7=1;
  8466  0FE3  178E               	bsf	14,7	;volatile
  8467                           
  8468                           ;LED_B1.c: 175: }
  8469  0FE4  0008               	return
  8470  0FE5                     l5146:	
  8471                           
  8472                           ;LED_B1.c: 178: else if(led == 2)
  8473  0FE5  0823               	movf	setLED@led,w
  8474  0FE6  3A02               	xorlw	2
  8475  0FE7  1D03               	skipz
  8476  0FE8  2FEB               	goto	l5150
  8477                           
  8478                           ;LED_B1.c: 179: {
  8479                           ;LED_B1.c: 183: RA3=1;
  8480  0FE9  158C               	bsf	12,3	;volatile
  8481                           
  8482                           ;LED_B1.c: 185: }
  8483  0FEA  0008               	return
  8484  0FEB                     l5150:	
  8485                           
  8486                           ;LED_B1.c: 188: else if(led == 3)
  8487  0FEB  0823               	movf	setLED@led,w
  8488  0FEC  3A03               	xorlw	3
  8489  0FED  1D03               	skipz
  8490  0FEE  2FF1               	goto	l5154
  8491                           
  8492                           ;LED_B1.c: 189: {
  8493                           ;LED_B1.c: 193: RC6=1;
  8494  0FEF  170E               	bsf	14,6	;volatile
  8495                           
  8496                           ;LED_B1.c: 195: }
  8497  0FF0  0008               	return
  8498  0FF1                     l5154:	
  8499                           
  8500                           ;LED_B1.c: 198: else if(led == 99)
  8501  0FF1  0823               	movf	setLED@led,w
  8502  0FF2  3A63               	xorlw	99
  8503  0FF3  1D03               	skipz
  8504  0FF4  0008               	return
  8505                           
  8506                           ;LED_B1.c: 199: {
  8507                           ;LED_B1.c: 203: RB5=1;
  8508  0FF5  168D               	bsf	13,5	;volatile
  8509                           
  8510                           ;LED_B1.c: 205: }
  8511                           ;LED_B1.c: 207: }
  8512  0FF6  0008               	return
  8513  0FF7                     l5158:	
  8514                           
  8515                           ;LED_B1.c: 208: else if(command == 11)
  8516  0FF7  0822               	movf	setLED@command,w
  8517  0FF8  3A0B               	xorlw	11
  8518  0FF9  1D03               	skipz
  8519  0FFA  0008               	return
  8520                           
  8521                           ;LED_B1.c: 209: {
  8522                           ;LED_B1.c: 210: LED->GO=1;
  8523  0FFB  085E               	movf	_LED,w
  8524  0FFC  0086               	movwf	6
  8525  0FFD  0187               	clrf	7
  8526  0FFE  1481               	bsf	1,1
  8527  0FFF  0008               	return
  8528  1000                     __end_of_setLED:	
  8529                           
  8530                           	psect	text48
  8531  0B6D                     __ptext48:	
  8532 ;; *************** function _LedPointSelect *****************
  8533 ;; Defined at:
  8534 ;;		line 7 in file "../src/LED_B1.c"
  8535 ;; Parameters:    Size  Location     Type
  8536 ;;  led             1    wreg     unsigned char 
  8537 ;; Auto vars:     Size  Location     Type
  8538 ;;  led             1    1[BANK0 ] unsigned char 
  8539 ;; Return value:  Size  Location     Type
  8540 ;;		None               void
  8541 ;; Registers used:
  8542 ;;		wreg
  8543 ;; Tracked objects:
  8544 ;;		On entry : 0/0
  8545 ;;		On exit  : 0/0
  8546 ;;		Unchanged: 0/0
  8547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8549 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8550 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8551 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8552 ;;Total ram usage:        2 bytes
  8553 ;; Hardware stack levels used:    1
  8554 ;; Hardware stack levels required when called:    5
  8555 ;; This function calls:
  8556 ;;		Nothing
  8557 ;; This function is called by:
  8558 ;;		_setLED_Initialization
  8559 ;;		_setLED
  8560 ;;		_setLED_Main
  8561 ;; This function uses a non-reentrant model
  8562 ;;
  8563                           
  8564                           
  8565                           ;psect for function _LedPointSelect
  8566  0B6D                     _LedPointSelect:	
  8567                           
  8568                           ;incstack = 0
  8569                           ; Regs used in _LedPointSelect: [wreg]
  8570                           ;LedPointSelect@led stored from wreg
  8571  0B6D  0020               	movlb	0	; select bank0
  8572  0B6E  00A1               	movwf	LedPointSelect@led
  8573                           
  8574                           ;LED_B1.c: 10: if(led == 1)
  8575  0B6F  0821               	movf	LedPointSelect@led,w
  8576  0B70  3A01               	xorlw	1
  8577  0B71  1D03               	skipz
  8578  0B72  2B78               	goto	l5088
  8579                           
  8580                           ;LED_B1.c: 11: {
  8581                           ;LED_B1.c: 12: LED=&VarLED1;
  8582  0B73  3063               	movlw	_VarLED1& (0+255)
  8583  0B74  00A0               	movwf	??_LedPointSelect
  8584  0B75  0820               	movf	??_LedPointSelect,w
  8585  0B76  00DE               	movwf	_LED
  8586                           
  8587                           ;LED_B1.c: 13: }
  8588  0B77  0008               	return
  8589  0B78                     l5088:	
  8590                           
  8591                           ;LED_B1.c: 16: else if(led == 2)
  8592  0B78  0821               	movf	LedPointSelect@led,w
  8593  0B79  3A02               	xorlw	2
  8594  0B7A  1D03               	skipz
  8595  0B7B  2B81               	goto	l5092
  8596                           
  8597                           ;LED_B1.c: 17: {
  8598                           ;LED_B1.c: 18: LED=&VarLED2;
  8599  0B7C  30E7               	movlw	_VarLED2& (0+255)
  8600  0B7D  00A0               	movwf	??_LedPointSelect
  8601  0B7E  0820               	movf	??_LedPointSelect,w
  8602  0B7F  00DE               	movwf	_LED
  8603                           
  8604                           ;LED_B1.c: 19: }
  8605  0B80  0008               	return
  8606  0B81                     l5092:	
  8607                           
  8608                           ;LED_B1.c: 22: else if(led == 3)
  8609  0B81  0821               	movf	LedPointSelect@led,w
  8610  0B82  3A03               	xorlw	3
  8611  0B83  1D03               	skipz
  8612  0B84  2B8A               	goto	l5096
  8613                           
  8614                           ;LED_B1.c: 23: {
  8615                           ;LED_B1.c: 24: LED=&VarLED3;
  8616  0B85  30EB               	movlw	_VarLED3& (0+255)
  8617  0B86  00A0               	movwf	??_LedPointSelect
  8618  0B87  0820               	movf	??_LedPointSelect,w
  8619  0B88  00DE               	movwf	_LED
  8620                           
  8621                           ;LED_B1.c: 25: }
  8622  0B89  0008               	return
  8623  0B8A                     l5096:	
  8624                           
  8625                           ;LED_B1.c: 28: else if(led == 99)
  8626  0B8A  0821               	movf	LedPointSelect@led,w
  8627  0B8B  3A63               	xorlw	99
  8628  0B8C  1D03               	skipz
  8629  0B8D  0008               	return
  8630                           
  8631                           ;LED_B1.c: 29: {
  8632                           ;LED_B1.c: 30: LED=&VarErrLED;
  8633  0B8E  305F               	movlw	_VarErrLED& (0+255)
  8634  0B8F  00A0               	movwf	??_LedPointSelect
  8635  0B90  0820               	movf	??_LedPointSelect,w
  8636  0B91  00DE               	movwf	_LED
  8637  0B92  0008               	return
  8638  0B93                     __end_of_LedPointSelect:	
  8639                           
  8640                           	psect	text49
  8641  067D                     __ptext49:	
  8642 ;; *************** function _setBuz *****************
  8643 ;; Defined at:
  8644 ;;		line 30 in file "../src/Buzzer_B1.c"
  8645 ;; Parameters:    Size  Location     Type
  8646 ;;  count           1    wreg     unsigned char 
  8647 ;;  time            2    9[BANK0 ] int 
  8648 ;; Auto vars:     Size  Location     Type
  8649 ;;  count           1   12[BANK0 ] unsigned char 
  8650 ;; Return value:  Size  Location     Type
  8651 ;;		None               void
  8652 ;; Registers used:
  8653 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8654 ;; Tracked objects:
  8655 ;;		On entry : 0/0
  8656 ;;		On exit  : 0/0
  8657 ;;		Unchanged: 0/0
  8658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8659 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8660 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8661 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8662 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8663 ;;Total ram usage:        4 bytes
  8664 ;; Hardware stack levels used:    1
  8665 ;; Hardware stack levels required when called:    6
  8666 ;; This function calls:
  8667 ;;		___awdiv
  8668 ;; This function is called by:
  8669 ;;		_setDimmerLights_Main
  8670 ;;		_my_Main
  8671 ;;		_setSw_Main
  8672 ;;		_Sw_DimmerOnFunc
  8673 ;;		_DimmerLights_Exceptions
  8674 ;; This function uses a non-reentrant model
  8675 ;;
  8676                           
  8677                           
  8678                           ;psect for function _setBuz
  8679  067D                     _setBuz:	
  8680                           
  8681                           ;incstack = 0
  8682                           ; Regs used in _setBuz: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8683                           ;setBuz@count stored from wreg
  8684  067D  0020               	movlb	0	; select bank0
  8685  067E  00AC               	movwf	setBuz@count
  8686                           
  8687                           ;Buzzer_B1.c: 31: time /=10;
  8688  067F  300A               	movlw	10
  8689  0680  00A0               	movwf	___awdiv@divisor
  8690  0681  3000               	movlw	0
  8691  0682  00A1               	movwf	___awdiv@divisor+1
  8692  0683  082A               	movf	setBuz@time+1,w
  8693  0684  01A3               	clrf	___awdiv@dividend+1
  8694  0685  07A3               	addwf	___awdiv@dividend+1,f
  8695  0686  0829               	movf	setBuz@time,w
  8696  0687  01A2               	clrf	___awdiv@dividend
  8697  0688  07A2               	addwf	___awdiv@dividend,f
  8698  0689  318D  25A7  3186   	fcall	___awdiv
  8699  068C  0020               	movlb	0	; select bank0
  8700  068D  0821               	movf	?___awdiv+1,w
  8701  068E  01AA               	clrf	setBuz@time+1
  8702  068F  07AA               	addwf	setBuz@time+1,f
  8703  0690  0820               	movf	?___awdiv,w
  8704  0691  01A9               	clrf	setBuz@time
  8705  0692  07A9               	addwf	setBuz@time,f
  8706                           
  8707                           ;Buzzer_B1.c: 32: if (Buz->Enable) {
  8708  0693  0858               	movf	_Buz,w
  8709  0694  0086               	movwf	6
  8710  0695  3001               	movlw	1	; select bank2/3
  8711  0696  0087               	movwf	7
  8712  0697  1C01               	btfss	1,0
  8713  0698  0008               	return
  8714                           
  8715                           ;Buzzer_B1.c: 33: if (!Buz->GO) {
  8716  0699  0858               	movf	_Buz,w
  8717  069A  0086               	movwf	6
  8718  069B  3001               	movlw	1	; select bank2/3
  8719  069C  0087               	movwf	7
  8720  069D  1881               	btfsc	1,1
  8721  069E  2EB8               	goto	l3670
  8722                           
  8723                           ;Buzzer_B1.c: 34: Buz->GO = 1;
  8724  069F  0858               	movf	_Buz,w
  8725  06A0  0086               	movwf	6
  8726  06A1  3001               	movlw	1	; select bank2/3
  8727  06A2  0087               	movwf	7
  8728  06A3  1481               	bsf	1,1
  8729                           
  8730                           ;Buzzer_B1.c: 35: Buz->Count = count;
  8731  06A4  082C               	movf	setBuz@count,w
  8732  06A5  00AB               	movwf	??_setBuz
  8733  06A6  0858               	movf	_Buz,w
  8734  06A7  3E03               	addlw	3
  8735  06A8  0086               	movwf	6
  8736  06A9  3001               	movlw	1	; select bank2/3
  8737  06AA  0087               	movwf	7
  8738  06AB  082B               	movf	??_setBuz,w
  8739  06AC  0081               	movwf	1
  8740                           
  8741                           ;Buzzer_B1.c: 36: Buz->TimeValue = time;
  8742  06AD  0858               	movf	_Buz,w
  8743  06AE  3E06               	addlw	6
  8744  06AF  0086               	movwf	6
  8745  06B0  3001               	movlw	1	; select bank2/3
  8746  06B1  0087               	movwf	7
  8747  06B2  0829               	movf	setBuz@time,w
  8748  06B3  3FC0               	movwi [0]fsr1
  8749  06B4  082A               	movf	setBuz@time+1,w
  8750  06B5  3FC1               	movwi [1]fsr1
  8751                           
  8752                           ;Buzzer_B1.c: 37: RB3 = 1;
  8753  06B6  158D               	bsf	13,3	;volatile
  8754                           
  8755                           ;Buzzer_B1.c: 38: } else {
  8756  06B7  0008               	return
  8757  06B8                     l3670:	
  8758                           
  8759                           ;Buzzer_B1.c: 39: if (!Buz->BufferStatus1) {
  8760  06B8  0858               	movf	_Buz,w
  8761  06B9  0086               	movwf	6
  8762  06BA  3001               	movlw	1	; select bank2/3
  8763  06BB  0087               	movwf	7
  8764  06BC  1981               	btfsc	1,3
  8765  06BD  2ED6               	goto	l3674
  8766                           
  8767                           ;Buzzer_B1.c: 40: Buz->BufferStatus1 = 1;
  8768  06BE  0858               	movf	_Buz,w
  8769  06BF  0086               	movwf	6
  8770  06C0  3001               	movlw	1	; select bank2/3
  8771  06C1  0087               	movwf	7
  8772  06C2  1581               	bsf	1,3
  8773                           
  8774                           ;Buzzer_B1.c: 41: Buz->CountBuffer1 = count;
  8775  06C3  082C               	movf	setBuz@count,w
  8776  06C4  00AB               	movwf	??_setBuz
  8777  06C5  0858               	movf	_Buz,w
  8778  06C6  3E04               	addlw	4
  8779  06C7  0086               	movwf	6
  8780  06C8  3001               	movlw	1	; select bank2/3
  8781  06C9  0087               	movwf	7
  8782  06CA  082B               	movf	??_setBuz,w
  8783  06CB  0081               	movwf	1
  8784                           
  8785                           ;Buzzer_B1.c: 42: Buz->TimeValueBuffer1 = time;
  8786  06CC  0858               	movf	_Buz,w
  8787  06CD  3E08               	addlw	8
  8788  06CE  0086               	movwf	6
  8789  06CF  3001               	movlw	1	; select bank2/3
  8790  06D0  0087               	movwf	7
  8791  06D1  0829               	movf	setBuz@time,w
  8792  06D2  3FC0               	movwi [0]fsr1
  8793  06D3  082A               	movf	setBuz@time+1,w
  8794  06D4  3FC1               	movwi [1]fsr1
  8795                           
  8796                           ;Buzzer_B1.c: 43: } else if (!Buz->BufferStatus2) {
  8797  06D5  0008               	return
  8798  06D6                     l3674:	
  8799  06D6  0858               	movf	_Buz,w
  8800  06D7  0086               	movwf	6
  8801  06D8  3001               	movlw	1	; select bank2/3
  8802  06D9  0087               	movwf	7
  8803  06DA  1A01               	btfsc	1,4
  8804  06DB  0008               	return
  8805                           
  8806                           ;Buzzer_B1.c: 44: Buz->BufferStatus2 = 1;
  8807  06DC  0858               	movf	_Buz,w
  8808  06DD  0086               	movwf	6
  8809  06DE  3001               	movlw	1	; select bank2/3
  8810  06DF  0087               	movwf	7
  8811  06E0  1601               	bsf	1,4
  8812                           
  8813                           ;Buzzer_B1.c: 45: Buz->CountBuffer2 = count;
  8814  06E1  082C               	movf	setBuz@count,w
  8815  06E2  00AB               	movwf	??_setBuz
  8816  06E3  0858               	movf	_Buz,w
  8817  06E4  3E05               	addlw	5
  8818  06E5  0086               	movwf	6
  8819  06E6  3001               	movlw	1	; select bank2/3
  8820  06E7  0087               	movwf	7
  8821  06E8  082B               	movf	??_setBuz,w
  8822  06E9  0081               	movwf	1
  8823                           
  8824                           ;Buzzer_B1.c: 46: Buz->TimeValueBuffer2 = time;
  8825  06EA  0858               	movf	_Buz,w
  8826  06EB  3E0A               	addlw	10
  8827  06EC  0086               	movwf	6
  8828  06ED  3001               	movlw	1	; select bank2/3
  8829  06EE  0087               	movwf	7
  8830  06EF  0829               	movf	setBuz@time,w
  8831  06F0  3FC0               	movwi [0]fsr1
  8832  06F1  082A               	movf	setBuz@time+1,w
  8833  06F2  3FC1               	movwi [1]fsr1
  8834  06F3  0008               	return
  8835  06F4                     __end_of_setBuz:	
  8836                           
  8837                           	psect	text50
  8838  0DA7                     __ptext50:	
  8839 ;; *************** function ___awdiv *****************
  8840 ;; Defined at:
  8841 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  8842 ;; Parameters:    Size  Location     Type
  8843 ;;  divisor         2    0[BANK0 ] int 
  8844 ;;  dividend        2    2[BANK0 ] int 
  8845 ;; Auto vars:     Size  Location     Type
  8846 ;;  quotient        2    7[BANK0 ] int 
  8847 ;;  sign            1    6[BANK0 ] unsigned char 
  8848 ;;  counter         1    5[BANK0 ] unsigned char 
  8849 ;; Return value:  Size  Location     Type
  8850 ;;                  2    0[BANK0 ] int 
  8851 ;; Registers used:
  8852 ;;		wreg, status,2, status,0
  8853 ;; Tracked objects:
  8854 ;;		On entry : 0/0
  8855 ;;		On exit  : 0/0
  8856 ;;		Unchanged: 0/0
  8857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8858 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8859 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8860 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8861 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8862 ;;Total ram usage:        9 bytes
  8863 ;; Hardware stack levels used:    1
  8864 ;; Hardware stack levels required when called:    5
  8865 ;; This function calls:
  8866 ;;		Nothing
  8867 ;; This function is called by:
  8868 ;;		_setBuz
  8869 ;; This function uses a non-reentrant model
  8870 ;;
  8871                           
  8872                           
  8873                           ;psect for function ___awdiv
  8874  0DA7                     ___awdiv:	
  8875                           
  8876                           ;incstack = 0
  8877                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8878  0DA7  0020               	movlb	0	; select bank0
  8879  0DA8  01A6               	clrf	___awdiv@sign
  8880  0DA9  1FA1               	btfss	___awdiv@divisor+1,7
  8881  0DAA  2DB2               	goto	l3624
  8882  0DAB  09A0               	comf	___awdiv@divisor,f
  8883  0DAC  09A1               	comf	___awdiv@divisor+1,f
  8884  0DAD  0AA0               	incf	___awdiv@divisor,f
  8885  0DAE  1903               	skipnz
  8886  0DAF  0AA1               	incf	___awdiv@divisor+1,f
  8887  0DB0  01A6               	clrf	___awdiv@sign
  8888  0DB1  0AA6               	incf	___awdiv@sign,f
  8889  0DB2                     l3624:	
  8890  0DB2  1FA3               	btfss	___awdiv@dividend+1,7
  8891  0DB3  2DBD               	goto	l3630
  8892  0DB4  09A2               	comf	___awdiv@dividend,f
  8893  0DB5  09A3               	comf	___awdiv@dividend+1,f
  8894  0DB6  0AA2               	incf	___awdiv@dividend,f
  8895  0DB7  1903               	skipnz
  8896  0DB8  0AA3               	incf	___awdiv@dividend+1,f
  8897  0DB9  3001               	movlw	1
  8898  0DBA  00A4               	movwf	??___awdiv
  8899  0DBB  0824               	movf	??___awdiv,w
  8900  0DBC  06A6               	xorwf	___awdiv@sign,f
  8901  0DBD                     l3630:	
  8902  0DBD  01A7               	clrf	___awdiv@quotient
  8903  0DBE  01A8               	clrf	___awdiv@quotient+1
  8904  0DBF  0821               	movf	___awdiv@divisor+1,w
  8905  0DC0  0420               	iorwf	___awdiv@divisor,w
  8906  0DC1  1903               	skipnz
  8907  0DC2  2DEC               	goto	l3652
  8908  0DC3  01A5               	clrf	___awdiv@counter
  8909  0DC4  0AA5               	incf	___awdiv@counter,f
  8910  0DC5                     l3640:	
  8911  0DC5  1BA1               	btfsc	___awdiv@divisor+1,7
  8912  0DC6  2DD1               	goto	l3642
  8913  0DC7  3001               	movlw	1
  8914  0DC8                     u2485:	
  8915  0DC8  35A0               	lslf	___awdiv@divisor,f
  8916  0DC9  0DA1               	rlf	___awdiv@divisor+1,f
  8917  0DCA  0B89               	decfsz	9,f
  8918  0DCB  2DC8               	goto	u2485
  8919  0DCC  3001               	movlw	1
  8920  0DCD  00A4               	movwf	??___awdiv
  8921  0DCE  0824               	movf	??___awdiv,w
  8922  0DCF  07A5               	addwf	___awdiv@counter,f
  8923  0DD0  2DC5               	goto	l3640
  8924  0DD1                     l3642:	
  8925  0DD1  3001               	movlw	1
  8926  0DD2                     u2505:	
  8927  0DD2  35A7               	lslf	___awdiv@quotient,f
  8928  0DD3  0DA8               	rlf	___awdiv@quotient+1,f
  8929  0DD4  0B89               	decfsz	9,f
  8930  0DD5  2DD2               	goto	u2505
  8931  0DD6  0821               	movf	___awdiv@divisor+1,w
  8932  0DD7  0223               	subwf	___awdiv@dividend+1,w
  8933  0DD8  1D03               	skipz
  8934  0DD9  2DDC               	goto	u2515
  8935  0DDA  0820               	movf	___awdiv@divisor,w
  8936  0DDB  0222               	subwf	___awdiv@dividend,w
  8937  0DDC                     u2515:	
  8938  0DDC  1C03               	skipc
  8939  0DDD  2DE3               	goto	l3648
  8940  0DDE  0820               	movf	___awdiv@divisor,w
  8941  0DDF  02A2               	subwf	___awdiv@dividend,f
  8942  0DE0  0821               	movf	___awdiv@divisor+1,w
  8943  0DE1  3BA3               	subwfb	___awdiv@dividend+1,f
  8944  0DE2  1427               	bsf	___awdiv@quotient,0
  8945  0DE3                     l3648:	
  8946  0DE3  3001               	movlw	1
  8947  0DE4                     u2525:	
  8948  0DE4  36A1               	lsrf	___awdiv@divisor+1,f
  8949  0DE5  0CA0               	rrf	___awdiv@divisor,f
  8950  0DE6  0B89               	decfsz	9,f
  8951  0DE7  2DE4               	goto	u2525
  8952  0DE8  3001               	movlw	1
  8953  0DE9  02A5               	subwf	___awdiv@counter,f
  8954  0DEA  1D03               	btfss	3,2
  8955  0DEB  2DD1               	goto	l3642
  8956  0DEC                     l3652:	
  8957  0DEC  0826               	movf	___awdiv@sign,w
  8958  0DED  1903               	btfsc	3,2
  8959  0DEE  2DF4               	goto	l3656
  8960  0DEF  09A7               	comf	___awdiv@quotient,f
  8961  0DF0  09A8               	comf	___awdiv@quotient+1,f
  8962  0DF1  0AA7               	incf	___awdiv@quotient,f
  8963  0DF2  1903               	skipnz
  8964  0DF3  0AA8               	incf	___awdiv@quotient+1,f
  8965  0DF4                     l3656:	
  8966  0DF4  0828               	movf	___awdiv@quotient+1,w
  8967  0DF5  01A1               	clrf	?___awdiv+1
  8968  0DF6  07A1               	addwf	?___awdiv+1,f
  8969  0DF7  0827               	movf	___awdiv@quotient,w
  8970  0DF8  01A0               	clrf	?___awdiv
  8971  0DF9  07A0               	addwf	?___awdiv,f
  8972  0DFA  0008               	return
  8973  0DFB                     __end_of___awdiv:	
  8974                           
  8975                           	psect	text51
  8976  09DA                     __ptext51:	
  8977 ;; *************** function _DimmerLights_Close *****************
  8978 ;; Defined at:
  8979 ;;		line 416 in file "../src/Dimmer_B1.c"
  8980 ;; Parameters:    Size  Location     Type
  8981 ;;		None
  8982 ;; Auto vars:     Size  Location     Type
  8983 ;;		None
  8984 ;; Return value:  Size  Location     Type
  8985 ;;		None               void
  8986 ;; Registers used:
  8987 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8988 ;; Tracked objects:
  8989 ;;		On entry : 0/0
  8990 ;;		On exit  : 0/0
  8991 ;;		Unchanged: 0/0
  8992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8997 ;;Total ram usage:        0 bytes
  8998 ;; Hardware stack levels used:    1
  8999 ;; Hardware stack levels required when called:    6
  9000 ;; This function calls:
  9001 ;;		_getDimmerLights_StatusFlag
  9002 ;;		_setMemory_GO
  9003 ;; This function is called by:
  9004 ;;		_DimmerLights_Main
  9005 ;; This function uses a non-reentrant model
  9006 ;;
  9007                           
  9008                           
  9009                           ;psect for function _DimmerLights_Close
  9010  09DA                     _DimmerLights_Close:	
  9011                           
  9012                           ;Dimmer_B1.c: 417: if (Dimmer->Detect) {
  9013                           
  9014                           ;incstack = 0
  9015                           ; Regs used in _DimmerLights_Close: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9016  09DA  0020               	movlb	0	; select bank0
  9017  09DB  0859               	movf	_Dimmer,w
  9018  09DC  0086               	movwf	6
  9019  09DD  0187               	clrf	7
  9020  09DE  1C01               	btfss	1,0
  9021  09DF  0008               	return
  9022                           
  9023                           ;Dimmer_B1.c: 418: Dimmer->Detect = 0;
  9024  09E0  0859               	movf	_Dimmer,w
  9025  09E1  0086               	movwf	6
  9026  09E2  0187               	clrf	7
  9027  09E3  1001               	bcf	1,0
  9028                           
  9029                           ;Dimmer_B1.c: 419: if (!getDimmerLights_StatusFlag()) {
  9030  09E4  3189  21B4  3189   	fcall	_getDimmerLights_StatusFlag
  9031  09E7  3800               	iorlw	0
  9032  09E8  1D03               	skipz
  9033  09E9  0008               	return
  9034                           
  9035                           ;Dimmer_B1.c: 421: ;;
  9036                           ;Dimmer_B1.c: 422: setMemory_GO(1);
  9037  09EA  3001               	movlw	1
  9038  09EB  318A  22B5         	fcall	_setMemory_GO
  9039  09ED  0008               	return
  9040  09EE                     __end_of_DimmerLights_Close:	
  9041                           
  9042                           	psect	text52
  9043  0AB5                     __ptext52:	
  9044 ;; *************** function _setMemory_GO *****************
  9045 ;; Defined at:
  9046 ;;		line 892 in file "../src/MCU_B1.c"
  9047 ;; Parameters:    Size  Location     Type
  9048 ;;  command         1    wreg     unsigned char 
  9049 ;; Auto vars:     Size  Location     Type
  9050 ;;  command         1    2[BANK0 ] unsigned char 
  9051 ;; Return value:  Size  Location     Type
  9052 ;;		None               void
  9053 ;; Registers used:
  9054 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9055 ;; Tracked objects:
  9056 ;;		On entry : 0/0
  9057 ;;		On exit  : 0/0
  9058 ;;		Unchanged: 0/0
  9059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9061 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9062 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9063 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9064 ;;Total ram usage:        3 bytes
  9065 ;; Hardware stack levels used:    1
  9066 ;; Hardware stack levels required when called:    5
  9067 ;; This function calls:
  9068 ;;		Nothing
  9069 ;; This function is called by:
  9070 ;;		_DimmerLights_Close
  9071 ;;		_setDimmerLights
  9072 ;; This function uses a non-reentrant model
  9073 ;;
  9074                           
  9075                           
  9076                           ;psect for function _setMemory_GO
  9077  0AB5                     _setMemory_GO:	
  9078                           
  9079                           ;incstack = 0
  9080                           ; Regs used in _setMemory_GO: [wreg+fsr1l+fsr1h+status,2+status,0]
  9081                           ;setMemory_GO@command stored from wreg
  9082  0AB5  0020               	movlb	0	; select bank0
  9083  0AB6  00A2               	movwf	setMemory_GO@command
  9084                           
  9085                           ;MCU_B1.c: 893: Memory->GO = command;
  9086  0AB7  086C               	movf	_Memory,w
  9087  0AB8  3E24               	addlw	36
  9088  0AB9  0086               	movwf	6
  9089  0ABA  3001               	movlw	1	; select bank2/3
  9090  0ABB  0087               	movwf	7
  9091  0ABC  0822               	movf	setMemory_GO@command,w
  9092  0ABD  1081               	bcf	1,1
  9093  0ABE  1D03               	skipz
  9094  0ABF  1481               	bsf	1,1
  9095                           
  9096                           ;MCU_B1.c: 894: if (command == 0) {
  9097  0AC0  08A2               	movf	setMemory_GO@command,f
  9098  0AC1  1D03               	skipz
  9099  0AC2  0008               	return
  9100                           
  9101                           ;MCU_B1.c: 895: Memory->Time = command;
  9102  0AC3  0822               	movf	setMemory_GO@command,w
  9103  0AC4  00A0               	movwf	??_setMemory_GO
  9104  0AC5  01A1               	clrf	??_setMemory_GO+1
  9105  0AC6  086C               	movf	_Memory,w
  9106  0AC7  3E22               	addlw	34
  9107  0AC8  0086               	movwf	6
  9108  0AC9  3001               	movlw	1	; select bank2/3
  9109  0ACA  0087               	movwf	7
  9110  0ACB  0820               	movf	??_setMemory_GO,w
  9111  0ACC  3FC0               	movwi [0]fsr1
  9112  0ACD  0821               	movf	??_setMemory_GO+1,w
  9113  0ACE  3FC1               	movwi [1]fsr1
  9114  0ACF  0008               	return
  9115  0AD0                     __end_of_setMemory_GO:	
  9116                           
  9117                           	psect	text53
  9118  09B4                     __ptext53:	
  9119 ;; *************** function _getDimmerLights_StatusFlag *****************
  9120 ;; Defined at:
  9121 ;;		line 498 in file "../src/Dimmer_B1.c"
  9122 ;; Parameters:    Size  Location     Type
  9123 ;;		None
  9124 ;; Auto vars:     Size  Location     Type
  9125 ;;  Status          1    1[BANK0 ] unsigned char 
  9126 ;; Return value:  Size  Location     Type
  9127 ;;                  1    wreg      unsigned char 
  9128 ;; Registers used:
  9129 ;;		wreg, status,2
  9130 ;; Tracked objects:
  9131 ;;		On entry : 0/0
  9132 ;;		On exit  : 0/0
  9133 ;;		Unchanged: 0/0
  9134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9136 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9137 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9138 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9139 ;;Total ram usage:        3 bytes
  9140 ;; Hardware stack levels used:    1
  9141 ;; Hardware stack levels required when called:    5
  9142 ;; This function calls:
  9143 ;;		Nothing
  9144 ;; This function is called by:
  9145 ;;		_DimmerLights_Close
  9146 ;;		_DimmerLights_Exceptions
  9147 ;; This function uses a non-reentrant model
  9148 ;;
  9149                           
  9150                           
  9151                           ;psect for function _getDimmerLights_StatusFlag
  9152  09B4                     _getDimmerLights_StatusFlag:	
  9153                           
  9154                           ;Dimmer_B1.c: 499: char Status = 0;
  9155                           
  9156                           ;incstack = 0
  9157                           ; Regs used in _getDimmerLights_StatusFlag: [wreg+status,2]
  9158  09B4  0020               	movlb	0	; select bank0
  9159  09B5  01A1               	clrf	getDimmerLights_StatusFlag@Status
  9160                           
  9161                           ;Dimmer_B1.c: 502: Status = (DimmerLights1.StatusFlag == 1 || DimmerLights2.StatusFlag =
      +                          = 1 || DimmerLights3.StatusFlag == 1) ? 1 : 0;
  9162  09B6  01A2               	clrf	_getDimmerLights_StatusFlag$1562
  9163  09B7  0AA2               	incf	_getDimmerLights_StatusFlag$1562,f
  9164  09B8  0021               	movlb	1	; select bank1
  9165  09B9  1F20               	btfss	_DimmerLights1^(0+128),6
  9166  09BA  1B2F               	btfsc	_DimmerLights2^(0+128),6
  9167  09BB  29C0               	goto	l3840
  9168  09BC  1B3E               	btfsc	_DimmerLights3^(0+128),6
  9169  09BD  29C0               	goto	l3840
  9170  09BE  0020               	movlb	0	; select bank0
  9171  09BF  01A2               	clrf	_getDimmerLights_StatusFlag$1562
  9172  09C0                     l3840:	
  9173  09C0  0020               	movlb	0	; select bank0
  9174  09C1  0822               	movf	_getDimmerLights_StatusFlag$1562,w
  9175  09C2  00A0               	movwf	??_getDimmerLights_StatusFlag
  9176  09C3  0820               	movf	??_getDimmerLights_StatusFlag,w
  9177  09C4  00A1               	movwf	getDimmerLights_StatusFlag@Status
  9178                           
  9179                           ;Dimmer_B1.c: 513: return Status;
  9180  09C5  0821               	movf	getDimmerLights_StatusFlag@Status,w
  9181  09C6  0008               	return
  9182  09C7                     __end_of_getDimmerLights_StatusFlag:	
  9183                           
  9184                           	psect	text54
  9185  0AED                     __ptext54:	
  9186 ;; *************** function _DimmerLights_Initialization *****************
  9187 ;; Defined at:
  9188 ;;		line 354 in file "../src/Dimmer_B1.c"
  9189 ;; Parameters:    Size  Location     Type
  9190 ;;		None
  9191 ;; Auto vars:     Size  Location     Type
  9192 ;;		None
  9193 ;; Return value:  Size  Location     Type
  9194 ;;		None               void
  9195 ;; Registers used:
  9196 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9197 ;; Tracked objects:
  9198 ;;		On entry : 0/0
  9199 ;;		On exit  : 0/0
  9200 ;;		Unchanged: 0/0
  9201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9204 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9205 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9206 ;;Total ram usage:        1 bytes
  9207 ;; Hardware stack levels used:    1
  9208 ;; Hardware stack levels required when called:    7
  9209 ;; This function calls:
  9210 ;;		_Dimmer_Initialization
  9211 ;;		_setDimmerLights_Initialization
  9212 ;; This function is called by:
  9213 ;;		_main
  9214 ;; This function uses a non-reentrant model
  9215 ;;
  9216                           
  9217                           
  9218                           ;psect for function _DimmerLights_Initialization
  9219  0AED                     _DimmerLights_Initialization:	
  9220                           
  9221                           ;Dimmer_B1.c: 357: DimmerLights11 = &DimmerLights1;
  9222                           
  9223                           ;incstack = 0
  9224                           ; Regs used in _DimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  9225  0AED  30A0               	movlw	_DimmerLights1& (0+255)
  9226  0AEE  0020               	movlb	0	; select bank0
  9227  0AEF  00A4               	movwf	??_DimmerLights_Initialization
  9228  0AF0  0824               	movf	??_DimmerLights_Initialization,w
  9229  0AF1  00DB               	movwf	_DimmerLights11
  9230                           
  9231                           ;Dimmer_B1.c: 358: setDimmerLights_Initialization(1);
  9232  0AF2  3001               	movlw	1
  9233  0AF3  3187  27D8  318A   	fcall	_setDimmerLights_Initialization
  9234                           
  9235                           ;Dimmer_B1.c: 362: DimmerLights22 = &DimmerLights2;
  9236  0AF6  30AF               	movlw	_DimmerLights2& (0+255)
  9237  0AF7  0020               	movlb	0	; select bank0
  9238  0AF8  00A4               	movwf	??_DimmerLights_Initialization
  9239  0AF9  0824               	movf	??_DimmerLights_Initialization,w
  9240  0AFA  00DC               	movwf	_DimmerLights22
  9241                           
  9242                           ;Dimmer_B1.c: 363: setDimmerLights_Initialization(2);
  9243  0AFB  3002               	movlw	2
  9244  0AFC  3187  27D8  318A   	fcall	_setDimmerLights_Initialization
  9245                           
  9246                           ;Dimmer_B1.c: 367: DimmerLights33 = &DimmerLights3;
  9247  0AFF  30BE               	movlw	_DimmerLights3& (0+255)
  9248  0B00  0020               	movlb	0	; select bank0
  9249  0B01  00A4               	movwf	??_DimmerLights_Initialization
  9250  0B02  0824               	movf	??_DimmerLights_Initialization,w
  9251  0B03  00DD               	movwf	_DimmerLights33
  9252                           
  9253                           ;Dimmer_B1.c: 368: setDimmerLights_Initialization(3);
  9254  0B04  3003               	movlw	3
  9255  0B05  3187  27D8  318A   	fcall	_setDimmerLights_Initialization
  9256                           
  9257                           ;Dimmer_B1.c: 372: Dimmer_Initialization();
  9258  0B08  3188  2083         	fcall	_Dimmer_Initialization
  9259  0B0A  0008               	return
  9260  0B0B                     __end_of_DimmerLights_Initialization:	
  9261                           
  9262                           	psect	text55
  9263  07D8                     __ptext55:	
  9264 ;; *************** function _setDimmerLights_Initialization *****************
  9265 ;; Defined at:
  9266 ;;		line 377 in file "../src/Dimmer_B1.c"
  9267 ;; Parameters:    Size  Location     Type
  9268 ;;  lights          1    wreg     unsigned char 
  9269 ;; Auto vars:     Size  Location     Type
  9270 ;;  lights          1    3[BANK0 ] unsigned char 
  9271 ;; Return value:  Size  Location     Type
  9272 ;;		None               void
  9273 ;; Registers used:
  9274 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9275 ;; Tracked objects:
  9276 ;;		On entry : 0/0
  9277 ;;		On exit  : 0/0
  9278 ;;		Unchanged: 0/0
  9279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9281 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9282 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9283 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9284 ;;Total ram usage:        2 bytes
  9285 ;; Hardware stack levels used:    1
  9286 ;; Hardware stack levels required when called:    6
  9287 ;; This function calls:
  9288 ;;		_DimmerLightsPointSelect
  9289 ;; This function is called by:
  9290 ;;		_DimmerLights_Initialization
  9291 ;; This function uses a non-reentrant model
  9292 ;;
  9293                           
  9294                           
  9295                           ;psect for function _setDimmerLights_Initialization
  9296  07D8                     _setDimmerLights_Initialization:	
  9297                           
  9298                           ;incstack = 0
  9299                           ; Regs used in _setDimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
  9300                           ;setDimmerLights_Initialization@lights stored from wreg
  9301  07D8  0020               	movlb	0	; select bank0
  9302  07D9  00A3               	movwf	setDimmerLights_Initialization@lights
  9303                           
  9304                           ;Dimmer_B1.c: 379: DimmerLightsPointSelect(lights);
  9305  07DA  0823               	movf	setDimmerLights_Initialization@lights,w
  9306  07DB  318A  229A         	fcall	_DimmerLightsPointSelect
  9307                           
  9308                           ;Dimmer_B1.c: 380: DimmerLights->Clear = 1;
  9309  07DD  0020               	movlb	0	; select bank0
  9310  07DE  085A               	movf	_DimmerLights,w
  9311  07DF  3E09               	addlw	9
  9312  07E0  0086               	movwf	6
  9313  07E1  0187               	clrf	7
  9314  07E2  1501               	bsf	1,2
  9315                           
  9316                           ;Dimmer_B1.c: 386: DimmerLights->MaxmumValue = ((char)((100-95)*0.8));
  9317  07E3  3004               	movlw	4
  9318  07E4  00A2               	movwf	??_setDimmerLights_Initialization
  9319  07E5  085A               	movf	_DimmerLights,w
  9320  07E6  3E05               	addlw	5
  9321  07E7  0086               	movwf	6
  9322  07E8  0187               	clrf	7
  9323  07E9  0822               	movf	??_setDimmerLights_Initialization,w
  9324  07EA  0081               	movwf	1
  9325                           
  9326                           ;Dimmer_B1.c: 387: DimmerLights->MinimumValue = ((char)((100-20)*0.8));
  9327  07EB  3040               	movlw	64
  9328  07EC  00A2               	movwf	??_setDimmerLights_Initialization
  9329  07ED  085A               	movf	_DimmerLights,w
  9330  07EE  3E06               	addlw	6
  9331  07EF  0086               	movwf	6
  9332  07F0  0187               	clrf	7
  9333  07F1  0822               	movf	??_setDimmerLights_Initialization,w
  9334  07F2  0081               	movwf	1
  9335                           
  9336                           ;Dimmer_B1.c: 397: DimmerLights->DimmingValue = DimmerLights->MinimumValue;
  9337  07F3  085A               	movf	_DimmerLights,w
  9338  07F4  3E06               	addlw	6
  9339  07F5  0086               	movwf	6
  9340  07F6  0187               	clrf	7
  9341  07F7  0801               	movf	1,w
  9342  07F8  00A2               	movwf	??_setDimmerLights_Initialization
  9343  07F9  085A               	movf	_DimmerLights,w
  9344  07FA  3E04               	addlw	4
  9345  07FB  0086               	movwf	6
  9346  07FC  0187               	clrf	7
  9347  07FD  0822               	movf	??_setDimmerLights_Initialization,w
  9348  07FE  0081               	movwf	1
  9349  07FF  0008               	return
  9350  0800                     __end_of_setDimmerLights_Initialization:	
  9351                           
  9352                           	psect	text56
  9353  0A9A                     __ptext56:	
  9354 ;; *************** function _DimmerLightsPointSelect *****************
  9355 ;; Defined at:
  9356 ;;		line 323 in file "../src/Dimmer_B1.c"
  9357 ;; Parameters:    Size  Location     Type
  9358 ;;  lights          1    wreg     unsigned char 
  9359 ;; Auto vars:     Size  Location     Type
  9360 ;;  lights          1    1[BANK0 ] unsigned char 
  9361 ;; Return value:  Size  Location     Type
  9362 ;;		None               void
  9363 ;; Registers used:
  9364 ;;		wreg
  9365 ;; Tracked objects:
  9366 ;;		On entry : 0/0
  9367 ;;		On exit  : 0/0
  9368 ;;		Unchanged: 0/0
  9369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9371 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9372 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9373 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9374 ;;Total ram usage:        2 bytes
  9375 ;; Hardware stack levels used:    1
  9376 ;; Hardware stack levels required when called:    5
  9377 ;; This function calls:
  9378 ;;		Nothing
  9379 ;; This function is called by:
  9380 ;;		_setDimmerLights_Initialization
  9381 ;;		_setDimmerLights_Main
  9382 ;;		_setDimmerLights
  9383 ;;		_setDimmerLights_Adj
  9384 ;;		_setDimmerLights_Switch
  9385 ;;		_setDimmerLights_AdjGo
  9386 ;;		_setDimmerLights_Trigger
  9387 ;;		_setDimmerLights_TriggerAdj
  9388 ;;		_setDimmerLights_ERROR
  9389 ;;		_setDimmerLights_TriggerERROR
  9390 ;;		_setDimmerLights_GO
  9391 ;;		_setDimmerLights_AdjRF
  9392 ;;		_setDimmerLights_MaxmumValue
  9393 ;;		_setDimmerLights_Clear
  9394 ;; This function uses a non-reentrant model
  9395 ;;
  9396                           
  9397                           
  9398                           ;psect for function _DimmerLightsPointSelect
  9399  0A9A                     _DimmerLightsPointSelect:	
  9400                           
  9401                           ;incstack = 0
  9402                           ; Regs used in _DimmerLightsPointSelect: [wreg]
  9403                           ;DimmerLightsPointSelect@lights stored from wreg
  9404  0A9A  0020               	movlb	0	; select bank0
  9405  0A9B  00A1               	movwf	DimmerLightsPointSelect@lights
  9406                           
  9407                           ;Dimmer_B1.c: 325: if (lights == 1) {
  9408  0A9C  0821               	movf	DimmerLightsPointSelect@lights,w
  9409  0A9D  3A01               	xorlw	1
  9410  0A9E  1D03               	skipz
  9411  0A9F  2AA4               	goto	l455
  9412                           
  9413                           ;Dimmer_B1.c: 326: DimmerLights = &DimmerLights1;
  9414  0AA0  30A0               	movlw	_DimmerLights1& (0+255)
  9415  0AA1  00A0               	movwf	??_DimmerLightsPointSelect
  9416  0AA2  0820               	movf	??_DimmerLightsPointSelect,w
  9417  0AA3  00DA               	movwf	_DimmerLights
  9418  0AA4                     l455:	
  9419                           
  9420                           ;Dimmer_B1.c: 327: }
  9421                           ;Dimmer_B1.c: 334: if (lights == 2) {
  9422  0AA4  0821               	movf	DimmerLightsPointSelect@lights,w
  9423  0AA5  3A02               	xorlw	2
  9424  0AA6  1D03               	skipz
  9425  0AA7  2AAC               	goto	l456
  9426                           
  9427                           ;Dimmer_B1.c: 335: DimmerLights = &DimmerLights2;
  9428  0AA8  30AF               	movlw	_DimmerLights2& (0+255)
  9429  0AA9  00A0               	movwf	??_DimmerLightsPointSelect
  9430  0AAA  0820               	movf	??_DimmerLightsPointSelect,w
  9431  0AAB  00DA               	movwf	_DimmerLights
  9432  0AAC                     l456:	
  9433                           
  9434                           ;Dimmer_B1.c: 336: }
  9435                           ;Dimmer_B1.c: 343: if (lights == 3) {
  9436  0AAC  0821               	movf	DimmerLightsPointSelect@lights,w
  9437  0AAD  3A03               	xorlw	3
  9438  0AAE  1D03               	skipz
  9439  0AAF  0008               	return
  9440                           
  9441                           ;Dimmer_B1.c: 345: DimmerLights = &DimmerLights3;
  9442  0AB0  30BE               	movlw	_DimmerLights3& (0+255)
  9443  0AB1  00A0               	movwf	??_DimmerLightsPointSelect
  9444  0AB2  0820               	movf	??_DimmerLightsPointSelect,w
  9445  0AB3  00DA               	movwf	_DimmerLights
  9446  0AB4  0008               	return
  9447  0AB5                     __end_of_DimmerLightsPointSelect:	
  9448                           
  9449                           	psect	text57
  9450  0883                     __ptext57:	
  9451 ;; *************** function _Dimmer_Initialization *****************
  9452 ;; Defined at:
  9453 ;;		line 812 in file "../src/Dimmer_B1.c"
  9454 ;; Parameters:    Size  Location     Type
  9455 ;;		None
  9456 ;; Auto vars:     Size  Location     Type
  9457 ;;		None
  9458 ;; Return value:  Size  Location     Type
  9459 ;;		None               void
  9460 ;; Registers used:
  9461 ;;		wreg
  9462 ;; Tracked objects:
  9463 ;;		On entry : 0/0
  9464 ;;		On exit  : 0/0
  9465 ;;		Unchanged: 0/0
  9466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9469 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9470 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9471 ;;Total ram usage:        1 bytes
  9472 ;; Hardware stack levels used:    1
  9473 ;; Hardware stack levels required when called:    5
  9474 ;; This function calls:
  9475 ;;		Nothing
  9476 ;; This function is called by:
  9477 ;;		_DimmerLights_Initialization
  9478 ;; This function uses a non-reentrant model
  9479 ;;
  9480                           
  9481                           
  9482                           ;psect for function _Dimmer_Initialization
  9483  0883                     _Dimmer_Initialization:	
  9484                           
  9485                           ;Dimmer_B1.c: 814: Dimmer = &Dimmer1;
  9486                           
  9487                           ;incstack = 0
  9488                           ; Regs used in _Dimmer_Initialization: [wreg]
  9489  0883  3067               	movlw	_Dimmer1& (0+255)
  9490  0884  0020               	movlb	0	; select bank0
  9491  0885  00A0               	movwf	??_Dimmer_Initialization
  9492  0886  0820               	movf	??_Dimmer_Initialization,w
  9493  0887  00D9               	movwf	_Dimmer
  9494  0888  0008               	return
  9495  0889                     __end_of_Dimmer_Initialization:	
  9496                           
  9497                           	psect	text58
  9498  04C6                     __ptext58:	
  9499 ;; *************** function _Buzzer_Main *****************
  9500 ;; Defined at:
  9501 ;;		line 53 in file "../src/Buzzer_B1.c"
  9502 ;; Parameters:    Size  Location     Type
  9503 ;;		None
  9504 ;; Auto vars:     Size  Location     Type
  9505 ;;		None
  9506 ;; Return value:  Size  Location     Type
  9507 ;;		None               void
  9508 ;; Registers used:
  9509 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  9510 ;; Tracked objects:
  9511 ;;		On entry : 0/0
  9512 ;;		On exit  : 0/0
  9513 ;;		Unchanged: 0/0
  9514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9517 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9518 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9519 ;;Total ram usage:        4 bytes
  9520 ;; Hardware stack levels used:    1
  9521 ;; Hardware stack levels required when called:    5
  9522 ;; This function calls:
  9523 ;;		Nothing
  9524 ;; This function is called by:
  9525 ;;		_main
  9526 ;; This function uses a non-reentrant model
  9527 ;;
  9528                           
  9529                           
  9530                           ;psect for function _Buzzer_Main
  9531  04C6                     _Buzzer_Main:	
  9532                           
  9533                           ;Buzzer_B1.c: 54: Buz->Switch = (RB3) ? 1 : 0;
  9534                           
  9535                           ;incstack = 0
  9536                           ; Regs used in _Buzzer_Main: [wreg-fsr1h+status,2+status,0]
  9537  04C6  0020               	movlb	0	; select bank0
  9538  04C7  0858               	movf	_Buz,w
  9539  04C8  0086               	movwf	6
  9540  04C9  3001               	movlw	1	; select bank2/3
  9541  04CA  0087               	movwf	7
  9542  04CB  1281               	bcf	1,5
  9543  04CC  198D               	btfsc	13,3	;volatile
  9544  04CD  1681               	bsf	1,5
  9545                           
  9546                           ;Buzzer_B1.c: 56: if (Buz->Counter >= Buz->TimeValue) {
  9547  04CE  0020               	movlb	0	; select bank0
  9548  04CF  0858               	movf	_Buz,w
  9549  04D0  3E06               	addlw	6
  9550  04D1  0086               	movwf	6
  9551  04D2  3001               	movlw	1	; select bank2/3
  9552  04D3  0087               	movwf	7
  9553  04D4  3F40               	moviw [0]fsr1
  9554  04D5  00A0               	movwf	??_Buzzer_Main
  9555  04D6  3F41               	moviw [1]fsr1
  9556  04D7  00A1               	movwf	??_Buzzer_Main+1
  9557  04D8  0A58               	incf	_Buz,w
  9558  04D9  0086               	movwf	6
  9559  04DA  3001               	movlw	1	; select bank2/3
  9560  04DB  0087               	movwf	7
  9561  04DC  3F40               	moviw [0]fsr1
  9562  04DD  00A2               	movwf	??_Buzzer_Main+2
  9563  04DE  3F41               	moviw [1]fsr1
  9564  04DF  00A3               	movwf	??_Buzzer_Main+3
  9565  04E0  0821               	movf	??_Buzzer_Main+1,w
  9566  04E1  0223               	subwf	??_Buzzer_Main+3,w
  9567  04E2  1D03               	skipz
  9568  04E3  2CE6               	goto	u4315
  9569  04E4  0820               	movf	??_Buzzer_Main,w
  9570  04E5  0222               	subwf	??_Buzzer_Main+2,w
  9571  04E6                     u4315:	
  9572  04E6  1C03               	skipc
  9573  04E7  0008               	return
  9574                           
  9575                           ;Buzzer_B1.c: 57: Buz->Counter = 0;
  9576  04E8  0A58               	incf	_Buz,w
  9577  04E9  0086               	movwf	6
  9578  04EA  3001               	movlw	1	; select bank2/3
  9579  04EB  0087               	movwf	7
  9580  04EC  3000               	movlw	0
  9581  04ED  3FC0               	movwi [0]fsr1
  9582  04EE  3FC1               	movwi [1]fsr1
  9583                           
  9584                           ;Buzzer_B1.c: 58: if (!Buz->Switch) {
  9585  04EF  0858               	movf	_Buz,w
  9586  04F0  0086               	movwf	6
  9587  04F1  3001               	movlw	1	; select bank2/3
  9588  04F2  0087               	movwf	7
  9589  04F3  1A81               	btfsc	1,5
  9590  04F4  2D5A               	goto	l4632
  9591                           
  9592                           ;Buzzer_B1.c: 59: if (Buz->Count == 0) {
  9593  04F5  0858               	movf	_Buz,w
  9594  04F6  3E03               	addlw	3
  9595  04F7  0086               	movwf	6
  9596  04F8  3001               	movlw	1	; select bank2/3
  9597  04F9  0087               	movwf	7
  9598  04FA  0881               	movf	1,f
  9599  04FB  1D03               	skipz
  9600  04FC  2D53               	goto	l4628
  9601                           
  9602                           ;Buzzer_B1.c: 60: if (Buz->BufferStatus1) {
  9603  04FD  0858               	movf	_Buz,w
  9604  04FE  0086               	movwf	6
  9605  04FF  3001               	movlw	1	; select bank2/3
  9606  0500  0087               	movwf	7
  9607  0501  1D81               	btfss	1,3
  9608  0502  2D25               	goto	l4620
  9609                           
  9610                           ;Buzzer_B1.c: 61: Buz->BufferStatus1 = 0;
  9611  0503  0858               	movf	_Buz,w
  9612  0504  0086               	movwf	6
  9613  0505  3001               	movlw	1	; select bank2/3
  9614  0506  0087               	movwf	7
  9615  0507  1181               	bcf	1,3
  9616                           
  9617                           ;Buzzer_B1.c: 62: Buz->Count = Buz->CountBuffer1;
  9618  0508  0858               	movf	_Buz,w
  9619  0509  3E04               	addlw	4
  9620  050A  0086               	movwf	6
  9621  050B  3001               	movlw	1	; select bank2/3
  9622  050C  0087               	movwf	7
  9623  050D  0801               	movf	1,w
  9624  050E  00A0               	movwf	??_Buzzer_Main
  9625  050F  0858               	movf	_Buz,w
  9626  0510  3E03               	addlw	3
  9627  0511  0086               	movwf	6
  9628  0512  3001               	movlw	1	; select bank2/3
  9629  0513  0087               	movwf	7
  9630  0514  0820               	movf	??_Buzzer_Main,w
  9631  0515  0081               	movwf	1
  9632                           
  9633                           ;Buzzer_B1.c: 63: Buz->TimeValue = Buz->TimeValueBuffer1;
  9634  0516  0858               	movf	_Buz,w
  9635  0517  3E08               	addlw	8
  9636  0518  0086               	movwf	6
  9637  0519  3001               	movlw	1	; select bank2/3
  9638  051A  0087               	movwf	7
  9639  051B  0858               	movf	_Buz,w
  9640  051C  3E06               	addlw	6
  9641  051D  0084               	movwf	4
  9642  051E  3001               	movlw	1	; select bank2/3
  9643  051F  0085               	movwf	5
  9644  0520  3F40               	moviw [0]fsr1
  9645  0521  3F80               	movwi [0]fsr0
  9646  0522  3F41               	moviw [1]fsr1
  9647  0523  3F81               	movwi [1]fsr0
  9648                           
  9649                           ;Buzzer_B1.c: 64: } else if (Buz->BufferStatus2) {
  9650  0524  0008               	return
  9651  0525                     l4620:	
  9652  0525  0858               	movf	_Buz,w
  9653  0526  0086               	movwf	6
  9654  0527  3001               	movlw	1	; select bank2/3
  9655  0528  0087               	movwf	7
  9656  0529  1E01               	btfss	1,4
  9657  052A  2D4D               	goto	l4626
  9658                           
  9659                           ;Buzzer_B1.c: 65: Buz->BufferStatus2 = 0;
  9660  052B  0858               	movf	_Buz,w
  9661  052C  0086               	movwf	6
  9662  052D  3001               	movlw	1	; select bank2/3
  9663  052E  0087               	movwf	7
  9664  052F  1201               	bcf	1,4
  9665                           
  9666                           ;Buzzer_B1.c: 66: Buz->Count = Buz->CountBuffer2;
  9667  0530  0858               	movf	_Buz,w
  9668  0531  3E05               	addlw	5
  9669  0532  0086               	movwf	6
  9670  0533  3001               	movlw	1	; select bank2/3
  9671  0534  0087               	movwf	7
  9672  0535  0801               	movf	1,w
  9673  0536  00A0               	movwf	??_Buzzer_Main
  9674  0537  0858               	movf	_Buz,w
  9675  0538  3E03               	addlw	3
  9676  0539  0086               	movwf	6
  9677  053A  3001               	movlw	1	; select bank2/3
  9678  053B  0087               	movwf	7
  9679  053C  0820               	movf	??_Buzzer_Main,w
  9680  053D  0081               	movwf	1
  9681                           
  9682                           ;Buzzer_B1.c: 67: Buz->TimeValue = Buz->TimeValueBuffer2;
  9683  053E  0858               	movf	_Buz,w
  9684  053F  3E0A               	addlw	10
  9685  0540  0086               	movwf	6
  9686  0541  3001               	movlw	1	; select bank2/3
  9687  0542  0087               	movwf	7
  9688  0543  0858               	movf	_Buz,w
  9689  0544  3E06               	addlw	6
  9690  0545  0084               	movwf	4
  9691  0546  3001               	movlw	1	; select bank2/3
  9692  0547  0085               	movwf	5
  9693  0548  3F40               	moviw [0]fsr1
  9694  0549  3F80               	movwi [0]fsr0
  9695  054A  3F41               	moviw [1]fsr1
  9696  054B  3F81               	movwi [1]fsr0
  9697                           
  9698                           ;Buzzer_B1.c: 68: } else {
  9699  054C  0008               	return
  9700  054D                     l4626:	
  9701                           
  9702                           ;Buzzer_B1.c: 69: Buz->GO = 0;
  9703  054D  0858               	movf	_Buz,w
  9704  054E  0086               	movwf	6
  9705  054F  3001               	movlw	1	; select bank2/3
  9706  0550  0087               	movwf	7
  9707  0551  1081               	bcf	1,1
  9708                           
  9709                           ;Buzzer_B1.c: 70: }
  9710                           ;Buzzer_B1.c: 71: } else {
  9711  0552  0008               	return
  9712  0553                     l4628:	
  9713                           
  9714                           ;Buzzer_B1.c: 72: Buz->Switch = 1;
  9715  0553  0858               	movf	_Buz,w
  9716  0554  0086               	movwf	6
  9717  0555  3001               	movlw	1	; select bank2/3
  9718  0556  0087               	movwf	7
  9719  0557  1681               	bsf	1,5
  9720                           
  9721                           ;Buzzer_B1.c: 74: RB3 = 1;
  9722  0558  158D               	bsf	13,3	;volatile
  9723                           
  9724                           ;Buzzer_B1.c: 75: }
  9725                           ;Buzzer_B1.c: 76: } else {
  9726  0559  0008               	return
  9727  055A                     l4632:	
  9728                           
  9729                           ;Buzzer_B1.c: 77: Buz->Switch = 0;
  9730  055A  0858               	movf	_Buz,w
  9731  055B  0086               	movwf	6
  9732  055C  3001               	movlw	1	; select bank2/3
  9733  055D  0087               	movwf	7
  9734  055E  1281               	bcf	1,5
  9735                           
  9736                           ;Buzzer_B1.c: 79: RB3 = 0;
  9737  055F  118D               	bcf	13,3	;volatile
  9738                           
  9739                           ;Buzzer_B1.c: 81: Buz->Count--;
  9740  0560  0858               	movf	_Buz,w
  9741  0561  3E03               	addlw	3
  9742  0562  0086               	movwf	6
  9743  0563  3001               	movlw	1	; select bank2/3
  9744  0564  0087               	movwf	7
  9745  0565  3001               	movlw	1
  9746  0566  0281               	subwf	1,f
  9747  0567  0008               	return
  9748  0568                     __end_of_Buzzer_Main:	
  9749                           
  9750                           	psect	text59
  9751  08BA                     __ptext59:	
  9752 ;; *************** function _Buzzer_Initialization *****************
  9753 ;; Defined at:
  9754 ;;		line 11 in file "../src/Buzzer_B1.c"
  9755 ;; Parameters:    Size  Location     Type
  9756 ;;		None
  9757 ;; Auto vars:     Size  Location     Type
  9758 ;;		None
  9759 ;; Return value:  Size  Location     Type
  9760 ;;		None               void
  9761 ;; Registers used:
  9762 ;;		wreg, fsr1l, fsr1h
  9763 ;; Tracked objects:
  9764 ;;		On entry : 0/0
  9765 ;;		On exit  : 0/0
  9766 ;;		Unchanged: 0/0
  9767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9770 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9771 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9772 ;;Total ram usage:        1 bytes
  9773 ;; Hardware stack levels used:    1
  9774 ;; Hardware stack levels required when called:    5
  9775 ;; This function calls:
  9776 ;;		Nothing
  9777 ;; This function is called by:
  9778 ;;		_main
  9779 ;; This function uses a non-reentrant model
  9780 ;;
  9781                           
  9782                           
  9783                           ;psect for function _Buzzer_Initialization
  9784  08BA                     _Buzzer_Initialization:	
  9785                           
  9786                           ;Buzzer_B1.c: 12: Buz = &Buz1;
  9787                           
  9788                           ;incstack = 0
  9789                           ; Regs used in _Buzzer_Initialization: [wregfsr1]
  9790  08BA  3030               	movlw	_Buz1& (0+255)
  9791  08BB  0020               	movlb	0	; select bank0
  9792  08BC  00A0               	movwf	??_Buzzer_Initialization
  9793  08BD  0820               	movf	??_Buzzer_Initialization,w
  9794  08BE  00D8               	movwf	_Buz
  9795                           
  9796                           ;Buzzer_B1.c: 13: Buz->Enable = 1;
  9797  08BF  0858               	movf	_Buz,w
  9798  08C0  0086               	movwf	6
  9799  08C1  3001               	movlw	1	; select bank2/3
  9800  08C2  0087               	movwf	7
  9801  08C3  1401               	bsf	1,0
  9802  08C4  0008               	return
  9803  08C5                     __end_of_Buzzer_Initialization:	
  9804                           
  9805                           	psect	intentry
  9806  0004                     __pintentry:	
  9807 ;; *************** function _ISR *****************
  9808 ;; Defined at:
  9809 ;;		line 109 in file "../src/MCU_B1.c"
  9810 ;; Parameters:    Size  Location     Type
  9811 ;;		None
  9812 ;; Auto vars:     Size  Location     Type
  9813 ;;		None
  9814 ;; Return value:  Size  Location     Type
  9815 ;;		None               void
  9816 ;; Registers used:
  9817 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9818 ;; Tracked objects:
  9819 ;;		On entry : 0/0
  9820 ;;		On exit  : 0/0
  9821 ;;		Unchanged: 0/0
  9822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9825 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9826 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9827 ;;Total ram usage:        1 bytes
  9828 ;; Hardware stack levels used:    1
  9829 ;; Hardware stack levels required when called:    4
  9830 ;; This function calls:
  9831 ;;		_INT_ISR
  9832 ;;		_IOC_ISR
  9833 ;;		_TMR0_ISR
  9834 ;; This function is called by:
  9835 ;;		Interrupt level 1
  9836 ;; This function uses a non-reentrant model
  9837 ;;
  9838                           
  9839  0004                     _ISR:	
  9840                           
  9841                           ;incstack = 0
  9842                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9843  0004  147E               	bsf	126,0	;set compiler interrupt flag
  9844  0005  3180               	pagesel	$
  9845  0006  0020               	movlb	0	; select bank0
  9846  0007  087F               	movf	127,w
  9847  0008  00F7               	movwf	??_ISR
  9848                           
  9849                           ;MCU_B1.c: 111: IOC_ISR();
  9850  0009  3189  2181  3180   	fcall	_IOC_ISR
  9851                           
  9852                           ;MCU_B1.c: 113: TMR0_ISR();
  9853  000C  318C  2419  3180   	fcall	_TMR0_ISR
  9854                           
  9855                           ;MCU_B1.c: 115: ;;
  9856                           ;MCU_B1.c: 119: INT_ISR();
  9857  000F  3188  209B         	fcall	_INT_ISR
  9858  0011  0877               	movf	??_ISR,w
  9859  0012  0020               	movlb	0	; select bank0
  9860  0013  00FF               	movwf	127
  9861  0014  107E               	bcf	126,0	;clear compiler interrupt flag
  9862  0015  0009               	retfie
  9863  0016                     __end_of_ISR:	
  9864                           
  9865                           	psect	text61
  9866  0C19                     __ptext61:	
  9867 ;; *************** function _TMR0_ISR *****************
  9868 ;; Defined at:
  9869 ;;		line 137 in file "../src/MCU_B1.c"
  9870 ;; Parameters:    Size  Location     Type
  9871 ;;		None
  9872 ;; Auto vars:     Size  Location     Type
  9873 ;;		None
  9874 ;; Return value:  Size  Location     Type
  9875 ;;		None               void
  9876 ;; Registers used:
  9877 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9878 ;; Tracked objects:
  9879 ;;		On entry : 0/0
  9880 ;;		On exit  : 0/0
  9881 ;;		Unchanged: 0/0
  9882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9887 ;;Total ram usage:        0 bytes
  9888 ;; Hardware stack levels used:    1
  9889 ;; Hardware stack levels required when called:    2
  9890 ;; This function calls:
  9891 ;;		_Buz_Counter
  9892 ;;		_setDimmerLights_IntrControl
  9893 ;; This function is called by:
  9894 ;;		_ISR
  9895 ;; This function uses a non-reentrant model
  9896 ;;
  9897                           
  9898                           
  9899                           ;psect for function _TMR0_ISR
  9900  0C19                     _TMR0_ISR:	
  9901                           
  9902                           ;MCU_B1.c: 138: if (TMR0IE == 1 && TMR0IF == 1) {
  9903                           
  9904                           ;incstack = 0
  9905                           ; Regs used in _TMR0_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9906  0C19  1E8B               	btfss	11,5	;volatile
  9907  0C1A  0008               	return
  9908  0C1B  1D0B               	btfss	11,2	;volatile
  9909  0C1C  0008               	return
  9910                           
  9911                           ;MCU_B1.c: 139: TMR0 = (256-190);
  9912  0C1D  3042               	movlw	66
  9913  0C1E  0020               	movlb	0	; select bank0
  9914  0C1F  0095               	movwf	21	;volatile
  9915                           
  9916                           ;MCU_B1.c: 140: TMR0IF = 0;
  9917  0C20  110B               	bcf	11,2	;volatile
  9918                           
  9919                           ;MCU_B1.c: 145: setDimmerLights_IntrControl(1);
  9920  0C21  3001               	movlw	1
  9921  0C22  3180  204B  318C   	fcall	_setDimmerLights_IntrControl
  9922                           
  9923                           ;MCU_B1.c: 150: setDimmerLights_IntrControl(2);
  9924  0C25  3002               	movlw	2
  9925  0C26  3180  204B  318C   	fcall	_setDimmerLights_IntrControl
  9926                           
  9927                           ;MCU_B1.c: 155: setDimmerLights_IntrControl(3);
  9928  0C29  3003               	movlw	3
  9929  0C2A  3180  204B  318C   	fcall	_setDimmerLights_IntrControl
  9930                           
  9931                           ;MCU_B1.c: 161: Timer0->Count++;
  9932  0C2D  0A7C               	incf	_Timer0,w
  9933  0C2E  0086               	movwf	6
  9934  0C2F  0187               	clrf	7
  9935  0C30  3001               	movlw	1
  9936  0C31  0781               	addwf	1,f
  9937  0C32  3141               	addfsr 1,1
  9938  0C33  1803               	skipnc
  9939  0C34  0A81               	incf	1,f
  9940                           
  9941                           ;MCU_B1.c: 162: if (Timer0->Count == 100) {
  9942  0C35  0A7C               	incf	_Timer0,w
  9943  0C36  0086               	movwf	6
  9944  0C37  0187               	clrf	7
  9945  0C38  3F40               	moviw [0]fsr1
  9946  0C39  3A64               	xorlw	100
  9947  0C3A  1D03               	skipz
  9948  0C3B  2C3E               	goto	u441_25
  9949  0C3C  3F41               	moviw [1]fsr1
  9950  0C3D  3A00               	xorlw	0
  9951  0C3E                     u441_25:	
  9952  0C3E  1D03               	skipz
  9953  0C3F  0008               	return
  9954                           
  9955                           ;MCU_B1.c: 163: Timer0->Count = 0;
  9956  0C40  0A7C               	incf	_Timer0,w
  9957  0C41  0086               	movwf	6
  9958  0C42  0187               	clrf	7
  9959  0C43  3000               	movlw	0
  9960  0C44  3FC0               	movwi [0]fsr1
  9961  0C45  3FC1               	movwi [1]fsr1
  9962                           
  9963                           ;MCU_B1.c: 164: myMain->T0_Timerout = 1;
  9964  0C46  0020               	movlb	0	; select bank0
  9965  0C47  086A               	movf	_myMain,w
  9966  0C48  0086               	movwf	6
  9967  0C49  3001               	movlw	1	; select bank2/3
  9968  0C4A  0087               	movwf	7
  9969  0C4B  1481               	bsf	1,1
  9970                           
  9971                           ;MCU_B1.c: 167: Buz_Counter();
  9972  0C4C  3189  2192         	fcall	_Buz_Counter
  9973  0C4E  0008               	return
  9974  0C4F                     __end_of_TMR0_ISR:	
  9975                           
  9976                           	psect	text62
  9977  004B                     __ptext62:	
  9978 ;; *************** function _setDimmerLights_IntrControl *****************
  9979 ;; Defined at:
  9980 ;;		line 90 in file "../src/Dimmer_B1.c"
  9981 ;; Parameters:    Size  Location     Type
  9982 ;;  lights          1    wreg     unsigned char 
  9983 ;; Auto vars:     Size  Location     Type
  9984 ;;  lights          1    6[COMMON] unsigned char 
  9985 ;; Return value:  Size  Location     Type
  9986 ;;		None               void
  9987 ;; Registers used:
  9988 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9989 ;; Tracked objects:
  9990 ;;		On entry : 0/0
  9991 ;;		On exit  : 0/0
  9992 ;;		Unchanged: 0/0
  9993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9995 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9996 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9997 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9998 ;;Total ram usage:        5 bytes
  9999 ;; Hardware stack levels used:    1
 10000 ;; Hardware stack levels required when called:    1
 10001 ;; This function calls:
 10002 ;;		_DimmerIntrPointSelect
 10003 ;; This function is called by:
 10004 ;;		_TMR0_ISR
 10005 ;; This function uses a non-reentrant model
 10006 ;;
 10007                           
 10008                           
 10009                           ;psect for function _setDimmerLights_IntrControl
 10010  004B                     _setDimmerLights_IntrControl:	
 10011                           
 10012                           ;incstack = 0
 10013                           ; Regs used in _setDimmerLights_IntrControl: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 10014                           ;setDimmerLights_IntrControl@lights stored from wreg
 10015  004B  00F6               	movwf	setDimmerLights_IntrControl@lights
 10016                           
 10017                           ;Dimmer_B1.c: 92: DimmerIntrPointSelect(lights);
 10018  004C  0876               	movf	setDimmerLights_IntrControl@lights,w
 10019  004D  318A  2266  3180   	fcall	_DimmerIntrPointSelect
 10020                           
 10021                           ;Dimmer_B1.c: 93: if (DimmerLightsIntr->GO == 1) {
 10022  0050  0878               	movf	_DimmerLightsIntr,w
 10023  0051  0086               	movwf	6
 10024  0052  0187               	clrf	7
 10025  0053  1C01               	btfss	1,0
 10026  0054  28AD               	goto	i1l4198
 10027                           
 10028                           ;Dimmer_B1.c: 94: DimmerLightsIntr->Count++;
 10029  0055  3001               	movlw	1
 10030  0056  00F2               	movwf	??_setDimmerLights_IntrControl
 10031  0057  0878               	movf	_DimmerLightsIntr,w
 10032  0058  3E03               	addlw	3
 10033  0059  0086               	movwf	6
 10034  005A  0187               	clrf	7
 10035  005B  0872               	movf	??_setDimmerLights_IntrControl,w
 10036  005C  0781               	addwf	1,f
 10037                           
 10038                           ;Dimmer_B1.c: 95: if (DimmerLightsIntr->Count >= (DimmerLightsIntr->DimmingValue - Dimme
      +                          r->Correction)) {
 10039  005D  0020               	movlb	0	; select bank0
 10040  005E  0859               	movf	_Dimmer,w
 10041  005F  3E02               	addlw	2
 10042  0060  0086               	movwf	6
 10043  0061  0187               	clrf	7
 10044  0062  0801               	movf	1,w
 10045  0063  00F2               	movwf	??_setDimmerLights_IntrControl
 10046  0064  01F3               	clrf	??_setDimmerLights_IntrControl+1
 10047  0065  09F2               	comf	??_setDimmerLights_IntrControl,f
 10048  0066  09F3               	comf	??_setDimmerLights_IntrControl+1,f
 10049  0067  0AF2               	incf	??_setDimmerLights_IntrControl,f
 10050  0068  1903               	skipnz
 10051  0069  0AF3               	incf	??_setDimmerLights_IntrControl+1,f
 10052  006A  0878               	movf	_DimmerLightsIntr,w
 10053  006B  3E04               	addlw	4
 10054  006C  0086               	movwf	6
 10055  006D  0187               	clrf	7
 10056  006E  0801               	movf	1,w
 10057  006F  0772               	addwf	??_setDimmerLights_IntrControl,w
 10058  0070  00F4               	movwf	??_setDimmerLights_IntrControl+2
 10059  0071  0873               	movf	??_setDimmerLights_IntrControl+1,w
 10060  0072  1803               	skipnc
 10061  0073  0A73               	incf	??_setDimmerLights_IntrControl+1,w
 10062  0074  00F5               	movwf	??_setDimmerLights_IntrControl+3
 10063  0075  0878               	movf	_DimmerLightsIntr,w
 10064  0076  3E03               	addlw	3
 10065  0077  0086               	movwf	6
 10066  0078  0187               	clrf	7
 10067  0079  0875               	movf	??_setDimmerLights_IntrControl+3,w
 10068  007A  3A80               	xorlw	128
 10069  007B  3C80               	sublw	128
 10070  007C  1D03               	skipz
 10071  007D  2880               	goto	u354_25
 10072  007E  0874               	movf	??_setDimmerLights_IntrControl+2,w
 10073  007F  0201               	subwf	1,w
 10074  0080                     u354_25:	
 10075  0080  1C03               	skipc
 10076  0081  2992               	goto	i1l4264
 10077                           
 10078                           ;Dimmer_B1.c: 96: DimmerLightsIntr->Count = 0;
 10079  0082  0878               	movf	_DimmerLightsIntr,w
 10080  0083  3E03               	addlw	3
 10081  0084  0086               	movwf	6
 10082  0085  0187               	clrf	7
 10083  0086  0181               	clrf	1
 10084                           
 10085                           ;Dimmer_B1.c: 97: DimmerLightsIntr->GO = 0;
 10086  0087  0878               	movf	_DimmerLightsIntr,w
 10087  0088  0086               	movwf	6
 10088  0089  0187               	clrf	7
 10089  008A  1001               	bcf	1,0
 10090                           
 10091                           ;Dimmer_B1.c: 99: if (DimmerLightsIntr->StatusFlag == 1) {
 10092  008B  0878               	movf	_DimmerLightsIntr,w
 10093  008C  0086               	movwf	6
 10094  008D  0187               	clrf	7
 10095  008E  1F01               	btfss	1,6
 10096  008F  2992               	goto	i1l4264
 10097                           
 10098                           ;Dimmer_B1.c: 100: DimmerLightsIntr->Flag = 1;
 10099  0090  0878               	movf	_DimmerLightsIntr,w
 10100  0091  3E08               	addlw	8
 10101  0092  0086               	movwf	6
 10102  0093  0187               	clrf	7
 10103  0094  1401               	bsf	1,0
 10104                           
 10105                           ;Dimmer_B1.c: 101: DimmerLightsIntr->Triac = 1;
 10106  0095  0878               	movf	_DimmerLightsIntr,w
 10107  0096  3E08               	addlw	8
 10108  0097  0086               	movwf	6
 10109  0098  0187               	clrf	7
 10110  0099  1681               	bsf	1,5
 10111                           
 10112                           ;Dimmer_B1.c: 103: if (lights == 1) {
 10113  009A  0876               	movf	setDimmerLights_IntrControl@lights,w
 10114  009B  3A01               	xorlw	1
 10115  009C  1D03               	skipz
 10116  009D  28A0               	goto	i1l4190
 10117                           
 10118                           ;Dimmer_B1.c: 104: RB4 = 1;
 10119  009E  0020               	movlb	0	; select bank0
 10120  009F  160D               	bsf	13,4	;volatile
 10121  00A0                     i1l4190:	
 10122                           ;Dimmer_B1.c: 105: ;;
 10123                           
 10124                           
 10125                           ;Dimmer_B1.c: 106: }
 10126                           ;Dimmer_B1.c: 109: if (lights == 2) {
 10127  00A0  0876               	movf	setDimmerLights_IntrControl@lights,w
 10128  00A1  3A02               	xorlw	2
 10129  00A2  1D03               	skipz
 10130  00A3  28A6               	goto	i1l4194
 10131                           
 10132                           ;Dimmer_B1.c: 110: RA7 = 1;
 10133  00A4  0020               	movlb	0	; select bank0
 10134  00A5  178C               	bsf	12,7	;volatile
 10135  00A6                     i1l4194:	
 10136                           
 10137                           ;Dimmer_B1.c: 111: }
 10138                           ;Dimmer_B1.c: 114: if (lights == 3) {
 10139  00A6  0876               	movf	setDimmerLights_IntrControl@lights,w
 10140  00A7  3A03               	xorlw	3
 10141  00A8  1D03               	skipz
 10142  00A9  2992               	goto	i1l4264
 10143                           
 10144                           ;Dimmer_B1.c: 115: RB1 = 1;
 10145  00AA  0020               	movlb	0	; select bank0
 10146  00AB  148D               	bsf	13,1	;volatile
 10147                           
 10148                           ;Dimmer_B1.c: 116: }
 10149                           ;Dimmer_B1.c: 118: }
 10150                           ;Dimmer_B1.c: 119: }
 10151                           ;Dimmer_B1.c: 120: } else {
 10152  00AC  2992               	goto	i1l4264
 10153  00AD                     i1l4198:	
 10154                           
 10155                           ;Dimmer_B1.c: 121: if (DimmerLightsIntr->Flag == 1) {
 10156  00AD  0878               	movf	_DimmerLightsIntr,w
 10157  00AE  3E08               	addlw	8
 10158  00AF  0086               	movwf	6
 10159  00B0  0187               	clrf	7
 10160  00B1  1C01               	btfss	1,0
 10161  00B2  2992               	goto	i1l4264
 10162                           
 10163                           ;Dimmer_B1.c: 122: DimmerLightsIntr->Flag = 0;
 10164  00B3  0878               	movf	_DimmerLightsIntr,w
 10165  00B4  3E08               	addlw	8
 10166  00B5  0086               	movwf	6
 10167  00B6  0187               	clrf	7
 10168  00B7  1001               	bcf	1,0
 10169                           
 10170                           ;Dimmer_B1.c: 123: if (DimmerLightsIntr->Signal == 1) {
 10171  00B8  0878               	movf	_DimmerLightsIntr,w
 10172  00B9  0086               	movwf	6
 10173  00BA  0187               	clrf	7
 10174  00BB  1C81               	btfss	1,1
 10175  00BC  2992               	goto	i1l4264
 10176                           
 10177                           ;Dimmer_B1.c: 124: DimmerLightsIntr->DimmingTime++;
 10178  00BD  3001               	movlw	1
 10179  00BE  00F2               	movwf	??_setDimmerLights_IntrControl
 10180  00BF  0A78               	incf	_DimmerLightsIntr,w
 10181  00C0  0086               	movwf	6
 10182  00C1  0187               	clrf	7
 10183  00C2  0872               	movf	??_setDimmerLights_IntrControl,w
 10184  00C3  0781               	addwf	1,f
 10185                           
 10186                           ;Dimmer_B1.c: 125: if (DimmerLightsIntr->DimmingTime >= DimmerLightsIntr->DimmingTimeVal
      +                          ue) {
 10187  00C4  0A78               	incf	_DimmerLightsIntr,w
 10188  00C5  0086               	movwf	6
 10189  00C6  0187               	clrf	7
 10190  00C7  0878               	movf	_DimmerLightsIntr,w
 10191  00C8  3E02               	addlw	2
 10192  00C9  0084               	movwf	4
 10193  00CA  0185               	clrf	5
 10194  00CB  0800               	movf	0,w
 10195  00CC  0201               	subwf	1,w
 10196  00CD  1C03               	skipc
 10197  00CE  2992               	goto	i1l4264
 10198                           
 10199                           ;Dimmer_B1.c: 126: DimmerLightsIntr->DimmingTime = 0;
 10200  00CF  0A78               	incf	_DimmerLightsIntr,w
 10201  00D0  0086               	movwf	6
 10202  00D1  0187               	clrf	7
 10203  00D2  0181               	clrf	1
 10204                           
 10205                           ;Dimmer_B1.c: 127: if (DimmerLightsIntr->AdjFlag == 1) {
 10206  00D3  0878               	movf	_DimmerLightsIntr,w
 10207  00D4  0086               	movwf	6
 10208  00D5  0187               	clrf	7
 10209  00D6  1D81               	btfss	1,3
 10210  00D7  2907               	goto	i1l4224
 10211                           
 10212                           ;Dimmer_B1.c: 128: if (DimmerLightsIntr->AdjStatus == 0) {
 10213  00D8  0878               	movf	_DimmerLightsIntr,w
 10214  00D9  0086               	movwf	6
 10215  00DA  0187               	clrf	7
 10216  00DB  1A01               	btfsc	1,4
 10217  00DC  28F1               	goto	i1l4218
 10218                           
 10219                           ;Dimmer_B1.c: 129: if (DimmerLightsIntr->DimmingValue > ((char)((100-95)*0.8))) {
 10220  00DD  0878               	movf	_DimmerLightsIntr,w
 10221  00DE  3E04               	addlw	4
 10222  00DF  0086               	movwf	6
 10223  00E0  0187               	clrf	7
 10224  00E1  3005               	movlw	5
 10225  00E2  0201               	subwf	1,w
 10226  00E3  1C03               	skipc
 10227  00E4  28EC               	goto	i1l4216
 10228                           
 10229                           ;Dimmer_B1.c: 130: DimmerLightsIntr->DimmingValue--;
 10230  00E5  0878               	movf	_DimmerLightsIntr,w
 10231  00E6  3E04               	addlw	4
 10232  00E7  0086               	movwf	6
 10233  00E8  0187               	clrf	7
 10234  00E9  3001               	movlw	1
 10235  00EA  0281               	subwf	1,f
 10236                           
 10237                           ;Dimmer_B1.c: 131: } else {
 10238  00EB  2992               	goto	i1l4264
 10239  00EC                     i1l4216:	
 10240                           
 10241                           ;Dimmer_B1.c: 132: DimmerLightsIntr->AdjStatus = 1;
 10242  00EC  0878               	movf	_DimmerLightsIntr,w
 10243  00ED  0086               	movwf	6
 10244  00EE  0187               	clrf	7
 10245  00EF  1601               	bsf	1,4
 10246                           
 10247                           ;Dimmer_B1.c: 133: }
 10248                           ;Dimmer_B1.c: 134: } else {
 10249  00F0  2992               	goto	i1l4264
 10250  00F1                     i1l4218:	
 10251                           
 10252                           ;Dimmer_B1.c: 135: if (DimmerLightsIntr->DimmingValue < ((char)((100-20)*0.8))) {
 10253  00F1  0878               	movf	_DimmerLightsIntr,w
 10254  00F2  3E04               	addlw	4
 10255  00F3  0086               	movwf	6
 10256  00F4  0187               	clrf	7
 10257  00F5  3040               	movlw	64
 10258  00F6  0201               	subwf	1,w
 10259  00F7  1803               	skipnc
 10260  00F8  2902               	goto	i1l4222
 10261                           
 10262                           ;Dimmer_B1.c: 136: DimmerLightsIntr->DimmingValue++;
 10263  00F9  3001               	movlw	1
 10264  00FA  00F2               	movwf	??_setDimmerLights_IntrControl
 10265  00FB  0878               	movf	_DimmerLightsIntr,w
 10266  00FC  3E04               	addlw	4
 10267  00FD  0086               	movwf	6
 10268  00FE  0187               	clrf	7
 10269  00FF  0872               	movf	??_setDimmerLights_IntrControl,w
 10270  0100  0781               	addwf	1,f
 10271                           
 10272                           ;Dimmer_B1.c: 137: } else {
 10273  0101  2992               	goto	i1l4264
 10274  0102                     i1l4222:	
 10275                           
 10276                           ;Dimmer_B1.c: 138: DimmerLightsIntr->AdjStatus = 0;
 10277  0102  0878               	movf	_DimmerLightsIntr,w
 10278  0103  0086               	movwf	6
 10279  0104  0187               	clrf	7
 10280  0105  1201               	bcf	1,4
 10281                           
 10282                           ;Dimmer_B1.c: 139: }
 10283                           ;Dimmer_B1.c: 140: }
 10284                           ;Dimmer_B1.c: 141: } else if (DimmerLightsIntr->AdjRF == 1) {
 10285  0106  2992               	goto	i1l4264
 10286  0107                     i1l4224:	
 10287  0107  0878               	movf	_DimmerLightsIntr,w
 10288  0108  0086               	movwf	6
 10289  0109  0187               	clrf	7
 10290  010A  1D01               	btfss	1,2
 10291  010B  2944               	goto	i1l4238
 10292                           
 10293                           ;Dimmer_B1.c: 142: if (DimmerLightsIntr->DimmingValue > DimmerLightsIntr->MaxmumValue) {
 10294  010C  0878               	movf	_DimmerLightsIntr,w
 10295  010D  3E05               	addlw	5
 10296  010E  0086               	movwf	6
 10297  010F  0187               	clrf	7
 10298  0110  0878               	movf	_DimmerLightsIntr,w
 10299  0111  3E04               	addlw	4
 10300  0112  0084               	movwf	4
 10301  0113  0185               	clrf	5
 10302  0114  0800               	movf	0,w
 10303  0115  0201               	subwf	1,w
 10304  0116  1803               	skipnc
 10305  0117  291F               	goto	i1l4230
 10306                           
 10307                           ;Dimmer_B1.c: 143: DimmerLightsIntr->DimmingValue--;
 10308  0118  0878               	movf	_DimmerLightsIntr,w
 10309  0119  3E04               	addlw	4
 10310  011A  0086               	movwf	6
 10311  011B  0187               	clrf	7
 10312  011C  3001               	movlw	1
 10313  011D  0281               	subwf	1,f
 10314                           
 10315                           ;Dimmer_B1.c: 144: } else if (DimmerLightsIntr->DimmingValue < DimmerLightsIntr->MaxmumV
      +                          alue) {
 10316  011E  2933               	goto	i1l4234
 10317  011F                     i1l4230:	
 10318  011F  0878               	movf	_DimmerLightsIntr,w
 10319  0120  3E04               	addlw	4
 10320  0121  0086               	movwf	6
 10321  0122  0187               	clrf	7
 10322  0123  0878               	movf	_DimmerLightsIntr,w
 10323  0124  3E05               	addlw	5
 10324  0125  0084               	movwf	4
 10325  0126  0185               	clrf	5
 10326  0127  0800               	movf	0,w
 10327  0128  0201               	subwf	1,w
 10328  0129  1803               	skipnc
 10329  012A  2933               	goto	i1l4234
 10330                           
 10331                           ;Dimmer_B1.c: 145: DimmerLightsIntr->DimmingValue++;
 10332  012B  3001               	movlw	1
 10333  012C  00F2               	movwf	??_setDimmerLights_IntrControl
 10334  012D  0878               	movf	_DimmerLightsIntr,w
 10335  012E  3E04               	addlw	4
 10336  012F  0086               	movwf	6
 10337  0130  0187               	clrf	7
 10338  0131  0872               	movf	??_setDimmerLights_IntrControl,w
 10339  0132  0781               	addwf	1,f
 10340  0133                     i1l4234:	
 10341                           
 10342                           ;Dimmer_B1.c: 146: }
 10343                           ;Dimmer_B1.c: 147: if (DimmerLightsIntr->DimmingValue == DimmerLightsIntr->MaxmumValue) 
      +                          {
 10344  0133  0878               	movf	_DimmerLightsIntr,w
 10345  0134  3E05               	addlw	5
 10346  0135  0086               	movwf	6
 10347  0136  0187               	clrf	7
 10348  0137  0878               	movf	_DimmerLightsIntr,w
 10349  0138  3E04               	addlw	4
 10350  0139  0084               	movwf	4
 10351  013A  0185               	clrf	5
 10352  013B  0800               	movf	0,w
 10353  013C  0601               	xorwf	1,w
 10354  013D  1D03               	skipz
 10355  013E  2992               	goto	i1l4264
 10356                           
 10357                           ;Dimmer_B1.c: 148: DimmerLightsIntr->AdjRF = 0;
 10358  013F  0878               	movf	_DimmerLightsIntr,w
 10359  0140  0086               	movwf	6
 10360  0141  0187               	clrf	7
 10361  0142  1101               	bcf	1,2
 10362  0143  295B               	goto	i1l4244
 10363  0144                     i1l4238:	
 10364                           ;Dimmer_B1.c: 150: }
 10365                           ;Dimmer_B1.c: 151: } else {
 10366                           
 10367                           ;Dimmer_B1.c: 149: DimmerLightsIntr->Signal = 0;
 10368                           
 10369                           
 10370                           ;Dimmer_B1.c: 152: if (DimmerLightsIntr->Status == 1) {
 10371  0144  0878               	movf	_DimmerLightsIntr,w
 10372  0145  0086               	movwf	6
 10373  0146  0187               	clrf	7
 10374  0147  1E81               	btfss	1,5
 10375  0148  2960               	goto	i1l4246
 10376                           
 10377                           ;Dimmer_B1.c: 153: DimmerLightsIntr->DimmingValue--;
 10378  0149  0878               	movf	_DimmerLightsIntr,w
 10379  014A  3E04               	addlw	4
 10380  014B  0086               	movwf	6
 10381  014C  0187               	clrf	7
 10382  014D  3001               	movlw	1
 10383  014E  0281               	subwf	1,f
 10384                           
 10385                           ;Dimmer_B1.c: 154: if (DimmerLightsIntr->DimmingValue <= DimmerLightsIntr->MaxmumValue) 
      +                          {
 10386  014F  0878               	movf	_DimmerLightsIntr,w
 10387  0150  3E05               	addlw	5
 10388  0151  0086               	movwf	6
 10389  0152  0187               	clrf	7
 10390  0153  0878               	movf	_DimmerLightsIntr,w
 10391  0154  3E04               	addlw	4
 10392  0155  0084               	movwf	4
 10393  0156  0185               	clrf	5
 10394  0157  0800               	movf	0,w
 10395  0158  0201               	subwf	1,w
 10396  0159  1C03               	skipc
 10397  015A  2992               	goto	i1l4264
 10398  015B                     i1l4244:	
 10399                           
 10400                           ;Dimmer_B1.c: 155: DimmerLightsIntr->Signal = 0;
 10401  015B  0878               	movf	_DimmerLightsIntr,w
 10402  015C  0086               	movwf	6
 10403  015D  0187               	clrf	7
 10404  015E  1081               	bcf	1,1
 10405                           
 10406                           ;Dimmer_B1.c: 156: }
 10407                           ;Dimmer_B1.c: 157: } else {
 10408  015F  2992               	goto	i1l4264
 10409  0160                     i1l4246:	
 10410                           
 10411                           ;Dimmer_B1.c: 158: DimmerLightsIntr->DimmingValue++;
 10412  0160  3001               	movlw	1
 10413  0161  00F2               	movwf	??_setDimmerLights_IntrControl
 10414  0162  0878               	movf	_DimmerLightsIntr,w
 10415  0163  3E04               	addlw	4
 10416  0164  0086               	movwf	6
 10417  0165  0187               	clrf	7
 10418  0166  0872               	movf	??_setDimmerLights_IntrControl,w
 10419  0167  0781               	addwf	1,f
 10420                           
 10421                           ;Dimmer_B1.c: 159: if (DimmerLightsIntr->DimmingValue >= DimmerLightsIntr->MinimumValue)
      +                           {
 10422  0168  0878               	movf	_DimmerLightsIntr,w
 10423  0169  3E04               	addlw	4
 10424  016A  0086               	movwf	6
 10425  016B  0187               	clrf	7
 10426  016C  0878               	movf	_DimmerLightsIntr,w
 10427  016D  3E06               	addlw	6
 10428  016E  0084               	movwf	4
 10429  016F  0185               	clrf	5
 10430  0170  0800               	movf	0,w
 10431  0171  0201               	subwf	1,w
 10432  0172  1C03               	skipc
 10433  0173  2992               	goto	i1l4264
 10434                           
 10435                           ;Dimmer_B1.c: 160: DimmerLightsIntr->Signal = 0;
 10436  0174  0878               	movf	_DimmerLightsIntr,w
 10437  0175  0086               	movwf	6
 10438  0176  0187               	clrf	7
 10439  0177  1081               	bcf	1,1
 10440                           
 10441                           ;Dimmer_B1.c: 161: DimmerLightsIntr->StatusFlag = 0;
 10442  0178  0878               	movf	_DimmerLightsIntr,w
 10443  0179  0086               	movwf	6
 10444  017A  0187               	clrf	7
 10445  017B  1301               	bcf	1,6
 10446                           
 10447                           ;Dimmer_B1.c: 162: DimmerLightsIntr->Clear = 1;
 10448  017C  0878               	movf	_DimmerLightsIntr,w
 10449  017D  3E09               	addlw	9
 10450  017E  0086               	movwf	6
 10451  017F  0187               	clrf	7
 10452  0180  1501               	bsf	1,2
 10453                           
 10454                           ;Dimmer_B1.c: 163: Dimmer->Detect = 1;
 10455  0181  0020               	movlb	0	; select bank0
 10456  0182  0859               	movf	_Dimmer,w
 10457  0183  0086               	movwf	6
 10458  0184  0187               	clrf	7
 10459  0185  1401               	bsf	1,0
 10460                           
 10461                           ;Dimmer_B1.c: 165: if (lights == 1) {
 10462  0186  0876               	movf	setDimmerLights_IntrControl@lights,w
 10463  0187  3A01               	xorlw	1
 10464  0188  1903               	btfsc	3,2
 10465                           
 10466                           ;Dimmer_B1.c: 166: RC7 = 0;
 10467  0189  138E               	bcf	14,7	;volatile
 10468                           
 10469                           ;Dimmer_B1.c: 168: }
 10470                           ;Dimmer_B1.c: 171: if (lights == 2) {
 10471  018A  0876               	movf	setDimmerLights_IntrControl@lights,w
 10472  018B  3A02               	xorlw	2
 10473  018C  1903               	btfsc	3,2
 10474                           
 10475                           ;Dimmer_B1.c: 172: RA3 = 0;
 10476  018D  118C               	bcf	12,3	;volatile
 10477                           
 10478                           ;Dimmer_B1.c: 173: }
 10479                           ;Dimmer_B1.c: 176: if (lights == 3) {
 10480  018E  0876               	movf	setDimmerLights_IntrControl@lights,w
 10481  018F  3A03               	xorlw	3
 10482  0190  1903               	btfsc	3,2
 10483                           
 10484                           ;Dimmer_B1.c: 177: RC6 = 0;
 10485  0191  130E               	bcf	14,6	;volatile
 10486  0192                     i1l4264:	
 10487                           ;Dimmer_B1.c: 178: }
 10488                           ;Dimmer_B1.c: 180: ;;
 10489                           
 10490                           
 10491                           ;Dimmer_B1.c: 181: }
 10492                           ;Dimmer_B1.c: 182: }
 10493                           ;Dimmer_B1.c: 183: }
 10494                           ;Dimmer_B1.c: 184: }
 10495                           ;Dimmer_B1.c: 185: }
 10496                           ;Dimmer_B1.c: 186: }
 10497                           ;Dimmer_B1.c: 187: }
 10498                           ;Dimmer_B1.c: 188: if (DimmerLightsIntr->Triac == 1) {
 10499  0192  0878               	movf	_DimmerLightsIntr,w
 10500  0193  3E08               	addlw	8
 10501  0194  0086               	movwf	6
 10502  0195  0187               	clrf	7
 10503  0196  1E81               	btfss	1,5
 10504  0197  29C4               	goto	i1l4286
 10505                           
 10506                           ;Dimmer_B1.c: 189: DimmerLightsIntr->TriacTime++;
 10507  0198  3001               	movlw	1
 10508  0199  00F2               	movwf	??_setDimmerLights_IntrControl
 10509  019A  0878               	movf	_DimmerLightsIntr,w
 10510  019B  3E07               	addlw	7
 10511  019C  0086               	movwf	6
 10512  019D  0187               	clrf	7
 10513  019E  0872               	movf	??_setDimmerLights_IntrControl,w
 10514  019F  0781               	addwf	1,f
 10515                           
 10516                           ;Dimmer_B1.c: 190: if (DimmerLightsIntr->TriacTime >= 5) {
 10517  01A0  0878               	movf	_DimmerLightsIntr,w
 10518  01A1  3E07               	addlw	7
 10519  01A2  0086               	movwf	6
 10520  01A3  0187               	clrf	7
 10521  01A4  3005               	movlw	5
 10522  01A5  0201               	subwf	1,w
 10523  01A6  1C03               	skipc
 10524  01A7  29C4               	goto	i1l4286
 10525                           
 10526                           ;Dimmer_B1.c: 191: DimmerLightsIntr->TriacTime = 0;
 10527  01A8  0878               	movf	_DimmerLightsIntr,w
 10528  01A9  3E07               	addlw	7
 10529  01AA  0086               	movwf	6
 10530  01AB  0187               	clrf	7
 10531  01AC  0181               	clrf	1
 10532                           
 10533                           ;Dimmer_B1.c: 192: DimmerLightsIntr->Triac = 0;
 10534  01AD  0878               	movf	_DimmerLightsIntr,w
 10535  01AE  3E08               	addlw	8
 10536  01AF  0086               	movwf	6
 10537  01B0  0187               	clrf	7
 10538  01B1  1281               	bcf	1,5
 10539                           
 10540                           ;Dimmer_B1.c: 195: if (lights == 1) {
 10541  01B2  0876               	movf	setDimmerLights_IntrControl@lights,w
 10542  01B3  3A01               	xorlw	1
 10543  01B4  1D03               	skipz
 10544  01B5  29B8               	goto	i1l4278
 10545                           
 10546                           ;Dimmer_B1.c: 196: RB4 = 0;
 10547  01B6  0020               	movlb	0	; select bank0
 10548  01B7  120D               	bcf	13,4	;volatile
 10549  01B8                     i1l4278:	
 10550                           ;Dimmer_B1.c: 197: ;;
 10551                           
 10552                           
 10553                           ;Dimmer_B1.c: 198: }
 10554                           ;Dimmer_B1.c: 201: if (lights == 2) {
 10555  01B8  0876               	movf	setDimmerLights_IntrControl@lights,w
 10556  01B9  3A02               	xorlw	2
 10557  01BA  1D03               	skipz
 10558  01BB  29BE               	goto	i1l4282
 10559                           
 10560                           ;Dimmer_B1.c: 202: RA7 = 0;
 10561  01BC  0020               	movlb	0	; select bank0
 10562  01BD  138C               	bcf	12,7	;volatile
 10563  01BE                     i1l4282:	
 10564                           
 10565                           ;Dimmer_B1.c: 203: }
 10566                           ;Dimmer_B1.c: 206: if (lights == 3) {
 10567  01BE  0876               	movf	setDimmerLights_IntrControl@lights,w
 10568  01BF  3A03               	xorlw	3
 10569  01C0  1D03               	skipz
 10570  01C1  29C4               	goto	i1l4286
 10571                           
 10572                           ;Dimmer_B1.c: 207: RB1 = 0;
 10573  01C2  0020               	movlb	0	; select bank0
 10574  01C3  108D               	bcf	13,1	;volatile
 10575  01C4                     i1l4286:	
 10576                           
 10577                           ;Dimmer_B1.c: 208: }
 10578                           ;Dimmer_B1.c: 210: }
 10579                           ;Dimmer_B1.c: 211: }
 10580                           ;Dimmer_B1.c: 212: if (DimmerLightsIntr->TriacFlag == 1) {
 10581  01C4  0878               	movf	_DimmerLightsIntr,w
 10582  01C5  3E09               	addlw	9
 10583  01C6  0086               	movwf	6
 10584  01C7  0187               	clrf	7
 10585  01C8  1E81               	btfss	1,5
 10586  01C9  0008               	return
 10587                           
 10588                           ;Dimmer_B1.c: 213: DimmerLightsIntr->TriacCount++;
 10589  01CA  3001               	movlw	1
 10590  01CB  00F2               	movwf	??_setDimmerLights_IntrControl
 10591  01CC  0878               	movf	_DimmerLightsIntr,w
 10592  01CD  3E0A               	addlw	10
 10593  01CE  0086               	movwf	6
 10594  01CF  0187               	clrf	7
 10595  01D0  0872               	movf	??_setDimmerLights_IntrControl,w
 10596  01D1  0781               	addwf	1,f
 10597                           
 10598                           ;Dimmer_B1.c: 214: if (DimmerLightsIntr->TriacCount == 70) {
 10599  01D2  0878               	movf	_DimmerLightsIntr,w
 10600  01D3  3E0A               	addlw	10
 10601  01D4  0086               	movwf	6
 10602  01D5  0187               	clrf	7
 10603  01D6  0801               	movf	1,w
 10604  01D7  3A46               	xorlw	70
 10605  01D8  1D03               	skipz
 10606  01D9  0008               	return
 10607                           
 10608                           ;Dimmer_B1.c: 215: DimmerLightsIntr->TriacCount = 0;
 10609  01DA  0878               	movf	_DimmerLightsIntr,w
 10610  01DB  3E0A               	addlw	10
 10611  01DC  0086               	movwf	6
 10612  01DD  0187               	clrf	7
 10613  01DE  0181               	clrf	1
 10614                           
 10615                           ;Dimmer_B1.c: 216: DimmerLightsIntr->TriacFlag = 0;
 10616  01DF  0878               	movf	_DimmerLightsIntr,w
 10617  01E0  3E09               	addlw	9
 10618  01E1  0086               	movwf	6
 10619  01E2  0187               	clrf	7
 10620  01E3  1281               	bcf	1,5
 10621                           
 10622                           ;Dimmer_B1.c: 217: if (lights == 1) {
 10623  01E4  0876               	movf	setDimmerLights_IntrControl@lights,w
 10624  01E5  3A01               	xorlw	1
 10625  01E6  1D03               	skipz
 10626  01E7  0008               	return
 10627                           
 10628                           ;Dimmer_B1.c: 218: RB5 = 0;
 10629  01E8  0020               	movlb	0	; select bank0
 10630  01E9  128D               	bcf	13,5	;volatile
 10631  01EA  0008               	return
 10632  01EB                     __end_of_setDimmerLights_IntrControl:	
 10633                           
 10634                           	psect	text63
 10635  0A66                     __ptext63:	
 10636 ;; *************** function _DimmerIntrPointSelect *****************
 10637 ;; Defined at:
 10638 ;;		line 68 in file "../src/Dimmer_B1.c"
 10639 ;; Parameters:    Size  Location     Type
 10640 ;;  lights          1    wreg     unsigned char 
 10641 ;; Auto vars:     Size  Location     Type
 10642 ;;  lights          1    1[COMMON] unsigned char 
 10643 ;; Return value:  Size  Location     Type
 10644 ;;		None               void
 10645 ;; Registers used:
 10646 ;;		wreg
 10647 ;; Tracked objects:
 10648 ;;		On entry : 0/0
 10649 ;;		On exit  : 0/0
 10650 ;;		Unchanged: 0/0
 10651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10653 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10654 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10655 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10656 ;;Total ram usage:        2 bytes
 10657 ;; Hardware stack levels used:    1
 10658 ;; This function calls:
 10659 ;;		Nothing
 10660 ;; This function is called by:
 10661 ;;		_setDimmerLights_IntrControl
 10662 ;; This function uses a non-reentrant model
 10663 ;;
 10664                           
 10665                           
 10666                           ;psect for function _DimmerIntrPointSelect
 10667  0A66                     _DimmerIntrPointSelect:	
 10668                           
 10669                           ;incstack = 0
 10670                           ; Regs used in _DimmerIntrPointSelect: [wreg]
 10671                           ;DimmerIntrPointSelect@lights stored from wreg
 10672  0A66  00F1               	movwf	DimmerIntrPointSelect@lights
 10673                           
 10674                           ;Dimmer_B1.c: 70: if (lights == 1) {
 10675  0A67  0871               	movf	DimmerIntrPointSelect@lights,w
 10676  0A68  3A01               	xorlw	1
 10677  0A69  1D03               	skipz
 10678  0A6A  2A6F               	goto	i1l407
 10679                           
 10680                           ;Dimmer_B1.c: 71: DimmerLightsIntr = &DimmerLights1;
 10681  0A6B  30A0               	movlw	_DimmerLights1& (0+255)
 10682  0A6C  00F0               	movwf	??_DimmerIntrPointSelect
 10683  0A6D  0870               	movf	??_DimmerIntrPointSelect,w
 10684  0A6E  00F8               	movwf	_DimmerLightsIntr
 10685  0A6F                     i1l407:	
 10686                           
 10687                           ;Dimmer_B1.c: 72: }
 10688                           ;Dimmer_B1.c: 75: if (lights == 2) {
 10689  0A6F  0871               	movf	DimmerIntrPointSelect@lights,w
 10690  0A70  3A02               	xorlw	2
 10691  0A71  1D03               	skipz
 10692  0A72  2A77               	goto	i1l408
 10693                           
 10694                           ;Dimmer_B1.c: 76: DimmerLightsIntr = &DimmerLights2;
 10695  0A73  30AF               	movlw	_DimmerLights2& (0+255)
 10696  0A74  00F0               	movwf	??_DimmerIntrPointSelect
 10697  0A75  0870               	movf	??_DimmerIntrPointSelect,w
 10698  0A76  00F8               	movwf	_DimmerLightsIntr
 10699  0A77                     i1l408:	
 10700                           
 10701                           ;Dimmer_B1.c: 77: }
 10702                           ;Dimmer_B1.c: 81: if (lights == 3) {
 10703  0A77  0871               	movf	DimmerIntrPointSelect@lights,w
 10704  0A78  3A03               	xorlw	3
 10705  0A79  1D03               	skipz
 10706  0A7A  0008               	return
 10707                           
 10708                           ;Dimmer_B1.c: 82: DimmerLightsIntr = &DimmerLights3;
 10709  0A7B  30BE               	movlw	_DimmerLights3& (0+255)
 10710  0A7C  00F0               	movwf	??_DimmerIntrPointSelect
 10711  0A7D  0870               	movf	??_DimmerIntrPointSelect,w
 10712  0A7E  00F8               	movwf	_DimmerLightsIntr
 10713  0A7F  0008               	return
 10714  0A80                     __end_of_DimmerIntrPointSelect:	
 10715                           
 10716                           	psect	text64
 10717  0992                     __ptext64:	
 10718 ;; *************** function _Buz_Counter *****************
 10719 ;; Defined at:
 10720 ;;		line 23 in file "../src/Buzzer_B1.c"
 10721 ;; Parameters:    Size  Location     Type
 10722 ;;		None
 10723 ;; Auto vars:     Size  Location     Type
 10724 ;;		None
 10725 ;; Return value:  Size  Location     Type
 10726 ;;		None               void
 10727 ;; Registers used:
 10728 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10729 ;; Tracked objects:
 10730 ;;		On entry : 0/0
 10731 ;;		On exit  : 0/0
 10732 ;;		Unchanged: 0/0
 10733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10738 ;;Total ram usage:        0 bytes
 10739 ;; Hardware stack levels used:    1
 10740 ;; This function calls:
 10741 ;;		Nothing
 10742 ;; This function is called by:
 10743 ;;		_TMR0_ISR
 10744 ;; This function uses a non-reentrant model
 10745 ;;
 10746                           
 10747                           
 10748                           ;psect for function _Buz_Counter
 10749  0992                     _Buz_Counter:	
 10750                           
 10751                           ;Buzzer_B1.c: 24: if (Buz->GO == 1) {
 10752                           
 10753                           ;incstack = 0
 10754                           ; Regs used in _Buz_Counter: [wreg+fsr1l+fsr1h+status,2+status,0]
 10755  0992  0020               	movlb	0	; select bank0
 10756  0993  0858               	movf	_Buz,w
 10757  0994  0086               	movwf	6
 10758  0995  3001               	movlw	1	; select bank2/3
 10759  0996  0087               	movwf	7
 10760  0997  1C81               	btfss	1,1
 10761  0998  0008               	return
 10762                           
 10763                           ;Buzzer_B1.c: 25: Buz->Counter++;
 10764  0999  0A58               	incf	_Buz,w
 10765  099A  0086               	movwf	6
 10766  099B  3001               	movlw	1	; select bank2/3
 10767  099C  0087               	movwf	7
 10768  099D  3001               	movlw	1
 10769  099E  0781               	addwf	1,f
 10770  099F  3141               	addfsr 1,1
 10771  09A0  1803               	skipnc
 10772  09A1  0A81               	incf	1,f
 10773  09A2  0008               	return
 10774  09A3                     __end_of_Buz_Counter:	
 10775                           
 10776                           	psect	text65
 10777  0981                     __ptext65:	
 10778 ;; *************** function _IOC_ISR *****************
 10779 ;; Defined at:
 10780 ;;		line 298 in file "../src/MCU_B1.c"
 10781 ;; Parameters:    Size  Location     Type
 10782 ;;		None
 10783 ;; Auto vars:     Size  Location     Type
 10784 ;;		None
 10785 ;; Return value:  Size  Location     Type
 10786 ;;		None               void
 10787 ;; Registers used:
 10788 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10789 ;; Tracked objects:
 10790 ;;		On entry : 0/0
 10791 ;;		On exit  : 0/0
 10792 ;;		Unchanged: 0/0
 10793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10798 ;;Total ram usage:        0 bytes
 10799 ;; Hardware stack levels used:    1
 10800 ;; Hardware stack levels required when called:    3
 10801 ;; This function calls:
 10802 ;;		_setDimmerReClock
 10803 ;; This function is called by:
 10804 ;;		_ISR
 10805 ;; This function uses a non-reentrant model
 10806 ;;
 10807                           
 10808                           
 10809                           ;psect for function _IOC_ISR
 10810  0981                     _IOC_ISR:	
 10811                           
 10812                           ;MCU_B1.c: 299: if (IOCIE == 1 && IOCBF2 == 1) {
 10813                           
 10814                           ;incstack = 0
 10815                           ; Regs used in _IOC_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10816  0981  1D8B               	btfss	11,3	;volatile
 10817  0982  0008               	return
 10818  0983  0027               	movlb	7	; select bank7
 10819  0984  1D16               	btfss	22,2	;volatile
 10820  0985  0008               	return
 10821                           
 10822                           ;MCU_B1.c: 300: IOCBF2 = 0;
 10823  0986  1116               	bcf	22,2	;volatile
 10824                           
 10825                           ;MCU_B1.c: 301: IOCIF = 0;
 10826  0987  100B               	bcf	11,0	;volatile
 10827                           
 10828                           ;MCU_B1.c: 302: if (myMain->PowerON == 1) {
 10829  0988  0020               	movlb	0	; select bank0
 10830  0989  086A               	movf	_myMain,w
 10831  098A  0086               	movwf	6
 10832  098B  3001               	movlw	1	; select bank2/3
 10833  098C  0087               	movwf	7
 10834  098D  1C01               	btfss	1,0
 10835  098E  0008               	return
 10836                           
 10837                           ;MCU_B1.c: 304: setDimmerReClock();
 10838  098F  3188  20F7         	fcall	_setDimmerReClock
 10839  0991  0008               	return
 10840  0992                     __end_of_IOC_ISR:	
 10841                           
 10842                           	psect	text66
 10843  08F7                     __ptext66:	
 10844 ;; *************** function _setDimmerReClock *****************
 10845 ;; Defined at:
 10846 ;;		line 175 in file "../src/MCU_B1.c"
 10847 ;; Parameters:    Size  Location     Type
 10848 ;;		None
 10849 ;; Auto vars:     Size  Location     Type
 10850 ;;		None
 10851 ;; Return value:  Size  Location     Type
 10852 ;;		None               void
 10853 ;; Registers used:
 10854 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10855 ;; Tracked objects:
 10856 ;;		On entry : 0/0
 10857 ;;		On exit  : 0/0
 10858 ;;		Unchanged: 0/0
 10859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10864 ;;Total ram usage:        0 bytes
 10865 ;; Hardware stack levels used:    1
 10866 ;; Hardware stack levels required when called:    2
 10867 ;; This function calls:
 10868 ;;		_setDimmerLights_IntrIOC_GO
 10869 ;; This function is called by:
 10870 ;;		_IOC_ISR
 10871 ;; This function uses a non-reentrant model
 10872 ;;
 10873                           
 10874                           
 10875                           ;psect for function _setDimmerReClock
 10876  08F7                     _setDimmerReClock:	
 10877                           
 10878                           ;MCU_B1.c: 180: setDimmerLights_IntrIOC_GO(1);
 10879                           
 10880                           ;incstack = 0
 10881                           ; Regs used in _setDimmerReClock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10882  08F7  3001               	movlw	1
 10883  08F8  318B  230B  3188   	fcall	_setDimmerLights_IntrIOC_GO
 10884                           
 10885                           ;MCU_B1.c: 184: setDimmerLights_IntrIOC_GO(2);
 10886  08FB  3002               	movlw	2
 10887  08FC  318B  230B  3188   	fcall	_setDimmerLights_IntrIOC_GO
 10888                           
 10889                           ;MCU_B1.c: 188: setDimmerLights_IntrIOC_GO(3);
 10890  08FF  3003               	movlw	3
 10891  0900  318B  230B         	fcall	_setDimmerLights_IntrIOC_GO
 10892                           
 10893                           ;MCU_B1.c: 191: TMR0 = 255;
 10894  0902  30FF               	movlw	255
 10895  0903  0020               	movlb	0	; select bank0
 10896  0904  0095               	movwf	21	;volatile
 10897  0905  0008               	return
 10898  0906                     __end_of_setDimmerReClock:	
 10899                           
 10900                           	psect	text67
 10901  0B0B                     __ptext67:	
 10902 ;; *************** function _setDimmerLights_IntrIOC_GO *****************
 10903 ;; Defined at:
 10904 ;;		line 28 in file "../src/Dimmer_B1.c"
 10905 ;; Parameters:    Size  Location     Type
 10906 ;;  lights          1    wreg     unsigned char 
 10907 ;; Auto vars:     Size  Location     Type
 10908 ;;  lights          1    2[COMMON] unsigned char 
 10909 ;; Return value:  Size  Location     Type
 10910 ;;		None               void
 10911 ;; Registers used:
 10912 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10913 ;; Tracked objects:
 10914 ;;		On entry : 0/0
 10915 ;;		On exit  : 0/0
 10916 ;;		Unchanged: 0/0
 10917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10919 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10921 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10922 ;;Total ram usage:        1 bytes
 10923 ;; Hardware stack levels used:    1
 10924 ;; Hardware stack levels required when called:    1
 10925 ;; This function calls:
 10926 ;;		_DimmerIntrIOCPointSelect
 10927 ;; This function is called by:
 10928 ;;		_setDimmerReClock
 10929 ;; This function uses a non-reentrant model
 10930 ;;
 10931                           
 10932                           
 10933                           ;psect for function _setDimmerLights_IntrIOC_GO
 10934  0B0B                     _setDimmerLights_IntrIOC_GO:	
 10935                           
 10936                           ;incstack = 0
 10937                           ; Regs used in _setDimmerLights_IntrIOC_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 10938                           ;setDimmerLights_IntrIOC_GO@lights stored from wreg
 10939  0B0B  00F2               	movwf	setDimmerLights_IntrIOC_GO@lights
 10940                           
 10941                           ;Dimmer_B1.c: 30: DimmerIntrIOCPointSelect(lights);
 10942  0B0C  0872               	movf	setDimmerLights_IntrIOC_GO@lights,w
 10943  0B0D  318A  224C  318B   	fcall	_DimmerIntrIOCPointSelect
 10944                           
 10945                           ;Dimmer_B1.c: 32: if (DimmerLightsIntrIOC->GO == 0 && DimmerLightsIntrIOC->TriacFlag == 
      +                          0) {
 10946  0B10  0879               	movf	_DimmerLightsIntrIOC,w
 10947  0B11  0086               	movwf	6
 10948  0B12  0187               	clrf	7
 10949  0B13  1801               	btfsc	1,0
 10950  0B14  0008               	return
 10951  0B15  0879               	movf	_DimmerLightsIntrIOC,w
 10952  0B16  3E09               	addlw	9
 10953  0B17  0086               	movwf	6
 10954  0B18  0187               	clrf	7
 10955  0B19  1A81               	btfsc	1,5
 10956  0B1A  0008               	return
 10957                           
 10958                           ;Dimmer_B1.c: 33: DimmerLightsIntrIOC->GO = 1;
 10959  0B1B  0879               	movf	_DimmerLightsIntrIOC,w
 10960  0B1C  0086               	movwf	6
 10961  0B1D  0187               	clrf	7
 10962  0B1E  1401               	bsf	1,0
 10963                           
 10964                           ;Dimmer_B1.c: 34: DimmerLightsIntrIOC->TriacFlag = 1;
 10965  0B1F  0879               	movf	_DimmerLightsIntrIOC,w
 10966  0B20  3E09               	addlw	9
 10967  0B21  0086               	movwf	6
 10968  0B22  0187               	clrf	7
 10969  0B23  1681               	bsf	1,5
 10970                           
 10971                           ;Dimmer_B1.c: 35: if (lights == 1) {
 10972  0B24  0872               	movf	setDimmerLights_IntrIOC_GO@lights,w
 10973  0B25  3A01               	xorlw	1
 10974  0B26  1D03               	skipz
 10975  0B27  0008               	return
 10976                           
 10977                           ;Dimmer_B1.c: 36: RB5 = 1;
 10978  0B28  0020               	movlb	0	; select bank0
 10979  0B29  168D               	bsf	13,5	;volatile
 10980  0B2A  0008               	return
 10981  0B2B                     __end_of_setDimmerLights_IntrIOC_GO:	
 10982                           
 10983                           	psect	text68
 10984  0A4C                     __ptext68:	
 10985 ;; *************** function _DimmerIntrIOCPointSelect *****************
 10986 ;; Defined at:
 10987 ;;		line 8 in file "../src/Dimmer_B1.c"
 10988 ;; Parameters:    Size  Location     Type
 10989 ;;  lights          1    wreg     unsigned char 
 10990 ;; Auto vars:     Size  Location     Type
 10991 ;;  lights          1    1[COMMON] unsigned char 
 10992 ;; Return value:  Size  Location     Type
 10993 ;;		None               void
 10994 ;; Registers used:
 10995 ;;		wreg
 10996 ;; Tracked objects:
 10997 ;;		On entry : 0/0
 10998 ;;		On exit  : 0/0
 10999 ;;		Unchanged: 0/0
 11000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11002 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11003 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11004 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11005 ;;Total ram usage:        2 bytes
 11006 ;; Hardware stack levels used:    1
 11007 ;; This function calls:
 11008 ;;		Nothing
 11009 ;; This function is called by:
 11010 ;;		_setDimmerLights_IntrIOC_GO
 11011 ;; This function uses a non-reentrant model
 11012 ;;
 11013                           
 11014                           
 11015                           ;psect for function _DimmerIntrIOCPointSelect
 11016  0A4C                     _DimmerIntrIOCPointSelect:	
 11017                           
 11018                           ;incstack = 0
 11019                           ; Regs used in _DimmerIntrIOCPointSelect: [wreg]
 11020                           ;DimmerIntrIOCPointSelect@lights stored from wreg
 11021  0A4C  00F1               	movwf	DimmerIntrIOCPointSelect@lights
 11022                           
 11023                           ;Dimmer_B1.c: 10: if (lights == 1) {
 11024  0A4D  0871               	movf	DimmerIntrIOCPointSelect@lights,w
 11025  0A4E  3A01               	xorlw	1
 11026  0A4F  1D03               	skipz
 11027  0A50  2A55               	goto	i1l396
 11028                           
 11029                           ;Dimmer_B1.c: 11: DimmerLightsIntrIOC = &DimmerLights1;
 11030  0A51  30A0               	movlw	_DimmerLights1& (0+255)
 11031  0A52  00F0               	movwf	??_DimmerIntrIOCPointSelect
 11032  0A53  0870               	movf	??_DimmerIntrIOCPointSelect,w
 11033  0A54  00F9               	movwf	_DimmerLightsIntrIOC
 11034  0A55                     i1l396:	
 11035                           
 11036                           ;Dimmer_B1.c: 12: }
 11037                           ;Dimmer_B1.c: 15: if (lights == 2) {
 11038  0A55  0871               	movf	DimmerIntrIOCPointSelect@lights,w
 11039  0A56  3A02               	xorlw	2
 11040  0A57  1D03               	skipz
 11041  0A58  2A5D               	goto	i1l397
 11042                           
 11043                           ;Dimmer_B1.c: 16: DimmerLightsIntrIOC = &DimmerLights2;
 11044  0A59  30AF               	movlw	_DimmerLights2& (0+255)
 11045  0A5A  00F0               	movwf	??_DimmerIntrIOCPointSelect
 11046  0A5B  0870               	movf	??_DimmerIntrIOCPointSelect,w
 11047  0A5C  00F9               	movwf	_DimmerLightsIntrIOC
 11048  0A5D                     i1l397:	
 11049                           
 11050                           ;Dimmer_B1.c: 17: }
 11051                           ;Dimmer_B1.c: 21: if (lights == 3) {
 11052  0A5D  0871               	movf	DimmerIntrIOCPointSelect@lights,w
 11053  0A5E  3A03               	xorlw	3
 11054  0A5F  1D03               	skipz
 11055  0A60  0008               	return
 11056                           
 11057                           ;Dimmer_B1.c: 22: DimmerLightsIntrIOC = &DimmerLights3;
 11058  0A61  30BE               	movlw	_DimmerLights3& (0+255)
 11059  0A62  00F0               	movwf	??_DimmerIntrIOCPointSelect
 11060  0A63  0870               	movf	??_DimmerIntrIOCPointSelect,w
 11061  0A64  00F9               	movwf	_DimmerLightsIntrIOC
 11062  0A65  0008               	return
 11063  0A66                     __end_of_DimmerIntrIOCPointSelect:	
 11064                           
 11065                           	psect	text69
 11066  089B                     __ptext69:	
 11067 ;; *************** function _INT_ISR *****************
 11068 ;; Defined at:
 11069 ;;		line 250 in file "../src/MCU_B1.c"
 11070 ;; Parameters:    Size  Location     Type
 11071 ;;		None
 11072 ;; Auto vars:     Size  Location     Type
 11073 ;;		None
 11074 ;; Return value:  Size  Location     Type
 11075 ;;		None               void
 11076 ;; Registers used:
 11077 ;;		None
 11078 ;; Tracked objects:
 11079 ;;		On entry : 0/0
 11080 ;;		On exit  : 0/0
 11081 ;;		Unchanged: 0/0
 11082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11087 ;;Total ram usage:        0 bytes
 11088 ;; Hardware stack levels used:    1
 11089 ;; This function calls:
 11090 ;;		Nothing
 11091 ;; This function is called by:
 11092 ;;		_ISR
 11093 ;; This function uses a non-reentrant model
 11094 ;;
 11095                           
 11096                           
 11097                           ;psect for function _INT_ISR
 11098  089B                     _INT_ISR:	
 11099                           
 11100                           ;MCU_B1.c: 251: if (INTE == 1 && INTF == 1) {
 11101                           
 11102                           ;incstack = 0
 11103                           ; Regs used in _INT_ISR: []
 11104  089B  1E0B               	btfss	11,4	;volatile
 11105  089C  0008               	return
 11106  089D  1C8B               	btfss	11,1	;volatile
 11107  089E  0008               	return
 11108                           
 11109                           ;MCU_B1.c: 252: INTF = 0;
 11110  089F  108B               	bcf	11,1	;volatile
 11111                           
 11112                           ;MCU_B1.c: 253: INTE = 0;
 11113  08A0  120B               	bcf	11,4	;volatile
 11114  08A1  0008               	return
 11115  08A2                     __end_of_INT_ISR:	
 11116                           ;MCU_B1.c: 254: ;;
 11117                           ;MCU_B1.c: 255: ;;
 11118                           
 11119  007E                     btemp	set	126	;btemp
 11120  007E                     pic14e$flags	set	126
 11121  007E                     wtemp	set	126
 11122  007E                     wtemp0	set	126
 11123  0080                     wtemp1	set	128
 11124  0082                     wtemp2	set	130
 11125  0084                     wtemp3	set	132
 11126  0086                     wtemp4	set	134
 11127  0088                     wtemp5	set	136
 11128  007F                     wtemp6	set	127
 11129  007E                     ttemp	set	126
 11130  007E                     ttemp0	set	126
 11131  0081                     ttemp1	set	129
 11132  0084                     ttemp2	set	132
 11133  0087                     ttemp3	set	135
 11134  007F                     ttemp4	set	127
 11135  007E                     ltemp	set	126
 11136  007E                     ltemp0	set	126
 11137  0082                     ltemp1	set	130
 11138  0086                     ltemp2	set	134
 11139  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         177
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     54      77
    BANK1            80      0      79
    BANK2            80      0      69
    BANK3            80      0      37
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    Sw	PTR struct Switch size(2) Largest target is 9
		 -> NULL(NULL[0]), Sw3(BANK2[9]), Sw2(BANK1[9]), Sw1(BANK1[9]), 

    WDT	PTR struct WDT size(1) Largest target is 2
		 -> NULL(NULL[0]), _WDT(COMMON[2]), 

    Timer0	PTR struct Timer0 size(1) Largest target is 8
		 -> NULL(NULL[0]), VarTimer0(BANK1[8]), 

    Memory	PTR struct FlashMemory size(1) Largest target is 37
		 -> NULL(NULL[0]), VarMemory(BANK3[37]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK0[4]), VarLED3(BANK1[4]), VarLED2(BANK1[4]), 
		 -> VarLED1(BANK0[4]), 

    product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), _product(BANK2[32]), 

    myMain	PTR struct myMain size(1) Largest target is 16
		 -> NULL(NULL[0]), _myMain(BANK2[16]), 

    DimmerLights33	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights3(BANK1[15]), 

    DimmerLights22	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights2(BANK1[15]), 

    DimmerLights11	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights1(BANK1[15]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights3(BANK1[15]), DimmerLights2(BANK1[15]), DimmerLights1(BANK1[15]), 

    Dimmer	PTR struct Dimmer size(1) Largest target is 3
		 -> NULL(NULL[0]), Dimmer1(BANK0[3]), 

    DimmerLightsIntr	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights3(BANK1[15]), DimmerLights2(BANK1[15]), DimmerLights1(BANK1[15]), 

    DimmerLightsIntrIOC	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights3(BANK1[15]), DimmerLights2(BANK1[15]), DimmerLights1(BANK1[15]), 

    Buz	PTR struct Buzzer size(1) Largest target is 12
		 -> NULL(NULL[0]), Buz1(BANK2[12]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _TMR0_ISR->_setDimmerLights_IntrControl
    _setDimmerLights_IntrControl->_DimmerIntrPointSelect
    _setDimmerReClock->_setDimmerLights_IntrIOC_GO
    _setDimmerLights_IntrIOC_GO->_DimmerIntrIOCPointSelect

Critical Paths under _main in BANK0

    _main->_Flash_Memory_Initialization
    _my_Main->_setBuz
    _setSw_Enable->_SwPointSelect
    _Switch_Main->_setSw_Main
    _setSw_Main->_Sw_DimmerOnFunc
    _Sw_DimmerOnFunc->_setBuz
    _Sw_DimmerOffFunc->_setDimmerLights_AdjGo
    _Sw_DimmerOffFunc->_setDimmerLights_Switch
    _Sw_DimmerOffFunc->_setDimmerLights_Trigger
    _Sw_DimmerOffFunc->_setDimmerLights_TriggerAdj
    _setDimmerLights_Trigger->_DimmerLightsPointSelect
    _setDimmerLights_Switch->_DimmerLightsPointSelect
    _Sw_DimmerAdjFunc->_setDimmerLights_AdjGo
    _Sw_DimmerAdjFunc->_setDimmerLights_TriggerAdj
    _setDimmerLights_TriggerAdj->_DimmerLightsPointSelect
    _setDimmerLights_AdjGo->_DimmerLightsPointSelect
    _Switch_Initialization->_setSw_Initialization
    _setSw_Initialization->_setLED
    _Mcu_Initialization->_TMR0_Set
    _Mcu_Initialization->_WDT_Set
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Flash_Memory_Main->_Flash_Memory_Modify
    _Flash_Memory_Modify->_Flash_Memory_Read
    _Flash_Memory_Initialization->_setPercentValue
    _setPercentValue->___fttol
    ___fttol->___ftdiv
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setBuz
    _setDimmerLights_Adj->_DimmerLightsPointSelect
    _setDimmerLights->_setLED
    _setLED->_LedPointSelect
    _setBuz->___awdiv
    _DimmerLights_Close->_getDimmerLights_StatusFlag
    _DimmerLights_Close->_setMemory_GO
    _DimmerLights_Initialization->_setDimmerLights_Initialization
    _setDimmerLights_Initialization->_DimmerLightsPointSelect

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4   17184
                                             50 BANK0      4     0      4
              _Buzzer_Initialization
                        _Buzzer_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
        _Flash_Memory_Initialization
                  _Flash_Memory_Main
                 _LED_Initialization
                           _LED_Main
                 _Mcu_Initialization
              _Switch_Initialization
                        _Switch_Main
                           _WDT_Main
              _myMain_Initialization
                            _my_Main
 ---------------------------------------------------------------------------------
 (1) _my_Main                                              0     0      0    1099
                             _setBuz
                       _setSw_Enable
 ---------------------------------------------------------------------------------
 (2) _setSw_Enable                                         1     1      0     132
                                              1 BANK0      1     1      0
                      _SwPointSelect
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              0 BANK0      1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Switch_Main                                          0     0      0    4584
                         _setSw_Main
 ---------------------------------------------------------------------------------
 (2) _setSw_Main                                           3     3      0    4584
                                             19 BANK0      3     3      0
                      _SwPointSelect
                   _Sw_DimmerAdjFunc
                   _Sw_DimmerOffFunc
                    _Sw_DimmerOnFunc
                             _setBuz
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerOnFunc                                      6     6      0    1651
                                             13 BANK0      6     6      0
                             _setBuz
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerOffFunc                                     3     3      0    1062
                                              4 BANK0      3     3      0
              _setDimmerLights_AdjGo
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
         _setDimmerLights_TriggerAdj
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Trigger                              2     1      1     238
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Switch                               2     1      1     238
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerAdjFunc                                     6     6      0     684
                                              4 BANK0      6     6      0
              _setDimmerLights_AdjGo
         _setDimmerLights_TriggerAdj
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_TriggerAdj                           2     1      1     238
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_AdjGo                                2     1      1     238
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _SwPointSelect                                        1     1      0      66
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Switch_Initialization                                0     0      0     990
                         _TouchPower
               _setSw_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSw_Initialization                                 1     1      0     990
                                              4 BANK0      1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _TouchPower                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   1     1      0       0
                                              1 BANK0      1     1      0
                            _ADC_Set
                           _Fosc_Set
                            _INT_Set
                            _IOC_Set
                             _IO_Set
                           _TMR0_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Set                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IOC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INT_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0     279
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0     279
                                              2 BANK0      3     3      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    1145
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    1145
                                              4 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Main                                    0     0      0     227
                _Flash_Memory_Modify
 ---------------------------------------------------------------------------------
 (2) _Flash_Memory_Modify                                  3     3      0     227
                                              4 BANK0      3     3      0
               _Flash_Memory_Erasing
                  _Flash_Memory_Read
                 _Flash_Memory_Write
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Erasing                                 0     0      0       0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Initialization                          2     2      0    5554
                                             48 BANK0      2     2      0
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                    _setPercentValue
 ---------------------------------------------------------------------------------
 (2) _setPercentValue                                      4     4      0    5283
                                             44 BANK0      4     4      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     380
                                             30 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2640
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2195
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1976
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Write                                   2     2      0      90
                                              0 BANK0      2     2      0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (4) _Flash_Memory_Unlock                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Read                                    4     4      0      47
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0    3218
                 _DimmerLights_Close
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 6     6      0    3104
                                             13 BANK0      6     6      0
            _DimmerLightsPointSelect
                             _setBuz
                    _setDimmerLights
                _setDimmerLights_Adj
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Adj                                  3     2      1     238
                                              2 BANK0      3     2      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights                                      3     2      1    1369
                                              4 BANK0      3     2      1
            _DimmerLightsPointSelect
                             _setLED
                       _setMemory_GO
 ---------------------------------------------------------------------------------
 (3) _setLED                                               2     1      1     959
                                              2 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (4) _LedPointSelect                                       2     2      0     124
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _setBuz                                               4     2      2     967
                                              9 BANK0      4     2      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     428
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_Close                                   0     0      0     114
         _getDimmerLights_StatusFlag
                       _setMemory_GO
 ---------------------------------------------------------------------------------
 (4) _setMemory_GO                                         3     3      0      66
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _getDimmerLights_StatusFlag                           3     3      0      48
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          1     1      0      88
                                              4 BANK0      1     1      0
              _Dimmer_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       2     2      0      88
                                              2 BANK0      2     2      0
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (5) _DimmerLightsPointSelect                              2     2      0      66
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Dimmer_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Main                                          4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  1     1      0     418
                                              7 COMMON     1     1      0
                            _INT_ISR
                            _IOC_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0     308
                        _Buz_Counter
        _setDimmerLights_IntrControl
 ---------------------------------------------------------------------------------
 (8) _setDimmerLights_IntrControl                          5     5      0     308
                                              2 COMMON     5     5      0
              _DimmerIntrPointSelect
 ---------------------------------------------------------------------------------
 (9) _DimmerIntrPointSelect                                2     2      0      66
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _Buz_Counter                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _IOC_ISR                                              0     0      0     110
                   _setDimmerReClock
 ---------------------------------------------------------------------------------
 (8) _setDimmerReClock                                     0     0      0     110
         _setDimmerLights_IntrIOC_GO
 ---------------------------------------------------------------------------------
 (9) _setDimmerLights_IntrIOC_GO                           1     1      0     110
                                              2 COMMON     1     1      0
           _DimmerIntrIOCPointSelect
 ---------------------------------------------------------------------------------
 (10) _DimmerIntrIOCPointSelect                            2     2      0      66
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _INT_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Initialization
   _Buzzer_Main
   _DimmerLights_Initialization
     _Dimmer_Initialization
     _setDimmerLights_Initialization
       _DimmerLightsPointSelect
   _DimmerLights_Main
     _DimmerLights_Close
       _getDimmerLights_StatusFlag
       _setMemory_GO
     _setDimmerLights_Main
       _DimmerLightsPointSelect
       _setBuz
         ___awdiv
       _setDimmerLights
         _DimmerLightsPointSelect
         _setLED
           _LedPointSelect
         _setMemory_GO
       _setDimmerLights_Adj
         _DimmerLightsPointSelect
   _Flash_Memory_Initialization
     _Flash_Memory_Read
     _Flash_Memory_Write
       _Flash_Memory_Unlock
     _setPercentValue
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _Flash_Memory_Main
     _Flash_Memory_Modify
       _Flash_Memory_Erasing
         _Flash_Memory_Unlock
       _Flash_Memory_Read
       _Flash_Memory_Write
         _Flash_Memory_Unlock
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _INT_Set
     _IOC_Set
     _IO_Set
     _TMR0_Set
     _WDT_Set
   _Switch_Initialization
     _TouchPower
     _setSw_Initialization
       _setLED
         _LedPointSelect
   _Switch_Main
     _setSw_Main
       _SwPointSelect
       _Sw_DimmerAdjFunc
         _setDimmerLights_AdjGo
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
       _Sw_DimmerOffFunc
         _setDimmerLights_AdjGo
           _DimmerLightsPointSelect
         _setDimmerLights_Switch
           _DimmerLightsPointSelect
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
       _Sw_DimmerOnFunc
         _setBuz
           ___awdiv
         _setDimmerLights_Switch
           _DimmerLightsPointSelect
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
       _setBuz
         ___awdiv
   _WDT_Main
     _WDT_Clearing
   _myMain_Initialization
   _my_Main
     _setBuz
       ___awdiv
     _setSw_Enable
       _SwPointSelect

 _ISR (ROOT)
   _INT_ISR
   _IOC_ISR
     _setDimmerReClock
       _setDimmerLights_IntrIOC_GO
         _DimmerIntrIOCPointSelect
   _TMR0_ISR
     _Buz_Counter
     _setDimmerLights_IntrControl
       _DimmerIntrPointSelect

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     36      4D       5       96.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      45       9       86.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      25      11       46.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     114      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     114      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Oct 13 16:44:21 2014

                   __size_of_Switch_Main 000C                    ?_Flash_Memory_Erasing 0070  
                           _WDT_Clearing 0002             ??_setDimmerLights_TriggerAdj 0023  
                                     _RD 0CA8                                       _WR 0CA9  
                           ___awdiv@sign 0026                                       _Sw 0056  
     __end_of_getDimmerLights_StatusFlag 09C7               _getDimmerLights_StatusFlag 09B4  
              setDimmerLights_Adj@lights 0024                     _setDimmerLights_Main 0568  
                                    l455 0AA4                                      l456 0AAC  
                                    l976 0C12                                      _GIE 005F  
                                    _RA0 0060     __size_of_DimmerLights_Initialization 001E  
                                    _RB1 0069                                      _RA3 0063  
                                    _RA4 0064                                      _LED 005E  
                                    _RB3 006B                                      _RB4 006C  
                                    _RA6 0066                                      _RB5 006D  
                                    _RA7 0067                                      _RC5 0075  
                                    _RC6 0076                                      _RC7 0077  
                                    _ISR 0004                                      _WDT 007D  
                                    _Sw1 00CD                                      _Sw2 00D6  
                                    _Buz 0058                                      _Sw3 013C  
              setDimmerLights_Adj@status 0022                            ??_Buz_Counter 0070  
                  _Buzzer_Initialization 08BA                          __end_of_ADC_Set 08A9  
                                    wreg 0009     setDimmerLights_Initialization@lights 0023  
                        _setDimmerLights 076A                    _setDimmerLights_AdjGo 0915  
                                   ?_ISR 0070                             ___ftdiv@cntr 0038  
                        __end_of_IOC_ISR 0992                             ___ftdiv@sign 003D  
                                   l2000 0E45                 ?_DimmerLightsPointSelect 0070  
                                   l4020 0ED7                                     l4022 0ED9  
                                   l4006 0763                                     l4032 0EEC  
                                   l4130 060F                                     l4034 0EEE  
                                   l4116 04A4                                     l4108 048B  
                                   l4044 0F01                                     l1724 0739  
                        __end_of_IOC_Set 08EA                                     l4150 064D  
                                   l5112 0FA9                                     l5120 0FB5  
                                   l4160 0666                                     l5130 0FC5  
                                   l5202 057D                                     l1667 087E  
                                   l5116 0FAF                                     l5108 0FA3  
                                   l5204 0580                                     l4164 0674  
                                   l4156 065A                                     l4148 063F  
                                   l4500 0EB8                                     l1748 0F05  
                                   l4068 0D9B                                     l3630 0DBD  
                                   l5150 0FEB                                     l5134 0FCB  
                                   l5126 0FBF                                     l5214 058C  
                                   l4078 0B56                                     l4094 044A  
                                   l4158 0663                                     l3640 0DC5  
                                   l3624 0DB2                                     l5216 058F  
                                   l4088 0434                                     l3642 0DD1  
                                   l5154 0FF1                                     l5146 0FE5  
                                   l5138 0FD1                                     l5242 05C6  
                                   l5226 059B                                     l1698 021D  
                                   l4620 0525                                     l3652 0DEC  
                                   l5092 0B81                                     l5228 05A0  
                                   l4532 0204                                     l5340 0C65  
                                   l3670 06B8                                     l5158 0FF7  
                                   l5254 05F0                                     l5238 05BB  
                                   l4632 055A                                     l3840 09C0  
                                   l3656 0DF4                                     l3648 0DE3  
                                   l5096 0B8A                                     l5088 0B78  
                                   l5280 0CC4                                     l4552 024B  
                                   l4536 0211                                     l4800 0F61  
                                   l4626 054D                                     l3674 06D6  
                                   l5186 07B3                                     l1994 0E2E  
                                   l4490 0E62                                     l4562 027D  
                                   l4628 0553                                     l3916 0BF8  
                                   l5284 0CCB                                     l5276 0CBD  
                                   l4572 02B9                                     l4580 02E8  
                                   l3790 0E1A                                     l3782 0E04  
                                   l4718 03AD                                     l4496 0E79  
                                   l3952 0AE4                                     l4808 0F8D  
                                   l3786 0E0B                                     l4762 0D0F  
                                   l3970 070D                                     l3796 0E33  
                                   l3788 0E15                                     l3948 0ADB  
                                   l3980 0720                                     l3878 0BD0  
                                   l3798 0E3B                                     l3982 0722  
                                   l3992 0735                                     l3968 070B  
                  _myMain_Initialization 09C7                                     _CFGS 0CAE  
                                   _FREE 0CAC                                     _LATA 010C  
                                   _LATB 010D                          __end_of_INT_ISR 08A2  
                                   _LATC 010E                                     u2505 0DD2  
                                   u2515 0DDC                                     u2525 0DE4  
                                   u3405 04A5                                     u4315 04E6  
                                   u3435 0616                                     u2485 0DC8  
                                   u3365 045C                                     u2815 0E10  
                                   u3375 046C                                     u3385 048C  
                                   u3465 0640                                     u2835 0E29  
                                   u3395 049B                                     _PEIE 005E  
                                   u4525 0F41                                     _INTE 005C  
                                   _INTF 0059                                     u2855 0E36  
                                   u3495 065B                                     u4535 0F77  
                                   u2885 0E4C                                     u4485 0CF6  
                                   _LWLO 0CAD                                     _TMR0 0015  
                        __end_of_INT_Set 088F                                     _WREN 0CAA  
                                   _Buz1 0130                                     __WDT 007A  
                                   _main 0C4F                             ___ftpack@arg 0020  
                           ___ftpack@exp 0023                                     fsr0h 0005  
                                   fsr1h 0007                                     fsr0l 0004  
                                   indf0 0000                                     indf1 0001  
                                   fsr1l 0006      __size_of_setDimmerLights_TriggerAdj 000F  
                                   btemp 007E                          __end_of_WDT_Set 0A02  
                                   ltemp 007E                         _setDimmerReClock 08F7  
                                   start 0016                                     ttemp 007E  
                                   wtemp 007E                                    ??_ISR 0077  
                           ___fttol@exp1 004B                             ___fttol@lval 0047  
         __size_of_DimmerIntrPointSelect 001A                         __end_of_LED_Main 0981  
          __end_of_DimmerIntrPointSelect 0A80                    ?_setDimmerLights_Main 0070  
                                  ?_main 0052                          __end_of___awdiv 0DFB  
                        __end_of___ftdiv 04C6                          ___awdiv@divisor 0020  
                        __end_of___fttol 067D             setDimmerLights_AdjGo@command 0022  
                                  _IOCBF 0396                                    _IOCBN 0395  
                                  _IOCBP 0394                                    _IOCIE 005B  
                                  _IOCIF 0058                                    i1l407 0A6F  
                                  i1l408 0A77                                    i1l396 0A55  
                                  i1l397 0A5D                   _setDimmerLights_Switch 0933  
                        ___awdiv@counter 0025                                    _PORTA 000C  
                                  _PORTB 000D                                    _PORTC 000E  
                           ?_setLED_Main 0070                                    _TRISA 008C  
                                  _TRISB 008D                                    _TRISC 008E  
                                  _WPUB0 1068                                    _WPUB1 1069  
                                  _WPUB2 106A                            __CFG_WRT$HALF 0000  
     __end_of_setDimmerLights_IntrIOC_GO 0B2B               _setDimmerLights_IntrIOC_GO 0B0B  
                       __end_of_TMR0_ISR 0C4F                         __end_of_TMR0_Set 08F7  
                          ___awtoft@sign 002D              DimmerIntrPointSelect@lights 0071  
                          ___ftpack@sign 0024                          __end_of_my_Main 0F93  
                          ??_Buzzer_Main 0020                         __end_of_WDT_Main 0A4C  
                    setMemory_GO@command 0022                           __CFG_BOREN$OFF 0000  
                    __end_of_Buz_Counter 09A3                       Flash_Memory_Read@i 0021  
                                  ltemp0 007E                                    ltemp1 0082  
                                  ltemp2 0086                                    ltemp3 0080  
         __size_of_setLED_Initialization 0010            __end_of_setLED_Initialization 0961  
                                  ttemp0 007E                                    ttemp1 0081  
                                  ttemp2 0084                                    ttemp3 0087  
                                  ttemp4 007F                                    status 0003  
                                  wtemp0 007E                                    wtemp1 0080  
                                  wtemp2 0082                                    wtemp3 0084  
                                  wtemp4 0086                                    wtemp5 0088  
                                  wtemp6 007F                     _Sw_DimmerOnFunc$4005 002E  
                   _Sw_DimmerOnFunc$4006 002F                     _Sw_DimmerOnFunc$4007 0030  
            __size_of_Flash_Memory_Write 002F                setDimmerLights_Main@clear 0031  
                 ??_Flash_Memory_Erasing 0020                          __initialization 0018  
                      ??_Sw_DimmerOnFunc 002D                        ??_setPercentValue 004C  
                           __end_of_main 0C8E                         __end_of_Fosc_Set 087E  
                              ??_ADC_Set 0020                  __end_of_setDimmerLights 07D8  
                   _setSw_Initialization 08A9                                   ??_main 0056  
                          ___fttol@sign1 0046                   ?_Buzzer_Initialization 0070  
      __size_of_DimmerIntrIOCPointSelect 001A                ?_DimmerIntrIOCPointSelect 0070  
                              ??_IOC_ISR 0073                                ??_IOC_Set 0020  
        __end_of_DimmerLightsPointSelect 0AB5                                ??_INT_ISR 0070  
                 ?_setDimmerLights_AdjGo 0022                                ??_INT_Set 0020  
                ??_Switch_Initialization 0025                   ?_myMain_Initialization 0070  
                                 _ADCON0 009D                                   _ADCON1 009E  
                                 _ADRESH 009C                                   _ADRESL 009B  
                       ___awdiv@dividend 0022                                ??_WDT_Set 0020  
                       __end_of___awtoft 0B6D                                   _ANSELA 018C  
                                 _ANSELB 018D                                   _ANSELC 018E  
                       __end_of___ftpack 0E5C                                   _IOCBF2 1CB2  
                _setDimmerLights_Trigger 0942                                   i1l4230 011F  
                                 i1l4222 0102                                   i1l4216 00EC  
                                 i1l4224 0107                                   i1l4234 0133  
                                 i1l4218 00F1                                   i1l4244 015B  
                                 i1l4246 0160                                   i1l4238 0144  
                                 i1l4190 00A0                                   i1l4264 0192  
                                 i1l4282 01BE                                   i1l4194 00A6  
                                 i1l4278 01B8                                   i1l4286 01C4  
                                 i1l4198 00AD                                   _FVRCON 0117  
                                 _PMADRH 0192                                   _PMADRL 0191  
                                 u441_25 0C3E                                   _PMDATH 0194  
                                 u354_25 0080                                   _PMDATL 0193  
                                 _PMCON2 0196                                   _OSCCON 0099  
                                 _TMR0IE 005D                                   _TMR0IF 005A  
                                 _IO_Set 0A02                                   _WDTCON 0097  
                  _Dimmer_Initialization 0883                                   _Dimmer 0059  
             __end_of_Mcu_Initialization 0A9A                      __end_of_Buzzer_Main 0568  
                                 _Memory 006C                                   _Timer0 007C  
     __end_of_setDimmerLights_TriggerAdj 0933               _setDimmerLights_TriggerAdj 0924  
          setDimmerLights_Switch@command 0022                                ??___awdiv 0024  
                              ??___ftdiv 0034                    setDimmerLights@lights 0026  
                              ??___fttol 0042             ?_Flash_Memory_Initialization 0070  
                 ??_setDimmerLights_Main 002D                                   _setLED 0F93  
                                 _myMain 006A                _setDimmerLights_Main$1556 002E  
              _setDimmerLights_Main$1557 002F                _setDimmerLights_Main$1558 0030  
                       _DimmerLightsIntr 0078                    ?_setSw_Initialization 0070  
                  setDimmerLights@status 0024                         ___awdiv@quotient 0027  
                                 _setBuz 067D         ??_setDimmerLights_Initialization 0022  
        ?_setDimmerLights_Initialization 0070             ??_getDimmerLights_StatusFlag 0020  
                              ??_my_Main 002D      __end_of_setDimmerLights_IntrControl 01EB  
            _setDimmerLights_IntrControl 004B                 Flash_Memory_Read@address 0022  
                            _Buz_Counter 0992                    __end_of_SwPointSelect 0AED  
           __size_of_Flash_Memory_Modify 0064        setDimmerLights_IntrControl@lights 0076  
            __size_of_DimmerLights_Close 0014                  __size_of_LedPointSelect 0026  
                    Flash_Memory_Write@i 0021             __size_of_Flash_Memory_Unlock 0009  
                             _TouchPower 087E                        ?_Sw_DimmerAdjFunc 0070  
                __end_of__initialization 0047              setDimmerLights_AdjGo@lights 0023  
                              ?_LED_Main 0070                       ??_Sw_DimmerAdjFunc 0024  
                    setSw_Enable@command 0021                               ___ftdiv@f1 0031  
                             ___ftdiv@f2 002E                               ___ftdiv@f3 0039  
                      ?_Sw_DimmerOffFunc 0070                               ___awtoft@c 0028  
           ?_DimmerLights_Initialization 0070                               ___fttol@f1 003E  
                         __pcstackCOMMON 0070           DimmerIntrIOCPointSelect@lights 0071  
                     ??_Sw_DimmerOffFunc 0024                             __pidataBANK2 0B2B  
                              ?_TMR0_ISR 0070                                ?_TMR0_Set 0070  
           __size_of_setDimmerLights_Adj 002E                       _LED_Initialization 0961  
            ?_getDimmerLights_StatusFlag 0070            ??_Flash_Memory_Initialization 0050  
                       ?_setDimmerLights 0024                                ?_WDT_Main 0070  
               __end_of_setDimmerReClock 0906                      ?_LED_Initialization 0070  
                         _DimmerLights11 005B                           _DimmerLights22 005C  
                         _DimmerLights33 005D                     __size_of_setLED_Main 0044  
              ??_setDimmerLights_Trigger 0023             setDimmerLights_Switch@lights 0023  
                             __pbssBANK0 0056                               __pbssBANK1 00A0  
                             __pbssBANK2 0120                               __pbssBANK3 01A0  
                              ?_Fosc_Set 0070                              _Buzzer_Main 04C6  
                 ?_Dimmer_Initialization 0070                                  ?_IO_Set 0070  
                             ??_LED_Main 0025                            ?_setMemory_GO 0070  
                        __CFG_VCAPEN$OFF 0000                               __pnvCOMMON 007C  
                          ??_Switch_Main 0036                     ??_LED_Initialization 0025  
                           _DimmerLights 005A                        LedPointSelect@led 0021  
                            setBuz@count 002C                               __pmaintext 0C4F  
       __size_of_DimmerLightsPointSelect 001B            ??_DimmerLights_Initialization 0024  
                             ??_TMR0_ISR 0077                               ??_TMR0_Set 0020  
                             __pintentry 0004                   ??_setSw_Initialization 0024  
                          ?_setSw_Enable 0070                  ?_setDimmerLights_Switch 0022  
                   Sw_DimmerAdjFunc@Idle 0028                                  ?_setLED 0022  
                                _ADC_Set 08A2                                  ?_setBuz 0029  
                              ?___awtoft 0028                                ?___ftpack 0020  
                             ??_WDT_Main 0020                        Sw_DimmerOnFunc@sw 0032  
                                _IOC_ISR 0981                                  _IOC_Set 08DD  
                                _INT_ISR 089B                                  _INT_Set 0889  
                      _Flash_Memory_Main 0CD2                        _Flash_Memory_Read 0A1A  
            ?_setDimmerLights_IntrIOC_GO 0070                       ?_Flash_Memory_Main 0070  
                     ?_Flash_Memory_Read 0070                                  _WDT_Set 09EE  
                             ??_Fosc_Set 0020                              ?_TouchPower 0070  
                        _Sw_DimmerOnFunc 06F4                          _setPercentValue 0D17  
                         ??_setMemory_GO 0020                                  _Dimmer1 0067  
                        __size_of_IO_Set 0018                      ??_Flash_Memory_Main 0027  
                    ??_Flash_Memory_Read 0020                                  _VarLED1 0063  
                                _VarLED2 00E7                                  _VarLED3 00EB  
       __end_of_DimmerIntrIOCPointSelect 0A66          __end_of_setDimmerLights_Trigger 0951  
         __end_of_setDimmerLights_Switch 0942                                  ___awdiv 0DA7  
                         ??_setSw_Enable 0021                                  ___ftdiv 041D  
                                ___fttol 05F6                      __end_of_Switch_Main 08DD  
                ??_Buzzer_Initialization 0020                                  __myMain 0120  
                             ??___awtoft 002B                               ??___ftpack 0025  
                        __size_of_setLED 006D                          __size_of_setBuz 0077  
                                __ptext1 0F27                                  __ptext2 0B93  
                                __ptext3 09C7                                  __ptext4 0A33  
                                __ptext5 0002                                  __ptext6 08D1  
                                __ptext7 01EB                                  __ptext8 06F4  
                                __ptext9 0D5D                  ??_setDimmerLights_AdjGo 0023  
                    Sw_DimmerOnFunc@Idle 0031                    _DimmerIntrPointSelect 0A66  
                           __size_of_ISR 0012                __end_of_Flash_Memory_Main 0D17  
              __end_of_Flash_Memory_Read 0A33                  ??_myMain_Initialization 0020  
                      _DimmerLights_Main 0906                                  _my_Main 0F27  
          DimmerLightsPointSelect@lights 0021                       ?_DimmerLights_Main 0070  
                                _product 006B                           _LedPointSelect 0B6D  
                                clrloop0 0896           __size_of_Switch_Initialization 0011  
          __end_of_Switch_Initialization 09B4                     end_of_initialization 0047  
             __end_of_Flash_Memory_Write 0C19                                  init_ram 088F  
                    ??_DimmerLights_Main 0033                     Flash_Memory_Read@ret 0023  
                                initloop 0890                               _setSw_Main 01EB  
                   Flash_Memory_Modify@i 0026                    _setLED_Initialization 0951  
            ?_setDimmerLights_TriggerAdj 0022            __size_of_Flash_Memory_Erasing 000C  
                    _Flash_Memory_Modify 0E5C                      _Flash_Memory_Unlock 08B1  
       getDimmerLights_StatusFlag@Status 0021                      __size_of_TouchPower 0005  
               setLED_Initialization@led 0024                   setSw_Initialization@sw 0024  
              __end_of_DimmerLights_Main 0915                       _Mcu_Initialization 0A80  
                       __CFG_FOSC$INTOSC 0000                             ?_Buz_Counter 0070  
                 __end_of_LedPointSelect 0B93                  __end_of_Sw_DimmerOnFunc 076A  
                __end_of_setPercentValue 0D5D                      ?_Mcu_Initialization 0070  
                   ?_Flash_Memory_Modify 0070                      _setDimmerLights_Adj 0BBC  
                   ?_Flash_Memory_Unlock 0070                              ___ftdiv@exp 003C  
                         __end_of_IO_Set 0A1A                              _Switch_Main 08D1  
                      __size_of_LED_Main 0010                  _DimmerLightsPointSelect 0A9A  
                   ??_Mcu_Initialization 0021                            ?_WDT_Clearing 0070  
                   ?_setDimmerLights_Adj 0022                __size_of_Sw_DimmerAdjFunc 0067  
               _DimmerIntrIOCPointSelect 0A4C                        __size_of_TMR0_ISR 0036  
                 ?_DimmerIntrPointSelect 0070                        __size_of_TMR0_Set 000D  
                   __end_of_setMemory_GO 0AD0            __size_of_setDimmerLights_Main 008E  
                         __end_of_setLED 1000                           __end_of_setBuz 06F4  
        _getDimmerLights_StatusFlag$1562 0022                __size_of_Sw_DimmerOffFunc 004A  
             __size_of_Flash_Memory_Main 0045               __size_of_Flash_Memory_Read 0019  
                      __size_of_WDT_Main 0019                        ?_setDimmerReClock 0070  
                    start_initialization 0018                          ?_LedPointSelect 0070  
             __end_of_DimmerLights_Close 09EE                              __end_of_ISR 0016  
                  ??_Flash_Memory_Modify 0024                       ??_setDimmerReClock 0073  
                  ??_Flash_Memory_Unlock 0020                  ??_Dimmer_Initialization 0020  
                   __end_of_setSw_Enable 0BBC                             ?_Buzzer_Main 0070  
                               ??_IO_Set 0020                                _VarErrLED 005F  
                            ?_setSw_Main 0070                   ?_setLED_Initialization 0070  
                     Sw_DimmerAdjFunc@sw 0029                        __size_of_Fosc_Set 0004  
                              _VarMemory 01A0                                _VarTimer0 00DF  
                         ??_WDT_Clearing 0020                    ??_setDimmerLights_Adj 0023  
                 __size_of_SwPointSelect 001D                              __pdataBANK2 0145  
                               ??_setLED 0023                                 ?_ADC_Set 0070  
                               ??_setBuz 002B               __size_of_DimmerLights_Main 000F  
                          ??_setLED_Main 0022                        __size_of___awtoft 0022  
                      __size_of___ftpack 0061                                 ?_IOC_ISR 0070  
                            __pbssCOMMON 0078                                 ?_IOC_Set 0070  
                              ___latbits 0003                                 ?_INT_ISR 0070  
                       ?_Sw_DimmerOnFunc 0070                            __pcstackBANK0 0020  
                               ?_INT_Set 0070                         ?_setPercentValue 0070  
               __size_of_setDimmerLights 006E                                 ?_WDT_Set 0070  
                           ??_TouchPower 0020                            _DimmerLights1 00A0  
                          _DimmerLights2 00AF                            _DimmerLights3 00BE  
              ??_DimmerLightsPointSelect 0020                                __pnvBANK0 006A  
            __size_of_LED_Initialization 0010                               setBuz@time 0029  
    __end_of_Flash_Memory_Initialization 041D              _Flash_Memory_Initialization 0336  
                               ?___awdiv 0020                                 ?___ftdiv 002E  
                               ?___fttol 003E            __size_of_setSw_Initialization 0008  
         __size_of_Buzzer_Initialization 000B            __end_of_Buzzer_Initialization 08C5  
                       setPercentValue@i 004D                       __end_of_TouchPower 0883  
               ?_setDimmerLights_Trigger 0022                      __size_of_setSw_Main 014B  
         __size_of_setDimmerLights_AdjGo 000F            __end_of_setDimmerLights_AdjGo 0924  
                               ?_my_Main 0070           __size_of_myMain_Initialization 0013  
          __end_of_myMain_Initialization 09DA                            _SwPointSelect 0AD0  
                   __size_of_Buz_Counter 0011                       Sw_DimmerOffFunc@sw 0026  
                    __end_of_setLED_Main 0CD2                      _DimmerLightsIntrIOC 0079  
                               _LED_Main 0971                          SwPointSelect@sw 0020  
                              clear_ram0 0895      __end_of_DimmerLights_Initialization 0B0B  
            _DimmerLights_Initialization 0AED           setDimmerLights_Trigger@command 0022  
                               _GO_nDONE 04E9                    __size_of_setMemory_GO 001B  
                     _Flash_Memory_Write 0BEA                                 _TMR0_ISR 0C19  
                               _TMR0_Set 08EA                         _Sw_DimmerAdjFunc 0EC0  
      setDimmerLights_TriggerAdj@command 0022                                 _WDT_Main 0A33  
                       __size_of_ADC_Set 0007                      ?_Flash_Memory_Write 0070  
                       _Sw_DimmerOffFunc 0D5D                    _Sw_DimmerAdjFunc$4017 0025  
                  _Sw_DimmerAdjFunc$4018 0026                    _Sw_DimmerAdjFunc$4019 0027  
                  __size_of_setSw_Enable 0029                             setSw_Main@sw 0035  
       setDimmerLights_IntrIOC_GO@lights 0072                         __size_of_IOC_ISR 0011  
           ?_setDimmerLights_IntrControl 0070                         __size_of_IOC_Set 000D  
           __end_of_Flash_Memory_Erasing 08D1                           ?_SwPointSelect 0070  
                       __size_of_INT_ISR 0007                           setLED_Main@led 0024  
                   __end_of_WDT_Clearing 0004                         __size_of_INT_Set 0006  
                               _Fosc_Set 087A                         __size_of_WDT_Set 0014  
                  _Switch_Initialization 09A3                     ??_Flash_Memory_Write 0020  
                      ??_setDimmerLights 0025                             _setMemory_GO 0AB5  
                   __size_of_Buzzer_Main 00A2                             ?_Switch_Main 0070  
             ??_DimmerIntrIOCPointSelect 0070             Flash_Memory_Initialization@i 0051  
                              setLED@led 0023                  ??_DimmerIntrPointSelect 0070  
                       __size_of___awdiv 0054                         __size_of___ftdiv 00A9  
                           _setSw_Enable 0B93                         __size_of___fttol 0087  
                               ___awtoft 0B4B                         ??_LedPointSelect 0020  
                               ___ftpack 0DFB                              _setLED_Main 0C8E  
                       __size_of_my_Main 006C                                 __ptext10 0942  
                               __ptext11 0933                                 __ptext20 09EE  
                               __ptext12 0EC0                                 __ptext21 08EA  
                               __ptext13 0924                                 __ptext30 0951  
                               __ptext22 0A02                                 __ptext14 0915  
                               __ptext31 0CD2                                 __ptext23 08DD  
                               __ptext15 0AD0                                 __ptext40 0BEA  
                               __ptext32 0E5C                                 __ptext24 0889  
                               __ptext16 09A3                                 __ptext41 08B1  
                               __ptext33 08C5                                 __ptext25 087A  
                               __ptext17 08A9                                 __ptext50 0DA7  
                               __ptext42 0A1A                                 __ptext34 0336  
                               __ptext26 08A2                                 __ptext18 087E  
                               __ptext51 09DA                                 __ptext43 0906  
                               __ptext35 0D17                                 __ptext27 0971  
                               __ptext19 0A80                                 __ptext52 0AB5  
                               __ptext44 0568                                 __ptext36 05F6  
                               __ptext28 0C8E                                 __ptext61 0C19  
                               __ptext53 09B4                                 __ptext45 0BBC  
                               __ptext37 041D                                 __ptext29 0961  
                               __ptext62 004B                                 __ptext54 0AED  
                               __ptext46 076A                                 __ptext38 0B4B  
                               __ptext63 0A66                                 __ptext55 07D8  
                               __ptext47 0F93                                 __ptext39 0DFB  
                               __ptext64 0992                                 __ptext56 0A9A  
                               __ptext48 0B6D                                 __ptext65 0981  
                               __ptext57 0883                                 __ptext49 067D  
                               __ptext66 08F7                                 __ptext58 04C6  
                               __ptext67 0B0B                                 __ptext59 08BA  
                               __ptext68 0A4C                                 __ptext69 089B  
                               __product 0145            ??_setDimmerLights_IntrControl 0072  
                ??_setLED_Initialization 0024           __size_of_Dimmer_Initialization 0006  
          __end_of_Dimmer_Initialization 0889             __end_of_setDimmerLights_Main 05F6  
                           ??_setSw_Main 0033                            setLED@command 0022  
                          __size_of_main 003F               setDimmerLights_Main@lights 0032  
                     _DimmerLights_Close 09DA                 ??_setDimmerLights_Switch 0023  
              __size_of_setDimmerReClock 000F      __size_of_getDimmerLights_StatusFlag 0013  
          setDimmerLights_Trigger@lights 0023              __size_of_Mcu_Initialization 001A  
                    ?_DimmerLights_Close 0070         setDimmerLights_TriggerAdj@lights 0023  
                               main@argc 0052                                 main@argv 0054  
            __end_of_Flash_Memory_Modify 0EC0              __end_of_Flash_Memory_Unlock 08BA  
                        ??_SwPointSelect 0020                       __end_of_setSw_Main 0336  
                            pic14e$flags 007E                     ??_DimmerLights_Close 0023  
           ??_setDimmerLights_IntrIOC_GO 0072                                 intlevel1 0000  
                 ?_Switch_Initialization 0070   __end_of_setDimmerLights_Initialization 0800  
__size_of_setDimmerLights_Initialization 0028           _setDimmerLights_Initialization 07D8  
            __end_of_setDimmerLights_Adj 0BEA     __size_of_setDimmerLights_IntrControl 01A0  
                   _Flash_Memory_Erasing 08C5      __size_of_setDimmerLights_IntrIOC_GO 0020  
                             _OPTION_REG 0095                    __size_of_WDT_Clearing 0002  
   __size_of_Flash_Memory_Initialization 00E7                 __end_of_Sw_DimmerAdjFunc 0F27  
           __end_of_setSw_Initialization 08B1               __end_of_LED_Initialization 0971  
       __size_of_setDimmerLights_Trigger 000F                 __size_of_Sw_DimmerOnFunc 0076  
               __size_of_setPercentValue 0046                     setPercentValue@value 004C  
               __end_of_Sw_DimmerOffFunc 0DA7          __size_of_setDimmerLights_Switch 000F  
