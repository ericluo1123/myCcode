

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Fri Oct 17 08:18:52 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2
    70                           	psect	text52,local,class=CODE,merge=1,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,delta=2
    73                           	psect	text55,local,class=CODE,merge=1,delta=2
    74                           	psect	text56,local,class=CODE,merge=1,delta=2
    75                           	psect	text57,local,class=CODE,merge=1,delta=2
    76                           	psect	text58,local,class=CODE,merge=1,delta=2
    77                           	psect	text59,local,class=CODE,merge=1,delta=2
    78                           	psect	text60,local,class=CODE,merge=1,delta=2
    79                           	psect	text61,local,class=CODE,merge=1,delta=2
    80                           	psect	text62,local,class=CODE,merge=1,delta=2
    81                           	psect	text63,local,class=CODE,merge=1,delta=2
    82                           	psect	text64,local,class=CODE,merge=1,delta=2
    83                           	psect	text65,local,class=CODE,merge=1,delta=2
    84                           	psect	text66,local,class=CODE,merge=1,delta=2
    85                           	psect	text67,local,class=CODE,merge=1,delta=2
    86                           	psect	text68,local,class=CODE,merge=1,delta=2
    87                           	psect	text69,local,class=CODE,merge=1,delta=2
    88                           	psect	text70,local,class=CODE,merge=1,inline,delta=2
    89                           	psect	text71,local,class=CODE,merge=1,delta=2
    90                           	psect	text72,local,class=CODE,merge=1,delta=2
    91                           	psect	intentry,global,class=CODE,delta=2
    92                           	psect	text74,local,class=CODE,merge=1,delta=2
    93                           	psect	text75,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text76,local,class=CODE,merge=1,inline,delta=2
    95                           	psect	text77,local,class=CODE,merge=1,delta=2
    96                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
    97                           	psect	text79,local,class=CODE,merge=1,inline,delta=2
    98                           	psect	text80,local,class=CODE,merge=1,inline,delta=2
    99                           	psect	text81,local,class=CODE,merge=1,delta=2
   100                           	dabs	1,0x7E,2
   101  0000                     	;# 
   102  0001                     	;# 
   103  0002                     	;# 
   104  0003                     	;# 
   105  0004                     	;# 
   106  0005                     	;# 
   107  0006                     	;# 
   108  0007                     	;# 
   109  0008                     	;# 
   110  0009                     	;# 
   111  000A                     	;# 
   112  000B                     	;# 
   113  000C                     	;# 
   114  000D                     	;# 
   115  000E                     	;# 
   116  0010                     	;# 
   117  0011                     	;# 
   118  0012                     	;# 
   119  0015                     	;# 
   120  0016                     	;# 
   121  0016                     	;# 
   122  0017                     	;# 
   123  0018                     	;# 
   124  0019                     	;# 
   125  001A                     	;# 
   126  001B                     	;# 
   127  001C                     	;# 
   128  008C                     	;# 
   129  008D                     	;# 
   130  008E                     	;# 
   131  0090                     	;# 
   132  0091                     	;# 
   133  0092                     	;# 
   134  0095                     	;# 
   135  0096                     	;# 
   136  0097                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009B                     	;# 
   140  009B                     	;# 
   141  009C                     	;# 
   142  009D                     	;# 
   143  009E                     	;# 
   144  010C                     	;# 
   145  010D                     	;# 
   146  010E                     	;# 
   147  0116                     	;# 
   148  0117                     	;# 
   149  011D                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  018E                     	;# 
   153  0191                     	;# 
   154  0191                     	;# 
   155  0192                     	;# 
   156  0193                     	;# 
   157  0193                     	;# 
   158  0194                     	;# 
   159  0195                     	;# 
   160  0196                     	;# 
   161  0197                     	;# 
   162  0199                     	;# 
   163  019A                     	;# 
   164  019B                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019C                     	;# 
   169  019C                     	;# 
   170  019D                     	;# 
   171  019E                     	;# 
   172  019F                     	;# 
   173  020D                     	;# 
   174  0210                     	;# 
   175  0211                     	;# 
   176  0211                     	;# 
   177  0212                     	;# 
   178  0212                     	;# 
   179  0213                     	;# 
   180  0213                     	;# 
   181  0214                     	;# 
   182  0214                     	;# 
   183  0215                     	;# 
   184  0215                     	;# 
   185  0215                     	;# 
   186  0216                     	;# 
   187  0216                     	;# 
   188  0217                     	;# 
   189  0217                     	;# 
   190  0291                     	;# 
   191  0291                     	;# 
   192  0292                     	;# 
   193  0293                     	;# 
   194  0298                     	;# 
   195  0298                     	;# 
   196  0299                     	;# 
   197  029A                     	;# 
   198  0394                     	;# 
   199  0395                     	;# 
   200  0396                     	;# 
   201  0FE4                     	;# 
   202  0FE5                     	;# 
   203  0FE6                     	;# 
   204  0FE7                     	;# 
   205  0FE8                     	;# 
   206  0FE9                     	;# 
   207  0FEA                     	;# 
   208  0FEB                     	;# 
   209  0FED                     	;# 
   210  0FEE                     	;# 
   211  0FEF                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  008C                     	;# 
   240  008D                     	;# 
   241  008E                     	;# 
   242  0090                     	;# 
   243  0091                     	;# 
   244  0092                     	;# 
   245  0095                     	;# 
   246  0096                     	;# 
   247  0097                     	;# 
   248  0099                     	;# 
   249  009A                     	;# 
   250  009B                     	;# 
   251  009B                     	;# 
   252  009C                     	;# 
   253  009D                     	;# 
   254  009E                     	;# 
   255  010C                     	;# 
   256  010D                     	;# 
   257  010E                     	;# 
   258  0116                     	;# 
   259  0117                     	;# 
   260  011D                     	;# 
   261  018C                     	;# 
   262  018D                     	;# 
   263  018E                     	;# 
   264  0191                     	;# 
   265  0191                     	;# 
   266  0192                     	;# 
   267  0193                     	;# 
   268  0193                     	;# 
   269  0194                     	;# 
   270  0195                     	;# 
   271  0196                     	;# 
   272  0197                     	;# 
   273  0199                     	;# 
   274  019A                     	;# 
   275  019B                     	;# 
   276  019B                     	;# 
   277  019B                     	;# 
   278  019B                     	;# 
   279  019C                     	;# 
   280  019C                     	;# 
   281  019D                     	;# 
   282  019E                     	;# 
   283  019F                     	;# 
   284  020D                     	;# 
   285  0210                     	;# 
   286  0211                     	;# 
   287  0211                     	;# 
   288  0212                     	;# 
   289  0212                     	;# 
   290  0213                     	;# 
   291  0213                     	;# 
   292  0214                     	;# 
   293  0214                     	;# 
   294  0215                     	;# 
   295  0215                     	;# 
   296  0215                     	;# 
   297  0216                     	;# 
   298  0216                     	;# 
   299  0217                     	;# 
   300  0217                     	;# 
   301  0291                     	;# 
   302  0291                     	;# 
   303  0292                     	;# 
   304  0293                     	;# 
   305  0298                     	;# 
   306  0298                     	;# 
   307  0299                     	;# 
   308  029A                     	;# 
   309  0394                     	;# 
   310  0395                     	;# 
   311  0396                     	;# 
   312  0FE4                     	;# 
   313  0FE5                     	;# 
   314  0FE6                     	;# 
   315  0FE7                     	;# 
   316  0FE8                     	;# 
   317  0FE9                     	;# 
   318  0FEA                     	;# 
   319  0FEB                     	;# 
   320  0FED                     	;# 
   321  0FEE                     	;# 
   322  0FEF                     	;# 
   323  0000                     	;# 
   324  0001                     	;# 
   325  0002                     	;# 
   326  0003                     	;# 
   327  0004                     	;# 
   328  0005                     	;# 
   329  0006                     	;# 
   330  0007                     	;# 
   331  0008                     	;# 
   332  0009                     	;# 
   333  000A                     	;# 
   334  000B                     	;# 
   335  000C                     	;# 
   336  000D                     	;# 
   337  000E                     	;# 
   338  0010                     	;# 
   339  0011                     	;# 
   340  0012                     	;# 
   341  0015                     	;# 
   342  0016                     	;# 
   343  0016                     	;# 
   344  0017                     	;# 
   345  0018                     	;# 
   346  0019                     	;# 
   347  001A                     	;# 
   348  001B                     	;# 
   349  001C                     	;# 
   350  008C                     	;# 
   351  008D                     	;# 
   352  008E                     	;# 
   353  0090                     	;# 
   354  0091                     	;# 
   355  0092                     	;# 
   356  0095                     	;# 
   357  0096                     	;# 
   358  0097                     	;# 
   359  0099                     	;# 
   360  009A                     	;# 
   361  009B                     	;# 
   362  009B                     	;# 
   363  009C                     	;# 
   364  009D                     	;# 
   365  009E                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  0116                     	;# 
   370  0117                     	;# 
   371  011D                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374  018E                     	;# 
   375  0191                     	;# 
   376  0191                     	;# 
   377  0192                     	;# 
   378  0193                     	;# 
   379  0193                     	;# 
   380  0194                     	;# 
   381  0195                     	;# 
   382  0196                     	;# 
   383  0197                     	;# 
   384  0199                     	;# 
   385  019A                     	;# 
   386  019B                     	;# 
   387  019B                     	;# 
   388  019B                     	;# 
   389  019B                     	;# 
   390  019C                     	;# 
   391  019C                     	;# 
   392  019D                     	;# 
   393  019E                     	;# 
   394  019F                     	;# 
   395  020D                     	;# 
   396  0210                     	;# 
   397  0211                     	;# 
   398  0211                     	;# 
   399  0212                     	;# 
   400  0212                     	;# 
   401  0213                     	;# 
   402  0213                     	;# 
   403  0214                     	;# 
   404  0214                     	;# 
   405  0215                     	;# 
   406  0215                     	;# 
   407  0215                     	;# 
   408  0216                     	;# 
   409  0216                     	;# 
   410  0217                     	;# 
   411  0217                     	;# 
   412  0291                     	;# 
   413  0291                     	;# 
   414  0292                     	;# 
   415  0293                     	;# 
   416  0298                     	;# 
   417  0298                     	;# 
   418  0299                     	;# 
   419  029A                     	;# 
   420  0394                     	;# 
   421  0395                     	;# 
   422  0396                     	;# 
   423  0FE4                     	;# 
   424  0FE5                     	;# 
   425  0FE6                     	;# 
   426  0FE7                     	;# 
   427  0FE8                     	;# 
   428  0FE9                     	;# 
   429  0FEA                     	;# 
   430  0FEB                     	;# 
   431  0FED                     	;# 
   432  0FEE                     	;# 
   433  0FEF                     	;# 
   434  0000                     	;# 
   435  0001                     	;# 
   436  0002                     	;# 
   437  0003                     	;# 
   438  0004                     	;# 
   439  0005                     	;# 
   440  0006                     	;# 
   441  0007                     	;# 
   442  0008                     	;# 
   443  0009                     	;# 
   444  000A                     	;# 
   445  000B                     	;# 
   446  000C                     	;# 
   447  000D                     	;# 
   448  000E                     	;# 
   449  0010                     	;# 
   450  0011                     	;# 
   451  0012                     	;# 
   452  0015                     	;# 
   453  0016                     	;# 
   454  0016                     	;# 
   455  0017                     	;# 
   456  0018                     	;# 
   457  0019                     	;# 
   458  001A                     	;# 
   459  001B                     	;# 
   460  001C                     	;# 
   461  008C                     	;# 
   462  008D                     	;# 
   463  008E                     	;# 
   464  0090                     	;# 
   465  0091                     	;# 
   466  0092                     	;# 
   467  0095                     	;# 
   468  0096                     	;# 
   469  0097                     	;# 
   470  0099                     	;# 
   471  009A                     	;# 
   472  009B                     	;# 
   473  009B                     	;# 
   474  009C                     	;# 
   475  009D                     	;# 
   476  009E                     	;# 
   477  010C                     	;# 
   478  010D                     	;# 
   479  010E                     	;# 
   480  0116                     	;# 
   481  0117                     	;# 
   482  011D                     	;# 
   483  018C                     	;# 
   484  018D                     	;# 
   485  018E                     	;# 
   486  0191                     	;# 
   487  0191                     	;# 
   488  0192                     	;# 
   489  0193                     	;# 
   490  0193                     	;# 
   491  0194                     	;# 
   492  0195                     	;# 
   493  0196                     	;# 
   494  0197                     	;# 
   495  0199                     	;# 
   496  019A                     	;# 
   497  019B                     	;# 
   498  019B                     	;# 
   499  019B                     	;# 
   500  019B                     	;# 
   501  019C                     	;# 
   502  019C                     	;# 
   503  019D                     	;# 
   504  019E                     	;# 
   505  019F                     	;# 
   506  020D                     	;# 
   507  0210                     	;# 
   508  0211                     	;# 
   509  0211                     	;# 
   510  0212                     	;# 
   511  0212                     	;# 
   512  0213                     	;# 
   513  0213                     	;# 
   514  0214                     	;# 
   515  0214                     	;# 
   516  0215                     	;# 
   517  0215                     	;# 
   518  0215                     	;# 
   519  0216                     	;# 
   520  0216                     	;# 
   521  0217                     	;# 
   522  0217                     	;# 
   523  0291                     	;# 
   524  0291                     	;# 
   525  0292                     	;# 
   526  0293                     	;# 
   527  0298                     	;# 
   528  0298                     	;# 
   529  0299                     	;# 
   530  029A                     	;# 
   531  0394                     	;# 
   532  0395                     	;# 
   533  0396                     	;# 
   534  0FE4                     	;# 
   535  0FE5                     	;# 
   536  0FE6                     	;# 
   537  0FE7                     	;# 
   538  0FE8                     	;# 
   539  0FE9                     	;# 
   540  0FEA                     	;# 
   541  0FEB                     	;# 
   542  0FED                     	;# 
   543  0FEE                     	;# 
   544  0FEF                     	;# 
   545  0000                     	;# 
   546  0001                     	;# 
   547  0002                     	;# 
   548  0003                     	;# 
   549  0004                     	;# 
   550  0005                     	;# 
   551  0006                     	;# 
   552  0007                     	;# 
   553  0008                     	;# 
   554  0009                     	;# 
   555  000A                     	;# 
   556  000B                     	;# 
   557  000C                     	;# 
   558  000D                     	;# 
   559  000E                     	;# 
   560  0010                     	;# 
   561  0011                     	;# 
   562  0012                     	;# 
   563  0015                     	;# 
   564  0016                     	;# 
   565  0016                     	;# 
   566  0017                     	;# 
   567  0018                     	;# 
   568  0019                     	;# 
   569  001A                     	;# 
   570  001B                     	;# 
   571  001C                     	;# 
   572  008C                     	;# 
   573  008D                     	;# 
   574  008E                     	;# 
   575  0090                     	;# 
   576  0091                     	;# 
   577  0092                     	;# 
   578  0095                     	;# 
   579  0096                     	;# 
   580  0097                     	;# 
   581  0099                     	;# 
   582  009A                     	;# 
   583  009B                     	;# 
   584  009B                     	;# 
   585  009C                     	;# 
   586  009D                     	;# 
   587  009E                     	;# 
   588  010C                     	;# 
   589  010D                     	;# 
   590  010E                     	;# 
   591  0116                     	;# 
   592  0117                     	;# 
   593  011D                     	;# 
   594  018C                     	;# 
   595  018D                     	;# 
   596  018E                     	;# 
   597  0191                     	;# 
   598  0191                     	;# 
   599  0192                     	;# 
   600  0193                     	;# 
   601  0193                     	;# 
   602  0194                     	;# 
   603  0195                     	;# 
   604  0196                     	;# 
   605  0197                     	;# 
   606  0199                     	;# 
   607  019A                     	;# 
   608  019B                     	;# 
   609  019B                     	;# 
   610  019B                     	;# 
   611  019B                     	;# 
   612  019C                     	;# 
   613  019C                     	;# 
   614  019D                     	;# 
   615  019E                     	;# 
   616  019F                     	;# 
   617  020D                     	;# 
   618  0210                     	;# 
   619  0211                     	;# 
   620  0211                     	;# 
   621  0212                     	;# 
   622  0212                     	;# 
   623  0213                     	;# 
   624  0213                     	;# 
   625  0214                     	;# 
   626  0214                     	;# 
   627  0215                     	;# 
   628  0215                     	;# 
   629  0215                     	;# 
   630  0216                     	;# 
   631  0216                     	;# 
   632  0217                     	;# 
   633  0217                     	;# 
   634  0291                     	;# 
   635  0291                     	;# 
   636  0292                     	;# 
   637  0293                     	;# 
   638  0298                     	;# 
   639  0298                     	;# 
   640  0299                     	;# 
   641  029A                     	;# 
   642  0394                     	;# 
   643  0395                     	;# 
   644  0396                     	;# 
   645  0FE4                     	;# 
   646  0FE5                     	;# 
   647  0FE6                     	;# 
   648  0FE7                     	;# 
   649  0FE8                     	;# 
   650  0FE9                     	;# 
   651  0FEA                     	;# 
   652  0FEB                     	;# 
   653  0FED                     	;# 
   654  0FEE                     	;# 
   655  0FEF                     	;# 
   656  0000                     	;# 
   657  0001                     	;# 
   658  0002                     	;# 
   659  0003                     	;# 
   660  0004                     	;# 
   661  0005                     	;# 
   662  0006                     	;# 
   663  0007                     	;# 
   664  0008                     	;# 
   665  0009                     	;# 
   666  000A                     	;# 
   667  000B                     	;# 
   668  000C                     	;# 
   669  000D                     	;# 
   670  000E                     	;# 
   671  0010                     	;# 
   672  0011                     	;# 
   673  0012                     	;# 
   674  0015                     	;# 
   675  0016                     	;# 
   676  0016                     	;# 
   677  0017                     	;# 
   678  0018                     	;# 
   679  0019                     	;# 
   680  001A                     	;# 
   681  001B                     	;# 
   682  001C                     	;# 
   683  008C                     	;# 
   684  008D                     	;# 
   685  008E                     	;# 
   686  0090                     	;# 
   687  0091                     	;# 
   688  0092                     	;# 
   689  0095                     	;# 
   690  0096                     	;# 
   691  0097                     	;# 
   692  0099                     	;# 
   693  009A                     	;# 
   694  009B                     	;# 
   695  009B                     	;# 
   696  009C                     	;# 
   697  009D                     	;# 
   698  009E                     	;# 
   699  010C                     	;# 
   700  010D                     	;# 
   701  010E                     	;# 
   702  0116                     	;# 
   703  0117                     	;# 
   704  011D                     	;# 
   705  018C                     	;# 
   706  018D                     	;# 
   707  018E                     	;# 
   708  0191                     	;# 
   709  0191                     	;# 
   710  0192                     	;# 
   711  0193                     	;# 
   712  0193                     	;# 
   713  0194                     	;# 
   714  0195                     	;# 
   715  0196                     	;# 
   716  0197                     	;# 
   717  0199                     	;# 
   718  019A                     	;# 
   719  019B                     	;# 
   720  019B                     	;# 
   721  019B                     	;# 
   722  019B                     	;# 
   723  019C                     	;# 
   724  019C                     	;# 
   725  019D                     	;# 
   726  019E                     	;# 
   727  019F                     	;# 
   728  020D                     	;# 
   729  0210                     	;# 
   730  0211                     	;# 
   731  0211                     	;# 
   732  0212                     	;# 
   733  0212                     	;# 
   734  0213                     	;# 
   735  0213                     	;# 
   736  0214                     	;# 
   737  0214                     	;# 
   738  0215                     	;# 
   739  0215                     	;# 
   740  0215                     	;# 
   741  0216                     	;# 
   742  0216                     	;# 
   743  0217                     	;# 
   744  0217                     	;# 
   745  0291                     	;# 
   746  0291                     	;# 
   747  0292                     	;# 
   748  0293                     	;# 
   749  0298                     	;# 
   750  0298                     	;# 
   751  0299                     	;# 
   752  029A                     	;# 
   753  0394                     	;# 
   754  0395                     	;# 
   755  0396                     	;# 
   756  0FE4                     	;# 
   757  0FE5                     	;# 
   758  0FE6                     	;# 
   759  0FE7                     	;# 
   760  0FE8                     	;# 
   761  0FE9                     	;# 
   762  0FEA                     	;# 
   763  0FEB                     	;# 
   764  0FED                     	;# 
   765  0FEE                     	;# 
   766  0FEF                     	;# 
   767  0000                     	;# 
   768  0001                     	;# 
   769  0002                     	;# 
   770  0003                     	;# 
   771  0004                     	;# 
   772  0005                     	;# 
   773  0006                     	;# 
   774  0007                     	;# 
   775  0008                     	;# 
   776  0009                     	;# 
   777  000A                     	;# 
   778  000B                     	;# 
   779  000C                     	;# 
   780  000D                     	;# 
   781  000E                     	;# 
   782  0010                     	;# 
   783  0011                     	;# 
   784  0012                     	;# 
   785  0015                     	;# 
   786  0016                     	;# 
   787  0016                     	;# 
   788  0017                     	;# 
   789  0018                     	;# 
   790  0019                     	;# 
   791  001A                     	;# 
   792  001B                     	;# 
   793  001C                     	;# 
   794  008C                     	;# 
   795  008D                     	;# 
   796  008E                     	;# 
   797  0090                     	;# 
   798  0091                     	;# 
   799  0092                     	;# 
   800  0095                     	;# 
   801  0096                     	;# 
   802  0097                     	;# 
   803  0099                     	;# 
   804  009A                     	;# 
   805  009B                     	;# 
   806  009B                     	;# 
   807  009C                     	;# 
   808  009D                     	;# 
   809  009E                     	;# 
   810  010C                     	;# 
   811  010D                     	;# 
   812  010E                     	;# 
   813  0116                     	;# 
   814  0117                     	;# 
   815  011D                     	;# 
   816  018C                     	;# 
   817  018D                     	;# 
   818  018E                     	;# 
   819  0191                     	;# 
   820  0191                     	;# 
   821  0192                     	;# 
   822  0193                     	;# 
   823  0193                     	;# 
   824  0194                     	;# 
   825  0195                     	;# 
   826  0196                     	;# 
   827  0197                     	;# 
   828  0199                     	;# 
   829  019A                     	;# 
   830  019B                     	;# 
   831  019B                     	;# 
   832  019B                     	;# 
   833  019B                     	;# 
   834  019C                     	;# 
   835  019C                     	;# 
   836  019D                     	;# 
   837  019E                     	;# 
   838  019F                     	;# 
   839  020D                     	;# 
   840  0210                     	;# 
   841  0211                     	;# 
   842  0211                     	;# 
   843  0212                     	;# 
   844  0212                     	;# 
   845  0213                     	;# 
   846  0213                     	;# 
   847  0214                     	;# 
   848  0214                     	;# 
   849  0215                     	;# 
   850  0215                     	;# 
   851  0215                     	;# 
   852  0216                     	;# 
   853  0216                     	;# 
   854  0217                     	;# 
   855  0217                     	;# 
   856  0291                     	;# 
   857  0291                     	;# 
   858  0292                     	;# 
   859  0293                     	;# 
   860  0298                     	;# 
   861  0298                     	;# 
   862  0299                     	;# 
   863  029A                     	;# 
   864  0394                     	;# 
   865  0395                     	;# 
   866  0396                     	;# 
   867  0FE4                     	;# 
   868  0FE5                     	;# 
   869  0FE6                     	;# 
   870  0FE7                     	;# 
   871  0FE8                     	;# 
   872  0FE9                     	;# 
   873  0FEA                     	;# 
   874  0FEB                     	;# 
   875  0FED                     	;# 
   876  0FEE                     	;# 
   877  0FEF                     	;# 
   878  0000                     	;# 
   879  0001                     	;# 
   880  0002                     	;# 
   881  0003                     	;# 
   882  0004                     	;# 
   883  0005                     	;# 
   884  0006                     	;# 
   885  0007                     	;# 
   886  0008                     	;# 
   887  0009                     	;# 
   888  000A                     	;# 
   889  000B                     	;# 
   890  000C                     	;# 
   891  000D                     	;# 
   892  000E                     	;# 
   893  0010                     	;# 
   894  0011                     	;# 
   895  0012                     	;# 
   896  0015                     	;# 
   897  0016                     	;# 
   898  0016                     	;# 
   899  0017                     	;# 
   900  0018                     	;# 
   901  0019                     	;# 
   902  001A                     	;# 
   903  001B                     	;# 
   904  001C                     	;# 
   905  008C                     	;# 
   906  008D                     	;# 
   907  008E                     	;# 
   908  0090                     	;# 
   909  0091                     	;# 
   910  0092                     	;# 
   911  0095                     	;# 
   912  0096                     	;# 
   913  0097                     	;# 
   914  0099                     	;# 
   915  009A                     	;# 
   916  009B                     	;# 
   917  009B                     	;# 
   918  009C                     	;# 
   919  009D                     	;# 
   920  009E                     	;# 
   921  010C                     	;# 
   922  010D                     	;# 
   923  010E                     	;# 
   924  0116                     	;# 
   925  0117                     	;# 
   926  011D                     	;# 
   927  018C                     	;# 
   928  018D                     	;# 
   929  018E                     	;# 
   930  0191                     	;# 
   931  0191                     	;# 
   932  0192                     	;# 
   933  0193                     	;# 
   934  0193                     	;# 
   935  0194                     	;# 
   936  0195                     	;# 
   937  0196                     	;# 
   938  0197                     	;# 
   939  0199                     	;# 
   940  019A                     	;# 
   941  019B                     	;# 
   942  019B                     	;# 
   943  019B                     	;# 
   944  019B                     	;# 
   945  019C                     	;# 
   946  019C                     	;# 
   947  019D                     	;# 
   948  019E                     	;# 
   949  019F                     	;# 
   950  020D                     	;# 
   951  0210                     	;# 
   952  0211                     	;# 
   953  0211                     	;# 
   954  0212                     	;# 
   955  0212                     	;# 
   956  0213                     	;# 
   957  0213                     	;# 
   958  0214                     	;# 
   959  0214                     	;# 
   960  0215                     	;# 
   961  0215                     	;# 
   962  0215                     	;# 
   963  0216                     	;# 
   964  0216                     	;# 
   965  0217                     	;# 
   966  0217                     	;# 
   967  0291                     	;# 
   968  0291                     	;# 
   969  0292                     	;# 
   970  0293                     	;# 
   971  0298                     	;# 
   972  0298                     	;# 
   973  0299                     	;# 
   974  029A                     	;# 
   975  0394                     	;# 
   976  0395                     	;# 
   977  0396                     	;# 
   978  0FE4                     	;# 
   979  0FE5                     	;# 
   980  0FE6                     	;# 
   981  0FE7                     	;# 
   982  0FE8                     	;# 
   983  0FE9                     	;# 
   984  0FEA                     	;# 
   985  0FEB                     	;# 
   986  0FED                     	;# 
   987  0FEE                     	;# 
   988  0FEF                     	;# 
   989  0000                     	;# 
   990  0001                     	;# 
   991  0002                     	;# 
   992  0003                     	;# 
   993  0004                     	;# 
   994  0005                     	;# 
   995  0006                     	;# 
   996  0007                     	;# 
   997  0008                     	;# 
   998  0009                     	;# 
   999  000A                     	;# 
  1000  000B                     	;# 
  1001  000C                     	;# 
  1002  000D                     	;# 
  1003  000E                     	;# 
  1004  0010                     	;# 
  1005  0011                     	;# 
  1006  0012                     	;# 
  1007  0015                     	;# 
  1008  0016                     	;# 
  1009  0016                     	;# 
  1010  0017                     	;# 
  1011  0018                     	;# 
  1012  0019                     	;# 
  1013  001A                     	;# 
  1014  001B                     	;# 
  1015  001C                     	;# 
  1016  008C                     	;# 
  1017  008D                     	;# 
  1018  008E                     	;# 
  1019  0090                     	;# 
  1020  0091                     	;# 
  1021  0092                     	;# 
  1022  0095                     	;# 
  1023  0096                     	;# 
  1024  0097                     	;# 
  1025  0099                     	;# 
  1026  009A                     	;# 
  1027  009B                     	;# 
  1028  009B                     	;# 
  1029  009C                     	;# 
  1030  009D                     	;# 
  1031  009E                     	;# 
  1032  010C                     	;# 
  1033  010D                     	;# 
  1034  010E                     	;# 
  1035  0116                     	;# 
  1036  0117                     	;# 
  1037  011D                     	;# 
  1038  018C                     	;# 
  1039  018D                     	;# 
  1040  018E                     	;# 
  1041  0191                     	;# 
  1042  0191                     	;# 
  1043  0192                     	;# 
  1044  0193                     	;# 
  1045  0193                     	;# 
  1046  0194                     	;# 
  1047  0195                     	;# 
  1048  0196                     	;# 
  1049  0197                     	;# 
  1050  0199                     	;# 
  1051  019A                     	;# 
  1052  019B                     	;# 
  1053  019B                     	;# 
  1054  019B                     	;# 
  1055  019B                     	;# 
  1056  019C                     	;# 
  1057  019C                     	;# 
  1058  019D                     	;# 
  1059  019E                     	;# 
  1060  019F                     	;# 
  1061  020D                     	;# 
  1062  0210                     	;# 
  1063  0211                     	;# 
  1064  0211                     	;# 
  1065  0212                     	;# 
  1066  0212                     	;# 
  1067  0213                     	;# 
  1068  0213                     	;# 
  1069  0214                     	;# 
  1070  0214                     	;# 
  1071  0215                     	;# 
  1072  0215                     	;# 
  1073  0215                     	;# 
  1074  0216                     	;# 
  1075  0216                     	;# 
  1076  0217                     	;# 
  1077  0217                     	;# 
  1078  0291                     	;# 
  1079  0291                     	;# 
  1080  0292                     	;# 
  1081  0293                     	;# 
  1082  0298                     	;# 
  1083  0298                     	;# 
  1084  0299                     	;# 
  1085  029A                     	;# 
  1086  0394                     	;# 
  1087  0395                     	;# 
  1088  0396                     	;# 
  1089  0FE4                     	;# 
  1090  0FE5                     	;# 
  1091  0FE6                     	;# 
  1092  0FE7                     	;# 
  1093  0FE8                     	;# 
  1094  0FE9                     	;# 
  1095  0FEA                     	;# 
  1096  0FEB                     	;# 
  1097  0FED                     	;# 
  1098  0FEE                     	;# 
  1099  0FEF                     	;# 
  1100  0000                     	;# 
  1101  0001                     	;# 
  1102  0002                     	;# 
  1103  0003                     	;# 
  1104  0004                     	;# 
  1105  0005                     	;# 
  1106  0006                     	;# 
  1107  0007                     	;# 
  1108  0008                     	;# 
  1109  0009                     	;# 
  1110  000A                     	;# 
  1111  000B                     	;# 
  1112  000C                     	;# 
  1113  000D                     	;# 
  1114  000E                     	;# 
  1115  0010                     	;# 
  1116  0011                     	;# 
  1117  0012                     	;# 
  1118  0015                     	;# 
  1119  0016                     	;# 
  1120  0016                     	;# 
  1121  0017                     	;# 
  1122  0018                     	;# 
  1123  0019                     	;# 
  1124  001A                     	;# 
  1125  001B                     	;# 
  1126  001C                     	;# 
  1127  008C                     	;# 
  1128  008D                     	;# 
  1129  008E                     	;# 
  1130  0090                     	;# 
  1131  0091                     	;# 
  1132  0092                     	;# 
  1133  0095                     	;# 
  1134  0096                     	;# 
  1135  0097                     	;# 
  1136  0099                     	;# 
  1137  009A                     	;# 
  1138  009B                     	;# 
  1139  009B                     	;# 
  1140  009C                     	;# 
  1141  009D                     	;# 
  1142  009E                     	;# 
  1143  010C                     	;# 
  1144  010D                     	;# 
  1145  010E                     	;# 
  1146  0116                     	;# 
  1147  0117                     	;# 
  1148  011D                     	;# 
  1149  018C                     	;# 
  1150  018D                     	;# 
  1151  018E                     	;# 
  1152  0191                     	;# 
  1153  0191                     	;# 
  1154  0192                     	;# 
  1155  0193                     	;# 
  1156  0193                     	;# 
  1157  0194                     	;# 
  1158  0195                     	;# 
  1159  0196                     	;# 
  1160  0197                     	;# 
  1161  0199                     	;# 
  1162  019A                     	;# 
  1163  019B                     	;# 
  1164  019B                     	;# 
  1165  019B                     	;# 
  1166  019B                     	;# 
  1167  019C                     	;# 
  1168  019C                     	;# 
  1169  019D                     	;# 
  1170  019E                     	;# 
  1171  019F                     	;# 
  1172  020D                     	;# 
  1173  0210                     	;# 
  1174  0211                     	;# 
  1175  0211                     	;# 
  1176  0212                     	;# 
  1177  0212                     	;# 
  1178  0213                     	;# 
  1179  0213                     	;# 
  1180  0214                     	;# 
  1181  0214                     	;# 
  1182  0215                     	;# 
  1183  0215                     	;# 
  1184  0215                     	;# 
  1185  0216                     	;# 
  1186  0216                     	;# 
  1187  0217                     	;# 
  1188  0217                     	;# 
  1189  0291                     	;# 
  1190  0291                     	;# 
  1191  0292                     	;# 
  1192  0293                     	;# 
  1193  0298                     	;# 
  1194  0298                     	;# 
  1195  0299                     	;# 
  1196  029A                     	;# 
  1197  0394                     	;# 
  1198  0395                     	;# 
  1199  0396                     	;# 
  1200  0FE4                     	;# 
  1201  0FE5                     	;# 
  1202  0FE6                     	;# 
  1203  0FE7                     	;# 
  1204  0FE8                     	;# 
  1205  0FE9                     	;# 
  1206  0FEA                     	;# 
  1207  0FEB                     	;# 
  1208  0FED                     	;# 
  1209  0FEE                     	;# 
  1210  0FEF                     	;# 
  1211  0000                     	;# 
  1212  0001                     	;# 
  1213  0002                     	;# 
  1214  0003                     	;# 
  1215  0004                     	;# 
  1216  0005                     	;# 
  1217  0006                     	;# 
  1218  0007                     	;# 
  1219  0008                     	;# 
  1220  0009                     	;# 
  1221  000A                     	;# 
  1222  000B                     	;# 
  1223  000C                     	;# 
  1224  000D                     	;# 
  1225  000E                     	;# 
  1226  0010                     	;# 
  1227  0011                     	;# 
  1228  0012                     	;# 
  1229  0015                     	;# 
  1230  0016                     	;# 
  1231  0016                     	;# 
  1232  0017                     	;# 
  1233  0018                     	;# 
  1234  0019                     	;# 
  1235  001A                     	;# 
  1236  001B                     	;# 
  1237  001C                     	;# 
  1238  008C                     	;# 
  1239  008D                     	;# 
  1240  008E                     	;# 
  1241  0090                     	;# 
  1242  0091                     	;# 
  1243  0092                     	;# 
  1244  0095                     	;# 
  1245  0096                     	;# 
  1246  0097                     	;# 
  1247  0099                     	;# 
  1248  009A                     	;# 
  1249  009B                     	;# 
  1250  009B                     	;# 
  1251  009C                     	;# 
  1252  009D                     	;# 
  1253  009E                     	;# 
  1254  010C                     	;# 
  1255  010D                     	;# 
  1256  010E                     	;# 
  1257  0116                     	;# 
  1258  0117                     	;# 
  1259  011D                     	;# 
  1260  018C                     	;# 
  1261  018D                     	;# 
  1262  018E                     	;# 
  1263  0191                     	;# 
  1264  0191                     	;# 
  1265  0192                     	;# 
  1266  0193                     	;# 
  1267  0193                     	;# 
  1268  0194                     	;# 
  1269  0195                     	;# 
  1270  0196                     	;# 
  1271  0197                     	;# 
  1272  0199                     	;# 
  1273  019A                     	;# 
  1274  019B                     	;# 
  1275  019B                     	;# 
  1276  019B                     	;# 
  1277  019B                     	;# 
  1278  019C                     	;# 
  1279  019C                     	;# 
  1280  019D                     	;# 
  1281  019E                     	;# 
  1282  019F                     	;# 
  1283  020D                     	;# 
  1284  0210                     	;# 
  1285  0211                     	;# 
  1286  0211                     	;# 
  1287  0212                     	;# 
  1288  0212                     	;# 
  1289  0213                     	;# 
  1290  0213                     	;# 
  1291  0214                     	;# 
  1292  0214                     	;# 
  1293  0215                     	;# 
  1294  0215                     	;# 
  1295  0215                     	;# 
  1296  0216                     	;# 
  1297  0216                     	;# 
  1298  0217                     	;# 
  1299  0217                     	;# 
  1300  0291                     	;# 
  1301  0291                     	;# 
  1302  0292                     	;# 
  1303  0293                     	;# 
  1304  0298                     	;# 
  1305  0298                     	;# 
  1306  0299                     	;# 
  1307  029A                     	;# 
  1308  0394                     	;# 
  1309  0395                     	;# 
  1310  0396                     	;# 
  1311  0FE4                     	;# 
  1312  0FE5                     	;# 
  1313  0FE6                     	;# 
  1314  0FE7                     	;# 
  1315  0FE8                     	;# 
  1316  0FE9                     	;# 
  1317  0FEA                     	;# 
  1318  0FEB                     	;# 
  1319  0FED                     	;# 
  1320  0FEE                     	;# 
  1321  0FEF                     	;# 
  1322  0000                     	;# 
  1323  0001                     	;# 
  1324  0002                     	;# 
  1325  0003                     	;# 
  1326  0004                     	;# 
  1327  0005                     	;# 
  1328  0006                     	;# 
  1329  0007                     	;# 
  1330  0008                     	;# 
  1331  0009                     	;# 
  1332  000A                     	;# 
  1333  000B                     	;# 
  1334  000C                     	;# 
  1335  000D                     	;# 
  1336  000E                     	;# 
  1337  0010                     	;# 
  1338  0011                     	;# 
  1339  0012                     	;# 
  1340  0015                     	;# 
  1341  0016                     	;# 
  1342  0016                     	;# 
  1343  0017                     	;# 
  1344  0018                     	;# 
  1345  0019                     	;# 
  1346  001A                     	;# 
  1347  001B                     	;# 
  1348  001C                     	;# 
  1349  008C                     	;# 
  1350  008D                     	;# 
  1351  008E                     	;# 
  1352  0090                     	;# 
  1353  0091                     	;# 
  1354  0092                     	;# 
  1355  0095                     	;# 
  1356  0096                     	;# 
  1357  0097                     	;# 
  1358  0099                     	;# 
  1359  009A                     	;# 
  1360  009B                     	;# 
  1361  009B                     	;# 
  1362  009C                     	;# 
  1363  009D                     	;# 
  1364  009E                     	;# 
  1365  010C                     	;# 
  1366  010D                     	;# 
  1367  010E                     	;# 
  1368  0116                     	;# 
  1369  0117                     	;# 
  1370  011D                     	;# 
  1371  018C                     	;# 
  1372  018D                     	;# 
  1373  018E                     	;# 
  1374  0191                     	;# 
  1375  0191                     	;# 
  1376  0192                     	;# 
  1377  0193                     	;# 
  1378  0193                     	;# 
  1379  0194                     	;# 
  1380  0195                     	;# 
  1381  0196                     	;# 
  1382  0197                     	;# 
  1383  0199                     	;# 
  1384  019A                     	;# 
  1385  019B                     	;# 
  1386  019B                     	;# 
  1387  019B                     	;# 
  1388  019B                     	;# 
  1389  019C                     	;# 
  1390  019C                     	;# 
  1391  019D                     	;# 
  1392  019E                     	;# 
  1393  019F                     	;# 
  1394  020D                     	;# 
  1395  0210                     	;# 
  1396  0211                     	;# 
  1397  0211                     	;# 
  1398  0212                     	;# 
  1399  0212                     	;# 
  1400  0213                     	;# 
  1401  0213                     	;# 
  1402  0214                     	;# 
  1403  0214                     	;# 
  1404  0215                     	;# 
  1405  0215                     	;# 
  1406  0215                     	;# 
  1407  0216                     	;# 
  1408  0216                     	;# 
  1409  0217                     	;# 
  1410  0217                     	;# 
  1411  0291                     	;# 
  1412  0291                     	;# 
  1413  0292                     	;# 
  1414  0293                     	;# 
  1415  0298                     	;# 
  1416  0298                     	;# 
  1417  0299                     	;# 
  1418  029A                     	;# 
  1419  0394                     	;# 
  1420  0395                     	;# 
  1421  0396                     	;# 
  1422  0FE4                     	;# 
  1423  0FE5                     	;# 
  1424  0FE6                     	;# 
  1425  0FE7                     	;# 
  1426  0FE8                     	;# 
  1427  0FE9                     	;# 
  1428  0FEA                     	;# 
  1429  0FEB                     	;# 
  1430  0FED                     	;# 
  1431  0FEE                     	;# 
  1432  0FEF                     	;# 
  1433  0000                     	;# 
  1434  0001                     	;# 
  1435  0002                     	;# 
  1436  0003                     	;# 
  1437  0004                     	;# 
  1438  0005                     	;# 
  1439  0006                     	;# 
  1440  0007                     	;# 
  1441  0008                     	;# 
  1442  0009                     	;# 
  1443  000A                     	;# 
  1444  000B                     	;# 
  1445  000C                     	;# 
  1446  000D                     	;# 
  1447  000E                     	;# 
  1448  0010                     	;# 
  1449  0011                     	;# 
  1450  0012                     	;# 
  1451  0015                     	;# 
  1452  0016                     	;# 
  1453  0016                     	;# 
  1454  0017                     	;# 
  1455  0018                     	;# 
  1456  0019                     	;# 
  1457  001A                     	;# 
  1458  001B                     	;# 
  1459  001C                     	;# 
  1460  008C                     	;# 
  1461  008D                     	;# 
  1462  008E                     	;# 
  1463  0090                     	;# 
  1464  0091                     	;# 
  1465  0092                     	;# 
  1466  0095                     	;# 
  1467  0096                     	;# 
  1468  0097                     	;# 
  1469  0099                     	;# 
  1470  009A                     	;# 
  1471  009B                     	;# 
  1472  009B                     	;# 
  1473  009C                     	;# 
  1474  009D                     	;# 
  1475  009E                     	;# 
  1476  010C                     	;# 
  1477  010D                     	;# 
  1478  010E                     	;# 
  1479  0116                     	;# 
  1480  0117                     	;# 
  1481  011D                     	;# 
  1482  018C                     	;# 
  1483  018D                     	;# 
  1484  018E                     	;# 
  1485  0191                     	;# 
  1486  0191                     	;# 
  1487  0192                     	;# 
  1488  0193                     	;# 
  1489  0193                     	;# 
  1490  0194                     	;# 
  1491  0195                     	;# 
  1492  0196                     	;# 
  1493  0197                     	;# 
  1494  0199                     	;# 
  1495  019A                     	;# 
  1496  019B                     	;# 
  1497  019B                     	;# 
  1498  019B                     	;# 
  1499  019B                     	;# 
  1500  019C                     	;# 
  1501  019C                     	;# 
  1502  019D                     	;# 
  1503  019E                     	;# 
  1504  019F                     	;# 
  1505  020D                     	;# 
  1506  0210                     	;# 
  1507  0211                     	;# 
  1508  0211                     	;# 
  1509  0212                     	;# 
  1510  0212                     	;# 
  1511  0213                     	;# 
  1512  0213                     	;# 
  1513  0214                     	;# 
  1514  0214                     	;# 
  1515  0215                     	;# 
  1516  0215                     	;# 
  1517  0215                     	;# 
  1518  0216                     	;# 
  1519  0216                     	;# 
  1520  0217                     	;# 
  1521  0217                     	;# 
  1522  0291                     	;# 
  1523  0291                     	;# 
  1524  0292                     	;# 
  1525  0293                     	;# 
  1526  0298                     	;# 
  1527  0298                     	;# 
  1528  0299                     	;# 
  1529  029A                     	;# 
  1530  0394                     	;# 
  1531  0395                     	;# 
  1532  0396                     	;# 
  1533  0FE4                     	;# 
  1534  0FE5                     	;# 
  1535  0FE6                     	;# 
  1536  0FE7                     	;# 
  1537  0FE8                     	;# 
  1538  0FE9                     	;# 
  1539  0FEA                     	;# 
  1540  0FEB                     	;# 
  1541  0FED                     	;# 
  1542  0FEE                     	;# 
  1543  0FEF                     	;# 
  1544  0000                     	;# 
  1545  0001                     	;# 
  1546  0002                     	;# 
  1547  0003                     	;# 
  1548  0004                     	;# 
  1549  0005                     	;# 
  1550  0006                     	;# 
  1551  0007                     	;# 
  1552  0008                     	;# 
  1553  0009                     	;# 
  1554  000A                     	;# 
  1555  000B                     	;# 
  1556  000C                     	;# 
  1557  000D                     	;# 
  1558  000E                     	;# 
  1559  0010                     	;# 
  1560  0011                     	;# 
  1561  0012                     	;# 
  1562  0015                     	;# 
  1563  0016                     	;# 
  1564  0016                     	;# 
  1565  0017                     	;# 
  1566  0018                     	;# 
  1567  0019                     	;# 
  1568  001A                     	;# 
  1569  001B                     	;# 
  1570  001C                     	;# 
  1571  008C                     	;# 
  1572  008D                     	;# 
  1573  008E                     	;# 
  1574  0090                     	;# 
  1575  0091                     	;# 
  1576  0092                     	;# 
  1577  0095                     	;# 
  1578  0096                     	;# 
  1579  0097                     	;# 
  1580  0099                     	;# 
  1581  009A                     	;# 
  1582  009B                     	;# 
  1583  009B                     	;# 
  1584  009C                     	;# 
  1585  009D                     	;# 
  1586  009E                     	;# 
  1587  010C                     	;# 
  1588  010D                     	;# 
  1589  010E                     	;# 
  1590  0116                     	;# 
  1591  0117                     	;# 
  1592  011D                     	;# 
  1593  018C                     	;# 
  1594  018D                     	;# 
  1595  018E                     	;# 
  1596  0191                     	;# 
  1597  0191                     	;# 
  1598  0192                     	;# 
  1599  0193                     	;# 
  1600  0193                     	;# 
  1601  0194                     	;# 
  1602  0195                     	;# 
  1603  0196                     	;# 
  1604  0197                     	;# 
  1605  0199                     	;# 
  1606  019A                     	;# 
  1607  019B                     	;# 
  1608  019B                     	;# 
  1609  019B                     	;# 
  1610  019B                     	;# 
  1611  019C                     	;# 
  1612  019C                     	;# 
  1613  019D                     	;# 
  1614  019E                     	;# 
  1615  019F                     	;# 
  1616  020D                     	;# 
  1617  0210                     	;# 
  1618  0211                     	;# 
  1619  0211                     	;# 
  1620  0212                     	;# 
  1621  0212                     	;# 
  1622  0213                     	;# 
  1623  0213                     	;# 
  1624  0214                     	;# 
  1625  0214                     	;# 
  1626  0215                     	;# 
  1627  0215                     	;# 
  1628  0215                     	;# 
  1629  0216                     	;# 
  1630  0216                     	;# 
  1631  0217                     	;# 
  1632  0217                     	;# 
  1633  0291                     	;# 
  1634  0291                     	;# 
  1635  0292                     	;# 
  1636  0293                     	;# 
  1637  0298                     	;# 
  1638  0298                     	;# 
  1639  0299                     	;# 
  1640  029A                     	;# 
  1641  0394                     	;# 
  1642  0395                     	;# 
  1643  0396                     	;# 
  1644  0FE4                     	;# 
  1645  0FE5                     	;# 
  1646  0FE6                     	;# 
  1647  0FE7                     	;# 
  1648  0FE8                     	;# 
  1649  0FE9                     	;# 
  1650  0FEA                     	;# 
  1651  0FEB                     	;# 
  1652  0FED                     	;# 
  1653  0FEE                     	;# 
  1654  0FEF                     	;# 
  1655  0000                     	;# 
  1656  0001                     	;# 
  1657  0002                     	;# 
  1658  0003                     	;# 
  1659  0004                     	;# 
  1660  0005                     	;# 
  1661  0006                     	;# 
  1662  0007                     	;# 
  1663  0008                     	;# 
  1664  0009                     	;# 
  1665  000A                     	;# 
  1666  000B                     	;# 
  1667  000C                     	;# 
  1668  000D                     	;# 
  1669  000E                     	;# 
  1670  0010                     	;# 
  1671  0011                     	;# 
  1672  0012                     	;# 
  1673  0015                     	;# 
  1674  0016                     	;# 
  1675  0016                     	;# 
  1676  0017                     	;# 
  1677  0018                     	;# 
  1678  0019                     	;# 
  1679  001A                     	;# 
  1680  001B                     	;# 
  1681  001C                     	;# 
  1682  008C                     	;# 
  1683  008D                     	;# 
  1684  008E                     	;# 
  1685  0090                     	;# 
  1686  0091                     	;# 
  1687  0092                     	;# 
  1688  0095                     	;# 
  1689  0096                     	;# 
  1690  0097                     	;# 
  1691  0099                     	;# 
  1692  009A                     	;# 
  1693  009B                     	;# 
  1694  009B                     	;# 
  1695  009C                     	;# 
  1696  009D                     	;# 
  1697  009E                     	;# 
  1698  010C                     	;# 
  1699  010D                     	;# 
  1700  010E                     	;# 
  1701  0116                     	;# 
  1702  0117                     	;# 
  1703  011D                     	;# 
  1704  018C                     	;# 
  1705  018D                     	;# 
  1706  018E                     	;# 
  1707  0191                     	;# 
  1708  0191                     	;# 
  1709  0192                     	;# 
  1710  0193                     	;# 
  1711  0193                     	;# 
  1712  0194                     	;# 
  1713  0195                     	;# 
  1714  0196                     	;# 
  1715  0197                     	;# 
  1716  0199                     	;# 
  1717  019A                     	;# 
  1718  019B                     	;# 
  1719  019B                     	;# 
  1720  019B                     	;# 
  1721  019B                     	;# 
  1722  019C                     	;# 
  1723  019C                     	;# 
  1724  019D                     	;# 
  1725  019E                     	;# 
  1726  019F                     	;# 
  1727  020D                     	;# 
  1728  0210                     	;# 
  1729  0211                     	;# 
  1730  0211                     	;# 
  1731  0212                     	;# 
  1732  0212                     	;# 
  1733  0213                     	;# 
  1734  0213                     	;# 
  1735  0214                     	;# 
  1736  0214                     	;# 
  1737  0215                     	;# 
  1738  0215                     	;# 
  1739  0215                     	;# 
  1740  0216                     	;# 
  1741  0216                     	;# 
  1742  0217                     	;# 
  1743  0217                     	;# 
  1744  0291                     	;# 
  1745  0291                     	;# 
  1746  0292                     	;# 
  1747  0293                     	;# 
  1748  0298                     	;# 
  1749  0298                     	;# 
  1750  0299                     	;# 
  1751  029A                     	;# 
  1752  0394                     	;# 
  1753  0395                     	;# 
  1754  0396                     	;# 
  1755  0FE4                     	;# 
  1756  0FE5                     	;# 
  1757  0FE6                     	;# 
  1758  0FE7                     	;# 
  1759  0FE8                     	;# 
  1760  0FE9                     	;# 
  1761  0FEA                     	;# 
  1762  0FEB                     	;# 
  1763  0FED                     	;# 
  1764  0FEE                     	;# 
  1765  0FEF                     	;# 
  1766  0000                     	;# 
  1767  0001                     	;# 
  1768  0002                     	;# 
  1769  0003                     	;# 
  1770  0004                     	;# 
  1771  0005                     	;# 
  1772  0006                     	;# 
  1773  0007                     	;# 
  1774  0008                     	;# 
  1775  0009                     	;# 
  1776  000A                     	;# 
  1777  000B                     	;# 
  1778  000C                     	;# 
  1779  000D                     	;# 
  1780  000E                     	;# 
  1781  0010                     	;# 
  1782  0011                     	;# 
  1783  0012                     	;# 
  1784  0015                     	;# 
  1785  0016                     	;# 
  1786  0016                     	;# 
  1787  0017                     	;# 
  1788  0018                     	;# 
  1789  0019                     	;# 
  1790  001A                     	;# 
  1791  001B                     	;# 
  1792  001C                     	;# 
  1793  008C                     	;# 
  1794  008D                     	;# 
  1795  008E                     	;# 
  1796  0090                     	;# 
  1797  0091                     	;# 
  1798  0092                     	;# 
  1799  0095                     	;# 
  1800  0096                     	;# 
  1801  0097                     	;# 
  1802  0099                     	;# 
  1803  009A                     	;# 
  1804  009B                     	;# 
  1805  009B                     	;# 
  1806  009C                     	;# 
  1807  009D                     	;# 
  1808  009E                     	;# 
  1809  010C                     	;# 
  1810  010D                     	;# 
  1811  010E                     	;# 
  1812  0116                     	;# 
  1813  0117                     	;# 
  1814  011D                     	;# 
  1815  018C                     	;# 
  1816  018D                     	;# 
  1817  018E                     	;# 
  1818  0191                     	;# 
  1819  0191                     	;# 
  1820  0192                     	;# 
  1821  0193                     	;# 
  1822  0193                     	;# 
  1823  0194                     	;# 
  1824  0195                     	;# 
  1825  0196                     	;# 
  1826  0197                     	;# 
  1827  0199                     	;# 
  1828  019A                     	;# 
  1829  019B                     	;# 
  1830  019B                     	;# 
  1831  019B                     	;# 
  1832  019B                     	;# 
  1833  019C                     	;# 
  1834  019C                     	;# 
  1835  019D                     	;# 
  1836  019E                     	;# 
  1837  019F                     	;# 
  1838  020D                     	;# 
  1839  0210                     	;# 
  1840  0211                     	;# 
  1841  0211                     	;# 
  1842  0212                     	;# 
  1843  0212                     	;# 
  1844  0213                     	;# 
  1845  0213                     	;# 
  1846  0214                     	;# 
  1847  0214                     	;# 
  1848  0215                     	;# 
  1849  0215                     	;# 
  1850  0215                     	;# 
  1851  0216                     	;# 
  1852  0216                     	;# 
  1853  0217                     	;# 
  1854  0217                     	;# 
  1855  0291                     	;# 
  1856  0291                     	;# 
  1857  0292                     	;# 
  1858  0293                     	;# 
  1859  0298                     	;# 
  1860  0298                     	;# 
  1861  0299                     	;# 
  1862  029A                     	;# 
  1863  0394                     	;# 
  1864  0395                     	;# 
  1865  0396                     	;# 
  1866  0FE4                     	;# 
  1867  0FE5                     	;# 
  1868  0FE6                     	;# 
  1869  0FE7                     	;# 
  1870  0FE8                     	;# 
  1871  0FE9                     	;# 
  1872  0FEA                     	;# 
  1873  0FEB                     	;# 
  1874  0FED                     	;# 
  1875  0FEE                     	;# 
  1876  0FEF                     	;# 
  1877  0000                     	;# 
  1878  0001                     	;# 
  1879  0002                     	;# 
  1880  0003                     	;# 
  1881  0004                     	;# 
  1882  0005                     	;# 
  1883  0006                     	;# 
  1884  0007                     	;# 
  1885  0008                     	;# 
  1886  0009                     	;# 
  1887  000A                     	;# 
  1888  000B                     	;# 
  1889  000C                     	;# 
  1890  000D                     	;# 
  1891  000E                     	;# 
  1892  0010                     	;# 
  1893  0011                     	;# 
  1894  0012                     	;# 
  1895  0015                     	;# 
  1896  0016                     	;# 
  1897  0016                     	;# 
  1898  0017                     	;# 
  1899  0018                     	;# 
  1900  0019                     	;# 
  1901  001A                     	;# 
  1902  001B                     	;# 
  1903  001C                     	;# 
  1904  008C                     	;# 
  1905  008D                     	;# 
  1906  008E                     	;# 
  1907  0090                     	;# 
  1908  0091                     	;# 
  1909  0092                     	;# 
  1910  0095                     	;# 
  1911  0096                     	;# 
  1912  0097                     	;# 
  1913  0099                     	;# 
  1914  009A                     	;# 
  1915  009B                     	;# 
  1916  009B                     	;# 
  1917  009C                     	;# 
  1918  009D                     	;# 
  1919  009E                     	;# 
  1920  010C                     	;# 
  1921  010D                     	;# 
  1922  010E                     	;# 
  1923  0116                     	;# 
  1924  0117                     	;# 
  1925  011D                     	;# 
  1926  018C                     	;# 
  1927  018D                     	;# 
  1928  018E                     	;# 
  1929  0191                     	;# 
  1930  0191                     	;# 
  1931  0192                     	;# 
  1932  0193                     	;# 
  1933  0193                     	;# 
  1934  0194                     	;# 
  1935  0195                     	;# 
  1936  0196                     	;# 
  1937  0197                     	;# 
  1938  0199                     	;# 
  1939  019A                     	;# 
  1940  019B                     	;# 
  1941  019B                     	;# 
  1942  019B                     	;# 
  1943  019B                     	;# 
  1944  019C                     	;# 
  1945  019C                     	;# 
  1946  019D                     	;# 
  1947  019E                     	;# 
  1948  019F                     	;# 
  1949  020D                     	;# 
  1950  0210                     	;# 
  1951  0211                     	;# 
  1952  0211                     	;# 
  1953  0212                     	;# 
  1954  0212                     	;# 
  1955  0213                     	;# 
  1956  0213                     	;# 
  1957  0214                     	;# 
  1958  0214                     	;# 
  1959  0215                     	;# 
  1960  0215                     	;# 
  1961  0215                     	;# 
  1962  0216                     	;# 
  1963  0216                     	;# 
  1964  0217                     	;# 
  1965  0217                     	;# 
  1966  0291                     	;# 
  1967  0291                     	;# 
  1968  0292                     	;# 
  1969  0293                     	;# 
  1970  0298                     	;# 
  1971  0298                     	;# 
  1972  0299                     	;# 
  1973  029A                     	;# 
  1974  0394                     	;# 
  1975  0395                     	;# 
  1976  0396                     	;# 
  1977  0FE4                     	;# 
  1978  0FE5                     	;# 
  1979  0FE6                     	;# 
  1980  0FE7                     	;# 
  1981  0FE8                     	;# 
  1982  0FE9                     	;# 
  1983  0FEA                     	;# 
  1984  0FEB                     	;# 
  1985  0FED                     	;# 
  1986  0FEE                     	;# 
  1987  0FEF                     	;# 
  1988                           
  1989                           	psect	idataBANK3
  1990  08AD                     __pidataBANK3:	
  1991                           
  1992                           ;initializer for __product
  1993  08AD  3463               	retlw	99
  1994  08AE  3402               	retlw	2
  1995  08AF  3400               	retlw	0
  1996  08B0  3400               	retlw	0
  1997  08B1  3400               	retlw	0
  1998  08B2  3400               	retlw	0
  1999  08B3  3400               	retlw	0
  2000  08B4  3400               	retlw	0
  2001  08B5  3400               	retlw	0
  2002  08B6  3400               	retlw	0
  2003  08B7  3400               	retlw	0
  2004  08B8  3400               	retlw	0
  2005  08B9  34FF               	retlw	255
  2006  08BA  34FF               	retlw	255
  2007  08BB  34FF               	retlw	255
  2008  08BC  3400               	retlw	0
  2009  08BD  3400               	retlw	0
  2010  08BE  3400               	retlw	0
  2011  08BF  3400               	retlw	0
  2012  08C0  3400               	retlw	0
  2013  08C1  3400               	retlw	0
  2014  08C2  3400               	retlw	0
  2015  08C3  3400               	retlw	0
  2016  08C4  3400               	retlw	0
  2017  08C5  3400               	retlw	0
  2018  08C6  3400               	retlw	0
  2019  08C7  3400               	retlw	0
  2020  08C8  3400               	retlw	0
  2021  08C9  3400               	retlw	0
  2022  08CA  3400               	retlw	0
  2023  08CB  3400               	retlw	0
  2024  08CC  3400               	retlw	0
  2025                           
  2026                           	psect	nvCOMMON
  2027  007D                     __pnvCOMMON:	
  2028  007D                     _WDT:	
  2029  007D                     	ds	1
  2030                           
  2031                           	psect	nvBANK0
  2032  0069                     __pnvBANK0:	
  2033  0069                     _Timer0:	
  2034  0069                     	ds	1
  2035  006A                     _myMain:	
  2036  006A                     	ds	1
  2037  006B                     _product:	
  2038  006B                     	ds	1
  2039  006C                     _Memory:	
  2040  006C                     	ds	1
  2041  000C                     _PORTA	set	12
  2042  000D                     _PORTB	set	13
  2043  000E                     _PORTC	set	14
  2044  0015                     _TMR0	set	21
  2045  005F                     _GIE	set	95
  2046  005C                     _INTE	set	92
  2047  0059                     _INTF	set	89
  2048  005B                     _IOCIE	set	91
  2049  0058                     _IOCIF	set	88
  2050  005E                     _PEIE	set	94
  2051  0060                     _RA0	set	96
  2052  0063                     _RA3	set	99
  2053  0064                     _RA4	set	100
  2054  0066                     _RA6	set	102
  2055  0067                     _RA7	set	103
  2056  0069                     _RB1	set	105
  2057  006B                     _RB3	set	107
  2058  006C                     _RB4	set	108
  2059  006D                     _RB5	set	109
  2060  0075                     _RC5	set	117
  2061  0076                     _RC6	set	118
  2062  0077                     _RC7	set	119
  2063  005D                     _TMR0IE	set	93
  2064  005A                     _TMR0IF	set	90
  2065  009D                     _ADCON0	set	157
  2066  009E                     _ADCON1	set	158
  2067  009C                     _ADRESH	set	156
  2068  009B                     _ADRESL	set	155
  2069  0095                     _OPTION_REG	set	149
  2070  0099                     _OSCCON	set	153
  2071  008C                     _TRISA	set	140
  2072  008D                     _TRISB	set	141
  2073  008E                     _TRISC	set	142
  2074  0097                     _WDTCON	set	151
  2075  04E9                     _GO_nDONE	set	1257
  2076  0117                     _FVRCON	set	279
  2077  010C                     _LATA	set	268
  2078  010D                     _LATB	set	269
  2079  010E                     _LATC	set	270
  2080  018C                     _ANSELA	set	396
  2081  018D                     _ANSELB	set	397
  2082  018E                     _ANSELC	set	398
  2083  0192                     _PMADRH	set	402
  2084  0191                     _PMADRL	set	401
  2085  0196                     _PMCON2	set	406
  2086  0194                     _PMDATH	set	404
  2087  0193                     _PMDATL	set	403
  2088  0CAE                     _CFGS	set	3246
  2089  0CAC                     _FREE	set	3244
  2090  0CAD                     _LWLO	set	3245
  2091  0CA8                     _RD	set	3240
  2092  0CA9                     _WR	set	3241
  2093  0CAA                     _WREN	set	3242
  2094  1068                     _WPUB0	set	4200
  2095  1069                     _WPUB1	set	4201
  2096  106A                     _WPUB2	set	4202
  2097  0396                     _IOCBF	set	918
  2098  0395                     _IOCBN	set	917
  2099  0394                     _IOCBP	set	916
  2100  1CB2                     _IOCBF2	set	7346
  2101                           
  2102                           ; #config settings
  2103  0000                     
  2104                           	psect	cinit
  2105  0018                     start_initialization:	
  2106  0018                     __initialization:	
  2107                           
  2108                           ; Clear objects allocated to COMMON
  2109  0018  01F8               	clrf	__pbssCOMMON& (0+127)
  2110  0019  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  2111  001A  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  2112  001B  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  2113  001C  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  2114                           
  2115                           ; Clear objects allocated to BANK0
  2116  001D  3056               	movlw	low __pbssBANK0
  2117  001E  0084               	movwf	4
  2118  001F  3000               	movlw	high __pbssBANK0
  2119  0020  0085               	movwf	5
  2120  0021  3013               	movlw	19
  2121  0022  3195  25FA  3180   	fcall	clear_ram0
  2122                           
  2123                           ; Clear objects allocated to BANK1
  2124  0025  30A0               	movlw	low __pbssBANK1
  2125  0026  0084               	movwf	4
  2126  0027  3000               	movlw	high __pbssBANK1
  2127  0028  0085               	movwf	5
  2128  0029  3049               	movlw	73
  2129  002A  3195  25FA  3180   	fcall	clear_ram0
  2130                           
  2131                           ; Clear objects allocated to BANK2
  2132  002D  3020               	movlw	low __pbssBANK2
  2133  002E  0084               	movwf	4
  2134  002F  3001               	movlw	high __pbssBANK2
  2135  0030  0085               	movwf	5
  2136  0031  303D               	movlw	61
  2137  0032  3195  25FA  3180   	fcall	clear_ram0
  2138                           
  2139                           ; Clear objects allocated to BANK3
  2140  0035  30A0               	movlw	low __pbssBANK3
  2141  0036  0084               	movwf	4
  2142  0037  3001               	movlw	high __pbssBANK3
  2143  0038  0085               	movwf	5
  2144  0039  3025               	movlw	37
  2145  003A  3195  25FA  3180   	fcall	clear_ram0
  2146                           
  2147                           ; Initialize objects allocated to BANK3
  2148  003D  30AD               	movlw	low __pidataBANK3
  2149  003E  0084               	movwf	4
  2150  003F  3088               	movlw	(high __pidataBANK3)| (0+128)
  2151  0040  0085               	movwf	5
  2152  0041  30C5               	movlw	low __pdataBANK3
  2153  0042  0086               	movwf	6
  2154  0043  3001               	movlw	high __pdataBANK3
  2155  0044  0087               	movwf	7
  2156  0045  3020               	movlw	32
  2157  0046  3195  25F4         	fcall	init_ram
  2158  0048                     end_of_initialization:	
  2159                           ;End of C runtime variable initialization code
  2160                           
  2161  0048                     __end_of__initialization:	
  2162  0048  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  2163  0049  0020               	movlb	0
  2164  004A  318B  2BAF         	ljmp	_main	;jump to C main() function
  2165                           
  2166                           	psect	bssCOMMON
  2167  0078                     __pbssCOMMON:	
  2168  0078                     _DimmerLights11:	
  2169  0078                     	ds	1
  2170  0079                     _DimmerLights22:	
  2171  0079                     	ds	1
  2172  007A                     _DimmerLights33:	
  2173  007A                     	ds	1
  2174  007B                     _DimmerLightsIntr:	
  2175  007B                     	ds	1
  2176  007C                     _DimmerLightsIntrIOC:	
  2177  007C                     	ds	1
  2178                           
  2179                           	psect	bssBANK0
  2180  0056                     __pbssBANK0:	
  2181  0056                     _Buz:	
  2182  0056                     	ds	1
  2183  0057                     _Dimmer:	
  2184  0057                     	ds	1
  2185  0058                     _DimmerLights:	
  2186  0058                     	ds	1
  2187  0059                     _LED:	
  2188  0059                     	ds	1
  2189  005A                     _Sw:	
  2190  005A                     	ds	1
  2191  005B                     _Temp:	
  2192  005B                     	ds	1
  2193  005C                     _VarErrLED:	
  2194  005C                     	ds	4
  2195  0060                     _VarLED1:	
  2196  0060                     	ds	4
  2197  0064                     _Dimmer1:	
  2198  0064                     	ds	3
  2199  0067                     __WDT:	
  2200  0067                     	ds	2
  2201                           
  2202                           	psect	bssBANK1
  2203  00A0                     __pbssBANK1:	
  2204  00A0                     _DimmerLights1:	
  2205  00A0                     	ds	15
  2206  00AF                     _DimmerLights2:	
  2207  00AF                     	ds	15
  2208  00BE                     _DimmerLights3:	
  2209  00BE                     	ds	15
  2210  00CD                     _Buz1:	
  2211  00CD                     	ds	12
  2212  00D9                     _VarTimer0:	
  2213  00D9                     	ds	8
  2214  00E1                     _VarLED2:	
  2215  00E1                     	ds	4
  2216  00E5                     _VarLED3:	
  2217  00E5                     	ds	4
  2218                           
  2219                           	psect	bssBANK2
  2220  0120                     __pbssBANK2:	
  2221  0120                     __myMain:	
  2222  0120                     	ds	20
  2223  0134                     _Temp1:	
  2224  0134                     	ds	14
  2225  0142                     _Sw1:	
  2226  0142                     	ds	9
  2227  014B                     _Sw2:	
  2228  014B                     	ds	9
  2229  0154                     _Sw3:	
  2230  0154                     	ds	9
  2231                           
  2232                           	psect	bssBANK3
  2233  01A0                     __pbssBANK3:	
  2234  01A0                     _VarMemory:	
  2235  01A0                     	ds	37
  2236                           
  2237                           	psect	dataBANK3
  2238  01C5                     __pdataBANK3:	
  2239  01C5                     __product:	
  2240  01C5                     	ds	32
  2241                           
  2242                           	psect	clrtext
  2243  15FA                     clear_ram0:	
  2244                           ;	Called with FSR0 containing the base address, and
  2245                           ;	WREG with the size to clear
  2246                           
  2247  15FA  0064               	clrwdt	;clear the watchdog before getting into this loop
  2248  15FB                     clrloop0:	
  2249  15FB  0180               	clrf	0	;clear RAM location pointed to by FSR
  2250  15FC  3101               	addfsr 0,1
  2251  15FD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2252  15FE  2DFB               	goto	clrloop0	;have we reached the end yet?
  2253  15FF  3400               	retlw	0	;all done for this memory range, return
  2254                           
  2255                           	psect	inittext
  2256  15F4                     init_ram:	
  2257  15F4  00FE               	movwf	126
  2258  15F5                     initloop:	
  2259  15F5  0012               	moviw fsr0++
  2260  15F6  001E               	movwi fsr1++
  2261  15F7  0BFE               	decfsz	126,f
  2262  15F8  2DF5               	goto	initloop
  2263  15F9  3400               	retlw	0
  2264                           
  2265                           	psect	cstackCOMMON
  2266  0070                     __pcstackCOMMON:	
  2267  0070                     ?_setDimmerLights_Initialization:	
  2268  0070                     ?_Dimmer_Initialization:	
  2269                           ; 0 bytes @ 0x0
  2270                           
  2271  0070                     ?_setMemory_GO:	
  2272                           ; 0 bytes @ 0x0
  2273                           
  2274  0070                     ?_setDimmerLights_Main:	
  2275                           ; 0 bytes @ 0x0
  2276                           
  2277  0070                     ?_setDimmerLights_ERROR:	
  2278                           ; 0 bytes @ 0x0
  2279                           
  2280  0070                     ?_setLED_Initialization:	
  2281                           ; 0 bytes @ 0x0
  2282                           
  2283  0070                     ?_setLED_Main:	
  2284                           ; 0 bytes @ 0x0
  2285                           
  2286  0070                     ?_Fosc_Set:	
  2287                           ; 0 bytes @ 0x0
  2288                           
  2289  0070                     ?_IO_Set:	
  2290                           ; 0 bytes @ 0x0
  2291                           
  2292  0070                     ?_TMR0_Set:	
  2293                           ; 0 bytes @ 0x0
  2294                           
  2295  0070                     ?_ADC_Set:	
  2296                           ; 0 bytes @ 0x0
  2297                           
  2298  0070                     ?_INT_Set:	
  2299                           ; 0 bytes @ 0x0
  2300                           
  2301  0070                     ?_IOC_Set:	
  2302                           ; 0 bytes @ 0x0
  2303                           
  2304  0070                     ?_WDT_Set:	
  2305                           ; 0 bytes @ 0x0
  2306                           
  2307  0070                     ?_IOC_ISR:	
  2308                           ; 0 bytes @ 0x0
  2309                           
  2310  0070                     ?_TMR0_ISR:	
  2311                           ; 0 bytes @ 0x0
  2312                           
  2313  0070                     ?_INT_ISR:	
  2314                           ; 0 bytes @ 0x0
  2315                           
  2316  0070                     ??_INT_ISR:	
  2317                           ; 0 bytes @ 0x0
  2318                           
  2319  0070                     ?_Flash_Memory_Write:	
  2320                           ; 0 bytes @ 0x0
  2321                           
  2322  0070                     ?_Flash_Memory_Modify:	
  2323                           ; 0 bytes @ 0x0
  2324                           
  2325  0070                     ?_WDT_Clearing:	
  2326                           ; 0 bytes @ 0x0
  2327                           
  2328  0070                     ?_myMain_Initialization:	
  2329                           ; 0 bytes @ 0x0
  2330                           
  2331  0070                     ?_Temp_Initialization:	
  2332                           ; 0 bytes @ 0x0
  2333                           
  2334  0070                     ?_Switch_Initialization:	
  2335                           ; 0 bytes @ 0x0
  2336                           
  2337  0070                     ?_getTemp_AD:	
  2338                           ; 0 bytes @ 0x0
  2339                           
  2340  0070                     ?_my_Main:	
  2341                           ; 0 bytes @ 0x0
  2342                           
  2343  0070                     ?_my_TestPointCleared:	
  2344                           ; 0 bytes @ 0x0
  2345                           
  2346  0070                     ?_Temp_Main:	
  2347                           ; 0 bytes @ 0x0
  2348                           
  2349  0070                     ?_Switch_Main:	
  2350                           ; 0 bytes @ 0x0
  2351                           
  2352  0070                     ?_setTemp_Enable:	
  2353                           ; 0 bytes @ 0x0
  2354                           
  2355  0070                     ?_setSw_Enable:	
  2356                           ; 0 bytes @ 0x0
  2357                           
  2358  0070                     ?_setTemp_Initialization:	
  2359                           ; 0 bytes @ 0x0
  2360                           
  2361  0070                     ?_setTemp_Main:	
  2362                           ; 0 bytes @ 0x0
  2363                           
  2364  0070                     ?_setOverTemp_Exceptions:	
  2365                           ; 0 bytes @ 0x0
  2366                           
  2367  0070                     ?_setSw_Initialization:	
  2368                           ; 0 bytes @ 0x0
  2369                           
  2370  0070                     ?_setSw_Main:	
  2371                           ; 0 bytes @ 0x0
  2372                           
  2373  0070                     ?_Sw_DimmerOnFunc:	
  2374                           ; 0 bytes @ 0x0
  2375                           
  2376  0070                     ?_Sw_DimmerAdjFunc:	
  2377                           ; 0 bytes @ 0x0
  2378                           
  2379  0070                     ?_Sw_DimmerOffFunc:	
  2380                           ; 0 bytes @ 0x0
  2381                           
  2382  0070                     ?_Buzzer_Initialization:	
  2383                           ; 0 bytes @ 0x0
  2384                           
  2385  0070                     ?_Buzzer_Main:	
  2386                           ; 0 bytes @ 0x0
  2387                           
  2388  0070                     ?_DimmerIntrIOCPointSelect:	
  2389                           ; 0 bytes @ 0x0
  2390                           
  2391  0070                     ??_DimmerIntrIOCPointSelect:	
  2392                           ; 0 bytes @ 0x0
  2393                           
  2394  0070                     ?_setDimmerLights_IntrIOC_GO:	
  2395                           ; 0 bytes @ 0x0
  2396                           
  2397  0070                     ?_DimmerIntrPointSelect:	
  2398                           ; 0 bytes @ 0x0
  2399                           
  2400  0070                     ??_DimmerIntrPointSelect:	
  2401                           ; 0 bytes @ 0x0
  2402                           
  2403  0070                     ?_setDimmerLights_IntrControl:	
  2404                           ; 0 bytes @ 0x0
  2405                           
  2406  0070                     ?_DimmerLightsPointSelect:	
  2407                           ; 0 bytes @ 0x0
  2408                           
  2409  0070                     ?_DimmerLights_Initialization:	
  2410                           ; 0 bytes @ 0x0
  2411                           
  2412  0070                     ?_DimmerLights_Close:	
  2413                           ; 0 bytes @ 0x0
  2414                           
  2415  0070                     ?_DimmerLights_Main:	
  2416                           ; 0 bytes @ 0x0
  2417                           
  2418  0070                     ?_DimmerLights_Exceptions:	
  2419                           ; 0 bytes @ 0x0
  2420                           
  2421  0070                     ?_LedPointSelect:	
  2422                           ; 0 bytes @ 0x0
  2423                           
  2424  0070                     ?_LED_Initialization:	
  2425                           ; 0 bytes @ 0x0
  2426                           
  2427  0070                     ?_LED_Main:	
  2428                           ; 0 bytes @ 0x0
  2429                           
  2430  0070                     ?_Mcu_Initialization:	
  2431                           ; 0 bytes @ 0x0
  2432                           
  2433  0070                     ?_ISR:	
  2434                           ; 0 bytes @ 0x0
  2435                           
  2436  0070                     ?_setDimmerReClock:	
  2437                           ; 0 bytes @ 0x0
  2438                           
  2439  0070                     ?_Flash_Memory_Initialization:	
  2440                           ; 0 bytes @ 0x0
  2441                           
  2442  0070                     ?_Flash_Memory_Main:	
  2443                           ; 0 bytes @ 0x0
  2444                           
  2445  0070                     ?_Flash_Memory_Unlock:	
  2446                           ; 0 bytes @ 0x0
  2447                           
  2448  0070                     ?_Flash_Memory_Erasing:	
  2449                           ; 0 bytes @ 0x0
  2450                           
  2451  0070                     ?_WDT_Main:	
  2452                           ; 0 bytes @ 0x0
  2453                           
  2454  0070                     ?_TouchPower:	
  2455                           ; 0 bytes @ 0x0
  2456                           
  2457  0070                     ?_SwPointSelect:	
  2458                           ; 0 bytes @ 0x0
  2459                           
  2460  0070                     ?_getDimmerLights_StatusFlag:	
  2461                           ; 0 bytes @ 0x0
  2462                           
  2463  0070                     ?_Flash_Memory_Read:	
  2464                           ; 1 bytes @ 0x0
  2465                           
  2466  0070                     ?_setPercentValue:	
  2467                           ; 1 bytes @ 0x0
  2468                           
  2469                           
  2470                           ; 1 bytes @ 0x0
  2471  0070                     	ds	1
  2472  0071                     DimmerIntrIOCPointSelect@lights:	
  2473  0071                     DimmerIntrPointSelect@lights:	
  2474                           ; 1 bytes @ 0x1
  2475                           
  2476                           
  2477                           ; 1 bytes @ 0x1
  2478  0071                     	ds	1
  2479  0072                     ??_setDimmerLights_IntrIOC_GO:	
  2480  0072                     ??_setDimmerLights_IntrControl:	
  2481                           ; 0 bytes @ 0x2
  2482                           
  2483  0072                     setDimmerLights_IntrIOC_GO@lights:	
  2484                           ; 0 bytes @ 0x2
  2485                           
  2486                           
  2487                           ; 1 bytes @ 0x2
  2488  0072                     	ds	1
  2489  0073                     ??_IOC_ISR:	
  2490  0073                     ??_setDimmerReClock:	
  2491                           ; 0 bytes @ 0x3
  2492                           
  2493                           
  2494                           ; 0 bytes @ 0x3
  2495  0073                     	ds	3
  2496  0076                     setDimmerLights_IntrControl@lights:	
  2497                           
  2498                           ; 1 bytes @ 0x6
  2499  0076                     	ds	1
  2500  0077                     ??_TMR0_ISR:	
  2501  0077                     ??_ISR:	
  2502                           ; 0 bytes @ 0x7
  2503                           
  2504                           
  2505                           ; 0 bytes @ 0x7
  2506  0077                     	ds	1
  2507                           
  2508                           	psect	cstackBANK0
  2509  0020                     __pcstackBANK0:	
  2510  0020                     ??_Dimmer_Initialization:	
  2511  0020                     ??_getDimmerLights_StatusFlag:	
  2512                           ; 0 bytes @ 0x0
  2513                           
  2514  0020                     ??_setMemory_GO:	
  2515                           ; 0 bytes @ 0x0
  2516                           
  2517  0020                     ??_Fosc_Set:	
  2518                           ; 0 bytes @ 0x0
  2519                           
  2520  0020                     ??_IO_Set:	
  2521                           ; 0 bytes @ 0x0
  2522                           
  2523  0020                     ??_TMR0_Set:	
  2524                           ; 0 bytes @ 0x0
  2525                           
  2526  0020                     ??_ADC_Set:	
  2527                           ; 0 bytes @ 0x0
  2528                           
  2529  0020                     ??_INT_Set:	
  2530                           ; 0 bytes @ 0x0
  2531                           
  2532  0020                     ??_IOC_Set:	
  2533                           ; 0 bytes @ 0x0
  2534                           
  2535  0020                     ??_WDT_Set:	
  2536                           ; 0 bytes @ 0x0
  2537                           
  2538  0020                     ??_Flash_Memory_Read:	
  2539                           ; 0 bytes @ 0x0
  2540                           
  2541  0020                     ??_Flash_Memory_Write:	
  2542                           ; 0 bytes @ 0x0
  2543                           
  2544  0020                     ??_WDT_Clearing:	
  2545                           ; 0 bytes @ 0x0
  2546                           
  2547  0020                     ??_myMain_Initialization:	
  2548                           ; 0 bytes @ 0x0
  2549                           
  2550  0020                     ??_my_TestPointCleared:	
  2551                           ; 0 bytes @ 0x0
  2552                           
  2553  0020                     ??_setTemp_Enable:	
  2554                           ; 0 bytes @ 0x0
  2555                           
  2556  0020                     ??_setTemp_Initialization:	
  2557                           ; 0 bytes @ 0x0
  2558                           
  2559  0020                     ??_Buzzer_Initialization:	
  2560                           ; 0 bytes @ 0x0
  2561                           
  2562  0020                     ??_Buzzer_Main:	
  2563                           ; 0 bytes @ 0x0
  2564                           
  2565  0020                     ??_DimmerLightsPointSelect:	
  2566                           ; 0 bytes @ 0x0
  2567                           
  2568  0020                     ??_LedPointSelect:	
  2569                           ; 0 bytes @ 0x0
  2570                           
  2571  0020                     ??_Flash_Memory_Unlock:	
  2572                           ; 0 bytes @ 0x0
  2573                           
  2574  0020                     ??_Flash_Memory_Erasing:	
  2575                           ; 0 bytes @ 0x0
  2576                           
  2577  0020                     ??_WDT_Main:	
  2578                           ; 0 bytes @ 0x0
  2579                           
  2580  0020                     ??_TouchPower:	
  2581                           ; 0 bytes @ 0x0
  2582                           
  2583  0020                     ??_SwPointSelect:	
  2584                           ; 0 bytes @ 0x0
  2585                           
  2586  0020                     ?_getAD:	
  2587                           ; 0 bytes @ 0x0
  2588                           
  2589  0020                     ?___awdiv:	
  2590                           ; 2 bytes @ 0x0
  2591                           
  2592  0020                     ?___ftpack:	
  2593                           ; 2 bytes @ 0x0
  2594                           
  2595  0020                     getAD@adcon1:	
  2596                           ; 3 bytes @ 0x0
  2597                           
  2598  0020                     setTemp_Enable@command:	
  2599                           ; 1 bytes @ 0x0
  2600                           
  2601  0020                     ___awdiv@divisor:	
  2602                           ; 1 bytes @ 0x0
  2603                           
  2604  0020                     ___ftpack@arg:	
  2605                           ; 2 bytes @ 0x0
  2606                           
  2607                           
  2608                           ; 3 bytes @ 0x0
  2609  0020                     	ds	1
  2610  0021                     ??_Temp_Initialization:	
  2611  0021                     ??_Mcu_Initialization:	
  2612                           ; 0 bytes @ 0x1
  2613                           
  2614  0021                     DimmerLightsPointSelect@lights:	
  2615                           ; 0 bytes @ 0x1
  2616                           
  2617  0021                     getDimmerLights_StatusFlag@Status:	
  2618                           ; 1 bytes @ 0x1
  2619                           
  2620  0021                     LedPointSelect@led:	
  2621                           ; 1 bytes @ 0x1
  2622                           
  2623  0021                     Flash_Memory_Read@i:	
  2624                           ; 1 bytes @ 0x1
  2625                           
  2626  0021                     Flash_Memory_Write@i:	
  2627                           ; 1 bytes @ 0x1
  2628                           
  2629  0021                     SwPointSelect@sw:	
  2630                           ; 1 bytes @ 0x1
  2631                           
  2632                           
  2633                           ; 1 bytes @ 0x1
  2634  0021                     	ds	1
  2635  0022                     ??_setDimmerLights_Initialization:	
  2636  0022                     ?_setDimmerLights_Adj:	
  2637                           ; 0 bytes @ 0x2
  2638                           
  2639  0022                     ?_setDimmerLights_TriggerERROR:	
  2640                           ; 0 bytes @ 0x2
  2641                           
  2642  0022                     ?_setLED:	
  2643                           ; 0 bytes @ 0x2
  2644                           
  2645  0022                     ?_setSw_Status:	
  2646                           ; 0 bytes @ 0x2
  2647                           
  2648  0022                     ??_setLED_Main:	
  2649                           ; 0 bytes @ 0x2
  2650                           
  2651  0022                     ??_setSw_Enable:	
  2652                           ; 0 bytes @ 0x2
  2653                           
  2654  0022                     ?_setDimmerLights_Switch:	
  2655                           ; 0 bytes @ 0x2
  2656                           
  2657  0022                     ?_setDimmerLights_AdjGo:	
  2658                           ; 0 bytes @ 0x2
  2659                           
  2660  0022                     ?_setDimmerLights_Trigger:	
  2661                           ; 0 bytes @ 0x2
  2662                           
  2663  0022                     ?_setDimmerLights_TriggerAdj:	
  2664                           ; 0 bytes @ 0x2
  2665                           
  2666  0022                     _getDimmerLights_StatusFlag$1677:	
  2667                           ; 0 bytes @ 0x2
  2668                           
  2669  0022                     setDimmerLights_TriggerERROR@command:	
  2670                           ; 1 bytes @ 0x2
  2671                           
  2672  0022                     setDimmerLights_Adj@status:	
  2673                           ; 1 bytes @ 0x2
  2674                           
  2675  0022                     setDimmerLights_Switch@command:	
  2676                           ; 1 bytes @ 0x2
  2677                           
  2678  0022                     setDimmerLights_AdjGo@command:	
  2679                           ; 1 bytes @ 0x2
  2680                           
  2681  0022                     setDimmerLights_Trigger@command:	
  2682                           ; 1 bytes @ 0x2
  2683                           
  2684  0022                     setDimmerLights_TriggerAdj@command:	
  2685                           ; 1 bytes @ 0x2
  2686                           
  2687  0022                     setLED@command:	
  2688                           ; 1 bytes @ 0x2
  2689                           
  2690  0022                     Flash_Memory_Read@address:	
  2691                           ; 1 bytes @ 0x2
  2692                           
  2693  0022                     setMemory_GO@command:	
  2694                           ; 1 bytes @ 0x2
  2695                           
  2696  0022                     setSw_Enable@command:	
  2697                           ; 1 bytes @ 0x2
  2698                           
  2699  0022                     setSw_Status@command:	
  2700                           ; 1 bytes @ 0x2
  2701                           
  2702  0022                     ___awdiv@dividend:	
  2703                           ; 1 bytes @ 0x2
  2704                           
  2705                           
  2706                           ; 2 bytes @ 0x2
  2707  0022                     	ds	1
  2708  0023                     ??_setDimmerLights_Adj:	
  2709  0023                     ??_setDimmerLights_TriggerERROR:	
  2710                           ; 0 bytes @ 0x3
  2711                           
  2712  0023                     ??_setLED:	
  2713                           ; 0 bytes @ 0x3
  2714                           
  2715  0023                     ??_setSw_Status:	
  2716                           ; 0 bytes @ 0x3
  2717                           
  2718  0023                     ??_DimmerLights_Close:	
  2719                           ; 0 bytes @ 0x3
  2720                           
  2721  0023                     ??_setDimmerLights_Switch:	
  2722                           ; 0 bytes @ 0x3
  2723                           
  2724  0023                     ??_setDimmerLights_AdjGo:	
  2725                           ; 0 bytes @ 0x3
  2726                           
  2727  0023                     ??_setDimmerLights_Trigger:	
  2728                           ; 0 bytes @ 0x3
  2729                           
  2730  0023                     ??_setDimmerLights_TriggerAdj:	
  2731                           ; 0 bytes @ 0x3
  2732                           
  2733  0023                     ??_getAD:	
  2734                           ; 0 bytes @ 0x3
  2735                           
  2736  0023                     setDimmerLights_Initialization@lights:	
  2737                           ; 0 bytes @ 0x3
  2738                           
  2739  0023                     setDimmerLights_TriggerERROR@lights:	
  2740                           ; 1 bytes @ 0x3
  2741                           
  2742  0023                     setDimmerLights_Switch@lights:	
  2743                           ; 1 bytes @ 0x3
  2744                           
  2745  0023                     setDimmerLights_AdjGo@lights:	
  2746                           ; 1 bytes @ 0x3
  2747                           
  2748  0023                     setDimmerLights_Trigger@lights:	
  2749                           ; 1 bytes @ 0x3
  2750                           
  2751  0023                     setDimmerLights_TriggerAdj@lights:	
  2752                           ; 1 bytes @ 0x3
  2753                           
  2754  0023                     setLED@led:	
  2755                           ; 1 bytes @ 0x3
  2756                           
  2757  0023                     getAD@adcon0:	
  2758                           ; 1 bytes @ 0x3
  2759                           
  2760  0023                     Flash_Memory_Read@ret:	
  2761                           ; 1 bytes @ 0x3
  2762                           
  2763  0023                     setSw_Status@sw:	
  2764                           ; 1 bytes @ 0x3
  2765                           
  2766  0023                     ___ftpack@exp:	
  2767                           ; 1 bytes @ 0x3
  2768                           
  2769                           
  2770                           ; 1 bytes @ 0x3
  2771  0023                     	ds	1
  2772  0024                     ?_setDimmerLights:	
  2773  0024                     ??_setDimmerLights_ERROR:	
  2774                           ; 0 bytes @ 0x4
  2775                           
  2776  0024                     ??_setLED_Initialization:	
  2777                           ; 0 bytes @ 0x4
  2778                           
  2779  0024                     ??_Flash_Memory_Modify:	
  2780                           ; 0 bytes @ 0x4
  2781                           
  2782  0024                     ??_getTemp_AD:	
  2783                           ; 0 bytes @ 0x4
  2784                           
  2785  0024                     ??_setSw_Initialization:	
  2786                           ; 0 bytes @ 0x4
  2787                           
  2788  0024                     ??_Sw_DimmerAdjFunc:	
  2789                           ; 0 bytes @ 0x4
  2790                           
  2791  0024                     ??_Sw_DimmerOffFunc:	
  2792                           ; 0 bytes @ 0x4
  2793                           
  2794  0024                     ??_DimmerLights_Initialization:	
  2795                           ; 0 bytes @ 0x4
  2796                           
  2797  0024                     ??___awdiv:	
  2798                           ; 0 bytes @ 0x4
  2799                           
  2800  0024                     setDimmerLights@status:	
  2801                           ; 0 bytes @ 0x4
  2802                           
  2803  0024                     setDimmerLights_Adj@lights:	
  2804                           ; 1 bytes @ 0x4
  2805                           
  2806  0024                     setLED_Initialization@led:	
  2807                           ; 1 bytes @ 0x4
  2808                           
  2809  0024                     setLED_Main@led:	
  2810                           ; 1 bytes @ 0x4
  2811                           
  2812  0024                     setSw_Initialization@sw:	
  2813                           ; 1 bytes @ 0x4
  2814                           
  2815  0024                     ___ftpack@sign:	
  2816                           ; 1 bytes @ 0x4
  2817                           
  2818                           
  2819                           ; 1 bytes @ 0x4
  2820  0024                     	ds	1
  2821  0025                     ??_setDimmerLights:	
  2822  0025                     ??_Switch_Initialization:	
  2823                           ; 0 bytes @ 0x5
  2824                           
  2825  0025                     ??___ftpack:	
  2826                           ; 0 bytes @ 0x5
  2827                           
  2828  0025                     ??_LED_Initialization:	
  2829                           ; 0 bytes @ 0x5
  2830                           
  2831  0025                     ??_LED_Main:	
  2832                           ; 0 bytes @ 0x5
  2833                           
  2834  0025                     setDimmerLights_ERROR@lights:	
  2835                           ; 0 bytes @ 0x5
  2836                           
  2837  0025                     _Sw_DimmerAdjFunc$4421:	
  2838                           ; 1 bytes @ 0x5
  2839                           
  2840  0025                     ___awdiv@counter:	
  2841                           ; 1 bytes @ 0x5
  2842                           
  2843                           
  2844                           ; 1 bytes @ 0x5
  2845  0025                     	ds	1
  2846  0026                     setDimmerLights@lights:	
  2847  0026                     Flash_Memory_Modify@i:	
  2848                           ; 1 bytes @ 0x6
  2849                           
  2850  0026                     Sw_DimmerOffFunc@sw:	
  2851                           ; 1 bytes @ 0x6
  2852                           
  2853  0026                     _Sw_DimmerAdjFunc$4422:	
  2854                           ; 1 bytes @ 0x6
  2855                           
  2856  0026                     ___awdiv@sign:	
  2857                           ; 1 bytes @ 0x6
  2858                           
  2859                           
  2860                           ; 1 bytes @ 0x6
  2861  0026                     	ds	1
  2862  0027                     ??_Flash_Memory_Main:	
  2863  0027                     _Sw_DimmerAdjFunc$4423:	
  2864                           ; 0 bytes @ 0x7
  2865                           
  2866  0027                     ___awdiv@quotient:	
  2867                           ; 1 bytes @ 0x7
  2868                           
  2869                           
  2870                           ; 2 bytes @ 0x7
  2871  0027                     	ds	1
  2872  0028                     ?___awtoft:	
  2873  0028                     getTemp_AD@channel:	
  2874                           ; 3 bytes @ 0x8
  2875                           
  2876  0028                     Sw_DimmerAdjFunc@Idle:	
  2877                           ; 1 bytes @ 0x8
  2878                           
  2879  0028                     ___awtoft@c:	
  2880                           ; 1 bytes @ 0x8
  2881                           
  2882                           
  2883                           ; 2 bytes @ 0x8
  2884  0028                     	ds	1
  2885  0029                     ?_setBuz:	
  2886  0029                     Sw_DimmerAdjFunc@sw:	
  2887                           ; 0 bytes @ 0x9
  2888                           
  2889  0029                     setBuz@time:	
  2890                           ; 1 bytes @ 0x9
  2891                           
  2892                           
  2893                           ; 2 bytes @ 0x9
  2894  0029                     	ds	2
  2895  002B                     ??_setBuz:	
  2896  002B                     ??___awtoft:	
  2897                           ; 0 bytes @ 0xB
  2898                           
  2899                           
  2900                           ; 0 bytes @ 0xB
  2901  002B                     	ds	1
  2902  002C                     setBuz@count:	
  2903                           
  2904                           ; 1 bytes @ 0xC
  2905  002C                     	ds	1
  2906  002D                     ??_setDimmerLights_Main:	
  2907  002D                     ??_my_Main:	
  2908                           ; 0 bytes @ 0xD
  2909                           
  2910  002D                     ??_Sw_DimmerOnFunc:	
  2911                           ; 0 bytes @ 0xD
  2912                           
  2913  002D                     ??_DimmerLights_Exceptions:	
  2914                           ; 0 bytes @ 0xD
  2915                           
  2916  002D                     DimmerLights_Exceptions@status:	
  2917                           ; 0 bytes @ 0xD
  2918                           
  2919  002D                     ___awtoft@sign:	
  2920                           ; 1 bytes @ 0xD
  2921                           
  2922                           
  2923                           ; 1 bytes @ 0xD
  2924  002D                     	ds	1
  2925  002E                     ??_setOverTemp_Exceptions:	
  2926  002E                     ?___ftdiv:	
  2927                           ; 0 bytes @ 0xE
  2928                           
  2929  002E                     _setDimmerLights_Main$1671:	
  2930                           ; 3 bytes @ 0xE
  2931                           
  2932  002E                     _Sw_DimmerOnFunc$4409:	
  2933                           ; 1 bytes @ 0xE
  2934                           
  2935  002E                     ___ftdiv@f2:	
  2936                           ; 1 bytes @ 0xE
  2937                           
  2938                           
  2939                           ; 3 bytes @ 0xE
  2940  002E                     	ds	1
  2941  002F                     _setDimmerLights_Main$1672:	
  2942  002F                     setOverTemp_Exceptions@command:	
  2943                           ; 1 bytes @ 0xF
  2944                           
  2945  002F                     _Sw_DimmerOnFunc$4410:	
  2946                           ; 1 bytes @ 0xF
  2947                           
  2948                           
  2949                           ; 1 bytes @ 0xF
  2950  002F                     	ds	1
  2951  0030                     ??_setTemp_Main:	
  2952  0030                     _setDimmerLights_Main$1673:	
  2953                           ; 0 bytes @ 0x10
  2954                           
  2955  0030                     _Sw_DimmerOnFunc$4411:	
  2956                           ; 1 bytes @ 0x10
  2957                           
  2958                           
  2959                           ; 1 bytes @ 0x10
  2960  0030                     	ds	1
  2961  0031                     setDimmerLights_Main@clear:	
  2962  0031                     Sw_DimmerOnFunc@Idle:	
  2963                           ; 1 bytes @ 0x11
  2964                           
  2965  0031                     ___ftdiv@f1:	
  2966                           ; 1 bytes @ 0x11
  2967                           
  2968                           
  2969                           ; 3 bytes @ 0x11
  2970  0031                     	ds	1
  2971  0032                     setDimmerLights_Main@lights:	
  2972  0032                     Sw_DimmerOnFunc@sw:	
  2973                           ; 1 bytes @ 0x12
  2974                           
  2975                           
  2976                           ; 1 bytes @ 0x12
  2977  0032                     	ds	1
  2978  0033                     ??_Temp_Main:	
  2979  0033                     ??_setSw_Main:	
  2980                           ; 0 bytes @ 0x13
  2981                           
  2982  0033                     ??_DimmerLights_Main:	
  2983                           ; 0 bytes @ 0x13
  2984                           
  2985                           
  2986                           ; 0 bytes @ 0x13
  2987  0033                     	ds	1
  2988  0034                     ??___ftdiv:	
  2989                           
  2990                           ; 0 bytes @ 0x14
  2991  0034                     	ds	1
  2992  0035                     setSw_Main@sw:	
  2993                           
  2994                           ; 1 bytes @ 0x15
  2995  0035                     	ds	1
  2996  0036                     ??_Switch_Main:	
  2997                           
  2998                           ; 0 bytes @ 0x16
  2999  0036                     	ds	2
  3000  0038                     ___ftdiv@cntr:	
  3001                           
  3002                           ; 1 bytes @ 0x18
  3003  0038                     	ds	1
  3004  0039                     ___ftdiv@f3:	
  3005                           
  3006                           ; 3 bytes @ 0x19
  3007  0039                     	ds	3
  3008  003C                     ___ftdiv@exp:	
  3009                           
  3010                           ; 1 bytes @ 0x1C
  3011  003C                     	ds	1
  3012  003D                     ___ftdiv@sign:	
  3013                           
  3014                           ; 1 bytes @ 0x1D
  3015  003D                     	ds	1
  3016  003E                     ?___fttol:	
  3017  003E                     ___fttol@f1:	
  3018                           ; 4 bytes @ 0x1E
  3019                           
  3020                           
  3021                           ; 3 bytes @ 0x1E
  3022  003E                     	ds	4
  3023  0042                     ??___fttol:	
  3024                           
  3025                           ; 0 bytes @ 0x22
  3026  0042                     	ds	4
  3027  0046                     ___fttol@sign1:	
  3028                           
  3029                           ; 1 bytes @ 0x26
  3030  0046                     	ds	1
  3031  0047                     ___fttol@lval:	
  3032                           
  3033                           ; 4 bytes @ 0x27
  3034  0047                     	ds	4
  3035  004B                     ___fttol@exp1:	
  3036                           
  3037                           ; 1 bytes @ 0x2B
  3038  004B                     	ds	1
  3039  004C                     ??_setPercentValue:	
  3040  004C                     setPercentValue@value:	
  3041                           ; 0 bytes @ 0x2C
  3042                           
  3043                           
  3044                           ; 1 bytes @ 0x2C
  3045  004C                     	ds	1
  3046  004D                     setPercentValue@i:	
  3047                           
  3048                           ; 3 bytes @ 0x2D
  3049  004D                     	ds	3
  3050  0050                     ??_Flash_Memory_Initialization:	
  3051                           
  3052                           ; 0 bytes @ 0x30
  3053  0050                     	ds	1
  3054  0051                     Flash_Memory_Initialization@i:	
  3055                           
  3056                           ; 1 bytes @ 0x31
  3057  0051                     	ds	1
  3058  0052                     ?_main:	
  3059  0052                     main@argc:	
  3060                           ; 2 bytes @ 0x32
  3061                           
  3062                           
  3063                           ; 2 bytes @ 0x32
  3064  0052                     	ds	2
  3065  0054                     main@argv:	
  3066                           
  3067                           ; 2 bytes @ 0x34
  3068  0054                     	ds	2
  3069  0056                     ??_main:	
  3070                           
  3071                           	psect	maintext
  3072  0BAF                     __pmaintext:	
  3073                           ; 0 bytes @ 0x36
  3074 ;;
  3075 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3076 ;;
  3077 ;; *************** function _main *****************
  3078 ;; Defined at:
  3079 ;;		line 7 in file "../src/Main_B1.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;  argc            2   50[BANK0 ] int 
  3082 ;;  argv            2   52[BANK0 ] PTR PTR unsigned char 
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;		None
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  2   50[BANK0 ] int 
  3087 ;; Registers used:
  3088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3089 ;; Tracked objects:
  3090 ;;		On entry : 17F/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3094 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3097 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3098 ;;Total ram usage:        4 bytes
  3099 ;; Hardware stack levels required when called:   12
  3100 ;; This function calls:
  3101 ;;		_Buzzer_Initialization
  3102 ;;		_Buzzer_Main
  3103 ;;		_DimmerLights_Initialization
  3104 ;;		_DimmerLights_Main
  3105 ;;		_Flash_Memory_Initialization
  3106 ;;		_Flash_Memory_Main
  3107 ;;		_LED_Initialization
  3108 ;;		_LED_Main
  3109 ;;		_Mcu_Initialization
  3110 ;;		_Switch_Initialization
  3111 ;;		_Switch_Main
  3112 ;;		_Temp_Initialization
  3113 ;;		_Temp_Main
  3114 ;;		_WDT_Main
  3115 ;;		_getTemp_AD
  3116 ;;		_myMain_Initialization
  3117 ;;		_my_Main
  3118 ;;		_my_TestPointCleared
  3119 ;; This function is called by:
  3120 ;;		Startup code after reset
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124                           
  3125                           ;psect for function _main
  3126  0BAF                     _main:	
  3127                           
  3128                           ;Main_B1.c: 9: myMain_Initialization();
  3129                           
  3130                           ;incstack = 0
  3131                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3132  0BAF  3197  2749  318B   	fcall	_myMain_Initialization
  3133                           
  3134                           ;Main_B1.c: 10: Mcu_Initialization();
  3135  0BB2  3188  2022  318B   	fcall	_Mcu_Initialization
  3136                           
  3137                           ;Main_B1.c: 11: Flash_Memory_Initialization();
  3138  0BB5  3184  2439  318B   	fcall	_Flash_Memory_Initialization
  3139                           
  3140                           ;Main_B1.c: 12: LED_Initialization();
  3141  0BB8  3196  26E2  318B   	fcall	_LED_Initialization
  3142                           
  3143                           ;Main_B1.c: 13: Buzzer_Initialization();
  3144  0BBB  3196  2617  318B   	fcall	_Buzzer_Initialization
  3145                           
  3146                           ;Main_B1.c: 15: ;;
  3147                           ;Main_B1.c: 16: Temp_Initialization();
  3148  0BBE  3195  25D9  318B   	fcall	_Temp_Initialization
  3149                           
  3150                           ;Main_B1.c: 17: ;;
  3151                           ;Main_B1.c: 18: ;;
  3152                           ;Main_B1.c: 19: ;;
  3153                           ;Main_B1.c: 21: DimmerLights_Initialization();
  3154  0BC1  3188  208F  318B   	fcall	_DimmerLights_Initialization
  3155                           
  3156                           ;Main_B1.c: 22: ;;
  3157                           ;Main_B1.c: 23: ;;
  3158                           ;Main_B1.c: 24: ;;
  3159                           ;Main_B1.c: 25: Switch_Initialization();
  3160  0BC4  3197  2713  318B   	fcall	_Switch_Initialization
  3161                           
  3162                           ;Main_B1.c: 26: ;;
  3163                           ;Main_B1.c: 27: __nop();
  3164  0BC7  0000               	nop
  3165  0BC8                     l5321:	
  3166                           ;Main_B1.c: 28: ;;
  3167                           ;Main_B1.c: 31: while (1) {
  3168                           
  3169                           
  3170                           ;Main_B1.c: 33: if (myMain->PowerON) {
  3171  0BC8  0020               	movlb	0	; select bank0
  3172  0BC9  086A               	movf	_myMain,w
  3173  0BCA  0086               	movwf	6
  3174  0BCB  3001               	movlw	1	; select bank2/3
  3175  0BCC  0087               	movwf	7
  3176  0BCD  1C01               	btfss	1,0
  3177  0BCE  2BD3               	goto	l5325
  3178                           
  3179                           ;Main_B1.c: 35: ;;
  3180                           ;Main_B1.c: 39: ;;
  3181                           ;Main_B1.c: 43: getTemp_AD(0x09);
  3182  0BCF  3009               	movlw	9
  3183  0BD0  318D  25D9  318B   	fcall	_getTemp_AD
  3184  0BD3                     l5325:	
  3185                           ;Main_B1.c: 47: ;;
  3186                           
  3187                           
  3188                           ;Main_B1.c: 58: }
  3189                           ;Main_B1.c: 61: if (myMain->T0_Timerout) {
  3190  0BD3  0020               	movlb	0	; select bank0
  3191  0BD4  086A               	movf	_myMain,w
  3192  0BD5  0086               	movwf	6
  3193  0BD6  3001               	movlw	1	; select bank2/3
  3194  0BD7  0087               	movwf	7
  3195  0BD8  1C81               	btfss	1,1
  3196  0BD9  2BC8               	goto	l5321
  3197                           
  3198                           ;Main_B1.c: 62: myMain->T0_Timerout = 0;
  3199  0BDA  086A               	movf	_myMain,w
  3200  0BDB  0086               	movwf	6
  3201  0BDC  3001               	movlw	1	; select bank2/3
  3202  0BDD  0087               	movwf	7
  3203  0BDE  1081               	bcf	1,1
  3204                           
  3205                           ;Main_B1.c: 63: my_Main();
  3206  0BDF  318F  278F  318B   	fcall	_my_Main
  3207                           
  3208                           ;Main_B1.c: 64: my_TestPointCleared();
  3209  0BE2  3197  2724  318B   	fcall	_my_TestPointCleared
  3210                           
  3211                           ;Main_B1.c: 65: WDT_Main();
  3212  0BE5  3187  27E7  318B   	fcall	_WDT_Main
  3213                           
  3214                           ;Main_B1.c: 66: ;;
  3215                           ;Main_B1.c: 67: ;;
  3216                           ;Main_B1.c: 68: if (myMain->PowerON) {
  3217  0BE8  0020               	movlb	0	; select bank0
  3218  0BE9  086A               	movf	_myMain,w
  3219  0BEA  0086               	movwf	6
  3220  0BEB  3001               	movlw	1	; select bank2/3
  3221  0BEC  0087               	movwf	7
  3222  0BED  1C01               	btfss	1,0
  3223  0BEE  2BC8               	goto	l5321
  3224                           
  3225                           ;Main_B1.c: 69: Flash_Memory_Main();
  3226  0BEF  318A  22DC  318B   	fcall	_Flash_Memory_Main
  3227                           
  3228                           ;Main_B1.c: 71: LED_Main();
  3229  0BF2  3196  26F2  318B   	fcall	_LED_Main
  3230                           
  3231                           ;Main_B1.c: 72: Buzzer_Main();
  3232  0BF5  3185  25CB  318B   	fcall	_Buzzer_Main
  3233                           
  3234                           ;Main_B1.c: 74: ;;
  3235                           ;Main_B1.c: 75: Temp_Main();
  3236  0BF8  3195  25DC  318B   	fcall	_Temp_Main
  3237                           
  3238                           ;Main_B1.c: 76: ;;
  3239                           ;Main_B1.c: 77: ;;
  3240                           ;Main_B1.c: 79: ;;
  3241                           ;Main_B1.c: 80: DimmerLights_Main();
  3242  0BFB  3196  2678  318B   	fcall	_DimmerLights_Main
  3243                           
  3244                           ;Main_B1.c: 81: Switch_Main();
  3245  0BFE  3196  2643  318B   	fcall	_Switch_Main
  3246                           
  3247                           ;Main_B1.c: 82: ;;
  3248                           ;Main_B1.c: 83: ;;
  3249                           ;Main_B1.c: 85: ;;
  3250                           ;Main_B1.c: 86: ;;
  3251                           ;Main_B1.c: 87: ;;
  3252  0C01  2BC8               	goto	l5321
  3253  0C02                     __end_of_main:	
  3254                           ;Main_B1.c: 88: }
  3255                           ;Main_B1.c: 89: }
  3256                           ;Main_B1.c: 107: }
  3257                           ;Main_B1.c: 108: return (0);
  3258                           ;	Return value of _main is never used
  3259                           
  3260                           
  3261                           	psect	text1
  3262  1724                     __ptext1:	
  3263 ;; *************** function _my_TestPointCleared *****************
  3264 ;; Defined at:
  3265 ;;		line 206 in file "../src/Main_B1.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;		None
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;		None
  3270 ;; Return value:  Size  Location     Type
  3271 ;;		None               void
  3272 ;; Registers used:
  3273 ;;		wreg, fsr1l, fsr1h
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3283 ;;Total ram usage:        0 bytes
  3284 ;; Hardware stack levels used:    1
  3285 ;; Hardware stack levels required when called:    5
  3286 ;; This function calls:
  3287 ;;		Nothing
  3288 ;; This function is called by:
  3289 ;;		_main
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293                           
  3294                           ;psect for function _my_TestPointCleared
  3295  1724                     _my_TestPointCleared:	
  3296                           
  3297                           ;Main_B1.c: 207: myMain->pcount1 = 0;
  3298                           
  3299                           ;incstack = 0
  3300                           ; Regs used in _my_TestPointCleared: [wregfsr1]
  3301  1724  0020               	movlb	0	; select bank0
  3302  1725  086A               	movf	_myMain,w
  3303  1726  3E10               	addlw	16
  3304  1727  0086               	movwf	6
  3305  1728  3001               	movlw	1	; select bank2/3
  3306  1729  0087               	movwf	7
  3307  172A  3000               	movlw	0
  3308  172B  3FC0               	movwi [0]fsr1
  3309  172C  3FC1               	movwi [1]fsr1
  3310                           
  3311                           ;Main_B1.c: 208: myMain->pcount2 = 0;
  3312  172D  086A               	movf	_myMain,w
  3313  172E  3E12               	addlw	18
  3314  172F  0086               	movwf	6
  3315  1730  3001               	movlw	1	; select bank2/3
  3316  1731  0087               	movwf	7
  3317  1732  3000               	movlw	0
  3318  1733  3FC0               	movwi [0]fsr1
  3319  1734  3FC1               	movwi [1]fsr1
  3320  1735  0008               	return
  3321  1736                     __end_of_my_TestPointCleared:	
  3322                           
  3323                           	psect	text2
  3324  0F8F                     __ptext2:	
  3325 ;; *************** function _my_Main *****************
  3326 ;; Defined at:
  3327 ;;		line 125 in file "../src/Main_B1.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;		None
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;		None
  3332 ;; Return value:  Size  Location     Type
  3333 ;;		None               void
  3334 ;; Registers used:
  3335 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3345 ;;Total ram usage:        0 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; Hardware stack levels required when called:    7
  3348 ;; This function calls:
  3349 ;;		_setBuz
  3350 ;;		_setSw_Enable
  3351 ;;		_setTemp_Enable
  3352 ;; This function is called by:
  3353 ;;		_main
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           
  3358                           ;psect for function _my_Main
  3359  0F8F                     _my_Main:	
  3360                           
  3361                           ;Main_B1.c: 127: if (myMain->PowerON == 0) {
  3362                           
  3363                           ;incstack = 0
  3364                           ; Regs used in _my_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3365  0F8F  0020               	movlb	0	; select bank0
  3366  0F90  086A               	movf	_myMain,w
  3367  0F91  0086               	movwf	6
  3368  0F92  3001               	movlw	1	; select bank2/3
  3369  0F93  0087               	movwf	7
  3370  0F94  1801               	btfsc	1,0
  3371  0F95  2FCE               	goto	l5169
  3372                           
  3373                           ;Main_B1.c: 128: myMain->PowerCount++;
  3374  0F96  0A6A               	incf	_myMain,w
  3375  0F97  0086               	movwf	6
  3376  0F98  3001               	movlw	1	; select bank2/3
  3377  0F99  0087               	movwf	7
  3378  0F9A  3001               	movlw	1
  3379  0F9B  0781               	addwf	1,f
  3380  0F9C  3141               	addfsr 1,1
  3381  0F9D  1803               	skipnc
  3382  0F9E  0A81               	incf	1,f
  3383                           
  3384                           ;Main_B1.c: 129: if (myMain->PowerCount == 150)
  3385  0F9F  0A6A               	incf	_myMain,w
  3386  0FA0  0086               	movwf	6
  3387  0FA1  3001               	movlw	1	; select bank2/3
  3388  0FA2  0087               	movwf	7
  3389  0FA3  3F40               	moviw [0]fsr1
  3390  0FA4  3A96               	xorlw	150
  3391  0FA5  1D03               	skipz
  3392  0FA6  2FA9               	goto	u4865
  3393  0FA7  3F41               	moviw [1]fsr1
  3394  0FA8  3A00               	xorlw	0
  3395  0FA9                     u4865:	
  3396  0FA9  1D03               	skipz
  3397  0FAA  0008               	return
  3398                           
  3399                           ;Main_B1.c: 130: {
  3400                           ;Main_B1.c: 131: myMain->PowerCount = 0;
  3401  0FAB  0A6A               	incf	_myMain,w
  3402  0FAC  0086               	movwf	6
  3403  0FAD  3001               	movlw	1	; select bank2/3
  3404  0FAE  0087               	movwf	7
  3405  0FAF  3000               	movlw	0
  3406  0FB0  3FC0               	movwi [0]fsr1
  3407  0FB1  3FC1               	movwi [1]fsr1
  3408                           
  3409                           ;Main_B1.c: 132: myMain->PowerON = 1;
  3410  0FB2  086A               	movf	_myMain,w
  3411  0FB3  0086               	movwf	6
  3412  0FB4  3001               	movlw	1	; select bank2/3
  3413  0FB5  0087               	movwf	7
  3414  0FB6  1401               	bsf	1,0
  3415                           
  3416                           ;Main_B1.c: 135: setTemp_Enable(1);
  3417  0FB7  3001               	movlw	1
  3418  0FB8  3196  262C  318F   	fcall	_setTemp_Enable
  3419                           
  3420                           ;Main_B1.c: 139: ;;
  3421                           ;Main_B1.c: 145: setBuz(3, 50);
  3422  0FBB  3032               	movlw	50
  3423  0FBC  0020               	movlb	0	; select bank0
  3424  0FBD  00A9               	movwf	setBuz@time
  3425  0FBE  3000               	movlw	0
  3426  0FBF  00AA               	movwf	setBuz@time+1
  3427  0FC0  3003               	movlw	3
  3428  0FC1  3187  2773  318F   	fcall	_setBuz
  3429                           
  3430                           ;Main_B1.c: 146: myMain->SelfTest = 1;
  3431  0FC4  0020               	movlb	0	; select bank0
  3432  0FC5  086A               	movf	_myMain,w
  3433  0FC6  0086               	movwf	6
  3434  0FC7  3001               	movlw	1	; select bank2/3
  3435  0FC8  0087               	movwf	7
  3436  0FC9  1701               	bsf	1,6
  3437                           
  3438                           ;Main_B1.c: 148: setSw_Enable(1);
  3439  0FCA  3001               	movlw	1
  3440  0FCB  3189  2164         	fcall	_setSw_Enable
  3441                           
  3442                           ;Main_B1.c: 155: }
  3443                           ;Main_B1.c: 156: } else {
  3444  0FCD  0008               	return
  3445  0FCE                     l5169:	
  3446                           
  3447                           ;Main_B1.c: 164: myMain->Count1++;
  3448  0FCE  0020               	movlb	0	; select bank0
  3449  0FCF  086A               	movf	_myMain,w
  3450  0FD0  3E05               	addlw	5
  3451  0FD1  0086               	movwf	6
  3452  0FD2  3001               	movlw	1	; select bank2/3
  3453  0FD3  0087               	movwf	7
  3454  0FD4  3001               	movlw	1
  3455  0FD5  0781               	addwf	1,f
  3456  0FD6  3141               	addfsr 1,1
  3457  0FD7  1803               	skipnc
  3458  0FD8  0A81               	incf	1,f
  3459                           
  3460                           ;Main_B1.c: 165: if (myMain->Count1 == 100)
  3461  0FD9  086A               	movf	_myMain,w
  3462  0FDA  3E05               	addlw	5
  3463  0FDB  0086               	movwf	6
  3464  0FDC  3001               	movlw	1	; select bank2/3
  3465  0FDD  0087               	movwf	7
  3466  0FDE  3F40               	moviw [0]fsr1
  3467  0FDF  3A64               	xorlw	100
  3468  0FE0  1D03               	skipz
  3469  0FE1  2FE4               	goto	u4875
  3470  0FE2  3F41               	moviw [1]fsr1
  3471  0FE3  3A00               	xorlw	0
  3472  0FE4                     u4875:	
  3473  0FE4  1D03               	skipz
  3474  0FE5  0008               	return
  3475                           
  3476                           ;Main_B1.c: 166: {
  3477                           ;Main_B1.c: 167: myMain->Count1 = 0;
  3478  0FE6  086A               	movf	_myMain,w
  3479  0FE7  3E05               	addlw	5
  3480  0FE8  0086               	movwf	6
  3481  0FE9  3001               	movlw	1	; select bank2/3
  3482  0FEA  0087               	movwf	7
  3483  0FEB  3000               	movlw	0
  3484  0FEC  3FC0               	movwi [0]fsr1
  3485  0FED  3FC1               	movwi [1]fsr1
  3486                           
  3487                           ;Main_B1.c: 180: if (myMain->Flag) {
  3488  0FEE  086A               	movf	_myMain,w
  3489  0FEF  0086               	movwf	6
  3490  0FF0  3001               	movlw	1	; select bank2/3
  3491  0FF1  0087               	movwf	7
  3492  0FF2  1D81               	btfss	1,3
  3493  0FF3  2FFA               	goto	l5177
  3494                           
  3495                           ;Main_B1.c: 181: myMain->Flag = 0;
  3496  0FF4  086A               	movf	_myMain,w
  3497  0FF5  0086               	movwf	6
  3498  0FF6  3001               	movlw	1	; select bank2/3
  3499  0FF7  0087               	movwf	7
  3500  0FF8  1181               	bcf	1,3
  3501                           
  3502                           ;Main_B1.c: 190: } else {
  3503  0FF9  0008               	return
  3504  0FFA                     l5177:	
  3505                           
  3506                           ;Main_B1.c: 191: myMain->Flag = 1;
  3507  0FFA  086A               	movf	_myMain,w
  3508  0FFB  0086               	movwf	6
  3509  0FFC  3001               	movlw	1	; select bank2/3
  3510  0FFD  0087               	movwf	7
  3511  0FFE  1581               	bsf	1,3
  3512  0FFF  0008               	return
  3513  1000                     __end_of_my_Main:	
  3514                           
  3515                           	psect	text3
  3516  162C                     __ptext3:	
  3517 ;; *************** function _setTemp_Enable *****************
  3518 ;; Defined at:
  3519 ;;		line 22 in file "../src/OverTemperature_B1.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;  command         1    wreg     unsigned char 
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;  command         1    0[BANK0 ] unsigned char 
  3524 ;; Return value:  Size  Location     Type
  3525 ;;		None               void
  3526 ;; Registers used:
  3527 ;;		wreg, fsr1l, fsr1h
  3528 ;; Tracked objects:
  3529 ;;		On entry : 0/0
  3530 ;;		On exit  : 0/0
  3531 ;;		Unchanged: 0/0
  3532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3534 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3536 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3537 ;;Total ram usage:        1 bytes
  3538 ;; Hardware stack levels used:    1
  3539 ;; Hardware stack levels required when called:    5
  3540 ;; This function calls:
  3541 ;;		Nothing
  3542 ;; This function is called by:
  3543 ;;		_my_Main
  3544 ;; This function uses a non-reentrant model
  3545 ;;
  3546                           
  3547                           
  3548                           ;psect for function _setTemp_Enable
  3549  162C                     _setTemp_Enable:	
  3550                           
  3551                           ;incstack = 0
  3552                           ; Regs used in _setTemp_Enable: [wregfsr1]
  3553                           ;setTemp_Enable@command stored from wreg
  3554  162C  0020               	movlb	0	; select bank0
  3555  162D  00A0               	movwf	setTemp_Enable@command
  3556                           
  3557                           ;OverTemperature_B1.c: 24: Temp->Enable=command;
  3558  162E  085B               	movf	_Temp,w
  3559  162F  0086               	movwf	6
  3560  1630  3001               	movlw	1	; select bank2/3
  3561  1631  0087               	movwf	7
  3562  1632  0820               	movf	setTemp_Enable@command,w
  3563  1633  1001               	bcf	1,0
  3564  1634  1D03               	skipz
  3565  1635  1401               	bsf	1,0
  3566  1636  0008               	return
  3567  1637                     __end_of_setTemp_Enable:	
  3568                           
  3569                           	psect	text4
  3570  1749                     __ptext4:	
  3571 ;; *************** function _myMain_Initialization *****************
  3572 ;; Defined at:
  3573 ;;		line 113 in file "../src/Main_B1.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;		None
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;		None
  3578 ;; Return value:  Size  Location     Type
  3579 ;;		None               void
  3580 ;; Registers used:
  3581 ;;		wreg, fsr1l, fsr1h
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3589 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3590 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3591 ;;Total ram usage:        1 bytes
  3592 ;; Hardware stack levels used:    1
  3593 ;; Hardware stack levels required when called:    5
  3594 ;; This function calls:
  3595 ;;		Nothing
  3596 ;; This function is called by:
  3597 ;;		_main
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           
  3601                           
  3602                           ;psect for function _myMain_Initialization
  3603  1749                     _myMain_Initialization:	
  3604                           
  3605                           ;Main_B1.c: 115: product = &_product;
  3606                           
  3607                           ;incstack = 0
  3608                           ; Regs used in _myMain_Initialization: [wregfsr1]
  3609  1749  30C5               	movlw	__product& (0+255)
  3610  174A  0020               	movlb	0	; select bank0
  3611  174B  00A0               	movwf	??_myMain_Initialization
  3612  174C  0820               	movf	??_myMain_Initialization,w
  3613  174D  00EB               	movwf	_product
  3614                           
  3615                           ;Main_B1.c: 116: product->Data[20] = 211;
  3616  174E  30D3               	movlw	211
  3617  174F  00A0               	movwf	??_myMain_Initialization
  3618  1750  086B               	movf	_product,w
  3619  1751  3E14               	addlw	20
  3620  1752  0086               	movwf	6
  3621  1753  3001               	movlw	1	; select bank2/3
  3622  1754  0087               	movwf	7
  3623  1755  0820               	movf	??_myMain_Initialization,w
  3624  1756  0081               	movwf	1
  3625                           
  3626                           ;Main_B1.c: 119: myMain = &_myMain;
  3627  1757  3020               	movlw	__myMain& (0+255)
  3628  1758  00A0               	movwf	??_myMain_Initialization
  3629  1759  0820               	movf	??_myMain_Initialization,w
  3630  175A  00EA               	movwf	_myMain
  3631  175B  0008               	return
  3632  175C                     __end_of_myMain_Initialization:	
  3633                           
  3634                           	psect	text5
  3635  0DD9                     __ptext5:	
  3636 ;; *************** function _getTemp_AD *****************
  3637 ;; Defined at:
  3638 ;;		line 35 in file "../src/OverTemperature_B1.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;  channel         1    wreg     unsigned char 
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;  channel         1    8[BANK0 ] unsigned char 
  3643 ;; Return value:  Size  Location     Type
  3644 ;;		None               void
  3645 ;; Registers used:
  3646 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3647 ;; Tracked objects:
  3648 ;;		On entry : 0/0
  3649 ;;		On exit  : 0/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3653 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3654 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3655 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3656 ;;Total ram usage:        5 bytes
  3657 ;; Hardware stack levels used:    1
  3658 ;; Hardware stack levels required when called:    6
  3659 ;; This function calls:
  3660 ;;		_getAD
  3661 ;; This function is called by:
  3662 ;;		_main
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           
  3667                           ;psect for function _getTemp_AD
  3668  0DD9                     _getTemp_AD:	
  3669                           
  3670                           ;incstack = 0
  3671                           ; Regs used in _getTemp_AD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3672                           ;getTemp_AD@channel stored from wreg
  3673  0DD9  0020               	movlb	0	; select bank0
  3674  0DDA  00A8               	movwf	getTemp_AD@channel
  3675                           
  3676                           ;OverTemperature_B1.c: 37: if(Temp->ADtoGO)
  3677  0DDB  085B               	movf	_Temp,w
  3678  0DDC  0086               	movwf	6
  3679  0DDD  3001               	movlw	1	; select bank2/3
  3680  0DDE  0087               	movwf	7
  3681  0DDF  1D01               	btfss	1,2
  3682  0DE0  0008               	return
  3683                           
  3684                           ;OverTemperature_B1.c: 38: {
  3685                           ;OverTemperature_B1.c: 39: Temp->ADRES=getAD(channel,0xf0);
  3686  0DE1  30F0               	movlw	240
  3687  0DE2  00A4               	movwf	??_getTemp_AD
  3688  0DE3  0824               	movf	??_getTemp_AD,w
  3689  0DE4  00A0               	movwf	getAD@adcon1
  3690  0DE5  0828               	movf	getTemp_AD@channel,w
  3691  0DE6  3197  2784  318D   	fcall	_getAD
  3692  0DE9  0020               	movlb	0	; select bank0
  3693  0DEA  085B               	movf	_Temp,w
  3694  0DEB  3E0C               	addlw	12
  3695  0DEC  0086               	movwf	6
  3696  0DED  3001               	movlw	1	; select bank2/3
  3697  0DEE  0087               	movwf	7
  3698  0DEF  0820               	movf	?_getAD,w
  3699  0DF0  3FC0               	movwi [0]fsr1
  3700  0DF1  0821               	movf	?_getAD+1,w
  3701  0DF2  3FC1               	movwi [1]fsr1
  3702                           
  3703                           ;OverTemperature_B1.c: 40: if(Temp->ADH[0] < Temp->ADRES)
  3704  0DF3  085B               	movf	_Temp,w
  3705  0DF4  3E0C               	addlw	12
  3706  0DF5  0086               	movwf	6
  3707  0DF6  3001               	movlw	1	; select bank2/3
  3708  0DF7  0087               	movwf	7
  3709  0DF8  3F40               	moviw [0]fsr1
  3710  0DF9  00A4               	movwf	??_getTemp_AD
  3711  0DFA  3F41               	moviw [1]fsr1
  3712  0DFB  00A5               	movwf	??_getTemp_AD+1
  3713  0DFC  085B               	movf	_Temp,w
  3714  0DFD  3E08               	addlw	8
  3715  0DFE  0086               	movwf	6
  3716  0DFF  3001               	movlw	1	; select bank2/3
  3717  0E00  0087               	movwf	7
  3718  0E01  3F40               	moviw [0]fsr1
  3719  0E02  00A6               	movwf	??_getTemp_AD+2
  3720  0E03  3F41               	moviw [1]fsr1
  3721  0E04  00A7               	movwf	??_getTemp_AD+3
  3722  0E05  0825               	movf	??_getTemp_AD+1,w
  3723  0E06  0227               	subwf	??_getTemp_AD+3,w
  3724  0E07  1D03               	skipz
  3725  0E08  2E0B               	goto	u4835
  3726  0E09  0824               	movf	??_getTemp_AD,w
  3727  0E0A  0226               	subwf	??_getTemp_AD+2,w
  3728  0E0B                     u4835:	
  3729  0E0B  1803               	skipnc
  3730  0E0C  2E1C               	goto	l5151
  3731                           
  3732                           ;OverTemperature_B1.c: 41: {
  3733                           ;OverTemperature_B1.c: 42: Temp->ADH[0]=Temp->ADRES;
  3734  0E0D  085B               	movf	_Temp,w
  3735  0E0E  3E0C               	addlw	12
  3736  0E0F  0086               	movwf	6
  3737  0E10  3001               	movlw	1	; select bank2/3
  3738  0E11  0087               	movwf	7
  3739  0E12  085B               	movf	_Temp,w
  3740  0E13  3E08               	addlw	8
  3741  0E14  0084               	movwf	4
  3742  0E15  3001               	movlw	1	; select bank2/3
  3743  0E16  0085               	movwf	5
  3744  0E17  3F40               	moviw [0]fsr1
  3745  0E18  3F80               	movwi [0]fsr0
  3746  0E19  3F41               	moviw [1]fsr1
  3747  0E1A  3F81               	movwi [1]fsr0
  3748                           
  3749                           ;OverTemperature_B1.c: 43: }
  3750  0E1B  0008               	return
  3751  0E1C                     l5151:	
  3752                           
  3753                           ;OverTemperature_B1.c: 44: else if(Temp->ADH[1] < Temp->ADRES)
  3754  0E1C  085B               	movf	_Temp,w
  3755  0E1D  3E0C               	addlw	12
  3756  0E1E  0086               	movwf	6
  3757  0E1F  3001               	movlw	1	; select bank2/3
  3758  0E20  0087               	movwf	7
  3759  0E21  3F40               	moviw [0]fsr1
  3760  0E22  00A4               	movwf	??_getTemp_AD
  3761  0E23  3F41               	moviw [1]fsr1
  3762  0E24  00A5               	movwf	??_getTemp_AD+1
  3763  0E25  085B               	movf	_Temp,w
  3764  0E26  3E0A               	addlw	10
  3765  0E27  0086               	movwf	6
  3766  0E28  3001               	movlw	1	; select bank2/3
  3767  0E29  0087               	movwf	7
  3768  0E2A  3F40               	moviw [0]fsr1
  3769  0E2B  00A6               	movwf	??_getTemp_AD+2
  3770  0E2C  3F41               	moviw [1]fsr1
  3771  0E2D  00A7               	movwf	??_getTemp_AD+3
  3772  0E2E  0825               	movf	??_getTemp_AD+1,w
  3773  0E2F  0227               	subwf	??_getTemp_AD+3,w
  3774  0E30  1D03               	skipz
  3775  0E31  2E34               	goto	u4845
  3776  0E32  0824               	movf	??_getTemp_AD,w
  3777  0E33  0226               	subwf	??_getTemp_AD+2,w
  3778  0E34                     u4845:	
  3779  0E34  1803               	skipnc
  3780  0E35  0008               	return
  3781                           
  3782                           ;OverTemperature_B1.c: 45: {
  3783                           ;OverTemperature_B1.c: 46: Temp->ADH[1]=Temp->ADRES;
  3784  0E36  085B               	movf	_Temp,w
  3785  0E37  3E0C               	addlw	12
  3786  0E38  0086               	movwf	6
  3787  0E39  3001               	movlw	1	; select bank2/3
  3788  0E3A  0087               	movwf	7
  3789  0E3B  085B               	movf	_Temp,w
  3790  0E3C  3E0A               	addlw	10
  3791  0E3D  0084               	movwf	4
  3792  0E3E  3001               	movlw	1	; select bank2/3
  3793  0E3F  0085               	movwf	5
  3794  0E40  3F40               	moviw [0]fsr1
  3795  0E41  3F80               	movwi [0]fsr0
  3796  0E42  3F41               	moviw [1]fsr1
  3797  0E43  3F81               	movwi [1]fsr0
  3798  0E44  0008               	return
  3799  0E45                     __end_of_getTemp_AD:	
  3800                           
  3801                           	psect	text6
  3802  1784                     __ptext6:	
  3803 ;; *************** function _getAD *****************
  3804 ;; Defined at:
  3805 ;;		line 342 in file "../src/MCU_B1.c"
  3806 ;; Parameters:    Size  Location     Type
  3807 ;;  adcon0          1    wreg     unsigned char 
  3808 ;;  adcon1          1    0[BANK0 ] unsigned char 
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;  adcon0          1    3[BANK0 ] unsigned char 
  3811 ;; Return value:  Size  Location     Type
  3812 ;;                  2    0[BANK0 ] int 
  3813 ;; Registers used:
  3814 ;;		wreg, status,2, status,0
  3815 ;; Tracked objects:
  3816 ;;		On entry : 0/0
  3817 ;;		On exit  : 0/0
  3818 ;;		Unchanged: 0/0
  3819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3820 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3821 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3823 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3824 ;;Total ram usage:        4 bytes
  3825 ;; Hardware stack levels used:    1
  3826 ;; Hardware stack levels required when called:    5
  3827 ;; This function calls:
  3828 ;;		Nothing
  3829 ;; This function is called by:
  3830 ;;		_getTemp_AD
  3831 ;; This function uses a non-reentrant model
  3832 ;;
  3833                           
  3834                           
  3835                           ;psect for function _getAD
  3836  1784                     _getAD:	
  3837                           
  3838                           ;incstack = 0
  3839                           ; Regs used in _getAD: [wreg+status,2+status,0]
  3840                           ;getAD@adcon0 stored from wreg
  3841  1784  0020               	movlb	0	; select bank0
  3842  1785  00A3               	movwf	getAD@adcon0
  3843                           
  3844                           ;MCU_B1.c: 343: ADCON0 = adcon0;
  3845  1786  0823               	movf	getAD@adcon0,w
  3846  1787  0021               	movlb	1	; select bank1
  3847  1788  009D               	movwf	29	;volatile
  3848                           
  3849                           ;MCU_B1.c: 344: ADCON1 = adcon1;
  3850  1789  0020               	movlb	0	; select bank0
  3851  178A  0820               	movf	getAD@adcon1,w
  3852  178B  0021               	movlb	1	; select bank1
  3853  178C  009E               	movwf	30	;volatile
  3854                           
  3855                           ;MCU_B1.c: 345: GO_nDONE = 1;
  3856  178D  149D               	bsf	29,1	;volatile
  3857  178E                     l973:	
  3858                           ;MCU_B1.c: 346: while (GO_nDONE == 1);
  3859                           
  3860  178E  189D               	btfsc	29,1	;volatile
  3861  178F  2F8E               	goto	l973
  3862                           
  3863                           ;MCU_B1.c: 347: return ((ADRESH*256)+ADRESL);
  3864  1790  081C               	movf	28,w	;volatile
  3865  1791  0020               	movlb	0	; select bank0
  3866  1792  01A1               	clrf	?_getAD+1
  3867  1793  07A1               	addwf	?_getAD+1,f
  3868  1794  0021               	movlb	1	; select bank1
  3869  1795  081B               	movf	27,w	;volatile
  3870  1796  0020               	movlb	0	; select bank0
  3871  1797  01A0               	clrf	?_getAD
  3872  1798  07A0               	addwf	?_getAD,f
  3873  1799  0008               	return
  3874  179A                     __end_of_getAD:	
  3875                           
  3876                           	psect	text7
  3877  07E7                     __ptext7:	
  3878 ;; *************** function _WDT_Main *****************
  3879 ;; Defined at:
  3880 ;;		line 899 in file "../src/MCU_B1.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;		None
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;		None
  3885 ;; Return value:  Size  Location     Type
  3886 ;;		None               void
  3887 ;; Registers used:
  3888 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3896 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3897 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3898 ;;Total ram usage:        1 bytes
  3899 ;; Hardware stack levels used:    1
  3900 ;; Hardware stack levels required when called:    6
  3901 ;; This function calls:
  3902 ;;		_WDT_Clearing
  3903 ;; This function is called by:
  3904 ;;		_main
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           
  3909                           ;psect for function _WDT_Main
  3910  07E7                     _WDT_Main:	
  3911                           
  3912                           ;MCU_B1.c: 900: if (WDT->Enable == 1) {
  3913                           
  3914                           ;incstack = 0
  3915                           ; Regs used in _WDT_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3916  07E7  087D               	movf	_WDT,w
  3917  07E8  0086               	movwf	6
  3918  07E9  0187               	clrf	7
  3919  07EA  1C01               	btfss	1,0
  3920  07EB  0008               	return
  3921                           
  3922                           ;MCU_B1.c: 901: if (WDT->Count-- > 0) {
  3923  07EC  0A7D               	incf	_WDT,w
  3924  07ED  0086               	movwf	6
  3925  07EE  0187               	clrf	7
  3926  07EF  3001               	movlw	1
  3927  07F0  0281               	subwf	1,f
  3928  07F1  0801               	movf	1,w
  3929  07F2  3AFF               	xorlw	255
  3930  07F3  1903               	skipnz
  3931  07F4  0008               	return
  3932                           
  3933                           ;MCU_B1.c: 902: WDT->Count = 10;
  3934  07F5  300A               	movlw	10
  3935  07F6  0020               	movlb	0	; select bank0
  3936  07F7  00A0               	movwf	??_WDT_Main
  3937  07F8  0A7D               	incf	_WDT,w
  3938  07F9  0086               	movwf	6
  3939  07FA  0187               	clrf	7
  3940  07FB  0820               	movf	??_WDT_Main,w
  3941  07FC  0081               	movwf	1
  3942                           
  3943                           ;MCU_B1.c: 903: WDT_Clearing();
  3944  07FD  3180  2002         	fcall	_WDT_Clearing
  3945  07FF  0008               	return
  3946  0800                     __end_of_WDT_Main:	
  3947                           
  3948                           	psect	text8
  3949  0002                     __ptext8:	
  3950 ;; *************** function _WDT_Clearing *****************
  3951 ;; Defined at:
  3952 ;;		line 909 in file "../src/MCU_B1.c"
  3953 ;; Parameters:    Size  Location     Type
  3954 ;;		None
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;		None
  3957 ;; Return value:  Size  Location     Type
  3958 ;;		None               void
  3959 ;; Registers used:
  3960 ;;		None
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3970 ;;Total ram usage:        0 bytes
  3971 ;; Hardware stack levels used:    1
  3972 ;; Hardware stack levels required when called:    5
  3973 ;; This function calls:
  3974 ;;		Nothing
  3975 ;; This function is called by:
  3976 ;;		_WDT_Main
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           
  3981                           ;psect for function _WDT_Clearing
  3982  0002                     _WDT_Clearing:	
  3983                           
  3984                           ;incstack = 0
  3985                           ; Regs used in _WDT_Clearing: []
  3986  0002  0064               	clrwdt	;# 
  3987  0003  0008               	return
  3988  0004                     __end_of_WDT_Clearing:	
  3989                           
  3990                           	psect	text9
  3991  15DC                     __ptext9:	
  3992 ;; *************** function _Temp_Main *****************
  3993 ;; Defined at:
  3994 ;;		line 57 in file "../src/OverTemperature_B1.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;		None
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;		None
  3999 ;; Return value:  Size  Location     Type
  4000 ;;		None               void
  4001 ;; Registers used:
  4002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4003 ;; Tracked objects:
  4004 ;;		On entry : 0/0
  4005 ;;		On exit  : 0/0
  4006 ;;		Unchanged: 0/0
  4007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4012 ;;Total ram usage:        0 bytes
  4013 ;; Hardware stack levels used:    1
  4014 ;; Hardware stack levels required when called:   11
  4015 ;; This function calls:
  4016 ;;		_setTemp_Main
  4017 ;; This function is called by:
  4018 ;;		_main
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021                           
  4022                           
  4023                           ;psect for function _Temp_Main
  4024  15DC                     _Temp_Main:	
  4025                           
  4026                           ;OverTemperature_B1.c: 60: setTemp_Main();
  4027                           
  4028                           ;incstack = 0
  4029                           ; Regs used in _Temp_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4030  15DC  3183  232C         	fcall	_setTemp_Main
  4031  15DE  0008               	return
  4032  15DF                     __end_of_Temp_Main:	
  4033                           
  4034                           	psect	text10
  4035  032C                     __ptext10:	
  4036 ;; *************** function _setTemp_Main *****************
  4037 ;; Defined at:
  4038 ;;		line 64 in file "../src/OverTemperature_B1.c"
  4039 ;; Parameters:    Size  Location     Type
  4040 ;;		None
  4041 ;; Auto vars:     Size  Location     Type
  4042 ;;		None
  4043 ;; Return value:  Size  Location     Type
  4044 ;;		None               void
  4045 ;; Registers used:
  4046 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4047 ;; Tracked objects:
  4048 ;;		On entry : 0/0
  4049 ;;		On exit  : 0/0
  4050 ;;		Unchanged: 0/0
  4051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4054 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4055 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4056 ;;Total ram usage:        3 bytes
  4057 ;; Hardware stack levels used:    1
  4058 ;; Hardware stack levels required when called:   10
  4059 ;; This function calls:
  4060 ;;		_setOverTemp_Exceptions
  4061 ;; This function is called by:
  4062 ;;		_Temp_Main
  4063 ;; This function uses a non-reentrant model
  4064 ;;
  4065                           
  4066                           
  4067                           ;psect for function _setTemp_Main
  4068  032C                     _setTemp_Main:	
  4069                           
  4070                           ;OverTemperature_B1.c: 66: if(Temp->Enable)
  4071                           
  4072                           ;incstack = 0
  4073                           ; Regs used in _setTemp_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4074  032C  0020               	movlb	0	; select bank0
  4075  032D  085B               	movf	_Temp,w
  4076  032E  0086               	movwf	6
  4077  032F  3001               	movlw	1	; select bank2/3
  4078  0330  0087               	movwf	7
  4079  0331  1C01               	btfss	1,0
  4080  0332  0008               	return
  4081                           
  4082                           ;OverTemperature_B1.c: 67: {
  4083                           ;OverTemperature_B1.c: 68: if(Temp->ADtoGO == 0)
  4084  0333  085B               	movf	_Temp,w
  4085  0334  0086               	movwf	6
  4086  0335  3001               	movlw	1	; select bank2/3
  4087  0336  0087               	movwf	7
  4088  0337  1901               	btfsc	1,2
  4089  0338  2B63               	goto	l4821
  4090                           
  4091                           ;OverTemperature_B1.c: 69: {
  4092                           ;OverTemperature_B1.c: 70: Temp->Time++;
  4093  0339  0A5B               	incf	_Temp,w
  4094  033A  0086               	movwf	6
  4095  033B  3001               	movlw	1	; select bank2/3
  4096  033C  0087               	movwf	7
  4097  033D  3001               	movlw	1
  4098  033E  0781               	addwf	1,f
  4099  033F  3141               	addfsr 1,1
  4100  0340  1803               	skipnc
  4101  0341  0A81               	incf	1,f
  4102                           
  4103                           ;OverTemperature_B1.c: 72: {
  4104                           ;OverTemperature_B1.c: 73: if(1 && 1)
  4105  0342  0A5B               	incf	_Temp,w
  4106  0343  0086               	movwf	6
  4107  0344  3001               	movlw	1	; select bank2/3
  4108  0345  0087               	movwf	7
  4109  0346  3F40               	moviw [0]fsr1
  4110  0347  00B0               	movwf	??_setTemp_Main
  4111  0348  3F41               	moviw [1]fsr1
  4112  0349  00B1               	movwf	??_setTemp_Main+1
  4113  034A  3001               	movlw	1
  4114  034B  0231               	subwf	??_setTemp_Main+1,w
  4115  034C  30F4               	movlw	244
  4116  034D  1903               	skipnz
  4117  034E  0230               	subwf	??_setTemp_Main,w
  4118  034F  1C03               	skipc
  4119  0350  0008               	return
  4120                           
  4121                           ;OverTemperature_B1.c: 74: {
  4122                           ;OverTemperature_B1.c: 75: Temp->Time=0;
  4123  0351  0A5B               	incf	_Temp,w
  4124  0352  0086               	movwf	6
  4125  0353  3001               	movlw	1	; select bank2/3
  4126  0354  0087               	movwf	7
  4127  0355  3000               	movlw	0
  4128  0356  3FC0               	movwi [0]fsr1
  4129  0357  3FC1               	movwi [1]fsr1
  4130                           
  4131                           ;OverTemperature_B1.c: 76: Temp->ADtoGO=1;
  4132  0358  085B               	movf	_Temp,w
  4133  0359  0086               	movwf	6
  4134  035A  3001               	movlw	1	; select bank2/3
  4135  035B  0087               	movwf	7
  4136  035C  1501               	bsf	1,2
  4137                           
  4138                           ;OverTemperature_B1.c: 77: Temp->Safe=0;
  4139  035D  085B               	movf	_Temp,w
  4140  035E  0086               	movwf	6
  4141  035F  3001               	movlw	1	; select bank2/3
  4142  0360  0087               	movwf	7
  4143  0361  1201               	bcf	1,4
  4144                           
  4145                           ;OverTemperature_B1.c: 78: }
  4146  0362  0008               	return
  4147  0363                     l4821:	
  4148                           ;OverTemperature_B1.c: 82: }
  4149                           ;OverTemperature_B1.c: 83: }
  4150                           ;OverTemperature_B1.c: 84: }
  4151                           
  4152                           ;OverTemperature_B1.c: 79: else
  4153                           ;OverTemperature_B1.c: 80: {
  4154                           ;OverTemperature_B1.c: 81: Temp->Time=1000;
  4155                           
  4156                           
  4157                           ;OverTemperature_B1.c: 85: else
  4158                           ;OverTemperature_B1.c: 86: {
  4159                           ;OverTemperature_B1.c: 87: Temp->Time++;
  4160  0363  0A5B               	incf	_Temp,w
  4161  0364  0086               	movwf	6
  4162  0365  3001               	movlw	1	; select bank2/3
  4163  0366  0087               	movwf	7
  4164  0367  3001               	movlw	1
  4165  0368  0781               	addwf	1,f
  4166  0369  3141               	addfsr 1,1
  4167  036A  1803               	skipnc
  4168  036B  0A81               	incf	1,f
  4169                           
  4170                           ;OverTemperature_B1.c: 88: if(Temp->Time >= 4)
  4171  036C  0A5B               	incf	_Temp,w
  4172  036D  0086               	movwf	6
  4173  036E  3001               	movlw	1	; select bank2/3
  4174  036F  0087               	movwf	7
  4175  0370  3F40               	moviw [0]fsr1
  4176  0371  00B0               	movwf	??_setTemp_Main
  4177  0372  3F41               	moviw [1]fsr1
  4178  0373  00B1               	movwf	??_setTemp_Main+1
  4179  0374  3000               	movlw	0
  4180  0375  0231               	subwf	??_setTemp_Main+1,w
  4181  0376  3004               	movlw	4
  4182  0377  1903               	skipnz
  4183  0378  0230               	subwf	??_setTemp_Main,w
  4184  0379  1C03               	skipc
  4185  037A  0008               	return
  4186                           
  4187                           ;OverTemperature_B1.c: 89: {
  4188                           ;OverTemperature_B1.c: 90: Temp->Time=0;
  4189  037B  0A5B               	incf	_Temp,w
  4190  037C  0086               	movwf	6
  4191  037D  3001               	movlw	1	; select bank2/3
  4192  037E  0087               	movwf	7
  4193  037F  3000               	movlw	0
  4194  0380  3FC0               	movwi [0]fsr1
  4195  0381  3FC1               	movwi [1]fsr1
  4196                           
  4197                           ;OverTemperature_B1.c: 91: Temp->ADtoGO=0;
  4198  0382  085B               	movf	_Temp,w
  4199  0383  0086               	movwf	6
  4200  0384  3001               	movlw	1	; select bank2/3
  4201  0385  0087               	movwf	7
  4202  0386  1101               	bcf	1,2
  4203                           
  4204                           ;OverTemperature_B1.c: 92: Temp->AD=Temp->ADH[1];
  4205  0387  085B               	movf	_Temp,w
  4206  0388  3E0A               	addlw	10
  4207  0389  0086               	movwf	6
  4208  038A  3001               	movlw	1	; select bank2/3
  4209  038B  0087               	movwf	7
  4210  038C  085B               	movf	_Temp,w
  4211  038D  3E06               	addlw	6
  4212  038E  0084               	movwf	4
  4213  038F  3001               	movlw	1	; select bank2/3
  4214  0390  0085               	movwf	5
  4215  0391  3F40               	moviw [0]fsr1
  4216  0392  3F80               	movwi [0]fsr0
  4217  0393  3F41               	moviw [1]fsr1
  4218  0394  3F81               	movwi [1]fsr0
  4219                           
  4220                           ;OverTemperature_B1.c: 93: if(Temp->ERROR)
  4221  0395  085B               	movf	_Temp,w
  4222  0396  0086               	movwf	6
  4223  0397  3001               	movlw	1	; select bank2/3
  4224  0398  0087               	movwf	7
  4225  0399  1C81               	btfss	1,1
  4226  039A  2BC8               	goto	l4843
  4227                           
  4228                           ;OverTemperature_B1.c: 94: {
  4229                           ;OverTemperature_B1.c: 95: if(Temp->AD >= 600)
  4230  039B  085B               	movf	_Temp,w
  4231  039C  3E06               	addlw	6
  4232  039D  0086               	movwf	6
  4233  039E  3001               	movlw	1	; select bank2/3
  4234  039F  0087               	movwf	7
  4235  03A0  3F40               	moviw [0]fsr1
  4236  03A1  00B0               	movwf	??_setTemp_Main
  4237  03A2  3F41               	moviw [1]fsr1
  4238  03A3  00B1               	movwf	??_setTemp_Main+1
  4239  03A4  3002               	movlw	2
  4240  03A5  0231               	subwf	??_setTemp_Main+1,w
  4241  03A6  3058               	movlw	88
  4242  03A7  1903               	skipnz
  4243  03A8  0230               	subwf	??_setTemp_Main,w
  4244  03A9  1C03               	skipc
  4245  03AA  2BF5               	goto	l4853
  4246                           
  4247                           ;OverTemperature_B1.c: 96: {
  4248                           ;OverTemperature_B1.c: 97: Temp->Count++;
  4249  03AB  3001               	movlw	1
  4250  03AC  00B0               	movwf	??_setTemp_Main
  4251  03AD  085B               	movf	_Temp,w
  4252  03AE  3E03               	addlw	3
  4253  03AF  0086               	movwf	6
  4254  03B0  3001               	movlw	1	; select bank2/3
  4255  03B1  0087               	movwf	7
  4256  03B2  0830               	movf	??_setTemp_Main,w
  4257  03B3  0781               	addwf	1,f
  4258                           
  4259                           ;OverTemperature_B1.c: 98: if(Temp->Count >= 3)
  4260  03B4  085B               	movf	_Temp,w
  4261  03B5  3E03               	addlw	3
  4262  03B6  0086               	movwf	6
  4263  03B7  3001               	movlw	1	; select bank2/3
  4264  03B8  0087               	movwf	7
  4265  03B9  3003               	movlw	3
  4266  03BA  0201               	subwf	1,w
  4267  03BB  1C03               	skipc
  4268  03BC  2BFC               	goto	l4855
  4269                           
  4270                           ;OverTemperature_B1.c: 99: {
  4271                           ;OverTemperature_B1.c: 100: Temp->Count=0;
  4272  03BD  085B               	movf	_Temp,w
  4273  03BE  3E03               	addlw	3
  4274  03BF  0086               	movwf	6
  4275  03C0  3001               	movlw	1	; select bank2/3
  4276  03C1  0087               	movwf	7
  4277  03C2  0181               	clrf	1
  4278                           
  4279                           ;OverTemperature_B1.c: 101: setOverTemp_Exceptions(0);
  4280  03C3  3000               	movlw	0
  4281  03C4  318A  2220  3183   	fcall	_setOverTemp_Exceptions
  4282                           
  4283                           ;OverTemperature_B1.c: 102: }
  4284                           ;OverTemperature_B1.c: 103: }
  4285  03C7  2BFC               	goto	l4855
  4286  03C8                     l4843:	
  4287                           ;OverTemperature_B1.c: 107: }
  4288                           ;OverTemperature_B1.c: 108: }
  4289                           
  4290                           ;OverTemperature_B1.c: 104: else
  4291                           ;OverTemperature_B1.c: 105: {
  4292                           ;OverTemperature_B1.c: 106: Temp->Count=0;
  4293                           
  4294                           
  4295                           ;OverTemperature_B1.c: 109: else
  4296                           ;OverTemperature_B1.c: 110: {
  4297                           ;OverTemperature_B1.c: 111: if(Temp->AD <= 550)
  4298  03C8  085B               	movf	_Temp,w
  4299  03C9  3E06               	addlw	6
  4300  03CA  0086               	movwf	6
  4301  03CB  3001               	movlw	1	; select bank2/3
  4302  03CC  0087               	movwf	7
  4303  03CD  3F40               	moviw [0]fsr1
  4304  03CE  00B0               	movwf	??_setTemp_Main
  4305  03CF  3F41               	moviw [1]fsr1
  4306  03D0  00B1               	movwf	??_setTemp_Main+1
  4307  03D1  3002               	movlw	2
  4308  03D2  0231               	subwf	??_setTemp_Main+1,w
  4309  03D3  3027               	movlw	39
  4310  03D4  1903               	skipnz
  4311  03D5  0230               	subwf	??_setTemp_Main,w
  4312  03D6  1803               	skipnc
  4313  03D7  2BF5               	goto	l4853
  4314                           
  4315                           ;OverTemperature_B1.c: 112: {
  4316                           ;OverTemperature_B1.c: 113: Temp->Count++;
  4317  03D8  3001               	movlw	1
  4318  03D9  00B0               	movwf	??_setTemp_Main
  4319  03DA  085B               	movf	_Temp,w
  4320  03DB  3E03               	addlw	3
  4321  03DC  0086               	movwf	6
  4322  03DD  3001               	movlw	1	; select bank2/3
  4323  03DE  0087               	movwf	7
  4324  03DF  0830               	movf	??_setTemp_Main,w
  4325  03E0  0781               	addwf	1,f
  4326                           
  4327                           ;OverTemperature_B1.c: 114: if(Temp->Count >= 3)
  4328  03E1  085B               	movf	_Temp,w
  4329  03E2  3E03               	addlw	3
  4330  03E3  0086               	movwf	6
  4331  03E4  3001               	movlw	1	; select bank2/3
  4332  03E5  0087               	movwf	7
  4333  03E6  3003               	movlw	3
  4334  03E7  0201               	subwf	1,w
  4335  03E8  1C03               	skipc
  4336  03E9  2BFC               	goto	l4855
  4337                           
  4338                           ;OverTemperature_B1.c: 115: {
  4339                           ;OverTemperature_B1.c: 116: Temp->Count=0;
  4340  03EA  085B               	movf	_Temp,w
  4341  03EB  3E03               	addlw	3
  4342  03EC  0086               	movwf	6
  4343  03ED  3001               	movlw	1	; select bank2/3
  4344  03EE  0087               	movwf	7
  4345  03EF  0181               	clrf	1
  4346                           
  4347                           ;OverTemperature_B1.c: 117: setOverTemp_Exceptions(1);
  4348  03F0  3001               	movlw	1
  4349  03F1  318A  2220  3183   	fcall	_setOverTemp_Exceptions
  4350                           
  4351                           ;OverTemperature_B1.c: 118: }
  4352                           ;OverTemperature_B1.c: 119: }
  4353  03F4  2BFC               	goto	l4855
  4354  03F5                     l4853:	
  4355                           
  4356                           ;OverTemperature_B1.c: 120: else
  4357                           ;OverTemperature_B1.c: 121: {
  4358                           ;OverTemperature_B1.c: 122: Temp->Count=0;
  4359  03F5  0020               	movlb	0	; select bank0
  4360  03F6  085B               	movf	_Temp,w
  4361  03F7  3E03               	addlw	3
  4362  03F8  0086               	movwf	6
  4363  03F9  3001               	movlw	1	; select bank2/3
  4364  03FA  0087               	movwf	7
  4365  03FB  0181               	clrf	1
  4366  03FC                     l4855:	
  4367                           
  4368                           ;OverTemperature_B1.c: 123: }
  4369                           ;OverTemperature_B1.c: 124: }
  4370                           ;OverTemperature_B1.c: 125: if(Temp->ERROR == 0)
  4371  03FC  0020               	movlb	0	; select bank0
  4372  03FD  085B               	movf	_Temp,w
  4373  03FE  0086               	movwf	6
  4374  03FF  3001               	movlw	1	; select bank2/3
  4375  0400  0087               	movwf	7
  4376  0401  1881               	btfsc	1,1
  4377  0402  2C08               	goto	l4859
  4378                           
  4379                           ;OverTemperature_B1.c: 126: {
  4380                           ;OverTemperature_B1.c: 127: Temp->Safe=1;
  4381  0403  085B               	movf	_Temp,w
  4382  0404  0086               	movwf	6
  4383  0405  3001               	movlw	1	; select bank2/3
  4384  0406  0087               	movwf	7
  4385  0407  1601               	bsf	1,4
  4386  0408                     l4859:	
  4387                           
  4388                           ;OverTemperature_B1.c: 128: }
  4389                           ;OverTemperature_B1.c: 129: product->Data[24]=Temp->AD >> 8;
  4390  0408  085B               	movf	_Temp,w
  4391  0409  3E06               	addlw	6
  4392  040A  0086               	movwf	6
  4393  040B  3001               	movlw	1	; select bank2/3
  4394  040C  0087               	movwf	7
  4395  040D  3F40               	moviw [0]fsr1
  4396  040E  00B0               	movwf	??_setTemp_Main
  4397  040F  3F41               	moviw [1]fsr1
  4398  0410  00B1               	movwf	??_setTemp_Main+1
  4399  0411  0831               	movf	??_setTemp_Main+1,w
  4400  0412  00B2               	movwf	??_setTemp_Main+2
  4401  0413  086B               	movf	_product,w
  4402  0414  3E18               	addlw	24
  4403  0415  0086               	movwf	6
  4404  0416  3001               	movlw	1	; select bank2/3
  4405  0417  0087               	movwf	7
  4406  0418  0832               	movf	??_setTemp_Main+2,w
  4407  0419  0081               	movwf	1
  4408                           
  4409                           ;OverTemperature_B1.c: 130: product->Data[25]=Temp->AD;
  4410  041A  085B               	movf	_Temp,w
  4411  041B  3E06               	addlw	6
  4412  041C  0086               	movwf	6
  4413  041D  3001               	movlw	1	; select bank2/3
  4414  041E  0087               	movwf	7
  4415  041F  0801               	movf	1,w
  4416  0420  00B0               	movwf	??_setTemp_Main
  4417  0421  086B               	movf	_product,w
  4418  0422  3E19               	addlw	25
  4419  0423  0086               	movwf	6
  4420  0424  3001               	movlw	1	; select bank2/3
  4421  0425  0087               	movwf	7
  4422  0426  0830               	movf	??_setTemp_Main,w
  4423  0427  0081               	movwf	1
  4424                           
  4425                           ;OverTemperature_B1.c: 131: Temp->ADH[0]=0;
  4426  0428  085B               	movf	_Temp,w
  4427  0429  3E08               	addlw	8
  4428  042A  0086               	movwf	6
  4429  042B  3001               	movlw	1	; select bank2/3
  4430  042C  0087               	movwf	7
  4431  042D  3000               	movlw	0
  4432  042E  3FC0               	movwi [0]fsr1
  4433  042F  3FC1               	movwi [1]fsr1
  4434                           
  4435                           ;OverTemperature_B1.c: 132: Temp->ADH[1]=0;
  4436  0430  085B               	movf	_Temp,w
  4437  0431  3E0A               	addlw	10
  4438  0432  0086               	movwf	6
  4439  0433  3001               	movlw	1	; select bank2/3
  4440  0434  0087               	movwf	7
  4441  0435  3000               	movlw	0
  4442  0436  3FC0               	movwi [0]fsr1
  4443  0437  3FC1               	movwi [1]fsr1
  4444  0438  0008               	return
  4445  0439                     __end_of_setTemp_Main:	
  4446                           
  4447                           	psect	text11
  4448  0A20                     __ptext11:	
  4449 ;; *************** function _setOverTemp_Exceptions *****************
  4450 ;; Defined at:
  4451 ;;		line 138 in file "../src/OverTemperature_B1.c"
  4452 ;; Parameters:    Size  Location     Type
  4453 ;;  command         1    wreg     unsigned char 
  4454 ;; Auto vars:     Size  Location     Type
  4455 ;;  command         1   15[BANK0 ] unsigned char 
  4456 ;; Return value:  Size  Location     Type
  4457 ;;		None               void
  4458 ;; Registers used:
  4459 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4460 ;; Tracked objects:
  4461 ;;		On entry : 0/0
  4462 ;;		On exit  : 0/0
  4463 ;;		Unchanged: 0/0
  4464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4466 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4467 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4468 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4469 ;;Total ram usage:        2 bytes
  4470 ;; Hardware stack levels used:    1
  4471 ;; Hardware stack levels required when called:    9
  4472 ;; This function calls:
  4473 ;;		_DimmerLights_Exceptions
  4474 ;;		_setBuz
  4475 ;;		_setLED
  4476 ;;		_setSw_Enable
  4477 ;; This function is called by:
  4478 ;;		_setTemp_Main
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482                           
  4483                           ;psect for function _setOverTemp_Exceptions
  4484  0A20                     _setOverTemp_Exceptions:	
  4485                           
  4486                           ;incstack = 0
  4487                           ; Regs used in _setOverTemp_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  4488                           ;setOverTemp_Exceptions@command stored from wreg
  4489  0A20  0020               	movlb	0	; select bank0
  4490  0A21  00AF               	movwf	setOverTemp_Exceptions@command
  4491                           
  4492                           ;OverTemperature_B1.c: 140: Temp->ERROR=command;
  4493  0A22  085B               	movf	_Temp,w
  4494  0A23  0086               	movwf	6
  4495  0A24  3001               	movlw	1	; select bank2/3
  4496  0A25  0087               	movwf	7
  4497  0A26  082F               	movf	setOverTemp_Exceptions@command,w
  4498  0A27  1081               	bcf	1,1
  4499  0A28  1D03               	skipz
  4500  0A29  1481               	bsf	1,1
  4501                           
  4502                           ;OverTemperature_B1.c: 141: Temp->Safe=(~command) & 0x01;
  4503  0A2A  092F               	comf	setOverTemp_Exceptions@command,w
  4504  0A2B  3901               	andlw	1
  4505  0A2C  00AE               	movwf	??_setOverTemp_Exceptions
  4506  0A2D  085B               	movf	_Temp,w
  4507  0A2E  0086               	movwf	6
  4508  0A2F  3001               	movlw	1	; select bank2/3
  4509  0A30  0087               	movwf	7
  4510  0A31  0EAE               	swapf	??_setOverTemp_Exceptions,f
  4511  0A32  0801               	movf	1,w
  4512  0A33  062E               	xorwf	??_setOverTemp_Exceptions,w
  4513  0A34  39EF               	andlw	-17
  4514  0A35  062E               	xorwf	??_setOverTemp_Exceptions,w
  4515  0A36  0081               	movwf	1
  4516                           
  4517                           ;OverTemperature_B1.c: 142: if(command)
  4518  0A37  082F               	movf	setOverTemp_Exceptions@command,w
  4519  0A38  1903               	btfsc	3,2
  4520  0A39  2A3F               	goto	l4255
  4521                           
  4522                           ;OverTemperature_B1.c: 143: {
  4523                           ;OverTemperature_B1.c: 144: DimmerLights_Exceptions(1);
  4524  0A3A  3001               	movlw	1
  4525  0A3B  318E  26B2  318A   	fcall	_DimmerLights_Exceptions
  4526                           
  4527                           ;OverTemperature_B1.c: 148: }
  4528  0A3E  2A48               	goto	l1360
  4529  0A3F                     l4255:	
  4530                           
  4531                           ;OverTemperature_B1.c: 149: else
  4532                           ;OverTemperature_B1.c: 150: {
  4533                           ;OverTemperature_B1.c: 151: setBuz(2,100);
  4534  0A3F  3064               	movlw	100
  4535  0A40  0020               	movlb	0	; select bank0
  4536  0A41  00A9               	movwf	setBuz@time
  4537  0A42  3000               	movlw	0
  4538  0A43  00AA               	movwf	setBuz@time+1
  4539  0A44  3002               	movlw	2
  4540  0A45  3187  2773  318A   	fcall	_setBuz
  4541  0A48                     l1360:	
  4542                           
  4543                           ;OverTemperature_B1.c: 152: }
  4544                           ;OverTemperature_B1.c: 155: setLED(99,command+10);
  4545  0A48  0020               	movlb	0	; select bank0
  4546  0A49  082F               	movf	setOverTemp_Exceptions@command,w
  4547  0A4A  3E0A               	addlw	10
  4548  0A4B  00AE               	movwf	??_setOverTemp_Exceptions
  4549  0A4C  082E               	movf	??_setOverTemp_Exceptions,w
  4550  0A4D  00A2               	movwf	setLED@command
  4551  0A4E  3063               	movlw	99
  4552  0A4F  318E  2645  318A   	fcall	_setLED
  4553                           
  4554                           ;OverTemperature_B1.c: 157: setSw_Enable((~command) & 0x01);
  4555  0A52  0020               	movlb	0	; select bank0
  4556  0A53  092F               	comf	setOverTemp_Exceptions@command,w
  4557  0A54  3901               	andlw	1
  4558  0A55  3189  2164         	fcall	_setSw_Enable
  4559  0A57  0008               	return
  4560  0A58                     __end_of_setOverTemp_Exceptions:	
  4561                           
  4562                           	psect	text12
  4563  0964                     __ptext12:	
  4564 ;; *************** function _setSw_Enable *****************
  4565 ;; Defined at:
  4566 ;;		line 85 in file "../src/Switch_B1.c"
  4567 ;; Parameters:    Size  Location     Type
  4568 ;;  command         1    wreg     unsigned char 
  4569 ;; Auto vars:     Size  Location     Type
  4570 ;;  command         1    2[BANK0 ] unsigned char 
  4571 ;; Return value:  Size  Location     Type
  4572 ;;		None               void
  4573 ;; Registers used:
  4574 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4575 ;; Tracked objects:
  4576 ;;		On entry : 0/0
  4577 ;;		On exit  : 0/0
  4578 ;;		Unchanged: 0/0
  4579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4581 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4583 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4584 ;;Total ram usage:        1 bytes
  4585 ;; Hardware stack levels used:    1
  4586 ;; Hardware stack levels required when called:    6
  4587 ;; This function calls:
  4588 ;;		_SwPointSelect
  4589 ;; This function is called by:
  4590 ;;		_my_Main
  4591 ;;		_setOverTemp_Exceptions
  4592 ;; This function uses a non-reentrant model
  4593 ;;
  4594                           
  4595                           
  4596                           ;psect for function _setSw_Enable
  4597  0964                     _setSw_Enable:	
  4598                           
  4599                           ;incstack = 0
  4600                           ; Regs used in _setSw_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4601                           ;setSw_Enable@command stored from wreg
  4602  0964  0020               	movlb	0	; select bank0
  4603  0965  00A2               	movwf	setSw_Enable@command
  4604                           
  4605                           ;Switch_B1.c: 88: SwPointSelect(1);
  4606  0966  3001               	movlw	1
  4607  0967  3188  2072  3189   	fcall	_SwPointSelect
  4608                           
  4609                           ;Switch_B1.c: 89: Sw->Enable = command;
  4610  096A  0020               	movlb	0	; select bank0
  4611  096B  085A               	movf	_Sw,w
  4612  096C  0086               	movwf	6
  4613  096D  3001               	movlw	1	; select bank2/3
  4614  096E  0087               	movwf	7
  4615  096F  0822               	movf	setSw_Enable@command,w
  4616  0970  1001               	bcf	1,0
  4617  0971  1D03               	skipz
  4618  0972  1401               	bsf	1,0
  4619                           
  4620                           ;Switch_B1.c: 93: SwPointSelect(2);
  4621  0973  3002               	movlw	2
  4622  0974  3188  2072  3189   	fcall	_SwPointSelect
  4623                           
  4624                           ;Switch_B1.c: 94: Sw->Enable = command;
  4625  0977  0020               	movlb	0	; select bank0
  4626  0978  085A               	movf	_Sw,w
  4627  0979  0086               	movwf	6
  4628  097A  3001               	movlw	1	; select bank2/3
  4629  097B  0087               	movwf	7
  4630  097C  0822               	movf	setSw_Enable@command,w
  4631  097D  1001               	bcf	1,0
  4632  097E  1D03               	skipz
  4633  097F  1401               	bsf	1,0
  4634                           
  4635                           ;Switch_B1.c: 98: SwPointSelect(3);
  4636  0980  3003               	movlw	3
  4637  0981  3188  2072         	fcall	_SwPointSelect
  4638                           
  4639                           ;Switch_B1.c: 99: Sw->Enable = command;
  4640  0983  0020               	movlb	0	; select bank0
  4641  0984  085A               	movf	_Sw,w
  4642  0985  0086               	movwf	6
  4643  0986  3001               	movlw	1	; select bank2/3
  4644  0987  0087               	movwf	7
  4645  0988  0822               	movf	setSw_Enable@command,w
  4646  0989  1001               	bcf	1,0
  4647  098A  1D03               	skipz
  4648  098B  1401               	bsf	1,0
  4649  098C  0008               	return
  4650  098D                     __end_of_setSw_Enable:	
  4651                           
  4652                           	psect	text13
  4653  0EB2                     __ptext13:	
  4654 ;; *************** function _DimmerLights_Exceptions *****************
  4655 ;; Defined at:
  4656 ;;		line 513 in file "../src/Dimmer_B1.c"
  4657 ;; Parameters:    Size  Location     Type
  4658 ;;  status          1    wreg     unsigned char 
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;  status          1   13[BANK0 ] unsigned char 
  4661 ;; Return value:  Size  Location     Type
  4662 ;;		None               void
  4663 ;; Registers used:
  4664 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4671 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4673 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4674 ;;Total ram usage:        1 bytes
  4675 ;; Hardware stack levels used:    1
  4676 ;; Hardware stack levels required when called:    8
  4677 ;; This function calls:
  4678 ;;		_getDimmerLights_StatusFlag
  4679 ;;		_setBuz
  4680 ;;		_setDimmerLights_ERROR
  4681 ;;		_setDimmerLights_TriggerERROR
  4682 ;; This function is called by:
  4683 ;;		_setOverTemp_Exceptions
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           
  4688                           ;psect for function _DimmerLights_Exceptions
  4689  0EB2                     _DimmerLights_Exceptions:	
  4690                           
  4691                           ;incstack = 0
  4692                           ; Regs used in _DimmerLights_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  4693                           ;DimmerLights_Exceptions@status stored from wreg
  4694  0EB2  0020               	movlb	0	; select bank0
  4695  0EB3  00AD               	movwf	DimmerLights_Exceptions@status
  4696                           
  4697                           ;Dimmer_B1.c: 514: if (status == 1) {
  4698  0EB4  082D               	movf	DimmerLights_Exceptions@status,w
  4699  0EB5  3A01               	xorlw	1
  4700  0EB6  1D03               	skipz
  4701  0EB7  2EC8               	goto	l4053
  4702                           
  4703                           ;Dimmer_B1.c: 515: if (getDimmerLights_StatusFlag() == 1) {
  4704  0EB8  3197  2736  318E   	fcall	_getDimmerLights_StatusFlag
  4705  0EBB  3A01               	xorlw	1
  4706  0EBC  1D03               	skipz
  4707  0EBD  2EE0               	goto	l4059
  4708                           
  4709                           ;Dimmer_B1.c: 516: setBuz(10, 300);
  4710  0EBE  302C               	movlw	44
  4711  0EBF  0020               	movlb	0	; select bank0
  4712  0EC0  00A9               	movwf	setBuz@time
  4713  0EC1  3001               	movlw	1
  4714  0EC2  00AA               	movwf	setBuz@time+1
  4715  0EC3  300A               	movlw	10
  4716  0EC4  3187  2773  318E   	fcall	_setBuz
  4717  0EC7  2EE0               	goto	l4059
  4718  0EC8                     l4053:	
  4719                           ;Dimmer_B1.c: 528: } else if (status == 2)
  4720                           
  4721                           ;Dimmer_B1.c: 526: setDimmerLights_ERROR(3);
  4722                           
  4723                           ;Dimmer_B1.c: 523: setDimmerLights_ERROR(2);
  4724                           
  4725                           ;Dimmer_B1.c: 517: }
  4726                           ;Dimmer_B1.c: 520: setDimmerLights_ERROR(1);
  4727                           
  4728  0EC8  0020               	movlb	0	; select bank0
  4729  0EC9  082D               	movf	DimmerLights_Exceptions@status,w
  4730  0ECA  3A02               	xorlw	2
  4731  0ECB  1D03               	skipz
  4732  0ECC  2EDB               	goto	l4057
  4733                           
  4734                           ;Dimmer_B1.c: 529: {
  4735                           ;Dimmer_B1.c: 530: setBuz(5, 300);
  4736  0ECD  302C               	movlw	44
  4737  0ECE  00A9               	movwf	setBuz@time
  4738  0ECF  3001               	movlw	1
  4739  0ED0  00AA               	movwf	setBuz@time+1
  4740  0ED1  3005               	movlw	5
  4741  0ED2  3187  2773  318E   	fcall	_setBuz
  4742                           
  4743                           ;Dimmer_B1.c: 531: setDimmerLights_ERROR(Dimmer->Load);
  4744  0ED5  0020               	movlb	0	; select bank0
  4745  0ED6  0A57               	incf	_Dimmer,w
  4746  0ED7  0086               	movwf	6
  4747  0ED8  0187               	clrf	7
  4748  0ED9  0801               	movf	1,w
  4749  0EDA  2EE9               	goto	L1
  4750  0EDB                     l4057:	
  4751                           ;Dimmer_B1.c: 532: } else if (status == 3)
  4752                           
  4753  0EDB  0020               	movlb	0	; select bank0
  4754  0EDC  082D               	movf	DimmerLights_Exceptions@status,w
  4755  0EDD  3A03               	xorlw	3
  4756  0EDE  1D03               	skipz
  4757  0EDF  2EEC               	goto	l527
  4758  0EE0                     l4059:	
  4759                           
  4760                           ;Dimmer_B1.c: 533: {
  4761                           ;Dimmer_B1.c: 535: setDimmerLights_ERROR(1);
  4762  0EE0  3001               	movlw	1
  4763  0EE1  318A  2258  318E   	fcall	_setDimmerLights_ERROR
  4764                           
  4765                           ;Dimmer_B1.c: 538: setDimmerLights_ERROR(2);
  4766  0EE4  3002               	movlw	2
  4767  0EE5  318A  2258  318E   	fcall	_setDimmerLights_ERROR
  4768                           
  4769                           ;Dimmer_B1.c: 541: setDimmerLights_ERROR(3);
  4770  0EE8  3003               	movlw	3
  4771  0EE9                     L1:	
  4772  0EE9  318A  2258  318E   	fcall	_setDimmerLights_ERROR
  4773  0EEC                     l527:	
  4774                           
  4775                           ;Dimmer_B1.c: 543: }
  4776                           ;Dimmer_B1.c: 546: setDimmerLights_TriggerERROR(1, 0);
  4777  0EEC  0020               	movlb	0	; select bank0
  4778  0EED  01A2               	clrf	setDimmerLights_TriggerERROR@command
  4779  0EEE  3001               	movlw	1
  4780  0EEF  3189  2115  318E   	fcall	_setDimmerLights_TriggerERROR
  4781                           
  4782                           ;Dimmer_B1.c: 549: setDimmerLights_TriggerERROR(2, 0);
  4783  0EF2  0020               	movlb	0	; select bank0
  4784  0EF3  01A2               	clrf	setDimmerLights_TriggerERROR@command
  4785  0EF4  3002               	movlw	2
  4786  0EF5  3189  2115  318E   	fcall	_setDimmerLights_TriggerERROR
  4787                           
  4788                           ;Dimmer_B1.c: 552: setDimmerLights_TriggerERROR(3, 0);
  4789  0EF8  0020               	movlb	0	; select bank0
  4790  0EF9  01A2               	clrf	setDimmerLights_TriggerERROR@command
  4791  0EFA  3003               	movlw	3
  4792  0EFB  3189  2115  318E   	fcall	_setDimmerLights_TriggerERROR
  4793                           
  4794                           ;Dimmer_B1.c: 555: if (myMain->SelfTest == 0) {
  4795  0EFE  0020               	movlb	0	; select bank0
  4796  0EFF  086A               	movf	_myMain,w
  4797  0F00  0086               	movwf	6
  4798  0F01  3001               	movlw	1	; select bank2/3
  4799  0F02  0087               	movwf	7
  4800  0F03  1B01               	btfsc	1,6
  4801  0F04  0008               	return
  4802                           
  4803                           ;Dimmer_B1.c: 556: myMain->i = 0;
  4804  0F05  086A               	movf	_myMain,w
  4805  0F06  3E0E               	addlw	14
  4806  0F07  0086               	movwf	6
  4807  0F08  3001               	movlw	1	; select bank2/3
  4808  0F09  0087               	movwf	7
  4809  0F0A  1001               	bcf	1,0
  4810                           
  4811                           ;Dimmer_B1.c: 557: myMain->j = 0;
  4812  0F0B  086A               	movf	_myMain,w
  4813  0F0C  3E0E               	addlw	14
  4814  0F0D  0086               	movwf	6
  4815  0F0E  3001               	movlw	1	; select bank2/3
  4816  0F0F  0087               	movwf	7
  4817  0F10  1081               	bcf	1,1
  4818                           
  4819                           ;Dimmer_B1.c: 558: myMain->k = 1;
  4820  0F11  086A               	movf	_myMain,w
  4821  0F12  3E0E               	addlw	14
  4822  0F13  0086               	movwf	6
  4823  0F14  3001               	movlw	1	; select bank2/3
  4824  0F15  0087               	movwf	7
  4825  0F16  1501               	bsf	1,2
  4826                           
  4827                           ;Dimmer_B1.c: 559: myMain->Count2 = 0;
  4828  0F17  086A               	movf	_myMain,w
  4829  0F18  3E07               	addlw	7
  4830  0F19  0086               	movwf	6
  4831  0F1A  3001               	movlw	1	; select bank2/3
  4832  0F1B  0087               	movwf	7
  4833  0F1C  3000               	movlw	0
  4834  0F1D  3FC0               	movwi [0]fsr1
  4835  0F1E  3FC1               	movwi [1]fsr1
  4836  0F1F  0008               	return
  4837  0F20                     __end_of_DimmerLights_Exceptions:	
  4838                           
  4839                           	psect	text14
  4840  0915                     __ptext14:	
  4841 ;; *************** function _setDimmerLights_TriggerERROR *****************
  4842 ;; Defined at:
  4843 ;;		line 582 in file "../src/Dimmer_B1.c"
  4844 ;; Parameters:    Size  Location     Type
  4845 ;;  lights          1    wreg     unsigned char 
  4846 ;;  command         1    2[BANK0 ] unsigned char 
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;  lights          1    3[BANK0 ] unsigned char 
  4849 ;; Return value:  Size  Location     Type
  4850 ;;		None               void
  4851 ;; Registers used:
  4852 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4853 ;; Tracked objects:
  4854 ;;		On entry : 0/0
  4855 ;;		On exit  : 0/0
  4856 ;;		Unchanged: 0/0
  4857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4858 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4859 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4861 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4862 ;;Total ram usage:        2 bytes
  4863 ;; Hardware stack levels used:    1
  4864 ;; Hardware stack levels required when called:    6
  4865 ;; This function calls:
  4866 ;;		_DimmerLightsPointSelect
  4867 ;; This function is called by:
  4868 ;;		_DimmerLights_Exceptions
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           
  4872                           
  4873                           ;psect for function _setDimmerLights_TriggerERROR
  4874  0915                     _setDimmerLights_TriggerERROR:	
  4875                           
  4876                           ;incstack = 0
  4877                           ; Regs used in _setDimmerLights_TriggerERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
  4878                           ;setDimmerLights_TriggerERROR@lights stored from wreg
  4879  0915  0020               	movlb	0	; select bank0
  4880  0916  00A3               	movwf	setDimmerLights_TriggerERROR@lights
  4881                           
  4882                           ;Dimmer_B1.c: 584: DimmerLightsPointSelect(lights);
  4883  0917  0823               	movf	setDimmerLights_TriggerERROR@lights,w
  4884  0918  3188  203C         	fcall	_DimmerLightsPointSelect
  4885                           
  4886                           ;Dimmer_B1.c: 585: DimmerLights->Trigger = command;
  4887  091A  0020               	movlb	0	; select bank0
  4888  091B  0858               	movf	_DimmerLights,w
  4889  091C  3E08               	addlw	8
  4890  091D  0086               	movwf	6
  4891  091E  0187               	clrf	7
  4892  091F  0822               	movf	setDimmerLights_TriggerERROR@command,w
  4893  0920  1101               	bcf	1,2
  4894  0921  1D03               	skipz
  4895  0922  1501               	bsf	1,2
  4896                           
  4897                           ;Dimmer_B1.c: 586: DimmerLights->Switch = command;
  4898  0923  0858               	movf	_DimmerLights,w
  4899  0924  3E08               	addlw	8
  4900  0925  0086               	movwf	6
  4901  0926  0187               	clrf	7
  4902  0927  0822               	movf	setDimmerLights_TriggerERROR@command,w
  4903  0928  1081               	bcf	1,1
  4904  0929  1D03               	skipz
  4905  092A  1481               	bsf	1,1
  4906                           
  4907                           ;Dimmer_B1.c: 587: DimmerLights->TriggerAdj = command;
  4908  092B  0858               	movf	_DimmerLights,w
  4909  092C  3E08               	addlw	8
  4910  092D  0086               	movwf	6
  4911  092E  0187               	clrf	7
  4912  092F  0822               	movf	setDimmerLights_TriggerERROR@command,w
  4913  0930  1201               	bcf	1,4
  4914  0931  1D03               	skipz
  4915  0932  1601               	bsf	1,4
  4916                           
  4917                           ;Dimmer_B1.c: 588: DimmerLights->AdjGo = command;
  4918  0933  0858               	movf	_DimmerLights,w
  4919  0934  3E08               	addlw	8
  4920  0935  0086               	movwf	6
  4921  0936  0187               	clrf	7
  4922  0937  0822               	movf	setDimmerLights_TriggerERROR@command,w
  4923  0938  1181               	bcf	1,3
  4924  0939  1D03               	skipz
  4925  093A  1581               	bsf	1,3
  4926  093B  0008               	return
  4927  093C                     __end_of_setDimmerLights_TriggerERROR:	
  4928                           
  4929                           	psect	text15
  4930  0A58                     __ptext15:	
  4931 ;; *************** function _setDimmerLights_ERROR *****************
  4932 ;; Defined at:
  4933 ;;		line 564 in file "../src/Dimmer_B1.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;  lights          1    wreg     unsigned char 
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;  lights          1    5[BANK0 ] unsigned char 
  4938 ;; Return value:  Size  Location     Type
  4939 ;;		None               void
  4940 ;; Registers used:
  4941 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4942 ;; Tracked objects:
  4943 ;;		On entry : 0/0
  4944 ;;		On exit  : 0/0
  4945 ;;		Unchanged: 0/0
  4946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4948 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4949 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4950 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4951 ;;Total ram usage:        2 bytes
  4952 ;; Hardware stack levels used:    1
  4953 ;; Hardware stack levels required when called:    7
  4954 ;; This function calls:
  4955 ;;		_DimmerLightsPointSelect
  4956 ;;		_setLED
  4957 ;;		_setSw_Status
  4958 ;; This function is called by:
  4959 ;;		_DimmerLights_Exceptions
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           
  4964                           ;psect for function _setDimmerLights_ERROR
  4965  0A58                     _setDimmerLights_ERROR:	
  4966                           
  4967                           ;incstack = 0
  4968                           ; Regs used in _setDimmerLights_ERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  4969                           ;setDimmerLights_ERROR@lights stored from wreg
  4970  0A58  0020               	movlb	0	; select bank0
  4971  0A59  00A5               	movwf	setDimmerLights_ERROR@lights
  4972                           
  4973                           ;Dimmer_B1.c: 565: DimmerLightsPointSelect(lights);
  4974  0A5A  0825               	movf	setDimmerLights_ERROR@lights,w
  4975  0A5B  3188  203C  318A   	fcall	_DimmerLightsPointSelect
  4976                           
  4977                           ;Dimmer_B1.c: 566: if (DimmerLights->Status == 1) {
  4978  0A5E  0020               	movlb	0	; select bank0
  4979  0A5F  0858               	movf	_DimmerLights,w
  4980  0A60  0086               	movwf	6
  4981  0A61  0187               	clrf	7
  4982  0A62  1E81               	btfss	1,5
  4983  0A63  0008               	return
  4984                           
  4985                           ;Dimmer_B1.c: 568: DimmerLights->Signal = 0;
  4986  0A64  0858               	movf	_DimmerLights,w
  4987  0A65  0086               	movwf	6
  4988  0A66  0187               	clrf	7
  4989  0A67  1081               	bcf	1,1
  4990                           
  4991                           ;Dimmer_B1.c: 569: DimmerLights->AdjFlag = 0;
  4992  0A68  0858               	movf	_DimmerLights,w
  4993  0A69  0086               	movwf	6
  4994  0A6A  0187               	clrf	7
  4995  0A6B  1181               	bcf	1,3
  4996                           
  4997                           ;Dimmer_B1.c: 570: DimmerLights->AdjStatus = 0;
  4998  0A6C  0858               	movf	_DimmerLights,w
  4999  0A6D  0086               	movwf	6
  5000  0A6E  0187               	clrf	7
  5001  0A6F  1201               	bcf	1,4
  5002                           
  5003                           ;Dimmer_B1.c: 571: DimmerLights->StatusFlag = 0;
  5004  0A70  0858               	movf	_DimmerLights,w
  5005  0A71  0086               	movwf	6
  5006  0A72  0187               	clrf	7
  5007  0A73  1301               	bcf	1,6
  5008                           
  5009                           ;Dimmer_B1.c: 572: DimmerLights->DimmingTimeValue = 7;
  5010  0A74  3007               	movlw	7
  5011  0A75  00A4               	movwf	??_setDimmerLights_ERROR
  5012  0A76  0858               	movf	_DimmerLights,w
  5013  0A77  3E02               	addlw	2
  5014  0A78  0086               	movwf	6
  5015  0A79  0187               	clrf	7
  5016  0A7A  0824               	movf	??_setDimmerLights_ERROR,w
  5017  0A7B  0081               	movwf	1
  5018                           
  5019                           ;Dimmer_B1.c: 573: DimmerLights->DimmingValue = DimmerLights->MinimumValue;
  5020  0A7C  0858               	movf	_DimmerLights,w
  5021  0A7D  3E06               	addlw	6
  5022  0A7E  0086               	movwf	6
  5023  0A7F  0187               	clrf	7
  5024  0A80  0801               	movf	1,w
  5025  0A81  00A4               	movwf	??_setDimmerLights_ERROR
  5026  0A82  0858               	movf	_DimmerLights,w
  5027  0A83  3E04               	addlw	4
  5028  0A84  0086               	movwf	6
  5029  0A85  0187               	clrf	7
  5030  0A86  0824               	movf	??_setDimmerLights_ERROR,w
  5031  0A87  0081               	movwf	1
  5032                           
  5033                           ;Dimmer_B1.c: 574: Dimmer->Detect = 1;
  5034  0A88  0857               	movf	_Dimmer,w
  5035  0A89  0086               	movwf	6
  5036  0A8A  0187               	clrf	7
  5037  0A8B  1401               	bsf	1,0
  5038                           
  5039                           ;Dimmer_B1.c: 575: ;;
  5040                           ;Dimmer_B1.c: 576: setLED(lights, 1);
  5041  0A8C  01A2               	clrf	setLED@command
  5042  0A8D  0AA2               	incf	setLED@command,f
  5043  0A8E  0825               	movf	setDimmerLights_ERROR@lights,w
  5044  0A8F  318E  2645  318A   	fcall	_setLED
  5045                           
  5046                           ;Dimmer_B1.c: 577: setSw_Status(lights, 0);
  5047  0A92  0020               	movlb	0	; select bank0
  5048  0A93  01A2               	clrf	setSw_Status@command
  5049  0A94  0825               	movf	setDimmerLights_ERROR@lights,w
  5050  0A95  3196  26C3         	fcall	_setSw_Status
  5051  0A97  0008               	return
  5052  0A98                     __end_of_setDimmerLights_ERROR:	
  5053                           ;Dimmer_B1.c: 578: ;;
  5054                           
  5055                           
  5056                           	psect	text16
  5057  16C3                     __ptext16:	
  5058 ;; *************** function _setSw_Status *****************
  5059 ;; Defined at:
  5060 ;;		line 105 in file "../src/Switch_B1.c"
  5061 ;; Parameters:    Size  Location     Type
  5062 ;;  sw              1    wreg     unsigned char 
  5063 ;;  command         1    2[BANK0 ] unsigned char 
  5064 ;; Auto vars:     Size  Location     Type
  5065 ;;  sw              1    3[BANK0 ] unsigned char 
  5066 ;; Return value:  Size  Location     Type
  5067 ;;		None               void
  5068 ;; Registers used:
  5069 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5070 ;; Tracked objects:
  5071 ;;		On entry : 0/0
  5072 ;;		On exit  : 0/0
  5073 ;;		Unchanged: 0/0
  5074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5075 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5076 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5078 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5079 ;;Total ram usage:        2 bytes
  5080 ;; Hardware stack levels used:    1
  5081 ;; Hardware stack levels required when called:    6
  5082 ;; This function calls:
  5083 ;;		_SwPointSelect
  5084 ;; This function is called by:
  5085 ;;		_setDimmerLights_ERROR
  5086 ;; This function uses a non-reentrant model
  5087 ;;
  5088                           
  5089                           
  5090                           ;psect for function _setSw_Status
  5091  16C3                     _setSw_Status:	
  5092                           
  5093                           ;incstack = 0
  5094                           ; Regs used in _setSw_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5095                           ;setSw_Status@sw stored from wreg
  5096  16C3  0020               	movlb	0	; select bank0
  5097  16C4  00A3               	movwf	setSw_Status@sw
  5098                           
  5099                           ;Switch_B1.c: 106: SwPointSelect(sw);
  5100  16C5  0823               	movf	setSw_Status@sw,w
  5101  16C6  3188  2072         	fcall	_SwPointSelect
  5102                           
  5103                           ;Switch_B1.c: 107: Sw->Status = command;
  5104  16C8  0020               	movlb	0	; select bank0
  5105  16C9  085A               	movf	_Sw,w
  5106  16CA  0086               	movwf	6
  5107  16CB  3001               	movlw	1	; select bank2/3
  5108  16CC  0087               	movwf	7
  5109  16CD  0822               	movf	setSw_Status@command,w
  5110  16CE  1301               	bcf	1,6
  5111  16CF  1D03               	skipz
  5112  16D0  1701               	bsf	1,6
  5113  16D1  0008               	return
  5114  16D2                     __end_of_setSw_Status:	
  5115                           
  5116                           	psect	text17
  5117  15D9                     __ptext17:	
  5118 ;; *************** function _Temp_Initialization *****************
  5119 ;; Defined at:
  5120 ;;		line 15 in file "../src/OverTemperature_B1.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;		None
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;		None
  5125 ;; Return value:  Size  Location     Type
  5126 ;;		None               void
  5127 ;; Registers used:
  5128 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5129 ;; Tracked objects:
  5130 ;;		On entry : 0/0
  5131 ;;		On exit  : 0/0
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5138 ;;Total ram usage:        0 bytes
  5139 ;; Hardware stack levels used:    1
  5140 ;; Hardware stack levels required when called:    6
  5141 ;; This function calls:
  5142 ;;		_setTemp_Initialization
  5143 ;; This function is called by:
  5144 ;;		_main
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148                           
  5149                           ;psect for function _Temp_Initialization
  5150  15D9                     _Temp_Initialization:	
  5151                           
  5152                           ;OverTemperature_B1.c: 18: setTemp_Initialization();
  5153                           
  5154                           ;incstack = 0
  5155                           ; Regs used in _Temp_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5156  15D9  3196  2621         	fcall	_setTemp_Initialization
  5157  15DB  0008               	return
  5158  15DC                     __end_of_Temp_Initialization:	
  5159                           
  5160                           	psect	text18
  5161  1621                     __ptext18:	
  5162 ;; *************** function _setTemp_Initialization *****************
  5163 ;; Defined at:
  5164 ;;		line 51 in file "../src/OverTemperature_B1.c"
  5165 ;; Parameters:    Size  Location     Type
  5166 ;;		None
  5167 ;; Auto vars:     Size  Location     Type
  5168 ;;		None
  5169 ;; Return value:  Size  Location     Type
  5170 ;;		None               void
  5171 ;; Registers used:
  5172 ;;		wreg, fsr1l, fsr1h
  5173 ;; Tracked objects:
  5174 ;;		On entry : 0/0
  5175 ;;		On exit  : 0/0
  5176 ;;		Unchanged: 0/0
  5177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5180 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5181 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5182 ;;Total ram usage:        1 bytes
  5183 ;; Hardware stack levels used:    1
  5184 ;; Hardware stack levels required when called:    5
  5185 ;; This function calls:
  5186 ;;		Nothing
  5187 ;; This function is called by:
  5188 ;;		_Temp_Initialization
  5189 ;; This function uses a non-reentrant model
  5190 ;;
  5191                           
  5192                           
  5193                           ;psect for function _setTemp_Initialization
  5194  1621                     _setTemp_Initialization:	
  5195                           
  5196                           ;OverTemperature_B1.c: 53: Temp=&Temp1;
  5197                           
  5198                           ;incstack = 0
  5199                           ; Regs used in _setTemp_Initialization: [wregfsr1]
  5200  1621  3034               	movlw	_Temp1& (0+255)
  5201  1622  0020               	movlb	0	; select bank0
  5202  1623  00A0               	movwf	??_setTemp_Initialization
  5203  1624  0820               	movf	??_setTemp_Initialization,w
  5204  1625  00DB               	movwf	_Temp
  5205                           
  5206                           ;OverTemperature_B1.c: 54: Temp->Safe=1;
  5207  1626  085B               	movf	_Temp,w
  5208  1627  0086               	movwf	6
  5209  1628  3001               	movlw	1	; select bank2/3
  5210  1629  0087               	movwf	7
  5211  162A  1601               	bsf	1,4
  5212  162B  0008               	return
  5213  162C                     __end_of_setTemp_Initialization:	
  5214                           
  5215                           	psect	text19
  5216  1643                     __ptext19:	
  5217 ;; *************** function _Switch_Main *****************
  5218 ;; Defined at:
  5219 ;;		line 61 in file "../src/Switch_B1.c"
  5220 ;; Parameters:    Size  Location     Type
  5221 ;;		None
  5222 ;; Auto vars:     Size  Location     Type
  5223 ;;		None
  5224 ;; Return value:  Size  Location     Type
  5225 ;;		None               void
  5226 ;; Registers used:
  5227 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5228 ;; Tracked objects:
  5229 ;;		On entry : 0/0
  5230 ;;		On exit  : 0/0
  5231 ;;		Unchanged: 0/0
  5232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5237 ;;Total ram usage:        0 bytes
  5238 ;; Hardware stack levels used:    1
  5239 ;; Hardware stack levels required when called:    9
  5240 ;; This function calls:
  5241 ;;		_setSw_Main
  5242 ;; This function is called by:
  5243 ;;		_main
  5244 ;; This function uses a non-reentrant model
  5245 ;;
  5246                           
  5247                           
  5248                           ;psect for function _Switch_Main
  5249  1643                     _Switch_Main:	
  5250                           
  5251                           ;Switch_B1.c: 63: setSw_Main(1);
  5252                           
  5253                           ;incstack = 0
  5254                           ; Regs used in _Switch_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5255  1643  3001               	movlw	1
  5256  1644  3181  21E6  3196   	fcall	_setSw_Main
  5257                           
  5258                           ;Switch_B1.c: 67: setSw_Main(2);
  5259  1647  3002               	movlw	2
  5260  1648  3181  21E6  3196   	fcall	_setSw_Main
  5261                           
  5262                           ;Switch_B1.c: 71: setSw_Main(3);
  5263  164B  3003               	movlw	3
  5264  164C  3181  21E6         	fcall	_setSw_Main
  5265  164E  0008               	return
  5266  164F                     __end_of_Switch_Main:	
  5267                           
  5268                           	psect	text20
  5269  01E6                     __ptext20:	
  5270 ;; *************** function _setSw_Main *****************
  5271 ;; Defined at:
  5272 ;;		line 111 in file "../src/Switch_B1.c"
  5273 ;; Parameters:    Size  Location     Type
  5274 ;;  sw              1    wreg     unsigned char 
  5275 ;; Auto vars:     Size  Location     Type
  5276 ;;  sw              1   21[BANK0 ] unsigned char 
  5277 ;; Return value:  Size  Location     Type
  5278 ;;		None               void
  5279 ;; Registers used:
  5280 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5281 ;; Tracked objects:
  5282 ;;		On entry : 0/0
  5283 ;;		On exit  : 0/0
  5284 ;;		Unchanged: 0/0
  5285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5287 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5288 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5289 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5290 ;;Total ram usage:        3 bytes
  5291 ;; Hardware stack levels used:    1
  5292 ;; Hardware stack levels required when called:    8
  5293 ;; This function calls:
  5294 ;;		_SwPointSelect
  5295 ;;		_Sw_DimmerAdjFunc
  5296 ;;		_Sw_DimmerOffFunc
  5297 ;;		_Sw_DimmerOnFunc
  5298 ;;		_setBuz
  5299 ;; This function is called by:
  5300 ;;		_Switch_Main
  5301 ;; This function uses a non-reentrant model
  5302 ;;
  5303                           
  5304                           
  5305                           ;psect for function _setSw_Main
  5306  01E6                     _setSw_Main:	
  5307                           
  5308                           ;incstack = 0
  5309                           ; Regs used in _setSw_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5310                           ;setSw_Main@sw stored from wreg
  5311  01E6  0020               	movlb	0	; select bank0
  5312  01E7  00B5               	movwf	setSw_Main@sw
  5313                           
  5314                           ;Switch_B1.c: 112: SwPointSelect(sw);
  5315  01E8  0835               	movf	setSw_Main@sw,w
  5316  01E9  3188  2072  3181   	fcall	_SwPointSelect
  5317                           
  5318                           ;Switch_B1.c: 113: if (Sw->Enable == 1) {
  5319  01EC  0020               	movlb	0	; select bank0
  5320  01ED  085A               	movf	_Sw,w
  5321  01EE  0086               	movwf	6
  5322  01EF  3001               	movlw	1	; select bank2/3
  5323  01F0  0087               	movwf	7
  5324  01F1  1C01               	btfss	1,0
  5325  01F2  0008               	return
  5326                           
  5327                           ;Switch_B1.c: 115: if (sw == 1) {
  5328  01F3  0835               	movf	setSw_Main@sw,w
  5329  01F4  3A01               	xorlw	1
  5330  01F5  1D03               	skipz
  5331  01F6  29FF               	goto	l4879
  5332                           
  5333                           ;Switch_B1.c: 116: Sw->Touch = (RA0 == 1) ? 1 : 0;
  5334  01F7  085A               	movf	_Sw,w
  5335  01F8  0086               	movwf	6
  5336  01F9  3001               	movlw	1	; select bank2/3
  5337  01FA  0087               	movwf	7
  5338  01FB  1081               	bcf	1,1
  5339  01FC  180C               	btfsc	12,0	;volatile
  5340  01FD  1481               	bsf	1,1
  5341                           
  5342                           ;Switch_B1.c: 117: } else if (sw == 2) {
  5343  01FE  2A18               	goto	l1837
  5344  01FF                     l4879:	
  5345  01FF  0020               	movlb	0	; select bank0
  5346  0200  0835               	movf	setSw_Main@sw,w
  5347  0201  3A02               	xorlw	2
  5348  0202  1D03               	skipz
  5349  0203  2A0C               	goto	l4883
  5350                           
  5351                           ;Switch_B1.c: 118: Sw->Touch = (RA6 == 1) ? 1 : 0;
  5352  0204  085A               	movf	_Sw,w
  5353  0205  0086               	movwf	6
  5354  0206  3001               	movlw	1	; select bank2/3
  5355  0207  0087               	movwf	7
  5356  0208  1081               	bcf	1,1
  5357  0209  1B0C               	btfsc	12,6	;volatile
  5358  020A  1481               	bsf	1,1
  5359                           
  5360                           ;Switch_B1.c: 119: } else if (sw == 3) {
  5361  020B  2A18               	goto	l1837
  5362  020C                     l4883:	
  5363  020C  0020               	movlb	0	; select bank0
  5364  020D  0835               	movf	setSw_Main@sw,w
  5365  020E  3A03               	xorlw	3
  5366  020F  1D03               	skipz
  5367  0210  2A18               	goto	l1837
  5368                           
  5369                           ;Switch_B1.c: 120: Sw->Touch = (RA4 == 1) ? 1 : 0;
  5370  0211  085A               	movf	_Sw,w
  5371  0212  0086               	movwf	6
  5372  0213  3001               	movlw	1	; select bank2/3
  5373  0214  0087               	movwf	7
  5374  0215  1081               	bcf	1,1
  5375  0216  1A0C               	btfsc	12,4	;volatile
  5376  0217  1481               	bsf	1,1
  5377  0218                     l1837:	
  5378                           
  5379                           ;Switch_B1.c: 121: }
  5380                           ;Switch_B1.c: 135: if (Sw->Touch == 1) {
  5381  0218  0020               	movlb	0	; select bank0
  5382  0219  085A               	movf	_Sw,w
  5383  021A  0086               	movwf	6
  5384  021B  3001               	movlw	1	; select bank2/3
  5385  021C  0087               	movwf	7
  5386  021D  1C81               	btfss	1,1
  5387  021E  2ADE               	goto	l4927
  5388                           
  5389                           ;Switch_B1.c: 136: if (Sw->Debounce == 0) {
  5390  021F  085A               	movf	_Sw,w
  5391  0220  0086               	movwf	6
  5392  0221  3001               	movlw	1	; select bank2/3
  5393  0222  0087               	movwf	7
  5394  0223  1901               	btfsc	1,2
  5395  0224  2A46               	goto	l4899
  5396                           
  5397                           ;Switch_B1.c: 137: Sw->DebounceTime++;
  5398  0225  3001               	movlw	1
  5399  0226  00B3               	movwf	??_setSw_Main
  5400  0227  085A               	movf	_Sw,w
  5401  0228  3E02               	addlw	2
  5402  0229  0086               	movwf	6
  5403  022A  3001               	movlw	1	; select bank2/3
  5404  022B  0087               	movwf	7
  5405  022C  0833               	movf	??_setSw_Main,w
  5406  022D  0781               	addwf	1,f
  5407                           
  5408                           ;Switch_B1.c: 138: if (Sw->DebounceTime >= 5) {
  5409  022E  085A               	movf	_Sw,w
  5410  022F  3E02               	addlw	2
  5411  0230  0086               	movwf	6
  5412  0231  3001               	movlw	1	; select bank2/3
  5413  0232  0087               	movwf	7
  5414  0233  3005               	movlw	5
  5415  0234  0201               	subwf	1,w
  5416  0235  1C03               	skipc
  5417  0236  0008               	return
  5418                           
  5419                           ;Switch_B1.c: 139: Sw->DebounceTime = 0;
  5420  0237  085A               	movf	_Sw,w
  5421  0238  3E02               	addlw	2
  5422  0239  0086               	movwf	6
  5423  023A  3001               	movlw	1	; select bank2/3
  5424  023B  0087               	movwf	7
  5425  023C  0181               	clrf	1
  5426                           
  5427                           ;Switch_B1.c: 140: Sw->Debounce = 1;
  5428  023D  085A               	movf	_Sw,w
  5429  023E  0086               	movwf	6
  5430  023F  3001               	movlw	1	; select bank2/3
  5431  0240  0087               	movwf	7
  5432  0241  1501               	bsf	1,2
  5433                           
  5434                           ;Switch_B1.c: 143: Sw_DimmerOnFunc(sw);
  5435  0242  0835               	movf	setSw_Main@sw,w
  5436  0243  318D  2510         	fcall	_Sw_DimmerOnFunc
  5437                           
  5438                           ;Switch_B1.c: 145: }
  5439                           ;Switch_B1.c: 146: } else {
  5440  0245  0008               	return
  5441  0246                     l4899:	
  5442                           
  5443                           ;Switch_B1.c: 147: if (Sw->Hold1 == 0) {
  5444  0246  0020               	movlb	0	; select bank0
  5445  0247  085A               	movf	_Sw,w
  5446  0248  0086               	movwf	6
  5447  0249  3001               	movlw	1	; select bank2/3
  5448  024A  0087               	movwf	7
  5449  024B  1981               	btfsc	1,3
  5450  024C  2A73               	goto	l4909
  5451                           
  5452                           ;Switch_B1.c: 148: Sw->Hold1Time++;
  5453  024D  085A               	movf	_Sw,w
  5454  024E  3E03               	addlw	3
  5455  024F  0086               	movwf	6
  5456  0250  3001               	movlw	1	; select bank2/3
  5457  0251  0087               	movwf	7
  5458  0252  3001               	movlw	1
  5459  0253  0781               	addwf	1,f
  5460  0254  3141               	addfsr 1,1
  5461  0255  1803               	skipnc
  5462  0256  0A81               	incf	1,f
  5463                           
  5464                           ;Switch_B1.c: 149: if (Sw->Hold1Time >= 150) {
  5465  0257  085A               	movf	_Sw,w
  5466  0258  3E03               	addlw	3
  5467  0259  0086               	movwf	6
  5468  025A  3001               	movlw	1	; select bank2/3
  5469  025B  0087               	movwf	7
  5470  025C  3F40               	moviw [0]fsr1
  5471  025D  00B3               	movwf	??_setSw_Main
  5472  025E  3F41               	moviw [1]fsr1
  5473  025F  00B4               	movwf	??_setSw_Main+1
  5474  0260  3000               	movlw	0
  5475  0261  0234               	subwf	??_setSw_Main+1,w
  5476  0262  3096               	movlw	150
  5477  0263  1903               	skipnz
  5478  0264  0233               	subwf	??_setSw_Main,w
  5479  0265  1C03               	skipc
  5480  0266  0008               	return
  5481                           
  5482                           ;Switch_B1.c: 150: Sw->Hold1Time = 0;
  5483  0267  085A               	movf	_Sw,w
  5484  0268  3E03               	addlw	3
  5485  0269  0086               	movwf	6
  5486  026A  3001               	movlw	1	; select bank2/3
  5487  026B  0087               	movwf	7
  5488  026C  3000               	movlw	0
  5489  026D  3FC0               	movwi [0]fsr1
  5490  026E  3FC1               	movwi [1]fsr1
  5491                           
  5492                           ;Switch_B1.c: 153: Sw_DimmerAdjFunc(sw);
  5493  026F  0835               	movf	setSw_Main@sw,w
  5494  0270  318C  2456         	fcall	_Sw_DimmerAdjFunc
  5495                           
  5496                           ;Switch_B1.c: 156: }
  5497                           ;Switch_B1.c: 157: } else {
  5498  0272  0008               	return
  5499  0273                     l4909:	
  5500                           
  5501                           ;Switch_B1.c: 158: if (Sw->Hold2 == 0) {
  5502  0273  0020               	movlb	0	; select bank0
  5503  0274  085A               	movf	_Sw,w
  5504  0275  0086               	movwf	6
  5505  0276  3001               	movlw	1	; select bank2/3
  5506  0277  0087               	movwf	7
  5507  0278  1A01               	btfsc	1,4
  5508  0279  2AAF               	goto	l4919
  5509                           
  5510                           ;Switch_B1.c: 159: Sw->Hold2Time++;
  5511  027A  085A               	movf	_Sw,w
  5512  027B  3E05               	addlw	5
  5513  027C  0086               	movwf	6
  5514  027D  3001               	movlw	1	; select bank2/3
  5515  027E  0087               	movwf	7
  5516  027F  3001               	movlw	1
  5517  0280  0781               	addwf	1,f
  5518  0281  3141               	addfsr 1,1
  5519  0282  1803               	skipnc
  5520  0283  0A81               	incf	1,f
  5521                           
  5522                           ;Switch_B1.c: 160: if (Sw->Hold2Time >= 150) {
  5523  0284  085A               	movf	_Sw,w
  5524  0285  3E05               	addlw	5
  5525  0286  0086               	movwf	6
  5526  0287  3001               	movlw	1	; select bank2/3
  5527  0288  0087               	movwf	7
  5528  0289  3F40               	moviw [0]fsr1
  5529  028A  00B3               	movwf	??_setSw_Main
  5530  028B  3F41               	moviw [1]fsr1
  5531  028C  00B4               	movwf	??_setSw_Main+1
  5532  028D  3000               	movlw	0
  5533  028E  0234               	subwf	??_setSw_Main+1,w
  5534  028F  3096               	movlw	150
  5535  0290  1903               	skipnz
  5536  0291  0233               	subwf	??_setSw_Main,w
  5537  0292  1C03               	skipc
  5538  0293  0008               	return
  5539                           
  5540                           ;Switch_B1.c: 161: Sw->Hold2Time = 0;
  5541  0294  085A               	movf	_Sw,w
  5542  0295  3E05               	addlw	5
  5543  0296  0086               	movwf	6
  5544  0297  3001               	movlw	1	; select bank2/3
  5545  0298  0087               	movwf	7
  5546  0299  3000               	movlw	0
  5547  029A  3FC0               	movwi [0]fsr1
  5548  029B  3FC1               	movwi [1]fsr1
  5549                           
  5550                           ;Switch_B1.c: 162: Sw->Hold2 = 1;
  5551  029C  085A               	movf	_Sw,w
  5552  029D  0086               	movwf	6
  5553  029E  3001               	movlw	1	; select bank2/3
  5554  029F  0087               	movwf	7
  5555  02A0  1601               	bsf	1,4
  5556                           
  5557                           ;Switch_B1.c: 167: if (myMain->First == 1) {
  5558  02A1  086A               	movf	_myMain,w
  5559  02A2  0086               	movwf	6
  5560  02A3  3001               	movlw	1	; select bank2/3
  5561  02A4  0087               	movwf	7
  5562  02A5  1F81               	btfss	1,7
  5563  02A6  0008               	return
  5564                           
  5565                           ;Switch_B1.c: 168: setBuz(2, 100);
  5566  02A7  3064               	movlw	100
  5567  02A8  00A9               	movwf	setBuz@time
  5568  02A9  3000               	movlw	0
  5569  02AA  00AA               	movwf	setBuz@time+1
  5570  02AB  3002               	movlw	2
  5571  02AC  3187  2773         	fcall	_setBuz
  5572                           
  5573                           ;Switch_B1.c: 169: }
  5574                           ;Switch_B1.c: 171: }
  5575                           ;Switch_B1.c: 172: } else {
  5576  02AE  0008               	return
  5577  02AF                     l4919:	
  5578                           
  5579                           ;Switch_B1.c: 173: if (Sw->Hold3 == 0) {
  5580  02AF  0020               	movlb	0	; select bank0
  5581  02B0  085A               	movf	_Sw,w
  5582  02B1  0086               	movwf	6
  5583  02B2  3001               	movlw	1	; select bank2/3
  5584  02B3  0087               	movwf	7
  5585  02B4  1A81               	btfsc	1,5
  5586  02B5  0008               	return
  5587                           
  5588                           ;Switch_B1.c: 174: Sw->Hold3Time++;
  5589  02B6  085A               	movf	_Sw,w
  5590  02B7  3E07               	addlw	7
  5591  02B8  0086               	movwf	6
  5592  02B9  3001               	movlw	1	; select bank2/3
  5593  02BA  0087               	movwf	7
  5594  02BB  3001               	movlw	1
  5595  02BC  0781               	addwf	1,f
  5596  02BD  3141               	addfsr 1,1
  5597  02BE  1803               	skipnc
  5598  02BF  0A81               	incf	1,f
  5599                           
  5600                           ;Switch_B1.c: 175: if (Sw->Hold3Time >= 300) {
  5601  02C0  085A               	movf	_Sw,w
  5602  02C1  3E07               	addlw	7
  5603  02C2  0086               	movwf	6
  5604  02C3  3001               	movlw	1	; select bank2/3
  5605  02C4  0087               	movwf	7
  5606  02C5  3F40               	moviw [0]fsr1
  5607  02C6  00B3               	movwf	??_setSw_Main
  5608  02C7  3F41               	moviw [1]fsr1
  5609  02C8  00B4               	movwf	??_setSw_Main+1
  5610  02C9  3001               	movlw	1
  5611  02CA  0234               	subwf	??_setSw_Main+1,w
  5612  02CB  302C               	movlw	44
  5613  02CC  1903               	skipnz
  5614  02CD  0233               	subwf	??_setSw_Main,w
  5615  02CE  1C03               	skipc
  5616  02CF  0008               	return
  5617                           
  5618                           ;Switch_B1.c: 176: Sw->Hold3Time = 0;
  5619  02D0  085A               	movf	_Sw,w
  5620  02D1  3E07               	addlw	7
  5621  02D2  0086               	movwf	6
  5622  02D3  3001               	movlw	1	; select bank2/3
  5623  02D4  0087               	movwf	7
  5624  02D5  3000               	movlw	0
  5625  02D6  3FC0               	movwi [0]fsr1
  5626  02D7  3FC1               	movwi [1]fsr1
  5627                           
  5628                           ;Switch_B1.c: 177: Sw->Hold3 = 1;
  5629  02D8  085A               	movf	_Sw,w
  5630  02D9  0086               	movwf	6
  5631  02DA  3001               	movlw	1	; select bank2/3
  5632  02DB  0087               	movwf	7
  5633  02DC  1681               	bsf	1,5
  5634                           
  5635                           ;Switch_B1.c: 183: }
  5636                           ;Switch_B1.c: 184: }
  5637                           ;Switch_B1.c: 185: }
  5638                           ;Switch_B1.c: 186: }
  5639                           ;Switch_B1.c: 187: }
  5640                           ;Switch_B1.c: 188: } else {
  5641  02DD  0008               	return
  5642  02DE                     l4927:	
  5643                           
  5644                           ;Switch_B1.c: 189: if (Sw->Debounce == 1) {
  5645  02DE  085A               	movf	_Sw,w
  5646  02DF  0086               	movwf	6
  5647  02E0  3001               	movlw	1	; select bank2/3
  5648  02E1  0087               	movwf	7
  5649  02E2  1D01               	btfss	1,2
  5650  02E3  0008               	return
  5651                           
  5652                           ;Switch_B1.c: 190: Sw->DebounceTime++;
  5653  02E4  3001               	movlw	1
  5654  02E5  00B3               	movwf	??_setSw_Main
  5655  02E6  085A               	movf	_Sw,w
  5656  02E7  3E02               	addlw	2
  5657  02E8  0086               	movwf	6
  5658  02E9  3001               	movlw	1	; select bank2/3
  5659  02EA  0087               	movwf	7
  5660  02EB  0833               	movf	??_setSw_Main,w
  5661  02EC  0781               	addwf	1,f
  5662                           
  5663                           ;Switch_B1.c: 191: if (Sw->DebounceTime >= 5) {
  5664  02ED  085A               	movf	_Sw,w
  5665  02EE  3E02               	addlw	2
  5666  02EF  0086               	movwf	6
  5667  02F0  3001               	movlw	1	; select bank2/3
  5668  02F1  0087               	movwf	7
  5669  02F2  3005               	movlw	5
  5670  02F3  0201               	subwf	1,w
  5671  02F4  1C03               	skipc
  5672  02F5  0008               	return
  5673                           
  5674                           ;Switch_B1.c: 192: Sw->DebounceTime = 0;
  5675  02F6  085A               	movf	_Sw,w
  5676  02F7  3E02               	addlw	2
  5677  02F8  0086               	movwf	6
  5678  02F9  3001               	movlw	1	; select bank2/3
  5679  02FA  0087               	movwf	7
  5680  02FB  0181               	clrf	1
  5681                           
  5682                           ;Switch_B1.c: 193: Sw->Debounce = 0;
  5683  02FC  085A               	movf	_Sw,w
  5684  02FD  0086               	movwf	6
  5685  02FE  3001               	movlw	1	; select bank2/3
  5686  02FF  0087               	movwf	7
  5687  0300  1101               	bcf	1,2
  5688                           
  5689                           ;Switch_B1.c: 194: Sw->Hold1Time = 0;
  5690  0301  085A               	movf	_Sw,w
  5691  0302  3E03               	addlw	3
  5692  0303  0086               	movwf	6
  5693  0304  3001               	movlw	1	; select bank2/3
  5694  0305  0087               	movwf	7
  5695  0306  3000               	movlw	0
  5696  0307  3FC0               	movwi [0]fsr1
  5697  0308  3FC1               	movwi [1]fsr1
  5698                           
  5699                           ;Switch_B1.c: 195: Sw->Hold1 = 0;
  5700  0309  085A               	movf	_Sw,w
  5701  030A  0086               	movwf	6
  5702  030B  3001               	movlw	1	; select bank2/3
  5703  030C  0087               	movwf	7
  5704  030D  1181               	bcf	1,3
  5705                           
  5706                           ;Switch_B1.c: 196: Sw->Hold2Time = 0;
  5707  030E  085A               	movf	_Sw,w
  5708  030F  3E05               	addlw	5
  5709  0310  0086               	movwf	6
  5710  0311  3001               	movlw	1	; select bank2/3
  5711  0312  0087               	movwf	7
  5712  0313  3000               	movlw	0
  5713  0314  3FC0               	movwi [0]fsr1
  5714  0315  3FC1               	movwi [1]fsr1
  5715                           
  5716                           ;Switch_B1.c: 197: Sw->Hold2 = 0;
  5717  0316  085A               	movf	_Sw,w
  5718  0317  0086               	movwf	6
  5719  0318  3001               	movlw	1	; select bank2/3
  5720  0319  0087               	movwf	7
  5721  031A  1201               	bcf	1,4
  5722                           
  5723                           ;Switch_B1.c: 198: Sw->Hold3Time = 0;
  5724  031B  085A               	movf	_Sw,w
  5725  031C  3E07               	addlw	7
  5726  031D  0086               	movwf	6
  5727  031E  3001               	movlw	1	; select bank2/3
  5728  031F  0087               	movwf	7
  5729  0320  3000               	movlw	0
  5730  0321  3FC0               	movwi [0]fsr1
  5731  0322  3FC1               	movwi [1]fsr1
  5732                           
  5733                           ;Switch_B1.c: 199: Sw->Hold3 = 0;
  5734  0323  085A               	movf	_Sw,w
  5735  0324  0086               	movwf	6
  5736  0325  3001               	movlw	1	; select bank2/3
  5737  0326  0087               	movwf	7
  5738  0327  1281               	bcf	1,5
  5739                           
  5740                           ;Switch_B1.c: 201: Sw_DimmerOffFunc(sw);
  5741  0328  0835               	movf	setSw_Main@sw,w
  5742  0329  318B  2367         	fcall	_Sw_DimmerOffFunc
  5743  032B  0008               	return
  5744  032C                     __end_of_setSw_Main:	
  5745                           
  5746                           	psect	text21
  5747  0D10                     __ptext21:	
  5748 ;; *************** function _Sw_DimmerOnFunc *****************
  5749 ;; Defined at:
  5750 ;;		line 213 in file "../src/Switch_B1.c"
  5751 ;; Parameters:    Size  Location     Type
  5752 ;;  sw              1    wreg     unsigned char 
  5753 ;; Auto vars:     Size  Location     Type
  5754 ;;  sw              1   18[BANK0 ] unsigned char 
  5755 ;;  Idle            1   17[BANK0 ] unsigned char 
  5756 ;; Return value:  Size  Location     Type
  5757 ;;		None               void
  5758 ;; Registers used:
  5759 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5760 ;; Tracked objects:
  5761 ;;		On entry : 0/0
  5762 ;;		On exit  : 0/0
  5763 ;;		Unchanged: 0/0
  5764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5766 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5767 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5768 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5769 ;;Total ram usage:        6 bytes
  5770 ;; Hardware stack levels used:    1
  5771 ;; Hardware stack levels required when called:    7
  5772 ;; This function calls:
  5773 ;;		_setBuz
  5774 ;;		_setDimmerLights_Switch
  5775 ;;		_setDimmerLights_Trigger
  5776 ;; This function is called by:
  5777 ;;		_setSw_Main
  5778 ;; This function uses a non-reentrant model
  5779 ;;
  5780                           
  5781                           
  5782                           ;psect for function _Sw_DimmerOnFunc
  5783  0D10                     _Sw_DimmerOnFunc:	
  5784                           
  5785                           ;incstack = 0
  5786                           ; Regs used in _Sw_DimmerOnFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5787                           ;Sw_DimmerOnFunc@sw stored from wreg
  5788  0D10  0020               	movlb	0	; select bank0
  5789  0D11  00B2               	movwf	Sw_DimmerOnFunc@sw
  5790                           
  5791                           ;Switch_B1.c: 214: char Idle = 1;
  5792  0D12  01B1               	clrf	Sw_DimmerOnFunc@Idle
  5793  0D13  0AB1               	incf	Sw_DimmerOnFunc@Idle,f
  5794                           
  5795                           ;Switch_B1.c: 218: if (sw == 1) {
  5796  0D14  0832               	movf	Sw_DimmerOnFunc@sw,w
  5797  0D15  3A01               	xorlw	1
  5798  0D16  1D03               	skipz
  5799  0D17  2D23               	goto	l4271
  5800                           
  5801                           ;Switch_B1.c: 219: Idle = (DimmerLights2.AdjGo == 1 || DimmerLights3.AdjGo == 1) ? 0 : 1
      +                          ;
  5802  0D18  01AE               	clrf	_Sw_DimmerOnFunc$4409
  5803  0D19  0021               	movlb	1	; select bank1
  5804  0D1A  1DB7               	btfss	(_DimmerLights2^(0+128)+8),3
  5805  0D1B  19C6               	btfsc	(_DimmerLights3^(0+128)+8),3
  5806  0D1C  2D20               	goto	l4269
  5807  0D1D  0020               	movlb	0	; select bank0
  5808  0D1E  01AE               	clrf	_Sw_DimmerOnFunc$4409
  5809  0D1F  0AAE               	incf	_Sw_DimmerOnFunc$4409,f
  5810  0D20                     l4269:	
  5811  0D20  0020               	movlb	0	; select bank0
  5812  0D21  082E               	movf	_Sw_DimmerOnFunc$4409,w
  5813  0D22  2D40               	goto	L3
  5814  0D23                     l4271:	
  5815                           ;Switch_B1.c: 220: } else if (sw == 2) {
  5816                           
  5817  0D23  0832               	movf	Sw_DimmerOnFunc@sw,w
  5818  0D24  3A02               	xorlw	2
  5819  0D25  1D03               	skipz
  5820  0D26  2D32               	goto	l4283
  5821                           
  5822                           ;Switch_B1.c: 221: Idle = (DimmerLights1.AdjGo == 1 || DimmerLights3.AdjGo == 1) ? 0 : 1
      +                          ;
  5823  0D27  01AF               	clrf	_Sw_DimmerOnFunc$4410
  5824  0D28  0021               	movlb	1	; select bank1
  5825  0D29  1DA8               	btfss	(_DimmerLights1^(0+128)+8),3
  5826  0D2A  19C6               	btfsc	(_DimmerLights3^(0+128)+8),3
  5827  0D2B  2D2F               	goto	l4281
  5828  0D2C  0020               	movlb	0	; select bank0
  5829  0D2D  01AF               	clrf	_Sw_DimmerOnFunc$4410
  5830  0D2E  0AAF               	incf	_Sw_DimmerOnFunc$4410,f
  5831  0D2F                     l4281:	
  5832  0D2F  0020               	movlb	0	; select bank0
  5833  0D30  082F               	movf	_Sw_DimmerOnFunc$4410,w
  5834  0D31  2D40               	goto	L3
  5835  0D32                     l4283:	
  5836                           ;Switch_B1.c: 222: } else if (sw == 3) {
  5837                           
  5838  0D32  0832               	movf	Sw_DimmerOnFunc@sw,w
  5839  0D33  3A03               	xorlw	3
  5840  0D34  1D03               	skipz
  5841  0D35  2D43               	goto	l1863
  5842                           
  5843                           ;Switch_B1.c: 223: Idle = (DimmerLights1.AdjGo == 1 || DimmerLights2.AdjGo == 1) ? 0 : 1
      +                          ;
  5844  0D36  01B0               	clrf	_Sw_DimmerOnFunc$4411
  5845  0D37  0021               	movlb	1	; select bank1
  5846  0D38  1DA8               	btfss	(_DimmerLights1^(0+128)+8),3
  5847  0D39  19B7               	btfsc	(_DimmerLights2^(0+128)+8),3
  5848  0D3A  2D3E               	goto	l4293
  5849  0D3B  0020               	movlb	0	; select bank0
  5850  0D3C  01B0               	clrf	_Sw_DimmerOnFunc$4411
  5851  0D3D  0AB0               	incf	_Sw_DimmerOnFunc$4411,f
  5852  0D3E                     l4293:	
  5853  0D3E  0020               	movlb	0	; select bank0
  5854  0D3F  0830               	movf	_Sw_DimmerOnFunc$4411,w
  5855  0D40                     L3:	
  5856  0D40  00AD               	movwf	??_Sw_DimmerOnFunc
  5857  0D41  082D               	movf	??_Sw_DimmerOnFunc,w
  5858  0D42  00B1               	movwf	Sw_DimmerOnFunc@Idle
  5859  0D43                     l1863:	
  5860                           
  5861                           ;Switch_B1.c: 224: }
  5862                           ;Switch_B1.c: 235: if (Idle == 1) {
  5863  0D43  0831               	movf	Sw_DimmerOnFunc@Idle,w
  5864  0D44  3A01               	xorlw	1
  5865  0D45  1D03               	skipz
  5866  0D46  0008               	return
  5867                           
  5868                           ;Switch_B1.c: 236: Sw->Flag = 1;
  5869  0D47  085A               	movf	_Sw,w
  5870  0D48  0086               	movwf	6
  5871  0D49  3001               	movlw	1	; select bank2/3
  5872  0D4A  0087               	movwf	7
  5873  0D4B  1781               	bsf	1,7
  5874                           
  5875                           ;Switch_B1.c: 237: setBuz(1, 100);
  5876  0D4C  3064               	movlw	100
  5877  0D4D  00A9               	movwf	setBuz@time
  5878  0D4E  3000               	movlw	0
  5879  0D4F  00AA               	movwf	setBuz@time+1
  5880  0D50  3001               	movlw	1
  5881  0D51  3187  2773  318D   	fcall	_setBuz
  5882                           
  5883                           ;Switch_B1.c: 238: if (Sw->Status == 0) {
  5884  0D54  0020               	movlb	0	; select bank0
  5885  0D55  085A               	movf	_Sw,w
  5886  0D56  0086               	movwf	6
  5887  0D57  3001               	movlw	1	; select bank2/3
  5888  0D58  0087               	movwf	7
  5889  0D59  1B01               	btfsc	1,6
  5890  0D5A  2D6D               	goto	l4307
  5891                           
  5892                           ;Switch_B1.c: 239: Sw->Status = 1;
  5893  0D5B  085A               	movf	_Sw,w
  5894  0D5C  0086               	movwf	6
  5895  0D5D  3001               	movlw	1	; select bank2/3
  5896  0D5E  0087               	movwf	7
  5897  0D5F  1701               	bsf	1,6
  5898                           
  5899                           ;Switch_B1.c: 240: ;;
  5900                           ;Switch_B1.c: 242: setDimmerLights_Trigger(sw, 1);
  5901  0D60  01A2               	clrf	setDimmerLights_Trigger@command
  5902  0D61  0AA2               	incf	setDimmerLights_Trigger@command,f
  5903  0D62  0832               	movf	Sw_DimmerOnFunc@sw,w
  5904  0D63  3196  26B4  318D   	fcall	_setDimmerLights_Trigger
  5905                           
  5906                           ;Switch_B1.c: 243: setDimmerLights_Switch(sw, 1);
  5907  0D66  0020               	movlb	0	; select bank0
  5908  0D67  01A2               	clrf	setDimmerLights_Switch@command
  5909  0D68  0AA2               	incf	setDimmerLights_Switch@command,f
  5910  0D69  0832               	movf	Sw_DimmerOnFunc@sw,w
  5911  0D6A  3196  26A5         	fcall	_setDimmerLights_Switch
  5912                           
  5913                           ;Switch_B1.c: 245: ;;
  5914                           ;Switch_B1.c: 246: ;;
  5915                           ;Switch_B1.c: 248: } else {
  5916  0D6C  0008               	return
  5917  0D6D                     l4307:	
  5918                           
  5919                           ;Switch_B1.c: 249: Sw->Status = 0;
  5920  0D6D  0020               	movlb	0	; select bank0
  5921  0D6E  085A               	movf	_Sw,w
  5922  0D6F  0086               	movwf	6
  5923  0D70  3001               	movlw	1	; select bank2/3
  5924  0D71  0087               	movwf	7
  5925  0D72  1301               	bcf	1,6
  5926                           
  5927                           ;Switch_B1.c: 250: ;;
  5928  0D73  0008               	return
  5929  0D74                     __end_of_Sw_DimmerOnFunc:	
  5930                           
  5931                           	psect	text22
  5932  0B67                     __ptext22:	
  5933 ;; *************** function _Sw_DimmerOffFunc *****************
  5934 ;; Defined at:
  5935 ;;		line 256 in file "../src/Switch_B1.c"
  5936 ;; Parameters:    Size  Location     Type
  5937 ;;  sw              1    wreg     unsigned char 
  5938 ;; Auto vars:     Size  Location     Type
  5939 ;;  sw              1    6[BANK0 ] unsigned char 
  5940 ;; Return value:  Size  Location     Type
  5941 ;;		None               void
  5942 ;; Registers used:
  5943 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5944 ;; Tracked objects:
  5945 ;;		On entry : 0/0
  5946 ;;		On exit  : 0/0
  5947 ;;		Unchanged: 0/0
  5948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5950 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5951 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5952 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5953 ;;Total ram usage:        3 bytes
  5954 ;; Hardware stack levels used:    1
  5955 ;; Hardware stack levels required when called:    7
  5956 ;; This function calls:
  5957 ;;		_setDimmerLights_AdjGo
  5958 ;;		_setDimmerLights_Switch
  5959 ;;		_setDimmerLights_Trigger
  5960 ;;		_setDimmerLights_TriggerAdj
  5961 ;; This function is called by:
  5962 ;;		_setSw_Main
  5963 ;; This function uses a non-reentrant model
  5964 ;;
  5965                           
  5966                           
  5967                           ;psect for function _Sw_DimmerOffFunc
  5968  0B67                     _Sw_DimmerOffFunc:	
  5969                           
  5970                           ;incstack = 0
  5971                           ; Regs used in _Sw_DimmerOffFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5972                           ;Sw_DimmerOffFunc@sw stored from wreg
  5973  0B67  0020               	movlb	0	; select bank0
  5974  0B68  00A6               	movwf	Sw_DimmerOffFunc@sw
  5975                           
  5976                           ;Switch_B1.c: 257: if (Sw->Flag == 1) {
  5977  0B69  085A               	movf	_Sw,w
  5978  0B6A  0086               	movwf	6
  5979  0B6B  3001               	movlw	1	; select bank2/3
  5980  0B6C  0087               	movwf	7
  5981  0B6D  1F81               	btfss	1,7
  5982  0B6E  0008               	return
  5983                           
  5984                           ;Switch_B1.c: 258: Sw->Flag = 0;
  5985  0B6F  085A               	movf	_Sw,w
  5986  0B70  0086               	movwf	6
  5987  0B71  3001               	movlw	1	; select bank2/3
  5988  0B72  0087               	movwf	7
  5989  0B73  1381               	bcf	1,7
  5990                           
  5991                           ;Switch_B1.c: 259: if (Sw->Status == 1) {
  5992  0B74  085A               	movf	_Sw,w
  5993  0B75  0086               	movwf	6
  5994  0B76  3001               	movlw	1	; select bank2/3
  5995  0B77  0087               	movwf	7
  5996  0B78  1F01               	btfss	1,6
  5997  0B79  2BA3               	goto	l4369
  5998                           
  5999                           ;Switch_B1.c: 260: if (Sw->Adj == 1) {
  6000  0B7A  0A5A               	incf	_Sw,w
  6001  0B7B  0086               	movwf	6
  6002  0B7C  3001               	movlw	1	; select bank2/3
  6003  0B7D  0087               	movwf	7
  6004  0B7E  1C01               	btfss	1,0
  6005  0B7F  0008               	return
  6006                           
  6007                           ;Switch_B1.c: 261: Sw->Adj = 0;
  6008  0B80  0A5A               	incf	_Sw,w
  6009  0B81  0086               	movwf	6
  6010  0B82  3001               	movlw	1	; select bank2/3
  6011  0B83  0087               	movwf	7
  6012  0B84  1001               	bcf	1,0
  6013                           
  6014                           ;Switch_B1.c: 262: setDimmerLights_TriggerAdj(sw, 1);
  6015  0B85  01A2               	clrf	setDimmerLights_TriggerAdj@command
  6016  0B86  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  6017  0B87  0826               	movf	Sw_DimmerOffFunc@sw,w
  6018  0B88  3196  2696  318B   	fcall	_setDimmerLights_TriggerAdj
  6019                           
  6020                           ;Switch_B1.c: 263: setDimmerLights_AdjGo(sw, 0);
  6021  0B8B  0020               	movlb	0	; select bank0
  6022  0B8C  01A2               	clrf	setDimmerLights_AdjGo@command
  6023  0B8D  0826               	movf	Sw_DimmerOffFunc@sw,w
  6024  0B8E  3196  2687         	fcall	_setDimmerLights_AdjGo
  6025                           
  6026                           ;Switch_B1.c: 265: product->Data[17]=product->Data[26 + sw];
  6027  0B90  0020               	movlb	0	; select bank0
  6028  0B91  0826               	movf	Sw_DimmerOffFunc@sw,w
  6029  0B92  3E1A               	addlw	26
  6030  0B93  076B               	addwf	_product,w
  6031  0B94  00A4               	movwf	??_Sw_DimmerOffFunc
  6032  0B95  0824               	movf	??_Sw_DimmerOffFunc,w
  6033  0B96  0086               	movwf	6
  6034  0B97  3001               	movlw	1	; select bank2/3
  6035  0B98  0087               	movwf	7
  6036  0B99  0801               	movf	1,w
  6037  0B9A  00A5               	movwf	??_Sw_DimmerOffFunc+1
  6038  0B9B  086B               	movf	_product,w
  6039  0B9C  3E11               	addlw	17
  6040  0B9D  0086               	movwf	6
  6041  0B9E  3001               	movlw	1	; select bank2/3
  6042  0B9F  0087               	movwf	7
  6043  0BA0  0825               	movf	??_Sw_DimmerOffFunc+1,w
  6044  0BA1  0081               	movwf	1
  6045                           
  6046                           ;Switch_B1.c: 269: }
  6047                           ;Switch_B1.c: 270: } else {
  6048                           
  6049                           ;Switch_B1.c: 266: ;;
  6050                           ;Switch_B1.c: 267: ;;
  6051  0BA2  0008               	return
  6052  0BA3                     l4369:	
  6053                           
  6054                           ;Switch_B1.c: 271: setDimmerLights_Trigger(sw, 1);
  6055  0BA3  01A2               	clrf	setDimmerLights_Trigger@command
  6056  0BA4  0AA2               	incf	setDimmerLights_Trigger@command,f
  6057  0BA5  0826               	movf	Sw_DimmerOffFunc@sw,w
  6058  0BA6  3196  26B4  318B   	fcall	_setDimmerLights_Trigger
  6059                           
  6060                           ;Switch_B1.c: 272: setDimmerLights_Switch(sw, 0);
  6061  0BA9  0020               	movlb	0	; select bank0
  6062  0BAA  01A2               	clrf	setDimmerLights_Switch@command
  6063  0BAB  0826               	movf	Sw_DimmerOffFunc@sw,w
  6064  0BAC  3196  26A5         	fcall	_setDimmerLights_Switch
  6065                           
  6066                           ;Switch_B1.c: 274: ;;
  6067                           ;Switch_B1.c: 275: ;;
  6068                           ;Switch_B1.c: 276: ;;
  6069  0BAE  0008               	return
  6070  0BAF                     __end_of_Sw_DimmerOffFunc:	
  6071                           
  6072                           	psect	text23
  6073  16B4                     __ptext23:	
  6074 ;; *************** function _setDimmerLights_Trigger *****************
  6075 ;; Defined at:
  6076 ;;		line 705 in file "../src/Dimmer_B1.c"
  6077 ;; Parameters:    Size  Location     Type
  6078 ;;  lights          1    wreg     unsigned char 
  6079 ;;  command         1    2[BANK0 ] unsigned char 
  6080 ;; Auto vars:     Size  Location     Type
  6081 ;;  lights          1    3[BANK0 ] unsigned char 
  6082 ;; Return value:  Size  Location     Type
  6083 ;;		None               void
  6084 ;; Registers used:
  6085 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6086 ;; Tracked objects:
  6087 ;;		On entry : 0/0
  6088 ;;		On exit  : 0/0
  6089 ;;		Unchanged: 0/0
  6090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6091 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6092 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6094 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6095 ;;Total ram usage:        2 bytes
  6096 ;; Hardware stack levels used:    1
  6097 ;; Hardware stack levels required when called:    6
  6098 ;; This function calls:
  6099 ;;		_DimmerLightsPointSelect
  6100 ;; This function is called by:
  6101 ;;		_Sw_DimmerOnFunc
  6102 ;;		_Sw_DimmerOffFunc
  6103 ;; This function uses a non-reentrant model
  6104 ;;
  6105                           
  6106                           
  6107                           ;psect for function _setDimmerLights_Trigger
  6108  16B4                     _setDimmerLights_Trigger:	
  6109                           
  6110                           ;incstack = 0
  6111                           ; Regs used in _setDimmerLights_Trigger: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  6112                           ;setDimmerLights_Trigger@lights stored from wreg
  6113  16B4  0020               	movlb	0	; select bank0
  6114  16B5  00A3               	movwf	setDimmerLights_Trigger@lights
  6115                           
  6116                           ;Dimmer_B1.c: 707: DimmerLightsPointSelect(lights);
  6117  16B6  0823               	movf	setDimmerLights_Trigger@lights,w
  6118  16B7  3188  203C         	fcall	_DimmerLightsPointSelect
  6119                           
  6120                           ;Dimmer_B1.c: 708: DimmerLights->Trigger = command;
  6121  16B9  0020               	movlb	0	; select bank0
  6122  16BA  0858               	movf	_DimmerLights,w
  6123  16BB  3E08               	addlw	8
  6124  16BC  0086               	movwf	6
  6125  16BD  0187               	clrf	7
  6126  16BE  0822               	movf	setDimmerLights_Trigger@command,w
  6127  16BF  1101               	bcf	1,2
  6128  16C0  1D03               	skipz
  6129  16C1  1501               	bsf	1,2
  6130  16C2  0008               	return
  6131  16C3                     __end_of_setDimmerLights_Trigger:	
  6132                           
  6133                           	psect	text24
  6134  16A5                     __ptext24:	
  6135 ;; *************** function _setDimmerLights_Switch *****************
  6136 ;; Defined at:
  6137 ;;		line 693 in file "../src/Dimmer_B1.c"
  6138 ;; Parameters:    Size  Location     Type
  6139 ;;  lights          1    wreg     unsigned char 
  6140 ;;  command         1    2[BANK0 ] unsigned char 
  6141 ;; Auto vars:     Size  Location     Type
  6142 ;;  lights          1    3[BANK0 ] unsigned char 
  6143 ;; Return value:  Size  Location     Type
  6144 ;;		None               void
  6145 ;; Registers used:
  6146 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6147 ;; Tracked objects:
  6148 ;;		On entry : 0/0
  6149 ;;		On exit  : 0/0
  6150 ;;		Unchanged: 0/0
  6151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6152 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6153 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6155 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6156 ;;Total ram usage:        2 bytes
  6157 ;; Hardware stack levels used:    1
  6158 ;; Hardware stack levels required when called:    6
  6159 ;; This function calls:
  6160 ;;		_DimmerLightsPointSelect
  6161 ;; This function is called by:
  6162 ;;		_Sw_DimmerOnFunc
  6163 ;;		_Sw_DimmerOffFunc
  6164 ;; This function uses a non-reentrant model
  6165 ;;
  6166                           
  6167                           
  6168                           ;psect for function _setDimmerLights_Switch
  6169  16A5                     _setDimmerLights_Switch:	
  6170                           
  6171                           ;incstack = 0
  6172                           ; Regs used in _setDimmerLights_Switch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  6173                           ;setDimmerLights_Switch@lights stored from wreg
  6174  16A5  0020               	movlb	0	; select bank0
  6175  16A6  00A3               	movwf	setDimmerLights_Switch@lights
  6176                           
  6177                           ;Dimmer_B1.c: 695: DimmerLightsPointSelect(lights);
  6178  16A7  0823               	movf	setDimmerLights_Switch@lights,w
  6179  16A8  3188  203C         	fcall	_DimmerLightsPointSelect
  6180                           
  6181                           ;Dimmer_B1.c: 696: DimmerLights->Switch = command;
  6182  16AA  0020               	movlb	0	; select bank0
  6183  16AB  0858               	movf	_DimmerLights,w
  6184  16AC  3E08               	addlw	8
  6185  16AD  0086               	movwf	6
  6186  16AE  0187               	clrf	7
  6187  16AF  0822               	movf	setDimmerLights_Switch@command,w
  6188  16B0  1081               	bcf	1,1
  6189  16B1  1D03               	skipz
  6190  16B2  1481               	bsf	1,1
  6191  16B3  0008               	return
  6192  16B4                     __end_of_setDimmerLights_Switch:	
  6193                           
  6194                           	psect	text25
  6195  0C56                     __ptext25:	
  6196 ;; *************** function _Sw_DimmerAdjFunc *****************
  6197 ;; Defined at:
  6198 ;;		line 283 in file "../src/Switch_B1.c"
  6199 ;; Parameters:    Size  Location     Type
  6200 ;;  sw              1    wreg     unsigned char 
  6201 ;; Auto vars:     Size  Location     Type
  6202 ;;  sw              1    9[BANK0 ] unsigned char 
  6203 ;;  Idle            1    8[BANK0 ] unsigned char 
  6204 ;; Return value:  Size  Location     Type
  6205 ;;		None               void
  6206 ;; Registers used:
  6207 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6208 ;; Tracked objects:
  6209 ;;		On entry : 0/0
  6210 ;;		On exit  : 0/0
  6211 ;;		Unchanged: 0/0
  6212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6214 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6215 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6216 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6217 ;;Total ram usage:        6 bytes
  6218 ;; Hardware stack levels used:    1
  6219 ;; Hardware stack levels required when called:    7
  6220 ;; This function calls:
  6221 ;;		_setDimmerLights_AdjGo
  6222 ;;		_setDimmerLights_TriggerAdj
  6223 ;; This function is called by:
  6224 ;;		_setSw_Main
  6225 ;; This function uses a non-reentrant model
  6226 ;;
  6227                           
  6228                           
  6229                           ;psect for function _Sw_DimmerAdjFunc
  6230  0C56                     _Sw_DimmerAdjFunc:	
  6231                           
  6232                           ;incstack = 0
  6233                           ; Regs used in _Sw_DimmerAdjFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6234                           ;Sw_DimmerAdjFunc@sw stored from wreg
  6235  0C56  0020               	movlb	0	; select bank0
  6236  0C57  00A9               	movwf	Sw_DimmerAdjFunc@sw
  6237                           
  6238                           ;Switch_B1.c: 284: char Idle = 1;
  6239  0C58  01A8               	clrf	Sw_DimmerAdjFunc@Idle
  6240  0C59  0AA8               	incf	Sw_DimmerAdjFunc@Idle,f
  6241                           
  6242                           ;Switch_B1.c: 287: if (sw == 1) {
  6243  0C5A  0829               	movf	Sw_DimmerAdjFunc@sw,w
  6244  0C5B  3A01               	xorlw	1
  6245  0C5C  1D03               	skipz
  6246  0C5D  2C69               	goto	l4323
  6247                           
  6248                           ;Switch_B1.c: 288: Idle = (DimmerLights2.AdjGo == 1 || DimmerLights3.AdjGo == 1) ? 0 : 1
      +                          ;
  6249  0C5E  01A5               	clrf	_Sw_DimmerAdjFunc$4421
  6250  0C5F  0021               	movlb	1	; select bank1
  6251  0C60  1DB7               	btfss	(_DimmerLights2^(0+128)+8),3
  6252  0C61  19C6               	btfsc	(_DimmerLights3^(0+128)+8),3
  6253  0C62  2C66               	goto	l4321
  6254  0C63  0020               	movlb	0	; select bank0
  6255  0C64  01A5               	clrf	_Sw_DimmerAdjFunc$4421
  6256  0C65  0AA5               	incf	_Sw_DimmerAdjFunc$4421,f
  6257  0C66                     l4321:	
  6258  0C66  0020               	movlb	0	; select bank0
  6259  0C67  0825               	movf	_Sw_DimmerAdjFunc$4421,w
  6260  0C68  2C86               	goto	L5
  6261  0C69                     l4323:	
  6262                           ;Switch_B1.c: 289: } else if (sw == 2) {
  6263                           
  6264  0C69  0829               	movf	Sw_DimmerAdjFunc@sw,w
  6265  0C6A  3A02               	xorlw	2
  6266  0C6B  1D03               	skipz
  6267  0C6C  2C78               	goto	l4335
  6268                           
  6269                           ;Switch_B1.c: 290: Idle = (DimmerLights1.AdjGo == 1 || DimmerLights3.AdjGo == 1) ? 0 : 1
      +                          ;
  6270  0C6D  01A6               	clrf	_Sw_DimmerAdjFunc$4422
  6271  0C6E  0021               	movlb	1	; select bank1
  6272  0C6F  1DA8               	btfss	(_DimmerLights1^(0+128)+8),3
  6273  0C70  19C6               	btfsc	(_DimmerLights3^(0+128)+8),3
  6274  0C71  2C75               	goto	l4333
  6275  0C72  0020               	movlb	0	; select bank0
  6276  0C73  01A6               	clrf	_Sw_DimmerAdjFunc$4422
  6277  0C74  0AA6               	incf	_Sw_DimmerAdjFunc$4422,f
  6278  0C75                     l4333:	
  6279  0C75  0020               	movlb	0	; select bank0
  6280  0C76  0826               	movf	_Sw_DimmerAdjFunc$4422,w
  6281  0C77  2C86               	goto	L5
  6282  0C78                     l4335:	
  6283                           ;Switch_B1.c: 291: } else if (sw == 3) {
  6284                           
  6285  0C78  0829               	movf	Sw_DimmerAdjFunc@sw,w
  6286  0C79  3A03               	xorlw	3
  6287  0C7A  1D03               	skipz
  6288  0C7B  2C89               	goto	l1887
  6289                           
  6290                           ;Switch_B1.c: 292: Idle = (DimmerLights1.AdjGo == 1 || DimmerLights2.AdjGo == 1) ? 0 : 1
      +                          ;
  6291  0C7C  01A7               	clrf	_Sw_DimmerAdjFunc$4423
  6292  0C7D  0021               	movlb	1	; select bank1
  6293  0C7E  1DA8               	btfss	(_DimmerLights1^(0+128)+8),3
  6294  0C7F  19B7               	btfsc	(_DimmerLights2^(0+128)+8),3
  6295  0C80  2C84               	goto	l4345
  6296  0C81  0020               	movlb	0	; select bank0
  6297  0C82  01A7               	clrf	_Sw_DimmerAdjFunc$4423
  6298  0C83  0AA7               	incf	_Sw_DimmerAdjFunc$4423,f
  6299  0C84                     l4345:	
  6300  0C84  0020               	movlb	0	; select bank0
  6301  0C85  0827               	movf	_Sw_DimmerAdjFunc$4423,w
  6302  0C86                     L5:	
  6303  0C86  00A4               	movwf	??_Sw_DimmerAdjFunc
  6304  0C87  0824               	movf	??_Sw_DimmerAdjFunc,w
  6305  0C88  00A8               	movwf	Sw_DimmerAdjFunc@Idle
  6306  0C89                     l1887:	
  6307                           
  6308                           ;Switch_B1.c: 293: }
  6309                           ;Switch_B1.c: 304: if (Idle == 1) {
  6310  0C89  0828               	movf	Sw_DimmerAdjFunc@Idle,w
  6311  0C8A  3A01               	xorlw	1
  6312  0C8B  1D03               	skipz
  6313  0C8C  0008               	return
  6314                           
  6315                           ;Switch_B1.c: 305: if (Sw->Flag == 1) {
  6316  0C8D  085A               	movf	_Sw,w
  6317  0C8E  0086               	movwf	6
  6318  0C8F  3001               	movlw	1	; select bank2/3
  6319  0C90  0087               	movwf	7
  6320  0C91  1F81               	btfss	1,7
  6321  0C92  0008               	return
  6322                           
  6323                           ;Switch_B1.c: 306: Sw->Hold1 = 1;
  6324  0C93  085A               	movf	_Sw,w
  6325  0C94  0086               	movwf	6
  6326  0C95  3001               	movlw	1	; select bank2/3
  6327  0C96  0087               	movwf	7
  6328  0C97  1581               	bsf	1,3
  6329                           
  6330                           ;Switch_B1.c: 307: Sw->Adj = 1;
  6331  0C98  0A5A               	incf	_Sw,w
  6332  0C99  0086               	movwf	6
  6333  0C9A  3001               	movlw	1	; select bank2/3
  6334  0C9B  0087               	movwf	7
  6335  0C9C  1401               	bsf	1,0
  6336                           
  6337                           ;Switch_B1.c: 308: Sw->Status = 1;
  6338  0C9D  085A               	movf	_Sw,w
  6339  0C9E  0086               	movwf	6
  6340  0C9F  3001               	movlw	1	; select bank2/3
  6341  0CA0  0087               	movwf	7
  6342  0CA1  1701               	bsf	1,6
  6343                           
  6344                           ;Switch_B1.c: 309: ;;
  6345                           ;Switch_B1.c: 311: setDimmerLights_TriggerAdj(sw, 1);
  6346  0CA2  01A2               	clrf	setDimmerLights_TriggerAdj@command
  6347  0CA3  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  6348  0CA4  0829               	movf	Sw_DimmerAdjFunc@sw,w
  6349  0CA5  3196  2696  318C   	fcall	_setDimmerLights_TriggerAdj
  6350                           
  6351                           ;Switch_B1.c: 312: setDimmerLights_AdjGo(sw, 1);
  6352  0CA8  0020               	movlb	0	; select bank0
  6353  0CA9  01A2               	clrf	setDimmerLights_AdjGo@command
  6354  0CAA  0AA2               	incf	setDimmerLights_AdjGo@command,f
  6355  0CAB  0829               	movf	Sw_DimmerAdjFunc@sw,w
  6356  0CAC  3196  2687         	fcall	_setDimmerLights_AdjGo
  6357  0CAE  0008               	return
  6358  0CAF                     __end_of_Sw_DimmerAdjFunc:	
  6359                           
  6360                           	psect	text26
  6361  1696                     __ptext26:	
  6362 ;; *************** function _setDimmerLights_TriggerAdj *****************
  6363 ;; Defined at:
  6364 ;;		line 711 in file "../src/Dimmer_B1.c"
  6365 ;; Parameters:    Size  Location     Type
  6366 ;;  lights          1    wreg     unsigned char 
  6367 ;;  command         1    2[BANK0 ] unsigned char 
  6368 ;; Auto vars:     Size  Location     Type
  6369 ;;  lights          1    3[BANK0 ] unsigned char 
  6370 ;; Return value:  Size  Location     Type
  6371 ;;		None               void
  6372 ;; Registers used:
  6373 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6374 ;; Tracked objects:
  6375 ;;		On entry : 0/0
  6376 ;;		On exit  : 0/0
  6377 ;;		Unchanged: 0/0
  6378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6379 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6380 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6382 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6383 ;;Total ram usage:        2 bytes
  6384 ;; Hardware stack levels used:    1
  6385 ;; Hardware stack levels required when called:    6
  6386 ;; This function calls:
  6387 ;;		_DimmerLightsPointSelect
  6388 ;; This function is called by:
  6389 ;;		_Sw_DimmerOffFunc
  6390 ;;		_Sw_DimmerAdjFunc
  6391 ;; This function uses a non-reentrant model
  6392 ;;
  6393                           
  6394                           
  6395                           ;psect for function _setDimmerLights_TriggerAdj
  6396  1696                     _setDimmerLights_TriggerAdj:	
  6397                           
  6398                           ;incstack = 0
  6399                           ; Regs used in _setDimmerLights_TriggerAdj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6400                           ;setDimmerLights_TriggerAdj@lights stored from wreg
  6401  1696  0020               	movlb	0	; select bank0
  6402  1697  00A3               	movwf	setDimmerLights_TriggerAdj@lights
  6403                           
  6404                           ;Dimmer_B1.c: 713: DimmerLightsPointSelect(lights);
  6405  1698  0823               	movf	setDimmerLights_TriggerAdj@lights,w
  6406  1699  3188  203C         	fcall	_DimmerLightsPointSelect
  6407                           
  6408                           ;Dimmer_B1.c: 714: DimmerLights->TriggerAdj = command;
  6409  169B  0020               	movlb	0	; select bank0
  6410  169C  0858               	movf	_DimmerLights,w
  6411  169D  3E08               	addlw	8
  6412  169E  0086               	movwf	6
  6413  169F  0187               	clrf	7
  6414  16A0  0822               	movf	setDimmerLights_TriggerAdj@command,w
  6415  16A1  1201               	bcf	1,4
  6416  16A2  1D03               	skipz
  6417  16A3  1601               	bsf	1,4
  6418  16A4  0008               	return
  6419  16A5                     __end_of_setDimmerLights_TriggerAdj:	
  6420                           
  6421                           	psect	text27
  6422  1687                     __ptext27:	
  6423 ;; *************** function _setDimmerLights_AdjGo *****************
  6424 ;; Defined at:
  6425 ;;		line 699 in file "../src/Dimmer_B1.c"
  6426 ;; Parameters:    Size  Location     Type
  6427 ;;  lights          1    wreg     unsigned char 
  6428 ;;  command         1    2[BANK0 ] unsigned char 
  6429 ;; Auto vars:     Size  Location     Type
  6430 ;;  lights          1    3[BANK0 ] unsigned char 
  6431 ;; Return value:  Size  Location     Type
  6432 ;;		None               void
  6433 ;; Registers used:
  6434 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6435 ;; Tracked objects:
  6436 ;;		On entry : 0/0
  6437 ;;		On exit  : 0/0
  6438 ;;		Unchanged: 0/0
  6439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6440 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6441 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6443 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6444 ;;Total ram usage:        2 bytes
  6445 ;; Hardware stack levels used:    1
  6446 ;; Hardware stack levels required when called:    6
  6447 ;; This function calls:
  6448 ;;		_DimmerLightsPointSelect
  6449 ;; This function is called by:
  6450 ;;		_Sw_DimmerOffFunc
  6451 ;;		_Sw_DimmerAdjFunc
  6452 ;; This function uses a non-reentrant model
  6453 ;;
  6454                           
  6455                           
  6456                           ;psect for function _setDimmerLights_AdjGo
  6457  1687                     _setDimmerLights_AdjGo:	
  6458                           
  6459                           ;incstack = 0
  6460                           ; Regs used in _setDimmerLights_AdjGo: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6461                           ;setDimmerLights_AdjGo@lights stored from wreg
  6462  1687  0020               	movlb	0	; select bank0
  6463  1688  00A3               	movwf	setDimmerLights_AdjGo@lights
  6464                           
  6465                           ;Dimmer_B1.c: 701: DimmerLightsPointSelect(lights);
  6466  1689  0823               	movf	setDimmerLights_AdjGo@lights,w
  6467  168A  3188  203C         	fcall	_DimmerLightsPointSelect
  6468                           
  6469                           ;Dimmer_B1.c: 702: DimmerLights->AdjGo = command;
  6470  168C  0020               	movlb	0	; select bank0
  6471  168D  0858               	movf	_DimmerLights,w
  6472  168E  3E08               	addlw	8
  6473  168F  0086               	movwf	6
  6474  1690  0187               	clrf	7
  6475  1691  0822               	movf	setDimmerLights_AdjGo@command,w
  6476  1692  1181               	bcf	1,3
  6477  1693  1D03               	skipz
  6478  1694  1581               	bsf	1,3
  6479  1695  0008               	return
  6480  1696                     __end_of_setDimmerLights_AdjGo:	
  6481                           
  6482                           	psect	text28
  6483  0872                     __ptext28:	
  6484 ;; *************** function _SwPointSelect *****************
  6485 ;; Defined at:
  6486 ;;		line 17 in file "../src/Switch_B1.c"
  6487 ;; Parameters:    Size  Location     Type
  6488 ;;  sw              1    wreg     unsigned char 
  6489 ;; Auto vars:     Size  Location     Type
  6490 ;;  sw              1    1[BANK0 ] unsigned char 
  6491 ;; Return value:  Size  Location     Type
  6492 ;;		None               void
  6493 ;; Registers used:
  6494 ;;		wreg
  6495 ;; Tracked objects:
  6496 ;;		On entry : 0/0
  6497 ;;		On exit  : 0/0
  6498 ;;		Unchanged: 0/0
  6499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6501 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6502 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6503 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6504 ;;Total ram usage:        2 bytes
  6505 ;; Hardware stack levels used:    1
  6506 ;; Hardware stack levels required when called:    5
  6507 ;; This function calls:
  6508 ;;		Nothing
  6509 ;; This function is called by:
  6510 ;;		_setSw_Enable
  6511 ;;		_setSw_Status
  6512 ;;		_setSw_Main
  6513 ;;		_Sw_Detect
  6514 ;; This function uses a non-reentrant model
  6515 ;;
  6516                           
  6517                           
  6518                           ;psect for function _SwPointSelect
  6519  0872                     _SwPointSelect:	
  6520                           
  6521                           ;incstack = 0
  6522                           ; Regs used in _SwPointSelect: [wreg]
  6523                           ;SwPointSelect@sw stored from wreg
  6524  0872  0020               	movlb	0	; select bank0
  6525  0873  00A1               	movwf	SwPointSelect@sw
  6526                           
  6527                           ;Switch_B1.c: 20: if (sw == 1) {
  6528  0874  0821               	movf	SwPointSelect@sw,w
  6529  0875  3A01               	xorlw	1
  6530  0876  1D03               	skipz
  6531  0877  287D               	goto	l3849
  6532                           
  6533                           ;Switch_B1.c: 21: Sw = &Sw1;
  6534  0878  3042               	movlw	_Sw1& (0+255)
  6535  0879  00A0               	movwf	??_SwPointSelect
  6536  087A  0820               	movf	??_SwPointSelect,w
  6537  087B  00DA               	movwf	_Sw
  6538                           
  6539                           ;Switch_B1.c: 22: }
  6540  087C  0008               	return
  6541  087D                     l3849:	
  6542                           
  6543                           ;Switch_B1.c: 25: else if (sw == 2) {
  6544  087D  0821               	movf	SwPointSelect@sw,w
  6545  087E  3A02               	xorlw	2
  6546  087F  1D03               	skipz
  6547  0880  2886               	goto	l3853
  6548                           
  6549                           ;Switch_B1.c: 26: Sw = &Sw2;
  6550  0881  304B               	movlw	_Sw2& (0+255)
  6551  0882  00A0               	movwf	??_SwPointSelect
  6552  0883  0820               	movf	??_SwPointSelect,w
  6553  0884  00DA               	movwf	_Sw
  6554                           
  6555                           ;Switch_B1.c: 27: }
  6556  0885  0008               	return
  6557  0886                     l3853:	
  6558                           
  6559                           ;Switch_B1.c: 30: else if (sw == 3) {
  6560  0886  0821               	movf	SwPointSelect@sw,w
  6561  0887  3A03               	xorlw	3
  6562  0888  1D03               	skipz
  6563  0889  0008               	return
  6564                           
  6565                           ;Switch_B1.c: 31: Sw = &Sw3;
  6566  088A  3054               	movlw	_Sw3& (0+255)
  6567  088B  00A0               	movwf	??_SwPointSelect
  6568  088C  0820               	movf	??_SwPointSelect,w
  6569  088D  00DA               	movwf	_Sw
  6570  088E  0008               	return
  6571  088F                     __end_of_SwPointSelect:	
  6572                           
  6573                           	psect	text29
  6574  1713                     __ptext29:	
  6575 ;; *************** function _Switch_Initialization *****************
  6576 ;; Defined at:
  6577 ;;		line 37 in file "../src/Switch_B1.c"
  6578 ;; Parameters:    Size  Location     Type
  6579 ;;		None
  6580 ;; Auto vars:     Size  Location     Type
  6581 ;;		None
  6582 ;; Return value:  Size  Location     Type
  6583 ;;		None               void
  6584 ;; Registers used:
  6585 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6586 ;; Tracked objects:
  6587 ;;		On entry : 0/0
  6588 ;;		On exit  : 0/0
  6589 ;;		Unchanged: 0/0
  6590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6595 ;;Total ram usage:        0 bytes
  6596 ;; Hardware stack levels used:    1
  6597 ;; Hardware stack levels required when called:    8
  6598 ;; This function calls:
  6599 ;;		_TouchPower
  6600 ;;		_setSw_Initialization
  6601 ;; This function is called by:
  6602 ;;		_main
  6603 ;; This function uses a non-reentrant model
  6604 ;;
  6605                           
  6606                           
  6607                           ;psect for function _Switch_Initialization
  6608  1713                     _Switch_Initialization:	
  6609                           
  6610                           ;Switch_B1.c: 38: TouchPower();
  6611                           
  6612                           ;incstack = 0
  6613                           ; Regs used in _Switch_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6614  1713  3195  25E3  3197   	fcall	_TouchPower
  6615                           
  6616                           ;Switch_B1.c: 40: WPUB1 = 0;
  6617  1716  0024               	movlb	4	; select bank4
  6618  1717  108D               	bcf	13,1	;volatile
  6619                           
  6620                           ;Switch_B1.c: 49: setSw_Initialization(1);
  6621  1718  3001               	movlw	1
  6622  1719  3188  2000  3197   	fcall	_setSw_Initialization
  6623                           
  6624                           ;Switch_B1.c: 52: setSw_Initialization(2);
  6625  171C  3002               	movlw	2
  6626  171D  3188  2000  3197   	fcall	_setSw_Initialization
  6627                           
  6628                           ;Switch_B1.c: 55: setSw_Initialization(3);
  6629  1720  3003               	movlw	3
  6630  1721  3188  2000         	fcall	_setSw_Initialization
  6631  1723  0008               	return
  6632  1724                     __end_of_Switch_Initialization:	
  6633                           
  6634                           	psect	text30
  6635  0800                     __ptext30:	
  6636 ;; *************** function _setSw_Initialization *****************
  6637 ;; Defined at:
  6638 ;;		line 77 in file "../src/Switch_B1.c"
  6639 ;; Parameters:    Size  Location     Type
  6640 ;;  sw              1    wreg     unsigned char 
  6641 ;; Auto vars:     Size  Location     Type
  6642 ;;  sw              1    4[BANK0 ] unsigned char 
  6643 ;; Return value:  Size  Location     Type
  6644 ;;		None               void
  6645 ;; Registers used:
  6646 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6647 ;; Tracked objects:
  6648 ;;		On entry : 0/0
  6649 ;;		On exit  : 0/0
  6650 ;;		Unchanged: 0/0
  6651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6653 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6655 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6656 ;;Total ram usage:        1 bytes
  6657 ;; Hardware stack levels used:    1
  6658 ;; Hardware stack levels required when called:    7
  6659 ;; This function calls:
  6660 ;;		_setLED
  6661 ;; This function is called by:
  6662 ;;		_Switch_Initialization
  6663 ;; This function uses a non-reentrant model
  6664 ;;
  6665                           
  6666                           
  6667                           ;psect for function _setSw_Initialization
  6668  0800                     _setSw_Initialization:	
  6669                           
  6670                           ;incstack = 0
  6671                           ; Regs used in _setSw_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6672                           ;setSw_Initialization@sw stored from wreg
  6673  0800  0020               	movlb	0	; select bank0
  6674  0801  00A4               	movwf	setSw_Initialization@sw
  6675                           
  6676                           ;Switch_B1.c: 78: setLED(sw, 1);
  6677  0802  01A2               	clrf	setLED@command
  6678  0803  0AA2               	incf	setLED@command,f
  6679  0804  0824               	movf	setSw_Initialization@sw,w
  6680  0805  318E  2645         	fcall	_setLED
  6681  0807  0008               	return
  6682  0808                     __end_of_setSw_Initialization:	
  6683                           
  6684                           	psect	text31
  6685  15E3                     __ptext31:	
  6686 ;; *************** function _TouchPower *****************
  6687 ;; Defined at:
  6688 ;;		line 10 in file "../src/Switch_B1.c"
  6689 ;; Parameters:    Size  Location     Type
  6690 ;;		None
  6691 ;; Auto vars:     Size  Location     Type
  6692 ;;		None
  6693 ;; Return value:  Size  Location     Type
  6694 ;;		None               void
  6695 ;; Registers used:
  6696 ;;		None
  6697 ;; Tracked objects:
  6698 ;;		On entry : 0/0
  6699 ;;		On exit  : 0/0
  6700 ;;		Unchanged: 0/0
  6701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6706 ;;Total ram usage:        0 bytes
  6707 ;; Hardware stack levels used:    1
  6708 ;; Hardware stack levels required when called:    5
  6709 ;; This function calls:
  6710 ;;		Nothing
  6711 ;; This function is called by:
  6712 ;;		_Switch_Initialization
  6713 ;; This function uses a non-reentrant model
  6714 ;;
  6715                           
  6716                           
  6717                           ;psect for function _TouchPower
  6718  15E3                     _TouchPower:	
  6719  15E3                     l1806:	
  6720                           ;Switch_B1.c: 11: while (RC5 == 0)
  6721                           
  6722                           ;incstack = 0
  6723                           ; Regs used in _TouchPower: []
  6724                           
  6725  15E3  0020               	movlb	0	; select bank0
  6726  15E4  1A8E               	btfsc	14,5	;volatile
  6727  15E5  0008               	return
  6728                           
  6729                           ;Switch_B1.c: 12: RC5 = 1;
  6730  15E6  168E               	bsf	14,5	;volatile
  6731  15E7  2DE3               	goto	l1806
  6732  15E8                     __end_of_TouchPower:	
  6733                           
  6734                           	psect	text32
  6735  0822                     __ptext32:	
  6736 ;; *************** function _Mcu_Initialization *****************
  6737 ;; Defined at:
  6738 ;;		line 30 in file "../src/MCU_B1.c"
  6739 ;; Parameters:    Size  Location     Type
  6740 ;;		None
  6741 ;; Auto vars:     Size  Location     Type
  6742 ;;		None
  6743 ;; Return value:  Size  Location     Type
  6744 ;;		None               void
  6745 ;; Registers used:
  6746 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6747 ;; Tracked objects:
  6748 ;;		On entry : 0/0
  6749 ;;		On exit  : 0/0
  6750 ;;		Unchanged: 0/0
  6751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6754 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6755 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6756 ;;Total ram usage:        1 bytes
  6757 ;; Hardware stack levels used:    1
  6758 ;; Hardware stack levels required when called:    6
  6759 ;; This function calls:
  6760 ;;		_ADC_Set
  6761 ;;		_Fosc_Set
  6762 ;;		_INT_Set
  6763 ;;		_IOC_Set
  6764 ;;		_IO_Set
  6765 ;;		_TMR0_Set
  6766 ;;		_WDT_Set
  6767 ;; This function is called by:
  6768 ;;		_main
  6769 ;; This function uses a non-reentrant model
  6770 ;;
  6771                           
  6772                           
  6773                           ;psect for function _Mcu_Initialization
  6774  0822                     _Mcu_Initialization:	
  6775                           
  6776                           ;MCU_B1.c: 32: Fosc_Set();
  6777                           
  6778                           ;incstack = 0
  6779                           ; Regs used in _Mcu_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6780  0822  3195  25DF  3188   	fcall	_Fosc_Set
  6781                           
  6782                           ;MCU_B1.c: 34: IO_Set();
  6783  0825  3197  279A  3188   	fcall	_IO_Set
  6784                           
  6785                           ;MCU_B1.c: 36: TMR0_Set();
  6786  0828  3196  265C  3188   	fcall	_TMR0_Set
  6787                           
  6788                           ;MCU_B1.c: 38: ;;
  6789                           ;MCU_B1.c: 40: ADC_Set();
  6790  082B  3196  2607  3188   	fcall	_ADC_Set
  6791                           
  6792                           ;MCU_B1.c: 44: INT_Set();
  6793  082E  3195  25EE  3188   	fcall	_INT_Set
  6794                           
  6795                           ;MCU_B1.c: 46: IOC_Set();
  6796  0831  3196  264F  3188   	fcall	_IOC_Set
  6797                           
  6798                           ;MCU_B1.c: 48: ;;
  6799                           ;MCU_B1.c: 50: ;;
  6800                           ;MCU_B1.c: 52: Memory=&VarMemory;
  6801  0834  30A0               	movlw	_VarMemory& (0+255)
  6802  0835  0020               	movlb	0	; select bank0
  6803  0836  00A1               	movwf	??_Mcu_Initialization
  6804  0837  0821               	movf	??_Mcu_Initialization,w
  6805  0838  00EC               	movwf	_Memory
  6806                           
  6807                           ;MCU_B1.c: 54: WDT_Set();
  6808  0839  3197  2770         	fcall	_WDT_Set
  6809  083B  0008               	return
  6810  083C                     __end_of_Mcu_Initialization:	
  6811                           
  6812                           	psect	text33
  6813  1770                     __ptext33:	
  6814 ;; *************** function _WDT_Set *****************
  6815 ;; Defined at:
  6816 ;;		line 891 in file "../src/MCU_B1.c"
  6817 ;; Parameters:    Size  Location     Type
  6818 ;;		None
  6819 ;; Auto vars:     Size  Location     Type
  6820 ;;		None
  6821 ;; Return value:  Size  Location     Type
  6822 ;;		None               void
  6823 ;; Registers used:
  6824 ;;		wreg, fsr1l, fsr1h
  6825 ;; Tracked objects:
  6826 ;;		On entry : 0/0
  6827 ;;		On exit  : 0/0
  6828 ;;		Unchanged: 0/0
  6829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6832 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6833 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6834 ;;Total ram usage:        1 bytes
  6835 ;; Hardware stack levels used:    1
  6836 ;; Hardware stack levels required when called:    5
  6837 ;; This function calls:
  6838 ;;		Nothing
  6839 ;; This function is called by:
  6840 ;;		_Mcu_Initialization
  6841 ;; This function uses a non-reentrant model
  6842 ;;
  6843                           
  6844                           
  6845                           ;psect for function _WDT_Set
  6846  1770                     _WDT_Set:	
  6847                           
  6848                           ;MCU_B1.c: 892: WDTCON = 0b00010111;;
  6849                           
  6850                           ;incstack = 0
  6851                           ; Regs used in _WDT_Set: [wregfsr1]
  6852  1770  3017               	movlw	23
  6853  1771  0021               	movlb	1	; select bank1
  6854  1772  0097               	movwf	23	;volatile
  6855                           
  6856                           ;MCU_B1.c: 893: WDT = &_WDT;
  6857  1773  3067               	movlw	__WDT& (0+255)
  6858  1774  0020               	movlb	0	; select bank0
  6859  1775  00A0               	movwf	??_WDT_Set
  6860  1776  0820               	movf	??_WDT_Set,w
  6861  1777  00FD               	movwf	_WDT
  6862                           
  6863                           ;MCU_B1.c: 894: WDT->Enable = 1;
  6864  1778  087D               	movf	_WDT,w
  6865  1779  0086               	movwf	6
  6866  177A  0187               	clrf	7
  6867  177B  1401               	bsf	1,0
  6868                           
  6869                           ;MCU_B1.c: 895: WDT->Count = 10;
  6870  177C  300A               	movlw	10
  6871  177D  00A0               	movwf	??_WDT_Set
  6872  177E  0A7D               	incf	_WDT,w
  6873  177F  0086               	movwf	6
  6874  1780  0187               	clrf	7
  6875  1781  0820               	movf	??_WDT_Set,w
  6876  1782  0081               	movwf	1
  6877  1783  0008               	return
  6878  1784                     __end_of_WDT_Set:	
  6879                           
  6880                           	psect	text34
  6881  165C                     __ptext34:	
  6882 ;; *************** function _TMR0_Set *****************
  6883 ;; Defined at:
  6884 ;;		line 128 in file "../src/MCU_B1.c"
  6885 ;; Parameters:    Size  Location     Type
  6886 ;;		None
  6887 ;; Auto vars:     Size  Location     Type
  6888 ;;		None
  6889 ;; Return value:  Size  Location     Type
  6890 ;;		None               void
  6891 ;; Registers used:
  6892 ;;		wreg, status,2
  6893 ;; Tracked objects:
  6894 ;;		On entry : 0/0
  6895 ;;		On exit  : 0/0
  6896 ;;		Unchanged: 0/0
  6897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6900 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6901 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6902 ;;Total ram usage:        1 bytes
  6903 ;; Hardware stack levels used:    1
  6904 ;; Hardware stack levels required when called:    5
  6905 ;; This function calls:
  6906 ;;		Nothing
  6907 ;; This function is called by:
  6908 ;;		_Mcu_Initialization
  6909 ;; This function uses a non-reentrant model
  6910 ;;
  6911                           
  6912                           
  6913                           ;psect for function _TMR0_Set
  6914  165C                     _TMR0_Set:	
  6915                           
  6916                           ;MCU_B1.c: 129: Timer0 = &VarTimer0;
  6917                           
  6918                           ;incstack = 0
  6919                           ; Regs used in _TMR0_Set: [wreg+status,2]
  6920  165C  30D9               	movlw	_VarTimer0& (0+255)
  6921  165D  0020               	movlb	0	; select bank0
  6922  165E  00A0               	movwf	??_TMR0_Set
  6923  165F  0820               	movf	??_TMR0_Set,w
  6924  1660  00E9               	movwf	_Timer0
  6925                           
  6926                           ;MCU_B1.c: 130: OPTION_REG = 0x00;
  6927  1661  0021               	movlb	1	; select bank1
  6928  1662  0195               	clrf	21	;volatile
  6929                           
  6930                           ;MCU_B1.c: 131: TMR0 = (256-190);
  6931  1663  3042               	movlw	66
  6932  1664  0020               	movlb	0	; select bank0
  6933  1665  0095               	movwf	21	;volatile
  6934                           
  6935                           ;MCU_B1.c: 132: TMR0IE = 1;
  6936  1666  168B               	bsf	11,5	;volatile
  6937                           
  6938                           ;MCU_B1.c: 133: GIE = 1;
  6939  1667  178B               	bsf	11,7	;volatile
  6940  1668  0008               	return
  6941  1669                     __end_of_TMR0_Set:	
  6942                           
  6943                           	psect	text35
  6944  179A                     __ptext35:	
  6945 ;; *************** function _IO_Set *****************
  6946 ;; Defined at:
  6947 ;;		line 62 in file "../src/MCU_B1.c"
  6948 ;; Parameters:    Size  Location     Type
  6949 ;;		None
  6950 ;; Auto vars:     Size  Location     Type
  6951 ;;		None
  6952 ;; Return value:  Size  Location     Type
  6953 ;;		None               void
  6954 ;; Registers used:
  6955 ;;		wreg, status,2
  6956 ;; Tracked objects:
  6957 ;;		On entry : 0/0
  6958 ;;		On exit  : 0/0
  6959 ;;		Unchanged: 0/0
  6960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6965 ;;Total ram usage:        0 bytes
  6966 ;; Hardware stack levels used:    1
  6967 ;; Hardware stack levels required when called:    5
  6968 ;; This function calls:
  6969 ;;		Nothing
  6970 ;; This function is called by:
  6971 ;;		_Mcu_Initialization
  6972 ;; This function uses a non-reentrant model
  6973 ;;
  6974                           
  6975                           
  6976                           ;psect for function _IO_Set
  6977  179A                     _IO_Set:	
  6978                           
  6979                           ;MCU_B1.c: 90: TRISA = 0b01110111;;
  6980                           
  6981                           ;incstack = 0
  6982                           ; Regs used in _IO_Set: [wreg+status,2]
  6983  179A  3077               	movlw	119
  6984  179B  0021               	movlb	1	; select bank1
  6985  179C  008C               	movwf	12	;volatile
  6986                           
  6987                           ;MCU_B1.c: 91: TRISB = 0b00000101;;
  6988  179D  3005               	movlw	5
  6989  179E  008D               	movwf	13	;volatile
  6990                           
  6991                           ;MCU_B1.c: 92: TRISC = 0b00001100;;
  6992  179F  300C               	movlw	12
  6993  17A0  008E               	movwf	14	;volatile
  6994                           
  6995                           ;MCU_B1.c: 93: LATA = 0b00000000;;
  6996  17A1  0022               	movlb	2	; select bank2
  6997  17A2  018C               	clrf	12	;volatile
  6998                           
  6999                           ;MCU_B1.c: 94: LATB = 0b00000000;;
  7000  17A3  018D               	clrf	13	;volatile
  7001                           
  7002                           ;MCU_B1.c: 95: LATC = 0b00000000;;
  7003  17A4  018E               	clrf	14	;volatile
  7004                           
  7005                           ;MCU_B1.c: 96: ANSELA = 0b00000010;;
  7006  17A5  3002               	movlw	2
  7007  17A6  0023               	movlb	3	; select bank3
  7008  17A7  008C               	movwf	12	;volatile
  7009                           
  7010                           ;MCU_B1.c: 97: ANSELB = 0b00000000;;
  7011  17A8  018D               	clrf	13	;volatile
  7012                           
  7013                           ;MCU_B1.c: 98: ANSELC = 0b00000000;;
  7014  17A9  018E               	clrf	14	;volatile
  7015                           
  7016                           ;MCU_B1.c: 99: PORTA = 0b01110111;;
  7017  17AA  3077               	movlw	119
  7018  17AB  0020               	movlb	0	; select bank0
  7019  17AC  008C               	movwf	12	;volatile
  7020                           
  7021                           ;MCU_B1.c: 100: PORTB = 0b00000101;;
  7022  17AD  3005               	movlw	5
  7023  17AE  008D               	movwf	13	;volatile
  7024                           
  7025                           ;MCU_B1.c: 101: PORTC = 0b00001100;;
  7026  17AF  300C               	movlw	12
  7027  17B0  008E               	movwf	14	;volatile
  7028  17B1  0008               	return
  7029  17B2                     __end_of_IO_Set:	
  7030                           
  7031                           	psect	text36
  7032  164F                     __ptext36:	
  7033 ;; *************** function _IOC_Set *****************
  7034 ;; Defined at:
  7035 ;;		line 269 in file "../src/MCU_B1.c"
  7036 ;; Parameters:    Size  Location     Type
  7037 ;;		None
  7038 ;; Auto vars:     Size  Location     Type
  7039 ;;		None
  7040 ;; Return value:  Size  Location     Type
  7041 ;;		None               void
  7042 ;; Registers used:
  7043 ;;		wreg, status,2
  7044 ;; Tracked objects:
  7045 ;;		On entry : 0/0
  7046 ;;		On exit  : 0/0
  7047 ;;		Unchanged: 0/0
  7048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7053 ;;Total ram usage:        0 bytes
  7054 ;; Hardware stack levels used:    1
  7055 ;; Hardware stack levels required when called:    5
  7056 ;; This function calls:
  7057 ;;		Nothing
  7058 ;; This function is called by:
  7059 ;;		_Mcu_Initialization
  7060 ;; This function uses a non-reentrant model
  7061 ;;
  7062                           
  7063                           
  7064                           ;psect for function _IOC_Set
  7065  164F                     _IOC_Set:	
  7066                           
  7067                           ;MCU_B1.c: 270: WPUB2 = 0;
  7068                           
  7069                           ;incstack = 0
  7070                           ; Regs used in _IOC_Set: [wreg+status,2]
  7071  164F  0024               	movlb	4	; select bank4
  7072  1650  110D               	bcf	13,2	;volatile
  7073                           
  7074                           ;MCU_B1.c: 272: IOCBP = 0b00000100;
  7075  1651  3004               	movlw	4
  7076  1652  0027               	movlb	7	; select bank7
  7077  1653  0094               	movwf	20	;volatile
  7078                           
  7079                           ;MCU_B1.c: 273: IOCBN = 0b00000100;
  7080  1654  3004               	movlw	4
  7081  1655  0095               	movwf	21	;volatile
  7082                           
  7083                           ;MCU_B1.c: 288: IOCBF = 0b00000000;
  7084  1656  0196               	clrf	22	;volatile
  7085                           
  7086                           ;MCU_B1.c: 290: IOCIE = 1;
  7087  1657  158B               	bsf	11,3	;volatile
  7088                           
  7089                           ;MCU_B1.c: 291: IOCIF = 0;
  7090  1658  100B               	bcf	11,0	;volatile
  7091                           
  7092                           ;MCU_B1.c: 292: PEIE = 1;
  7093  1659  170B               	bsf	11,6	;volatile
  7094                           
  7095                           ;MCU_B1.c: 293: GIE = 1;
  7096  165A  178B               	bsf	11,7	;volatile
  7097  165B  0008               	return
  7098  165C                     __end_of_IOC_Set:	
  7099                           
  7100                           	psect	text37
  7101  15EE                     __ptext37:	
  7102 ;; *************** function _INT_Set *****************
  7103 ;; Defined at:
  7104 ;;		line 242 in file "../src/MCU_B1.c"
  7105 ;; Parameters:    Size  Location     Type
  7106 ;;		None
  7107 ;; Auto vars:     Size  Location     Type
  7108 ;;		None
  7109 ;; Return value:  Size  Location     Type
  7110 ;;		None               void
  7111 ;; Registers used:
  7112 ;;		None
  7113 ;; Tracked objects:
  7114 ;;		On entry : 0/0
  7115 ;;		On exit  : 0/0
  7116 ;;		Unchanged: 0/0
  7117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7122 ;;Total ram usage:        0 bytes
  7123 ;; Hardware stack levels used:    1
  7124 ;; Hardware stack levels required when called:    5
  7125 ;; This function calls:
  7126 ;;		Nothing
  7127 ;; This function is called by:
  7128 ;;		_Mcu_Initialization
  7129 ;; This function uses a non-reentrant model
  7130 ;;
  7131                           
  7132                           
  7133                           ;psect for function _INT_Set
  7134  15EE                     _INT_Set:	
  7135                           
  7136                           ;MCU_B1.c: 243: WPUB0 = 0;
  7137                           
  7138                           ;incstack = 0
  7139                           ; Regs used in _INT_Set: []
  7140  15EE  0024               	movlb	4	; select bank4
  7141  15EF  100D               	bcf	13,0	;volatile
  7142                           
  7143                           ;MCU_B1.c: 244: INTE = 0;
  7144  15F0  120B               	bcf	11,4	;volatile
  7145                           
  7146                           ;MCU_B1.c: 245: PEIE = 1;
  7147  15F1  170B               	bsf	11,6	;volatile
  7148                           
  7149                           ;MCU_B1.c: 246: GIE = 1;
  7150  15F2  178B               	bsf	11,7	;volatile
  7151  15F3  0008               	return
  7152  15F4                     __end_of_INT_Set:	
  7153                           
  7154                           	psect	text38
  7155  15DF                     __ptext38:	
  7156 ;; *************** function _Fosc_Set *****************
  7157 ;; Defined at:
  7158 ;;		line 58 in file "../src/MCU_B1.c"
  7159 ;; Parameters:    Size  Location     Type
  7160 ;;		None
  7161 ;; Auto vars:     Size  Location     Type
  7162 ;;		None
  7163 ;; Return value:  Size  Location     Type
  7164 ;;		None               void
  7165 ;; Registers used:
  7166 ;;		wreg
  7167 ;; Tracked objects:
  7168 ;;		On entry : 0/0
  7169 ;;		On exit  : 0/0
  7170 ;;		Unchanged: 0/0
  7171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7176 ;;Total ram usage:        0 bytes
  7177 ;; Hardware stack levels used:    1
  7178 ;; Hardware stack levels required when called:    5
  7179 ;; This function calls:
  7180 ;;		Nothing
  7181 ;; This function is called by:
  7182 ;;		_Mcu_Initialization
  7183 ;; This function uses a non-reentrant model
  7184 ;;
  7185                           
  7186                           
  7187                           ;psect for function _Fosc_Set
  7188  15DF                     _Fosc_Set:	
  7189                           
  7190                           ;MCU_B1.c: 59: OSCCON = 0x78;
  7191                           
  7192                           ;incstack = 0
  7193                           ; Regs used in _Fosc_Set: [wreg]
  7194  15DF  3078               	movlw	120
  7195  15E0  0021               	movlb	1	; select bank1
  7196  15E1  0099               	movwf	25	;volatile
  7197  15E2  0008               	return
  7198  15E3                     __end_of_Fosc_Set:	
  7199                           
  7200                           	psect	text39
  7201  1607                     __ptext39:	
  7202 ;; *************** function _ADC_Set *****************
  7203 ;; Defined at:
  7204 ;;		line 315 in file "../src/MCU_B1.c"
  7205 ;; Parameters:    Size  Location     Type
  7206 ;;		None
  7207 ;; Auto vars:     Size  Location     Type
  7208 ;;		None
  7209 ;; Return value:  Size  Location     Type
  7210 ;;		None               void
  7211 ;; Registers used:
  7212 ;;		wreg
  7213 ;; Tracked objects:
  7214 ;;		On entry : 0/0
  7215 ;;		On exit  : 0/0
  7216 ;;		Unchanged: 0/0
  7217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7222 ;;Total ram usage:        0 bytes
  7223 ;; Hardware stack levels used:    1
  7224 ;; Hardware stack levels required when called:    5
  7225 ;; This function calls:
  7226 ;;		Nothing
  7227 ;; This function is called by:
  7228 ;;		_Mcu_Initialization
  7229 ;; This function uses a non-reentrant model
  7230 ;;
  7231                           
  7232                           
  7233                           ;psect for function _ADC_Set
  7234  1607                     _ADC_Set:	
  7235                           
  7236                           ;MCU_B1.c: 316: ADCON1 = 0xf2;
  7237                           
  7238                           ;incstack = 0
  7239                           ; Regs used in _ADC_Set: [wreg]
  7240  1607  30F2               	movlw	242
  7241  1608  0021               	movlb	1	; select bank1
  7242  1609  009E               	movwf	30	;volatile
  7243                           
  7244                           ;MCU_B1.c: 317: FVRCON = 0xc0;
  7245  160A  30C0               	movlw	192
  7246  160B  0022               	movlb	2	; select bank2
  7247  160C  0097               	movwf	23	;volatile
  7248  160D  0008               	return
  7249  160E                     __end_of_ADC_Set:	
  7250                           
  7251                           	psect	text40
  7252  16F2                     __ptext40:	
  7253 ;; *************** function _LED_Main *****************
  7254 ;; Defined at:
  7255 ;;		line 51 in file "../src/LED_B1.c"
  7256 ;; Parameters:    Size  Location     Type
  7257 ;;		None
  7258 ;; Auto vars:     Size  Location     Type
  7259 ;;		None
  7260 ;; Return value:  Size  Location     Type
  7261 ;;		None               void
  7262 ;; Registers used:
  7263 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7264 ;; Tracked objects:
  7265 ;;		On entry : 0/0
  7266 ;;		On exit  : 0/0
  7267 ;;		Unchanged: 0/0
  7268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7273 ;;Total ram usage:        0 bytes
  7274 ;; Hardware stack levels used:    1
  7275 ;; Hardware stack levels required when called:    7
  7276 ;; This function calls:
  7277 ;;		_setLED_Main
  7278 ;; This function is called by:
  7279 ;;		_main
  7280 ;; This function uses a non-reentrant model
  7281 ;;
  7282                           
  7283                           
  7284                           ;psect for function _LED_Main
  7285  16F2                     _LED_Main:	
  7286                           
  7287                           ;LED_B1.c: 54: setLED_Main(1);
  7288                           
  7289                           ;incstack = 0
  7290                           ; Regs used in _LED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7291  16F2  3001               	movlw	1
  7292  16F3  318A  2298  3196   	fcall	_setLED_Main
  7293                           
  7294                           ;LED_B1.c: 57: setLED_Main(2);
  7295  16F6  3002               	movlw	2
  7296  16F7  318A  2298  3196   	fcall	_setLED_Main
  7297                           
  7298                           ;LED_B1.c: 60: setLED_Main(3);
  7299  16FA  3003               	movlw	3
  7300  16FB  318A  2298  3196   	fcall	_setLED_Main
  7301                           
  7302                           ;LED_B1.c: 63: setLED_Main(99);
  7303  16FE  3063               	movlw	99
  7304  16FF  318A  2298         	fcall	_setLED_Main
  7305  1701  0008               	return
  7306  1702                     __end_of_LED_Main:	
  7307                           
  7308                           	psect	text41
  7309  0A98                     __ptext41:	
  7310 ;; *************** function _setLED_Main *****************
  7311 ;; Defined at:
  7312 ;;		line 215 in file "../src/LED_B1.c"
  7313 ;; Parameters:    Size  Location     Type
  7314 ;;  led             1    wreg     unsigned char 
  7315 ;; Auto vars:     Size  Location     Type
  7316 ;;  led             1    4[BANK0 ] unsigned char 
  7317 ;; Return value:  Size  Location     Type
  7318 ;;		None               void
  7319 ;; Registers used:
  7320 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7321 ;; Tracked objects:
  7322 ;;		On entry : 0/0
  7323 ;;		On exit  : 0/0
  7324 ;;		Unchanged: 0/0
  7325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7327 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7328 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7329 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7330 ;;Total ram usage:        3 bytes
  7331 ;; Hardware stack levels used:    1
  7332 ;; Hardware stack levels required when called:    6
  7333 ;; This function calls:
  7334 ;;		_LedPointSelect
  7335 ;; This function is called by:
  7336 ;;		_LED_Main
  7337 ;; This function uses a non-reentrant model
  7338 ;;
  7339                           
  7340                           
  7341                           ;psect for function _setLED_Main
  7342  0A98                     _setLED_Main:	
  7343                           
  7344                           ;incstack = 0
  7345                           ; Regs used in _setLED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7346                           ;setLED_Main@led stored from wreg
  7347  0A98  0020               	movlb	0	; select bank0
  7348  0A99  00A4               	movwf	setLED_Main@led
  7349                           
  7350                           ;LED_B1.c: 217: LedPointSelect(led);
  7351  0A9A  0824               	movf	setLED_Main@led,w
  7352  0A9B  3188  20EF  318A   	fcall	_LedPointSelect
  7353                           
  7354                           ;LED_B1.c: 218: if(LED->GO)
  7355  0A9E  0020               	movlb	0	; select bank0
  7356  0A9F  0859               	movf	_LED,w
  7357  0AA0  0086               	movwf	6
  7358  0AA1  0187               	clrf	7
  7359  0AA2  1C81               	btfss	1,1
  7360  0AA3  0008               	return
  7361                           
  7362                           ;LED_B1.c: 219: {
  7363                           ;LED_B1.c: 220: LED->Time++;
  7364  0AA4  0A59               	incf	_LED,w
  7365  0AA5  0086               	movwf	6
  7366  0AA6  0187               	clrf	7
  7367  0AA7  3001               	movlw	1
  7368  0AA8  0781               	addwf	1,f
  7369  0AA9  3141               	addfsr 1,1
  7370  0AAA  1803               	skipnc
  7371  0AAB  0A81               	incf	1,f
  7372                           
  7373                           ;LED_B1.c: 221: if(LED->Time >= 500/10)
  7374  0AAC  0A59               	incf	_LED,w
  7375  0AAD  0086               	movwf	6
  7376  0AAE  0187               	clrf	7
  7377  0AAF  3F40               	moviw [0]fsr1
  7378  0AB0  00A2               	movwf	??_setLED_Main
  7379  0AB1  3F41               	moviw [1]fsr1
  7380  0AB2  00A3               	movwf	??_setLED_Main+1
  7381  0AB3  3000               	movlw	0
  7382  0AB4  0223               	subwf	??_setLED_Main+1,w
  7383  0AB5  3032               	movlw	50
  7384  0AB6  1903               	skipnz
  7385  0AB7  0222               	subwf	??_setLED_Main,w
  7386  0AB8  1C03               	skipc
  7387  0AB9  0008               	return
  7388                           
  7389                           ;LED_B1.c: 222: {
  7390                           ;LED_B1.c: 223: LED->Time=0;
  7391  0ABA  0A59               	incf	_LED,w
  7392  0ABB  0086               	movwf	6
  7393  0ABC  0187               	clrf	7
  7394  0ABD  3000               	movlw	0
  7395  0ABE  3FC0               	movwi [0]fsr1
  7396  0ABF  3FC1               	movwi [1]fsr1
  7397                           
  7398                           ;LED_B1.c: 225: if(led == 1)
  7399  0AC0  0824               	movf	setLED_Main@led,w
  7400  0AC1  3A01               	xorlw	1
  7401  0AC2  1D03               	skipz
  7402  0AC3  2AC7               	goto	l4701
  7403                           
  7404                           ;LED_B1.c: 226: {
  7405                           ;LED_B1.c: 227: RC7=~RC7;
  7406  0AC4  3080               	movlw	128
  7407  0AC5  068E               	xorwf	14,f
  7408                           
  7409                           ;LED_B1.c: 228: }
  7410  0AC6  0008               	return
  7411  0AC7                     l4701:	
  7412                           
  7413                           ;LED_B1.c: 231: else if(led == 2)
  7414  0AC7  0824               	movf	setLED_Main@led,w
  7415  0AC8  3A02               	xorlw	2
  7416  0AC9  1D03               	skipz
  7417  0ACA  2ACE               	goto	l4705
  7418                           
  7419                           ;LED_B1.c: 232: {
  7420                           ;LED_B1.c: 233: RA3=~RA3;
  7421  0ACB  3008               	movlw	8
  7422  0ACC  068C               	xorwf	12,f
  7423                           
  7424                           ;LED_B1.c: 234: }
  7425  0ACD  0008               	return
  7426  0ACE                     l4705:	
  7427                           
  7428                           ;LED_B1.c: 237: else if(led == 3)
  7429  0ACE  0824               	movf	setLED_Main@led,w
  7430  0ACF  3A03               	xorlw	3
  7431  0AD0  1D03               	skipz
  7432  0AD1  2AD5               	goto	l4709
  7433                           
  7434                           ;LED_B1.c: 238: {
  7435                           ;LED_B1.c: 239: RC6=~RC6;
  7436  0AD2  3040               	movlw	64
  7437  0AD3  068E               	xorwf	14,f
  7438                           
  7439                           ;LED_B1.c: 240: }
  7440  0AD4  0008               	return
  7441  0AD5                     l4709:	
  7442                           
  7443                           ;LED_B1.c: 243: else if(led == 99)
  7444  0AD5  0824               	movf	setLED_Main@led,w
  7445  0AD6  3A63               	xorlw	99
  7446  0AD7  1D03               	skipz
  7447  0AD8  0008               	return
  7448                           
  7449                           ;LED_B1.c: 244: {
  7450                           ;LED_B1.c: 245: RB5=~RB5;
  7451  0AD9  3020               	movlw	32
  7452  0ADA  068D               	xorwf	13,f
  7453  0ADB  0008               	return
  7454  0ADC                     __end_of_setLED_Main:	
  7455                           
  7456                           	psect	text42
  7457  16E2                     __ptext42:	
  7458 ;; *************** function _LED_Initialization *****************
  7459 ;; Defined at:
  7460 ;;		line 35 in file "../src/LED_B1.c"
  7461 ;; Parameters:    Size  Location     Type
  7462 ;;		None
  7463 ;; Auto vars:     Size  Location     Type
  7464 ;;		None
  7465 ;; Return value:  Size  Location     Type
  7466 ;;		None               void
  7467 ;; Registers used:
  7468 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7469 ;; Tracked objects:
  7470 ;;		On entry : 0/0
  7471 ;;		On exit  : 0/0
  7472 ;;		Unchanged: 0/0
  7473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7478 ;;Total ram usage:        0 bytes
  7479 ;; Hardware stack levels used:    1
  7480 ;; Hardware stack levels required when called:    8
  7481 ;; This function calls:
  7482 ;;		_setLED_Initialization
  7483 ;; This function is called by:
  7484 ;;		_main
  7485 ;; This function uses a non-reentrant model
  7486 ;;
  7487                           
  7488                           
  7489                           ;psect for function _LED_Initialization
  7490  16E2                     _LED_Initialization:	
  7491                           
  7492                           ;LED_B1.c: 38: setLED_Initialization(1);
  7493                           
  7494                           ;incstack = 0
  7495                           ; Regs used in _LED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7496  16E2  3001               	movlw	1
  7497  16E3  3196  26D2  3196   	fcall	_setLED_Initialization
  7498                           
  7499                           ;LED_B1.c: 41: setLED_Initialization(2);
  7500  16E6  3002               	movlw	2
  7501  16E7  3196  26D2  3196   	fcall	_setLED_Initialization
  7502                           
  7503                           ;LED_B1.c: 44: setLED_Initialization(3);
  7504  16EA  3003               	movlw	3
  7505  16EB  3196  26D2  3196   	fcall	_setLED_Initialization
  7506                           
  7507                           ;LED_B1.c: 47: setLED_Initialization(99);
  7508  16EE  3063               	movlw	99
  7509  16EF  3196  26D2         	fcall	_setLED_Initialization
  7510  16F1  0008               	return
  7511  16F2                     __end_of_LED_Initialization:	
  7512                           
  7513                           	psect	text43
  7514  16D2                     __ptext43:	
  7515 ;; *************** function _setLED_Initialization *****************
  7516 ;; Defined at:
  7517 ;;		line 67 in file "../src/LED_B1.c"
  7518 ;; Parameters:    Size  Location     Type
  7519 ;;  led             1    wreg     unsigned char 
  7520 ;; Auto vars:     Size  Location     Type
  7521 ;;  led             1    4[BANK0 ] unsigned char 
  7522 ;; Return value:  Size  Location     Type
  7523 ;;		None               void
  7524 ;; Registers used:
  7525 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7526 ;; Tracked objects:
  7527 ;;		On entry : 0/0
  7528 ;;		On exit  : 0/0
  7529 ;;		Unchanged: 0/0
  7530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7532 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7534 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7535 ;;Total ram usage:        1 bytes
  7536 ;; Hardware stack levels used:    1
  7537 ;; Hardware stack levels required when called:    7
  7538 ;; This function calls:
  7539 ;;		_LedPointSelect
  7540 ;;		_setLED
  7541 ;; This function is called by:
  7542 ;;		_LED_Initialization
  7543 ;; This function uses a non-reentrant model
  7544 ;;
  7545                           
  7546                           
  7547                           ;psect for function _setLED_Initialization
  7548  16D2                     _setLED_Initialization:	
  7549                           
  7550                           ;incstack = 0
  7551                           ; Regs used in _setLED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7552                           ;setLED_Initialization@led stored from wreg
  7553  16D2  0020               	movlb	0	; select bank0
  7554  16D3  00A4               	movwf	setLED_Initialization@led
  7555                           
  7556                           ;LED_B1.c: 69: LedPointSelect(led);
  7557  16D4  0824               	movf	setLED_Initialization@led,w
  7558  16D5  3188  20EF  3196   	fcall	_LedPointSelect
  7559                           
  7560                           ;LED_B1.c: 70: LED->Enable=1;
  7561  16D8  0020               	movlb	0	; select bank0
  7562  16D9  0859               	movf	_LED,w
  7563  16DA  0086               	movwf	6
  7564  16DB  0187               	clrf	7
  7565  16DC  1401               	bsf	1,0
  7566                           
  7567                           ;LED_B1.c: 71: setLED(led,0);
  7568  16DD  01A2               	clrf	setLED@command
  7569  16DE  0824               	movf	setLED_Initialization@led,w
  7570  16DF  318E  2645         	fcall	_setLED
  7571  16E1  0008               	return
  7572  16E2                     __end_of_setLED_Initialization:	
  7573                           
  7574                           	psect	text44
  7575  0ADC                     __ptext44:	
  7576 ;; *************** function _Flash_Memory_Main *****************
  7577 ;; Defined at:
  7578 ;;		line 786 in file "../src/MCU_B1.c"
  7579 ;; Parameters:    Size  Location     Type
  7580 ;;		None
  7581 ;; Auto vars:     Size  Location     Type
  7582 ;;		None
  7583 ;; Return value:  Size  Location     Type
  7584 ;;		None               void
  7585 ;; Registers used:
  7586 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7587 ;; Tracked objects:
  7588 ;;		On entry : 0/0
  7589 ;;		On exit  : 0/0
  7590 ;;		Unchanged: 0/0
  7591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7596 ;;Total ram usage:        0 bytes
  7597 ;; Hardware stack levels used:    1
  7598 ;; Hardware stack levels required when called:    8
  7599 ;; This function calls:
  7600 ;;		_Flash_Memory_Modify
  7601 ;; This function is called by:
  7602 ;;		_main
  7603 ;; This function uses a non-reentrant model
  7604 ;;
  7605                           
  7606                           
  7607                           ;psect for function _Flash_Memory_Main
  7608  0ADC                     _Flash_Memory_Main:	
  7609                           
  7610                           ;MCU_B1.c: 787: if (Memory->GO == 1) {
  7611                           
  7612                           ;incstack = 0
  7613                           ; Regs used in _Flash_Memory_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7614  0ADC  0020               	movlb	0	; select bank0
  7615  0ADD  086C               	movf	_Memory,w
  7616  0ADE  3E24               	addlw	36
  7617  0ADF  0086               	movwf	6
  7618  0AE0  3001               	movlw	1	; select bank2/3
  7619  0AE1  0087               	movwf	7
  7620  0AE2  1C81               	btfss	1,1
  7621  0AE3  0008               	return
  7622                           
  7623                           ;MCU_B1.c: 788: if (Memory->Modify == 1) {
  7624  0AE4  086C               	movf	_Memory,w
  7625  0AE5  3E24               	addlw	36
  7626  0AE6  0086               	movwf	6
  7627  0AE7  3001               	movlw	1	; select bank2/3
  7628  0AE8  0087               	movwf	7
  7629  0AE9  1C01               	btfss	1,0
  7630  0AEA  2B19               	goto	l5115
  7631                           
  7632                           ;MCU_B1.c: 789: Memory->Time++;
  7633  0AEB  086C               	movf	_Memory,w
  7634  0AEC  3E22               	addlw	34
  7635  0AED  0086               	movwf	6
  7636  0AEE  3001               	movlw	1	; select bank2/3
  7637  0AEF  0087               	movwf	7
  7638  0AF0  3001               	movlw	1
  7639  0AF1  0781               	addwf	1,f
  7640  0AF2  3141               	addfsr 1,1
  7641  0AF3  1803               	skipnc
  7642  0AF4  0A81               	incf	1,f
  7643                           
  7644                           ;MCU_B1.c: 790: if (Memory->Time == 25)
  7645  0AF5  086C               	movf	_Memory,w
  7646  0AF6  3E22               	addlw	34
  7647  0AF7  0086               	movwf	6
  7648  0AF8  3001               	movlw	1	; select bank2/3
  7649  0AF9  0087               	movwf	7
  7650  0AFA  3F40               	moviw [0]fsr1
  7651  0AFB  3A19               	xorlw	25
  7652  0AFC  1D03               	skipz
  7653  0AFD  2B00               	goto	u4795
  7654  0AFE  3F41               	moviw [1]fsr1
  7655  0AFF  3A00               	xorlw	0
  7656  0B00                     u4795:	
  7657  0B00  1D03               	skipz
  7658  0B01  0008               	return
  7659                           
  7660                           ;MCU_B1.c: 791: {
  7661                           ;MCU_B1.c: 792: Memory->Time = 0;
  7662  0B02  086C               	movf	_Memory,w
  7663  0B03  3E22               	addlw	34
  7664  0B04  0086               	movwf	6
  7665  0B05  3001               	movlw	1	; select bank2/3
  7666  0B06  0087               	movwf	7
  7667  0B07  3000               	movlw	0
  7668  0B08  3FC0               	movwi [0]fsr1
  7669  0B09  3FC1               	movwi [1]fsr1
  7670                           
  7671                           ;MCU_B1.c: 793: Memory->Modify = 0;
  7672  0B0A  086C               	movf	_Memory,w
  7673  0B0B  3E24               	addlw	36
  7674  0B0C  0086               	movwf	6
  7675  0B0D  3001               	movlw	1	; select bank2/3
  7676  0B0E  0087               	movwf	7
  7677  0B0F  1001               	bcf	1,0
  7678                           
  7679                           ;MCU_B1.c: 794: Memory->GO = 0;
  7680  0B10  086C               	movf	_Memory,w
  7681  0B11  3E24               	addlw	36
  7682  0B12  0086               	movwf	6
  7683  0B13  3001               	movlw	1	; select bank2/3
  7684  0B14  0087               	movwf	7
  7685  0B15  1081               	bcf	1,1
  7686                           
  7687                           ;MCU_B1.c: 795: Flash_Memory_Modify();
  7688  0B16  318D  2574         	fcall	_Flash_Memory_Modify
  7689                           
  7690                           ;MCU_B1.c: 796: }
  7691                           ;MCU_B1.c: 797: } else {
  7692  0B18  0008               	return
  7693  0B19                     l5115:	
  7694                           
  7695                           ;MCU_B1.c: 798: Memory->GO = 0;
  7696  0B19  0020               	movlb	0	; select bank0
  7697  0B1A  086C               	movf	_Memory,w
  7698  0B1B  3E24               	addlw	36
  7699  0B1C  0086               	movwf	6
  7700  0B1D  3001               	movlw	1	; select bank2/3
  7701  0B1E  0087               	movwf	7
  7702  0B1F  1081               	bcf	1,1
  7703  0B20  0008               	return
  7704  0B21                     __end_of_Flash_Memory_Main:	
  7705                           
  7706                           	psect	text45
  7707  0D74                     __ptext45:	
  7708 ;; *************** function _Flash_Memory_Modify *****************
  7709 ;; Defined at:
  7710 ;;		line 855 in file "../src/MCU_B1.c"
  7711 ;; Parameters:    Size  Location     Type
  7712 ;;		None
  7713 ;; Auto vars:     Size  Location     Type
  7714 ;;  i               1    6[BANK0 ] unsigned char 
  7715 ;; Return value:  Size  Location     Type
  7716 ;;		None               void
  7717 ;; Registers used:
  7718 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7719 ;; Tracked objects:
  7720 ;;		On entry : 0/0
  7721 ;;		On exit  : 0/0
  7722 ;;		Unchanged: 0/0
  7723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7725 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7726 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7727 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7728 ;;Total ram usage:        3 bytes
  7729 ;; Hardware stack levels used:    1
  7730 ;; Hardware stack levels required when called:    7
  7731 ;; This function calls:
  7732 ;;		_Flash_Memory_Erasing
  7733 ;;		_Flash_Memory_Read
  7734 ;;		_Flash_Memory_Write
  7735 ;; This function is called by:
  7736 ;;		_Flash_Memory_Main
  7737 ;; This function uses a non-reentrant model
  7738 ;;
  7739                           
  7740                           
  7741                           ;psect for function _Flash_Memory_Modify
  7742  0D74                     _Flash_Memory_Modify:	
  7743                           
  7744                           ;MCU_B1.c: 856: char i = 0;
  7745                           
  7746                           ;incstack = 0
  7747                           ; Regs used in _Flash_Memory_Modify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7748  0D74  0020               	movlb	0	; select bank0
  7749  0D75  01A6               	clrf	Flash_Memory_Modify@i
  7750                           
  7751                           ;MCU_B1.c: 857: for (i = 0; i < 32; i++) {
  7752  0D76  01A6               	clrf	Flash_Memory_Modify@i
  7753  0D77  3020               	movlw	32
  7754  0D78  0226               	subwf	Flash_Memory_Modify@i,w
  7755  0D79  1803               	btfsc	3,0
  7756  0D7A  2D92               	goto	l4789
  7757  0D7B                     l4783:	
  7758                           
  7759                           ;MCU_B1.c: 858: Memory->Data[i] = Flash_Memory_Read(i);
  7760  0D7B  0826               	movf	Flash_Memory_Modify@i,w
  7761  0D7C  3188  2008  318D   	fcall	_Flash_Memory_Read
  7762  0D7F  0020               	movlb	0	; select bank0
  7763  0D80  00A4               	movwf	??_Flash_Memory_Modify
  7764  0D81  0826               	movf	Flash_Memory_Modify@i,w
  7765  0D82  076C               	addwf	_Memory,w
  7766  0D83  00A5               	movwf	??_Flash_Memory_Modify+1
  7767  0D84  0825               	movf	??_Flash_Memory_Modify+1,w
  7768  0D85  0086               	movwf	6
  7769  0D86  3001               	movlw	1	; select bank2/3
  7770  0D87  0087               	movwf	7
  7771  0D88  0824               	movf	??_Flash_Memory_Modify,w
  7772  0D89  0081               	movwf	1
  7773  0D8A  3001               	movlw	1
  7774  0D8B  00A4               	movwf	??_Flash_Memory_Modify
  7775  0D8C  0824               	movf	??_Flash_Memory_Modify,w
  7776  0D8D  07A6               	addwf	Flash_Memory_Modify@i,f
  7777  0D8E  3020               	movlw	32
  7778  0D8F  0226               	subwf	Flash_Memory_Modify@i,w
  7779  0D90  1C03               	skipc
  7780  0D91  2D7B               	goto	l4783
  7781  0D92                     l4789:	
  7782                           
  7783                           ;MCU_B1.c: 859: }
  7784                           ;MCU_B1.c: 860: Memory->Data[0]=product->Data[12];
  7785  0D92  086B               	movf	_product,w
  7786  0D93  3E0C               	addlw	12
  7787  0D94  0086               	movwf	6
  7788  0D95  3001               	movlw	1	; select bank2/3
  7789  0D96  0087               	movwf	7
  7790  0D97  0801               	movf	1,w
  7791  0D98  00A4               	movwf	??_Flash_Memory_Modify
  7792  0D99  086C               	movf	_Memory,w
  7793  0D9A  0086               	movwf	6
  7794  0D9B  3001               	movlw	1	; select bank2/3
  7795  0D9C  0087               	movwf	7
  7796  0D9D  0824               	movf	??_Flash_Memory_Modify,w
  7797  0D9E  0081               	movwf	1
  7798                           
  7799                           ;MCU_B1.c: 861: Memory->Data[1]=product->Data[13];
  7800  0D9F  086B               	movf	_product,w
  7801  0DA0  3E0D               	addlw	13
  7802  0DA1  0086               	movwf	6
  7803  0DA2  3001               	movlw	1	; select bank2/3
  7804  0DA3  0087               	movwf	7
  7805  0DA4  0801               	movf	1,w
  7806  0DA5  00A4               	movwf	??_Flash_Memory_Modify
  7807  0DA6  0A6C               	incf	_Memory,w
  7808  0DA7  0086               	movwf	6
  7809  0DA8  3001               	movlw	1	; select bank2/3
  7810  0DA9  0087               	movwf	7
  7811  0DAA  0824               	movf	??_Flash_Memory_Modify,w
  7812  0DAB  0081               	movwf	1
  7813                           
  7814                           ;MCU_B1.c: 862: Memory->Data[2]=product->Data[14];
  7815  0DAC  086B               	movf	_product,w
  7816  0DAD  3E0E               	addlw	14
  7817  0DAE  0086               	movwf	6
  7818  0DAF  3001               	movlw	1	; select bank2/3
  7819  0DB0  0087               	movwf	7
  7820  0DB1  0801               	movf	1,w
  7821  0DB2  00A4               	movwf	??_Flash_Memory_Modify
  7822  0DB3  086C               	movf	_Memory,w
  7823  0DB4  3E02               	addlw	2
  7824  0DB5  0086               	movwf	6
  7825  0DB6  3001               	movlw	1	; select bank2/3
  7826  0DB7  0087               	movwf	7
  7827  0DB8  0824               	movf	??_Flash_Memory_Modify,w
  7828  0DB9  0081               	movwf	1
  7829                           
  7830                           ;MCU_B1.c: 868: if (Memory->LoopSave == 1) {
  7831  0DBA  086C               	movf	_Memory,w
  7832  0DBB  3E24               	addlw	36
  7833  0DBC  0086               	movwf	6
  7834  0DBD  3001               	movlw	1	; select bank2/3
  7835  0DBE  0087               	movwf	7
  7836  0DBF  1D01               	btfss	1,2
  7837  0DC0  2DD1               	goto	l4793
  7838                           
  7839                           ;MCU_B1.c: 869: Memory->LoopSave = 0;
  7840  0DC1  086C               	movf	_Memory,w
  7841  0DC2  3E24               	addlw	36
  7842  0DC3  0086               	movwf	6
  7843  0DC4  3001               	movlw	1	; select bank2/3
  7844  0DC5  0087               	movwf	7
  7845  0DC6  1101               	bcf	1,2
  7846                           
  7847                           ;MCU_B1.c: 870: myMain->FirstOpen = 0;
  7848  0DC7  086A               	movf	_myMain,w
  7849  0DC8  0086               	movwf	6
  7850  0DC9  3001               	movlw	1	; select bank2/3
  7851  0DCA  0087               	movwf	7
  7852  0DCB  1281               	bcf	1,5
  7853                           
  7854                           ;MCU_B1.c: 871: myMain->First = 0;
  7855  0DCC  086A               	movf	_myMain,w
  7856  0DCD  0086               	movwf	6
  7857  0DCE  3001               	movlw	1	; select bank2/3
  7858  0DCF  0087               	movwf	7
  7859  0DD0  1381               	bcf	1,7
  7860  0DD1                     l4793:	
  7861                           
  7862                           ;MCU_B1.c: 873: }
  7863                           ;MCU_B1.c: 874: GIE = 0;
  7864  0DD1  138B               	bcf	11,7	;volatile
  7865                           
  7866                           ;MCU_B1.c: 875: Flash_Memory_Erasing();
  7867  0DD2  3196  2637  318D   	fcall	_Flash_Memory_Erasing
  7868                           
  7869                           ;MCU_B1.c: 876: Flash_Memory_Write();
  7870  0DD5  3189  21BB         	fcall	_Flash_Memory_Write
  7871                           
  7872                           ;MCU_B1.c: 877: GIE = 1;
  7873  0DD7  178B               	bsf	11,7	;volatile
  7874  0DD8  0008               	return
  7875  0DD9                     __end_of_Flash_Memory_Modify:	
  7876                           
  7877                           	psect	text46
  7878  1637                     __ptext46:	
  7879 ;; *************** function _Flash_Memory_Erasing *****************
  7880 ;; Defined at:
  7881 ;;		line 844 in file "../src/MCU_B1.c"
  7882 ;; Parameters:    Size  Location     Type
  7883 ;;		None
  7884 ;; Auto vars:     Size  Location     Type
  7885 ;;		None
  7886 ;; Return value:  Size  Location     Type
  7887 ;;		None               void
  7888 ;; Registers used:
  7889 ;;		wreg, status,2, status,0, pclath, cstack
  7890 ;; Tracked objects:
  7891 ;;		On entry : 0/0
  7892 ;;		On exit  : 0/0
  7893 ;;		Unchanged: 0/0
  7894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7899 ;;Total ram usage:        0 bytes
  7900 ;; Hardware stack levels used:    1
  7901 ;; Hardware stack levels required when called:    6
  7902 ;; This function calls:
  7903 ;;		_Flash_Memory_Unlock
  7904 ;; This function is called by:
  7905 ;;		_Flash_Memory_Modify
  7906 ;; This function uses a non-reentrant model
  7907 ;;
  7908                           
  7909                           
  7910                           ;psect for function _Flash_Memory_Erasing
  7911  1637                     _Flash_Memory_Erasing:	
  7912                           
  7913                           ;MCU_B1.c: 845: CFGS = 0;
  7914                           
  7915                           ;incstack = 0
  7916                           ; Regs used in _Flash_Memory_Erasing: [wreg+status,2+status,0+pclath+cstack]
  7917  1637  0023               	movlb	3	; select bank3
  7918  1638  1315               	bcf	21,6	;volatile
  7919                           
  7920                           ;MCU_B1.c: 846: PMADRH = 0x30;
  7921  1639  3030               	movlw	48
  7922  163A  0092               	movwf	18	;volatile
  7923                           
  7924                           ;MCU_B1.c: 847: PMADRL = 0x00;
  7925  163B  0191               	clrf	17	;volatile
  7926                           
  7927                           ;MCU_B1.c: 848: FREE = 1;
  7928  163C  1615               	bsf	21,4	;volatile
  7929                           
  7930                           ;MCU_B1.c: 849: WREN = 1;
  7931  163D  1515               	bsf	21,2	;volatile
  7932                           
  7933                           ;MCU_B1.c: 850: Flash_Memory_Unlock();
  7934  163E  3196  260E         	fcall	_Flash_Memory_Unlock
  7935                           
  7936                           ;MCU_B1.c: 851: WREN = 0;
  7937  1640  0023               	movlb	3	; select bank3
  7938  1641  1115               	bcf	21,2	;volatile
  7939  1642  0008               	return
  7940  1643                     __end_of_Flash_Memory_Erasing:	
  7941                           
  7942                           	psect	text47
  7943  0439                     __ptext47:	
  7944 ;; *************** function _Flash_Memory_Initialization *****************
  7945 ;; Defined at:
  7946 ;;		line 745 in file "../src/MCU_B1.c"
  7947 ;; Parameters:    Size  Location     Type
  7948 ;;		None
  7949 ;; Auto vars:     Size  Location     Type
  7950 ;;  i               1   49[BANK0 ] unsigned char 
  7951 ;; Return value:  Size  Location     Type
  7952 ;;		None               void
  7953 ;; Registers used:
  7954 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7955 ;; Tracked objects:
  7956 ;;		On entry : 0/0
  7957 ;;		On exit  : 0/0
  7958 ;;		Unchanged: 0/0
  7959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7961 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7962 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7963 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7964 ;;Total ram usage:        2 bytes
  7965 ;; Hardware stack levels used:    1
  7966 ;; Hardware stack levels required when called:    8
  7967 ;; This function calls:
  7968 ;;		_Flash_Memory_Read
  7969 ;;		_Flash_Memory_Write
  7970 ;;		_setPercentValue
  7971 ;; This function is called by:
  7972 ;;		_main
  7973 ;; This function uses a non-reentrant model
  7974 ;;
  7975                           
  7976                           
  7977                           ;psect for function _Flash_Memory_Initialization
  7978  0439                     _Flash_Memory_Initialization:	
  7979                           
  7980                           ;MCU_B1.c: 746: char i = 0;
  7981                           
  7982                           ;incstack = 0
  7983                           ; Regs used in _Flash_Memory_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  7984  0439  0020               	movlb	0	; select bank0
  7985  043A  01D1               	clrf	Flash_Memory_Initialization@i
  7986                           
  7987                           ;MCU_B1.c: 747: if (Flash_Memory_Read(31) == 0xaa) {
  7988  043B  301F               	movlw	31
  7989  043C  3188  2008  3184   	fcall	_Flash_Memory_Read
  7990  043F  3AAA               	xorlw	170
  7991  0440  1D03               	skipz
  7992  0441  2CB2               	goto	l5071
  7993                           
  7994                           ;MCU_B1.c: 748: product->Data[12] = Flash_Memory_Read(0);
  7995  0442  3000               	movlw	0
  7996  0443  3188  2008  3184   	fcall	_Flash_Memory_Read
  7997  0446  0020               	movlb	0	; select bank0
  7998  0447  00D0               	movwf	??_Flash_Memory_Initialization
  7999  0448  086B               	movf	_product,w
  8000  0449  3E0C               	addlw	12
  8001  044A  0086               	movwf	6
  8002  044B  3001               	movlw	1	; select bank2/3
  8003  044C  0087               	movwf	7
  8004  044D  0850               	movf	??_Flash_Memory_Initialization,w
  8005  044E  0081               	movwf	1
  8006                           
  8007                           ;MCU_B1.c: 749: product->Data[13] = Flash_Memory_Read(1);
  8008  044F  3001               	movlw	1
  8009  0450  3188  2008  3184   	fcall	_Flash_Memory_Read
  8010  0453  0020               	movlb	0	; select bank0
  8011  0454  00D0               	movwf	??_Flash_Memory_Initialization
  8012  0455  086B               	movf	_product,w
  8013  0456  3E0D               	addlw	13
  8014  0457  0086               	movwf	6
  8015  0458  3001               	movlw	1	; select bank2/3
  8016  0459  0087               	movwf	7
  8017  045A  0850               	movf	??_Flash_Memory_Initialization,w
  8018  045B  0081               	movwf	1
  8019                           
  8020                           ;MCU_B1.c: 750: product->Data[14] = Flash_Memory_Read(2);
  8021  045C  3002               	movlw	2
  8022  045D  3188  2008  3184   	fcall	_Flash_Memory_Read
  8023  0460  0020               	movlb	0	; select bank0
  8024  0461  00D0               	movwf	??_Flash_Memory_Initialization
  8025  0462  086B               	movf	_product,w
  8026  0463  3E0E               	addlw	14
  8027  0464  0086               	movwf	6
  8028  0465  3001               	movlw	1	; select bank2/3
  8029  0466  0087               	movwf	7
  8030  0467  0850               	movf	??_Flash_Memory_Initialization,w
  8031  0468  0081               	movwf	1
  8032                           
  8033                           ;MCU_B1.c: 756: i = setPercentValue(((char)((100-95)*0.8)));
  8034  0469  3004               	movlw	4
  8035  046A  318B  2321  3184   	fcall	_setPercentValue
  8036  046D  0020               	movlb	0	; select bank0
  8037  046E  00D0               	movwf	??_Flash_Memory_Initialization
  8038  046F  0850               	movf	??_Flash_Memory_Initialization,w
  8039  0470  00D1               	movwf	Flash_Memory_Initialization@i
  8040                           
  8041                           ;MCU_B1.c: 757: product->Data[21] = i;
  8042  0471  0851               	movf	Flash_Memory_Initialization@i,w
  8043  0472  00D0               	movwf	??_Flash_Memory_Initialization
  8044  0473  086B               	movf	_product,w
  8045  0474  3E15               	addlw	21
  8046  0475  0086               	movwf	6
  8047  0476  3001               	movlw	1	; select bank2/3
  8048  0477  0087               	movwf	7
  8049  0478  0850               	movf	??_Flash_Memory_Initialization,w
  8050  0479  0081               	movwf	1
  8051                           
  8052                           ;MCU_B1.c: 758: product->Data[22] = i;
  8053  047A  0851               	movf	Flash_Memory_Initialization@i,w
  8054  047B  00D0               	movwf	??_Flash_Memory_Initialization
  8055  047C  086B               	movf	_product,w
  8056  047D  3E16               	addlw	22
  8057  047E  0086               	movwf	6
  8058  047F  3001               	movlw	1	; select bank2/3
  8059  0480  0087               	movwf	7
  8060  0481  0850               	movf	??_Flash_Memory_Initialization,w
  8061  0482  0081               	movwf	1
  8062                           
  8063                           ;MCU_B1.c: 759: product->Data[23] = i;
  8064  0483  0851               	movf	Flash_Memory_Initialization@i,w
  8065  0484  00D0               	movwf	??_Flash_Memory_Initialization
  8066  0485  086B               	movf	_product,w
  8067  0486  3E17               	addlw	23
  8068  0487  0086               	movwf	6
  8069  0488  3001               	movlw	1	; select bank2/3
  8070  0489  0087               	movwf	7
  8071  048A  0850               	movf	??_Flash_Memory_Initialization,w
  8072  048B  0081               	movwf	1
  8073                           
  8074                           ;MCU_B1.c: 761: if (product->Data[12] == 0xff && product->Data[13] == 0xff && product->D
      +                          ata[14] == 0xff) {
  8075  048C  086B               	movf	_product,w
  8076  048D  3E0C               	addlw	12
  8077  048E  0086               	movwf	6
  8078  048F  3001               	movlw	1	; select bank2/3
  8079  0490  0087               	movwf	7
  8080  0491  0801               	movf	1,w
  8081  0492  3AFF               	xorlw	255
  8082  0493  1D03               	skipz
  8083  0494  0008               	return
  8084  0495  086B               	movf	_product,w
  8085  0496  3E0D               	addlw	13
  8086  0497  0086               	movwf	6
  8087  0498  3001               	movlw	1	; select bank2/3
  8088  0499  0087               	movwf	7
  8089  049A  0801               	movf	1,w
  8090  049B  3AFF               	xorlw	255
  8091  049C  1D03               	skipz
  8092  049D  0008               	return
  8093  049E  086B               	movf	_product,w
  8094  049F  3E0E               	addlw	14
  8095  04A0  0086               	movwf	6
  8096  04A1  3001               	movlw	1	; select bank2/3
  8097  04A2  0087               	movwf	7
  8098  04A3  0801               	movf	1,w
  8099  04A4  3AFF               	xorlw	255
  8100  04A5  1D03               	skipz
  8101  04A6  0008               	return
  8102                           
  8103                           ;MCU_B1.c: 762: myMain->FirstOpen = 1;
  8104  04A7  086A               	movf	_myMain,w
  8105  04A8  0086               	movwf	6
  8106  04A9  3001               	movlw	1	; select bank2/3
  8107  04AA  0087               	movwf	7
  8108  04AB  1681               	bsf	1,5
  8109                           
  8110                           ;MCU_B1.c: 763: myMain->First = 1;
  8111  04AC  086A               	movf	_myMain,w
  8112  04AD  0086               	movwf	6
  8113  04AE  3001               	movlw	1	; select bank2/3
  8114  04AF  0087               	movwf	7
  8115  04B0  1781               	bsf	1,7
  8116                           
  8117                           ;MCU_B1.c: 764: }
  8118                           ;MCU_B1.c: 765: } else {
  8119  04B1  0008               	return
  8120  04B2                     l5071:	
  8121                           
  8122                           ;MCU_B1.c: 766: i = setPercentValue(((char)((100-95)*0.8)));
  8123  04B2  3004               	movlw	4
  8124  04B3  318B  2321  3184   	fcall	_setPercentValue
  8125  04B6  0020               	movlb	0	; select bank0
  8126  04B7  00D0               	movwf	??_Flash_Memory_Initialization
  8127  04B8  0850               	movf	??_Flash_Memory_Initialization,w
  8128  04B9  00D1               	movwf	Flash_Memory_Initialization@i
  8129                           
  8130                           ;MCU_B1.c: 767: Memory->Data[0]=0xff;
  8131  04BA  30FF               	movlw	255
  8132  04BB  00D0               	movwf	??_Flash_Memory_Initialization
  8133  04BC  086C               	movf	_Memory,w
  8134  04BD  0086               	movwf	6
  8135  04BE  3001               	movlw	1	; select bank2/3
  8136  04BF  0087               	movwf	7
  8137  04C0  0850               	movf	??_Flash_Memory_Initialization,w
  8138  04C1  0081               	movwf	1
  8139                           
  8140                           ;MCU_B1.c: 768: Memory->Data[1]=0xff;
  8141  04C2  30FF               	movlw	255
  8142  04C3  00D0               	movwf	??_Flash_Memory_Initialization
  8143  04C4  0A6C               	incf	_Memory,w
  8144  04C5  0086               	movwf	6
  8145  04C6  3001               	movlw	1	; select bank2/3
  8146  04C7  0087               	movwf	7
  8147  04C8  0850               	movf	??_Flash_Memory_Initialization,w
  8148  04C9  0081               	movwf	1
  8149                           
  8150                           ;MCU_B1.c: 769: Memory->Data[2]=0xff;
  8151  04CA  30FF               	movlw	255
  8152  04CB  00D0               	movwf	??_Flash_Memory_Initialization
  8153  04CC  086C               	movf	_Memory,w
  8154  04CD  3E02               	addlw	2
  8155  04CE  0086               	movwf	6
  8156  04CF  3001               	movlw	1	; select bank2/3
  8157  04D0  0087               	movwf	7
  8158  04D1  0850               	movf	??_Flash_Memory_Initialization,w
  8159  04D2  0081               	movwf	1
  8160                           
  8161                           ;MCU_B1.c: 770: Memory->Data[3]=0xff;
  8162  04D3  30FF               	movlw	255
  8163  04D4  00D0               	movwf	??_Flash_Memory_Initialization
  8164  04D5  086C               	movf	_Memory,w
  8165  04D6  3E03               	addlw	3
  8166  04D7  0086               	movwf	6
  8167  04D8  3001               	movlw	1	; select bank2/3
  8168  04D9  0087               	movwf	7
  8169  04DA  0850               	movf	??_Flash_Memory_Initialization,w
  8170  04DB  0081               	movwf	1
  8171                           
  8172                           ;MCU_B1.c: 771: Memory->Data[4]=0xff;
  8173  04DC  30FF               	movlw	255
  8174  04DD  00D0               	movwf	??_Flash_Memory_Initialization
  8175  04DE  086C               	movf	_Memory,w
  8176  04DF  3E04               	addlw	4
  8177  04E0  0086               	movwf	6
  8178  04E1  3001               	movlw	1	; select bank2/3
  8179  04E2  0087               	movwf	7
  8180  04E3  0850               	movf	??_Flash_Memory_Initialization,w
  8181  04E4  0081               	movwf	1
  8182                           
  8183                           ;MCU_B1.c: 772: Memory->Data[5]=0xff;
  8184  04E5  30FF               	movlw	255
  8185  04E6  00D0               	movwf	??_Flash_Memory_Initialization
  8186  04E7  086C               	movf	_Memory,w
  8187  04E8  3E05               	addlw	5
  8188  04E9  0086               	movwf	6
  8189  04EA  3001               	movlw	1	; select bank2/3
  8190  04EB  0087               	movwf	7
  8191  04EC  0850               	movf	??_Flash_Memory_Initialization,w
  8192  04ED  0081               	movwf	1
  8193                           
  8194                           ;MCU_B1.c: 773: Memory->Data[31]=0xaa;
  8195  04EE  30AA               	movlw	170
  8196  04EF  00D0               	movwf	??_Flash_Memory_Initialization
  8197  04F0  086C               	movf	_Memory,w
  8198  04F1  3E1F               	addlw	31
  8199  04F2  0086               	movwf	6
  8200  04F3  3001               	movlw	1	; select bank2/3
  8201  04F4  0087               	movwf	7
  8202  04F5  0850               	movf	??_Flash_Memory_Initialization,w
  8203  04F6  0081               	movwf	1
  8204                           
  8205                           ;MCU_B1.c: 774: product->Data[21] = i;
  8206  04F7  0851               	movf	Flash_Memory_Initialization@i,w
  8207  04F8  00D0               	movwf	??_Flash_Memory_Initialization
  8208  04F9  086B               	movf	_product,w
  8209  04FA  3E15               	addlw	21
  8210  04FB  0086               	movwf	6
  8211  04FC  3001               	movlw	1	; select bank2/3
  8212  04FD  0087               	movwf	7
  8213  04FE  0850               	movf	??_Flash_Memory_Initialization,w
  8214  04FF  0081               	movwf	1
  8215                           
  8216                           ;MCU_B1.c: 775: product->Data[22] = i;
  8217  0500  0851               	movf	Flash_Memory_Initialization@i,w
  8218  0501  00D0               	movwf	??_Flash_Memory_Initialization
  8219  0502  086B               	movf	_product,w
  8220  0503  3E16               	addlw	22
  8221  0504  0086               	movwf	6
  8222  0505  3001               	movlw	1	; select bank2/3
  8223  0506  0087               	movwf	7
  8224  0507  0850               	movf	??_Flash_Memory_Initialization,w
  8225  0508  0081               	movwf	1
  8226                           
  8227                           ;MCU_B1.c: 776: product->Data[23] = i;
  8228  0509  0851               	movf	Flash_Memory_Initialization@i,w
  8229  050A  00D0               	movwf	??_Flash_Memory_Initialization
  8230  050B  086B               	movf	_product,w
  8231  050C  3E17               	addlw	23
  8232  050D  0086               	movwf	6
  8233  050E  3001               	movlw	1	; select bank2/3
  8234  050F  0087               	movwf	7
  8235  0510  0850               	movf	??_Flash_Memory_Initialization,w
  8236  0511  0081               	movwf	1
  8237                           
  8238                           ;MCU_B1.c: 777: GIE = 0;
  8239  0512  138B               	bcf	11,7	;volatile
  8240                           
  8241                           ;MCU_B1.c: 778: Flash_Memory_Write();
  8242  0513  3189  21BB         	fcall	_Flash_Memory_Write
  8243                           
  8244                           ;MCU_B1.c: 779: GIE = 1;
  8245  0515  178B               	bsf	11,7	;volatile
  8246                           
  8247                           ;MCU_B1.c: 780: myMain->FirstOpen = 1;
  8248  0516  0020               	movlb	0	; select bank0
  8249  0517  086A               	movf	_myMain,w
  8250  0518  0086               	movwf	6
  8251  0519  3001               	movlw	1	; select bank2/3
  8252  051A  0087               	movwf	7
  8253  051B  1681               	bsf	1,5
  8254                           
  8255                           ;MCU_B1.c: 781: myMain->First = 1;
  8256  051C  086A               	movf	_myMain,w
  8257  051D  0086               	movwf	6
  8258  051E  3001               	movlw	1	; select bank2/3
  8259  051F  0087               	movwf	7
  8260  0520  1781               	bsf	1,7
  8261  0521  0008               	return
  8262  0522                     __end_of_Flash_Memory_Initialization:	
  8263                           
  8264                           	psect	text48
  8265  0B21                     __ptext48:	
  8266 ;; *************** function _setPercentValue *****************
  8267 ;; Defined at:
  8268 ;;		line 768 in file "../src/Dimmer_B1.c"
  8269 ;; Parameters:    Size  Location     Type
  8270 ;;  value           1    wreg     unsigned char 
  8271 ;; Auto vars:     Size  Location     Type
  8272 ;;  value           1   44[BANK0 ] unsigned char 
  8273 ;;  i               3   45[BANK0 ] float 
  8274 ;; Return value:  Size  Location     Type
  8275 ;;                  1    wreg      unsigned char 
  8276 ;; Registers used:
  8277 ;;		wreg, status,2, status,0, pclath, cstack
  8278 ;; Tracked objects:
  8279 ;;		On entry : 0/0
  8280 ;;		On exit  : 0/0
  8281 ;;		Unchanged: 0/0
  8282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8284 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8286 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8287 ;;Total ram usage:        4 bytes
  8288 ;; Hardware stack levels used:    1
  8289 ;; Hardware stack levels required when called:    7
  8290 ;; This function calls:
  8291 ;;		___awtoft
  8292 ;;		___ftdiv
  8293 ;;		___fttol
  8294 ;; This function is called by:
  8295 ;;		_Flash_Memory_Initialization
  8296 ;; This function uses a non-reentrant model
  8297 ;;
  8298                           
  8299                           
  8300                           ;psect for function _setPercentValue
  8301  0B21                     _setPercentValue:	
  8302                           
  8303                           ;incstack = 0
  8304                           ; Regs used in _setPercentValue: [wreg+status,2+status,0+pclath+cstack]
  8305                           ;setPercentValue@value stored from wreg
  8306  0B21  0020               	movlb	0	; select bank0
  8307  0B22  00CC               	movwf	setPercentValue@value
  8308                           
  8309                           ;Dimmer_B1.c: 770: float i = ((char)((100-25)*0.8)) - ((char)((100-95)*0.8));
  8310  0B23  3000               	movlw	0
  8311  0B24  00CD               	movwf	setPercentValue@i
  8312  0B25  3060               	movlw	96
  8313  0B26  00CE               	movwf	setPercentValue@i+1
  8314  0B27  3042               	movlw	66
  8315  0B28  00CF               	movwf	setPercentValue@i+2
  8316                           
  8317                           ;Dimmer_B1.c: 771: i /= 100;
  8318  0B29  3000               	movlw	0
  8319  0B2A  00AE               	movwf	___ftdiv@f2
  8320  0B2B  30C8               	movlw	200
  8321  0B2C  00AF               	movwf	___ftdiv@f2+1
  8322  0B2D  3042               	movlw	66
  8323  0B2E  00B0               	movwf	___ftdiv@f2+2
  8324  0B2F  084D               	movf	setPercentValue@i,w
  8325  0B30  00B1               	movwf	___ftdiv@f1
  8326  0B31  084E               	movf	setPercentValue@i+1,w
  8327  0B32  00B2               	movwf	___ftdiv@f1+1
  8328  0B33  084F               	movf	setPercentValue@i+2,w
  8329  0B34  00B3               	movwf	___ftdiv@f1+2
  8330  0B35  3185  2522  318B   	fcall	___ftdiv
  8331  0B38  0020               	movlb	0	; select bank0
  8332  0B39  082E               	movf	?___ftdiv,w
  8333  0B3A  00CD               	movwf	setPercentValue@i
  8334  0B3B  082F               	movf	?___ftdiv+1,w
  8335  0B3C  00CE               	movwf	setPercentValue@i+1
  8336  0B3D  0830               	movf	?___ftdiv+2,w
  8337  0B3E  00CF               	movwf	setPercentValue@i+2
  8338                           
  8339                           ;Dimmer_B1.c: 772: return (100 - (char) ((value - ((char)((100-95)*0.8))) / i));
  8340  0B3F  084C               	movf	setPercentValue@value,w
  8341  0B40  3EFC               	addlw	252
  8342  0B41  00A8               	movwf	___awtoft@c
  8343  0B42  30FF               	movlw	255
  8344  0B43  1803               	skipnc
  8345  0B44  3000               	movlw	0
  8346  0B45  00A9               	movwf	___awtoft@c+1
  8347  0B46  3188  20CD  318B   	fcall	___awtoft
  8348  0B49  0020               	movlb	0	; select bank0
  8349  0B4A  0828               	movf	?___awtoft,w
  8350  0B4B  00B1               	movwf	___ftdiv@f1
  8351  0B4C  0829               	movf	?___awtoft+1,w
  8352  0B4D  00B2               	movwf	___ftdiv@f1+1
  8353  0B4E  082A               	movf	?___awtoft+2,w
  8354  0B4F  00B3               	movwf	___ftdiv@f1+2
  8355  0B50  084D               	movf	setPercentValue@i,w
  8356  0B51  00AE               	movwf	___ftdiv@f2
  8357  0B52  084E               	movf	setPercentValue@i+1,w
  8358  0B53  00AF               	movwf	___ftdiv@f2+1
  8359  0B54  084F               	movf	setPercentValue@i+2,w
  8360  0B55  00B0               	movwf	___ftdiv@f2+2
  8361  0B56  3185  2522  318B   	fcall	___ftdiv
  8362  0B59  0020               	movlb	0	; select bank0
  8363  0B5A  082E               	movf	?___ftdiv,w
  8364  0B5B  00BE               	movwf	___fttol@f1
  8365  0B5C  082F               	movf	?___ftdiv+1,w
  8366  0B5D  00BF               	movwf	___fttol@f1+1
  8367  0B5E  0830               	movf	?___ftdiv+2,w
  8368  0B5F  00C0               	movwf	___fttol@f1+2
  8369  0B60  3186  2668         	fcall	___fttol
  8370  0B62  0020               	movlb	0	; select bank0
  8371  0B63  033E               	decf	?___fttol,w
  8372  0B64  3AFF               	xorlw	255
  8373  0B65  3E64               	addlw	100
  8374  0B66  0008               	return
  8375  0B67                     __end_of_setPercentValue:	
  8376                           
  8377                           	psect	text49
  8378  0668                     __ptext49:	
  8379 ;; *************** function ___fttol *****************
  8380 ;; Defined at:
  8381 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
  8382 ;; Parameters:    Size  Location     Type
  8383 ;;  f1              3   30[BANK0 ] float 
  8384 ;; Auto vars:     Size  Location     Type
  8385 ;;  lval            4   39[BANK0 ] unsigned long 
  8386 ;;  exp1            1   43[BANK0 ] unsigned char 
  8387 ;;  sign1           1   38[BANK0 ] unsigned char 
  8388 ;; Return value:  Size  Location     Type
  8389 ;;                  4   30[BANK0 ] long 
  8390 ;; Registers used:
  8391 ;;		wreg, status,2, status,0
  8392 ;; Tracked objects:
  8393 ;;		On entry : 0/0
  8394 ;;		On exit  : 0/0
  8395 ;;		Unchanged: 0/0
  8396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8397 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8398 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8399 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8400 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8401 ;;Total ram usage:       14 bytes
  8402 ;; Hardware stack levels used:    1
  8403 ;; Hardware stack levels required when called:    5
  8404 ;; This function calls:
  8405 ;;		Nothing
  8406 ;; This function is called by:
  8407 ;;		_setPercentValue
  8408 ;;		_getPercentValue
  8409 ;; This function uses a non-reentrant model
  8410 ;;
  8411                           
  8412                           
  8413                           ;psect for function ___fttol
  8414  0668                     ___fttol:	
  8415                           
  8416                           ;incstack = 0
  8417                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8418  0668  0020               	movlb	0	; select bank0
  8419  0669  083E               	movf	___fttol@f1,w
  8420  066A  00C2               	movwf	??___fttol
  8421  066B  083F               	movf	___fttol@f1+1,w
  8422  066C  00C3               	movwf	??___fttol+1
  8423  066D  0840               	movf	___fttol@f1+2,w
  8424  066E  00C4               	movwf	??___fttol+2
  8425  066F  1003               	clrc
  8426  0670  0D43               	rlf	??___fttol+1,w
  8427  0671  0D44               	rlf	??___fttol+2,w
  8428  0672  00C5               	movwf	??___fttol+3
  8429  0673  0845               	movf	??___fttol+3,w
  8430  0674  00CB               	movwf	___fttol@exp1
  8431  0675  08CB               	movf	___fttol@exp1,f
  8432  0676  1D03               	skipz
  8433  0677  2E81               	goto	l4431
  8434  0678  3000               	movlw	0
  8435  0679  00C1               	movwf	?___fttol+3
  8436  067A  3000               	movlw	0
  8437  067B  00C0               	movwf	?___fttol+2
  8438  067C  3000               	movlw	0
  8439  067D  00BF               	movwf	?___fttol+1
  8440  067E  3000               	movlw	0
  8441  067F  00BE               	movwf	?___fttol
  8442  0680  0008               	return
  8443  0681                     l4431:	
  8444  0681  083E               	movf	___fttol@f1,w
  8445  0682  00C2               	movwf	??___fttol
  8446  0683  083F               	movf	___fttol@f1+1,w
  8447  0684  00C3               	movwf	??___fttol+1
  8448  0685  0840               	movf	___fttol@f1+2,w
  8449  0686  00C4               	movwf	??___fttol+2
  8450  0687  3017               	movlw	23
  8451  0688                     u3645:	
  8452  0688  36C4               	lsrf	??___fttol+2,f
  8453  0689  0CC3               	rrf	??___fttol+1,f
  8454  068A  0CC2               	rrf	??___fttol,f
  8455  068B  0B89               	decfsz	9,f
  8456  068C  2E88               	goto	u3645
  8457  068D  0842               	movf	??___fttol,w
  8458  068E  00C5               	movwf	??___fttol+3
  8459  068F  0845               	movf	??___fttol+3,w
  8460  0690  00C6               	movwf	___fttol@sign1
  8461  0691  17BF               	bsf	___fttol@f1+1,7
  8462  0692  30FF               	movlw	255
  8463  0693  05BE               	andwf	___fttol@f1,f
  8464  0694  30FF               	movlw	255
  8465  0695  05BF               	andwf	___fttol@f1+1,f
  8466  0696  3000               	movlw	0
  8467  0697  05C0               	andwf	___fttol@f1+2,f
  8468  0698  083E               	movf	___fttol@f1,w
  8469  0699  00C7               	movwf	___fttol@lval
  8470  069A  083F               	movf	___fttol@f1+1,w
  8471  069B  00C8               	movwf	___fttol@lval+1
  8472  069C  0840               	movf	___fttol@f1+2,w
  8473  069D  00C9               	movwf	___fttol@lval+2
  8474  069E  01CA               	clrf	___fttol@lval+3
  8475  069F  308E               	movlw	142
  8476  06A0  02CB               	subwf	___fttol@exp1,f
  8477  06A1  1FCB               	btfss	___fttol@exp1,7
  8478  06A2  2EBF               	goto	l4451
  8479  06A3  084B               	movf	___fttol@exp1,w
  8480  06A4  3A80               	xorlw	128
  8481  06A5  3E8F               	addlw	143
  8482  06A6  1803               	skipnc
  8483  06A7  2EB1               	goto	l4449
  8484  06A8  3000               	movlw	0
  8485  06A9  00C1               	movwf	?___fttol+3
  8486  06AA  3000               	movlw	0
  8487  06AB  00C0               	movwf	?___fttol+2
  8488  06AC  3000               	movlw	0
  8489  06AD  00BF               	movwf	?___fttol+1
  8490  06AE  3000               	movlw	0
  8491  06AF  00BE               	movwf	?___fttol
  8492  06B0  0008               	return
  8493  06B1                     l4449:	
  8494  06B1  3001               	movlw	1
  8495  06B2                     u3675:	
  8496  06B2  36CA               	lsrf	___fttol@lval+3,f
  8497  06B3  0CC9               	rrf	___fttol@lval+2,f
  8498  06B4  0CC8               	rrf	___fttol@lval+1,f
  8499  06B5  0CC7               	rrf	___fttol@lval,f
  8500  06B6  0B89               	decfsz	9,f
  8501  06B7  2EB2               	goto	u3675
  8502  06B8  3001               	movlw	1
  8503  06B9  00C2               	movwf	??___fttol
  8504  06BA  0842               	movf	??___fttol,w
  8505  06BB  07CB               	addwf	___fttol@exp1,f
  8506  06BC  1903               	btfsc	3,2
  8507  06BD  2ED8               	goto	l4461
  8508  06BE  2EB1               	goto	l4449
  8509  06BF                     l4451:	
  8510  06BF  3018               	movlw	24
  8511  06C0  024B               	subwf	___fttol@exp1,w
  8512  06C1  1C03               	skipc
  8513  06C2  2ED5               	goto	l4459
  8514  06C3  3000               	movlw	0
  8515  06C4  00C1               	movwf	?___fttol+3
  8516  06C5  3000               	movlw	0
  8517  06C6  00C0               	movwf	?___fttol+2
  8518  06C7  3000               	movlw	0
  8519  06C8  00BF               	movwf	?___fttol+1
  8520  06C9  3000               	movlw	0
  8521  06CA  00BE               	movwf	?___fttol
  8522  06CB  0008               	return
  8523  06CC                     l4457:	
  8524  06CC  3001               	movlw	1
  8525  06CD                     u3705:	
  8526  06CD  35C7               	lslf	___fttol@lval,f
  8527  06CE  0DC8               	rlf	___fttol@lval+1,f
  8528  06CF  0DC9               	rlf	___fttol@lval+2,f
  8529  06D0  0DCA               	rlf	___fttol@lval+3,f
  8530  06D1  0B89               	decfsz	9,f
  8531  06D2  2ECD               	goto	u3705
  8532  06D3  3001               	movlw	1
  8533  06D4  02CB               	subwf	___fttol@exp1,f
  8534  06D5                     l4459:	
  8535  06D5  08CB               	movf	___fttol@exp1,f
  8536  06D6  1D03               	skipz
  8537  06D7  2ECC               	goto	l4457
  8538  06D8                     l4461:	
  8539  06D8  0846               	movf	___fttol@sign1,w
  8540  06D9  1903               	btfsc	3,2
  8541  06DA  2EE6               	goto	l4465
  8542  06DB  09C7               	comf	___fttol@lval,f
  8543  06DC  09C8               	comf	___fttol@lval+1,f
  8544  06DD  09C9               	comf	___fttol@lval+2,f
  8545  06DE  09CA               	comf	___fttol@lval+3,f
  8546  06DF  0AC7               	incf	___fttol@lval,f
  8547  06E0  1903               	skipnz
  8548  06E1  0AC8               	incf	___fttol@lval+1,f
  8549  06E2  1903               	skipnz
  8550  06E3  0AC9               	incf	___fttol@lval+2,f
  8551  06E4  1903               	skipnz
  8552  06E5  0ACA               	incf	___fttol@lval+3,f
  8553  06E6                     l4465:	
  8554  06E6  084A               	movf	___fttol@lval+3,w
  8555  06E7  00C1               	movwf	?___fttol+3
  8556  06E8  0849               	movf	___fttol@lval+2,w
  8557  06E9  00C0               	movwf	?___fttol+2
  8558  06EA  0848               	movf	___fttol@lval+1,w
  8559  06EB  00BF               	movwf	?___fttol+1
  8560  06EC  0847               	movf	___fttol@lval,w
  8561  06ED  00BE               	movwf	?___fttol
  8562  06EE  0008               	return
  8563  06EF                     __end_of___fttol:	
  8564                           
  8565                           	psect	text50
  8566  0522                     __ptext50:	
  8567 ;; *************** function ___ftdiv *****************
  8568 ;; Defined at:
  8569 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
  8570 ;; Parameters:    Size  Location     Type
  8571 ;;  f2              3   14[BANK0 ] float 
  8572 ;;  f1              3   17[BANK0 ] float 
  8573 ;; Auto vars:     Size  Location     Type
  8574 ;;  f3              3   25[BANK0 ] float 
  8575 ;;  sign            1   29[BANK0 ] unsigned char 
  8576 ;;  exp             1   28[BANK0 ] unsigned char 
  8577 ;;  cntr            1   24[BANK0 ] unsigned char 
  8578 ;; Return value:  Size  Location     Type
  8579 ;;                  3   14[BANK0 ] float 
  8580 ;; Registers used:
  8581 ;;		wreg, status,2, status,0, pclath, cstack
  8582 ;; Tracked objects:
  8583 ;;		On entry : 0/0
  8584 ;;		On exit  : 0/0
  8585 ;;		Unchanged: 0/0
  8586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8587 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8588 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8589 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8590 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8591 ;;Total ram usage:       16 bytes
  8592 ;; Hardware stack levels used:    1
  8593 ;; Hardware stack levels required when called:    6
  8594 ;; This function calls:
  8595 ;;		___ftpack
  8596 ;; This function is called by:
  8597 ;;		_setPercentValue
  8598 ;;		_getPercentValue
  8599 ;; This function uses a non-reentrant model
  8600 ;;
  8601                           
  8602                           
  8603                           ;psect for function ___ftdiv
  8604  0522                     ___ftdiv:	
  8605                           
  8606                           ;incstack = 0
  8607                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8608  0522  0020               	movlb	0	; select bank0
  8609  0523  0831               	movf	___ftdiv@f1,w
  8610  0524  00B4               	movwf	??___ftdiv
  8611  0525  0832               	movf	___ftdiv@f1+1,w
  8612  0526  00B5               	movwf	??___ftdiv+1
  8613  0527  0833               	movf	___ftdiv@f1+2,w
  8614  0528  00B6               	movwf	??___ftdiv+2
  8615  0529  1003               	clrc
  8616  052A  0D35               	rlf	??___ftdiv+1,w
  8617  052B  0D36               	rlf	??___ftdiv+2,w
  8618  052C  00B7               	movwf	??___ftdiv+3
  8619  052D  0837               	movf	??___ftdiv+3,w
  8620  052E  00BC               	movwf	___ftdiv@exp
  8621  052F  08BC               	movf	___ftdiv@exp,f
  8622  0530  1D03               	skipz
  8623  0531  2D39               	goto	l4389
  8624  0532  3000               	movlw	0
  8625  0533  00AE               	movwf	?___ftdiv
  8626  0534  3000               	movlw	0
  8627  0535  00AF               	movwf	?___ftdiv+1
  8628  0536  3000               	movlw	0
  8629  0537  00B0               	movwf	?___ftdiv+2
  8630  0538  0008               	return
  8631  0539                     l4389:	
  8632  0539  082E               	movf	___ftdiv@f2,w
  8633  053A  00B4               	movwf	??___ftdiv
  8634  053B  082F               	movf	___ftdiv@f2+1,w
  8635  053C  00B5               	movwf	??___ftdiv+1
  8636  053D  0830               	movf	___ftdiv@f2+2,w
  8637  053E  00B6               	movwf	??___ftdiv+2
  8638  053F  1003               	clrc
  8639  0540  0D35               	rlf	??___ftdiv+1,w
  8640  0541  0D36               	rlf	??___ftdiv+2,w
  8641  0542  00B7               	movwf	??___ftdiv+3
  8642  0543  0837               	movf	??___ftdiv+3,w
  8643  0544  00BD               	movwf	___ftdiv@sign
  8644  0545  08BD               	movf	___ftdiv@sign,f
  8645  0546  1D03               	skipz
  8646  0547  2D4F               	goto	l4395
  8647  0548  3000               	movlw	0
  8648  0549  00AE               	movwf	?___ftdiv
  8649  054A  3000               	movlw	0
  8650  054B  00AF               	movwf	?___ftdiv+1
  8651  054C  3000               	movlw	0
  8652  054D  00B0               	movwf	?___ftdiv+2
  8653  054E  0008               	return
  8654  054F                     l4395:	
  8655  054F  3000               	movlw	0
  8656  0550  00B9               	movwf	___ftdiv@f3
  8657  0551  3000               	movlw	0
  8658  0552  00BA               	movwf	___ftdiv@f3+1
  8659  0553  3000               	movlw	0
  8660  0554  00BB               	movwf	___ftdiv@f3+2
  8661  0555  3089               	movlw	137
  8662  0556  073D               	addwf	___ftdiv@sign,w
  8663  0557  00B4               	movwf	??___ftdiv
  8664  0558  0834               	movf	??___ftdiv,w
  8665  0559  02BC               	subwf	___ftdiv@exp,f
  8666  055A  0831               	movf	___ftdiv@f1,w
  8667  055B  00B4               	movwf	??___ftdiv
  8668  055C  0832               	movf	___ftdiv@f1+1,w
  8669  055D  00B5               	movwf	??___ftdiv+1
  8670  055E  0833               	movf	___ftdiv@f1+2,w
  8671  055F  00B6               	movwf	??___ftdiv+2
  8672  0560  3010               	movlw	16
  8673  0561                     u3575:	
  8674  0561  36B6               	lsrf	??___ftdiv+2,f
  8675  0562  0CB5               	rrf	??___ftdiv+1,f
  8676  0563  0CB4               	rrf	??___ftdiv,f
  8677  0564  0B89               	decfsz	9,f
  8678  0565  2D61               	goto	u3575
  8679  0566  0834               	movf	??___ftdiv,w
  8680  0567  00B7               	movwf	??___ftdiv+3
  8681  0568  0837               	movf	??___ftdiv+3,w
  8682  0569  00BD               	movwf	___ftdiv@sign
  8683  056A  082E               	movf	___ftdiv@f2,w
  8684  056B  00B4               	movwf	??___ftdiv
  8685  056C  082F               	movf	___ftdiv@f2+1,w
  8686  056D  00B5               	movwf	??___ftdiv+1
  8687  056E  0830               	movf	___ftdiv@f2+2,w
  8688  056F  00B6               	movwf	??___ftdiv+2
  8689  0570  3010               	movlw	16
  8690  0571                     u3585:	
  8691  0571  36B6               	lsrf	??___ftdiv+2,f
  8692  0572  0CB5               	rrf	??___ftdiv+1,f
  8693  0573  0CB4               	rrf	??___ftdiv,f
  8694  0574  0B89               	decfsz	9,f
  8695  0575  2D71               	goto	u3585
  8696  0576  0834               	movf	??___ftdiv,w
  8697  0577  00B7               	movwf	??___ftdiv+3
  8698  0578  0837               	movf	??___ftdiv+3,w
  8699  0579  06BD               	xorwf	___ftdiv@sign,f
  8700  057A  3080               	movlw	128
  8701  057B  00B4               	movwf	??___ftdiv
  8702  057C  0834               	movf	??___ftdiv,w
  8703  057D  05BD               	andwf	___ftdiv@sign,f
  8704  057E  17B2               	bsf	___ftdiv@f1+1,7
  8705  057F  30FF               	movlw	255
  8706  0580  05B1               	andwf	___ftdiv@f1,f
  8707  0581  30FF               	movlw	255
  8708  0582  05B2               	andwf	___ftdiv@f1+1,f
  8709  0583  3000               	movlw	0
  8710  0584  05B3               	andwf	___ftdiv@f1+2,f
  8711  0585  17AF               	bsf	___ftdiv@f2+1,7
  8712  0586  30FF               	movlw	255
  8713  0587  05AE               	andwf	___ftdiv@f2,f
  8714  0588  30FF               	movlw	255
  8715  0589  05AF               	andwf	___ftdiv@f2+1,f
  8716  058A  3000               	movlw	0
  8717  058B  05B0               	andwf	___ftdiv@f2+2,f
  8718  058C  3018               	movlw	24
  8719  058D  00B4               	movwf	??___ftdiv
  8720  058E  0834               	movf	??___ftdiv,w
  8721  058F  00B8               	movwf	___ftdiv@cntr
  8722  0590                     l4409:	
  8723  0590  3001               	movlw	1
  8724  0591                     u3595:	
  8725  0591  35B9               	lslf	___ftdiv@f3,f
  8726  0592  0DBA               	rlf	___ftdiv@f3+1,f
  8727  0593  0DBB               	rlf	___ftdiv@f3+2,f
  8728  0594  0B89               	decfsz	9,f
  8729  0595  2D91               	goto	u3595
  8730  0596  0830               	movf	___ftdiv@f2+2,w
  8731  0597  0233               	subwf	___ftdiv@f1+2,w
  8732  0598  1D03               	skipz
  8733  0599  2DA0               	goto	u3605
  8734  059A  082F               	movf	___ftdiv@f2+1,w
  8735  059B  0232               	subwf	___ftdiv@f1+1,w
  8736  059C  1D03               	skipz
  8737  059D  2DA0               	goto	u3605
  8738  059E  082E               	movf	___ftdiv@f2,w
  8739  059F  0231               	subwf	___ftdiv@f1,w
  8740  05A0                     u3605:	
  8741  05A0  1C03               	skipc
  8742  05A1  2DA9               	goto	l4417
  8743  05A2  082E               	movf	___ftdiv@f2,w
  8744  05A3  02B1               	subwf	___ftdiv@f1,f
  8745  05A4  082F               	movf	___ftdiv@f2+1,w
  8746  05A5  3BB2               	subwfb	___ftdiv@f1+1,f
  8747  05A6  0830               	movf	___ftdiv@f2+2,w
  8748  05A7  3BB3               	subwfb	___ftdiv@f1+2,f
  8749  05A8  1439               	bsf	___ftdiv@f3,0
  8750  05A9                     l4417:	
  8751  05A9  3001               	movlw	1
  8752  05AA                     u3615:	
  8753  05AA  35B1               	lslf	___ftdiv@f1,f
  8754  05AB  0DB2               	rlf	___ftdiv@f1+1,f
  8755  05AC  0DB3               	rlf	___ftdiv@f1+2,f
  8756  05AD  0B89               	decfsz	9,f
  8757  05AE  2DAA               	goto	u3615
  8758  05AF  3001               	movlw	1
  8759  05B0  02B8               	subwf	___ftdiv@cntr,f
  8760  05B1  1D03               	btfss	3,2
  8761  05B2  2D90               	goto	l4409
  8762  05B3  0839               	movf	___ftdiv@f3,w
  8763  05B4  00A0               	movwf	___ftpack@arg
  8764  05B5  083A               	movf	___ftdiv@f3+1,w
  8765  05B6  00A1               	movwf	___ftpack@arg+1
  8766  05B7  083B               	movf	___ftdiv@f3+2,w
  8767  05B8  00A2               	movwf	___ftpack@arg+2
  8768  05B9  083C               	movf	___ftdiv@exp,w
  8769  05BA  00B4               	movwf	??___ftdiv
  8770  05BB  0834               	movf	??___ftdiv,w
  8771  05BC  00A3               	movwf	___ftpack@exp
  8772  05BD  083D               	movf	___ftdiv@sign,w
  8773  05BE  00B5               	movwf	??___ftdiv+1
  8774  05BF  0835               	movf	??___ftdiv+1,w
  8775  05C0  00A4               	movwf	___ftpack@sign
  8776  05C1  318C  24AF         	fcall	___ftpack
  8777  05C3  0020               	movlb	0	; select bank0
  8778  05C4  0820               	movf	?___ftpack,w
  8779  05C5  00AE               	movwf	?___ftdiv
  8780  05C6  0821               	movf	?___ftpack+1,w
  8781  05C7  00AF               	movwf	?___ftdiv+1
  8782  05C8  0822               	movf	?___ftpack+2,w
  8783  05C9  00B0               	movwf	?___ftdiv+2
  8784  05CA  0008               	return
  8785  05CB                     __end_of___ftdiv:	
  8786                           
  8787                           	psect	text51
  8788  08CD                     __ptext51:	
  8789 ;; *************** function ___awtoft *****************
  8790 ;; Defined at:
  8791 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c"
  8792 ;; Parameters:    Size  Location     Type
  8793 ;;  c               2    8[BANK0 ] int 
  8794 ;; Auto vars:     Size  Location     Type
  8795 ;;  sign            1   13[BANK0 ] unsigned char 
  8796 ;; Return value:  Size  Location     Type
  8797 ;;                  3    8[BANK0 ] float 
  8798 ;; Registers used:
  8799 ;;		wreg, status,2, status,0, pclath, cstack
  8800 ;; Tracked objects:
  8801 ;;		On entry : 0/0
  8802 ;;		On exit  : 0/0
  8803 ;;		Unchanged: 0/0
  8804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8805 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8806 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8807 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8808 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8809 ;;Total ram usage:        6 bytes
  8810 ;; Hardware stack levels used:    1
  8811 ;; Hardware stack levels required when called:    6
  8812 ;; This function calls:
  8813 ;;		___ftpack
  8814 ;; This function is called by:
  8815 ;;		_setPercentValue
  8816 ;;		_getPercentValue
  8817 ;; This function uses a non-reentrant model
  8818 ;;
  8819                           
  8820                           
  8821                           ;psect for function ___awtoft
  8822  08CD                     ___awtoft:	
  8823                           
  8824                           ;incstack = 0
  8825                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8826  08CD  0020               	movlb	0	; select bank0
  8827  08CE  01AD               	clrf	___awtoft@sign
  8828  08CF  1FA9               	btfss	___awtoft@c+1,7
  8829  08D0  28D8               	goto	l4379
  8830  08D1  09A8               	comf	___awtoft@c,f
  8831  08D2  09A9               	comf	___awtoft@c+1,f
  8832  08D3  0AA8               	incf	___awtoft@c,f
  8833  08D4  1903               	skipnz
  8834  08D5  0AA9               	incf	___awtoft@c+1,f
  8835  08D6  01AD               	clrf	___awtoft@sign
  8836  08D7  0AAD               	incf	___awtoft@sign,f
  8837  08D8                     l4379:	
  8838  08D8  0828               	movf	___awtoft@c,w
  8839  08D9  00A0               	movwf	___ftpack@arg
  8840  08DA  0829               	movf	___awtoft@c+1,w
  8841  08DB  00A1               	movwf	___ftpack@arg+1
  8842  08DC  01A2               	clrf	___ftpack@arg+2
  8843  08DD  308E               	movlw	142
  8844  08DE  00AB               	movwf	??___awtoft
  8845  08DF  082B               	movf	??___awtoft,w
  8846  08E0  00A3               	movwf	___ftpack@exp
  8847  08E1  082D               	movf	___awtoft@sign,w
  8848  08E2  00AC               	movwf	??___awtoft+1
  8849  08E3  082C               	movf	??___awtoft+1,w
  8850  08E4  00A4               	movwf	___ftpack@sign
  8851  08E5  318C  24AF         	fcall	___ftpack
  8852  08E7  0020               	movlb	0	; select bank0
  8853  08E8  0820               	movf	?___ftpack,w
  8854  08E9  00A8               	movwf	?___awtoft
  8855  08EA  0821               	movf	?___ftpack+1,w
  8856  08EB  00A9               	movwf	?___awtoft+1
  8857  08EC  0822               	movf	?___ftpack+2,w
  8858  08ED  00AA               	movwf	?___awtoft+2
  8859  08EE  0008               	return
  8860  08EF                     __end_of___awtoft:	
  8861                           
  8862                           	psect	text52
  8863  0CAF                     __ptext52:	
  8864 ;; *************** function ___ftpack *****************
  8865 ;; Defined at:
  8866 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
  8867 ;; Parameters:    Size  Location     Type
  8868 ;;  arg             3    0[BANK0 ] unsigned um
  8869 ;;  exp             1    3[BANK0 ] unsigned char 
  8870 ;;  sign            1    4[BANK0 ] unsigned char 
  8871 ;; Auto vars:     Size  Location     Type
  8872 ;;		None
  8873 ;; Return value:  Size  Location     Type
  8874 ;;                  3    0[BANK0 ] float 
  8875 ;; Registers used:
  8876 ;;		wreg, status,2, status,0
  8877 ;; Tracked objects:
  8878 ;;		On entry : 0/0
  8879 ;;		On exit  : 0/0
  8880 ;;		Unchanged: 0/0
  8881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8882 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8884 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8885 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8886 ;;Total ram usage:        8 bytes
  8887 ;; Hardware stack levels used:    1
  8888 ;; Hardware stack levels required when called:    5
  8889 ;; This function calls:
  8890 ;;		Nothing
  8891 ;; This function is called by:
  8892 ;;		___awtoft
  8893 ;;		___ftdiv
  8894 ;;		___ftmul
  8895 ;;		___ftadd
  8896 ;; This function uses a non-reentrant model
  8897 ;;
  8898                           
  8899                           
  8900                           ;psect for function ___ftpack
  8901  0CAF                     ___ftpack:	
  8902                           
  8903                           ;incstack = 0
  8904                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8905  0CAF  0020               	movlb	0	; select bank0
  8906  0CB0  0823               	movf	___ftpack@exp,w
  8907  0CB1  1903               	btfsc	3,2
  8908  0CB2  2CB8               	goto	l4103
  8909  0CB3  0822               	movf	___ftpack@arg+2,w
  8910  0CB4  0421               	iorwf	___ftpack@arg+1,w
  8911  0CB5  0420               	iorwf	___ftpack@arg,w
  8912  0CB6  1D03               	skipz
  8913  0CB7  2CC9               	goto	l4109
  8914  0CB8                     l4103:	
  8915  0CB8  3000               	movlw	0
  8916  0CB9  00A0               	movwf	?___ftpack
  8917  0CBA  3000               	movlw	0
  8918  0CBB  00A1               	movwf	?___ftpack+1
  8919  0CBC  3000               	movlw	0
  8920  0CBD  00A2               	movwf	?___ftpack+2
  8921  0CBE  0008               	return
  8922  0CBF                     l4107:	
  8923  0CBF  3001               	movlw	1
  8924  0CC0  00A5               	movwf	??___ftpack
  8925  0CC1  0825               	movf	??___ftpack,w
  8926  0CC2  07A3               	addwf	___ftpack@exp,f
  8927  0CC3  3001               	movlw	1
  8928  0CC4                     u3085:	
  8929  0CC4  36A2               	lsrf	___ftpack@arg+2,f
  8930  0CC5  0CA1               	rrf	___ftpack@arg+1,f
  8931  0CC6  0CA0               	rrf	___ftpack@arg,f
  8932  0CC7  0B89               	decfsz	9,f
  8933  0CC8  2CC4               	goto	u3085
  8934  0CC9                     l4109:	
  8935  0CC9  30FE               	movlw	254
  8936  0CCA  0522               	andwf	___ftpack@arg+2,w
  8937  0CCB  1903               	btfsc	3,2
  8938  0CCC  2CE2               	goto	l2137
  8939  0CCD  2CBF               	goto	l4107
  8940  0CCE                     l4111:	
  8941  0CCE  3001               	movlw	1
  8942  0CCF  00A5               	movwf	??___ftpack
  8943  0CD0  0825               	movf	??___ftpack,w
  8944  0CD1  07A3               	addwf	___ftpack@exp,f
  8945  0CD2  3001               	movlw	1
  8946  0CD3  07A0               	addwf	___ftpack@arg,f
  8947  0CD4  3000               	movlw	0
  8948  0CD5  1803               	skipnc
  8949  0CD6  3001               	movlw	1
  8950  0CD7  07A1               	addwf	___ftpack@arg+1,f
  8951  0CD8  3000               	movlw	0
  8952  0CD9  1803               	skipnc
  8953  0CDA  3001               	movlw	1
  8954  0CDB  07A2               	addwf	___ftpack@arg+2,f
  8955  0CDC  3001               	movlw	1
  8956  0CDD                     u3105:	
  8957  0CDD  36A2               	lsrf	___ftpack@arg+2,f
  8958  0CDE  0CA1               	rrf	___ftpack@arg+1,f
  8959  0CDF  0CA0               	rrf	___ftpack@arg,f
  8960  0CE0  0B89               	decfsz	9,f
  8961  0CE1  2CDD               	goto	u3105
  8962  0CE2                     l2137:	
  8963  0CE2  30FF               	movlw	255
  8964  0CE3  0522               	andwf	___ftpack@arg+2,w
  8965  0CE4  1903               	btfsc	3,2
  8966  0CE5  2CEF               	goto	l4119
  8967  0CE6  2CCE               	goto	l4111
  8968  0CE7                     l4117:	
  8969  0CE7  3001               	movlw	1
  8970  0CE8  02A3               	subwf	___ftpack@exp,f
  8971  0CE9  3001               	movlw	1
  8972  0CEA                     u3125:	
  8973  0CEA  35A0               	lslf	___ftpack@arg,f
  8974  0CEB  0DA1               	rlf	___ftpack@arg+1,f
  8975  0CEC  0DA2               	rlf	___ftpack@arg+2,f
  8976  0CED  0B89               	decfsz	9,f
  8977  0CEE  2CEA               	goto	u3125
  8978  0CEF                     l4119:	
  8979  0CEF  1FA1               	btfss	___ftpack@arg+1,7
  8980  0CF0  2CE7               	goto	l4117
  8981  0CF1  1823               	btfsc	___ftpack@exp,0
  8982  0CF2  2CF9               	goto	l2143
  8983  0CF3  30FF               	movlw	255
  8984  0CF4  05A0               	andwf	___ftpack@arg,f
  8985  0CF5  307F               	movlw	127
  8986  0CF6  05A1               	andwf	___ftpack@arg+1,f
  8987  0CF7  30FF               	movlw	255
  8988  0CF8  05A2               	andwf	___ftpack@arg+2,f
  8989  0CF9                     l2143:	
  8990  0CF9  1003               	clrc
  8991  0CFA  0CA3               	rrf	___ftpack@exp,f
  8992  0CFB  0823               	movf	___ftpack@exp,w
  8993  0CFC  00A5               	movwf	??___ftpack
  8994  0CFD  01A6               	clrf	??___ftpack+1
  8995  0CFE  01A7               	clrf	??___ftpack+2
  8996  0CFF  3010               	movlw	16
  8997  0D00                     u3155:	
  8998  0D00  35A5               	lslf	??___ftpack,f
  8999  0D01  0DA6               	rlf	??___ftpack+1,f
  9000  0D02  0DA7               	rlf	??___ftpack+2,f
  9001  0D03  0B89               	decfsz	9,f
  9002  0D04  2D00               	goto	u3155
  9003  0D05  0825               	movf	??___ftpack,w
  9004  0D06  04A0               	iorwf	___ftpack@arg,f
  9005  0D07  0826               	movf	??___ftpack+1,w
  9006  0D08  04A1               	iorwf	___ftpack@arg+1,f
  9007  0D09  0827               	movf	??___ftpack+2,w
  9008  0D0A  04A2               	iorwf	___ftpack@arg+2,f
  9009  0D0B  0824               	movf	___ftpack@sign,w
  9010  0D0C  1903               	btfsc	3,2
  9011  0D0D  0008               	return
  9012  0D0E  17A2               	bsf	___ftpack@arg+2,7
  9013  0D0F  0008               	return
  9014  0D10                     __end_of___ftpack:	
  9015                           
  9016                           	psect	text53
  9017  09BB                     __ptext53:	
  9018 ;; *************** function _Flash_Memory_Write *****************
  9019 ;; Defined at:
  9020 ;;		line 825 in file "../src/MCU_B1.c"
  9021 ;; Parameters:    Size  Location     Type
  9022 ;;		None
  9023 ;; Auto vars:     Size  Location     Type
  9024 ;;  i               1    1[BANK0 ] unsigned char 
  9025 ;; Return value:  Size  Location     Type
  9026 ;;		None               void
  9027 ;; Registers used:
  9028 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9029 ;; Tracked objects:
  9030 ;;		On entry : 0/0
  9031 ;;		On exit  : 0/0
  9032 ;;		Unchanged: 0/0
  9033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9035 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9036 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9037 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9038 ;;Total ram usage:        2 bytes
  9039 ;; Hardware stack levels used:    1
  9040 ;; Hardware stack levels required when called:    6
  9041 ;; This function calls:
  9042 ;;		_Flash_Memory_Unlock
  9043 ;; This function is called by:
  9044 ;;		_Flash_Memory_Initialization
  9045 ;;		_Flash_Memory_Modify
  9046 ;; This function uses a non-reentrant model
  9047 ;;
  9048                           
  9049                           
  9050                           ;psect for function _Flash_Memory_Write
  9051  09BB                     _Flash_Memory_Write:	
  9052                           
  9053                           ;MCU_B1.c: 826: char i = 0;
  9054                           
  9055                           ;incstack = 0
  9056                           ; Regs used in _Flash_Memory_Write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9057  09BB  0020               	movlb	0	; select bank0
  9058  09BC  01A1               	clrf	Flash_Memory_Write@i
  9059                           
  9060                           ;MCU_B1.c: 827: CFGS = 0;
  9061  09BD  0023               	movlb	3	; select bank3
  9062  09BE  1315               	bcf	21,6	;volatile
  9063                           
  9064                           ;MCU_B1.c: 828: PMADRH = 0x30;
  9065  09BF  3030               	movlw	48
  9066  09C0  0092               	movwf	18	;volatile
  9067                           
  9068                           ;MCU_B1.c: 829: PMDATH = 0;
  9069  09C1  0194               	clrf	20	;volatile
  9070                           
  9071                           ;MCU_B1.c: 830: FREE = 0;
  9072  09C2  1215               	bcf	21,4	;volatile
  9073                           
  9074                           ;MCU_B1.c: 831: LWLO = 1;
  9075  09C3  1695               	bsf	21,5	;volatile
  9076                           
  9077                           ;MCU_B1.c: 832: WREN = 1;
  9078  09C4  1515               	bsf	21,2	;volatile
  9079                           
  9080                           ;MCU_B1.c: 833: for (i = 0; i < 32; i++) {
  9081  09C5  0020               	movlb	0	; select bank0
  9082  09C6  01A1               	clrf	Flash_Memory_Write@i
  9083  09C7  3020               	movlw	32
  9084  09C8  0221               	subwf	Flash_Memory_Write@i,w
  9085  09C9  1803               	btfsc	3,0
  9086  09CA  29E5               	goto	l999
  9087  09CB                     l4219:	
  9088                           
  9089                           ;MCU_B1.c: 834: PMADRL = i;
  9090  09CB  0821               	movf	Flash_Memory_Write@i,w
  9091  09CC  0023               	movlb	3	; select bank3
  9092  09CD  0091               	movwf	17	;volatile
  9093                           
  9094                           ;MCU_B1.c: 835: PMDATL = Memory->Data[i];
  9095  09CE  0020               	movlb	0	; select bank0
  9096  09CF  0821               	movf	Flash_Memory_Write@i,w
  9097  09D0  076C               	addwf	_Memory,w
  9098  09D1  00A0               	movwf	??_Flash_Memory_Write
  9099  09D2  0820               	movf	??_Flash_Memory_Write,w
  9100  09D3  0086               	movwf	6
  9101  09D4  3001               	movlw	1	; select bank2/3
  9102  09D5  0087               	movwf	7
  9103  09D6  0801               	movf	1,w
  9104  09D7  0023               	movlb	3	; select bank3
  9105  09D8  0093               	movwf	19	;volatile
  9106                           
  9107                           ;MCU_B1.c: 836: Flash_Memory_Unlock();
  9108  09D9  3196  260E  3189   	fcall	_Flash_Memory_Unlock
  9109  09DC  3001               	movlw	1
  9110  09DD  0020               	movlb	0	; select bank0
  9111  09DE  00A0               	movwf	??_Flash_Memory_Write
  9112  09DF  0820               	movf	??_Flash_Memory_Write,w
  9113  09E0  07A1               	addwf	Flash_Memory_Write@i,f
  9114  09E1  3020               	movlw	32
  9115  09E2  0221               	subwf	Flash_Memory_Write@i,w
  9116  09E3  1C03               	skipc
  9117  09E4  29CB               	goto	l4219
  9118  09E5                     l999:	
  9119                           
  9120                           ;MCU_B1.c: 837: }
  9121                           ;MCU_B1.c: 838: LWLO = 0;
  9122  09E5  0023               	movlb	3	; select bank3
  9123  09E6  1295               	bcf	21,5	;volatile
  9124                           
  9125                           ;MCU_B1.c: 839: Flash_Memory_Unlock();
  9126  09E7  3196  260E         	fcall	_Flash_Memory_Unlock
  9127                           
  9128                           ;MCU_B1.c: 840: WREN = 0;
  9129  09E9  0023               	movlb	3	; select bank3
  9130  09EA  1115               	bcf	21,2	;volatile
  9131  09EB  0008               	return
  9132  09EC                     __end_of_Flash_Memory_Write:	
  9133                           
  9134                           	psect	text54
  9135  160E                     __ptext54:	
  9136 ;; *************** function _Flash_Memory_Unlock *****************
  9137 ;; Defined at:
  9138 ;;		line 804 in file "../src/MCU_B1.c"
  9139 ;; Parameters:    Size  Location     Type
  9140 ;;		None
  9141 ;; Auto vars:     Size  Location     Type
  9142 ;;		None
  9143 ;; Return value:  Size  Location     Type
  9144 ;;		None               void
  9145 ;; Registers used:
  9146 ;;		wreg
  9147 ;; Tracked objects:
  9148 ;;		On entry : 0/0
  9149 ;;		On exit  : 0/0
  9150 ;;		Unchanged: 0/0
  9151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9156 ;;Total ram usage:        0 bytes
  9157 ;; Hardware stack levels used:    1
  9158 ;; Hardware stack levels required when called:    5
  9159 ;; This function calls:
  9160 ;;		Nothing
  9161 ;; This function is called by:
  9162 ;;		_Flash_Memory_Write
  9163 ;;		_Flash_Memory_Erasing
  9164 ;; This function uses a non-reentrant model
  9165 ;;
  9166                           
  9167                           
  9168                           ;psect for function _Flash_Memory_Unlock
  9169  160E                     _Flash_Memory_Unlock:	
  9170                           
  9171                           ;MCU_B1.c: 805: PMCON2 = 0x55;
  9172                           
  9173                           ;incstack = 0
  9174                           ; Regs used in _Flash_Memory_Unlock: [wreg]
  9175  160E  3055               	movlw	85
  9176  160F  0023               	movlb	3	; select bank3
  9177  1610  0096               	movwf	22	;volatile
  9178                           
  9179                           ;MCU_B1.c: 806: PMCON2 = 0xaa;
  9180  1611  30AA               	movlw	170
  9181  1612  0096               	movwf	22	;volatile
  9182                           
  9183                           ;MCU_B1.c: 807: WR = 1;
  9184  1613  1495               	bsf	21,1	;volatile
  9185                           
  9186                           ;MCU_B1.c: 808: __nop();
  9187  1614  0000               	nop
  9188                           
  9189                           ;MCU_B1.c: 809: __nop();
  9190  1615  0000               	nop
  9191  1616  0008               	return
  9192  1617                     __end_of_Flash_Memory_Unlock:	
  9193                           
  9194                           	psect	text55
  9195  0808                     __ptext55:	
  9196 ;; *************** function _Flash_Memory_Read *****************
  9197 ;; Defined at:
  9198 ;;		line 813 in file "../src/MCU_B1.c"
  9199 ;; Parameters:    Size  Location     Type
  9200 ;;  address         1    wreg     unsigned char 
  9201 ;; Auto vars:     Size  Location     Type
  9202 ;;  address         1    2[BANK0 ] unsigned char 
  9203 ;;  ret             1    3[BANK0 ] unsigned char 
  9204 ;;  i               1    1[BANK0 ] unsigned char 
  9205 ;; Return value:  Size  Location     Type
  9206 ;;                  1    wreg      unsigned char 
  9207 ;; Registers used:
  9208 ;;		wreg, status,2
  9209 ;; Tracked objects:
  9210 ;;		On entry : 0/0
  9211 ;;		On exit  : 0/0
  9212 ;;		Unchanged: 0/0
  9213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9215 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9216 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9217 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9218 ;;Total ram usage:        4 bytes
  9219 ;; Hardware stack levels used:    1
  9220 ;; Hardware stack levels required when called:    5
  9221 ;; This function calls:
  9222 ;;		Nothing
  9223 ;; This function is called by:
  9224 ;;		_Flash_Memory_Initialization
  9225 ;;		_Flash_Memory_Modify
  9226 ;; This function uses a non-reentrant model
  9227 ;;
  9228                           
  9229                           
  9230                           ;psect for function _Flash_Memory_Read
  9231  0808                     _Flash_Memory_Read:	
  9232                           
  9233                           ;incstack = 0
  9234                           ; Regs used in _Flash_Memory_Read: [wreg+status,2]
  9235                           ;Flash_Memory_Read@address stored from wreg
  9236  0808  0020               	movlb	0	; select bank0
  9237  0809  00A2               	movwf	Flash_Memory_Read@address
  9238                           
  9239                           ;MCU_B1.c: 814: char i = 0, ret = 0;
  9240  080A  01A1               	clrf	Flash_Memory_Read@i
  9241  080B  01A3               	clrf	Flash_Memory_Read@ret
  9242                           
  9243                           ;MCU_B1.c: 815: PMADRH = 0x30;
  9244  080C  3030               	movlw	48
  9245  080D  0023               	movlb	3	; select bank3
  9246  080E  0092               	movwf	18	;volatile
  9247                           
  9248                           ;MCU_B1.c: 816: PMADRL = address;
  9249  080F  0020               	movlb	0	; select bank0
  9250  0810  0822               	movf	Flash_Memory_Read@address,w
  9251  0811  0023               	movlb	3	; select bank3
  9252  0812  0091               	movwf	17	;volatile
  9253                           
  9254                           ;MCU_B1.c: 817: CFGS = 0;
  9255  0813  1315               	bcf	21,6	;volatile
  9256                           
  9257                           ;MCU_B1.c: 818: RD = 1;
  9258  0814  1415               	bsf	21,0	;volatile
  9259                           
  9260                           ;MCU_B1.c: 819: i = PMDATH;
  9261  0815  0814               	movf	20,w	;volatile
  9262  0816  0020               	movlb	0	; select bank0
  9263  0817  00A0               	movwf	??_Flash_Memory_Read
  9264  0818  0820               	movf	??_Flash_Memory_Read,w
  9265  0819  00A1               	movwf	Flash_Memory_Read@i
  9266                           
  9267                           ;MCU_B1.c: 820: ret = PMDATL;
  9268  081A  0023               	movlb	3	; select bank3
  9269  081B  0813               	movf	19,w	;volatile
  9270  081C  0020               	movlb	0	; select bank0
  9271  081D  00A0               	movwf	??_Flash_Memory_Read
  9272  081E  0820               	movf	??_Flash_Memory_Read,w
  9273  081F  00A3               	movwf	Flash_Memory_Read@ret
  9274                           
  9275                           ;MCU_B1.c: 821: return ret;
  9276  0820  0823               	movf	Flash_Memory_Read@ret,w
  9277  0821  0008               	return
  9278  0822                     __end_of_Flash_Memory_Read:	
  9279                           
  9280                           	psect	text56
  9281  1678                     __ptext56:	
  9282 ;; *************** function _DimmerLights_Main *****************
  9283 ;; Defined at:
  9284 ;;		line 407 in file "../src/Dimmer_B1.c"
  9285 ;; Parameters:    Size  Location     Type
  9286 ;;		None
  9287 ;; Auto vars:     Size  Location     Type
  9288 ;;		None
  9289 ;; Return value:  Size  Location     Type
  9290 ;;		None               void
  9291 ;; Registers used:
  9292 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9293 ;; Tracked objects:
  9294 ;;		On entry : 0/0
  9295 ;;		On exit  : 0/0
  9296 ;;		Unchanged: 0/0
  9297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9302 ;;Total ram usage:        0 bytes
  9303 ;; Hardware stack levels used:    1
  9304 ;; Hardware stack levels required when called:    9
  9305 ;; This function calls:
  9306 ;;		_DimmerLights_Close
  9307 ;;		_setDimmerLights_Main
  9308 ;; This function is called by:
  9309 ;;		_main
  9310 ;; This function uses a non-reentrant model
  9311 ;;
  9312                           
  9313                           
  9314                           ;psect for function _DimmerLights_Main
  9315  1678                     _DimmerLights_Main:	
  9316                           
  9317                           ;Dimmer_B1.c: 410: setDimmerLights_Main(1);
  9318                           
  9319                           ;incstack = 0
  9320                           ; Regs used in _DimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9321  1678  3001               	movlw	1
  9322  1679  3186  26EF  3196   	fcall	_setDimmerLights_Main
  9323                           
  9324                           ;Dimmer_B1.c: 414: setDimmerLights_Main(2);
  9325  167C  3002               	movlw	2
  9326  167D  3186  26EF  3196   	fcall	_setDimmerLights_Main
  9327                           
  9328                           ;Dimmer_B1.c: 418: setDimmerLights_Main(3);
  9329  1680  3003               	movlw	3
  9330  1681  3186  26EF  3196   	fcall	_setDimmerLights_Main
  9331                           
  9332                           ;Dimmer_B1.c: 421: DimmerLights_Close();
  9333  1684  3197  275C         	fcall	_DimmerLights_Close
  9334  1686  0008               	return
  9335  1687                     __end_of_DimmerLights_Main:	
  9336                           
  9337                           	psect	text57
  9338  06EF                     __ptext57:	
  9339 ;; *************** function _setDimmerLights_Main *****************
  9340 ;; Defined at:
  9341 ;;		line 425 in file "../src/Dimmer_B1.c"
  9342 ;; Parameters:    Size  Location     Type
  9343 ;;  lights          1    wreg     unsigned char 
  9344 ;; Auto vars:     Size  Location     Type
  9345 ;;  lights          1   18[BANK0 ] unsigned char 
  9346 ;;  clear           1   17[BANK0 ] unsigned char 
  9347 ;; Return value:  Size  Location     Type
  9348 ;;		None               void
  9349 ;; Registers used:
  9350 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9351 ;; Tracked objects:
  9352 ;;		On entry : 0/0
  9353 ;;		On exit  : 0/0
  9354 ;;		Unchanged: 0/0
  9355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9357 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9358 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9359 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9360 ;;Total ram usage:        6 bytes
  9361 ;; Hardware stack levels used:    1
  9362 ;; Hardware stack levels required when called:    8
  9363 ;; This function calls:
  9364 ;;		_DimmerLightsPointSelect
  9365 ;;		_setBuz
  9366 ;;		_setDimmerLights
  9367 ;;		_setDimmerLights_Adj
  9368 ;; This function is called by:
  9369 ;;		_DimmerLights_Main
  9370 ;; This function uses a non-reentrant model
  9371 ;;
  9372                           
  9373                           
  9374                           ;psect for function _setDimmerLights_Main
  9375  06EF                     _setDimmerLights_Main:	
  9376                           
  9377                           ;incstack = 0
  9378                           ; Regs used in _setDimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9379                           ;setDimmerLights_Main@lights stored from wreg
  9380  06EF  0020               	movlb	0	; select bank0
  9381  06F0  00B2               	movwf	setDimmerLights_Main@lights
  9382                           
  9383                           ;Dimmer_B1.c: 426: char clear = 1;
  9384  06F1  01B1               	clrf	setDimmerLights_Main@clear
  9385  06F2  0AB1               	incf	setDimmerLights_Main@clear,f
  9386                           
  9387                           ;Dimmer_B1.c: 427: DimmerLightsPointSelect(lights);
  9388  06F3  0832               	movf	setDimmerLights_Main@lights,w
  9389  06F4  3188  203C  3186   	fcall	_DimmerLightsPointSelect
  9390                           
  9391                           ;Dimmer_B1.c: 430: if (lights == 1) {
  9392  06F7  0020               	movlb	0	; select bank0
  9393  06F8  0832               	movf	setDimmerLights_Main@lights,w
  9394  06F9  3A01               	xorlw	1
  9395  06FA  1D03               	skipz
  9396  06FB  2F07               	goto	l4629
  9397                           
  9398                           ;Dimmer_B1.c: 431: clear = (DimmerLights2.Clear == 0 || DimmerLights3.Clear == 0) ? 0 : 
      +                          1;
  9399  06FC  01AE               	clrf	_setDimmerLights_Main$1671
  9400  06FD  0021               	movlb	1	; select bank1
  9401  06FE  1938               	btfsc	(_DimmerLights2^(0+128)+9),2
  9402  06FF  1D47               	btfss	(_DimmerLights3^(0+128)+9),2
  9403  0700  2F04               	goto	l4627
  9404  0701  0020               	movlb	0	; select bank0
  9405  0702  01AE               	clrf	_setDimmerLights_Main$1671
  9406  0703  0AAE               	incf	_setDimmerLights_Main$1671,f
  9407  0704                     l4627:	
  9408  0704  0020               	movlb	0	; select bank0
  9409  0705  082E               	movf	_setDimmerLights_Main$1671,w
  9410  0706  2F24               	goto	L7
  9411  0707                     l4629:	
  9412                           ;Dimmer_B1.c: 432: } else if (lights == 2) {
  9413                           
  9414  0707  0832               	movf	setDimmerLights_Main@lights,w
  9415  0708  3A02               	xorlw	2
  9416  0709  1D03               	skipz
  9417  070A  2F16               	goto	l4641
  9418                           
  9419                           ;Dimmer_B1.c: 433: clear = (DimmerLights1.Clear == 0 || DimmerLights3.Clear == 0) ? 0 : 
      +                          1;
  9420  070B  01AF               	clrf	_setDimmerLights_Main$1672
  9421  070C  0021               	movlb	1	; select bank1
  9422  070D  1929               	btfsc	(_DimmerLights1^(0+128)+9),2
  9423  070E  1D47               	btfss	(_DimmerLights3^(0+128)+9),2
  9424  070F  2F13               	goto	l4639
  9425  0710  0020               	movlb	0	; select bank0
  9426  0711  01AF               	clrf	_setDimmerLights_Main$1672
  9427  0712  0AAF               	incf	_setDimmerLights_Main$1672,f
  9428  0713                     l4639:	
  9429  0713  0020               	movlb	0	; select bank0
  9430  0714  082F               	movf	_setDimmerLights_Main$1672,w
  9431  0715  2F24               	goto	L7
  9432  0716                     l4641:	
  9433                           ;Dimmer_B1.c: 434: } else if (lights == 3) {
  9434                           
  9435  0716  0832               	movf	setDimmerLights_Main@lights,w
  9436  0717  3A03               	xorlw	3
  9437  0718  1D03               	skipz
  9438  0719  2F27               	goto	l4653
  9439                           
  9440                           ;Dimmer_B1.c: 435: clear = (DimmerLights1.Clear == 0 || DimmerLights2.Clear == 0) ? 0 : 
      +                          1;
  9441  071A  01B0               	clrf	_setDimmerLights_Main$1673
  9442  071B  0021               	movlb	1	; select bank1
  9443  071C  1929               	btfsc	(_DimmerLights1^(0+128)+9),2
  9444  071D  1D38               	btfss	(_DimmerLights2^(0+128)+9),2
  9445  071E  2F22               	goto	l4651
  9446  071F  0020               	movlb	0	; select bank0
  9447  0720  01B0               	clrf	_setDimmerLights_Main$1673
  9448  0721  0AB0               	incf	_setDimmerLights_Main$1673,f
  9449  0722                     l4651:	
  9450  0722  0020               	movlb	0	; select bank0
  9451  0723  0830               	movf	_setDimmerLights_Main$1673,w
  9452  0724                     L7:	
  9453  0724  00AD               	movwf	??_setDimmerLights_Main
  9454  0725  082D               	movf	??_setDimmerLights_Main,w
  9455  0726  00B1               	movwf	setDimmerLights_Main@clear
  9456  0727                     l4653:	
  9457                           
  9458                           ;Dimmer_B1.c: 436: }
  9459                           ;Dimmer_B1.c: 447: if (DimmerLights->Trigger == 1) {
  9460  0727  0858               	movf	_DimmerLights,w
  9461  0728  3E08               	addlw	8
  9462  0729  0086               	movwf	6
  9463  072A  0187               	clrf	7
  9464  072B  1D01               	btfss	1,2
  9465  072C  2F48               	goto	l4663
  9466                           
  9467                           ;Dimmer_B1.c: 448: if (clear == 1) {
  9468  072D  0831               	movf	setDimmerLights_Main@clear,w
  9469  072E  3A01               	xorlw	1
  9470  072F  1D03               	skipz
  9471  0730  0008               	return
  9472                           
  9473                           ;Dimmer_B1.c: 449: DimmerLights->Trigger = 0;
  9474  0731  0858               	movf	_DimmerLights,w
  9475  0732  3E08               	addlw	8
  9476  0733  0086               	movwf	6
  9477  0734  0187               	clrf	7
  9478  0735  1101               	bcf	1,2
  9479                           
  9480                           ;Dimmer_B1.c: 450: if (DimmerLights->Switch == 1) {
  9481  0736  0858               	movf	_DimmerLights,w
  9482  0737  3E08               	addlw	8
  9483  0738  0086               	movwf	6
  9484  0739  0187               	clrf	7
  9485  073A  1C81               	btfss	1,1
  9486  073B  2F42               	goto	l4661
  9487                           
  9488                           ;Dimmer_B1.c: 451: setDimmerLights(lights, 1);
  9489  073C  01A4               	clrf	setDimmerLights@status
  9490  073D  0AA4               	incf	setDimmerLights@status,f
  9491  073E  0832               	movf	setDimmerLights_Main@lights,w
  9492  073F  318F  2720         	fcall	_setDimmerLights
  9493                           
  9494                           ;Dimmer_B1.c: 452: } else {
  9495  0741  0008               	return
  9496  0742                     l4661:	
  9497                           
  9498                           ;Dimmer_B1.c: 453: setDimmerLights(lights, 0);
  9499  0742  0020               	movlb	0	; select bank0
  9500  0743  01A4               	clrf	setDimmerLights@status
  9501  0744  0832               	movf	setDimmerLights_Main@lights,w
  9502  0745  318F  2720         	fcall	_setDimmerLights
  9503                           
  9504                           ;Dimmer_B1.c: 454: }
  9505                           ;Dimmer_B1.c: 458: }
  9506                           ;Dimmer_B1.c: 459: } else {
  9507  0747  0008               	return
  9508  0748                     l4663:	
  9509                           
  9510                           ;Dimmer_B1.c: 460: if (DimmerLights->TriggerAdj == 1) {
  9511  0748  0020               	movlb	0	; select bank0
  9512  0749  0858               	movf	_DimmerLights,w
  9513  074A  3E08               	addlw	8
  9514  074B  0086               	movwf	6
  9515  074C  0187               	clrf	7
  9516  074D  1E01               	btfss	1,4
  9517  074E  0008               	return
  9518                           
  9519                           ;Dimmer_B1.c: 461: if (clear == 1) {
  9520  074F  0831               	movf	setDimmerLights_Main@clear,w
  9521  0750  3A01               	xorlw	1
  9522  0751  1D03               	skipz
  9523  0752  0008               	return
  9524                           
  9525                           ;Dimmer_B1.c: 462: DimmerLights->TriggerAdj = 0;
  9526  0753  0858               	movf	_DimmerLights,w
  9527  0754  3E08               	addlw	8
  9528  0755  0086               	movwf	6
  9529  0756  0187               	clrf	7
  9530  0757  1201               	bcf	1,4
  9531                           
  9532                           ;Dimmer_B1.c: 463: if (DimmerLights->AdjGo == 1) {
  9533  0758  0858               	movf	_DimmerLights,w
  9534  0759  3E08               	addlw	8
  9535  075A  0086               	movwf	6
  9536  075B  0187               	clrf	7
  9537  075C  1D81               	btfss	1,3
  9538  075D  2F6D               	goto	l4671
  9539                           
  9540                           ;Dimmer_B1.c: 464: setDimmerLights_Adj(lights, 1);
  9541  075E  01A2               	clrf	setDimmerLights_Adj@status
  9542  075F  0AA2               	incf	setDimmerLights_Adj@status,f
  9543  0760  0832               	movf	setDimmerLights_Main@lights,w
  9544  0761  3189  218D  3186   	fcall	_setDimmerLights_Adj
  9545                           
  9546                           ;Dimmer_B1.c: 465: setBuz(1, 100);
  9547  0764  3064               	movlw	100
  9548  0765  0020               	movlb	0	; select bank0
  9549  0766  00A9               	movwf	setBuz@time
  9550  0767  3000               	movlw	0
  9551  0768  00AA               	movwf	setBuz@time+1
  9552  0769  3001               	movlw	1
  9553  076A  3187  2773         	fcall	_setBuz
  9554                           
  9555                           ;Dimmer_B1.c: 466: } else {
  9556  076C  0008               	return
  9557  076D                     l4671:	
  9558                           
  9559                           ;Dimmer_B1.c: 467: setDimmerLights_Adj(lights, 0);
  9560  076D  0020               	movlb	0	; select bank0
  9561  076E  01A2               	clrf	setDimmerLights_Adj@status
  9562  076F  0832               	movf	setDimmerLights_Main@lights,w
  9563  0770  3189  218D         	fcall	_setDimmerLights_Adj
  9564  0772  0008               	return
  9565  0773                     __end_of_setDimmerLights_Main:	
  9566                           
  9567                           	psect	text58
  9568  098D                     __ptext58:	
  9569 ;; *************** function _setDimmerLights_Adj *****************
  9570 ;; Defined at:
  9571 ;;		line 646 in file "../src/Dimmer_B1.c"
  9572 ;; Parameters:    Size  Location     Type
  9573 ;;  lights          1    wreg     unsigned char 
  9574 ;;  status          1    2[BANK0 ] unsigned char 
  9575 ;; Auto vars:     Size  Location     Type
  9576 ;;  lights          1    4[BANK0 ] unsigned char 
  9577 ;; Return value:  Size  Location     Type
  9578 ;;		None               void
  9579 ;; Registers used:
  9580 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9581 ;; Tracked objects:
  9582 ;;		On entry : 0/0
  9583 ;;		On exit  : 0/0
  9584 ;;		Unchanged: 0/0
  9585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9586 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9587 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9588 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9589 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9590 ;;Total ram usage:        3 bytes
  9591 ;; Hardware stack levels used:    1
  9592 ;; Hardware stack levels required when called:    6
  9593 ;; This function calls:
  9594 ;;		_DimmerLightsPointSelect
  9595 ;; This function is called by:
  9596 ;;		_setDimmerLights_Main
  9597 ;; This function uses a non-reentrant model
  9598 ;;
  9599                           
  9600                           
  9601                           ;psect for function _setDimmerLights_Adj
  9602  098D                     _setDimmerLights_Adj:	
  9603                           
  9604                           ;incstack = 0
  9605                           ; Regs used in _setDimmerLights_Adj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9606                           ;setDimmerLights_Adj@lights stored from wreg
  9607  098D  0020               	movlb	0	; select bank0
  9608  098E  00A4               	movwf	setDimmerLights_Adj@lights
  9609                           
  9610                           ;Dimmer_B1.c: 647: DimmerLightsPointSelect(lights);
  9611  098F  0824               	movf	setDimmerLights_Adj@lights,w
  9612  0990  3188  203C  3189   	fcall	_DimmerLightsPointSelect
  9613                           
  9614                           ;Dimmer_B1.c: 648: if (status == 1) {
  9615  0993  0020               	movlb	0	; select bank0
  9616  0994  0822               	movf	setDimmerLights_Adj@status,w
  9617  0995  3A01               	xorlw	1
  9618  0996  1D03               	skipz
  9619  0997  29A1               	goto	l4177
  9620                           
  9621                           ;Dimmer_B1.c: 649: DimmerLights->AdjFlag = 1;
  9622  0998  0858               	movf	_DimmerLights,w
  9623  0999  0086               	movwf	6
  9624  099A  0187               	clrf	7
  9625  099B  1581               	bsf	1,3
  9626                           
  9627                           ;Dimmer_B1.c: 650: DimmerLights->Signal = 1;
  9628  099C  0858               	movf	_DimmerLights,w
  9629  099D  0086               	movwf	6
  9630  099E  0187               	clrf	7
  9631  099F  1481               	bsf	1,1
  9632                           
  9633                           ;Dimmer_B1.c: 651: } else {
  9634  09A0  0008               	return
  9635  09A1                     l4177:	
  9636                           
  9637                           ;Dimmer_B1.c: 652: if (DimmerLights->AdjFlag == 1) {
  9638  09A1  0858               	movf	_DimmerLights,w
  9639  09A2  0086               	movwf	6
  9640  09A3  0187               	clrf	7
  9641  09A4  1D81               	btfss	1,3
  9642  09A5  0008               	return
  9643                           
  9644                           ;Dimmer_B1.c: 654: DimmerLights->Signal = 0;
  9645  09A6  0858               	movf	_DimmerLights,w
  9646  09A7  0086               	movwf	6
  9647  09A8  0187               	clrf	7
  9648  09A9  1081               	bcf	1,1
  9649                           
  9650                           ;Dimmer_B1.c: 655: DimmerLights->AdjFlag = 0;
  9651  09AA  0858               	movf	_DimmerLights,w
  9652  09AB  0086               	movwf	6
  9653  09AC  0187               	clrf	7
  9654  09AD  1181               	bcf	1,3
  9655                           
  9656                           ;Dimmer_B1.c: 656: ;;
  9657                           ;Dimmer_B1.c: 657: DimmerLights->MaxmumValue = DimmerLights->DimmingValue;
  9658  09AE  0858               	movf	_DimmerLights,w
  9659  09AF  3E04               	addlw	4
  9660  09B0  0086               	movwf	6
  9661  09B1  0187               	clrf	7
  9662  09B2  0801               	movf	1,w
  9663  09B3  00A3               	movwf	??_setDimmerLights_Adj
  9664  09B4  0858               	movf	_DimmerLights,w
  9665  09B5  3E05               	addlw	5
  9666  09B6  0086               	movwf	6
  9667  09B7  0187               	clrf	7
  9668  09B8  0823               	movf	??_setDimmerLights_Adj,w
  9669  09B9  0081               	movwf	1
  9670                           
  9671                           ;Dimmer_B1.c: 665: ;;
  9672                           ;Dimmer_B1.c: 666: ;;
  9673  09BA  0008               	return
  9674  09BB                     __end_of_setDimmerLights_Adj:	
  9675                           
  9676                           	psect	text59
  9677  0F20                     __ptext59:	
  9678 ;; *************** function _setDimmerLights *****************
  9679 ;; Defined at:
  9680 ;;		line 593 in file "../src/Dimmer_B1.c"
  9681 ;; Parameters:    Size  Location     Type
  9682 ;;  lights          1    wreg     unsigned char 
  9683 ;;  status          1    4[BANK0 ] unsigned char 
  9684 ;; Auto vars:     Size  Location     Type
  9685 ;;  lights          1    6[BANK0 ] unsigned char 
  9686 ;; Return value:  Size  Location     Type
  9687 ;;		None               void
  9688 ;; Registers used:
  9689 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9690 ;; Tracked objects:
  9691 ;;		On entry : 0/0
  9692 ;;		On exit  : 0/0
  9693 ;;		Unchanged: 0/0
  9694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9695 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9696 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9697 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9698 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9699 ;;Total ram usage:        3 bytes
  9700 ;; Hardware stack levels used:    1
  9701 ;; Hardware stack levels required when called:    7
  9702 ;; This function calls:
  9703 ;;		_DimmerLightsPointSelect
  9704 ;;		_setLED
  9705 ;;		_setMemory_GO
  9706 ;; This function is called by:
  9707 ;;		_setDimmerLights_Main
  9708 ;; This function uses a non-reentrant model
  9709 ;;
  9710                           
  9711                           
  9712                           ;psect for function _setDimmerLights
  9713  0F20                     _setDimmerLights:	
  9714                           
  9715                           ;incstack = 0
  9716                           ; Regs used in _setDimmerLights: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9717                           ;setDimmerLights@lights stored from wreg
  9718  0F20  0020               	movlb	0	; select bank0
  9719  0F21  00A6               	movwf	setDimmerLights@lights
  9720                           
  9721                           ;Dimmer_B1.c: 594: DimmerLightsPointSelect(lights);
  9722  0F22  0826               	movf	setDimmerLights@lights,w
  9723  0F23  3188  203C  318F   	fcall	_DimmerLightsPointSelect
  9724                           
  9725                           ;Dimmer_B1.c: 595: Dimmer->Load = lights;
  9726  0F26  0020               	movlb	0	; select bank0
  9727  0F27  0826               	movf	setDimmerLights@lights,w
  9728  0F28  00A5               	movwf	??_setDimmerLights
  9729  0F29  0A57               	incf	_Dimmer,w
  9730  0F2A  0086               	movwf	6
  9731  0F2B  0187               	clrf	7
  9732  0F2C  0825               	movf	??_setDimmerLights,w
  9733  0F2D  0081               	movwf	1
  9734                           
  9735                           ;Dimmer_B1.c: 596: if (status == 1) {
  9736  0F2E  0824               	movf	setDimmerLights@status,w
  9737  0F2F  3A01               	xorlw	1
  9738  0F30  1D03               	skipz
  9739  0F31  2F6A               	goto	l4169
  9740                           
  9741                           ;Dimmer_B1.c: 597: DimmerLights->Status = 1;
  9742  0F32  0858               	movf	_DimmerLights,w
  9743  0F33  0086               	movwf	6
  9744  0F34  0187               	clrf	7
  9745  0F35  1681               	bsf	1,5
  9746                           
  9747                           ;Dimmer_B1.c: 598: setLED(lights, 0);
  9748  0F36  01A2               	clrf	setLED@command
  9749  0F37  0826               	movf	setDimmerLights@lights,w
  9750  0F38  318E  2645  318F   	fcall	_setLED
  9751                           
  9752                           ;Dimmer_B1.c: 600: ;;
  9753                           ;Dimmer_B1.c: 602: DimmerLights->Signal = 1;
  9754  0F3B  0020               	movlb	0	; select bank0
  9755  0F3C  0858               	movf	_DimmerLights,w
  9756  0F3D  0086               	movwf	6
  9757  0F3E  0187               	clrf	7
  9758  0F3F  1481               	bsf	1,1
  9759                           
  9760                           ;Dimmer_B1.c: 603: DimmerLights->DimmingTimeValue = 7;
  9761  0F40  3007               	movlw	7
  9762  0F41  00A5               	movwf	??_setDimmerLights
  9763  0F42  0858               	movf	_DimmerLights,w
  9764  0F43  3E02               	addlw	2
  9765  0F44  0086               	movwf	6
  9766  0F45  0187               	clrf	7
  9767  0F46  0825               	movf	??_setDimmerLights,w
  9768  0F47  0081               	movwf	1
  9769                           
  9770                           ;Dimmer_B1.c: 605: if (DimmerLights->StatusFlag == 0) {
  9771  0F48  0858               	movf	_DimmerLights,w
  9772  0F49  0086               	movwf	6
  9773  0F4A  0187               	clrf	7
  9774  0F4B  1B01               	btfsc	1,6
  9775  0F4C  0008               	return
  9776                           
  9777                           ;Dimmer_B1.c: 606: DimmerLights->StatusFlag = 1;
  9778  0F4D  0858               	movf	_DimmerLights,w
  9779  0F4E  0086               	movwf	6
  9780  0F4F  0187               	clrf	7
  9781  0F50  1701               	bsf	1,6
  9782                           
  9783                           ;Dimmer_B1.c: 607: ;;
  9784                           ;Dimmer_B1.c: 608: setMemory_GO(0);
  9785  0F51  3000               	movlw	0
  9786  0F52  3188  2057         	fcall	_setMemory_GO
  9787                           
  9788                           ;Dimmer_B1.c: 611: DimmerLights->DimmingValue = DimmerLights->MaxmumValue;
  9789  0F54  0020               	movlb	0	; select bank0
  9790  0F55  0858               	movf	_DimmerLights,w
  9791  0F56  3E05               	addlw	5
  9792  0F57  0086               	movwf	6
  9793  0F58  0187               	clrf	7
  9794  0F59  0801               	movf	1,w
  9795  0F5A  00A5               	movwf	??_setDimmerLights
  9796  0F5B  0858               	movf	_DimmerLights,w
  9797  0F5C  3E04               	addlw	4
  9798  0F5D  0086               	movwf	6
  9799  0F5E  0187               	clrf	7
  9800  0F5F  0825               	movf	??_setDimmerLights,w
  9801  0F60  0081               	movwf	1
  9802                           
  9803                           ;Dimmer_B1.c: 615: DimmerLights->DimmingValue = ((char)((100-95)*0.8));
  9804  0F61  3004               	movlw	4
  9805  0F62  00A5               	movwf	??_setDimmerLights
  9806  0F63  0858               	movf	_DimmerLights,w
  9807  0F64  3E04               	addlw	4
  9808  0F65  0086               	movwf	6
  9809  0F66  0187               	clrf	7
  9810  0F67  0825               	movf	??_setDimmerLights,w
  9811  0F68  0081               	movwf	1
  9812                           
  9813                           ;Dimmer_B1.c: 617: }
  9814                           ;Dimmer_B1.c: 618: } else {
  9815  0F69  0008               	return
  9816  0F6A                     l4169:	
  9817                           
  9818                           ;Dimmer_B1.c: 619: DimmerLights->Status = 0;
  9819  0F6A  0858               	movf	_DimmerLights,w
  9820  0F6B  0086               	movwf	6
  9821  0F6C  0187               	clrf	7
  9822  0F6D  1281               	bcf	1,5
  9823                           
  9824                           ;Dimmer_B1.c: 621: DimmerLights->DimmingValue = DimmerLights->MinimumValue;
  9825  0F6E  0858               	movf	_DimmerLights,w
  9826  0F6F  3E06               	addlw	6
  9827  0F70  0086               	movwf	6
  9828  0F71  0187               	clrf	7
  9829  0F72  0801               	movf	1,w
  9830  0F73  00A5               	movwf	??_setDimmerLights
  9831  0F74  0858               	movf	_DimmerLights,w
  9832  0F75  3E04               	addlw	4
  9833  0F76  0086               	movwf	6
  9834  0F77  0187               	clrf	7
  9835  0F78  0825               	movf	??_setDimmerLights,w
  9836  0F79  0081               	movwf	1
  9837                           
  9838                           ;Dimmer_B1.c: 628: DimmerLights->Signal = 1;
  9839  0F7A  0858               	movf	_DimmerLights,w
  9840  0F7B  0086               	movwf	6
  9841  0F7C  0187               	clrf	7
  9842  0F7D  1481               	bsf	1,1
  9843                           
  9844                           ;Dimmer_B1.c: 629: DimmerLights->AdjFlag = 0;
  9845  0F7E  0858               	movf	_DimmerLights,w
  9846  0F7F  0086               	movwf	6
  9847  0F80  0187               	clrf	7
  9848  0F81  1181               	bcf	1,3
  9849                           
  9850                           ;Dimmer_B1.c: 630: DimmerLights->AdjStatus = 0;
  9851  0F82  0858               	movf	_DimmerLights,w
  9852  0F83  0086               	movwf	6
  9853  0F84  0187               	clrf	7
  9854  0F85  1201               	bcf	1,4
  9855                           
  9856                           ;Dimmer_B1.c: 631: DimmerLights->DimmingTimeValue = 7;
  9857  0F86  3007               	movlw	7
  9858  0F87  00A5               	movwf	??_setDimmerLights
  9859  0F88  0858               	movf	_DimmerLights,w
  9860  0F89  3E02               	addlw	2
  9861  0F8A  0086               	movwf	6
  9862  0F8B  0187               	clrf	7
  9863  0F8C  0825               	movf	??_setDimmerLights,w
  9864  0F8D  0081               	movwf	1
  9865  0F8E  0008               	return
  9866  0F8F                     __end_of_setDimmerLights:	
  9867                           
  9868                           	psect	text60
  9869  0E45                     __ptext60:	
  9870 ;; *************** function _setLED *****************
  9871 ;; Defined at:
  9872 ;;		line 74 in file "../src/LED_B1.c"
  9873 ;; Parameters:    Size  Location     Type
  9874 ;;  led             1    wreg     unsigned char 
  9875 ;;  command         1    2[BANK0 ] unsigned char 
  9876 ;; Auto vars:     Size  Location     Type
  9877 ;;  led             1    3[BANK0 ] unsigned char 
  9878 ;; Return value:  Size  Location     Type
  9879 ;;		None               void
  9880 ;; Registers used:
  9881 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9882 ;; Tracked objects:
  9883 ;;		On entry : 0/0
  9884 ;;		On exit  : 0/0
  9885 ;;		Unchanged: 0/0
  9886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9887 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9888 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9890 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9891 ;;Total ram usage:        2 bytes
  9892 ;; Hardware stack levels used:    1
  9893 ;; Hardware stack levels required when called:    6
  9894 ;; This function calls:
  9895 ;;		_LedPointSelect
  9896 ;; This function is called by:
  9897 ;;		_setDimmerLights_ERROR
  9898 ;;		_setDimmerLights
  9899 ;;		_setLED_Initialization
  9900 ;;		_setOverTemp_Exceptions
  9901 ;;		_setSw_Initialization
  9902 ;; This function uses a non-reentrant model
  9903 ;;
  9904                           
  9905                           
  9906                           ;psect for function _setLED
  9907  0E45                     _setLED:	
  9908                           
  9909                           ;incstack = 0
  9910                           ; Regs used in _setLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9911                           ;setLED@led stored from wreg
  9912  0E45  0020               	movlb	0	; select bank0
  9913  0E46  00A3               	movwf	setLED@led
  9914                           
  9915                           ;LED_B1.c: 76: LedPointSelect(led);
  9916  0E47  0823               	movf	setLED@led,w
  9917  0E48  3188  20EF  318E   	fcall	_LedPointSelect
  9918                           
  9919                           ;LED_B1.c: 77: if(command == 0)
  9920  0E4B  0020               	movlb	0	; select bank0
  9921  0E4C  08A2               	movf	setLED@command,f
  9922  0E4D  1D03               	skipz
  9923  0E4E  2E67               	goto	l3885
  9924                           
  9925                           ;LED_B1.c: 78: {
  9926                           ;LED_B1.c: 80: if(led == 1)
  9927  0E4F  0823               	movf	setLED@led,w
  9928  0E50  3A01               	xorlw	1
  9929  0E51  1D03               	skipz
  9930  0E52  2E55               	goto	l3873
  9931                           
  9932                           ;LED_B1.c: 81: {
  9933                           ;LED_B1.c: 85: RC7=1;
  9934  0E53  178E               	bsf	14,7	;volatile
  9935                           
  9936                           ;LED_B1.c: 87: }
  9937  0E54  0008               	return
  9938  0E55                     l3873:	
  9939                           
  9940                           ;LED_B1.c: 90: else if(led == 2)
  9941  0E55  0823               	movf	setLED@led,w
  9942  0E56  3A02               	xorlw	2
  9943  0E57  1D03               	skipz
  9944  0E58  2E5B               	goto	l3877
  9945                           
  9946                           ;LED_B1.c: 91: {
  9947                           ;LED_B1.c: 95: RA3=1;
  9948  0E59  158C               	bsf	12,3	;volatile
  9949                           
  9950                           ;LED_B1.c: 97: }
  9951  0E5A  0008               	return
  9952  0E5B                     l3877:	
  9953                           
  9954                           ;LED_B1.c: 100: else if(led == 3)
  9955  0E5B  0823               	movf	setLED@led,w
  9956  0E5C  3A03               	xorlw	3
  9957  0E5D  1D03               	skipz
  9958  0E5E  2E61               	goto	l3881
  9959                           
  9960                           ;LED_B1.c: 101: {
  9961                           ;LED_B1.c: 105: RC6=1;
  9962  0E5F  170E               	bsf	14,6	;volatile
  9963                           
  9964                           ;LED_B1.c: 107: }
  9965  0E60  0008               	return
  9966  0E61                     l3881:	
  9967                           
  9968                           ;LED_B1.c: 110: else if(led == 99)
  9969  0E61  0823               	movf	setLED@led,w
  9970  0E62  3A63               	xorlw	99
  9971  0E63  1D03               	skipz
  9972  0E64  0008               	return
  9973                           
  9974                           ;LED_B1.c: 111: {
  9975                           ;LED_B1.c: 115: RB5=1;
  9976  0E65  168D               	bsf	13,5	;volatile
  9977                           
  9978                           ;LED_B1.c: 117: }
  9979                           ;LED_B1.c: 119: }
  9980  0E66  0008               	return
  9981  0E67                     l3885:	
  9982                           
  9983                           ;LED_B1.c: 120: else if(command == 1)
  9984  0E67  0822               	movf	setLED@command,w
  9985  0E68  3A01               	xorlw	1
  9986  0E69  1D03               	skipz
  9987  0E6A  2E83               	goto	l3903
  9988                           
  9989                           ;LED_B1.c: 121: {
  9990                           ;LED_B1.c: 123: if(led == 1)
  9991  0E6B  0823               	movf	setLED@led,w
  9992  0E6C  3A01               	xorlw	1
  9993  0E6D  1D03               	skipz
  9994  0E6E  2E71               	goto	l3891
  9995                           
  9996                           ;LED_B1.c: 124: {
  9997                           ;LED_B1.c: 128: RC7=0;
  9998  0E6F  138E               	bcf	14,7	;volatile
  9999                           
 10000                           ;LED_B1.c: 130: }
 10001  0E70  0008               	return
 10002  0E71                     l3891:	
 10003                           
 10004                           ;LED_B1.c: 133: else if(led == 2)
 10005  0E71  0823               	movf	setLED@led,w
 10006  0E72  3A02               	xorlw	2
 10007  0E73  1D03               	skipz
 10008  0E74  2E77               	goto	l3895
 10009                           
 10010                           ;LED_B1.c: 134: {
 10011                           ;LED_B1.c: 138: RA3=0;
 10012  0E75  118C               	bcf	12,3	;volatile
 10013                           
 10014                           ;LED_B1.c: 140: }
 10015  0E76  0008               	return
 10016  0E77                     l3895:	
 10017                           
 10018                           ;LED_B1.c: 143: else if(led == 3)
 10019  0E77  0823               	movf	setLED@led,w
 10020  0E78  3A03               	xorlw	3
 10021  0E79  1D03               	skipz
 10022  0E7A  2E7D               	goto	l3899
 10023                           
 10024                           ;LED_B1.c: 144: {
 10025                           ;LED_B1.c: 148: RC6=0;
 10026  0E7B  130E               	bcf	14,6	;volatile
 10027                           
 10028                           ;LED_B1.c: 150: }
 10029  0E7C  0008               	return
 10030  0E7D                     l3899:	
 10031                           
 10032                           ;LED_B1.c: 153: else if(led == 99)
 10033  0E7D  0823               	movf	setLED@led,w
 10034  0E7E  3A63               	xorlw	99
 10035  0E7F  1D03               	skipz
 10036  0E80  0008               	return
 10037                           
 10038                           ;LED_B1.c: 154: {
 10039                           ;LED_B1.c: 158: RB5=0;
 10040  0E81  128D               	bcf	13,5	;volatile
 10041                           
 10042                           ;LED_B1.c: 160: }
 10043                           ;LED_B1.c: 162: }
 10044  0E82  0008               	return
 10045  0E83                     l3903:	
 10046                           
 10047                           ;LED_B1.c: 163: else if(command == 10)
 10048  0E83  0822               	movf	setLED@command,w
 10049  0E84  3A0A               	xorlw	10
 10050  0E85  1D03               	skipz
 10051  0E86  2EA9               	goto	l3923
 10052                           
 10053                           ;LED_B1.c: 164: {
 10054                           ;LED_B1.c: 165: LED->GO=0;
 10055  0E87  0859               	movf	_LED,w
 10056  0E88  0086               	movwf	6
 10057  0E89  0187               	clrf	7
 10058  0E8A  1081               	bcf	1,1
 10059                           
 10060                           ;LED_B1.c: 166: LED->Time=0;
 10061  0E8B  0A59               	incf	_LED,w
 10062  0E8C  0086               	movwf	6
 10063  0E8D  0187               	clrf	7
 10064  0E8E  3000               	movlw	0
 10065  0E8F  3FC0               	movwi [0]fsr1
 10066  0E90  3FC1               	movwi [1]fsr1
 10067                           
 10068                           ;LED_B1.c: 168: if(led == 1)
 10069  0E91  0823               	movf	setLED@led,w
 10070  0E92  3A01               	xorlw	1
 10071  0E93  1D03               	skipz
 10072  0E94  2E97               	goto	l3911
 10073                           
 10074                           ;LED_B1.c: 169: {
 10075                           ;LED_B1.c: 173: RC7=1;
 10076  0E95  178E               	bsf	14,7	;volatile
 10077                           
 10078                           ;LED_B1.c: 175: }
 10079  0E96  0008               	return
 10080  0E97                     l3911:	
 10081                           
 10082                           ;LED_B1.c: 178: else if(led == 2)
 10083  0E97  0823               	movf	setLED@led,w
 10084  0E98  3A02               	xorlw	2
 10085  0E99  1D03               	skipz
 10086  0E9A  2E9D               	goto	l3915
 10087                           
 10088                           ;LED_B1.c: 179: {
 10089                           ;LED_B1.c: 183: RA3=1;
 10090  0E9B  158C               	bsf	12,3	;volatile
 10091                           
 10092                           ;LED_B1.c: 185: }
 10093  0E9C  0008               	return
 10094  0E9D                     l3915:	
 10095                           
 10096                           ;LED_B1.c: 188: else if(led == 3)
 10097  0E9D  0823               	movf	setLED@led,w
 10098  0E9E  3A03               	xorlw	3
 10099  0E9F  1D03               	skipz
 10100  0EA0  2EA3               	goto	l3919
 10101                           
 10102                           ;LED_B1.c: 189: {
 10103                           ;LED_B1.c: 193: RC6=1;
 10104  0EA1  170E               	bsf	14,6	;volatile
 10105                           
 10106                           ;LED_B1.c: 195: }
 10107  0EA2  0008               	return
 10108  0EA3                     l3919:	
 10109                           
 10110                           ;LED_B1.c: 198: else if(led == 99)
 10111  0EA3  0823               	movf	setLED@led,w
 10112  0EA4  3A63               	xorlw	99
 10113  0EA5  1D03               	skipz
 10114  0EA6  0008               	return
 10115                           
 10116                           ;LED_B1.c: 199: {
 10117                           ;LED_B1.c: 203: RB5=1;
 10118  0EA7  168D               	bsf	13,5	;volatile
 10119                           
 10120                           ;LED_B1.c: 205: }
 10121                           ;LED_B1.c: 207: }
 10122  0EA8  0008               	return
 10123  0EA9                     l3923:	
 10124                           
 10125                           ;LED_B1.c: 208: else if(command == 11)
 10126  0EA9  0822               	movf	setLED@command,w
 10127  0EAA  3A0B               	xorlw	11
 10128  0EAB  1D03               	skipz
 10129  0EAC  0008               	return
 10130                           
 10131                           ;LED_B1.c: 209: {
 10132                           ;LED_B1.c: 210: LED->GO=1;
 10133  0EAD  0859               	movf	_LED,w
 10134  0EAE  0086               	movwf	6
 10135  0EAF  0187               	clrf	7
 10136  0EB0  1481               	bsf	1,1
 10137  0EB1  0008               	return
 10138  0EB2                     __end_of_setLED:	
 10139                           
 10140                           	psect	text61
 10141  08EF                     __ptext61:	
 10142 ;; *************** function _LedPointSelect *****************
 10143 ;; Defined at:
 10144 ;;		line 7 in file "../src/LED_B1.c"
 10145 ;; Parameters:    Size  Location     Type
 10146 ;;  led             1    wreg     unsigned char 
 10147 ;; Auto vars:     Size  Location     Type
 10148 ;;  led             1    1[BANK0 ] unsigned char 
 10149 ;; Return value:  Size  Location     Type
 10150 ;;		None               void
 10151 ;; Registers used:
 10152 ;;		wreg
 10153 ;; Tracked objects:
 10154 ;;		On entry : 0/0
 10155 ;;		On exit  : 0/0
 10156 ;;		Unchanged: 0/0
 10157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10159 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10160 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10161 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10162 ;;Total ram usage:        2 bytes
 10163 ;; Hardware stack levels used:    1
 10164 ;; Hardware stack levels required when called:    5
 10165 ;; This function calls:
 10166 ;;		Nothing
 10167 ;; This function is called by:
 10168 ;;		_setLED_Initialization
 10169 ;;		_setLED
 10170 ;;		_setLED_Main
 10171 ;; This function uses a non-reentrant model
 10172 ;;
 10173                           
 10174                           
 10175                           ;psect for function _LedPointSelect
 10176  08EF                     _LedPointSelect:	
 10177                           
 10178                           ;incstack = 0
 10179                           ; Regs used in _LedPointSelect: [wreg]
 10180                           ;LedPointSelect@led stored from wreg
 10181  08EF  0020               	movlb	0	; select bank0
 10182  08F0  00A1               	movwf	LedPointSelect@led
 10183                           
 10184                           ;LED_B1.c: 10: if(led == 1)
 10185  08F1  0821               	movf	LedPointSelect@led,w
 10186  08F2  3A01               	xorlw	1
 10187  08F3  1D03               	skipz
 10188  08F4  28FA               	goto	l3833
 10189                           
 10190                           ;LED_B1.c: 11: {
 10191                           ;LED_B1.c: 12: LED=&VarLED1;
 10192  08F5  3060               	movlw	_VarLED1& (0+255)
 10193  08F6  00A0               	movwf	??_LedPointSelect
 10194  08F7  0820               	movf	??_LedPointSelect,w
 10195  08F8  00D9               	movwf	_LED
 10196                           
 10197                           ;LED_B1.c: 13: }
 10198  08F9  0008               	return
 10199  08FA                     l3833:	
 10200                           
 10201                           ;LED_B1.c: 16: else if(led == 2)
 10202  08FA  0821               	movf	LedPointSelect@led,w
 10203  08FB  3A02               	xorlw	2
 10204  08FC  1D03               	skipz
 10205  08FD  2903               	goto	l3837
 10206                           
 10207                           ;LED_B1.c: 17: {
 10208                           ;LED_B1.c: 18: LED=&VarLED2;
 10209  08FE  30E1               	movlw	_VarLED2& (0+255)
 10210  08FF  00A0               	movwf	??_LedPointSelect
 10211  0900  0820               	movf	??_LedPointSelect,w
 10212  0901  00D9               	movwf	_LED
 10213                           
 10214                           ;LED_B1.c: 19: }
 10215  0902  0008               	return
 10216  0903                     l3837:	
 10217                           
 10218                           ;LED_B1.c: 22: else if(led == 3)
 10219  0903  0821               	movf	LedPointSelect@led,w
 10220  0904  3A03               	xorlw	3
 10221  0905  1D03               	skipz
 10222  0906  290C               	goto	l3841
 10223                           
 10224                           ;LED_B1.c: 23: {
 10225                           ;LED_B1.c: 24: LED=&VarLED3;
 10226  0907  30E5               	movlw	_VarLED3& (0+255)
 10227  0908  00A0               	movwf	??_LedPointSelect
 10228  0909  0820               	movf	??_LedPointSelect,w
 10229  090A  00D9               	movwf	_LED
 10230                           
 10231                           ;LED_B1.c: 25: }
 10232  090B  0008               	return
 10233  090C                     l3841:	
 10234                           
 10235                           ;LED_B1.c: 28: else if(led == 99)
 10236  090C  0821               	movf	LedPointSelect@led,w
 10237  090D  3A63               	xorlw	99
 10238  090E  1D03               	skipz
 10239  090F  0008               	return
 10240                           
 10241                           ;LED_B1.c: 29: {
 10242                           ;LED_B1.c: 30: LED=&VarErrLED;
 10243  0910  305C               	movlw	_VarErrLED& (0+255)
 10244  0911  00A0               	movwf	??_LedPointSelect
 10245  0912  0820               	movf	??_LedPointSelect,w
 10246  0913  00D9               	movwf	_LED
 10247  0914  0008               	return
 10248  0915                     __end_of_LedPointSelect:	
 10249                           
 10250                           	psect	text62
 10251  0773                     __ptext62:	
 10252 ;; *************** function _setBuz *****************
 10253 ;; Defined at:
 10254 ;;		line 30 in file "../src/Buzzer_B1.c"
 10255 ;; Parameters:    Size  Location     Type
 10256 ;;  count           1    wreg     unsigned char 
 10257 ;;  time            2    9[BANK0 ] int 
 10258 ;; Auto vars:     Size  Location     Type
 10259 ;;  count           1   12[BANK0 ] unsigned char 
 10260 ;; Return value:  Size  Location     Type
 10261 ;;		None               void
 10262 ;; Registers used:
 10263 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10264 ;; Tracked objects:
 10265 ;;		On entry : 0/0
 10266 ;;		On exit  : 0/0
 10267 ;;		Unchanged: 0/0
 10268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10269 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10270 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10271 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10272 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10273 ;;Total ram usage:        4 bytes
 10274 ;; Hardware stack levels used:    1
 10275 ;; Hardware stack levels required when called:    6
 10276 ;; This function calls:
 10277 ;;		___awdiv
 10278 ;; This function is called by:
 10279 ;;		_setDimmerLights_Main
 10280 ;;		_DimmerLights_Exceptions
 10281 ;;		_my_Main
 10282 ;;		_setOverTemp_Exceptions
 10283 ;;		_setSw_Main
 10284 ;;		_Sw_DimmerOnFunc
 10285 ;; This function uses a non-reentrant model
 10286 ;;
 10287                           
 10288                           
 10289                           ;psect for function _setBuz
 10290  0773                     _setBuz:	
 10291                           
 10292                           ;incstack = 0
 10293                           ; Regs used in _setBuz: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10294                           ;setBuz@count stored from wreg
 10295  0773  0020               	movlb	0	; select bank0
 10296  0774  00AC               	movwf	setBuz@count
 10297                           
 10298                           ;Buzzer_B1.c: 31: Buz = &Buz1;
 10299  0775  30CD               	movlw	_Buz1& (0+255)
 10300  0776  00AB               	movwf	??_setBuz
 10301  0777  082B               	movf	??_setBuz,w
 10302  0778  00D6               	movwf	_Buz
 10303                           
 10304                           ;Buzzer_B1.c: 32: time /= 10;
 10305  0779  300A               	movlw	10
 10306  077A  00A0               	movwf	___awdiv@divisor
 10307  077B  3000               	movlw	0
 10308  077C  00A1               	movwf	___awdiv@divisor+1
 10309  077D  082A               	movf	setBuz@time+1,w
 10310  077E  01A3               	clrf	___awdiv@dividend+1
 10311  077F  07A3               	addwf	___awdiv@dividend+1,f
 10312  0780  0829               	movf	setBuz@time,w
 10313  0781  01A2               	clrf	___awdiv@dividend
 10314  0782  07A2               	addwf	___awdiv@dividend,f
 10315  0783  318C  2402  3187   	fcall	___awdiv
 10316  0786  0020               	movlb	0	; select bank0
 10317  0787  0821               	movf	?___awdiv+1,w
 10318  0788  01AA               	clrf	setBuz@time+1
 10319  0789  07AA               	addwf	setBuz@time+1,f
 10320  078A  0820               	movf	?___awdiv,w
 10321  078B  01A9               	clrf	setBuz@time
 10322  078C  07A9               	addwf	setBuz@time,f
 10323                           
 10324                           ;Buzzer_B1.c: 33: if (Buz->Enable == 1) {
 10325  078D  0856               	movf	_Buz,w
 10326  078E  0086               	movwf	6
 10327  078F  0187               	clrf	7
 10328  0790  1C01               	btfss	1,0
 10329  0791  0008               	return
 10330                           
 10331                           ;Buzzer_B1.c: 34: if (Buz->GO == 0) {
 10332  0792  0856               	movf	_Buz,w
 10333  0793  0086               	movwf	6
 10334  0794  0187               	clrf	7
 10335  0795  1881               	btfsc	1,1
 10336  0796  2FB3               	goto	l3987
 10337                           
 10338                           ;Buzzer_B1.c: 35: Buz->GO = 1;
 10339  0797  0856               	movf	_Buz,w
 10340  0798  0086               	movwf	6
 10341  0799  0187               	clrf	7
 10342  079A  1481               	bsf	1,1
 10343                           
 10344                           ;Buzzer_B1.c: 36: Buz->Counter = 0;
 10345  079B  0A56               	incf	_Buz,w
 10346  079C  0086               	movwf	6
 10347  079D  0187               	clrf	7
 10348  079E  3000               	movlw	0
 10349  079F  3FC0               	movwi [0]fsr1
 10350  07A0  3FC1               	movwi [1]fsr1
 10351                           
 10352                           ;Buzzer_B1.c: 37: Buz->Count = count;
 10353  07A1  082C               	movf	setBuz@count,w
 10354  07A2  00AB               	movwf	??_setBuz
 10355  07A3  0856               	movf	_Buz,w
 10356  07A4  3E03               	addlw	3
 10357  07A5  0086               	movwf	6
 10358  07A6  0187               	clrf	7
 10359  07A7  082B               	movf	??_setBuz,w
 10360  07A8  0081               	movwf	1
 10361                           
 10362                           ;Buzzer_B1.c: 38: Buz->TimeValue = time;
 10363  07A9  0856               	movf	_Buz,w
 10364  07AA  3E06               	addlw	6
 10365  07AB  0086               	movwf	6
 10366  07AC  0187               	clrf	7
 10367  07AD  0829               	movf	setBuz@time,w
 10368  07AE  3FC0               	movwi [0]fsr1
 10369  07AF  082A               	movf	setBuz@time+1,w
 10370  07B0  3FC1               	movwi [1]fsr1
 10371                           
 10372                           ;Buzzer_B1.c: 39: RB3 = 1;
 10373  07B1  158D               	bsf	13,3	;volatile
 10374                           
 10375                           ;Buzzer_B1.c: 40: } else {
 10376  07B2  0008               	return
 10377  07B3                     l3987:	
 10378                           
 10379                           ;Buzzer_B1.c: 41: if (Buz->BufferStatus1 == 0) {
 10380  07B3  0856               	movf	_Buz,w
 10381  07B4  0086               	movwf	6
 10382  07B5  0187               	clrf	7
 10383  07B6  1981               	btfsc	1,3
 10384  07B7  2FCD               	goto	l3991
 10385                           
 10386                           ;Buzzer_B1.c: 42: Buz->BufferStatus1 = 1;
 10387  07B8  0856               	movf	_Buz,w
 10388  07B9  0086               	movwf	6
 10389  07BA  0187               	clrf	7
 10390  07BB  1581               	bsf	1,3
 10391                           
 10392                           ;Buzzer_B1.c: 43: Buz->CountBuffer1 = count;
 10393  07BC  082C               	movf	setBuz@count,w
 10394  07BD  00AB               	movwf	??_setBuz
 10395  07BE  0856               	movf	_Buz,w
 10396  07BF  3E04               	addlw	4
 10397  07C0  0086               	movwf	6
 10398  07C1  0187               	clrf	7
 10399  07C2  082B               	movf	??_setBuz,w
 10400  07C3  0081               	movwf	1
 10401                           
 10402                           ;Buzzer_B1.c: 44: Buz->TimeValueBuffer1 = time;
 10403  07C4  0856               	movf	_Buz,w
 10404  07C5  3E08               	addlw	8
 10405  07C6  0086               	movwf	6
 10406  07C7  0187               	clrf	7
 10407  07C8  0829               	movf	setBuz@time,w
 10408  07C9  3FC0               	movwi [0]fsr1
 10409  07CA  082A               	movf	setBuz@time+1,w
 10410  07CB  3FC1               	movwi [1]fsr1
 10411                           
 10412                           ;Buzzer_B1.c: 45: } else if (Buz->BufferStatus2 == 0) {
 10413  07CC  0008               	return
 10414  07CD                     l3991:	
 10415  07CD  0856               	movf	_Buz,w
 10416  07CE  0086               	movwf	6
 10417  07CF  0187               	clrf	7
 10418  07D0  1A01               	btfsc	1,4
 10419  07D1  0008               	return
 10420                           
 10421                           ;Buzzer_B1.c: 46: Buz->BufferStatus2 = 1;
 10422  07D2  0856               	movf	_Buz,w
 10423  07D3  0086               	movwf	6
 10424  07D4  0187               	clrf	7
 10425  07D5  1601               	bsf	1,4
 10426                           
 10427                           ;Buzzer_B1.c: 47: Buz->CountBuffer2 = count;
 10428  07D6  082C               	movf	setBuz@count,w
 10429  07D7  00AB               	movwf	??_setBuz
 10430  07D8  0856               	movf	_Buz,w
 10431  07D9  3E05               	addlw	5
 10432  07DA  0086               	movwf	6
 10433  07DB  0187               	clrf	7
 10434  07DC  082B               	movf	??_setBuz,w
 10435  07DD  0081               	movwf	1
 10436                           
 10437                           ;Buzzer_B1.c: 48: Buz->TimeValueBuffer2 = time;
 10438  07DE  0856               	movf	_Buz,w
 10439  07DF  3E0A               	addlw	10
 10440  07E0  0086               	movwf	6
 10441  07E1  0187               	clrf	7
 10442  07E2  0829               	movf	setBuz@time,w
 10443  07E3  3FC0               	movwi [0]fsr1
 10444  07E4  082A               	movf	setBuz@time+1,w
 10445  07E5  3FC1               	movwi [1]fsr1
 10446  07E6  0008               	return
 10447  07E7                     __end_of_setBuz:	
 10448                           
 10449                           	psect	text63
 10450  0C02                     __ptext63:	
 10451 ;; *************** function ___awdiv *****************
 10452 ;; Defined at:
 10453 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
 10454 ;; Parameters:    Size  Location     Type
 10455 ;;  divisor         2    0[BANK0 ] int 
 10456 ;;  dividend        2    2[BANK0 ] int 
 10457 ;; Auto vars:     Size  Location     Type
 10458 ;;  quotient        2    7[BANK0 ] int 
 10459 ;;  sign            1    6[BANK0 ] unsigned char 
 10460 ;;  counter         1    5[BANK0 ] unsigned char 
 10461 ;; Return value:  Size  Location     Type
 10462 ;;                  2    0[BANK0 ] int 
 10463 ;; Registers used:
 10464 ;;		wreg, status,2, status,0
 10465 ;; Tracked objects:
 10466 ;;		On entry : 0/0
 10467 ;;		On exit  : 0/0
 10468 ;;		Unchanged: 0/0
 10469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10470 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10471 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10472 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10473 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10474 ;;Total ram usage:        9 bytes
 10475 ;; Hardware stack levels used:    1
 10476 ;; Hardware stack levels required when called:    5
 10477 ;; This function calls:
 10478 ;;		Nothing
 10479 ;; This function is called by:
 10480 ;;		_setBuz
 10481 ;; This function uses a non-reentrant model
 10482 ;;
 10483                           
 10484                           
 10485                           ;psect for function ___awdiv
 10486  0C02                     ___awdiv:	
 10487                           
 10488                           ;incstack = 0
 10489                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10490  0C02  0020               	movlb	0	; select bank0
 10491  0C03  01A6               	clrf	___awdiv@sign
 10492  0C04  1FA1               	btfss	___awdiv@divisor+1,7
 10493  0C05  2C0D               	goto	l3939
 10494  0C06  09A0               	comf	___awdiv@divisor,f
 10495  0C07  09A1               	comf	___awdiv@divisor+1,f
 10496  0C08  0AA0               	incf	___awdiv@divisor,f
 10497  0C09  1903               	skipnz
 10498  0C0A  0AA1               	incf	___awdiv@divisor+1,f
 10499  0C0B  01A6               	clrf	___awdiv@sign
 10500  0C0C  0AA6               	incf	___awdiv@sign,f
 10501  0C0D                     l3939:	
 10502  0C0D  1FA3               	btfss	___awdiv@dividend+1,7
 10503  0C0E  2C18               	goto	l3945
 10504  0C0F  09A2               	comf	___awdiv@dividend,f
 10505  0C10  09A3               	comf	___awdiv@dividend+1,f
 10506  0C11  0AA2               	incf	___awdiv@dividend,f
 10507  0C12  1903               	skipnz
 10508  0C13  0AA3               	incf	___awdiv@dividend+1,f
 10509  0C14  3001               	movlw	1
 10510  0C15  00A4               	movwf	??___awdiv
 10511  0C16  0824               	movf	??___awdiv,w
 10512  0C17  06A6               	xorwf	___awdiv@sign,f
 10513  0C18                     l3945:	
 10514  0C18  01A7               	clrf	___awdiv@quotient
 10515  0C19  01A8               	clrf	___awdiv@quotient+1
 10516  0C1A  0821               	movf	___awdiv@divisor+1,w
 10517  0C1B  0420               	iorwf	___awdiv@divisor,w
 10518  0C1C  1903               	skipnz
 10519  0C1D  2C47               	goto	l3967
 10520  0C1E  01A5               	clrf	___awdiv@counter
 10521  0C1F  0AA5               	incf	___awdiv@counter,f
 10522  0C20                     l3955:	
 10523  0C20  1BA1               	btfsc	___awdiv@divisor+1,7
 10524  0C21  2C2C               	goto	l3957
 10525  0C22  3001               	movlw	1
 10526  0C23                     u2825:	
 10527  0C23  35A0               	lslf	___awdiv@divisor,f
 10528  0C24  0DA1               	rlf	___awdiv@divisor+1,f
 10529  0C25  0B89               	decfsz	9,f
 10530  0C26  2C23               	goto	u2825
 10531  0C27  3001               	movlw	1
 10532  0C28  00A4               	movwf	??___awdiv
 10533  0C29  0824               	movf	??___awdiv,w
 10534  0C2A  07A5               	addwf	___awdiv@counter,f
 10535  0C2B  2C20               	goto	l3955
 10536  0C2C                     l3957:	
 10537  0C2C  3001               	movlw	1
 10538  0C2D                     u2845:	
 10539  0C2D  35A7               	lslf	___awdiv@quotient,f
 10540  0C2E  0DA8               	rlf	___awdiv@quotient+1,f
 10541  0C2F  0B89               	decfsz	9,f
 10542  0C30  2C2D               	goto	u2845
 10543  0C31  0821               	movf	___awdiv@divisor+1,w
 10544  0C32  0223               	subwf	___awdiv@dividend+1,w
 10545  0C33  1D03               	skipz
 10546  0C34  2C37               	goto	u2855
 10547  0C35  0820               	movf	___awdiv@divisor,w
 10548  0C36  0222               	subwf	___awdiv@dividend,w
 10549  0C37                     u2855:	
 10550  0C37  1C03               	skipc
 10551  0C38  2C3E               	goto	l3963
 10552  0C39  0820               	movf	___awdiv@divisor,w
 10553  0C3A  02A2               	subwf	___awdiv@dividend,f
 10554  0C3B  0821               	movf	___awdiv@divisor+1,w
 10555  0C3C  3BA3               	subwfb	___awdiv@dividend+1,f
 10556  0C3D  1427               	bsf	___awdiv@quotient,0
 10557  0C3E                     l3963:	
 10558  0C3E  3001               	movlw	1
 10559  0C3F                     u2865:	
 10560  0C3F  36A1               	lsrf	___awdiv@divisor+1,f
 10561  0C40  0CA0               	rrf	___awdiv@divisor,f
 10562  0C41  0B89               	decfsz	9,f
 10563  0C42  2C3F               	goto	u2865
 10564  0C43  3001               	movlw	1
 10565  0C44  02A5               	subwf	___awdiv@counter,f
 10566  0C45  1D03               	btfss	3,2
 10567  0C46  2C2C               	goto	l3957
 10568  0C47                     l3967:	
 10569  0C47  0826               	movf	___awdiv@sign,w
 10570  0C48  1903               	btfsc	3,2
 10571  0C49  2C4F               	goto	l3971
 10572  0C4A  09A7               	comf	___awdiv@quotient,f
 10573  0C4B  09A8               	comf	___awdiv@quotient+1,f
 10574  0C4C  0AA7               	incf	___awdiv@quotient,f
 10575  0C4D  1903               	skipnz
 10576  0C4E  0AA8               	incf	___awdiv@quotient+1,f
 10577  0C4F                     l3971:	
 10578  0C4F  0828               	movf	___awdiv@quotient+1,w
 10579  0C50  01A1               	clrf	?___awdiv+1
 10580  0C51  07A1               	addwf	?___awdiv+1,f
 10581  0C52  0827               	movf	___awdiv@quotient,w
 10582  0C53  01A0               	clrf	?___awdiv
 10583  0C54  07A0               	addwf	?___awdiv,f
 10584  0C55  0008               	return
 10585  0C56                     __end_of___awdiv:	
 10586                           
 10587                           	psect	text64
 10588  175C                     __ptext64:	
 10589 ;; *************** function _DimmerLights_Close *****************
 10590 ;; Defined at:
 10591 ;;		line 396 in file "../src/Dimmer_B1.c"
 10592 ;; Parameters:    Size  Location     Type
 10593 ;;		None
 10594 ;; Auto vars:     Size  Location     Type
 10595 ;;		None
 10596 ;; Return value:  Size  Location     Type
 10597 ;;		None               void
 10598 ;; Registers used:
 10599 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10600 ;; Tracked objects:
 10601 ;;		On entry : 0/0
 10602 ;;		On exit  : 0/0
 10603 ;;		Unchanged: 0/0
 10604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10609 ;;Total ram usage:        0 bytes
 10610 ;; Hardware stack levels used:    1
 10611 ;; Hardware stack levels required when called:    6
 10612 ;; This function calls:
 10613 ;;		_getDimmerLights_StatusFlag
 10614 ;;		_setMemory_GO
 10615 ;; This function is called by:
 10616 ;;		_DimmerLights_Main
 10617 ;; This function uses a non-reentrant model
 10618 ;;
 10619                           
 10620                           
 10621                           ;psect for function _DimmerLights_Close
 10622  175C                     _DimmerLights_Close:	
 10623                           
 10624                           ;Dimmer_B1.c: 397: if (Dimmer->Detect == 1) {
 10625                           
 10626                           ;incstack = 0
 10627                           ; Regs used in _DimmerLights_Close: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10628  175C  0020               	movlb	0	; select bank0
 10629  175D  0857               	movf	_Dimmer,w
 10630  175E  0086               	movwf	6
 10631  175F  0187               	clrf	7
 10632  1760  1C01               	btfss	1,0
 10633  1761  0008               	return
 10634                           
 10635                           ;Dimmer_B1.c: 398: Dimmer->Detect = 0;
 10636  1762  0857               	movf	_Dimmer,w
 10637  1763  0086               	movwf	6
 10638  1764  0187               	clrf	7
 10639  1765  1001               	bcf	1,0
 10640                           
 10641                           ;Dimmer_B1.c: 399: if (getDimmerLights_StatusFlag() == 0) {
 10642  1766  3197  2736  3197   	fcall	_getDimmerLights_StatusFlag
 10643  1769  3800               	iorlw	0
 10644  176A  1D03               	skipz
 10645  176B  0008               	return
 10646                           
 10647                           ;Dimmer_B1.c: 400: ;;
 10648                           ;Dimmer_B1.c: 401: setMemory_GO(1);
 10649  176C  3001               	movlw	1
 10650  176D  3188  2057         	fcall	_setMemory_GO
 10651  176F  0008               	return
 10652  1770                     __end_of_DimmerLights_Close:	
 10653                           
 10654                           	psect	text65
 10655  0857                     __ptext65:	
 10656 ;; *************** function _setMemory_GO *****************
 10657 ;; Defined at:
 10658 ;;		line 882 in file "../src/MCU_B1.c"
 10659 ;; Parameters:    Size  Location     Type
 10660 ;;  command         1    wreg     unsigned char 
 10661 ;; Auto vars:     Size  Location     Type
 10662 ;;  command         1    2[BANK0 ] unsigned char 
 10663 ;; Return value:  Size  Location     Type
 10664 ;;		None               void
 10665 ;; Registers used:
 10666 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10667 ;; Tracked objects:
 10668 ;;		On entry : 0/0
 10669 ;;		On exit  : 0/0
 10670 ;;		Unchanged: 0/0
 10671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10673 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10674 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10675 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10676 ;;Total ram usage:        3 bytes
 10677 ;; Hardware stack levels used:    1
 10678 ;; Hardware stack levels required when called:    5
 10679 ;; This function calls:
 10680 ;;		Nothing
 10681 ;; This function is called by:
 10682 ;;		_DimmerLights_Close
 10683 ;;		_setDimmerLights
 10684 ;; This function uses a non-reentrant model
 10685 ;;
 10686                           
 10687                           
 10688                           ;psect for function _setMemory_GO
 10689  0857                     _setMemory_GO:	
 10690                           
 10691                           ;incstack = 0
 10692                           ; Regs used in _setMemory_GO: [wreg+fsr1l+fsr1h+status,2+status,0]
 10693                           ;setMemory_GO@command stored from wreg
 10694  0857  0020               	movlb	0	; select bank0
 10695  0858  00A2               	movwf	setMemory_GO@command
 10696                           
 10697                           ;MCU_B1.c: 883: Memory->GO = command;
 10698  0859  086C               	movf	_Memory,w
 10699  085A  3E24               	addlw	36
 10700  085B  0086               	movwf	6
 10701  085C  3001               	movlw	1	; select bank2/3
 10702  085D  0087               	movwf	7
 10703  085E  0822               	movf	setMemory_GO@command,w
 10704  085F  1081               	bcf	1,1
 10705  0860  1D03               	skipz
 10706  0861  1481               	bsf	1,1
 10707                           
 10708                           ;MCU_B1.c: 884: if (command == 0) {
 10709  0862  08A2               	movf	setMemory_GO@command,f
 10710  0863  1D03               	skipz
 10711  0864  0008               	return
 10712                           
 10713                           ;MCU_B1.c: 885: Memory->Time = command;
 10714  0865  0822               	movf	setMemory_GO@command,w
 10715  0866  00A0               	movwf	??_setMemory_GO
 10716  0867  01A1               	clrf	??_setMemory_GO+1
 10717  0868  086C               	movf	_Memory,w
 10718  0869  3E22               	addlw	34
 10719  086A  0086               	movwf	6
 10720  086B  3001               	movlw	1	; select bank2/3
 10721  086C  0087               	movwf	7
 10722  086D  0820               	movf	??_setMemory_GO,w
 10723  086E  3FC0               	movwi [0]fsr1
 10724  086F  0821               	movf	??_setMemory_GO+1,w
 10725  0870  3FC1               	movwi [1]fsr1
 10726  0871  0008               	return
 10727  0872                     __end_of_setMemory_GO:	
 10728                           
 10729                           	psect	text66
 10730  1736                     __ptext66:	
 10731 ;; *************** function _getDimmerLights_StatusFlag *****************
 10732 ;; Defined at:
 10733 ;;		line 475 in file "../src/Dimmer_B1.c"
 10734 ;; Parameters:    Size  Location     Type
 10735 ;;		None
 10736 ;; Auto vars:     Size  Location     Type
 10737 ;;  Status          1    1[BANK0 ] unsigned char 
 10738 ;; Return value:  Size  Location     Type
 10739 ;;                  1    wreg      unsigned char 
 10740 ;; Registers used:
 10741 ;;		wreg, status,2
 10742 ;; Tracked objects:
 10743 ;;		On entry : 0/0
 10744 ;;		On exit  : 0/0
 10745 ;;		Unchanged: 0/0
 10746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10748 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10749 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10750 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10751 ;;Total ram usage:        3 bytes
 10752 ;; Hardware stack levels used:    1
 10753 ;; Hardware stack levels required when called:    5
 10754 ;; This function calls:
 10755 ;;		Nothing
 10756 ;; This function is called by:
 10757 ;;		_DimmerLights_Close
 10758 ;;		_DimmerLights_Exceptions
 10759 ;; This function uses a non-reentrant model
 10760 ;;
 10761                           
 10762                           
 10763                           ;psect for function _getDimmerLights_StatusFlag
 10764  1736                     _getDimmerLights_StatusFlag:	
 10765                           
 10766                           ;Dimmer_B1.c: 476: char Status = 0;
 10767                           
 10768                           ;incstack = 0
 10769                           ; Regs used in _getDimmerLights_StatusFlag: [wreg+status,2]
 10770  1736  0020               	movlb	0	; select bank0
 10771  1737  01A1               	clrf	getDimmerLights_StatusFlag@Status
 10772                           
 10773                           ;Dimmer_B1.c: 479: Status = (DimmerLights1.StatusFlag == 1 || DimmerLights2.StatusFlag =
      +                          = 1 || DimmerLights3.StatusFlag == 1) ? 1 : 0;
 10774  1738  01A2               	clrf	_getDimmerLights_StatusFlag$1677
 10775  1739  0AA2               	incf	_getDimmerLights_StatusFlag$1677,f
 10776  173A  0021               	movlb	1	; select bank1
 10777  173B  1F20               	btfss	_DimmerLights1^(0+128),6
 10778  173C  1B2F               	btfsc	_DimmerLights2^(0+128),6
 10779  173D  2F42               	goto	l4007
 10780  173E  1B3E               	btfsc	_DimmerLights3^(0+128),6
 10781  173F  2F42               	goto	l4007
 10782  1740  0020               	movlb	0	; select bank0
 10783  1741  01A2               	clrf	_getDimmerLights_StatusFlag$1677
 10784  1742                     l4007:	
 10785  1742  0020               	movlb	0	; select bank0
 10786  1743  0822               	movf	_getDimmerLights_StatusFlag$1677,w
 10787  1744  00A0               	movwf	??_getDimmerLights_StatusFlag
 10788  1745  0820               	movf	??_getDimmerLights_StatusFlag,w
 10789  1746  00A1               	movwf	getDimmerLights_StatusFlag@Status
 10790                           
 10791                           ;Dimmer_B1.c: 490: return Status;
 10792  1747  0821               	movf	getDimmerLights_StatusFlag@Status,w
 10793  1748  0008               	return
 10794  1749                     __end_of_getDimmerLights_StatusFlag:	
 10795                           
 10796                           	psect	text67
 10797  088F                     __ptext67:	
 10798 ;; *************** function _DimmerLights_Initialization *****************
 10799 ;; Defined at:
 10800 ;;		line 334 in file "../src/Dimmer_B1.c"
 10801 ;; Parameters:    Size  Location     Type
 10802 ;;		None
 10803 ;; Auto vars:     Size  Location     Type
 10804 ;;		None
 10805 ;; Return value:  Size  Location     Type
 10806 ;;		None               void
 10807 ;; Registers used:
 10808 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10809 ;; Tracked objects:
 10810 ;;		On entry : 0/0
 10811 ;;		On exit  : 0/0
 10812 ;;		Unchanged: 0/0
 10813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10816 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10817 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10818 ;;Total ram usage:        1 bytes
 10819 ;; Hardware stack levels used:    1
 10820 ;; Hardware stack levels required when called:    7
 10821 ;; This function calls:
 10822 ;;		_Dimmer_Initialization
 10823 ;;		_setDimmerLights_Initialization
 10824 ;; This function is called by:
 10825 ;;		_main
 10826 ;; This function uses a non-reentrant model
 10827 ;;
 10828                           
 10829                           
 10830                           ;psect for function _DimmerLights_Initialization
 10831  088F                     _DimmerLights_Initialization:	
 10832                           
 10833                           ;Dimmer_B1.c: 337: DimmerLights11 = &DimmerLights1;
 10834                           
 10835                           ;incstack = 0
 10836                           ; Regs used in _DimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 10837  088F  30A0               	movlw	_DimmerLights1& (0+255)
 10838  0890  0020               	movlb	0	; select bank0
 10839  0891  00A4               	movwf	??_DimmerLights_Initialization
 10840  0892  0824               	movf	??_DimmerLights_Initialization,w
 10841  0893  00F8               	movwf	_DimmerLights11
 10842                           
 10843                           ;Dimmer_B1.c: 338: setDimmerLights_Initialization(1);
 10844  0894  3001               	movlw	1
 10845  0895  3189  213C  3188   	fcall	_setDimmerLights_Initialization
 10846                           
 10847                           ;Dimmer_B1.c: 342: DimmerLights22 = &DimmerLights2;
 10848  0898  30AF               	movlw	_DimmerLights2& (0+255)
 10849  0899  0020               	movlb	0	; select bank0
 10850  089A  00A4               	movwf	??_DimmerLights_Initialization
 10851  089B  0824               	movf	??_DimmerLights_Initialization,w
 10852  089C  00F9               	movwf	_DimmerLights22
 10853                           
 10854                           ;Dimmer_B1.c: 343: setDimmerLights_Initialization(2);
 10855  089D  3002               	movlw	2
 10856  089E  3189  213C  3188   	fcall	_setDimmerLights_Initialization
 10857                           
 10858                           ;Dimmer_B1.c: 347: DimmerLights33 = &DimmerLights3;
 10859  08A1  30BE               	movlw	_DimmerLights3& (0+255)
 10860  08A2  0020               	movlb	0	; select bank0
 10861  08A3  00A4               	movwf	??_DimmerLights_Initialization
 10862  08A4  0824               	movf	??_DimmerLights_Initialization,w
 10863  08A5  00FA               	movwf	_DimmerLights33
 10864                           
 10865                           ;Dimmer_B1.c: 348: setDimmerLights_Initialization(3);
 10866  08A6  3003               	movlw	3
 10867  08A7  3189  213C  3188   	fcall	_setDimmerLights_Initialization
 10868                           
 10869                           ;Dimmer_B1.c: 352: Dimmer_Initialization();
 10870  08AA  3195  25E8         	fcall	_Dimmer_Initialization
 10871  08AC  0008               	return
 10872  08AD                     __end_of_DimmerLights_Initialization:	
 10873                           
 10874                           	psect	text68
 10875  093C                     __ptext68:	
 10876 ;; *************** function _setDimmerLights_Initialization *****************
 10877 ;; Defined at:
 10878 ;;		line 357 in file "../src/Dimmer_B1.c"
 10879 ;; Parameters:    Size  Location     Type
 10880 ;;  lights          1    wreg     unsigned char 
 10881 ;; Auto vars:     Size  Location     Type
 10882 ;;  lights          1    3[BANK0 ] unsigned char 
 10883 ;; Return value:  Size  Location     Type
 10884 ;;		None               void
 10885 ;; Registers used:
 10886 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10887 ;; Tracked objects:
 10888 ;;		On entry : 0/0
 10889 ;;		On exit  : 0/0
 10890 ;;		Unchanged: 0/0
 10891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10893 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10894 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10895 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10896 ;;Total ram usage:        2 bytes
 10897 ;; Hardware stack levels used:    1
 10898 ;; Hardware stack levels required when called:    6
 10899 ;; This function calls:
 10900 ;;		_DimmerLightsPointSelect
 10901 ;; This function is called by:
 10902 ;;		_DimmerLights_Initialization
 10903 ;; This function uses a non-reentrant model
 10904 ;;
 10905                           
 10906                           
 10907                           ;psect for function _setDimmerLights_Initialization
 10908  093C                     _setDimmerLights_Initialization:	
 10909                           
 10910                           ;incstack = 0
 10911                           ; Regs used in _setDimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
 10912                           ;setDimmerLights_Initialization@lights stored from wreg
 10913  093C  0020               	movlb	0	; select bank0
 10914  093D  00A3               	movwf	setDimmerLights_Initialization@lights
 10915                           
 10916                           ;Dimmer_B1.c: 359: DimmerLightsPointSelect(lights);
 10917  093E  0823               	movf	setDimmerLights_Initialization@lights,w
 10918  093F  3188  203C         	fcall	_DimmerLightsPointSelect
 10919                           
 10920                           ;Dimmer_B1.c: 360: DimmerLights->Clear = 1;
 10921  0941  0020               	movlb	0	; select bank0
 10922  0942  0858               	movf	_DimmerLights,w
 10923  0943  3E09               	addlw	9
 10924  0944  0086               	movwf	6
 10925  0945  0187               	clrf	7
 10926  0946  1501               	bsf	1,2
 10927                           
 10928                           ;Dimmer_B1.c: 366: DimmerLights->MaxmumValue = ((char)((100-95)*0.8));
 10929  0947  3004               	movlw	4
 10930  0948  00A2               	movwf	??_setDimmerLights_Initialization
 10931  0949  0858               	movf	_DimmerLights,w
 10932  094A  3E05               	addlw	5
 10933  094B  0086               	movwf	6
 10934  094C  0187               	clrf	7
 10935  094D  0822               	movf	??_setDimmerLights_Initialization,w
 10936  094E  0081               	movwf	1
 10937                           
 10938                           ;Dimmer_B1.c: 367: DimmerLights->MinimumValue = ((char)((100-25)*0.8));
 10939  094F  303C               	movlw	60
 10940  0950  00A2               	movwf	??_setDimmerLights_Initialization
 10941  0951  0858               	movf	_DimmerLights,w
 10942  0952  3E06               	addlw	6
 10943  0953  0086               	movwf	6
 10944  0954  0187               	clrf	7
 10945  0955  0822               	movf	??_setDimmerLights_Initialization,w
 10946  0956  0081               	movwf	1
 10947                           
 10948                           ;Dimmer_B1.c: 377: DimmerLights->DimmingValue = DimmerLights->MinimumValue;
 10949  0957  0858               	movf	_DimmerLights,w
 10950  0958  3E06               	addlw	6
 10951  0959  0086               	movwf	6
 10952  095A  0187               	clrf	7
 10953  095B  0801               	movf	1,w
 10954  095C  00A2               	movwf	??_setDimmerLights_Initialization
 10955  095D  0858               	movf	_DimmerLights,w
 10956  095E  3E04               	addlw	4
 10957  095F  0086               	movwf	6
 10958  0960  0187               	clrf	7
 10959  0961  0822               	movf	??_setDimmerLights_Initialization,w
 10960  0962  0081               	movwf	1
 10961  0963  0008               	return
 10962  0964                     __end_of_setDimmerLights_Initialization:	
 10963                           
 10964                           	psect	text69
 10965  083C                     __ptext69:	
 10966 ;; *************** function _DimmerLightsPointSelect *****************
 10967 ;; Defined at:
 10968 ;;		line 315 in file "../src/Dimmer_B1.c"
 10969 ;; Parameters:    Size  Location     Type
 10970 ;;  lights          1    wreg     unsigned char 
 10971 ;; Auto vars:     Size  Location     Type
 10972 ;;  lights          1    1[BANK0 ] unsigned char 
 10973 ;; Return value:  Size  Location     Type
 10974 ;;		None               void
 10975 ;; Registers used:
 10976 ;;		wreg
 10977 ;; Tracked objects:
 10978 ;;		On entry : 0/0
 10979 ;;		On exit  : 0/0
 10980 ;;		Unchanged: 0/0
 10981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10983 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10984 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10985 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10986 ;;Total ram usage:        2 bytes
 10987 ;; Hardware stack levels used:    1
 10988 ;; Hardware stack levels required when called:    5
 10989 ;; This function calls:
 10990 ;;		Nothing
 10991 ;; This function is called by:
 10992 ;;		_setDimmerLights_Initialization
 10993 ;;		_setDimmerLights_Main
 10994 ;;		_setDimmerLights_ERROR
 10995 ;;		_setDimmerLights_TriggerERROR
 10996 ;;		_setDimmerLights
 10997 ;;		_setDimmerLights_Adj
 10998 ;;		_setDimmerLights_Switch
 10999 ;;		_setDimmerLights_AdjGo
 11000 ;;		_setDimmerLights_Trigger
 11001 ;;		_setDimmerLights_TriggerAdj
 11002 ;;		_setDimmerLights_GO
 11003 ;;		_setDimmerLights_AdjRF
 11004 ;;		_setDimmerLights_MaxmumValue
 11005 ;;		_setDimmerLights_Clear
 11006 ;; This function uses a non-reentrant model
 11007 ;;
 11008                           
 11009                           
 11010                           ;psect for function _DimmerLightsPointSelect
 11011  083C                     _DimmerLightsPointSelect:	
 11012                           
 11013                           ;incstack = 0
 11014                           ; Regs used in _DimmerLightsPointSelect: [wreg]
 11015                           ;DimmerLightsPointSelect@lights stored from wreg
 11016  083C  0020               	movlb	0	; select bank0
 11017  083D  00A1               	movwf	DimmerLightsPointSelect@lights
 11018                           
 11019                           ;Dimmer_B1.c: 317: if (lights == 1) {
 11020  083E  0821               	movf	DimmerLightsPointSelect@lights,w
 11021  083F  3A01               	xorlw	1
 11022  0840  1D03               	skipz
 11023  0841  2846               	goto	l472
 11024                           
 11025                           ;Dimmer_B1.c: 318: DimmerLights = &DimmerLights1;
 11026  0842  30A0               	movlw	_DimmerLights1& (0+255)
 11027  0843  00A0               	movwf	??_DimmerLightsPointSelect
 11028  0844  0820               	movf	??_DimmerLightsPointSelect,w
 11029  0845  00D8               	movwf	_DimmerLights
 11030  0846                     l472:	
 11031                           
 11032                           ;Dimmer_B1.c: 319: }
 11033                           ;Dimmer_B1.c: 322: if (lights == 2) {
 11034  0846  0821               	movf	DimmerLightsPointSelect@lights,w
 11035  0847  3A02               	xorlw	2
 11036  0848  1D03               	skipz
 11037  0849  284E               	goto	l473
 11038                           
 11039                           ;Dimmer_B1.c: 323: DimmerLights = &DimmerLights2;
 11040  084A  30AF               	movlw	_DimmerLights2& (0+255)
 11041  084B  00A0               	movwf	??_DimmerLightsPointSelect
 11042  084C  0820               	movf	??_DimmerLightsPointSelect,w
 11043  084D  00D8               	movwf	_DimmerLights
 11044  084E                     l473:	
 11045                           
 11046                           ;Dimmer_B1.c: 324: }
 11047                           ;Dimmer_B1.c: 327: if (lights == 3) {
 11048  084E  0821               	movf	DimmerLightsPointSelect@lights,w
 11049  084F  3A03               	xorlw	3
 11050  0850  1D03               	skipz
 11051  0851  0008               	return
 11052                           
 11053                           ;Dimmer_B1.c: 328: DimmerLights = &DimmerLights3;
 11054  0852  30BE               	movlw	_DimmerLights3& (0+255)
 11055  0853  00A0               	movwf	??_DimmerLightsPointSelect
 11056  0854  0820               	movf	??_DimmerLightsPointSelect,w
 11057  0855  00D8               	movwf	_DimmerLights
 11058  0856  0008               	return
 11059  0857                     __end_of_DimmerLightsPointSelect:	
 11060                           
 11061                           	psect	text70
 11062  15E8                     __ptext70:	
 11063 ;; *************** function _Dimmer_Initialization *****************
 11064 ;; Defined at:
 11065 ;;		line 786 in file "../src/Dimmer_B1.c"
 11066 ;; Parameters:    Size  Location     Type
 11067 ;;		None
 11068 ;; Auto vars:     Size  Location     Type
 11069 ;;		None
 11070 ;; Return value:  Size  Location     Type
 11071 ;;		None               void
 11072 ;; Registers used:
 11073 ;;		wreg
 11074 ;; Tracked objects:
 11075 ;;		On entry : 0/0
 11076 ;;		On exit  : 0/0
 11077 ;;		Unchanged: 0/0
 11078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11081 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11082 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11083 ;;Total ram usage:        1 bytes
 11084 ;; Hardware stack levels used:    1
 11085 ;; Hardware stack levels required when called:    5
 11086 ;; This function calls:
 11087 ;;		Nothing
 11088 ;; This function is called by:
 11089 ;;		_DimmerLights_Initialization
 11090 ;; This function uses a non-reentrant model
 11091 ;;
 11092                           
 11093                           
 11094                           ;psect for function _Dimmer_Initialization
 11095  15E8                     _Dimmer_Initialization:	
 11096                           
 11097                           ;Dimmer_B1.c: 788: Dimmer = &Dimmer1;
 11098                           
 11099                           ;incstack = 0
 11100                           ; Regs used in _Dimmer_Initialization: [wreg]
 11101  15E8  3064               	movlw	_Dimmer1& (0+255)
 11102  15E9  0020               	movlb	0	; select bank0
 11103  15EA  00A0               	movwf	??_Dimmer_Initialization
 11104  15EB  0820               	movf	??_Dimmer_Initialization,w
 11105  15EC  00D7               	movwf	_Dimmer
 11106  15ED  0008               	return
 11107  15EE                     __end_of_Dimmer_Initialization:	
 11108                           
 11109                           	psect	text71
 11110  05CB                     __ptext71:	
 11111 ;; *************** function _Buzzer_Main *****************
 11112 ;; Defined at:
 11113 ;;		line 55 in file "../src/Buzzer_B1.c"
 11114 ;; Parameters:    Size  Location     Type
 11115 ;;		None
 11116 ;; Auto vars:     Size  Location     Type
 11117 ;;		None
 11118 ;; Return value:  Size  Location     Type
 11119 ;;		None               void
 11120 ;; Registers used:
 11121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 11122 ;; Tracked objects:
 11123 ;;		On entry : 0/0
 11124 ;;		On exit  : 0/0
 11125 ;;		Unchanged: 0/0
 11126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11129 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11130 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11131 ;;Total ram usage:        4 bytes
 11132 ;; Hardware stack levels used:    1
 11133 ;; Hardware stack levels required when called:    5
 11134 ;; This function calls:
 11135 ;;		Nothing
 11136 ;; This function is called by:
 11137 ;;		_main
 11138 ;; This function uses a non-reentrant model
 11139 ;;
 11140                           
 11141                           
 11142                           ;psect for function _Buzzer_Main
 11143  05CB                     _Buzzer_Main:	
 11144                           
 11145                           ;Buzzer_B1.c: 56: Buz = &Buz1;
 11146                           
 11147                           ;incstack = 0
 11148                           ; Regs used in _Buzzer_Main: [wreg-fsr1h+status,2+status,0]
 11149  05CB  30CD               	movlw	_Buz1& (0+255)
 11150  05CC  0020               	movlb	0	; select bank0
 11151  05CD  00A0               	movwf	??_Buzzer_Main
 11152  05CE  0820               	movf	??_Buzzer_Main,w
 11153  05CF  00D6               	movwf	_Buz
 11154                           
 11155                           ;Buzzer_B1.c: 57: if (Buz->GO == 1) {
 11156  05D0  0856               	movf	_Buz,w
 11157  05D1  0086               	movwf	6
 11158  05D2  0187               	clrf	7
 11159  05D3  1C81               	btfss	1,1
 11160  05D4  0008               	return
 11161                           
 11162                           ;Buzzer_B1.c: 58: Buz->Counter++;
 11163  05D5  0A56               	incf	_Buz,w
 11164  05D6  0086               	movwf	6
 11165  05D7  0187               	clrf	7
 11166  05D8  3001               	movlw	1
 11167  05D9  0781               	addwf	1,f
 11168  05DA  3141               	addfsr 1,1
 11169  05DB  1803               	skipnc
 11170  05DC  0A81               	incf	1,f
 11171                           
 11172                           ;Buzzer_B1.c: 59: if (Buz->Counter >= Buz->TimeValue) {
 11173  05DD  0856               	movf	_Buz,w
 11174  05DE  3E06               	addlw	6
 11175  05DF  0086               	movwf	6
 11176  05E0  0187               	clrf	7
 11177  05E1  3F40               	moviw [0]fsr1
 11178  05E2  00A0               	movwf	??_Buzzer_Main
 11179  05E3  3F41               	moviw [1]fsr1
 11180  05E4  00A1               	movwf	??_Buzzer_Main+1
 11181  05E5  0A56               	incf	_Buz,w
 11182  05E6  0086               	movwf	6
 11183  05E7  0187               	clrf	7
 11184  05E8  3F40               	moviw [0]fsr1
 11185  05E9  00A2               	movwf	??_Buzzer_Main+2
 11186  05EA  3F41               	moviw [1]fsr1
 11187  05EB  00A3               	movwf	??_Buzzer_Main+3
 11188  05EC  0821               	movf	??_Buzzer_Main+1,w
 11189  05ED  0223               	subwf	??_Buzzer_Main+3,w
 11190  05EE  1D03               	skipz
 11191  05EF  2DF2               	goto	u4615
 11192  05F0  0820               	movf	??_Buzzer_Main,w
 11193  05F1  0222               	subwf	??_Buzzer_Main+2,w
 11194  05F2                     u4615:	
 11195  05F2  1C03               	skipc
 11196  05F3  0008               	return
 11197                           
 11198                           ;Buzzer_B1.c: 60: Buz->Counter = 0;
 11199  05F4  0A56               	incf	_Buz,w
 11200  05F5  0086               	movwf	6
 11201  05F6  0187               	clrf	7
 11202  05F7  3000               	movlw	0
 11203  05F8  3FC0               	movwi [0]fsr1
 11204  05F9  3FC1               	movwi [1]fsr1
 11205                           
 11206                           ;Buzzer_B1.c: 61: Buz->Switch = (RB3 == 1) ? 1 : 0;
 11207  05FA  0856               	movf	_Buz,w
 11208  05FB  0086               	movwf	6
 11209  05FC  0187               	clrf	7
 11210  05FD  1281               	bcf	1,5
 11211  05FE  198D               	btfsc	13,3	;volatile
 11212  05FF  1681               	bsf	1,5
 11213                           
 11214                           ;Buzzer_B1.c: 62: if (Buz->Switch == 0) {
 11215  0600  0020               	movlb	0	; select bank0
 11216  0601  0856               	movf	_Buz,w
 11217  0602  0086               	movwf	6
 11218  0603  0187               	clrf	7
 11219  0604  1A81               	btfsc	1,5
 11220  0605  2E5C               	goto	l4985
 11221                           
 11222                           ;Buzzer_B1.c: 63: if (Buz->Count == 0) {
 11223  0606  0856               	movf	_Buz,w
 11224  0607  3E03               	addlw	3
 11225  0608  0086               	movwf	6
 11226  0609  0187               	clrf	7
 11227  060A  0881               	movf	1,f
 11228  060B  1D03               	skipz
 11229  060C  2E56               	goto	l4981
 11230                           
 11231                           ;Buzzer_B1.c: 64: if (Buz->BufferStatus1 == 1) {
 11232  060D  0856               	movf	_Buz,w
 11233  060E  0086               	movwf	6
 11234  060F  0187               	clrf	7
 11235  0610  1D81               	btfss	1,3
 11236  0611  2E2F               	goto	l4973
 11237                           
 11238                           ;Buzzer_B1.c: 65: Buz->BufferStatus1 = 0;
 11239  0612  0856               	movf	_Buz,w
 11240  0613  0086               	movwf	6
 11241  0614  0187               	clrf	7
 11242  0615  1181               	bcf	1,3
 11243                           
 11244                           ;Buzzer_B1.c: 66: Buz->Count = Buz->CountBuffer1;
 11245  0616  0856               	movf	_Buz,w
 11246  0617  3E04               	addlw	4
 11247  0618  0086               	movwf	6
 11248  0619  0187               	clrf	7
 11249  061A  0801               	movf	1,w
 11250  061B  00A0               	movwf	??_Buzzer_Main
 11251  061C  0856               	movf	_Buz,w
 11252  061D  3E03               	addlw	3
 11253  061E  0086               	movwf	6
 11254  061F  0187               	clrf	7
 11255  0620  0820               	movf	??_Buzzer_Main,w
 11256  0621  0081               	movwf	1
 11257                           
 11258                           ;Buzzer_B1.c: 67: Buz->TimeValue = Buz->TimeValueBuffer1;
 11259  0622  0856               	movf	_Buz,w
 11260  0623  3E08               	addlw	8
 11261  0624  0086               	movwf	6
 11262  0625  0187               	clrf	7
 11263  0626  0856               	movf	_Buz,w
 11264  0627  3E06               	addlw	6
 11265  0628  0084               	movwf	4
 11266  0629  0185               	clrf	5
 11267  062A  3F40               	moviw [0]fsr1
 11268  062B  3F80               	movwi [0]fsr0
 11269  062C  3F41               	moviw [1]fsr1
 11270  062D  3F81               	movwi [1]fsr0
 11271                           
 11272                           ;Buzzer_B1.c: 68: } else if (Buz->BufferStatus2 == 1) {
 11273  062E  0008               	return
 11274  062F                     l4973:	
 11275  062F  0856               	movf	_Buz,w
 11276  0630  0086               	movwf	6
 11277  0631  0187               	clrf	7
 11278  0632  1E01               	btfss	1,4
 11279  0633  2E51               	goto	l4979
 11280                           
 11281                           ;Buzzer_B1.c: 69: Buz->BufferStatus2 = 0;
 11282  0634  0856               	movf	_Buz,w
 11283  0635  0086               	movwf	6
 11284  0636  0187               	clrf	7
 11285  0637  1201               	bcf	1,4
 11286                           
 11287                           ;Buzzer_B1.c: 70: Buz->Count = Buz->CountBuffer2;
 11288  0638  0856               	movf	_Buz,w
 11289  0639  3E05               	addlw	5
 11290  063A  0086               	movwf	6
 11291  063B  0187               	clrf	7
 11292  063C  0801               	movf	1,w
 11293  063D  00A0               	movwf	??_Buzzer_Main
 11294  063E  0856               	movf	_Buz,w
 11295  063F  3E03               	addlw	3
 11296  0640  0086               	movwf	6
 11297  0641  0187               	clrf	7
 11298  0642  0820               	movf	??_Buzzer_Main,w
 11299  0643  0081               	movwf	1
 11300                           
 11301                           ;Buzzer_B1.c: 71: Buz->TimeValue = Buz->TimeValueBuffer2;
 11302  0644  0856               	movf	_Buz,w
 11303  0645  3E0A               	addlw	10
 11304  0646  0086               	movwf	6
 11305  0647  0187               	clrf	7
 11306  0648  0856               	movf	_Buz,w
 11307  0649  3E06               	addlw	6
 11308  064A  0084               	movwf	4
 11309  064B  0185               	clrf	5
 11310  064C  3F40               	moviw [0]fsr1
 11311  064D  3F80               	movwi [0]fsr0
 11312  064E  3F41               	moviw [1]fsr1
 11313  064F  3F81               	movwi [1]fsr0
 11314                           
 11315                           ;Buzzer_B1.c: 72: } else {
 11316  0650  0008               	return
 11317  0651                     l4979:	
 11318                           
 11319                           ;Buzzer_B1.c: 73: Buz->GO = 0;
 11320  0651  0856               	movf	_Buz,w
 11321  0652  0086               	movwf	6
 11322  0653  0187               	clrf	7
 11323  0654  1081               	bcf	1,1
 11324                           
 11325                           ;Buzzer_B1.c: 74: }
 11326                           ;Buzzer_B1.c: 75: } else {
 11327  0655  0008               	return
 11328  0656                     l4981:	
 11329                           
 11330                           ;Buzzer_B1.c: 76: Buz->Switch = 1;
 11331  0656  0856               	movf	_Buz,w
 11332  0657  0086               	movwf	6
 11333  0658  0187               	clrf	7
 11334  0659  1681               	bsf	1,5
 11335                           
 11336                           ;Buzzer_B1.c: 78: RB3 = 1;
 11337  065A  158D               	bsf	13,3	;volatile
 11338                           
 11339                           ;Buzzer_B1.c: 79: }
 11340                           ;Buzzer_B1.c: 80: } else {
 11341  065B  0008               	return
 11342  065C                     l4985:	
 11343                           
 11344                           ;Buzzer_B1.c: 81: Buz->Switch = 0;
 11345  065C  0856               	movf	_Buz,w
 11346  065D  0086               	movwf	6
 11347  065E  0187               	clrf	7
 11348  065F  1281               	bcf	1,5
 11349                           
 11350                           ;Buzzer_B1.c: 83: RB3 = 0;
 11351  0660  118D               	bcf	13,3	;volatile
 11352                           
 11353                           ;Buzzer_B1.c: 85: Buz->Count--;
 11354  0661  0856               	movf	_Buz,w
 11355  0662  3E03               	addlw	3
 11356  0663  0086               	movwf	6
 11357  0664  0187               	clrf	7
 11358  0665  3001               	movlw	1
 11359  0666  0281               	subwf	1,f
 11360  0667  0008               	return
 11361  0668                     __end_of_Buzzer_Main:	
 11362                           
 11363                           	psect	text72
 11364  1617                     __ptext72:	
 11365 ;; *************** function _Buzzer_Initialization *****************
 11366 ;; Defined at:
 11367 ;;		line 11 in file "../src/Buzzer_B1.c"
 11368 ;; Parameters:    Size  Location     Type
 11369 ;;		None
 11370 ;; Auto vars:     Size  Location     Type
 11371 ;;		None
 11372 ;; Return value:  Size  Location     Type
 11373 ;;		None               void
 11374 ;; Registers used:
 11375 ;;		wreg, fsr1l, fsr1h
 11376 ;; Tracked objects:
 11377 ;;		On entry : 0/0
 11378 ;;		On exit  : 0/0
 11379 ;;		Unchanged: 0/0
 11380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11383 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11384 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11385 ;;Total ram usage:        1 bytes
 11386 ;; Hardware stack levels used:    1
 11387 ;; Hardware stack levels required when called:    5
 11388 ;; This function calls:
 11389 ;;		Nothing
 11390 ;; This function is called by:
 11391 ;;		_main
 11392 ;; This function uses a non-reentrant model
 11393 ;;
 11394                           
 11395                           
 11396                           ;psect for function _Buzzer_Initialization
 11397  1617                     _Buzzer_Initialization:	
 11398                           
 11399                           ;Buzzer_B1.c: 12: Buz = &Buz1;
 11400                           
 11401                           ;incstack = 0
 11402                           ; Regs used in _Buzzer_Initialization: [wregfsr1]
 11403  1617  30CD               	movlw	_Buz1& (0+255)
 11404  1618  0020               	movlb	0	; select bank0
 11405  1619  00A0               	movwf	??_Buzzer_Initialization
 11406  161A  0820               	movf	??_Buzzer_Initialization,w
 11407  161B  00D6               	movwf	_Buz
 11408                           
 11409                           ;Buzzer_B1.c: 13: Buz->Enable = 1;
 11410  161C  0856               	movf	_Buz,w
 11411  161D  0086               	movwf	6
 11412  161E  0187               	clrf	7
 11413  161F  1401               	bsf	1,0
 11414  1620  0008               	return
 11415  1621                     __end_of_Buzzer_Initialization:	
 11416                           
 11417                           	psect	intentry
 11418  0004                     __pintentry:	
 11419 ;; *************** function _ISR *****************
 11420 ;; Defined at:
 11421 ;;		line 109 in file "../src/MCU_B1.c"
 11422 ;; Parameters:    Size  Location     Type
 11423 ;;		None
 11424 ;; Auto vars:     Size  Location     Type
 11425 ;;		None
 11426 ;; Return value:  Size  Location     Type
 11427 ;;		None               void
 11428 ;; Registers used:
 11429 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11430 ;; Tracked objects:
 11431 ;;		On entry : 0/0
 11432 ;;		On exit  : 0/0
 11433 ;;		Unchanged: 0/0
 11434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11437 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11438 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11439 ;;Total ram usage:        1 bytes
 11440 ;; Hardware stack levels used:    1
 11441 ;; Hardware stack levels required when called:    4
 11442 ;; This function calls:
 11443 ;;		_INT_ISR
 11444 ;;		_IOC_ISR
 11445 ;;		_TMR0_ISR
 11446 ;; This function is called by:
 11447 ;;		Interrupt level 1
 11448 ;; This function uses a non-reentrant model
 11449 ;;
 11450                           
 11451  0004                     _ISR:	
 11452                           
 11453                           ;incstack = 0
 11454                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11455  0004  147E               	bsf	126,0	;set compiler interrupt flag
 11456  0005  3180               	pagesel	$
 11457  0006  0020               	movlb	0	; select bank0
 11458  0007  087F               	movf	127,w
 11459  0008  00F7               	movwf	??_ISR
 11460                           
 11461                           ;MCU_B1.c: 111: IOC_ISR();
 11462  0009  3197  2702  3180   	fcall	_IOC_ISR
 11463                           
 11464                           ;MCU_B1.c: 113: TMR0_ISR();
 11465  000C  3189  21EC  3180   	fcall	_TMR0_ISR
 11466                           
 11467                           ;MCU_B1.c: 115: ;;
 11468                           ;MCU_B1.c: 119: INT_ISR();
 11469  000F  3196  2600         	fcall	_INT_ISR
 11470  0011  0877               	movf	??_ISR,w
 11471  0012  0020               	movlb	0	; select bank0
 11472  0013  00FF               	movwf	127
 11473  0014  107E               	bcf	126,0	;clear compiler interrupt flag
 11474  0015  0009               	retfie
 11475  0016                     __end_of_ISR:	
 11476                           
 11477                           	psect	text74
 11478  09EC                     __ptext74:	
 11479 ;; *************** function _TMR0_ISR *****************
 11480 ;; Defined at:
 11481 ;;		line 137 in file "../src/MCU_B1.c"
 11482 ;; Parameters:    Size  Location     Type
 11483 ;;		None
 11484 ;; Auto vars:     Size  Location     Type
 11485 ;;		None
 11486 ;; Return value:  Size  Location     Type
 11487 ;;		None               void
 11488 ;; Registers used:
 11489 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11490 ;; Tracked objects:
 11491 ;;		On entry : 0/0
 11492 ;;		On exit  : 0/0
 11493 ;;		Unchanged: 0/0
 11494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11499 ;;Total ram usage:        0 bytes
 11500 ;; Hardware stack levels used:    1
 11501 ;; Hardware stack levels required when called:    2
 11502 ;; This function calls:
 11503 ;;		_setDimmerLights_IntrControl
 11504 ;; This function is called by:
 11505 ;;		_ISR
 11506 ;; This function uses a non-reentrant model
 11507 ;;
 11508                           
 11509                           
 11510                           ;psect for function _TMR0_ISR
 11511  09EC                     _TMR0_ISR:	
 11512                           
 11513                           ;MCU_B1.c: 138: if (TMR0IE == 1 && TMR0IF == 1) {
 11514                           
 11515                           ;incstack = 0
 11516                           ; Regs used in _TMR0_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11517  09EC  1E8B               	btfss	11,5	;volatile
 11518  09ED  0008               	return
 11519  09EE  1D0B               	btfss	11,2	;volatile
 11520  09EF  0008               	return
 11521                           
 11522                           ;MCU_B1.c: 139: TMR0 = (256-190);
 11523  09F0  3042               	movlw	66
 11524  09F1  0020               	movlb	0	; select bank0
 11525  09F2  0095               	movwf	21	;volatile
 11526                           
 11527                           ;MCU_B1.c: 140: TMR0IF = 0;
 11528  09F3  110B               	bcf	11,2	;volatile
 11529                           
 11530                           ;MCU_B1.c: 145: setDimmerLights_IntrControl(1);
 11531  09F4  3001               	movlw	1
 11532  09F5  3180  204C  3189   	fcall	_setDimmerLights_IntrControl
 11533                           
 11534                           ;MCU_B1.c: 150: setDimmerLights_IntrControl(2);
 11535  09F8  3002               	movlw	2
 11536  09F9  3180  204C  3189   	fcall	_setDimmerLights_IntrControl
 11537                           
 11538                           ;MCU_B1.c: 155: setDimmerLights_IntrControl(3);
 11539  09FC  3003               	movlw	3
 11540  09FD  3180  204C  3189   	fcall	_setDimmerLights_IntrControl
 11541                           
 11542                           ;MCU_B1.c: 161: Timer0->Count++;
 11543  0A00  0020               	movlb	0	; select bank0
 11544  0A01  0A69               	incf	_Timer0,w
 11545  0A02  0086               	movwf	6
 11546  0A03  0187               	clrf	7
 11547  0A04  3001               	movlw	1
 11548  0A05  0781               	addwf	1,f
 11549  0A06  3141               	addfsr 1,1
 11550  0A07  1803               	skipnc
 11551  0A08  0A81               	incf	1,f
 11552                           
 11553                           ;MCU_B1.c: 162: if (Timer0->Count == 100) {
 11554  0A09  0A69               	incf	_Timer0,w
 11555  0A0A  0086               	movwf	6
 11556  0A0B  0187               	clrf	7
 11557  0A0C  3F40               	moviw [0]fsr1
 11558  0A0D  3A64               	xorlw	100
 11559  0A0E  1D03               	skipz
 11560  0A0F  2A12               	goto	u472_25
 11561  0A10  3F41               	moviw [1]fsr1
 11562  0A11  3A00               	xorlw	0
 11563  0A12                     u472_25:	
 11564  0A12  1D03               	skipz
 11565  0A13  0008               	return
 11566                           
 11567                           ;MCU_B1.c: 163: Timer0->Count = 0;
 11568  0A14  0A69               	incf	_Timer0,w
 11569  0A15  0086               	movwf	6
 11570  0A16  0187               	clrf	7
 11571  0A17  3000               	movlw	0
 11572  0A18  3FC0               	movwi [0]fsr1
 11573  0A19  3FC1               	movwi [1]fsr1
 11574                           
 11575                           ;MCU_B1.c: 164: myMain->T0_Timerout = 1;
 11576  0A1A  086A               	movf	_myMain,w
 11577  0A1B  0086               	movwf	6
 11578  0A1C  3001               	movlw	1	; select bank2/3
 11579  0A1D  0087               	movwf	7
 11580  0A1E  1481               	bsf	1,1
 11581  0A1F  0008               	return
 11582  0A20                     __end_of_TMR0_ISR:	
 11583                           
 11584                           	psect	text75
 11585  004C                     __ptext75:	
 11586 ;; *************** function _setDimmerLights_IntrControl *****************
 11587 ;; Defined at:
 11588 ;;		line 87 in file "../src/Dimmer_B1.c"
 11589 ;; Parameters:    Size  Location     Type
 11590 ;;  lights          1    wreg     unsigned char 
 11591 ;; Auto vars:     Size  Location     Type
 11592 ;;  lights          1    6[COMMON] unsigned char 
 11593 ;; Return value:  Size  Location     Type
 11594 ;;		None               void
 11595 ;; Registers used:
 11596 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11597 ;; Tracked objects:
 11598 ;;		On entry : 0/0
 11599 ;;		On exit  : 0/0
 11600 ;;		Unchanged: 0/0
 11601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11603 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11604 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11605 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11606 ;;Total ram usage:        5 bytes
 11607 ;; Hardware stack levels used:    1
 11608 ;; Hardware stack levels required when called:    1
 11609 ;; This function calls:
 11610 ;;		_DimmerIntrPointSelect
 11611 ;; This function is called by:
 11612 ;;		_TMR0_ISR
 11613 ;; This function uses a non-reentrant model
 11614 ;;
 11615                           
 11616                           
 11617                           ;psect for function _setDimmerLights_IntrControl
 11618  004C                     _setDimmerLights_IntrControl:	
 11619                           
 11620                           ;incstack = 0
 11621                           ; Regs used in _setDimmerLights_IntrControl: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 11622                           ;setDimmerLights_IntrControl@lights stored from wreg
 11623  004C  00F6               	movwf	setDimmerLights_IntrControl@lights
 11624                           
 11625                           ;Dimmer_B1.c: 89: DimmerIntrPointSelect(lights);
 11626  004D  0876               	movf	setDimmerLights_IntrControl@lights,w
 11627  004E  3197  27E6  3180   	fcall	_DimmerIntrPointSelect
 11628                           
 11629                           ;Dimmer_B1.c: 90: if (DimmerLightsIntr->GO == 1) {
 11630  0051  087B               	movf	_DimmerLightsIntr,w
 11631  0052  0086               	movwf	6
 11632  0053  0187               	clrf	7
 11633  0054  1C01               	btfss	1,0
 11634  0055  28AE               	goto	i1l4495
 11635                           
 11636                           ;Dimmer_B1.c: 91: DimmerLightsIntr->Count++;
 11637  0056  3001               	movlw	1
 11638  0057  00F2               	movwf	??_setDimmerLights_IntrControl
 11639  0058  087B               	movf	_DimmerLightsIntr,w
 11640  0059  3E03               	addlw	3
 11641  005A  0086               	movwf	6
 11642  005B  0187               	clrf	7
 11643  005C  0872               	movf	??_setDimmerLights_IntrControl,w
 11644  005D  0781               	addwf	1,f
 11645                           
 11646                           ;Dimmer_B1.c: 92: if (DimmerLightsIntr->Count >= (DimmerLightsIntr->DimmingValue - Dimme
      +                          r->Correction)) {
 11647  005E  0020               	movlb	0	; select bank0
 11648  005F  0857               	movf	_Dimmer,w
 11649  0060  3E02               	addlw	2
 11650  0061  0086               	movwf	6
 11651  0062  0187               	clrf	7
 11652  0063  0801               	movf	1,w
 11653  0064  00F2               	movwf	??_setDimmerLights_IntrControl
 11654  0065  01F3               	clrf	??_setDimmerLights_IntrControl+1
 11655  0066  09F2               	comf	??_setDimmerLights_IntrControl,f
 11656  0067  09F3               	comf	??_setDimmerLights_IntrControl+1,f
 11657  0068  0AF2               	incf	??_setDimmerLights_IntrControl,f
 11658  0069  1903               	skipnz
 11659  006A  0AF3               	incf	??_setDimmerLights_IntrControl+1,f
 11660  006B  087B               	movf	_DimmerLightsIntr,w
 11661  006C  3E04               	addlw	4
 11662  006D  0086               	movwf	6
 11663  006E  0187               	clrf	7
 11664  006F  0801               	movf	1,w
 11665  0070  0772               	addwf	??_setDimmerLights_IntrControl,w
 11666  0071  00F4               	movwf	??_setDimmerLights_IntrControl+2
 11667  0072  0873               	movf	??_setDimmerLights_IntrControl+1,w
 11668  0073  1803               	skipnc
 11669  0074  0A73               	incf	??_setDimmerLights_IntrControl+1,w
 11670  0075  00F5               	movwf	??_setDimmerLights_IntrControl+3
 11671  0076  087B               	movf	_DimmerLightsIntr,w
 11672  0077  3E03               	addlw	3
 11673  0078  0086               	movwf	6
 11674  0079  0187               	clrf	7
 11675  007A  0875               	movf	??_setDimmerLights_IntrControl+3,w
 11676  007B  3A80               	xorlw	128
 11677  007C  3C80               	sublw	128
 11678  007D  1D03               	skipz
 11679  007E  2881               	goto	u374_25
 11680  007F  0874               	movf	??_setDimmerLights_IntrControl+2,w
 11681  0080  0201               	subwf	1,w
 11682  0081                     u374_25:	
 11683  0081  1C03               	skipc
 11684  0082  2993               	goto	i1l4561
 11685                           
 11686                           ;Dimmer_B1.c: 93: DimmerLightsIntr->Count = 0;
 11687  0083  087B               	movf	_DimmerLightsIntr,w
 11688  0084  3E03               	addlw	3
 11689  0085  0086               	movwf	6
 11690  0086  0187               	clrf	7
 11691  0087  0181               	clrf	1
 11692                           
 11693                           ;Dimmer_B1.c: 94: DimmerLightsIntr->GO = 0;
 11694  0088  087B               	movf	_DimmerLightsIntr,w
 11695  0089  0086               	movwf	6
 11696  008A  0187               	clrf	7
 11697  008B  1001               	bcf	1,0
 11698                           
 11699                           ;Dimmer_B1.c: 96: if (DimmerLightsIntr->StatusFlag == 1) {
 11700  008C  087B               	movf	_DimmerLightsIntr,w
 11701  008D  0086               	movwf	6
 11702  008E  0187               	clrf	7
 11703  008F  1F01               	btfss	1,6
 11704  0090  2993               	goto	i1l4561
 11705                           
 11706                           ;Dimmer_B1.c: 97: DimmerLightsIntr->Flag = 1;
 11707  0091  087B               	movf	_DimmerLightsIntr,w
 11708  0092  3E08               	addlw	8
 11709  0093  0086               	movwf	6
 11710  0094  0187               	clrf	7
 11711  0095  1401               	bsf	1,0
 11712                           
 11713                           ;Dimmer_B1.c: 98: DimmerLightsIntr->Triac = 1;
 11714  0096  087B               	movf	_DimmerLightsIntr,w
 11715  0097  3E08               	addlw	8
 11716  0098  0086               	movwf	6
 11717  0099  0187               	clrf	7
 11718  009A  1681               	bsf	1,5
 11719                           
 11720                           ;Dimmer_B1.c: 100: if (lights == 1) {
 11721  009B  0876               	movf	setDimmerLights_IntrControl@lights,w
 11722  009C  3A01               	xorlw	1
 11723  009D  1D03               	skipz
 11724  009E  28A1               	goto	i1l4487
 11725                           
 11726                           ;Dimmer_B1.c: 101: RB4 = 1;
 11727  009F  0020               	movlb	0	; select bank0
 11728  00A0  160D               	bsf	13,4	;volatile
 11729  00A1                     i1l4487:	
 11730                           ;Dimmer_B1.c: 102: ;;
 11731                           
 11732                           
 11733                           ;Dimmer_B1.c: 103: }
 11734                           ;Dimmer_B1.c: 106: if (lights == 2) {
 11735  00A1  0876               	movf	setDimmerLights_IntrControl@lights,w
 11736  00A2  3A02               	xorlw	2
 11737  00A3  1D03               	skipz
 11738  00A4  28A7               	goto	i1l4491
 11739                           
 11740                           ;Dimmer_B1.c: 107: RA7 = 1;
 11741  00A5  0020               	movlb	0	; select bank0
 11742  00A6  178C               	bsf	12,7	;volatile
 11743  00A7                     i1l4491:	
 11744                           
 11745                           ;Dimmer_B1.c: 108: }
 11746                           ;Dimmer_B1.c: 111: if (lights == 3) {
 11747  00A7  0876               	movf	setDimmerLights_IntrControl@lights,w
 11748  00A8  3A03               	xorlw	3
 11749  00A9  1D03               	skipz
 11750  00AA  2993               	goto	i1l4561
 11751                           
 11752                           ;Dimmer_B1.c: 112: RB1 = 1;
 11753  00AB  0020               	movlb	0	; select bank0
 11754  00AC  148D               	bsf	13,1	;volatile
 11755                           
 11756                           ;Dimmer_B1.c: 113: }
 11757                           ;Dimmer_B1.c: 115: }
 11758                           ;Dimmer_B1.c: 116: }
 11759                           ;Dimmer_B1.c: 117: } else {
 11760  00AD  2993               	goto	i1l4561
 11761  00AE                     i1l4495:	
 11762                           
 11763                           ;Dimmer_B1.c: 118: if (DimmerLightsIntr->Flag == 1) {
 11764  00AE  087B               	movf	_DimmerLightsIntr,w
 11765  00AF  3E08               	addlw	8
 11766  00B0  0086               	movwf	6
 11767  00B1  0187               	clrf	7
 11768  00B2  1C01               	btfss	1,0
 11769  00B3  2993               	goto	i1l4561
 11770                           
 11771                           ;Dimmer_B1.c: 119: DimmerLightsIntr->Flag = 0;
 11772  00B4  087B               	movf	_DimmerLightsIntr,w
 11773  00B5  3E08               	addlw	8
 11774  00B6  0086               	movwf	6
 11775  00B7  0187               	clrf	7
 11776  00B8  1001               	bcf	1,0
 11777                           
 11778                           ;Dimmer_B1.c: 120: if (DimmerLightsIntr->Signal == 1) {
 11779  00B9  087B               	movf	_DimmerLightsIntr,w
 11780  00BA  0086               	movwf	6
 11781  00BB  0187               	clrf	7
 11782  00BC  1C81               	btfss	1,1
 11783  00BD  2993               	goto	i1l4561
 11784                           
 11785                           ;Dimmer_B1.c: 121: DimmerLightsIntr->DimmingTime++;
 11786  00BE  3001               	movlw	1
 11787  00BF  00F2               	movwf	??_setDimmerLights_IntrControl
 11788  00C0  0A7B               	incf	_DimmerLightsIntr,w
 11789  00C1  0086               	movwf	6
 11790  00C2  0187               	clrf	7
 11791  00C3  0872               	movf	??_setDimmerLights_IntrControl,w
 11792  00C4  0781               	addwf	1,f
 11793                           
 11794                           ;Dimmer_B1.c: 122: if (DimmerLightsIntr->DimmingTime >= DimmerLightsIntr->DimmingTimeVal
      +                          ue) {
 11795  00C5  0A7B               	incf	_DimmerLightsIntr,w
 11796  00C6  0086               	movwf	6
 11797  00C7  0187               	clrf	7
 11798  00C8  087B               	movf	_DimmerLightsIntr,w
 11799  00C9  3E02               	addlw	2
 11800  00CA  0084               	movwf	4
 11801  00CB  0185               	clrf	5
 11802  00CC  0800               	movf	0,w
 11803  00CD  0201               	subwf	1,w
 11804  00CE  1C03               	skipc
 11805  00CF  2993               	goto	i1l4561
 11806                           
 11807                           ;Dimmer_B1.c: 123: DimmerLightsIntr->DimmingTime = 0;
 11808  00D0  0A7B               	incf	_DimmerLightsIntr,w
 11809  00D1  0086               	movwf	6
 11810  00D2  0187               	clrf	7
 11811  00D3  0181               	clrf	1
 11812                           
 11813                           ;Dimmer_B1.c: 124: if (DimmerLightsIntr->AdjFlag == 1) {
 11814  00D4  087B               	movf	_DimmerLightsIntr,w
 11815  00D5  0086               	movwf	6
 11816  00D6  0187               	clrf	7
 11817  00D7  1D81               	btfss	1,3
 11818  00D8  2908               	goto	i1l4521
 11819                           
 11820                           ;Dimmer_B1.c: 125: if (DimmerLightsIntr->AdjStatus == 0) {
 11821  00D9  087B               	movf	_DimmerLightsIntr,w
 11822  00DA  0086               	movwf	6
 11823  00DB  0187               	clrf	7
 11824  00DC  1A01               	btfsc	1,4
 11825  00DD  28F2               	goto	i1l4515
 11826                           
 11827                           ;Dimmer_B1.c: 126: if (DimmerLightsIntr->DimmingValue > ((char)((100-95)*0.8))) {
 11828  00DE  087B               	movf	_DimmerLightsIntr,w
 11829  00DF  3E04               	addlw	4
 11830  00E0  0086               	movwf	6
 11831  00E1  0187               	clrf	7
 11832  00E2  3005               	movlw	5
 11833  00E3  0201               	subwf	1,w
 11834  00E4  1C03               	skipc
 11835  00E5  28ED               	goto	i1l4513
 11836                           
 11837                           ;Dimmer_B1.c: 127: DimmerLightsIntr->DimmingValue--;
 11838  00E6  087B               	movf	_DimmerLightsIntr,w
 11839  00E7  3E04               	addlw	4
 11840  00E8  0086               	movwf	6
 11841  00E9  0187               	clrf	7
 11842  00EA  3001               	movlw	1
 11843  00EB  0281               	subwf	1,f
 11844                           
 11845                           ;Dimmer_B1.c: 128: } else {
 11846  00EC  2993               	goto	i1l4561
 11847  00ED                     i1l4513:	
 11848                           
 11849                           ;Dimmer_B1.c: 129: DimmerLightsIntr->AdjStatus = 1;
 11850  00ED  087B               	movf	_DimmerLightsIntr,w
 11851  00EE  0086               	movwf	6
 11852  00EF  0187               	clrf	7
 11853  00F0  1601               	bsf	1,4
 11854                           
 11855                           ;Dimmer_B1.c: 130: }
 11856                           ;Dimmer_B1.c: 131: } else {
 11857  00F1  2993               	goto	i1l4561
 11858  00F2                     i1l4515:	
 11859                           
 11860                           ;Dimmer_B1.c: 132: if (DimmerLightsIntr->DimmingValue < ((char)((100-25)*0.8))) {
 11861  00F2  087B               	movf	_DimmerLightsIntr,w
 11862  00F3  3E04               	addlw	4
 11863  00F4  0086               	movwf	6
 11864  00F5  0187               	clrf	7
 11865  00F6  303C               	movlw	60
 11866  00F7  0201               	subwf	1,w
 11867  00F8  1803               	skipnc
 11868  00F9  2903               	goto	i1l4519
 11869                           
 11870                           ;Dimmer_B1.c: 133: DimmerLightsIntr->DimmingValue++;
 11871  00FA  3001               	movlw	1
 11872  00FB  00F2               	movwf	??_setDimmerLights_IntrControl
 11873  00FC  087B               	movf	_DimmerLightsIntr,w
 11874  00FD  3E04               	addlw	4
 11875  00FE  0086               	movwf	6
 11876  00FF  0187               	clrf	7
 11877  0100  0872               	movf	??_setDimmerLights_IntrControl,w
 11878  0101  0781               	addwf	1,f
 11879                           
 11880                           ;Dimmer_B1.c: 134: } else {
 11881  0102  2993               	goto	i1l4561
 11882  0103                     i1l4519:	
 11883                           
 11884                           ;Dimmer_B1.c: 135: DimmerLightsIntr->AdjStatus = 0;
 11885  0103  087B               	movf	_DimmerLightsIntr,w
 11886  0104  0086               	movwf	6
 11887  0105  0187               	clrf	7
 11888  0106  1201               	bcf	1,4
 11889                           
 11890                           ;Dimmer_B1.c: 136: }
 11891                           ;Dimmer_B1.c: 137: }
 11892                           ;Dimmer_B1.c: 138: } else if (DimmerLightsIntr->AdjRF == 1) {
 11893  0107  2993               	goto	i1l4561
 11894  0108                     i1l4521:	
 11895  0108  087B               	movf	_DimmerLightsIntr,w
 11896  0109  0086               	movwf	6
 11897  010A  0187               	clrf	7
 11898  010B  1D01               	btfss	1,2
 11899  010C  2945               	goto	i1l4535
 11900                           
 11901                           ;Dimmer_B1.c: 139: if (DimmerLightsIntr->DimmingValue > DimmerLightsIntr->MaxmumValue) {
 11902  010D  087B               	movf	_DimmerLightsIntr,w
 11903  010E  3E05               	addlw	5
 11904  010F  0086               	movwf	6
 11905  0110  0187               	clrf	7
 11906  0111  087B               	movf	_DimmerLightsIntr,w
 11907  0112  3E04               	addlw	4
 11908  0113  0084               	movwf	4
 11909  0114  0185               	clrf	5
 11910  0115  0800               	movf	0,w
 11911  0116  0201               	subwf	1,w
 11912  0117  1803               	skipnc
 11913  0118  2920               	goto	i1l4527
 11914                           
 11915                           ;Dimmer_B1.c: 140: DimmerLightsIntr->DimmingValue--;
 11916  0119  087B               	movf	_DimmerLightsIntr,w
 11917  011A  3E04               	addlw	4
 11918  011B  0086               	movwf	6
 11919  011C  0187               	clrf	7
 11920  011D  3001               	movlw	1
 11921  011E  0281               	subwf	1,f
 11922                           
 11923                           ;Dimmer_B1.c: 141: } else if (DimmerLightsIntr->DimmingValue < DimmerLightsIntr->MaxmumV
      +                          alue) {
 11924  011F  2934               	goto	i1l4531
 11925  0120                     i1l4527:	
 11926  0120  087B               	movf	_DimmerLightsIntr,w
 11927  0121  3E04               	addlw	4
 11928  0122  0086               	movwf	6
 11929  0123  0187               	clrf	7
 11930  0124  087B               	movf	_DimmerLightsIntr,w
 11931  0125  3E05               	addlw	5
 11932  0126  0084               	movwf	4
 11933  0127  0185               	clrf	5
 11934  0128  0800               	movf	0,w
 11935  0129  0201               	subwf	1,w
 11936  012A  1803               	skipnc
 11937  012B  2934               	goto	i1l4531
 11938                           
 11939                           ;Dimmer_B1.c: 142: DimmerLightsIntr->DimmingValue++;
 11940  012C  3001               	movlw	1
 11941  012D  00F2               	movwf	??_setDimmerLights_IntrControl
 11942  012E  087B               	movf	_DimmerLightsIntr,w
 11943  012F  3E04               	addlw	4
 11944  0130  0086               	movwf	6
 11945  0131  0187               	clrf	7
 11946  0132  0872               	movf	??_setDimmerLights_IntrControl,w
 11947  0133  0781               	addwf	1,f
 11948  0134                     i1l4531:	
 11949                           
 11950                           ;Dimmer_B1.c: 143: }
 11951                           ;Dimmer_B1.c: 144: if (DimmerLightsIntr->DimmingValue == DimmerLightsIntr->MaxmumValue) 
      +                          {
 11952  0134  087B               	movf	_DimmerLightsIntr,w
 11953  0135  3E05               	addlw	5
 11954  0136  0086               	movwf	6
 11955  0137  0187               	clrf	7
 11956  0138  087B               	movf	_DimmerLightsIntr,w
 11957  0139  3E04               	addlw	4
 11958  013A  0084               	movwf	4
 11959  013B  0185               	clrf	5
 11960  013C  0800               	movf	0,w
 11961  013D  0601               	xorwf	1,w
 11962  013E  1D03               	skipz
 11963  013F  2993               	goto	i1l4561
 11964                           
 11965                           ;Dimmer_B1.c: 145: DimmerLightsIntr->AdjRF = 0;
 11966  0140  087B               	movf	_DimmerLightsIntr,w
 11967  0141  0086               	movwf	6
 11968  0142  0187               	clrf	7
 11969  0143  1101               	bcf	1,2
 11970  0144  295C               	goto	i1l4541
 11971  0145                     i1l4535:	
 11972                           ;Dimmer_B1.c: 147: }
 11973                           ;Dimmer_B1.c: 148: } else {
 11974                           
 11975                           ;Dimmer_B1.c: 146: DimmerLightsIntr->Signal = 0;
 11976                           
 11977                           
 11978                           ;Dimmer_B1.c: 149: if (DimmerLightsIntr->Status == 1) {
 11979  0145  087B               	movf	_DimmerLightsIntr,w
 11980  0146  0086               	movwf	6
 11981  0147  0187               	clrf	7
 11982  0148  1E81               	btfss	1,5
 11983  0149  2961               	goto	i1l4543
 11984                           
 11985                           ;Dimmer_B1.c: 150: DimmerLightsIntr->DimmingValue--;
 11986  014A  087B               	movf	_DimmerLightsIntr,w
 11987  014B  3E04               	addlw	4
 11988  014C  0086               	movwf	6
 11989  014D  0187               	clrf	7
 11990  014E  3001               	movlw	1
 11991  014F  0281               	subwf	1,f
 11992                           
 11993                           ;Dimmer_B1.c: 151: if (DimmerLightsIntr->DimmingValue <= DimmerLightsIntr->MaxmumValue) 
      +                          {
 11994  0150  087B               	movf	_DimmerLightsIntr,w
 11995  0151  3E05               	addlw	5
 11996  0152  0086               	movwf	6
 11997  0153  0187               	clrf	7
 11998  0154  087B               	movf	_DimmerLightsIntr,w
 11999  0155  3E04               	addlw	4
 12000  0156  0084               	movwf	4
 12001  0157  0185               	clrf	5
 12002  0158  0800               	movf	0,w
 12003  0159  0201               	subwf	1,w
 12004  015A  1C03               	skipc
 12005  015B  2993               	goto	i1l4561
 12006  015C                     i1l4541:	
 12007                           
 12008                           ;Dimmer_B1.c: 152: DimmerLightsIntr->Signal = 0;
 12009  015C  087B               	movf	_DimmerLightsIntr,w
 12010  015D  0086               	movwf	6
 12011  015E  0187               	clrf	7
 12012  015F  1081               	bcf	1,1
 12013                           
 12014                           ;Dimmer_B1.c: 153: }
 12015                           ;Dimmer_B1.c: 154: } else {
 12016  0160  2993               	goto	i1l4561
 12017  0161                     i1l4543:	
 12018                           
 12019                           ;Dimmer_B1.c: 155: DimmerLightsIntr->DimmingValue++;
 12020  0161  3001               	movlw	1
 12021  0162  00F2               	movwf	??_setDimmerLights_IntrControl
 12022  0163  087B               	movf	_DimmerLightsIntr,w
 12023  0164  3E04               	addlw	4
 12024  0165  0086               	movwf	6
 12025  0166  0187               	clrf	7
 12026  0167  0872               	movf	??_setDimmerLights_IntrControl,w
 12027  0168  0781               	addwf	1,f
 12028                           
 12029                           ;Dimmer_B1.c: 156: if (DimmerLightsIntr->DimmingValue >= DimmerLightsIntr->MinimumValue)
      +                           {
 12030  0169  087B               	movf	_DimmerLightsIntr,w
 12031  016A  3E04               	addlw	4
 12032  016B  0086               	movwf	6
 12033  016C  0187               	clrf	7
 12034  016D  087B               	movf	_DimmerLightsIntr,w
 12035  016E  3E06               	addlw	6
 12036  016F  0084               	movwf	4
 12037  0170  0185               	clrf	5
 12038  0171  0800               	movf	0,w
 12039  0172  0201               	subwf	1,w
 12040  0173  1C03               	skipc
 12041  0174  2993               	goto	i1l4561
 12042                           
 12043                           ;Dimmer_B1.c: 157: DimmerLightsIntr->Signal = 0;
 12044  0175  087B               	movf	_DimmerLightsIntr,w
 12045  0176  0086               	movwf	6
 12046  0177  0187               	clrf	7
 12047  0178  1081               	bcf	1,1
 12048                           
 12049                           ;Dimmer_B1.c: 158: DimmerLightsIntr->StatusFlag = 0;
 12050  0179  087B               	movf	_DimmerLightsIntr,w
 12051  017A  0086               	movwf	6
 12052  017B  0187               	clrf	7
 12053  017C  1301               	bcf	1,6
 12054                           
 12055                           ;Dimmer_B1.c: 159: DimmerLightsIntr->Clear = 1;
 12056  017D  087B               	movf	_DimmerLightsIntr,w
 12057  017E  3E09               	addlw	9
 12058  017F  0086               	movwf	6
 12059  0180  0187               	clrf	7
 12060  0181  1501               	bsf	1,2
 12061                           
 12062                           ;Dimmer_B1.c: 160: Dimmer->Detect = 1;
 12063  0182  0020               	movlb	0	; select bank0
 12064  0183  0857               	movf	_Dimmer,w
 12065  0184  0086               	movwf	6
 12066  0185  0187               	clrf	7
 12067  0186  1401               	bsf	1,0
 12068                           
 12069                           ;Dimmer_B1.c: 162: if (lights == 1) {
 12070  0187  0876               	movf	setDimmerLights_IntrControl@lights,w
 12071  0188  3A01               	xorlw	1
 12072  0189  1903               	btfsc	3,2
 12073                           
 12074                           ;Dimmer_B1.c: 163: RC7 = 0;
 12075  018A  138E               	bcf	14,7	;volatile
 12076                           
 12077                           ;Dimmer_B1.c: 165: }
 12078                           ;Dimmer_B1.c: 168: if (lights == 2) {
 12079  018B  0876               	movf	setDimmerLights_IntrControl@lights,w
 12080  018C  3A02               	xorlw	2
 12081  018D  1903               	btfsc	3,2
 12082                           
 12083                           ;Dimmer_B1.c: 169: RA3 = 0;
 12084  018E  118C               	bcf	12,3	;volatile
 12085                           
 12086                           ;Dimmer_B1.c: 170: }
 12087                           ;Dimmer_B1.c: 173: if (lights == 3) {
 12088  018F  0876               	movf	setDimmerLights_IntrControl@lights,w
 12089  0190  3A03               	xorlw	3
 12090  0191  1903               	btfsc	3,2
 12091                           
 12092                           ;Dimmer_B1.c: 174: RC6 = 0;
 12093  0192  130E               	bcf	14,6	;volatile
 12094  0193                     i1l4561:	
 12095                           ;Dimmer_B1.c: 175: }
 12096                           ;Dimmer_B1.c: 177: ;;
 12097                           
 12098                           
 12099                           ;Dimmer_B1.c: 178: }
 12100                           ;Dimmer_B1.c: 179: }
 12101                           ;Dimmer_B1.c: 180: }
 12102                           ;Dimmer_B1.c: 181: }
 12103                           ;Dimmer_B1.c: 182: }
 12104                           ;Dimmer_B1.c: 183: }
 12105                           ;Dimmer_B1.c: 184: }
 12106                           ;Dimmer_B1.c: 185: if (DimmerLightsIntr->Triac == 1) {
 12107  0193  087B               	movf	_DimmerLightsIntr,w
 12108  0194  3E08               	addlw	8
 12109  0195  0086               	movwf	6
 12110  0196  0187               	clrf	7
 12111  0197  1E81               	btfss	1,5
 12112  0198  29C5               	goto	i1l4583
 12113                           
 12114                           ;Dimmer_B1.c: 186: DimmerLightsIntr->TriacTime++;
 12115  0199  3001               	movlw	1
 12116  019A  00F2               	movwf	??_setDimmerLights_IntrControl
 12117  019B  087B               	movf	_DimmerLightsIntr,w
 12118  019C  3E07               	addlw	7
 12119  019D  0086               	movwf	6
 12120  019E  0187               	clrf	7
 12121  019F  0872               	movf	??_setDimmerLights_IntrControl,w
 12122  01A0  0781               	addwf	1,f
 12123                           
 12124                           ;Dimmer_B1.c: 187: if (DimmerLightsIntr->TriacTime >= 5) {
 12125  01A1  087B               	movf	_DimmerLightsIntr,w
 12126  01A2  3E07               	addlw	7
 12127  01A3  0086               	movwf	6
 12128  01A4  0187               	clrf	7
 12129  01A5  3005               	movlw	5
 12130  01A6  0201               	subwf	1,w
 12131  01A7  1C03               	skipc
 12132  01A8  29C5               	goto	i1l4583
 12133                           
 12134                           ;Dimmer_B1.c: 188: DimmerLightsIntr->TriacTime = 0;
 12135  01A9  087B               	movf	_DimmerLightsIntr,w
 12136  01AA  3E07               	addlw	7
 12137  01AB  0086               	movwf	6
 12138  01AC  0187               	clrf	7
 12139  01AD  0181               	clrf	1
 12140                           
 12141                           ;Dimmer_B1.c: 189: DimmerLightsIntr->Triac = 0;
 12142  01AE  087B               	movf	_DimmerLightsIntr,w
 12143  01AF  3E08               	addlw	8
 12144  01B0  0086               	movwf	6
 12145  01B1  0187               	clrf	7
 12146  01B2  1281               	bcf	1,5
 12147                           
 12148                           ;Dimmer_B1.c: 192: if (lights == 1) {
 12149  01B3  0876               	movf	setDimmerLights_IntrControl@lights,w
 12150  01B4  3A01               	xorlw	1
 12151  01B5  1D03               	skipz
 12152  01B6  29B9               	goto	i1l4575
 12153                           
 12154                           ;Dimmer_B1.c: 193: RB4 = 0;
 12155  01B7  0020               	movlb	0	; select bank0
 12156  01B8  120D               	bcf	13,4	;volatile
 12157  01B9                     i1l4575:	
 12158                           ;Dimmer_B1.c: 194: ;;
 12159                           
 12160                           
 12161                           ;Dimmer_B1.c: 195: }
 12162                           ;Dimmer_B1.c: 198: if (lights == 2) {
 12163  01B9  0876               	movf	setDimmerLights_IntrControl@lights,w
 12164  01BA  3A02               	xorlw	2
 12165  01BB  1D03               	skipz
 12166  01BC  29BF               	goto	i1l4579
 12167                           
 12168                           ;Dimmer_B1.c: 199: RA7 = 0;
 12169  01BD  0020               	movlb	0	; select bank0
 12170  01BE  138C               	bcf	12,7	;volatile
 12171  01BF                     i1l4579:	
 12172                           
 12173                           ;Dimmer_B1.c: 200: }
 12174                           ;Dimmer_B1.c: 203: if (lights == 3) {
 12175  01BF  0876               	movf	setDimmerLights_IntrControl@lights,w
 12176  01C0  3A03               	xorlw	3
 12177  01C1  1D03               	skipz
 12178  01C2  29C5               	goto	i1l4583
 12179                           
 12180                           ;Dimmer_B1.c: 204: RB1 = 0;
 12181  01C3  0020               	movlb	0	; select bank0
 12182  01C4  108D               	bcf	13,1	;volatile
 12183  01C5                     i1l4583:	
 12184                           
 12185                           ;Dimmer_B1.c: 205: }
 12186                           ;Dimmer_B1.c: 207: }
 12187                           ;Dimmer_B1.c: 208: }
 12188                           ;Dimmer_B1.c: 209: if (DimmerLightsIntr->TriacFlag == 1) {
 12189  01C5  087B               	movf	_DimmerLightsIntr,w
 12190  01C6  3E09               	addlw	9
 12191  01C7  0086               	movwf	6
 12192  01C8  0187               	clrf	7
 12193  01C9  1E81               	btfss	1,5
 12194  01CA  0008               	return
 12195                           
 12196                           ;Dimmer_B1.c: 210: DimmerLightsIntr->TriacCount++;
 12197  01CB  3001               	movlw	1
 12198  01CC  00F2               	movwf	??_setDimmerLights_IntrControl
 12199  01CD  087B               	movf	_DimmerLightsIntr,w
 12200  01CE  3E0A               	addlw	10
 12201  01CF  0086               	movwf	6
 12202  01D0  0187               	clrf	7
 12203  01D1  0872               	movf	??_setDimmerLights_IntrControl,w
 12204  01D2  0781               	addwf	1,f
 12205                           
 12206                           ;Dimmer_B1.c: 211: if (DimmerLightsIntr->TriacCount == 70) {
 12207  01D3  087B               	movf	_DimmerLightsIntr,w
 12208  01D4  3E0A               	addlw	10
 12209  01D5  0086               	movwf	6
 12210  01D6  0187               	clrf	7
 12211  01D7  0801               	movf	1,w
 12212  01D8  3A46               	xorlw	70
 12213  01D9  1D03               	skipz
 12214  01DA  0008               	return
 12215                           
 12216                           ;Dimmer_B1.c: 212: DimmerLightsIntr->TriacCount = 0;
 12217  01DB  087B               	movf	_DimmerLightsIntr,w
 12218  01DC  3E0A               	addlw	10
 12219  01DD  0086               	movwf	6
 12220  01DE  0187               	clrf	7
 12221  01DF  0181               	clrf	1
 12222                           
 12223                           ;Dimmer_B1.c: 213: DimmerLightsIntr->TriacFlag = 0;
 12224  01E0  087B               	movf	_DimmerLightsIntr,w
 12225  01E1  3E09               	addlw	9
 12226  01E2  0086               	movwf	6
 12227  01E3  0187               	clrf	7
 12228  01E4  1281               	bcf	1,5
 12229  01E5  0008               	return
 12230  01E6                     __end_of_setDimmerLights_IntrControl:	
 12231                           
 12232                           	psect	text76
 12233  17E6                     __ptext76:	
 12234 ;; *************** function _DimmerIntrPointSelect *****************
 12235 ;; Defined at:
 12236 ;;		line 65 in file "../src/Dimmer_B1.c"
 12237 ;; Parameters:    Size  Location     Type
 12238 ;;  lights          1    wreg     unsigned char 
 12239 ;; Auto vars:     Size  Location     Type
 12240 ;;  lights          1    1[COMMON] unsigned char 
 12241 ;; Return value:  Size  Location     Type
 12242 ;;		None               void
 12243 ;; Registers used:
 12244 ;;		wreg
 12245 ;; Tracked objects:
 12246 ;;		On entry : 0/0
 12247 ;;		On exit  : 0/0
 12248 ;;		Unchanged: 0/0
 12249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12251 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12252 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12253 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12254 ;;Total ram usage:        2 bytes
 12255 ;; Hardware stack levels used:    1
 12256 ;; This function calls:
 12257 ;;		Nothing
 12258 ;; This function is called by:
 12259 ;;		_setDimmerLights_IntrControl
 12260 ;; This function uses a non-reentrant model
 12261 ;;
 12262                           
 12263                           
 12264                           ;psect for function _DimmerIntrPointSelect
 12265  17E6                     _DimmerIntrPointSelect:	
 12266                           
 12267                           ;incstack = 0
 12268                           ; Regs used in _DimmerIntrPointSelect: [wreg]
 12269                           ;DimmerIntrPointSelect@lights stored from wreg
 12270  17E6  00F1               	movwf	DimmerIntrPointSelect@lights
 12271                           
 12272                           ;Dimmer_B1.c: 67: if (lights == 1) {
 12273  17E7  0871               	movf	DimmerIntrPointSelect@lights,w
 12274  17E8  3A01               	xorlw	1
 12275  17E9  1D03               	skipz
 12276  17EA  2FEF               	goto	i1l425
 12277                           
 12278                           ;Dimmer_B1.c: 68: DimmerLightsIntr = &DimmerLights1;
 12279  17EB  30A0               	movlw	_DimmerLights1& (0+255)
 12280  17EC  00F0               	movwf	??_DimmerIntrPointSelect
 12281  17ED  0870               	movf	??_DimmerIntrPointSelect,w
 12282  17EE  00FB               	movwf	_DimmerLightsIntr
 12283  17EF                     i1l425:	
 12284                           
 12285                           ;Dimmer_B1.c: 69: }
 12286                           ;Dimmer_B1.c: 72: if (lights == 2) {
 12287  17EF  0871               	movf	DimmerIntrPointSelect@lights,w
 12288  17F0  3A02               	xorlw	2
 12289  17F1  1D03               	skipz
 12290  17F2  2FF7               	goto	i1l426
 12291                           
 12292                           ;Dimmer_B1.c: 73: DimmerLightsIntr = &DimmerLights2;
 12293  17F3  30AF               	movlw	_DimmerLights2& (0+255)
 12294  17F4  00F0               	movwf	??_DimmerIntrPointSelect
 12295  17F5  0870               	movf	??_DimmerIntrPointSelect,w
 12296  17F6  00FB               	movwf	_DimmerLightsIntr
 12297  17F7                     i1l426:	
 12298                           
 12299                           ;Dimmer_B1.c: 74: }
 12300                           ;Dimmer_B1.c: 78: if (lights == 3) {
 12301  17F7  0871               	movf	DimmerIntrPointSelect@lights,w
 12302  17F8  3A03               	xorlw	3
 12303  17F9  1D03               	skipz
 12304  17FA  0008               	return
 12305                           
 12306                           ;Dimmer_B1.c: 79: DimmerLightsIntr = &DimmerLights3;
 12307  17FB  30BE               	movlw	_DimmerLights3& (0+255)
 12308  17FC  00F0               	movwf	??_DimmerIntrPointSelect
 12309  17FD  0870               	movf	??_DimmerIntrPointSelect,w
 12310  17FE  00FB               	movwf	_DimmerLightsIntr
 12311  17FF  0008               	return
 12312  1800                     __end_of_DimmerIntrPointSelect:	
 12313                           
 12314                           	psect	text77
 12315  1702                     __ptext77:	
 12316 ;; *************** function _IOC_ISR *****************
 12317 ;; Defined at:
 12318 ;;		line 297 in file "../src/MCU_B1.c"
 12319 ;; Parameters:    Size  Location     Type
 12320 ;;		None
 12321 ;; Auto vars:     Size  Location     Type
 12322 ;;		None
 12323 ;; Return value:  Size  Location     Type
 12324 ;;		None               void
 12325 ;; Registers used:
 12326 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12327 ;; Tracked objects:
 12328 ;;		On entry : 0/0
 12329 ;;		On exit  : 0/0
 12330 ;;		Unchanged: 0/0
 12331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12336 ;;Total ram usage:        0 bytes
 12337 ;; Hardware stack levels used:    1
 12338 ;; Hardware stack levels required when called:    3
 12339 ;; This function calls:
 12340 ;;		_setDimmerReClock
 12341 ;; This function is called by:
 12342 ;;		_ISR
 12343 ;; This function uses a non-reentrant model
 12344 ;;
 12345                           
 12346                           
 12347                           ;psect for function _IOC_ISR
 12348  1702                     _IOC_ISR:	
 12349                           
 12350                           ;MCU_B1.c: 298: if (IOCIE == 1 && IOCBF2 == 1) {
 12351                           
 12352                           ;incstack = 0
 12353                           ; Regs used in _IOC_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12354  1702  1D8B               	btfss	11,3	;volatile
 12355  1703  0008               	return
 12356  1704  0027               	movlb	7	; select bank7
 12357  1705  1D16               	btfss	22,2	;volatile
 12358  1706  0008               	return
 12359                           
 12360                           ;MCU_B1.c: 299: IOCBF2 = 0;
 12361  1707  1116               	bcf	22,2	;volatile
 12362                           
 12363                           ;MCU_B1.c: 300: IOCIF = 0;
 12364  1708  100B               	bcf	11,0	;volatile
 12365                           
 12366                           ;MCU_B1.c: 301: if (myMain->PowerON == 1) {
 12367  1709  0020               	movlb	0	; select bank0
 12368  170A  086A               	movf	_myMain,w
 12369  170B  0086               	movwf	6
 12370  170C  3001               	movlw	1	; select bank2/3
 12371  170D  0087               	movwf	7
 12372  170E  1C01               	btfss	1,0
 12373  170F  0008               	return
 12374                           
 12375                           ;MCU_B1.c: 303: setDimmerReClock();
 12376  1710  3196  2669         	fcall	_setDimmerReClock
 12377  1712  0008               	return
 12378  1713                     __end_of_IOC_ISR:	
 12379                           
 12380                           	psect	text78
 12381  1669                     __ptext78:	
 12382 ;; *************** function _setDimmerReClock *****************
 12383 ;; Defined at:
 12384 ;;		line 175 in file "../src/MCU_B1.c"
 12385 ;; Parameters:    Size  Location     Type
 12386 ;;		None
 12387 ;; Auto vars:     Size  Location     Type
 12388 ;;		None
 12389 ;; Return value:  Size  Location     Type
 12390 ;;		None               void
 12391 ;; Registers used:
 12392 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12393 ;; Tracked objects:
 12394 ;;		On entry : 0/0
 12395 ;;		On exit  : 0/0
 12396 ;;		Unchanged: 0/0
 12397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12402 ;;Total ram usage:        0 bytes
 12403 ;; Hardware stack levels used:    1
 12404 ;; Hardware stack levels required when called:    2
 12405 ;; This function calls:
 12406 ;;		_setDimmerLights_IntrIOC_GO
 12407 ;; This function is called by:
 12408 ;;		_IOC_ISR
 12409 ;; This function uses a non-reentrant model
 12410 ;;
 12411                           
 12412                           
 12413                           ;psect for function _setDimmerReClock
 12414  1669                     _setDimmerReClock:	
 12415                           
 12416                           ;MCU_B1.c: 180: setDimmerLights_IntrIOC_GO(1);
 12417                           
 12418                           ;incstack = 0
 12419                           ; Regs used in _setDimmerReClock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12420  1669  3001               	movlw	1
 12421  166A  3197  27CC  3196   	fcall	_setDimmerLights_IntrIOC_GO
 12422                           
 12423                           ;MCU_B1.c: 184: setDimmerLights_IntrIOC_GO(2);
 12424  166D  3002               	movlw	2
 12425  166E  3197  27CC  3196   	fcall	_setDimmerLights_IntrIOC_GO
 12426                           
 12427                           ;MCU_B1.c: 188: setDimmerLights_IntrIOC_GO(3);
 12428  1671  3003               	movlw	3
 12429  1672  3197  27CC         	fcall	_setDimmerLights_IntrIOC_GO
 12430                           
 12431                           ;MCU_B1.c: 191: TMR0 = 255;
 12432  1674  30FF               	movlw	255
 12433  1675  0020               	movlb	0	; select bank0
 12434  1676  0095               	movwf	21	;volatile
 12435  1677  0008               	return
 12436  1678                     __end_of_setDimmerReClock:	
 12437                           
 12438                           	psect	text79
 12439  17CC                     __ptext79:	
 12440 ;; *************** function _setDimmerLights_IntrIOC_GO *****************
 12441 ;; Defined at:
 12442 ;;		line 28 in file "../src/Dimmer_B1.c"
 12443 ;; Parameters:    Size  Location     Type
 12444 ;;  lights          1    wreg     unsigned char 
 12445 ;; Auto vars:     Size  Location     Type
 12446 ;;  lights          1    2[COMMON] unsigned char 
 12447 ;; Return value:  Size  Location     Type
 12448 ;;		None               void
 12449 ;; Registers used:
 12450 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12451 ;; Tracked objects:
 12452 ;;		On entry : 0/0
 12453 ;;		On exit  : 0/0
 12454 ;;		Unchanged: 0/0
 12455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12457 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12459 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12460 ;;Total ram usage:        1 bytes
 12461 ;; Hardware stack levels used:    1
 12462 ;; Hardware stack levels required when called:    1
 12463 ;; This function calls:
 12464 ;;		_DimmerIntrIOCPointSelect
 12465 ;; This function is called by:
 12466 ;;		_setDimmerReClock
 12467 ;; This function uses a non-reentrant model
 12468 ;;
 12469                           
 12470                           
 12471                           ;psect for function _setDimmerLights_IntrIOC_GO
 12472  17CC                     _setDimmerLights_IntrIOC_GO:	
 12473                           
 12474                           ;incstack = 0
 12475                           ; Regs used in _setDimmerLights_IntrIOC_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 12476                           ;setDimmerLights_IntrIOC_GO@lights stored from wreg
 12477  17CC  00F2               	movwf	setDimmerLights_IntrIOC_GO@lights
 12478                           
 12479                           ;Dimmer_B1.c: 30: DimmerIntrIOCPointSelect(lights);
 12480  17CD  0872               	movf	setDimmerLights_IntrIOC_GO@lights,w
 12481  17CE  3197  27B2  3197   	fcall	_DimmerIntrIOCPointSelect
 12482                           
 12483                           ;Dimmer_B1.c: 32: if (DimmerLightsIntrIOC->GO == 0 && DimmerLightsIntrIOC->TriacFlag == 
      +                          0) {
 12484  17D1  087C               	movf	_DimmerLightsIntrIOC,w
 12485  17D2  0086               	movwf	6
 12486  17D3  0187               	clrf	7
 12487  17D4  1801               	btfsc	1,0
 12488  17D5  0008               	return
 12489  17D6  087C               	movf	_DimmerLightsIntrIOC,w
 12490  17D7  3E09               	addlw	9
 12491  17D8  0086               	movwf	6
 12492  17D9  0187               	clrf	7
 12493  17DA  1A81               	btfsc	1,5
 12494  17DB  0008               	return
 12495                           
 12496                           ;Dimmer_B1.c: 33: DimmerLightsIntrIOC->GO = 1;
 12497  17DC  087C               	movf	_DimmerLightsIntrIOC,w
 12498  17DD  0086               	movwf	6
 12499  17DE  0187               	clrf	7
 12500  17DF  1401               	bsf	1,0
 12501                           
 12502                           ;Dimmer_B1.c: 34: DimmerLightsIntrIOC->TriacFlag = 1;
 12503  17E0  087C               	movf	_DimmerLightsIntrIOC,w
 12504  17E1  3E09               	addlw	9
 12505  17E2  0086               	movwf	6
 12506  17E3  0187               	clrf	7
 12507  17E4  1681               	bsf	1,5
 12508  17E5  0008               	return
 12509  17E6                     __end_of_setDimmerLights_IntrIOC_GO:	
 12510                           
 12511                           	psect	text80
 12512  17B2                     __ptext80:	
 12513 ;; *************** function _DimmerIntrIOCPointSelect *****************
 12514 ;; Defined at:
 12515 ;;		line 8 in file "../src/Dimmer_B1.c"
 12516 ;; Parameters:    Size  Location     Type
 12517 ;;  lights          1    wreg     unsigned char 
 12518 ;; Auto vars:     Size  Location     Type
 12519 ;;  lights          1    1[COMMON] unsigned char 
 12520 ;; Return value:  Size  Location     Type
 12521 ;;		None               void
 12522 ;; Registers used:
 12523 ;;		wreg
 12524 ;; Tracked objects:
 12525 ;;		On entry : 0/0
 12526 ;;		On exit  : 0/0
 12527 ;;		Unchanged: 0/0
 12528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12530 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12531 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12532 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12533 ;;Total ram usage:        2 bytes
 12534 ;; Hardware stack levels used:    1
 12535 ;; This function calls:
 12536 ;;		Nothing
 12537 ;; This function is called by:
 12538 ;;		_setDimmerLights_IntrIOC_GO
 12539 ;; This function uses a non-reentrant model
 12540 ;;
 12541                           
 12542                           
 12543                           ;psect for function _DimmerIntrIOCPointSelect
 12544  17B2                     _DimmerIntrIOCPointSelect:	
 12545                           
 12546                           ;incstack = 0
 12547                           ; Regs used in _DimmerIntrIOCPointSelect: [wreg]
 12548                           ;DimmerIntrIOCPointSelect@lights stored from wreg
 12549  17B2  00F1               	movwf	DimmerIntrIOCPointSelect@lights
 12550                           
 12551                           ;Dimmer_B1.c: 10: if (lights == 1) {
 12552  17B3  0871               	movf	DimmerIntrIOCPointSelect@lights,w
 12553  17B4  3A01               	xorlw	1
 12554  17B5  1D03               	skipz
 12555  17B6  2FBB               	goto	i1l415
 12556                           
 12557                           ;Dimmer_B1.c: 11: DimmerLightsIntrIOC = &DimmerLights1;
 12558  17B7  30A0               	movlw	_DimmerLights1& (0+255)
 12559  17B8  00F0               	movwf	??_DimmerIntrIOCPointSelect
 12560  17B9  0870               	movf	??_DimmerIntrIOCPointSelect,w
 12561  17BA  00FC               	movwf	_DimmerLightsIntrIOC
 12562  17BB                     i1l415:	
 12563                           
 12564                           ;Dimmer_B1.c: 12: }
 12565                           ;Dimmer_B1.c: 15: if (lights == 2) {
 12566  17BB  0871               	movf	DimmerIntrIOCPointSelect@lights,w
 12567  17BC  3A02               	xorlw	2
 12568  17BD  1D03               	skipz
 12569  17BE  2FC3               	goto	i1l416
 12570                           
 12571                           ;Dimmer_B1.c: 16: DimmerLightsIntrIOC = &DimmerLights2;
 12572  17BF  30AF               	movlw	_DimmerLights2& (0+255)
 12573  17C0  00F0               	movwf	??_DimmerIntrIOCPointSelect
 12574  17C1  0870               	movf	??_DimmerIntrIOCPointSelect,w
 12575  17C2  00FC               	movwf	_DimmerLightsIntrIOC
 12576  17C3                     i1l416:	
 12577                           
 12578                           ;Dimmer_B1.c: 17: }
 12579                           ;Dimmer_B1.c: 21: if (lights == 3) {
 12580  17C3  0871               	movf	DimmerIntrIOCPointSelect@lights,w
 12581  17C4  3A03               	xorlw	3
 12582  17C5  1D03               	skipz
 12583  17C6  0008               	return
 12584                           
 12585                           ;Dimmer_B1.c: 22: DimmerLightsIntrIOC = &DimmerLights3;
 12586  17C7  30BE               	movlw	_DimmerLights3& (0+255)
 12587  17C8  00F0               	movwf	??_DimmerIntrIOCPointSelect
 12588  17C9  0870               	movf	??_DimmerIntrIOCPointSelect,w
 12589  17CA  00FC               	movwf	_DimmerLightsIntrIOC
 12590  17CB  0008               	return
 12591  17CC                     __end_of_DimmerIntrIOCPointSelect:	
 12592                           
 12593                           	psect	text81
 12594  1600                     __ptext81:	
 12595 ;; *************** function _INT_ISR *****************
 12596 ;; Defined at:
 12597 ;;		line 250 in file "../src/MCU_B1.c"
 12598 ;; Parameters:    Size  Location     Type
 12599 ;;		None
 12600 ;; Auto vars:     Size  Location     Type
 12601 ;;		None
 12602 ;; Return value:  Size  Location     Type
 12603 ;;		None               void
 12604 ;; Registers used:
 12605 ;;		None
 12606 ;; Tracked objects:
 12607 ;;		On entry : 0/0
 12608 ;;		On exit  : 0/0
 12609 ;;		Unchanged: 0/0
 12610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12615 ;;Total ram usage:        0 bytes
 12616 ;; Hardware stack levels used:    1
 12617 ;; This function calls:
 12618 ;;		Nothing
 12619 ;; This function is called by:
 12620 ;;		_ISR
 12621 ;; This function uses a non-reentrant model
 12622 ;;
 12623                           
 12624                           
 12625                           ;psect for function _INT_ISR
 12626  1600                     _INT_ISR:	
 12627                           
 12628                           ;MCU_B1.c: 251: if (INTE == 1 && INTF == 1) {
 12629                           
 12630                           ;incstack = 0
 12631                           ; Regs used in _INT_ISR: []
 12632  1600  1E0B               	btfss	11,4	;volatile
 12633  1601  0008               	return
 12634  1602  1C8B               	btfss	11,1	;volatile
 12635  1603  0008               	return
 12636                           
 12637                           ;MCU_B1.c: 252: INTF = 0;
 12638  1604  108B               	bcf	11,1	;volatile
 12639                           
 12640                           ;MCU_B1.c: 253: INTE = 0;
 12641  1605  120B               	bcf	11,4	;volatile
 12642  1606  0008               	return
 12643  1607                     __end_of_INT_ISR:	
 12644                           ;MCU_B1.c: 254: ;;
 12645                           
 12646  007E                     btemp	set	126	;btemp
 12647  007E                     pic14e$flags	set	126
 12648  007E                     wtemp	set	126
 12649  007E                     wtemp0	set	126
 12650  0080                     wtemp1	set	128
 12651  0082                     wtemp2	set	130
 12652  0084                     wtemp3	set	132
 12653  0086                     wtemp4	set	134
 12654  0088                     wtemp5	set	136
 12655  007F                     wtemp6	set	127
 12656  007E                     ttemp	set	126
 12657  007E                     ttemp0	set	126
 12658  0081                     ttemp1	set	129
 12659  0084                     ttemp2	set	132
 12660  0087                     ttemp3	set	135
 12661  007F                     ttemp4	set	127
 12662  007E                     ltemp	set	126
 12663  007E                     ltemp0	set	126
 12664  0082                     ltemp1	set	130
 12665  0086                     ltemp2	set	134
 12666  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         195
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     54      77
    BANK1            80      0      73
    BANK2            80      0      61
    BANK3            80      0      69
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    Sw	PTR struct Switch size(1) Largest target is 9
		 -> NULL(NULL[0]), Sw3(BANK2[9]), Sw2(BANK2[9]), Sw1(BANK2[9]), 

    Temp	PTR struct OverTemp size(1) Largest target is 14
		 -> NULL(NULL[0]), Temp1(BANK2[14]), 

    WDT	PTR struct WDT size(1) Largest target is 2
		 -> NULL(NULL[0]), _WDT(BANK0[2]), 

    Timer0	PTR struct Timer0 size(1) Largest target is 8
		 -> NULL(NULL[0]), VarTimer0(BANK1[8]), 

    Memory	PTR struct FlashMemory size(1) Largest target is 37
		 -> NULL(NULL[0]), VarMemory(BANK3[37]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK0[4]), VarLED3(BANK1[4]), VarLED2(BANK1[4]), 
		 -> VarLED1(BANK0[4]), 

    product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), _product(BANK3[32]), 

    myMain	PTR struct myMain size(1) Largest target is 20
		 -> NULL(NULL[0]), _myMain(BANK2[20]), 

    DimmerLights33	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights3(BANK1[15]), 

    DimmerLights22	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights2(BANK1[15]), 

    DimmerLights11	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights1(BANK1[15]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights3(BANK1[15]), DimmerLights2(BANK1[15]), DimmerLights1(BANK1[15]), 

    Dimmer	PTR struct Dimmer size(1) Largest target is 3
		 -> NULL(NULL[0]), Dimmer1(BANK0[3]), 

    DimmerLightsIntr	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights3(BANK1[15]), DimmerLights2(BANK1[15]), DimmerLights1(BANK1[15]), 

    DimmerLightsIntrIOC	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights3(BANK1[15]), DimmerLights2(BANK1[15]), DimmerLights1(BANK1[15]), 

    Buz	PTR struct Buzzer size(1) Largest target is 12
		 -> NULL(NULL[0]), Buz1(BANK1[12]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _TMR0_ISR->_setDimmerLights_IntrControl
    _setDimmerLights_IntrControl->_DimmerIntrPointSelect
    _setDimmerReClock->_setDimmerLights_IntrIOC_GO
    _setDimmerLights_IntrIOC_GO->_DimmerIntrIOCPointSelect

Critical Paths under _main in BANK0

    _main->_Flash_Memory_Initialization
    _my_Main->_setBuz
    _getTemp_AD->_getAD
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_setOverTemp_Exceptions
    _setOverTemp_Exceptions->_DimmerLights_Exceptions
    _setSw_Enable->_SwPointSelect
    _DimmerLights_Exceptions->_setBuz
    _setDimmerLights_TriggerERROR->_DimmerLightsPointSelect
    _setDimmerLights_ERROR->_setLED
    _setDimmerLights_ERROR->_setSw_Status
    _setSw_Status->_SwPointSelect
    _Temp_Initialization->_setTemp_Initialization
    _Switch_Main->_setSw_Main
    _setSw_Main->_Sw_DimmerOnFunc
    _Sw_DimmerOnFunc->_setBuz
    _Sw_DimmerOffFunc->_setDimmerLights_AdjGo
    _Sw_DimmerOffFunc->_setDimmerLights_Switch
    _Sw_DimmerOffFunc->_setDimmerLights_Trigger
    _Sw_DimmerOffFunc->_setDimmerLights_TriggerAdj
    _setDimmerLights_Trigger->_DimmerLightsPointSelect
    _setDimmerLights_Switch->_DimmerLightsPointSelect
    _Sw_DimmerAdjFunc->_setDimmerLights_AdjGo
    _Sw_DimmerAdjFunc->_setDimmerLights_TriggerAdj
    _setDimmerLights_TriggerAdj->_DimmerLightsPointSelect
    _setDimmerLights_AdjGo->_DimmerLightsPointSelect
    _Switch_Initialization->_setSw_Initialization
    _setSw_Initialization->_setLED
    _Mcu_Initialization->_TMR0_Set
    _Mcu_Initialization->_WDT_Set
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Flash_Memory_Main->_Flash_Memory_Modify
    _Flash_Memory_Modify->_Flash_Memory_Read
    _Flash_Memory_Initialization->_setPercentValue
    _setPercentValue->___fttol
    ___fttol->___ftdiv
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setBuz
    _setDimmerLights_Adj->_DimmerLightsPointSelect
    _setDimmerLights->_setLED
    _setLED->_LedPointSelect
    _setBuz->___awdiv
    _DimmerLights_Close->_getDimmerLights_StatusFlag
    _DimmerLights_Close->_setMemory_GO
    _DimmerLights_Initialization->_setDimmerLights_Initialization
    _setDimmerLights_Initialization->_DimmerLightsPointSelect

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4   21349
                                             50 BANK0      4     0      4
              _Buzzer_Initialization
                        _Buzzer_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
        _Flash_Memory_Initialization
                  _Flash_Memory_Main
                 _LED_Initialization
                           _LED_Main
                 _Mcu_Initialization
              _Switch_Initialization
                        _Switch_Main
                _Temp_Initialization
                          _Temp_Main
                           _WDT_Main
                         _getTemp_AD
              _myMain_Initialization
                            _my_Main
                _my_TestPointCleared
 ---------------------------------------------------------------------------------
 (1) _my_TestPointCleared                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _my_Main                                              0     0      0    1185
                             _setBuz
                       _setSw_Enable
                     _setTemp_Enable
 ---------------------------------------------------------------------------------
 (2) _setTemp_Enable                                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           5     5      0     130
                                              4 BANK0      5     5      0
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                4     1      3     108
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              0 BANK0      1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0    4656
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         3     3      0    4656
                                             16 BANK0      3     3      0
             _setOverTemp_Exceptions
 ---------------------------------------------------------------------------------
 (3) _setOverTemp_Exceptions                               2     2      0    4656
                                             14 BANK0      2     2      0
            _DimmerLights_Exceptions
                             _setBuz
                             _setLED
                       _setSw_Enable
 ---------------------------------------------------------------------------------
 (2) _setSw_Enable                                         1     1      0     132
                                              2 BANK0      1     1      0
                      _SwPointSelect
 ---------------------------------------------------------------------------------
 (4) _DimmerLights_Exceptions                              1     1      0    2601
                                             13 BANK0      1     1      0
         _getDimmerLights_StatusFlag
                             _setBuz
              _setDimmerLights_ERROR
       _setDimmerLights_TriggerERROR
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights_TriggerERROR                         2     1      1     368
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights_ERROR                                2     2      0    1088
                                              4 BANK0      2     2      0
            _DimmerLightsPointSelect
                             _setLED
                       _setSw_Status
 ---------------------------------------------------------------------------------
 (6) _setSw_Status                                         2     1      1     174
                                              2 BANK0      2     1      1
                      _SwPointSelect
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Switch_Main                                          0     0      0    4712
                         _setSw_Main
 ---------------------------------------------------------------------------------
 (2) _setSw_Main                                           3     3      0    4712
                                             19 BANK0      3     3      0
                      _SwPointSelect
                   _Sw_DimmerAdjFunc
                   _Sw_DimmerOffFunc
                    _Sw_DimmerOnFunc
                             _setBuz
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerOnFunc                                      6     6      0    1715
                                             13 BANK0      6     6      0
                             _setBuz
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerOffFunc                                     3     3      0    1062
                                              4 BANK0      3     3      0
              _setDimmerLights_AdjGo
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
         _setDimmerLights_TriggerAdj
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Trigger                              2     1      1     238
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Switch                               2     1      1     238
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerAdjFunc                                     6     6      0     684
                                              4 BANK0      6     6      0
              _setDimmerLights_AdjGo
         _setDimmerLights_TriggerAdj
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_TriggerAdj                           2     1      1     238
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_AdjGo                                2     1      1     238
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _SwPointSelect                                        2     2      0      66
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Switch_Initialization                                0     0      0     804
                         _TouchPower
               _setSw_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSw_Initialization                                 1     1      0     804
                                              4 BANK0      1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _TouchPower                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   1     1      0       0
                                              1 BANK0      1     1      0
                            _ADC_Set
                           _Fosc_Set
                            _INT_Set
                            _IOC_Set
                             _IO_Set
                           _TMR0_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Set                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IOC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INT_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0     198
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0     198
                                              2 BANK0      3     3      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0     914
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0     914
                                              4 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Main                                    0     0      0     230
                _Flash_Memory_Modify
 ---------------------------------------------------------------------------------
 (2) _Flash_Memory_Modify                                  3     3      0     230
                                              4 BANK0      3     3      0
               _Flash_Memory_Erasing
                  _Flash_Memory_Read
                 _Flash_Memory_Write
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Erasing                                 0     0      0       0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Initialization                          2     2      0    5557
                                             48 BANK0      2     2      0
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                    _setPercentValue
 ---------------------------------------------------------------------------------
 (2) _setPercentValue                                      4     4      0    5283
                                             44 BANK0      4     4      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     380
                                             30 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2640
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2195
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1976
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Write                                   2     2      0      91
                                              0 BANK0      2     2      0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (4) _Flash_Memory_Unlock                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Read                                    4     4      0      48
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0    2875
                 _DimmerLights_Close
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 6     6      0    2761
                                             13 BANK0      6     6      0
            _DimmerLightsPointSelect
                             _setBuz
                    _setDimmerLights
                _setDimmerLights_Adj
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Adj                                  3     2      1     238
                                              2 BANK0      3     2      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights                                      3     2      1    1130
                                              4 BANK0      3     2      1
            _DimmerLightsPointSelect
                             _setLED
                       _setMemory_GO
 ---------------------------------------------------------------------------------
 (4) _setLED                                               2     1      1     782
                                              2 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (5) _LedPointSelect                                       2     2      0      88
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _setBuz                                               4     2      2    1031
                                              9 BANK0      4     2      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     428
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_Close                                   0     0      0     114
         _getDimmerLights_StatusFlag
                       _setMemory_GO
 ---------------------------------------------------------------------------------
 (4) _setMemory_GO                                         3     3      0      66
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _getDimmerLights_StatusFlag                           3     3      0      48
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          1     1      0      88
                                              4 BANK0      1     1      0
              _Dimmer_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       2     2      0      88
                                              2 BANK0      2     2      0
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (6) _DimmerLightsPointSelect                              2     2      0      66
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Dimmer_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Main                                          4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR                                                  1     1      0     374
                                              7 COMMON     1     1      0
                            _INT_ISR
                            _IOC_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR0_ISR                                             0     0      0     286
        _setDimmerLights_IntrControl
 ---------------------------------------------------------------------------------
 (10) _setDimmerLights_IntrControl                         5     5      0     286
                                              2 COMMON     5     5      0
              _DimmerIntrPointSelect
 ---------------------------------------------------------------------------------
 (11) _DimmerIntrPointSelect                               2     2      0      66
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _IOC_ISR                                              0     0      0      88
                   _setDimmerReClock
 ---------------------------------------------------------------------------------
 (10) _setDimmerReClock                                    0     0      0      88
         _setDimmerLights_IntrIOC_GO
 ---------------------------------------------------------------------------------
 (11) _setDimmerLights_IntrIOC_GO                          1     1      0      88
                                              2 COMMON     1     1      0
           _DimmerIntrIOCPointSelect
 ---------------------------------------------------------------------------------
 (12) _DimmerIntrIOCPointSelect                            2     2      0      66
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _INT_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Initialization
   _Buzzer_Main
   _DimmerLights_Initialization
     _Dimmer_Initialization
     _setDimmerLights_Initialization
       _DimmerLightsPointSelect
   _DimmerLights_Main
     _DimmerLights_Close
       _getDimmerLights_StatusFlag
       _setMemory_GO
     _setDimmerLights_Main
       _DimmerLightsPointSelect
       _setBuz
         ___awdiv
       _setDimmerLights
         _DimmerLightsPointSelect
         _setLED
           _LedPointSelect
         _setMemory_GO
       _setDimmerLights_Adj
         _DimmerLightsPointSelect
   _Flash_Memory_Initialization
     _Flash_Memory_Read
     _Flash_Memory_Write
       _Flash_Memory_Unlock
     _setPercentValue
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _Flash_Memory_Main
     _Flash_Memory_Modify
       _Flash_Memory_Erasing
         _Flash_Memory_Unlock
       _Flash_Memory_Read
       _Flash_Memory_Write
         _Flash_Memory_Unlock
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _INT_Set
     _IOC_Set
     _IO_Set
     _TMR0_Set
     _WDT_Set
   _Switch_Initialization
     _TouchPower
     _setSw_Initialization
       _setLED
         _LedPointSelect
   _Switch_Main
     _setSw_Main
       _SwPointSelect
       _Sw_DimmerAdjFunc
         _setDimmerLights_AdjGo
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
       _Sw_DimmerOffFunc
         _setDimmerLights_AdjGo
           _DimmerLightsPointSelect
         _setDimmerLights_Switch
           _DimmerLightsPointSelect
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
       _Sw_DimmerOnFunc
         _setBuz
           ___awdiv
         _setDimmerLights_Switch
           _DimmerLightsPointSelect
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
       _setBuz
         ___awdiv
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       _setOverTemp_Exceptions
         _DimmerLights_Exceptions
           _getDimmerLights_StatusFlag
           _setBuz
             ___awdiv
           _setDimmerLights_ERROR
             _DimmerLightsPointSelect
             _setLED
               _LedPointSelect
             _setSw_Status
               _SwPointSelect
           _setDimmerLights_TriggerERROR
             _DimmerLightsPointSelect
         _setBuz
           ___awdiv
         _setLED
           _LedPointSelect
         _setSw_Enable
           _SwPointSelect
   _WDT_Main
     _WDT_Clearing
   _getTemp_AD
     _getAD
   _myMain_Initialization
   _my_Main
     _setBuz
       ___awdiv
     _setSw_Enable
       _SwPointSelect
     _setTemp_Enable
   _my_TestPointCleared

 _ISR (ROOT)
   _INT_ISR
   _IOC_ISR
     _setDimmerReClock
       _setDimmerLights_IntrIOC_GO
         _DimmerIntrIOCPointSelect
   _TMR0_ISR
     _setDimmerLights_IntrControl
       _DimmerIntrPointSelect

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     36      4D       5       96.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      49       7       91.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      3D       9       76.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      45      11       86.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     126      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     126      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Fri Oct 17 08:18:52 2014

                   __size_of_Switch_Main 000C                    ?_Flash_Memory_Erasing 0070  
                           _WDT_Clearing 0002             ??_setDimmerLights_TriggerAdj 0023  
                                     _RD 0CA8                                       _WR 0CA9  
                           ___awdiv@sign 0026                                       _Sw 005A  
     __end_of_getDimmerLights_StatusFlag 1749               _getDimmerLights_StatusFlag 1736  
              setDimmerLights_Adj@lights 0024                     _setDimmerLights_Main 06EF  
                                    l527 0EEC                                      l472 0846  
                                    l473 084E                                      l973 178E  
                                    _GIE 005F                                      l999 09E5  
                                    _RA0 0060     __size_of_DimmerLights_Initialization 001E  
                                    _RB1 0069                                      _RA3 0063  
                                    _RA4 0064                                      _LED 0059  
                                    _RB3 006B                                      _RB4 006C  
                                    _RA6 0066                                      _RB5 006D  
                                    _RA7 0067                                      _RC5 0075  
                                    _RC6 0076                                      _RC7 0077  
                                    _ISR 0004                                      _WDT 007D  
                                    _Sw1 0142                                      _Sw2 014B  
                                    _Buz 0056                                      _Sw3 0154  
              setDimmerLights_Adj@status 0022           ??_setDimmerLights_TriggerERROR 0023  
                  _Buzzer_Initialization 1617                          __end_of_ADC_Set 160E  
                                    wreg 0009     setDimmerLights_Initialization@lights 0023  
                        _setDimmerLights 0F20                    _setDimmerLights_ERROR 0A58  
                  _setDimmerLights_AdjGo 1687                  __size_of_setTemp_Enable 000B  
                                   ?_ISR 0070                             ___ftdiv@cntr 0038  
                        __end_of_IOC_ISR 1713                             ___ftdiv@sign 003D  
                                   l2143 0CF9                                     l1360 0A48  
                                   l2137 0CE2                 ?_DimmerLightsPointSelect 0070  
                                   l4007 1742                                     l4111 0CCE  
                                   l4103 0CB8                                     l4107 0CBF  
                                   l4117 0CE7                                     l4109 0CC9  
                        __end_of_IOC_Set 165C                                     l4053 0EC8  
                                   l1806 15E3                                     l4119 0CEF  
                                   l4321 0C66                                     l4057 0EDB  
                                   l4219 09CB                                     l5115 0B19  
                                   l4323 0C69                                     l4307 0D6D  
                                   l4059 0EE0                                     l4333 0C75  
                                   l1837 0218                                     l4431 0681  
                                   l5071 04B2                                     l4335 0C78  
                                   l1863 0D43                                     l4271 0D23  
                                   l4255 0A3F                                     l5151 0E1C  
                                   l4169 0F6A                                     l4177 09A1  
                                   l4417 05A9                                     l4409 0590  
                                   l4345 0C84                                     l4281 0D2F  
                                   l5321 0BC8                                     l4451 06BF  
                                   l4283 0D32                                     l4461 06D8  
                                   l4701 0AC7                                     l4293 0D3E  
                                   l4269 0D20                                     l5325 0BD3  
                                   l3911 0E97                                     l3903 0E83  
                                   l1887 0C89                                     l3841 090C  
                                   l3833 08FA                                     l4641 0716  
                                   l4465 06E6                                     l4457 06CC  
                                   l4449 06B1                                     l4705 0ACE  
                                   l4369 0BA3                                     l5177 0FFA  
                                   l5169 0FCE                                     l3915 0E9D  
                                   l3923 0EA9                                     l4651 0722  
                                   l4627 0704                                     l4379 08D8  
                                   l4395 054F                                     l4459 06D5  
                                   l3837 0903                                     l4661 0742  
                                   l4653 0727                                     l4629 0707  
                                   l4389 0539                                     l4709 0AD5  
                                   l3853 0886                                     l4821 0363  
                                   l3919 0EA3                                     l4671 076D  
                                   l4663 0748                                     l4639 0713  
                                   l3945 0C18                                     l3881 0E61  
                                   l3873 0E55                                     l3849 087D  
                                   l3971 0C4F                                     l3963 0C3E  
                                   l3955 0C20                                     l3939 0C0D  
                                   l3891 0E71                                     l4843 03C8  
                                   l3957 0C2C                                     l3877 0E5B  
                                   l3885 0E67                                     l4909 0273  
                                   l4853 03F5                                     l3967 0C47  
                                   l3991 07CD                                     l3895 0E77  
                                   l4783 0D7B                                     l4919 02AF  
                                   l4927 02DE                                     l4855 03FC  
                                   l4793 0DD1                                     l3987 07B3  
                                   l3899 0E7D                                     l4883 020C  
                                   l4859 0408                                     l4973 062F  
                                   l4981 0656                                     l4789 0D92  
                                   l4879 01FF                                     l4985 065C  
                                   l4979 0651                                     l4899 0246  
                  _myMain_Initialization 1749                                     _CFGS 0CAE  
                                   _FREE 0CAC                                     _LATA 010C  
                                   _LATB 010D                          __end_of_INT_ISR 1607  
                                   _LATC 010E                                     u3105 0CDD  
                                   u3125 0CEA                                     u3155 0D00  
                                   u3085 0CC4                                     u3605 05A0  
                                   u3615 05AA                                     u2825 0C23  
                                   u3705 06CD                                     _PEIE 005E  
                                   u2845 0C2D                                     u3645 0688  
                                   _INTE 005C                                     _INTF 0059  
                                   u4615 05F2                                     u2855 0C37  
                                   u3575 0561                                     u2865 0C3F  
                                   u3585 0571                                     u3595 0591  
                                   u3675 06B2                                     u4835 0E0B  
                                   u4845 0E34                                     u4865 0FA9  
                                   u4795 0B00                                     u4875 0FE4  
                                   _LWLO 0CAD                                     _TMR0 0015  
                        __end_of_INT_Set 15F4                                     _WREN 0CAA  
                                   _Buz1 00CD                                     __WDT 0067  
                                   _Temp 005B                                     _main 0BAF  
                           ___ftpack@arg 0020                             ___ftpack@exp 0023  
                                   fsr0h 0005                                     fsr1h 0007  
                                   fsr0l 0004                                     indf0 0000  
                                   indf1 0001                                     fsr1l 0006  
    __size_of_setDimmerLights_TriggerAdj 000F                                     btemp 007E  
                        __end_of_WDT_Set 1784                                     ltemp 007E  
                       _setDimmerReClock 1669                                     start 0016  
                                   ttemp 007E                                     wtemp 007E  
           __size_of_Temp_Initialization 0003                                    ??_ISR 0077  
                           ___fttol@exp1 004B                             ___fttol@lval 0047  
         __size_of_DimmerIntrPointSelect 001A                         __end_of_LED_Main 1702  
          __end_of_DimmerIntrPointSelect 1800                    ?_setDimmerLights_Main 0070  
                                  ?_main 0052                          __end_of___awdiv 0C56  
                        __end_of___ftdiv 05CB                          ___awdiv@divisor 0020  
                        __end_of___fttol 06EF             setDimmerLights_AdjGo@command 0022  
                                  _IOCBF 0396                                    _IOCBN 0395  
                                  _IOCBP 0394                                    _IOCIE 005B  
                                  _IOCIF 0058                                    i1l415 17BB  
                                  i1l416 17C3                                    i1l425 17EF  
                                  i1l426 17F7                   _setDimmerLights_Switch 16A5  
                        ___awdiv@counter 0025                                    _PORTA 000C  
                                  _PORTB 000D                                    _PORTC 000E  
                           ?_setLED_Main 0070                                    _TRISA 008C  
                                  _TRISB 008D                                    _TRISC 008E  
                                  _WPUB0 1068                                    _WPUB1 1069  
                                  _WPUB2 106A                            __CFG_WRT$HALF 0000  
                                  _Temp1 0134       __end_of_setDimmerLights_IntrIOC_GO 17E6  
             _setDimmerLights_IntrIOC_GO 17CC                         __end_of_TMR0_ISR 0A20  
                       __end_of_TMR0_Set 1669                                    _getAD 1784  
                          ___awtoft@sign 002D          __end_of_DimmerLights_Exceptions 0F20  
          DimmerLights_Exceptions@status 002D              DimmerIntrPointSelect@lights 0071  
                          ___ftpack@sign 0024                          __end_of_my_Main 1000  
                          ??_Buzzer_Main 0020                         __end_of_WDT_Main 0800  
                    setMemory_GO@command 0022                           __CFG_BOREN$OFF 0000  
                     Flash_Memory_Read@i 0021                                    ltemp0 007E  
                                  ltemp1 0082                                    ltemp2 0086  
                                  ltemp3 0080           __size_of_setLED_Initialization 0010  
          __end_of_setLED_Initialization 16E2                                    ttemp0 007E  
                                  ttemp1 0081                                    ttemp2 0084  
                                  ttemp3 0087                                    ttemp4 007F  
                                  status 0003                                    wtemp0 007E  
                                  wtemp1 0080                                    wtemp2 0082  
                                  wtemp3 0084                                    wtemp4 0086  
                                  wtemp5 0088                                    wtemp6 007F  
                   _Sw_DimmerOnFunc$4410 002F                     _Sw_DimmerOnFunc$4411 0030  
                   _Sw_DimmerOnFunc$4409 002E              __size_of_Flash_Memory_Write 0031  
                         setSw_Status@sw 0023                setDimmerLights_Main@clear 0031  
                 ??_Flash_Memory_Erasing 0020                          __initialization 0018  
                      ??_Sw_DimmerOnFunc 002D                        ??_setPercentValue 004C  
                           __end_of_main 0C02                         __end_of_Fosc_Set 15E3  
                              ??_ADC_Set 0020                  __end_of_setDimmerLights 0F8F  
                   _setSw_Initialization 0800                                   ??_main 0056  
                          ___fttol@sign1 0046                   ?_Buzzer_Initialization 0070  
      __size_of_DimmerIntrIOCPointSelect 001A                ?_DimmerIntrIOCPointSelect 0070  
                              ??_IOC_ISR 0073                   ?_setDimmerLights_ERROR 0070  
                              ??_IOC_Set 0020          __end_of_DimmerLightsPointSelect 0857  
                              ??_INT_ISR 0070                   ?_setDimmerLights_AdjGo 0022  
                              ??_INT_Set 0020                  ??_Switch_Initialization 0025  
                                 ?_getAD 0020                   ?_myMain_Initialization 0070  
                                 _ADCON0 009D                                   _ADCON1 009E  
                                 _ADRESH 009C                                   _ADRESL 009B  
                       ___awdiv@dividend 0022                                ??_WDT_Set 0020  
                       __end_of___awtoft 08EF                                   _ANSELA 018C  
                                 _ANSELB 018D                                   _ANSELC 018E  
                       __end_of___ftpack 0D10                                   _IOCBF2 1CB2  
                _setDimmerLights_Trigger 16B4                                   i1l4513 00ED  
                                 i1l4521 0108                                   i1l4531 0134  
                                 i1l4515 00F2                                   i1l4541 015C  
                                 i1l4543 0161                                   i1l4527 0120  
                                 i1l4535 0145                                   i1l4519 0103  
                                 i1l4561 0193                                   i1l4491 00A7  
                                 i1l4575 01B9                                   i1l4583 01C5  
                                 i1l4487 00A1                                   i1l4495 00AE  
                                 i1l4579 01BF                                   _FVRCON 0117  
                                 _PMADRH 0192                                   _PMADRL 0191  
                                 _PMDATH 0194                                   _PMDATL 0193  
                                 _PMCON2 0196                                   u374_25 0081  
                                 u472_25 0A12                                   _OSCCON 0099  
                                 _TMR0IE 005D                                   _TMR0IF 005A  
                                 _IO_Set 179A                                   _WDTCON 0097  
                  _Dimmer_Initialization 15E8                                   _Dimmer 0057  
             __end_of_Mcu_Initialization 083C                      __end_of_Buzzer_Main 0668  
                                 _Memory 006C                                   _Timer0 0069  
     __end_of_setDimmerLights_TriggerAdj 16A5               _setDimmerLights_TriggerAdj 1696  
          setDimmerLights_Switch@command 0022                                ??___awdiv 0024  
                              ??___ftdiv 0034                    setDimmerLights@lights 0026  
                              ??___fttol 0042             ?_Flash_Memory_Initialization 0070  
                 ??_setDimmerLights_Main 002D                                   _setLED 0E45  
                                 _myMain 006A                         _DimmerLightsIntr 007B  
              _setDimmerLights_Main$1671 002E                _setDimmerLights_Main$1672 002F  
              _setDimmerLights_Main$1673 0030                    ?_setSw_Initialization 0070  
                  setDimmerLights@status 0024                         ___awdiv@quotient 0027  
                                 _setBuz 0773                       __size_of_Temp_Main 0003  
       ??_setDimmerLights_Initialization 0022          ?_setDimmerLights_Initialization 0070  
           __size_of_my_TestPointCleared 0012             ??_getDimmerLights_StatusFlag 0020  
                              ??_my_Main 002D      __end_of_setDimmerLights_IntrControl 01E6  
            _setDimmerLights_IntrControl 004C                 Flash_Memory_Read@address 0022  
                  __end_of_SwPointSelect 088F                           _setTemp_Enable 162C  
           __size_of_Flash_Memory_Modify 0065        setDimmerLights_IntrControl@lights 0076  
            __size_of_DimmerLights_Close 0014                  __size_of_LedPointSelect 0026  
                    Flash_Memory_Write@i 0021             __size_of_Flash_Memory_Unlock 0009  
                             _TouchPower 15E3                        ?_Sw_DimmerAdjFunc 0070  
                __end_of__initialization 0048              setDimmerLights_AdjGo@lights 0023  
                              ?_LED_Main 0070                       ??_Sw_DimmerAdjFunc 0024  
                    setSw_Enable@command 0022                               ___ftdiv@f1 0031  
                             ___ftdiv@f2 002E                               ___ftdiv@f3 0039  
                      ?_Sw_DimmerOffFunc 0070                               ___awtoft@c 0028  
           ?_DimmerLights_Initialization 0070                               ___fttol@f1 003E  
                         __pcstackCOMMON 0070           DimmerIntrIOCPointSelect@lights 0071  
                     ??_Sw_DimmerOffFunc 0024                             __pidataBANK3 08AD  
                          __end_of_getAD 179A                                ?_TMR0_ISR 0070  
                              ?_TMR0_Set 0070             __size_of_setDimmerLights_Adj 002E  
                     _LED_Initialization 16E2         __size_of_DimmerLights_Exceptions 006E  
            ?_getDimmerLights_StatusFlag 0070            ??_Flash_Memory_Initialization 0050  
                       ?_setDimmerLights 0024                                ?_WDT_Main 0070  
               __end_of_setDimmerReClock 1678                      ?_LED_Initialization 0070  
                 __end_of_setTemp_Enable 1637                           _DimmerLights11 0078  
                         _DimmerLights22 0079                           _DimmerLights33 007A  
                   __size_of_setLED_Main 0044                ??_setDimmerLights_Trigger 0023  
                                ??_getAD 0023                      _Temp_Initialization 15D9  
           setDimmerLights_Switch@lights 0023                               __pbssBANK0 0056  
                             __pbssBANK1 00A0                               __pbssBANK2 0120  
                             __pbssBANK3 01A0                                ?_Fosc_Set 0070  
                            _Buzzer_Main 05CB                        __end_of_Temp_Main 15DF  
                 ?_Dimmer_Initialization 0070                                  ?_IO_Set 0070  
                             ??_LED_Main 0025                            ?_setMemory_GO 0070  
                        __CFG_VCAPEN$OFF 0000                               __pnvCOMMON 007D  
                          ??_Switch_Main 0036                     ??_LED_Initialization 0025  
                           _DimmerLights 0058                        LedPointSelect@led 0021  
                            setBuz@count 002C                               __pmaintext 0BAF  
                   ?_Temp_Initialization 0070         __size_of_DimmerLightsPointSelect 001B  
          ??_DimmerLights_Initialization 0024                               ??_TMR0_ISR 0077  
                          ?_setTemp_Main 0070                               ??_TMR0_Set 0020  
                             __pintentry 0004                   ??_setSw_Initialization 0024  
                          ?_setSw_Enable 0070                  ?_setDimmerLights_Switch 0022  
                   Sw_DimmerAdjFunc@Idle 0028                                  ?_setLED 0022  
                                _ADC_Set 1607                                  ?_setBuz 0029  
                              ?___awtoft 0028                                ?___ftpack 0020  
                             _getTemp_AD 0DD9                               ??_WDT_Main 0020  
                          ?_setSw_Status 0022                        Sw_DimmerOnFunc@sw 0032  
                                _IOC_ISR 1702                          ?_setTemp_Enable 0070  
                                _IOC_Set 164F                                  _INT_ISR 1600  
                                _INT_Set 15EE                        _Flash_Memory_Main 0ADC  
                      _Flash_Memory_Read 0808              ?_setDimmerLights_IntrIOC_GO 0070  
    setDimmerLights_TriggerERROR@command 0022                       ?_Flash_Memory_Main 0070  
                     ?_Flash_Memory_Read 0070                                  _WDT_Set 1770  
                             ??_Fosc_Set 0020                              ?_TouchPower 0070  
                        _Sw_DimmerOnFunc 0D10                          _setPercentValue 0B21  
                         ??_setMemory_GO 0020                                  _Dimmer1 0064  
                        __size_of_IO_Set 0018                      ??_Flash_Memory_Main 0027  
                    ??_Flash_Memory_Read 0020                                  _VarLED1 0060  
                                _VarLED2 00E1                                  _VarLED3 00E5  
       __end_of_DimmerIntrIOCPointSelect 17CC                    ??_Temp_Initialization 0021  
        __end_of_setDimmerLights_Trigger 16C3                           ??_setTemp_Main 0030  
         __end_of_setDimmerLights_Switch 16B4                                  ___awdiv 0C02  
                         ??_setSw_Enable 0022                                  ___ftdiv 0522  
                                ___fttol 0668                      __end_of_Switch_Main 164F  
                ??_Buzzer_Initialization 0020                 ??_setOverTemp_Exceptions 002E  
                                __myMain 0120                               ??___awtoft 002B  
                             ??___ftpack 0025                          __size_of_setLED 006D  
                ??_setDimmerLights_ERROR 0024                          __size_of_setBuz 0074  
                         ??_setSw_Status 0023                                  __ptext1 1724  
                                __ptext2 0F8F                                  __ptext3 162C  
                                __ptext4 1749                                  __ptext5 0DD9  
                                __ptext6 1784                                  __ptext7 07E7  
                                __ptext8 0002                                  __ptext9 15DC  
                ??_setDimmerLights_AdjGo 0023                      Sw_DimmerOnFunc@Idle 0031  
                  _DimmerIntrPointSelect 17E6                             __size_of_ISR 0012  
              __end_of_Flash_Memory_Main 0B21                __end_of_Flash_Memory_Read 0822  
                ??_myMain_Initialization 0020                        _DimmerLights_Main 1678  
                                _my_Main 0F8F                 ??_setTemp_Initialization 0020  
          DimmerLightsPointSelect@lights 0021                       ?_DimmerLights_Main 0070  
                                _product 006B                           _LedPointSelect 08EF  
                                clrloop0 15FB           __size_of_Switch_Initialization 0011  
          __end_of_Switch_Initialization 1724                     end_of_initialization 0048  
             __end_of_Flash_Memory_Write 09EC                      _my_TestPointCleared 1724  
                                init_ram 15F4                      ??_DimmerLights_Main 0033  
                   Flash_Memory_Read@ret 0023                                  initloop 15F5  
                             _setSw_Main 01E6                     Flash_Memory_Modify@i 0026  
                  _setLED_Initialization 16D2              ?_setDimmerLights_TriggerAdj 0022  
          __size_of_Flash_Memory_Erasing 000C                      _Flash_Memory_Modify 0D74  
                _DimmerLights_Exceptions 0EB2                      _Flash_Memory_Unlock 160E  
       getDimmerLights_StatusFlag@Status 0021                              ?_getTemp_AD 0070  
                   ?_my_TestPointCleared 0070                      __size_of_TouchPower 0005  
               setLED_Initialization@led 0024                   setSw_Initialization@sw 0024  
              __end_of_DimmerLights_Main 1687                       _Mcu_Initialization 0822  
                       __CFG_FOSC$INTOSC 0000                   __end_of_LedPointSelect 0915  
                __end_of_Sw_DimmerOnFunc 0D74                  __end_of_setPercentValue 0B67  
                    ?_Mcu_Initialization 0070                     ?_Flash_Memory_Modify 0070  
                    _setDimmerLights_Adj 098D                     ?_Flash_Memory_Unlock 0070  
                            ___ftdiv@exp 003C                           __end_of_IO_Set 17B2  
                            _Switch_Main 1643                        __size_of_LED_Main 0010  
                _DimmerLightsPointSelect 083C                     ??_Mcu_Initialization 0021  
                          ?_WDT_Clearing 0070                     ?_setDimmerLights_Adj 0022  
              __size_of_Sw_DimmerAdjFunc 0059                 _DimmerIntrIOCPointSelect 17B2  
                  ??_my_TestPointCleared 0020                        __size_of_TMR0_ISR 0034  
        __size_of_setOverTemp_Exceptions 0038                   ?_DimmerIntrPointSelect 0070  
                      __size_of_TMR0_Set 000D                     __end_of_setMemory_GO 0872  
          __size_of_setDimmerLights_Main 0084                           __end_of_setLED 0EB2  
                         __end_of_setBuz 07E7          _getDimmerLights_StatusFlag$1677 0022  
              __size_of_Sw_DimmerOffFunc 0048               __size_of_Flash_Memory_Main 0045  
             __size_of_Flash_Memory_Read 001A                        __size_of_WDT_Main 0019  
                      ?_setDimmerReClock 0070                      start_initialization 0018  
                        ?_LedPointSelect 0070               __end_of_DimmerLights_Close 1770  
                            __end_of_ISR 0016                    ??_Flash_Memory_Modify 0024  
                     ??_setDimmerReClock 0073          __size_of_setTemp_Initialization 000B  
                  ??_Flash_Memory_Unlock 0020                  ??_Dimmer_Initialization 0020  
                   __end_of_setTemp_Main 0439                     __end_of_setSw_Enable 098D  
                           ?_Buzzer_Main 0070                                 ??_IO_Set 0020  
                              _VarErrLED 005C                              ?_setSw_Main 0070  
                    __size_of_getTemp_AD 006C                   ?_setLED_Initialization 0070  
                   __end_of_setSw_Status 16D2                       Sw_DimmerAdjFunc@sw 0029  
                      __size_of_Fosc_Set 0004                                _VarMemory 01A0  
                              _VarTimer0 00D9                                _Temp_Main 15DC  
              ??_DimmerLights_Exceptions 002D            setOverTemp_Exceptions@command 002F  
                         ??_WDT_Clearing 0020                    ??_setDimmerLights_Adj 0023  
                 __size_of_SwPointSelect 001D                              __pdataBANK3 01C5  
                               ??_setLED 0023                         ??_setTemp_Enable 0020  
                               ?_ADC_Set 0070                                 ??_setBuz 002B  
             __size_of_DimmerLights_Main 000F                            ??_setLED_Main 0022  
                      __size_of___awtoft 0022                        __size_of___ftpack 0061  
                               ?_IOC_ISR 0070                              __pbssCOMMON 0078  
                               ?_IOC_Set 0070                                ___latbits 0003  
                  setTemp_Enable@command 0020                                 ?_INT_ISR 0070  
                       ?_Sw_DimmerOnFunc 0070                            __pcstackBANK0 0020  
                               ?_INT_Set 0070                         ?_setPercentValue 0070  
               __size_of_setDimmerLights 006F                                 ?_WDT_Set 0070  
                           ??_TouchPower 0020                   _setOverTemp_Exceptions 0A20  
                          _DimmerLights1 00A0                            _DimmerLights2 00AF  
                          _DimmerLights3 00BE                ??_DimmerLightsPointSelect 0020  
                              __pnvBANK0 0069              __size_of_LED_Initialization 0010  
                             ?_Temp_Main 0070                               setBuz@time 0029  
                 _setTemp_Initialization 1621      __end_of_Flash_Memory_Initialization 0522  
            _Flash_Memory_Initialization 0439                                 ?___awdiv 0020  
                               ?___ftdiv 002E                                 ?___fttol 003E  
          __size_of_setSw_Initialization 0008           __size_of_Buzzer_Initialization 000A  
          __end_of_Buzzer_Initialization 1621                         setPercentValue@i 004D  
                     __end_of_TouchPower 15E8       setDimmerLights_TriggerERROR@lights 0023  
         __size_of_setDimmerLights_ERROR 0040                 ?_setDimmerLights_Trigger 0022  
                    __size_of_setSw_Main 0146            __end_of_setDimmerLights_ERROR 0A98  
         __size_of_setDimmerLights_AdjGo 000F            __end_of_setDimmerLights_AdjGo 1696  
                               ?_my_Main 0070           __size_of_myMain_Initialization 0013  
          __end_of_myMain_Initialization 175C                         __CFG_WDTE$SWDTEN 0000  
                         __size_of_getAD 0016                            _SwPointSelect 0872  
                     Sw_DimmerOffFunc@sw 0026                      __end_of_setLED_Main 0ADC  
                    _DimmerLightsIntrIOC 007C              __end_of_Temp_Initialization 15DC  
                               _LED_Main 16F2                          SwPointSelect@sw 0021  
                              clear_ram0 15FA      __end_of_DimmerLights_Initialization 08AD  
            _DimmerLights_Initialization 088F           setDimmerLights_Trigger@command 0022  
                               _GO_nDONE 04E9                    __size_of_setMemory_GO 001B  
                     _Flash_Memory_Write 09BB                                 _TMR0_ISR 09EC  
                               _TMR0_Set 165C                         _Sw_DimmerAdjFunc 0C56  
      setDimmerLights_TriggerAdj@command 0022                             ??_getTemp_AD 0024  
                               _WDT_Main 07E7                         __size_of_ADC_Set 0007  
                    ?_Flash_Memory_Write 0070                         _Sw_DimmerOffFunc 0B67  
                  _Sw_DimmerAdjFunc$4421 0025                    _Sw_DimmerAdjFunc$4422 0026  
                  _Sw_DimmerAdjFunc$4423 0027                    __size_of_setTemp_Main 010D  
                  __size_of_setSw_Enable 0029                             setSw_Main@sw 0035  
       setDimmerLights_IntrIOC_GO@lights 0072                         __size_of_IOC_ISR 0011  
           ?_setDimmerLights_IntrControl 0070                         __size_of_IOC_Set 000D  
           __end_of_Flash_Memory_Erasing 1643                           ?_SwPointSelect 0070  
                            getAD@adcon0 0023                              getAD@adcon1 0020  
                       __size_of_INT_ISR 0007                           setLED_Main@led 0024  
                   __end_of_WDT_Clearing 0004                         __size_of_INT_Set 0006  
                  __size_of_setSw_Status 000F                                 _Fosc_Set 15DF  
                       __size_of_WDT_Set 0014                    _Switch_Initialization 1713  
                   ??_Flash_Memory_Write 0020                        ??_setDimmerLights 0025  
                           _setMemory_GO 0857                     __size_of_Buzzer_Main 009D  
                     __end_of_getTemp_AD 0E45                             ?_Switch_Main 0070  
             ??_DimmerIntrIOCPointSelect 0070             Flash_Memory_Initialization@i 0051  
                            ??_Temp_Main 0033                                setLED@led 0023  
   __end_of_setDimmerLights_TriggerERROR 093C    __size_of_setDimmerLights_TriggerERROR 0027  
           _setDimmerLights_TriggerERROR 0915                  ??_DimmerIntrPointSelect 0070  
                           _setTemp_Main 032C                         __size_of___awdiv 0054  
                       __size_of___ftdiv 00A9                             _setSw_Enable 0964  
                       __size_of___fttol 0087                                 ___awtoft 08CD  
                       ??_LedPointSelect 0020                                 ___ftpack 0CAF  
                           _setSw_Status 16C3                        getTemp_AD@channel 0028  
                            _setLED_Main 0A98                         __size_of_my_Main 0071  
                               __ptext10 032C                                 __ptext11 0A20  
                               __ptext20 01E6                                 __ptext12 0964  
                               __ptext21 0D10                                 __ptext13 0EB2  
                               __ptext30 0800                                 __ptext22 0B67  
                               __ptext14 0915                                 __ptext31 15E3  
                               __ptext23 16B4                                 __ptext15 0A58  
                               __ptext40 16F2                                 __ptext32 0822  
                               __ptext24 16A5                                 __ptext16 16C3  
                               __ptext41 0A98                                 __ptext33 1770  
                               __ptext25 0C56                                 __ptext17 15D9  
                               __ptext50 0522                                 __ptext42 16E2  
                               __ptext34 165C                                 __ptext26 1696  
                               __ptext18 1621                                 __ptext51 08CD  
                               __ptext43 16D2                                 __ptext35 179A  
                               __ptext27 1687                                 __ptext19 1643  
                               __ptext60 0E45                                 __ptext52 0CAF  
                               __ptext44 0ADC                                 __ptext36 164F  
                               __ptext28 0872                                 __ptext61 08EF  
                               __ptext53 09BB                                 __ptext45 0D74  
                               __ptext37 15EE                                 __ptext29 1713  
                               __ptext70 15E8                                 __ptext62 0773  
                               __ptext54 160E                                 __ptext46 1637  
                               __ptext38 15DF                                 __ptext71 05CB  
                               __ptext63 0C02                                 __ptext55 0808  
                               __ptext47 0439                                 __ptext39 1607  
                               __ptext80 17B2                                 __ptext72 1617  
                               __ptext64 175C                                 __ptext56 1678  
                               __ptext48 0B21                                 __ptext81 1600  
                               __ptext65 0857                                 __ptext57 06EF  
                               __ptext49 0668                                 __ptext74 09EC  
                               __ptext66 1736                                 __ptext58 098D  
                               __ptext75 004C                                 __ptext67 088F  
                               __ptext59 0F20                                 __ptext76 17E6  
                               __ptext68 093C                                 __ptext77 1702  
                               __ptext69 083C                                 __ptext78 1669  
                               __ptext79 17CC                                 __product 01C5  
          ??_setDimmerLights_IntrControl 0072                  ??_setLED_Initialization 0024  
         __size_of_Dimmer_Initialization 0006            __end_of_Dimmer_Initialization 15EE  
           __end_of_setDimmerLights_Main 0773              setDimmerLights_ERROR@lights 0025  
                           ??_setSw_Main 0033                            setLED@command 0022  
                          __size_of_main 0053               setDimmerLights_Main@lights 0032  
                     _DimmerLights_Close 175C                 ??_setDimmerLights_Switch 0023  
              __size_of_setDimmerReClock 000F      __size_of_getDimmerLights_StatusFlag 0013  
            __end_of_my_TestPointCleared 1736            setDimmerLights_Trigger@lights 0023  
            __size_of_Mcu_Initialization 001A                      ?_DimmerLights_Close 0070  
       setDimmerLights_TriggerAdj@lights 0023                                 main@argc 0052  
          ?_setDimmerLights_TriggerERROR 0022                                 main@argv 0054  
            __end_of_Flash_Memory_Modify 0DD9              __end_of_Flash_Memory_Unlock 1617  
                        ??_SwPointSelect 0020                       __end_of_setSw_Main 032C  
                ?_setOverTemp_Exceptions 0070                              pic14e$flags 007E  
                   ??_DimmerLights_Close 0023             ??_setDimmerLights_IntrIOC_GO 0072  
                               intlevel1 0000                   ?_Switch_Initialization 0070  
 __end_of_setDimmerLights_Initialization 0964  __size_of_setDimmerLights_Initialization 0028  
         _setDimmerLights_Initialization 093C              __end_of_setDimmerLights_Adj 09BB  
                ?_setTemp_Initialization 0070     __size_of_setDimmerLights_IntrControl 019A  
                   _Flash_Memory_Erasing 1637      __size_of_setDimmerLights_IntrIOC_GO 001A  
                             _OPTION_REG 0095                    __size_of_WDT_Clearing 0002  
         __end_of_setOverTemp_Exceptions 0A58     __size_of_Flash_Memory_Initialization 00E9  
               __end_of_Sw_DimmerAdjFunc 0CAF             __end_of_setSw_Initialization 0808  
             __end_of_LED_Initialization 16F2         __size_of_setDimmerLights_Trigger 000F  
         __end_of_setTemp_Initialization 162C                 __size_of_Sw_DimmerOnFunc 0064  
               ?_DimmerLights_Exceptions 0070                 __size_of_setPercentValue 0046  
                   setPercentValue@value 004C                 __end_of_Sw_DimmerOffFunc 0BAF  
        __size_of_setDimmerLights_Switch 000F                      setSw_Status@command 0022  
